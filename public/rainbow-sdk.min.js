var rainbowSDK=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=511)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return __extends}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)};function __extends(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}},function(module,exports,__webpack_require__){(function(module){module.exports=function(){"use strict";var hookCallback,some;function hooks(){return hookCallback.apply(null,arguments)}function isArray(input){return input instanceof Array||"[object Array]"===Object.prototype.toString.call(input)}function isObject(input){return null!=input&&"[object Object]"===Object.prototype.toString.call(input)}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function isObjectEmpty(obj){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(obj).length;var k;for(k in obj)if(hasOwnProp(obj,k))return!1;return!0}function isUndefined(input){return void 0===input}function isNumber(input){return"number"==typeof input||"[object Number]"===Object.prototype.toString.call(input)}function isDate(input){return input instanceof Date||"[object Date]"===Object.prototype.toString.call(input)}function map(arr,fn){var i,res=[],arrLen=arr.length;for(i=0;i<arrLen;++i)res.push(fn(arr[i],i));return res}function extend(a,b){for(var i in b)hasOwnProp(b,i)&&(a[i]=b[i]);return hasOwnProp(b,"toString")&&(a.toString=b.toString),hasOwnProp(b,"valueOf")&&(a.valueOf=b.valueOf),a}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,!0).utc()}function getParsingFlags(m){return null==m._pf&&(m._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}),m._pf}function isValid(m){if(null==m._isValid){var flags=getParsingFlags(m),parsedParts=some.call(flags.parsedDateParts,(function(i){return null!=i})),isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidEra&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict&&(isNowValid=isNowValid&&0===flags.charsLeftOver&&0===flags.unusedTokens.length&&void 0===flags.bigHour),null!=Object.isFrozen&&Object.isFrozen(m))return isNowValid;m._isValid=isNowValid}return m._isValid}function createInvalid(flags){var m=createUTC(NaN);return null!=flags?extend(getParsingFlags(m),flags):getParsingFlags(m).userInvalidated=!0,m}some=Array.prototype.some?Array.prototype.some:function(fun){var i,t=Object(this),len=t.length>>>0;for(i=0;i<len;i++)if(i in t&&fun.call(this,t[i],i,t))return!0;return!1};var momentProperties=hooks.momentProperties=[],updateInProgress=!1;function copyConfig(to,from){var i,prop,val,momentPropertiesLen=momentProperties.length;if(isUndefined(from._isAMomentObject)||(to._isAMomentObject=from._isAMomentObject),isUndefined(from._i)||(to._i=from._i),isUndefined(from._f)||(to._f=from._f),isUndefined(from._l)||(to._l=from._l),isUndefined(from._strict)||(to._strict=from._strict),isUndefined(from._tzm)||(to._tzm=from._tzm),isUndefined(from._isUTC)||(to._isUTC=from._isUTC),isUndefined(from._offset)||(to._offset=from._offset),isUndefined(from._pf)||(to._pf=getParsingFlags(from)),isUndefined(from._locale)||(to._locale=from._locale),momentPropertiesLen>0)for(i=0;i<momentPropertiesLen;i++)isUndefined(val=from[prop=momentProperties[i]])||(to[prop]=val);return to}function Moment(config){copyConfig(this,config),this._d=new Date(null!=config._d?config._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===updateInProgress&&(updateInProgress=!0,hooks.updateOffset(this),updateInProgress=!1)}function isMoment(obj){return obj instanceof Moment||null!=obj&&null!=obj._isAMomentObject}function warn(msg){!1===hooks.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+msg)}function deprecate(msg,fn){var firstTime=!0;return extend((function(){if(null!=hooks.deprecationHandler&&hooks.deprecationHandler(null,msg),firstTime){var arg,i,key,args=[],argLen=arguments.length;for(i=0;i<argLen;i++){if(arg="","object"==typeof arguments[i]){for(key in arg+="\n["+i+"] ",arguments[0])hasOwnProp(arguments[0],key)&&(arg+=key+": "+arguments[0][key]+", ");arg=arg.slice(0,-2)}else arg=arguments[i];args.push(arg)}warn(msg+"\nArguments: "+Array.prototype.slice.call(args).join("")+"\n"+(new Error).stack),firstTime=!1}return fn.apply(this,arguments)}),fn)}var keys,deprecations={};function deprecateSimple(name,msg){null!=hooks.deprecationHandler&&hooks.deprecationHandler(name,msg),deprecations[name]||(warn(msg),deprecations[name]=!0)}function isFunction(input){return"undefined"!=typeof Function&&input instanceof Function||"[object Function]"===Object.prototype.toString.call(input)}function mergeConfigs(parentConfig,childConfig){var prop,res=extend({},parentConfig);for(prop in childConfig)hasOwnProp(childConfig,prop)&&(isObject(parentConfig[prop])&&isObject(childConfig[prop])?(res[prop]={},extend(res[prop],parentConfig[prop]),extend(res[prop],childConfig[prop])):null!=childConfig[prop]?res[prop]=childConfig[prop]:delete res[prop]);for(prop in parentConfig)hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])&&(res[prop]=extend({},res[prop]));return res}function Locale(config){null!=config&&this.set(config)}function zeroFill(number,targetLength,forceSign){var absNumber=""+Math.abs(number),zerosToFill=targetLength-absNumber.length;return(number>=0?forceSign?"+":"":"-")+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber}hooks.suppressDeprecationWarnings=!1,hooks.deprecationHandler=null,keys=Object.keys?Object.keys:function(obj){var i,res=[];for(i in obj)hasOwnProp(obj,i)&&res.push(i);return res};var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,formatFunctions={},formatTokenFunctions={};function addFormatToken(token,padded,ordinal,callback){var func=callback;"string"==typeof callback&&(func=function(){return this[callback]()}),token&&(formatTokenFunctions[token]=func),padded&&(formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2])}),ordinal&&(formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token)})}function formatMoment(m,format){return m.isValid()?(format=expandFormat(format,m.localeData()),formatFunctions[format]=formatFunctions[format]||function(format){var i,length,input,array=format.match(formattingTokens);for(i=0,length=array.length;i<length;i++)formatTokenFunctions[array[i]]?array[i]=formatTokenFunctions[array[i]]:array[i]=(input=array[i]).match(/\[[\s\S]/)?input.replace(/^\[|\]$/g,""):input.replace(/\\/g,"");return function(mom){var i,output="";for(i=0;i<length;i++)output+=isFunction(array[i])?array[i].call(mom,format):array[i];return output}}(format),formatFunctions[format](m)):m.localeData().invalidDate()}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input}for(localFormattingTokens.lastIndex=0;i>=0&&localFormattingTokens.test(format);)format=format.replace(localFormattingTokens,replaceLongDateFormatTokens),localFormattingTokens.lastIndex=0,i-=1;return format}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+"s"]=aliases[shorthand]=unit}function normalizeUnits(units){return"string"==typeof units?aliases[units]||aliases[units.toLowerCase()]:void 0}function normalizeObjectUnits(inputObject){var normalizedProp,prop,normalizedInput={};for(prop in inputObject)hasOwnProp(inputObject,prop)&&(normalizedProp=normalizeUnits(prop))&&(normalizedInput[normalizedProp]=inputObject[prop]);return normalizedInput}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority}function isLeapYear(year){return year%4==0&&year%100!=0||year%400==0}function absFloor(number){return number<0?Math.ceil(number)||0:Math.floor(number)}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;return 0!==coercedNumber&&isFinite(coercedNumber)&&(value=absFloor(coercedNumber)),value}function makeGetSet(unit,keepTime){return function(value){return null!=value?(set$1(this,unit,value),hooks.updateOffset(this,keepTime),this):get(this,unit)}}function get(mom,unit){return mom.isValid()?mom._d["get"+(mom._isUTC?"UTC":"")+unit]():NaN}function set$1(mom,unit,value){mom.isValid()&&!isNaN(value)&&("FullYear"===unit&&isLeapYear(mom.year())&&1===mom.month()&&29===mom.date()?(value=toInt(value),mom._d["set"+(mom._isUTC?"UTC":"")+unit](value,mom.month(),daysInMonth(value,mom.month()))):mom._d["set"+(mom._isUTC?"UTC":"")+unit](value))}var regexes,match1=/\d/,match2=/\d\d/,match3=/\d{3}/,match4=/\d{4}/,match6=/[+-]?\d{6}/,match1to2=/\d\d?/,match3to4=/\d\d\d\d?/,match5to6=/\d\d\d\d\d\d?/,match1to3=/\d{1,3}/,match1to4=/\d{1,4}/,match1to6=/[+-]?\d{1,6}/,matchUnsigned=/\d+/,matchSigned=/[+-]?\d+/,matchOffset=/Z|[+-]\d\d:?\d\d/gi,matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi,matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex}}function getParseRegexForToken(token,config){return hasOwnProp(regexes,token)?regexes[token](config._strict,config._locale):new RegExp(regexEscape(token.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(matched,p1,p2,p3,p4){return p1||p2||p3||p4}))))}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}regexes={};var indexOf,tokens={};function addParseToken(token,callback){var i,tokenLen,func=callback;for("string"==typeof token&&(token=[token]),isNumber(callback)&&(func=function(input,array){array[callback]=toInt(input)}),tokenLen=token.length,i=0;i<tokenLen;i++)tokens[token[i]]=func}function addWeekParseToken(token,callback){addParseToken(token,(function(input,array,config,token){config._w=config._w||{},callback(input,config._w,config,token)}))}function addTimeToArrayFromToken(token,input,config){null!=input&&hasOwnProp(tokens,token)&&tokens[token](input,config._a,config,token)}function daysInMonth(year,month){if(isNaN(year)||isNaN(month))return NaN;var x,modMonth=(month%(x=12)+x)%x;return year+=(month-modMonth)/12,1===modMonth?isLeapYear(year)?29:28:31-modMonth%7%2}indexOf=Array.prototype.indexOf?Array.prototype.indexOf:function(o){var i;for(i=0;i<this.length;++i)if(this[i]===o)return i;return-1},addFormatToken("M",["MM",2],"Mo",(function(){return this.month()+1})),addFormatToken("MMM",0,0,(function(format){return this.localeData().monthsShort(this,format)})),addFormatToken("MMMM",0,0,(function(format){return this.localeData().months(this,format)})),addUnitAlias("month","M"),addUnitPriority("month",8),addRegexToken("M",match1to2),addRegexToken("MM",match1to2,match2),addRegexToken("MMM",(function(isStrict,locale){return locale.monthsShortRegex(isStrict)})),addRegexToken("MMMM",(function(isStrict,locale){return locale.monthsRegex(isStrict)})),addParseToken(["M","MM"],(function(input,array){array[1]=toInt(input)-1})),addParseToken(["MMM","MMMM"],(function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);null!=month?array[1]=month:getParsingFlags(config).invalidMonth=input}));var defaultLocaleMonths="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),defaultLocaleMonthsShort="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,defaultMonthsShortRegex=matchWord,defaultMonthsRegex=matchWord;function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)mom=createUTC([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(mom,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(mom,"").toLocaleLowerCase();return strict?"MMM"===format?-1!==(ii=indexOf.call(this._shortMonthsParse,llc))?ii:null:-1!==(ii=indexOf.call(this._longMonthsParse,llc))?ii:null:"MMM"===format?-1!==(ii=indexOf.call(this._shortMonthsParse,llc))||-1!==(ii=indexOf.call(this._longMonthsParse,llc))?ii:null:-1!==(ii=indexOf.call(this._longMonthsParse,llc))||-1!==(ii=indexOf.call(this._shortMonthsParse,llc))?ii:null}function setMonth(mom,value){var dayOfMonth;if(!mom.isValid())return mom;if("string"==typeof value)if(/^\d+$/.test(value))value=toInt(value);else if(!isNumber(value=mom.localeData().monthsParse(value)))return mom;return dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value)),mom._d["set"+(mom._isUTC?"UTC":"")+"Month"](value,dayOfMonth),mom}function getSetMonth(value){return null!=value?(setMonth(this,value),hooks.updateOffset(this,!0),this):get(this,"Month")}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length}var i,mom,shortPieces=[],longPieces=[],mixedPieces=[];for(i=0;i<12;i++)mom=createUTC([2e3,i]),shortPieces.push(this.monthsShort(mom,"")),longPieces.push(this.months(mom,"")),mixedPieces.push(this.months(mom,"")),mixedPieces.push(this.monthsShort(mom,""));for(shortPieces.sort(cmpLenRev),longPieces.sort(cmpLenRev),mixedPieces.sort(cmpLenRev),i=0;i<12;i++)shortPieces[i]=regexEscape(shortPieces[i]),longPieces[i]=regexEscape(longPieces[i]);for(i=0;i<24;i++)mixedPieces[i]=regexEscape(mixedPieces[i]);this._monthsRegex=new RegExp("^("+mixedPieces.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+longPieces.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i")}function daysInYear(year){return isLeapYear(year)?366:365}addFormatToken("Y",0,0,(function(){var y=this.year();return y<=9999?zeroFill(y,4):"+"+y})),addFormatToken(0,["YY",2],0,(function(){return this.year()%100})),addFormatToken(0,["YYYY",4],0,"year"),addFormatToken(0,["YYYYY",5],0,"year"),addFormatToken(0,["YYYYYY",6,!0],0,"year"),addUnitAlias("year","y"),addUnitPriority("year",1),addRegexToken("Y",matchSigned),addRegexToken("YY",match1to2,match2),addRegexToken("YYYY",match1to4,match4),addRegexToken("YYYYY",match1to6,match6),addRegexToken("YYYYYY",match1to6,match6),addParseToken(["YYYYY","YYYYYY"],0),addParseToken("YYYY",(function(input,array){array[0]=2===input.length?hooks.parseTwoDigitYear(input):toInt(input)})),addParseToken("YY",(function(input,array){array[0]=hooks.parseTwoDigitYear(input)})),addParseToken("Y",(function(input,array){array[0]=parseInt(input,10)})),hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2e3)};var getSetYear=makeGetSet("FullYear",!0);function createDate(y,m,d,h,M,s,ms){var date;return y<100&&y>=0?(date=new Date(y+400,m,d,h,M,s,ms),isFinite(date.getFullYear())&&date.setFullYear(y)):date=new Date(y,m,d,h,M,s,ms),date}function createUTCDate(y){var date,args;return y<100&&y>=0?((args=Array.prototype.slice.call(arguments))[0]=y+400,date=new Date(Date.UTC.apply(null,args)),isFinite(date.getUTCFullYear())&&date.setUTCFullYear(y)):date=new Date(Date.UTC.apply(null,arguments)),date}function firstWeekOffset(year,dow,doy){var fwd=7+dow-doy;return-(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7+fwd-1}function dayOfYearFromWeeks(year,week,weekday,dow,doy){var resYear,resDayOfYear,dayOfYear=1+7*(week-1)+(7+weekday-dow)%7+firstWeekOffset(year,dow,doy);return dayOfYear<=0?resDayOfYear=daysInYear(resYear=year-1)+dayOfYear:dayOfYear>daysInYear(year)?(resYear=year+1,resDayOfYear=dayOfYear-daysInYear(year)):(resYear=year,resDayOfYear=dayOfYear),{year:resYear,dayOfYear:resDayOfYear}}function weekOfYear(mom,dow,doy){var resWeek,resYear,weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1;return week<1?resWeek=week+weeksInYear(resYear=mom.year()-1,dow,doy):week>weeksInYear(mom.year(),dow,doy)?(resWeek=week-weeksInYear(mom.year(),dow,doy),resYear=mom.year()+1):(resYear=mom.year(),resWeek=week),{week:resWeek,year:resYear}}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return(daysInYear(year)-weekOffset+weekOffsetNext)/7}function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n))}addFormatToken("w",["ww",2],"wo","week"),addFormatToken("W",["WW",2],"Wo","isoWeek"),addUnitAlias("week","w"),addUnitAlias("isoWeek","W"),addUnitPriority("week",5),addUnitPriority("isoWeek",5),addRegexToken("w",match1to2),addRegexToken("ww",match1to2,match2),addRegexToken("W",match1to2),addRegexToken("WW",match1to2,match2),addWeekParseToken(["w","ww","W","WW"],(function(input,week,config,token){week[token.substr(0,1)]=toInt(input)})),addFormatToken("d",0,"do","day"),addFormatToken("dd",0,0,(function(format){return this.localeData().weekdaysMin(this,format)})),addFormatToken("ddd",0,0,(function(format){return this.localeData().weekdaysShort(this,format)})),addFormatToken("dddd",0,0,(function(format){return this.localeData().weekdays(this,format)})),addFormatToken("e",0,0,"weekday"),addFormatToken("E",0,0,"isoWeekday"),addUnitAlias("day","d"),addUnitAlias("weekday","e"),addUnitAlias("isoWeekday","E"),addUnitPriority("day",11),addUnitPriority("weekday",11),addUnitPriority("isoWeekday",11),addRegexToken("d",match1to2),addRegexToken("e",match1to2),addRegexToken("E",match1to2),addRegexToken("dd",(function(isStrict,locale){return locale.weekdaysMinRegex(isStrict)})),addRegexToken("ddd",(function(isStrict,locale){return locale.weekdaysShortRegex(isStrict)})),addRegexToken("dddd",(function(isStrict,locale){return locale.weekdaysRegex(isStrict)})),addWeekParseToken(["dd","ddd","dddd"],(function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);null!=weekday?week.d=weekday:getParsingFlags(config).invalidWeekday=input})),addWeekParseToken(["d","e","E"],(function(input,week,config,token){week[token]=toInt(input)}));var defaultLocaleWeekdays="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),defaultLocaleWeekdaysShort="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),defaultLocaleWeekdaysMin="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),defaultWeekdaysRegex=matchWord,defaultWeekdaysShortRegex=matchWord,defaultWeekdaysMinRegex=matchWord;function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)mom=createUTC([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(mom,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(mom,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(mom,"").toLocaleLowerCase();return strict?"dddd"===format?-1!==(ii=indexOf.call(this._weekdaysParse,llc))?ii:null:"ddd"===format?-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))?ii:null:-1!==(ii=indexOf.call(this._minWeekdaysParse,llc))?ii:null:"dddd"===format?-1!==(ii=indexOf.call(this._weekdaysParse,llc))||-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))||-1!==(ii=indexOf.call(this._minWeekdaysParse,llc))?ii:null:"ddd"===format?-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))||-1!==(ii=indexOf.call(this._weekdaysParse,llc))||-1!==(ii=indexOf.call(this._minWeekdaysParse,llc))?ii:null:-1!==(ii=indexOf.call(this._minWeekdaysParse,llc))||-1!==(ii=indexOf.call(this._weekdaysParse,llc))||-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))?ii:null}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length}var i,mom,minp,shortp,longp,minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[];for(i=0;i<7;i++)mom=createUTC([2e3,1]).day(i),minp=regexEscape(this.weekdaysMin(mom,"")),shortp=regexEscape(this.weekdaysShort(mom,"")),longp=regexEscape(this.weekdays(mom,"")),minPieces.push(minp),shortPieces.push(shortp),longPieces.push(longp),mixedPieces.push(minp),mixedPieces.push(shortp),mixedPieces.push(longp);minPieces.sort(cmpLenRev),shortPieces.sort(cmpLenRev),longPieces.sort(cmpLenRev),mixedPieces.sort(cmpLenRev),this._weekdaysRegex=new RegExp("^("+mixedPieces.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+longPieces.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+minPieces.join("|")+")","i")}function hFormat(){return this.hours()%12||12}function meridiem(token,lowercase){addFormatToken(token,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase)}))}function matchMeridiem(isStrict,locale){return locale._meridiemParse}addFormatToken("H",["HH",2],0,"hour"),addFormatToken("h",["hh",2],0,hFormat),addFormatToken("k",["kk",2],0,(function(){return this.hours()||24})),addFormatToken("hmm",0,0,(function(){return""+hFormat.apply(this)+zeroFill(this.minutes(),2)})),addFormatToken("hmmss",0,0,(function(){return""+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2)})),addFormatToken("Hmm",0,0,(function(){return""+this.hours()+zeroFill(this.minutes(),2)})),addFormatToken("Hmmss",0,0,(function(){return""+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2)})),meridiem("a",!0),meridiem("A",!1),addUnitAlias("hour","h"),addUnitPriority("hour",13),addRegexToken("a",matchMeridiem),addRegexToken("A",matchMeridiem),addRegexToken("H",match1to2),addRegexToken("h",match1to2),addRegexToken("k",match1to2),addRegexToken("HH",match1to2,match2),addRegexToken("hh",match1to2,match2),addRegexToken("kk",match1to2,match2),addRegexToken("hmm",match3to4),addRegexToken("hmmss",match5to6),addRegexToken("Hmm",match3to4),addRegexToken("Hmmss",match5to6),addParseToken(["H","HH"],3),addParseToken(["k","kk"],(function(input,array,config){var kInput=toInt(input);array[3]=24===kInput?0:kInput})),addParseToken(["a","A"],(function(input,array,config){config._isPm=config._locale.isPM(input),config._meridiem=input})),addParseToken(["h","hh"],(function(input,array,config){array[3]=toInt(input),getParsingFlags(config).bigHour=!0})),addParseToken("hmm",(function(input,array,config){var pos=input.length-2;array[3]=toInt(input.substr(0,pos)),array[4]=toInt(input.substr(pos)),getParsingFlags(config).bigHour=!0})),addParseToken("hmmss",(function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[3]=toInt(input.substr(0,pos1)),array[4]=toInt(input.substr(pos1,2)),array[5]=toInt(input.substr(pos2)),getParsingFlags(config).bigHour=!0})),addParseToken("Hmm",(function(input,array,config){var pos=input.length-2;array[3]=toInt(input.substr(0,pos)),array[4]=toInt(input.substr(pos))})),addParseToken("Hmmss",(function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[3]=toInt(input.substr(0,pos1)),array[4]=toInt(input.substr(pos1,2)),array[5]=toInt(input.substr(pos2))}));var globalLocale,getSetHour=makeGetSet("Hours",!0),baseConfig={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",w:"a week",ww:"%d weeks",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:{dow:0,doy:6},weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:/[ap]\.?m?\.?/i},locales={},localeFamilies={};function commonPrefix(arr1,arr2){var i,minl=Math.min(arr1.length,arr2.length);for(i=0;i<minl;i+=1)if(arr1[i]!==arr2[i])return i;return minl}function normalizeLocale(key){return key?key.toLowerCase().replace("_","-"):key}function loadLocale(name){var oldLocale=null;if(void 0===locales[name]&&void 0!==module&&module&&module.exports&&function(name){return null!=name.match("^[^/\\\\]*$")}(name))try{oldLocale=globalLocale._abbr,__webpack_require__(436)("./"+name),getSetGlobalLocale(oldLocale)}catch(e){locales[name]=null}return locales[name]}function getSetGlobalLocale(key,values){var data;return key&&((data=isUndefined(values)?getLocale(key):defineLocale(key,values))?globalLocale=data:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+key+" not found. Did you forget to load it?")),globalLocale._abbr}function defineLocale(name,config){if(null!==config){var locale,parentConfig=baseConfig;if(config.abbr=name,null!=locales[name])deprecateSimple("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),parentConfig=locales[name]._config;else if(null!=config.parentLocale)if(null!=locales[config.parentLocale])parentConfig=locales[config.parentLocale]._config;else{if(null==(locale=loadLocale(config.parentLocale)))return localeFamilies[config.parentLocale]||(localeFamilies[config.parentLocale]=[]),localeFamilies[config.parentLocale].push({name:name,config:config}),null;parentConfig=locale._config}return locales[name]=new Locale(mergeConfigs(parentConfig,config)),localeFamilies[name]&&localeFamilies[name].forEach((function(x){defineLocale(x.name,x.config)})),getSetGlobalLocale(name),locales[name]}return delete locales[name],null}function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr&&(key=key._locale._abbr),!key)return globalLocale;if(!isArray(key)){if(locale=loadLocale(key))return locale;key=[key]}return function(names){for(var j,next,locale,split,i=0;i<names.length;){for(j=(split=normalizeLocale(names[i]).split("-")).length,next=(next=normalizeLocale(names[i+1]))?next.split("-"):null;j>0;){if(locale=loadLocale(split.slice(0,j).join("-")))return locale;if(next&&next.length>=j&&commonPrefix(split,next)>=j-1)break;j--}i++}return globalLocale}(key)}function checkOverflow(m){var overflow,a=m._a;return a&&-2===getParsingFlags(m).overflow&&(overflow=a[1]<0||a[1]>11?1:a[2]<1||a[2]>daysInMonth(a[0],a[1])?2:a[3]<0||a[3]>24||24===a[3]&&(0!==a[4]||0!==a[5]||0!==a[6])?3:a[4]<0||a[4]>59?4:a[5]<0||a[5]>59?5:a[6]<0||a[6]>999?6:-1,getParsingFlags(m)._overflowDayOfYear&&(overflow<0||overflow>2)&&(overflow=2),getParsingFlags(m)._overflowWeeks&&-1===overflow&&(overflow=7),getParsingFlags(m)._overflowWeekday&&-1===overflow&&(overflow=8),getParsingFlags(m).overflow=overflow),m}var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tzRegex=/Z|[+-]\d\d(?::?\d\d)?/,isoDates=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/],["YYYYMM",/\d{6}/,!1],["YYYY",/\d{4}/,!1]],isoTimes=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],aspNetJsonRegex=/^\/?Date\((-?\d+)/i,rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,obsOffsets={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function configFromISO(config){var i,l,allowTime,dateFormat,timeFormat,tzFormat,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),isoDatesLen=isoDates.length,isoTimesLen=isoTimes.length;if(match){for(getParsingFlags(config).iso=!0,i=0,l=isoDatesLen;i<l;i++)if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0],allowTime=!1!==isoDates[i][2];break}if(null==dateFormat)return void(config._isValid=!1);if(match[3]){for(i=0,l=isoTimesLen;i<l;i++)if(isoTimes[i][1].exec(match[3])){timeFormat=(match[2]||" ")+isoTimes[i][0];break}if(null==timeFormat)return void(config._isValid=!1)}if(!allowTime&&null!=timeFormat)return void(config._isValid=!1);if(match[4]){if(!tzRegex.exec(match[4]))return void(config._isValid=!1);tzFormat="Z"}config._f=dateFormat+(timeFormat||"")+(tzFormat||""),configFromStringAndFormat(config)}else config._isValid=!1}function untruncateYear(yearStr){var year=parseInt(yearStr,10);return year<=49?2e3+year:year<=999?1900+year:year}function configFromRFC2822(config){var parsedArray,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr,result,match=rfc2822.exec(config._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(match){if(yearStr=match[4],monthStr=match[3],dayStr=match[2],hourStr=match[5],minuteStr=match[6],secondStr=match[7],result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)],secondStr&&result.push(parseInt(secondStr,10)),parsedArray=result,!function(weekdayStr,parsedInput,config){return!weekdayStr||defaultLocaleWeekdaysShort.indexOf(weekdayStr)===new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay()||(getParsingFlags(config).weekdayMismatch=!0,config._isValid=!1,!1)}(match[1],parsedArray,config))return;config._a=parsedArray,config._tzm=function(obsOffset,militaryOffset,numOffset){if(obsOffset)return obsOffsets[obsOffset];if(militaryOffset)return 0;var hm=parseInt(numOffset,10),m=hm%100;return(hm-m)/100*60+m}(match[8],match[9],match[10]),config._d=createUTCDate.apply(null,config._a),config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm),getParsingFlags(config).rfc2822=!0}else config._isValid=!1}function defaults(a,b,c){return null!=a?a:null!=b?b:c}function configFromArray(config){var i,date,currentDate,expectedWeekday,yearToUse,input=[];if(!config._d){for(currentDate=function(config){var nowValue=new Date(hooks.now());return config._useUTC?[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()]:[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()]}(config),config._w&&null==config._a[2]&&null==config._a[1]&&function(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow,curWeek;null!=(w=config._w).GG||null!=w.W||null!=w.E?(dow=1,doy=4,weekYear=defaults(w.GG,config._a[0],weekOfYear(createLocal(),1,4).year),week=defaults(w.W,1),((weekday=defaults(w.E,1))<1||weekday>7)&&(weekdayOverflow=!0)):(dow=config._locale._week.dow,doy=config._locale._week.doy,curWeek=weekOfYear(createLocal(),dow,doy),weekYear=defaults(w.gg,config._a[0],curWeek.year),week=defaults(w.w,curWeek.week),null!=w.d?((weekday=w.d)<0||weekday>6)&&(weekdayOverflow=!0):null!=w.e?(weekday=w.e+dow,(w.e<0||w.e>6)&&(weekdayOverflow=!0)):weekday=dow),week<1||week>weeksInYear(weekYear,dow,doy)?getParsingFlags(config)._overflowWeeks=!0:null!=weekdayOverflow?getParsingFlags(config)._overflowWeekday=!0:(temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),config._a[0]=temp.year,config._dayOfYear=temp.dayOfYear)}(config),null!=config._dayOfYear&&(yearToUse=defaults(config._a[0],currentDate[0]),(config._dayOfYear>daysInYear(yearToUse)||0===config._dayOfYear)&&(getParsingFlags(config)._overflowDayOfYear=!0),date=createUTCDate(yearToUse,0,config._dayOfYear),config._a[1]=date.getUTCMonth(),config._a[2]=date.getUTCDate()),i=0;i<3&&null==config._a[i];++i)config._a[i]=input[i]=currentDate[i];for(;i<7;i++)config._a[i]=input[i]=null==config._a[i]?2===i?1:0:config._a[i];24===config._a[3]&&0===config._a[4]&&0===config._a[5]&&0===config._a[6]&&(config._nextDay=!0,config._a[3]=0),config._d=(config._useUTC?createUTCDate:createDate).apply(null,input),expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay(),null!=config._tzm&&config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm),config._nextDay&&(config._a[3]=24),config._w&&void 0!==config._w.d&&config._w.d!==expectedWeekday&&(getParsingFlags(config).weekdayMismatch=!0)}}function configFromStringAndFormat(config){if(config._f!==hooks.ISO_8601)if(config._f!==hooks.RFC_2822){config._a=[],getParsingFlags(config).empty=!0;var i,parsedInput,tokens,token,skipped,era,tokenLen,string=""+config._i,stringLength=string.length,totalParsedInputLength=0;for(tokenLen=(tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[]).length,i=0;i<tokenLen;i++)token=tokens[i],(parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0])&&((skipped=string.substr(0,string.indexOf(parsedInput))).length>0&&getParsingFlags(config).unusedInput.push(skipped),string=string.slice(string.indexOf(parsedInput)+parsedInput.length),totalParsedInputLength+=parsedInput.length),formatTokenFunctions[token]?(parsedInput?getParsingFlags(config).empty=!1:getParsingFlags(config).unusedTokens.push(token),addTimeToArrayFromToken(token,parsedInput,config)):config._strict&&!parsedInput&&getParsingFlags(config).unusedTokens.push(token);getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength,string.length>0&&getParsingFlags(config).unusedInput.push(string),config._a[3]<=12&&!0===getParsingFlags(config).bigHour&&config._a[3]>0&&(getParsingFlags(config).bigHour=void 0),getParsingFlags(config).parsedDateParts=config._a.slice(0),getParsingFlags(config).meridiem=config._meridiem,config._a[3]=function(locale,hour,meridiem){var isPm;return null==meridiem?hour:null!=locale.meridiemHour?locale.meridiemHour(hour,meridiem):null!=locale.isPM?((isPm=locale.isPM(meridiem))&&hour<12&&(hour+=12),isPm||12!==hour||(hour=0),hour):hour}(config._locale,config._a[3],config._meridiem),null!==(era=getParsingFlags(config).era)&&(config._a[0]=config._locale.erasConvertYear(era,config._a[0])),configFromArray(config),checkOverflow(config)}else configFromRFC2822(config);else configFromISO(config)}function prepareConfig(config){var input=config._i,format=config._f;return config._locale=config._locale||getLocale(config._l),null===input||void 0===format&&""===input?createInvalid({nullInput:!0}):("string"==typeof input&&(config._i=input=config._locale.preparse(input)),isMoment(input)?new Moment(checkOverflow(input)):(isDate(input)?config._d=input:isArray(format)?function(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore,validFormatFound,bestFormatIsValid=!1,configfLen=config._f.length;if(0===configfLen)return getParsingFlags(config).invalidFormat=!0,void(config._d=new Date(NaN));for(i=0;i<configfLen;i++)currentScore=0,validFormatFound=!1,tempConfig=copyConfig({},config),null!=config._useUTC&&(tempConfig._useUTC=config._useUTC),tempConfig._f=config._f[i],configFromStringAndFormat(tempConfig),isValid(tempConfig)&&(validFormatFound=!0),currentScore+=getParsingFlags(tempConfig).charsLeftOver,currentScore+=10*getParsingFlags(tempConfig).unusedTokens.length,getParsingFlags(tempConfig).score=currentScore,bestFormatIsValid?currentScore<scoreToBeat&&(scoreToBeat=currentScore,bestMoment=tempConfig):(null==scoreToBeat||currentScore<scoreToBeat||validFormatFound)&&(scoreToBeat=currentScore,bestMoment=tempConfig,validFormatFound&&(bestFormatIsValid=!0));extend(config,bestMoment||tempConfig)}(config):format?configFromStringAndFormat(config):function(config){var input=config._i;isUndefined(input)?config._d=new Date(hooks.now()):isDate(input)?config._d=new Date(input.valueOf()):"string"==typeof input?function(config){var matched=aspNetJsonRegex.exec(config._i);null===matched?(configFromISO(config),!1===config._isValid&&(delete config._isValid,configFromRFC2822(config),!1===config._isValid&&(delete config._isValid,config._strict?config._isValid=!1:hooks.createFromInputFallback(config)))):config._d=new Date(+matched[1])}(config):isArray(input)?(config._a=map(input.slice(0),(function(obj){return parseInt(obj,10)})),configFromArray(config)):isObject(input)?function(config){if(!config._d){var i=normalizeObjectUnits(config._i),dayOrDate=void 0===i.day?i.date:i.day;config._a=map([i.year,i.month,dayOrDate,i.hour,i.minute,i.second,i.millisecond],(function(obj){return obj&&parseInt(obj,10)})),configFromArray(config)}}(config):isNumber(input)?config._d=new Date(input):hooks.createFromInputFallback(config)}(config),isValid(config)||(config._d=null),config))}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};return!0!==format&&!1!==format||(strict=format,format=void 0),!0!==locale&&!1!==locale||(strict=locale,locale=void 0),(isObject(input)&&isObjectEmpty(input)||isArray(input)&&0===input.length)&&(input=void 0),c._isAMomentObject=!0,c._useUTC=c._isUTC=isUTC,c._l=locale,c._i=input,c._f=format,c._strict=strict,function(config){var res=new Moment(checkOverflow(prepareConfig(config)));return res._nextDay&&(res.add(1,"d"),res._nextDay=void 0),res}(c)}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,!1)}hooks.createFromInputFallback=deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(config){config._d=new Date(config._i+(config._useUTC?" UTC":""))})),hooks.ISO_8601=function(){},hooks.RFC_2822=function(){};var prototypeMin=deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var other=createLocal.apply(null,arguments);return this.isValid()&&other.isValid()?other<this?this:other:createInvalid()})),prototypeMax=deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var other=createLocal.apply(null,arguments);return this.isValid()&&other.isValid()?other>this?this:other:createInvalid()}));function pickBy(fn,moments){var res,i;if(1===moments.length&&isArray(moments[0])&&(moments=moments[0]),!moments.length)return createLocal();for(res=moments[0],i=1;i<moments.length;++i)moments[i].isValid()&&!moments[i][fn](res)||(res=moments[i]);return res}var ordering=["year","quarter","month","week","day","hour","minute","second","millisecond"];function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=function(m){var key,i,unitHasDecimal=!1,orderLen=ordering.length;for(key in m)if(hasOwnProp(m,key)&&(-1===indexOf.call(ordering,key)||null!=m[key]&&isNaN(m[key])))return!1;for(i=0;i<orderLen;++i)if(m[ordering[i]]){if(unitHasDecimal)return!1;parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])&&(unitHasDecimal=!0)}return!0}(normalizedInput),this._milliseconds=+milliseconds+1e3*seconds+6e4*minutes+1e3*hours*60*60,this._days=+days+7*weeks,this._months=+months+3*quarters+12*years,this._data={},this._locale=getLocale(),this._bubble()}function isDuration(obj){return obj instanceof Duration}function absRound(number){return number<0?-1*Math.round(-1*number):Math.round(number)}function offset(token,separator){addFormatToken(token,0,0,(function(){var offset=this.utcOffset(),sign="+";return offset<0&&(offset=-offset,sign="-"),sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2)}))}offset("Z",":"),offset("ZZ",""),addRegexToken("Z",matchShortOffset),addRegexToken("ZZ",matchShortOffset),addParseToken(["Z","ZZ"],(function(input,array,config){config._useUTC=!0,config._tzm=offsetFromString(matchShortOffset,input)}));var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var parts,minutes,matches=(string||"").match(matcher);return null===matches?null:0===(minutes=60*(parts=((matches[matches.length-1]||[])+"").match(chunkOffset)||["-",0,0])[1]+toInt(parts[2]))?0:"+"===parts[0]?minutes:-minutes}function cloneWithOffset(input,model){var res,diff;return model._isUTC?(res=model.clone(),diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf(),res._d.setTime(res._d.valueOf()+diff),hooks.updateOffset(res,!1),res):createLocal(input).local()}function getDateOffset(m){return-Math.round(m._d.getTimezoneOffset())}function isUtc(){return!!this.isValid()&&this._isUTC&&0===this._offset}hooks.updateOffset=function(){};var aspNetRegex=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var sign,ret,diffRes,base,other,res,duration=input,match=null;return isDuration(input)?duration={ms:input._milliseconds,d:input._days,M:input._months}:isNumber(input)||!isNaN(+input)?(duration={},key?duration[key]=+input:duration.milliseconds=+input):(match=aspNetRegex.exec(input))?(sign="-"===match[1]?-1:1,duration={y:0,d:toInt(match[2])*sign,h:toInt(match[3])*sign,m:toInt(match[4])*sign,s:toInt(match[5])*sign,ms:toInt(absRound(1e3*match[6]))*sign}):(match=isoRegex.exec(input))?(sign="-"===match[1]?-1:1,duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)}):null==duration?duration={}:"object"==typeof duration&&("from"in duration||"to"in duration)&&(base=createLocal(duration.from),other=createLocal(duration.to),diffRes=base.isValid()&&other.isValid()?(other=cloneWithOffset(other,base),base.isBefore(other)?res=positiveMomentsDifference(base,other):((res=positiveMomentsDifference(other,base)).milliseconds=-res.milliseconds,res.months=-res.months),res):{milliseconds:0,months:0},(duration={}).ms=diffRes.milliseconds,duration.M=diffRes.months),ret=new Duration(duration),isDuration(input)&&hasOwnProp(input,"_locale")&&(ret._locale=input._locale),isDuration(input)&&hasOwnProp(input,"_isValid")&&(ret._isValid=input._isValid),ret}function parseIso(inp,sign){var res=inp&&parseFloat(inp.replace(",","."));return(isNaN(res)?0:res)*sign}function positiveMomentsDifference(base,other){var res={};return res.months=other.month()-base.month()+12*(other.year()-base.year()),base.clone().add(res.months,"M").isAfter(other)&&--res.months,res.milliseconds=+other-+base.clone().add(res.months,"M"),res}function createAdder(direction,name){return function(val,period){var tmp;return null===period||isNaN(+period)||(deprecateSimple(name,"moment()."+name+"(period, number) is deprecated. Please use moment()."+name+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),tmp=val,val=period,period=tmp),addSubtract(this,createDuration(val,period),direction),this}}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);mom.isValid()&&(updateOffset=null==updateOffset||updateOffset,months&&setMonth(mom,get(mom,"Month")+months*isAdding),days&&set$1(mom,"Date",get(mom,"Date")+days*isAdding),milliseconds&&mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding),updateOffset&&hooks.updateOffset(mom,days||months))}createDuration.fn=Duration.prototype,createDuration.invalid=function(){return createDuration(NaN)};var add=createAdder(1,"add"),subtract=createAdder(-1,"subtract");function isString(input){return"string"==typeof input||input instanceof String}function isMomentInput(input){return isMoment(input)||isDate(input)||isString(input)||isNumber(input)||function(input){var arrayTest=isArray(input),dataTypeTest=!1;return arrayTest&&(dataTypeTest=0===input.filter((function(item){return!isNumber(item)&&isString(input)})).length),arrayTest&&dataTypeTest}(input)||function(input){var i,property,objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=!1,properties=["years","year","y","months","month","M","days","day","d","dates","date","D","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms"],propertyLen=properties.length;for(i=0;i<propertyLen;i+=1)property=properties[i],propertyTest=propertyTest||hasOwnProp(input,property);return objectTest&&propertyTest}(input)||null==input}function isCalendarSpec(input){var i,objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=!1,properties=["sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse"];for(i=0;i<properties.length;i+=1)propertyTest=propertyTest||hasOwnProp(input,properties[i]);return objectTest&&propertyTest}function monthDiff(a,b){if(a.date()<b.date())return-monthDiff(b,a);var wholeMonthDiff=12*(b.year()-a.year())+(b.month()-a.month()),anchor=a.clone().add(wholeMonthDiff,"months");return-(wholeMonthDiff+(b-anchor<0?(b-anchor)/(anchor-a.clone().add(wholeMonthDiff-1,"months")):(b-anchor)/(a.clone().add(wholeMonthDiff+1,"months")-anchor)))||0}function locale(key){var newLocaleData;return void 0===key?this._locale._abbr:(null!=(newLocaleData=getLocale(key))&&(this._locale=newLocaleData),this)}hooks.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",hooks.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var lang=deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(key){return void 0===key?this.localeData():this.locale(key)}));function localeData(){return this._locale}function mod$1(dividend,divisor){return(dividend%divisor+divisor)%divisor}function localStartOfDate(y,m,d){return y<100&&y>=0?new Date(y+400,m,d)-126227808e5:new Date(y,m,d).valueOf()}function utcStartOfDate(y,m,d){return y<100&&y>=0?Date.UTC(y+400,m,d)-126227808e5:Date.UTC(y,m,d)}function matchEraAbbr(isStrict,locale){return locale.erasAbbrRegex(isStrict)}function computeErasParse(){var i,l,abbrPieces=[],namePieces=[],narrowPieces=[],mixedPieces=[],eras=this.eras();for(i=0,l=eras.length;i<l;++i)namePieces.push(regexEscape(eras[i].name)),abbrPieces.push(regexEscape(eras[i].abbr)),narrowPieces.push(regexEscape(eras[i].narrow)),mixedPieces.push(regexEscape(eras[i].name)),mixedPieces.push(regexEscape(eras[i].abbr)),mixedPieces.push(regexEscape(eras[i].narrow));this._erasRegex=new RegExp("^("+mixedPieces.join("|")+")","i"),this._erasNameRegex=new RegExp("^("+namePieces.join("|")+")","i"),this._erasAbbrRegex=new RegExp("^("+abbrPieces.join("|")+")","i"),this._erasNarrowRegex=new RegExp("^("+narrowPieces.join("|")+")","i")}function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter)}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;return null==input?weekOfYear(this,dow,doy).year:(week>(weeksTarget=weeksInYear(input,dow,doy))&&(week=weeksTarget),setWeekAll.call(this,input,week,weekday,dow,doy))}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);return this.year(date.getUTCFullYear()),this.month(date.getUTCMonth()),this.date(date.getUTCDate()),this}addFormatToken("N",0,0,"eraAbbr"),addFormatToken("NN",0,0,"eraAbbr"),addFormatToken("NNN",0,0,"eraAbbr"),addFormatToken("NNNN",0,0,"eraName"),addFormatToken("NNNNN",0,0,"eraNarrow"),addFormatToken("y",["y",1],"yo","eraYear"),addFormatToken("y",["yy",2],0,"eraYear"),addFormatToken("y",["yyy",3],0,"eraYear"),addFormatToken("y",["yyyy",4],0,"eraYear"),addRegexToken("N",matchEraAbbr),addRegexToken("NN",matchEraAbbr),addRegexToken("NNN",matchEraAbbr),addRegexToken("NNNN",(function(isStrict,locale){return locale.erasNameRegex(isStrict)})),addRegexToken("NNNNN",(function(isStrict,locale){return locale.erasNarrowRegex(isStrict)})),addParseToken(["N","NN","NNN","NNNN","NNNNN"],(function(input,array,config,token){var era=config._locale.erasParse(input,token,config._strict);era?getParsingFlags(config).era=era:getParsingFlags(config).invalidEra=input})),addRegexToken("y",matchUnsigned),addRegexToken("yy",matchUnsigned),addRegexToken("yyy",matchUnsigned),addRegexToken("yyyy",matchUnsigned),addRegexToken("yo",(function(isStrict,locale){return locale._eraYearOrdinalRegex||matchUnsigned})),addParseToken(["y","yy","yyy","yyyy"],0),addParseToken(["yo"],(function(input,array,config,token){var match;config._locale._eraYearOrdinalRegex&&(match=input.match(config._locale._eraYearOrdinalRegex)),config._locale.eraYearOrdinalParse?array[0]=config._locale.eraYearOrdinalParse(input,match):array[0]=parseInt(input,10)})),addFormatToken(0,["gg",2],0,(function(){return this.weekYear()%100})),addFormatToken(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),addWeekYearFormatToken("gggg","weekYear"),addWeekYearFormatToken("ggggg","weekYear"),addWeekYearFormatToken("GGGG","isoWeekYear"),addWeekYearFormatToken("GGGGG","isoWeekYear"),addUnitAlias("weekYear","gg"),addUnitAlias("isoWeekYear","GG"),addUnitPriority("weekYear",1),addUnitPriority("isoWeekYear",1),addRegexToken("G",matchSigned),addRegexToken("g",matchSigned),addRegexToken("GG",match1to2,match2),addRegexToken("gg",match1to2,match2),addRegexToken("GGGG",match1to4,match4),addRegexToken("gggg",match1to4,match4),addRegexToken("GGGGG",match1to6,match6),addRegexToken("ggggg",match1to6,match6),addWeekParseToken(["gggg","ggggg","GGGG","GGGGG"],(function(input,week,config,token){week[token.substr(0,2)]=toInt(input)})),addWeekParseToken(["gg","GG"],(function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input)})),addFormatToken("Q",0,"Qo","quarter"),addUnitAlias("quarter","Q"),addUnitPriority("quarter",7),addRegexToken("Q",match1),addParseToken("Q",(function(input,array){array[1]=3*(toInt(input)-1)})),addFormatToken("D",["DD",2],"Do","date"),addUnitAlias("date","D"),addUnitPriority("date",9),addRegexToken("D",match1to2),addRegexToken("DD",match1to2,match2),addRegexToken("Do",(function(isStrict,locale){return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient})),addParseToken(["D","DD"],2),addParseToken("Do",(function(input,array){array[2]=toInt(input.match(match1to2)[0])}));var getSetDayOfMonth=makeGetSet("Date",!0);addFormatToken("DDD",["DDDD",3],"DDDo","dayOfYear"),addUnitAlias("dayOfYear","DDD"),addUnitPriority("dayOfYear",4),addRegexToken("DDD",match1to3),addRegexToken("DDDD",match3),addParseToken(["DDD","DDDD"],(function(input,array,config){config._dayOfYear=toInt(input)})),addFormatToken("m",["mm",2],0,"minute"),addUnitAlias("minute","m"),addUnitPriority("minute",14),addRegexToken("m",match1to2),addRegexToken("mm",match1to2,match2),addParseToken(["m","mm"],4);var getSetMinute=makeGetSet("Minutes",!1);addFormatToken("s",["ss",2],0,"second"),addUnitAlias("second","s"),addUnitPriority("second",15),addRegexToken("s",match1to2),addRegexToken("ss",match1to2,match2),addParseToken(["s","ss"],5);var token,getSetMillisecond,getSetSecond=makeGetSet("Seconds",!1);for(addFormatToken("S",0,0,(function(){return~~(this.millisecond()/100)})),addFormatToken(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),addFormatToken(0,["SSS",3],0,"millisecond"),addFormatToken(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),addFormatToken(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),addFormatToken(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),addFormatToken(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),addFormatToken(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),addFormatToken(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),addUnitAlias("millisecond","ms"),addUnitPriority("millisecond",16),addRegexToken("S",match1to3,match1),addRegexToken("SS",match1to3,match2),addRegexToken("SSS",match1to3,match3),token="SSSS";token.length<=9;token+="S")addRegexToken(token,matchUnsigned);function parseMs(input,array){array[6]=toInt(1e3*("0."+input))}for(token="S";token.length<=9;token+="S")addParseToken(token,parseMs);getSetMillisecond=makeGetSet("Milliseconds",!1),addFormatToken("z",0,0,"zoneAbbr"),addFormatToken("zz",0,0,"zoneName");var proto=Moment.prototype;function preParsePostFormat(string){return string}proto.add=add,proto.calendar=function(time,formats){1===arguments.length&&(arguments[0]?isMomentInput(arguments[0])?(time=arguments[0],formats=void 0):isCalendarSpec(arguments[0])&&(formats=arguments[0],time=void 0):(time=void 0,formats=void 0));var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf("day"),format=hooks.calendarFormat(this,sod)||"sameElse",output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)))},proto.clone=function(){return new Moment(this)},proto.diff=function(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid())return NaN;if(!(that=cloneWithOffset(input,this)).isValid())return NaN;switch(zoneDelta=6e4*(that.utcOffset()-this.utcOffset()),units=normalizeUnits(units)){case"year":output=monthDiff(this,that)/12;break;case"month":output=monthDiff(this,that);break;case"quarter":output=monthDiff(this,that)/3;break;case"second":output=(this-that)/1e3;break;case"minute":output=(this-that)/6e4;break;case"hour":output=(this-that)/36e5;break;case"day":output=(this-that-zoneDelta)/864e5;break;case"week":output=(this-that-zoneDelta)/6048e5;break;default:output=this-that}return asFloat?output:absFloor(output)},proto.endOf=function(units){var time,startOfDate;if(void 0===(units=normalizeUnits(units))||"millisecond"===units||!this.isValid())return this;switch(startOfDate=this._isUTC?utcStartOfDate:localStartOfDate,units){case"year":time=startOfDate(this.year()+1,0,1)-1;break;case"quarter":time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":time=startOfDate(this.year(),this.month()+1,1)-1;break;case"week":time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case"hour":time=this._d.valueOf(),time+=36e5-mod$1(time+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1;break;case"minute":time=this._d.valueOf(),time+=6e4-mod$1(time,6e4)-1;break;case"second":time=this._d.valueOf(),time+=1e3-mod$1(time,1e3)-1}return this._d.setTime(time),hooks.updateOffset(this,!0),this},proto.format=function(inputString){inputString||(inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat);var output=formatMoment(this,inputString);return this.localeData().postformat(output)},proto.from=function(time,withoutSuffix){return this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())?createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix):this.localeData().invalidDate()},proto.fromNow=function(withoutSuffix){return this.from(createLocal(),withoutSuffix)},proto.to=function(time,withoutSuffix){return this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())?createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix):this.localeData().invalidDate()},proto.toNow=function(withoutSuffix){return this.to(createLocal(),withoutSuffix)},proto.get=function(units){return isFunction(this[units=normalizeUnits(units)])?this[units]():this},proto.invalidAt=function(){return getParsingFlags(this).overflow},proto.isAfter=function(input,units){var localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&("millisecond"===(units=normalizeUnits(units)||"millisecond")?this.valueOf()>localInput.valueOf():localInput.valueOf()<this.clone().startOf(units).valueOf())},proto.isBefore=function(input,units){var localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&("millisecond"===(units=normalizeUnits(units)||"millisecond")?this.valueOf()<localInput.valueOf():this.clone().endOf(units).valueOf()<localInput.valueOf())},proto.isBetween=function(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);return!!(this.isValid()&&localFrom.isValid()&&localTo.isValid())&&(("("===(inclusivity=inclusivity||"()")[0]?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(")"===inclusivity[1]?this.isBefore(localTo,units):!this.isAfter(localTo,units)))},proto.isSame=function(input,units){var inputMs,localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&("millisecond"===(units=normalizeUnits(units)||"millisecond")?this.valueOf()===localInput.valueOf():(inputMs=localInput.valueOf(),this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf()))},proto.isSameOrAfter=function(input,units){return this.isSame(input,units)||this.isAfter(input,units)},proto.isSameOrBefore=function(input,units){return this.isSame(input,units)||this.isBefore(input,units)},proto.isValid=function(){return isValid(this)},proto.lang=lang,proto.locale=locale,proto.localeData=localeData,proto.max=prototypeMax,proto.min=prototypeMin,proto.parsingFlags=function(){return extend({},getParsingFlags(this))},proto.set=function(units,value){if("object"==typeof units){var i,prioritized=function(unitsObj){var u,units=[];for(u in unitsObj)hasOwnProp(unitsObj,u)&&units.push({unit:u,priority:priorities[u]});return units.sort((function(a,b){return a.priority-b.priority})),units}(units=normalizeObjectUnits(units)),prioritizedLen=prioritized.length;for(i=0;i<prioritizedLen;i++)this[prioritized[i].unit](units[prioritized[i].unit])}else if(isFunction(this[units=normalizeUnits(units)]))return this[units](value);return this},proto.startOf=function(units){var time,startOfDate;if(void 0===(units=normalizeUnits(units))||"millisecond"===units||!this.isValid())return this;switch(startOfDate=this._isUTC?utcStartOfDate:localStartOfDate,units){case"year":time=startOfDate(this.year(),0,1);break;case"quarter":time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case"month":time=startOfDate(this.year(),this.month(),1);break;case"week":time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":time=startOfDate(this.year(),this.month(),this.date());break;case"hour":time=this._d.valueOf(),time-=mod$1(time+(this._isUTC?0:6e4*this.utcOffset()),36e5);break;case"minute":time=this._d.valueOf(),time-=mod$1(time,6e4);break;case"second":time=this._d.valueOf(),time-=mod$1(time,1e3)}return this._d.setTime(time),hooks.updateOffset(this,!0),this},proto.subtract=subtract,proto.toArray=function(){var m=this;return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()]},proto.toObject=function(){var m=this;return{years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()}},proto.toDate=function(){return new Date(this.valueOf())},proto.toISOString=function(keepOffset){if(!this.isValid())return null;var utc=!0!==keepOffset,m=utc?this.clone().utc():this;return m.year()<0||m.year()>9999?formatMoment(m,utc?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):isFunction(Date.prototype.toISOString)?utc?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",formatMoment(m,"Z")):formatMoment(m,utc?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},proto.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var prefix,year,suffix,func="moment",zone="";return this.isLocal()||(func=0===this.utcOffset()?"moment.utc":"moment.parseZone",zone="Z"),prefix="["+func+'("]',year=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",suffix=zone+'[")]',this.format(prefix+year+"-MM-DD[T]HH:mm:ss.SSS"+suffix)},"undefined"!=typeof Symbol&&null!=Symbol.for&&(proto[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"}),proto.toJSON=function(){return this.isValid()?this.toISOString():null},proto.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},proto.unix=function(){return Math.floor(this.valueOf()/1e3)},proto.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},proto.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},proto.eraName=function(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){if(val=this.clone().startOf("day").valueOf(),eras[i].since<=val&&val<=eras[i].until)return eras[i].name;if(eras[i].until<=val&&val<=eras[i].since)return eras[i].name}return""},proto.eraNarrow=function(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){if(val=this.clone().startOf("day").valueOf(),eras[i].since<=val&&val<=eras[i].until)return eras[i].narrow;if(eras[i].until<=val&&val<=eras[i].since)return eras[i].narrow}return""},proto.eraAbbr=function(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){if(val=this.clone().startOf("day").valueOf(),eras[i].since<=val&&val<=eras[i].until)return eras[i].abbr;if(eras[i].until<=val&&val<=eras[i].since)return eras[i].abbr}return""},proto.eraYear=function(){var i,l,dir,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i)if(dir=eras[i].since<=eras[i].until?1:-1,val=this.clone().startOf("day").valueOf(),eras[i].since<=val&&val<=eras[i].until||eras[i].until<=val&&val<=eras[i].since)return(this.year()-hooks(eras[i].since).year())*dir+eras[i].offset;return this.year()},proto.year=getSetYear,proto.isLeapYear=function(){return isLeapYear(this.year())},proto.weekYear=function(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},proto.isoWeekYear=function(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4)},proto.quarter=proto.quarters=function(input){return null==input?Math.ceil((this.month()+1)/3):this.month(3*(input-1)+this.month()%3)},proto.month=getSetMonth,proto.daysInMonth=function(){return daysInMonth(this.year(),this.month())},proto.week=proto.weeks=function(input){var week=this.localeData().week(this);return null==input?week:this.add(7*(input-week),"d")},proto.isoWeek=proto.isoWeeks=function(input){var week=weekOfYear(this,1,4).week;return null==input?week:this.add(7*(input-week),"d")},proto.weeksInYear=function(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy)},proto.weeksInWeekYear=function(){var weekInfo=this.localeData()._week;return weeksInYear(this.weekYear(),weekInfo.dow,weekInfo.doy)},proto.isoWeeksInYear=function(){return weeksInYear(this.year(),1,4)},proto.isoWeeksInISOWeekYear=function(){return weeksInYear(this.isoWeekYear(),1,4)},proto.date=getSetDayOfMonth,proto.day=proto.days=function(input){if(!this.isValid())return null!=input?this:NaN;var day=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=input?(input=function(input,locale){return"string"!=typeof input?input:isNaN(input)?"number"==typeof(input=locale.weekdaysParse(input))?input:null:parseInt(input,10)}(input,this.localeData()),this.add(input-day,"d")):day},proto.weekday=function(input){if(!this.isValid())return null!=input?this:NaN;var weekday=(this.day()+7-this.localeData()._week.dow)%7;return null==input?weekday:this.add(input-weekday,"d")},proto.isoWeekday=function(input){if(!this.isValid())return null!=input?this:NaN;if(null!=input){var weekday=function(input,locale){return"string"==typeof input?locale.weekdaysParse(input)%7||7:isNaN(input)?null:input}(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7)}return this.day()||7},proto.dayOfYear=function(input){var dayOfYear=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==input?dayOfYear:this.add(input-dayOfYear,"d")},proto.hour=proto.hours=getSetHour,proto.minute=proto.minutes=getSetMinute,proto.second=proto.seconds=getSetSecond,proto.millisecond=proto.milliseconds=getSetMillisecond,proto.utcOffset=function(input,keepLocalTime,keepMinutes){var localAdjust,offset=this._offset||0;if(!this.isValid())return null!=input?this:NaN;if(null!=input){if("string"==typeof input){if(null===(input=offsetFromString(matchShortOffset,input)))return this}else Math.abs(input)<16&&!keepMinutes&&(input*=60);return!this._isUTC&&keepLocalTime&&(localAdjust=getDateOffset(this)),this._offset=input,this._isUTC=!0,null!=localAdjust&&this.add(localAdjust,"m"),offset!==input&&(!keepLocalTime||this._changeInProgress?addSubtract(this,createDuration(input-offset,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,hooks.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?offset:getDateOffset(this)},proto.utc=function(keepLocalTime){return this.utcOffset(0,keepLocalTime)},proto.local=function(keepLocalTime){return this._isUTC&&(this.utcOffset(0,keepLocalTime),this._isUTC=!1,keepLocalTime&&this.subtract(getDateOffset(this),"m")),this},proto.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var tZone=offsetFromString(matchOffset,this._i);null!=tZone?this.utcOffset(tZone):this.utcOffset(0,!0)}return this},proto.hasAlignedHourOffset=function(input){return!!this.isValid()&&(input=input?createLocal(input).utcOffset():0,(this.utcOffset()-input)%60==0)},proto.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},proto.isLocal=function(){return!!this.isValid()&&!this._isUTC},proto.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},proto.isUtc=isUtc,proto.isUTC=isUtc,proto.zoneAbbr=function(){return this._isUTC?"UTC":""},proto.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},proto.dates=deprecate("dates accessor is deprecated. Use date instead.",getSetDayOfMonth),proto.months=deprecate("months accessor is deprecated. Use month instead",getSetMonth),proto.years=deprecate("years accessor is deprecated. Use year instead",getSetYear),proto.zone=deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(input,keepLocalTime){return null!=input?("string"!=typeof input&&(input=-input),this.utcOffset(input,keepLocalTime),this):-this.utcOffset()})),proto.isDSTShifted=deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!isUndefined(this._isDSTShifted))return this._isDSTShifted;var other,c={};return copyConfig(c,this),(c=prepareConfig(c))._a?(other=c._isUTC?createUTC(c._a):createLocal(c._a),this._isDSTShifted=this.isValid()&&function(array1,array2,dontConvert){var i,len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0;for(i=0;i<len;i++)(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i]))&&diffs++;return diffs+lengthDiff}(c._a,other.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}));var proto$1=Locale.prototype;function get$1(format,index,field,setter){var locale=getLocale(),utc=createUTC().set(setter,index);return locale[field](utc,format)}function listMonthsImpl(format,index,field){if(isNumber(format)&&(index=format,format=void 0),format=format||"",null!=index)return get$1(format,index,field,"month");var i,out=[];for(i=0;i<12;i++)out[i]=get$1(format,i,field,"month");return out}function listWeekdaysImpl(localeSorted,format,index,field){"boolean"==typeof localeSorted?(isNumber(format)&&(index=format,format=void 0),format=format||""):(index=format=localeSorted,localeSorted=!1,isNumber(format)&&(index=format,format=void 0),format=format||"");var i,locale=getLocale(),shift=localeSorted?locale._week.dow:0,out=[];if(null!=index)return get$1(format,(index+shift)%7,field,"day");for(i=0;i<7;i++)out[i]=get$1(format,(i+shift)%7,field,"day");return out}proto$1.calendar=function(key,mom,now){var output=this._calendar[key]||this._calendar.sameElse;return isFunction(output)?output.call(mom,now):output},proto$1.longDateFormat=function(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];return format||!formatUpper?format:(this._longDateFormat[key]=formatUpper.match(formattingTokens).map((function(tok){return"MMMM"===tok||"MM"===tok||"DD"===tok||"dddd"===tok?tok.slice(1):tok})).join(""),this._longDateFormat[key])},proto$1.invalidDate=function(){return this._invalidDate},proto$1.ordinal=function(number){return this._ordinal.replace("%d",number)},proto$1.preparse=preParsePostFormat,proto$1.postformat=preParsePostFormat,proto$1.relativeTime=function(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number)},proto$1.pastFuture=function(diff,output){var format=this._relativeTime[diff>0?"future":"past"];return isFunction(format)?format(output):format.replace(/%s/i,output)},proto$1.set=function(config){var prop,i;for(i in config)hasOwnProp(config,i)&&(isFunction(prop=config[i])?this[i]=prop:this["_"+i]=prop);this._config=config,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},proto$1.eras=function(m,format){var i,l,date,eras=this._eras||getLocale("en")._eras;for(i=0,l=eras.length;i<l;++i){switch(typeof eras[i].since){case"string":date=hooks(eras[i].since).startOf("day"),eras[i].since=date.valueOf()}switch(typeof eras[i].until){case"undefined":eras[i].until=1/0;break;case"string":date=hooks(eras[i].until).startOf("day").valueOf(),eras[i].until=date.valueOf()}}return eras},proto$1.erasParse=function(eraName,format,strict){var i,l,name,abbr,narrow,eras=this.eras();for(eraName=eraName.toUpperCase(),i=0,l=eras.length;i<l;++i)if(name=eras[i].name.toUpperCase(),abbr=eras[i].abbr.toUpperCase(),narrow=eras[i].narrow.toUpperCase(),strict)switch(format){case"N":case"NN":case"NNN":if(abbr===eraName)return eras[i];break;case"NNNN":if(name===eraName)return eras[i];break;case"NNNNN":if(narrow===eraName)return eras[i]}else if([name,abbr,narrow].indexOf(eraName)>=0)return eras[i]},proto$1.erasConvertYear=function(era,year){var dir=era.since<=era.until?1:-1;return void 0===year?hooks(era.since).year():hooks(era.since).year()+(year-era.offset)*dir},proto$1.erasAbbrRegex=function(isStrict){return hasOwnProp(this,"_erasAbbrRegex")||computeErasParse.call(this),isStrict?this._erasAbbrRegex:this._erasRegex},proto$1.erasNameRegex=function(isStrict){return hasOwnProp(this,"_erasNameRegex")||computeErasParse.call(this),isStrict?this._erasNameRegex:this._erasRegex},proto$1.erasNarrowRegex=function(isStrict){return hasOwnProp(this,"_erasNarrowRegex")||computeErasParse.call(this),isStrict?this._erasNarrowRegex:this._erasRegex},proto$1.months=function(m,format){return m?isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?"format":"standalone"][m.month()]:isArray(this._months)?this._months:this._months.standalone},proto$1.monthsShort=function(m,format){return m?isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?"format":"standalone"][m.month()]:isArray(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},proto$1.monthsParse=function(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact)return handleStrictParse.call(this,monthName,format,strict);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(mom=createUTC([2e3,i]),strict&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(mom,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(mom,"").replace(".","")+"$","i")),strict||this._monthsParse[i]||(regex="^"+this.months(mom,"")+"|^"+this.monthsShort(mom,""),this._monthsParse[i]=new RegExp(regex.replace(".",""),"i")),strict&&"MMMM"===format&&this._longMonthsParse[i].test(monthName))return i;if(strict&&"MMM"===format&&this._shortMonthsParse[i].test(monthName))return i;if(!strict&&this._monthsParse[i].test(monthName))return i}},proto$1.monthsRegex=function(isStrict){return this._monthsParseExact?(hasOwnProp(this,"_monthsRegex")||computeMonthsParse.call(this),isStrict?this._monthsStrictRegex:this._monthsRegex):(hasOwnProp(this,"_monthsRegex")||(this._monthsRegex=defaultMonthsRegex),this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex)},proto$1.monthsShortRegex=function(isStrict){return this._monthsParseExact?(hasOwnProp(this,"_monthsRegex")||computeMonthsParse.call(this),isStrict?this._monthsShortStrictRegex:this._monthsShortRegex):(hasOwnProp(this,"_monthsShortRegex")||(this._monthsShortRegex=defaultMonthsShortRegex),this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex)},proto$1.week=function(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week},proto$1.firstDayOfYear=function(){return this._week.doy},proto$1.firstDayOfWeek=function(){return this._week.dow},proto$1.weekdays=function(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&!0!==m&&this._weekdays.isFormat.test(format)?"format":"standalone"];return!0===m?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays},proto$1.weekdaysMin=function(m){return!0===m?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin},proto$1.weekdaysShort=function(m){return!0===m?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort},proto$1.weekdaysParse=function(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact)return handleStrictParse$1.call(this,weekdayName,format,strict);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(mom=createUTC([2e3,1]).day(i),strict&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(mom,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(mom,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(mom,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(regex="^"+this.weekdays(mom,"")+"|^"+this.weekdaysShort(mom,"")+"|^"+this.weekdaysMin(mom,""),this._weekdaysParse[i]=new RegExp(regex.replace(".",""),"i")),strict&&"dddd"===format&&this._fullWeekdaysParse[i].test(weekdayName))return i;if(strict&&"ddd"===format&&this._shortWeekdaysParse[i].test(weekdayName))return i;if(strict&&"dd"===format&&this._minWeekdaysParse[i].test(weekdayName))return i;if(!strict&&this._weekdaysParse[i].test(weekdayName))return i}},proto$1.weekdaysRegex=function(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysStrictRegex:this._weekdaysRegex):(hasOwnProp(this,"_weekdaysRegex")||(this._weekdaysRegex=defaultWeekdaysRegex),this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex)},proto$1.weekdaysShortRegex=function(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(hasOwnProp(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=defaultWeekdaysShortRegex),this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},proto$1.weekdaysMinRegex=function(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(hasOwnProp(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=defaultWeekdaysMinRegex),this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},proto$1.isPM=function(input){return"p"===(input+"").toLowerCase().charAt(0)},proto$1.meridiem=function(hours,minutes,isLower){return hours>11?isLower?"pm":"PM":isLower?"am":"AM"},getSetGlobalLocale("en",{eras:[{since:"0001-01-01",until:1/0,offset:1,name:"Anno Domini",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"Before Christ",narrow:"BC",abbr:"BC"}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10;return number+(1===toInt(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")}}),hooks.lang=deprecate("moment.lang is deprecated. Use moment.locale instead.",getSetGlobalLocale),hooks.langData=deprecate("moment.langData is deprecated. Use moment.localeData instead.",getLocale);var mathAbs=Math.abs;function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);return duration._milliseconds+=direction*other._milliseconds,duration._days+=direction*other._days,duration._months+=direction*other._months,duration._bubble()}function absCeil(number){return number<0?Math.floor(number):Math.ceil(number)}function daysToMonths(days){return 4800*days/146097}function monthsToDays(months){return 146097*months/4800}function makeAs(alias){return function(){return this.as(alias)}}var asMilliseconds=makeAs("ms"),asSeconds=makeAs("s"),asMinutes=makeAs("m"),asHours=makeAs("h"),asDays=makeAs("d"),asWeeks=makeAs("w"),asMonths=makeAs("M"),asQuarters=makeAs("Q"),asYears=makeAs("y");function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN}}var milliseconds=makeGetter("milliseconds"),seconds=makeGetter("seconds"),minutes=makeGetter("minutes"),hours=makeGetter("hours"),days=makeGetter("days"),months=makeGetter("months"),years=makeGetter("years"),round=Math.round,thresholds={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture)}var abs$1=Math.abs;function sign(x){return(x>0)-(x<0)||+x}function toISOString$1(){if(!this.isValid())return this.localeData().invalidDate();var minutes,hours,years,s,totalSign,ymSign,daysSign,hmsSign,seconds=abs$1(this._milliseconds)/1e3,days=abs$1(this._days),months=abs$1(this._months),total=this.asSeconds();return total?(minutes=absFloor(seconds/60),hours=absFloor(minutes/60),seconds%=60,minutes%=60,years=absFloor(months/12),months%=12,s=seconds?seconds.toFixed(3).replace(/\.?0+$/,""):"",totalSign=total<0?"-":"",ymSign=sign(this._months)!==sign(total)?"-":"",daysSign=sign(this._days)!==sign(total)?"-":"",hmsSign=sign(this._milliseconds)!==sign(total)?"-":"",totalSign+"P"+(years?ymSign+years+"Y":"")+(months?ymSign+months+"M":"")+(days?daysSign+days+"D":"")+(hours||minutes||seconds?"T":"")+(hours?hmsSign+hours+"H":"")+(minutes?hmsSign+minutes+"M":"")+(seconds?hmsSign+s+"S":"")):"P0D"}var proto$2=Duration.prototype;return proto$2.isValid=function(){return this._isValid},proto$2.abs=function(){var data=this._data;return this._milliseconds=mathAbs(this._milliseconds),this._days=mathAbs(this._days),this._months=mathAbs(this._months),data.milliseconds=mathAbs(data.milliseconds),data.seconds=mathAbs(data.seconds),data.minutes=mathAbs(data.minutes),data.hours=mathAbs(data.hours),data.months=mathAbs(data.months),data.years=mathAbs(data.years),this},proto$2.add=function(input,value){return addSubtract$1(this,input,value,1)},proto$2.subtract=function(input,value){return addSubtract$1(this,input,value,-1)},proto$2.as=function(units){if(!this.isValid())return NaN;var days,months,milliseconds=this._milliseconds;if("month"===(units=normalizeUnits(units))||"quarter"===units||"year"===units)switch(days=this._days+milliseconds/864e5,months=this._months+daysToMonths(days),units){case"month":return months;case"quarter":return months/3;case"year":return months/12}else switch(days=this._days+Math.round(monthsToDays(this._months)),units){case"week":return days/7+milliseconds/6048e5;case"day":return days+milliseconds/864e5;case"hour":return 24*days+milliseconds/36e5;case"minute":return 1440*days+milliseconds/6e4;case"second":return 86400*days+milliseconds/1e3;case"millisecond":return Math.floor(864e5*days)+milliseconds;default:throw new Error("Unknown unit "+units)}},proto$2.asMilliseconds=asMilliseconds,proto$2.asSeconds=asSeconds,proto$2.asMinutes=asMinutes,proto$2.asHours=asHours,proto$2.asDays=asDays,proto$2.asWeeks=asWeeks,proto$2.asMonths=asMonths,proto$2.asQuarters=asQuarters,proto$2.asYears=asYears,proto$2.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*toInt(this._months/12):NaN},proto$2._bubble=function(){var seconds,minutes,hours,years,monthsFromDays,milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data;return milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0||(milliseconds+=864e5*absCeil(monthsToDays(months)+days),days=0,months=0),data.milliseconds=milliseconds%1e3,seconds=absFloor(milliseconds/1e3),data.seconds=seconds%60,minutes=absFloor(seconds/60),data.minutes=minutes%60,hours=absFloor(minutes/60),data.hours=hours%24,days+=absFloor(hours/24),monthsFromDays=absFloor(daysToMonths(days)),months+=monthsFromDays,days-=absCeil(monthsToDays(monthsFromDays)),years=absFloor(months/12),months%=12,data.days=days,data.months=months,data.years=years,this},proto$2.clone=function(){return createDuration(this)},proto$2.get=function(units){return units=normalizeUnits(units),this.isValid()?this[units+"s"]():NaN},proto$2.milliseconds=milliseconds,proto$2.seconds=seconds,proto$2.minutes=minutes,proto$2.hours=hours,proto$2.days=days,proto$2.weeks=function(){return absFloor(this.days()/7)},proto$2.months=months,proto$2.years=years,proto$2.humanize=function(argWithSuffix,argThresholds){if(!this.isValid())return this.localeData().invalidDate();var locale,output,withSuffix=!1,th=thresholds;return"object"==typeof argWithSuffix&&(argThresholds=argWithSuffix,argWithSuffix=!1),"boolean"==typeof argWithSuffix&&(withSuffix=argWithSuffix),"object"==typeof argThresholds&&(th=Object.assign({},thresholds,argThresholds),null!=argThresholds.s&&null==argThresholds.ss&&(th.ss=argThresholds.s-1)),locale=this.localeData(),output=function(posNegDuration,withoutSuffix,thresholds,locale){var duration=createDuration(posNegDuration).abs(),seconds=round(duration.as("s")),minutes=round(duration.as("m")),hours=round(duration.as("h")),days=round(duration.as("d")),months=round(duration.as("M")),weeks=round(duration.as("w")),years=round(duration.as("y")),a=seconds<=thresholds.ss&&["s",seconds]||seconds<thresholds.s&&["ss",seconds]||minutes<=1&&["m"]||minutes<thresholds.m&&["mm",minutes]||hours<=1&&["h"]||hours<thresholds.h&&["hh",hours]||days<=1&&["d"]||days<thresholds.d&&["dd",days];return null!=thresholds.w&&(a=a||weeks<=1&&["w"]||weeks<thresholds.w&&["ww",weeks]),(a=a||months<=1&&["M"]||months<thresholds.M&&["MM",months]||years<=1&&["y"]||["yy",years])[2]=withoutSuffix,a[3]=+posNegDuration>0,a[4]=locale,substituteTimeAgo.apply(null,a)}(this,!withSuffix,th,locale),withSuffix&&(output=locale.pastFuture(+this,output)),locale.postformat(output)},proto$2.toISOString=toISOString$1,proto$2.toString=toISOString$1,proto$2.toJSON=toISOString$1,proto$2.locale=locale,proto$2.localeData=localeData,proto$2.toIsoString=deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",toISOString$1),proto$2.lang=lang,addFormatToken("X",0,0,"unix"),addFormatToken("x",0,0,"valueOf"),addRegexToken("x",matchSigned),addRegexToken("X",/[+-]?\d+(\.\d{1,3})?/),addParseToken("X",(function(input,array,config){config._d=new Date(1e3*parseFloat(input))})),addParseToken("x",(function(input,array,config){config._d=new Date(toInt(input))})),
//! moment.js
hooks.version="2.29.3",hookCallback=createLocal,hooks.fn=proto,hooks.min=function(){var args=[].slice.call(arguments,0);return pickBy("isBefore",args)},hooks.max=function(){var args=[].slice.call(arguments,0);return pickBy("isAfter",args)},hooks.now=function(){return Date.now?Date.now():+new Date},hooks.utc=createUTC,hooks.unix=function(input){return createLocal(1e3*input)},hooks.months=function(format,index){return listMonthsImpl(format,index,"months")},hooks.isDate=isDate,hooks.locale=getSetGlobalLocale,hooks.invalid=createInvalid,hooks.duration=createDuration,hooks.isMoment=isMoment,hooks.weekdays=function(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdays")},hooks.parseZone=function(){return createLocal.apply(null,arguments).parseZone()},hooks.localeData=getLocale,hooks.isDuration=isDuration,hooks.monthsShort=function(format,index){return listMonthsImpl(format,index,"monthsShort")},hooks.weekdaysMin=function(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdaysMin")},hooks.defineLocale=defineLocale,hooks.updateLocale=function(name,config){if(null!=config){var locale,tmpLocale,parentConfig=baseConfig;null!=locales[name]&&null!=locales[name].parentLocale?locales[name].set(mergeConfigs(locales[name]._config,config)):(null!=(tmpLocale=loadLocale(name))&&(parentConfig=tmpLocale._config),config=mergeConfigs(parentConfig,config),null==tmpLocale&&(config.abbr=name),(locale=new Locale(config)).parentLocale=locales[name],locales[name]=locale),getSetGlobalLocale(name)}else null!=locales[name]&&(null!=locales[name].parentLocale?(locales[name]=locales[name].parentLocale,name===getSetGlobalLocale()&&getSetGlobalLocale(name)):null!=locales[name]&&delete locales[name]);return locales[name]},hooks.locales=function(){return keys(locales)},hooks.weekdaysShort=function(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdaysShort")},hooks.normalizeUnits=normalizeUnits,hooks.relativeTimeRounding=function(roundingFunction){return void 0===roundingFunction?round:"function"==typeof roundingFunction&&(round=roundingFunction,!0)},hooks.relativeTimeThreshold=function(threshold,limit){return void 0!==thresholds[threshold]&&(void 0===limit?thresholds[threshold]:(thresholds[threshold]=limit,"s"===threshold&&(thresholds.ss=limit-1),!0))},hooks.calendarFormat=function(myMoment,now){var diff=myMoment.diff(now,"days",!0);return diff<-6?"sameElse":diff<-1?"lastWeek":diff<0?"lastDay":diff<1?"sameDay":diff<2?"nextDay":diff<7?"nextWeek":"sameElse"},hooks.prototype=proto,hooks.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},hooks}()}).call(this,__webpack_require__(435)(module))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Subscriber}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_util_isFunction__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(46),_Observer__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(93),_Subscription__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(10),_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(74),_config__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(27),_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(61),Subscriber=function(_super){function Subscriber(destinationOrNext,error,complete){var _this=_super.call(this)||this;switch(_this.syncErrorValue=null,_this.syncErrorThrown=!1,_this.syncErrorThrowable=!1,_this.isStopped=!1,arguments.length){case 0:_this.destination=_Observer__WEBPACK_IMPORTED_MODULE_2__.a;break;case 1:if(!destinationOrNext){_this.destination=_Observer__WEBPACK_IMPORTED_MODULE_2__.a;break}if("object"==typeof destinationOrNext){destinationOrNext instanceof Subscriber?(_this.syncErrorThrowable=destinationOrNext.syncErrorThrowable,_this.destination=destinationOrNext,destinationOrNext.add(_this)):(_this.syncErrorThrowable=!0,_this.destination=new SafeSubscriber(_this,destinationOrNext));break}default:_this.syncErrorThrowable=!0,_this.destination=new SafeSubscriber(_this,destinationOrNext,error,complete)}return _this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(Subscriber,_super),Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__.a]=function(){return this},Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);return subscriber.syncErrorThrowable=!1,subscriber},Subscriber.prototype.next=function(value){this.isStopped||this._next(value)},Subscriber.prototype.error=function(err){this.isStopped||(this.isStopped=!0,this._error(err))},Subscriber.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},Subscriber.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,_super.prototype.unsubscribe.call(this))},Subscriber.prototype._next=function(value){this.destination.next(value)},Subscriber.prototype._error=function(err){this.destination.error(err),this.unsubscribe()},Subscriber.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},Subscriber.prototype._unsubscribeAndRecycle=function(){var _parentOrParents=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=_parentOrParents,this},Subscriber}(_Subscription__WEBPACK_IMPORTED_MODULE_3__.a),SafeSubscriber=function(_super){function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){var next,_this=_super.call(this)||this;_this._parentSubscriber=_parentSubscriber;var context=_this;return Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.a)(observerOrNext)?next=observerOrNext:observerOrNext&&(next=observerOrNext.next,error=observerOrNext.error,complete=observerOrNext.complete,observerOrNext!==_Observer__WEBPACK_IMPORTED_MODULE_2__.a&&(context=Object.create(observerOrNext),Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.a)(context.unsubscribe)&&_this.add(context.unsubscribe.bind(context)),context.unsubscribe=_this.unsubscribe.bind(_this))),_this._context=context,_this._next=next,_this._error=error,_this._complete=complete,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(SafeSubscriber,_super),SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;_config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?this.__tryOrSetError(_parentSubscriber,this._next,value)&&this.unsubscribe():this.__tryOrUnsub(this._next,value)}},SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber,useDeprecatedSynchronousErrorHandling=_config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling;if(this._error)useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,this._error,err),this.unsubscribe()):(this.__tryOrUnsub(this._error,err),this.unsubscribe());else if(_parentSubscriber.syncErrorThrowable)useDeprecatedSynchronousErrorHandling?(_parentSubscriber.syncErrorValue=err,_parentSubscriber.syncErrorThrown=!0):Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__.a)(err),this.unsubscribe();else{if(this.unsubscribe(),useDeprecatedSynchronousErrorHandling)throw err;Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__.a)(err)}}},SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function(){return _this._complete.call(_this._context)};_config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,wrappedComplete),this.unsubscribe()):(this.__tryOrUnsub(wrappedComplete),this.unsubscribe())}else this.unsubscribe()}},SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value)}catch(err){if(this.unsubscribe(),_config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling)throw err;Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__.a)(err)}},SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){if(!_config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{fn.call(this._context,value)}catch(err){return _config__WEBPACK_IMPORTED_MODULE_5__.a.useDeprecatedSynchronousErrorHandling?(parent.syncErrorValue=err,parent.syncErrorThrown=!0,!0):(Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__.a)(err),!0)}return!1},SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null,this._parentSubscriber=null,_parentSubscriber.unsubscribe()},SafeSubscriber}(Subscriber)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SimpleInnerSubscriber})),__webpack_require__.d(__webpack_exports__,"b",(function(){return SimpleOuterSubscriber})),__webpack_require__.d(__webpack_exports__,"c",(function(){return innerSubscribe}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2),_Observable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(5),_util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(60),SimpleInnerSubscriber=function(_super){function SimpleInnerSubscriber(parent){var _this=_super.call(this)||this;return _this.parent=parent,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(SimpleInnerSubscriber,_super),SimpleInnerSubscriber.prototype._next=function(value){this.parent.notifyNext(value)},SimpleInnerSubscriber.prototype._error=function(error){this.parent.notifyError(error),this.unsubscribe()},SimpleInnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(),this.unsubscribe()},SimpleInnerSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a),SimpleOuterSubscriber=(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a,function(_super){function SimpleOuterSubscriber(){return null!==_super&&_super.apply(this,arguments)||this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(SimpleOuterSubscriber,_super),SimpleOuterSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue)},SimpleOuterSubscriber.prototype.notifyError=function(err){this.destination.error(err)},SimpleOuterSubscriber.prototype.notifyComplete=function(){this.destination.complete()},SimpleOuterSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a));_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a;function innerSubscribe(result,innerSubscriber){if(!innerSubscriber.closed)return result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__.a?result.subscribe(innerSubscriber):Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__.a)(result)(innerSubscriber)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const settings_service_1=__webpack_require__(18);class LoggerService{constructor(){this.colors={trace:"color:blue",debug:"color:gray",info:"color:teal",infoBlue:"color:white; background: blue",infoRed:"color:white; background: red",infoOrange:"color:black; background: orange",log:"color:teal",warn:"color:red",error:"color:red",webrtc:"color:green"},this.logsBuffer=[],this.enableConsoleLog=!1,this.desktopMode=!1,this.externalLogger=null,this.settingsService=settings_service_1.SettingsService.getInstance();window.LoggerService=this,this.computeConsoleStatus(),this.settingsService.subscribeUpdateEvent("SETTINGS_UPDATED",()=>{this.computeConsoleStatus()});const ua=navigator.userAgent.toLowerCase();this.desktopMode=ua.indexOf("qtwebengine")>-1||ua.indexOf("electron/")>-1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.loggerService||(win.rainbow.loggerService=new LoggerService),win.rainbow.loggerService}computeConsoleStatus(){"true"===this.settingsService.getSetting("forceConsoleLog")?this.enableConsoleLog=!0:this.enableConsoleLog=window.config&&window.config.consoleLog||!1}configure(externalLogger){this.externalLogger=externalLogger}enableVerboseMode(value){this.enableConsoleLog=value}error(message){this.externalLogger?this.externalLogger.error(message):this.logger("error",message)}warn(message){this.externalLogger?this.externalLogger.info(message):this.logger("warn",message)}info(message){this.externalLogger?this.externalLogger.info(message):this.logger("info",message)}infoBlue(message){this.externalLogger?this.externalLogger.info(message):this.logger("infoBlue",message)}infoOrange(message){this.externalLogger?this.externalLogger.info(message):this.logger("infoOrange",message)}infoRed(message){this.externalLogger?this.externalLogger.info(message):this.logger("infoRed",message)}log(message){this.externalLogger?this.externalLogger.debug(message):this.logger("log",message)}debug(message){this.externalLogger?this.externalLogger.debug(message):this.logger("debug",message)}webrtc(message){this.externalLogger?this.externalLogger.webrtc(message):this.logger("info",message)}sdk(message){this.externalLogger?this.externalLogger.webrtc(message):this.logger("info","[SDK] -- "+message)}getLogs(){return this.logsBuffer}logger(level,text){let realLevel=level;switch(level){case"infoRed":case"infoOrange":case"infoBlue":realLevel="info"}const browserConsole=console;if(this.desktopMode)browserConsole[realLevel](`${realLevel.toUpperCase()} ${text}`);else{const tzoffset=6e4*(new Date).getTimezoneOffset(),message=`${new Date(Date.now()-tzoffset).toISOString().slice(0,-1)} ${realLevel.toUpperCase()} ${text}`;this.enableConsoleLog&&browserConsole[realLevel]("%c "+message,this.colors[level]),6e3===this.logsBuffer.length&&this.logsBuffer.shift(),this.logsBuffer.push(message+"\n")}}}exports.LoggerService=LoggerService},function(module,__webpack_exports__,__webpack_require__){"use strict";var canReportError=__webpack_require__(90),Subscriber=__webpack_require__(2),rxSubscriber=__webpack_require__(74),Observer=__webpack_require__(93);var observable=__webpack_require__(41),pipe=__webpack_require__(72),config=__webpack_require__(27);__webpack_require__.d(__webpack_exports__,"a",(function(){return Observable_Observable}));var Observable_Observable=function(){function Observable(subscribe){this._isScalar=!1,subscribe&&(this._subscribe=subscribe)}return Observable.prototype.lift=function(operator){var observable=new Observable;return observable.source=this,observable.operator=operator,observable},Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator,sink=function(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber.a)return nextOrObserver;if(nextOrObserver[rxSubscriber.a])return nextOrObserver[rxSubscriber.a]()}return nextOrObserver||error||complete?new Subscriber.a(nextOrObserver,error,complete):new Subscriber.a(Observer.a)}(observerOrNext,error,complete);if(operator?sink.add(operator.call(sink,this.source)):sink.add(this.source||config.a.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink)),config.a.useDeprecatedSynchronousErrorHandling&&sink.syncErrorThrowable&&(sink.syncErrorThrowable=!1,sink.syncErrorThrown))throw sink.syncErrorValue;return sink},Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){config.a.useDeprecatedSynchronousErrorHandling&&(sink.syncErrorThrown=!0,sink.syncErrorValue=err),Object(canReportError.a)(sink)?sink.error(err):console.warn(err)}},Observable.prototype.forEach=function(next,promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var subscription;subscription=_this.subscribe((function(value){try{next(value)}catch(err){reject(err),subscription&&subscription.unsubscribe()}}),reject,resolve)}))},Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber)},Observable.prototype[observable.a]=function(){return this},Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++)operations[_i]=arguments[_i];return 0===operations.length?this:Object(pipe.b)(operations)(this)},Observable.prototype.toPromise=function(promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var value;_this.subscribe((function(x){return value=x}),(function(err){return reject(err)}),(function(){return resolve(value)}))}))},Observable.create=function(subscribe){return new Observable(subscribe)},Observable}();function getPromiseCtor(promiseCtor){if(promiseCtor||(promiseCtor=config.a.Promise||Promise),!promiseCtor)throw new Error("no Promise impl found");return promiseCtor}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const event_service_1=__webpack_require__(11),main_service_1=__webpack_require__(15),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),i18n_service_1=__webpack_require__(38),company_service_1=__webpack_require__(122),xmpp_service_1=__webpack_require__(9),anonymizer_1=__webpack_require__(66),promiseQueue_1=__webpack_require__(107),contact_model_1=__webpack_require__(108),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),personalRoutine_model_1=__webpack_require__(109),telephonyForward_model_1=__webpack_require__(140),imageUtils_service_1=__webpack_require__(64),lodash_escape_1=__webpack_require__(105),xmlParser_1=__webpack_require__(139);class ContactService{constructor(){this.userContact=null,this.contacts={},this.dbContacts={},this.jtelContacts={},this.currentLanguage=null,this.eventService=event_service_1.EventService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.i18nService=i18n_service_1.I18nService.getInstance(),this.companyService=company_service_1.CompanyService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.rxSubject=new rxjs_1.Subject,this.subscriptions=[],this._displayOrder=null,this.contactLastActivityInterval=null,this.calendarPresenceEventHandlerCleaner=null,this.xmppConnectionSubscription=null,this.presentationModeEventHandlerCleaner=null,this.msTeamsPresenceEventHandlerCleaner=null,this.subscriptionPromiseQueue=promiseQueue_1.PromiseQueue.create(),this.getContactPromises=[],this.contactConfigRef=null,this.lastUpdatePresentationMode=null,this.presentationModeTimeout=null,this.presentationModeActive=!1,this.awayStateActive=!1,this.busyState={status:null,message:null},this.manualState=!1,this.dndStateActivated=!1}getDisplayOrder(){return this._displayOrder}setDisplayOrder(displayOrder){this._displayOrder=displayOrder,Object.keys(this.contacts).forEach(key=>{const contact=this.contacts[key];contact.displayOrder=displayOrder,contact.computeDisplayName()})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.contactService||(win.rainbow.contactService=new ContactService),win.rainbow.contactService}async start(contactServiceConfig=null){this.logger.info("[contactService] === STARTING ==="),this.currentLanguage=this.settingsService.getSetting("lang"),this.setDisplayOrder(this.settingsService.getSetting("displayOrder")),this.settingsService.subscribeUpdateEvent("SETTINGS_UPDATED",()=>{this.currentLanguage=this.settingsService.getSetting("lang"),this.setDisplayOrder(this.settingsService.getSetting("displayOrder")),this.updateContactsLastActivityMessage()}),this.subscriptions.push(this.xmppService.subscribeToContactEvents(event=>{switch(event.name){case"ON_CONTACT_PRESENCE_EVENT":this.contactPresenceChangedHandler(event.data);break;case"ON_CONTACT_UPDATE_EVENT":this.onContactChangeEvent(event.data.from,event.data.type);break;case"ON_ROSTER_CHANGED_EVENT":this.subscriptionPromiseQueue.add(()=>this.rosterChangedHandlerPromise(event.data))}})),this.xmppService.contactServiceReady=!0,this.calendarPresenceEventHandlerCleaner&&this.calendarPresenceEventHandlerCleaner(),this.calendarPresenceEventHandlerCleaner=this.eventService.subscribe("ON_CONTACT_CALENDAR_STATUS_CHANGE",(__event,contact)=>{this.updateContactCalendarPresenceInfo(contact)}),this.presentationModeEventHandlerCleaner&&this.presentationModeEventHandlerCleaner(),this.presentationModeEventHandlerCleaner=this.eventService.subscribe("ON_PRESENTATION_MODE_CHANGED_EVENT",(__event,status)=>{this.onPresentationModeChangedEvent(status)}),this.msTeamsPresenceEventHandlerCleaner&&this.msTeamsPresenceEventHandlerCleaner(),this.msTeamsPresenceEventHandlerCleaner=this.eventService.subscribe("ON_CONTACT_MSTEAMS_STATUS_CHANGE",(__event,jidIm,status,message)=>{const contact=this.getContactByJid(jidIm);this.onMSTeamsPresenceUpdateForContact(contact,status,message)}),this.logger.info("[contactService] Create userContact ("+this.xmppService.jid+")"),this.userContact=this.createContact(),this.userContact.ask=null,this.userContact.subscription=null,this.userContact.id=this.xmppService.jid,this.userContact.jid=this.xmppService.jid,this.userContact.fullJid=this.xmppService.fullJid,this.userContact.language=this.currentLanguage,this.userContact.updateFromUserData(this.authService.loggedInUser),this.userContact.getAvatar(),this.updateContactRichStatus(this.userContact),this.dbContacts[this.userContact.dbId]=this.userContact,this.contacts[this.userContact.id]=this.userContact,this.jtelContacts[this.userContact.jidtel]=this.userContact;const userDataToUpdate={};this.authService.loggedInUser.language||(userDataToUpdate.language=this.settingsService.getAppliLanguageCodeForServer()),await this.getUserSettings();let shouldUpdatecustomData=!1;void 0===this.userContact.customData.pushToTalkEnabled&&(shouldUpdatecustomData=!0,this.userContact.customData.pushToTalkEnabled=!1);void 0===this.userContact.customData.pushToTalkKey&&(shouldUpdatecustomData=!0,this.userContact.customData.pushToTalkKey="Shift");void 0===this.userContact.customData.pushToTalkDelay&&(shouldUpdatecustomData=!0,this.userContact.customData.pushToTalkDelay=0);void 0===this.userContact.customData.enablePushToTalkTone&&(shouldUpdatecustomData=!0,this.userContact.customData.enablePushToTalkTone=!1);const openPopoutOnAnswerCall=Boolean(this.userContact.customData.openPopoutOnAnswerCall);if(this.settingsService.setSetting("openPopoutOnAnswerCall",String(openPopoutOnAnswerCall)),navigator.userAgent&&navigator.userAgent.indexOf("Firefox")>-1&&this.settingsService.setSetting("openPopoutOnAnswerCall",String(!1)),shouldUpdatecustomData&&(userDataToUpdate.customData=this.userContact.customData),Intl&&Intl.DateTimeFormat&&Intl.DateTimeFormat().resolvedOptions){const timezone=Intl.DateTimeFormat().resolvedOptions().timeZone;timezone&&timezone!==this.userContact.timezone&&(this.logger.info("[contactService] update user timezone from : "+this.userContact.timezone+" to : "+timezone),userDataToUpdate.timezone=timezone)}this.userContact.modifyProfileEnabled&&Object.keys(userDataToUpdate).length>0&&this.updateUserContact(userDataToUpdate),this.userContact.company=await this.companyService.getCompanyById(this.userContact.company.id),this.userContact.companyFeatures=await this.companyService.getCompanyFeatures(this.userContact.company),this.userContact.alertNotificationEnabledForMyCompany=this.userContact.companyFeatures.alertNotifAllowed,this.attachHandlers(),contactServiceConfig&&contactServiceConfig.skipNetwork||(await this.getNetwork(),await this.updateNetworkWithRosterInfo()),this.subscriptions.push(this.mainService.appActive.subscribe(appActive=>(this.logger.info("[contactService] AppActive changed : "+appActive),!appActive&&this.userContact&&"online"===this.userContact.status&&(this.awayStateActive=!0),appActive&&this.awayStateActive&&(this.awayStateActive=!1),this.mainService.appActiveAutoAway&&"offline"!==this.userContact.status&&this.updatePresence(!0),!0))),this.getMissedPresenceMessages(),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChangeEvent(event)}),this.contactLastActivityInterval=setInterval(()=>{this.updateContactsLastActivityMessage()},6e4),this.logger.info("[contactService] === STARTED ===")}attachHandlers(){this.logger.info("[contactService] AttachHandlers"),this.contactConfigRef&&(this.xmppService.deleteHandler(this.contactConfigRef),this.contactConfigRef=null),this.contactConfigRef=this.xmppService.addHandler(stanza=>(this.onUserManagementEvent(stanza),!0),null,"message","management")}async stop(){this.logger.info("[contactService] == STOPPING =="),this.userContact=null,this.contacts={},this.dbContacts={},this.jtelContacts={},this.presentationModeActive=!1,this.awayStateActive=!1,this.busyState={status:null,message:null},this.manualState=!1,this.dndStateActivated=!1,this.contactLastActivityInterval&&(clearInterval(this.contactLastActivityInterval),this.contactLastActivityInterval=null),this.subscriptions&&this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.calendarPresenceEventHandlerCleaner&&(this.calendarPresenceEventHandlerCleaner(),this.calendarPresenceEventHandlerCleaner=null),this.presentationModeEventHandlerCleaner&&(this.presentationModeEventHandlerCleaner(),this.presentationModeEventHandlerCleaner=null),this.msTeamsPresenceEventHandlerCleaner&&(this.msTeamsPresenceEventHandlerCleaner(),this.msTeamsPresenceEventHandlerCleaner=null),this.logger.info("[contactService] == STOPPED ==")}subscribe(handler){return this.rxSubject.subscribe(handler)}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}sendUpdateEvent(contact){contact.rxSubject.next({name:"update",data:contact});const event=this.isUserContact(contact)?"ON_USER_CONTACT_UPDATED_EVENT":"ON_CONTACT_UPDATED_EVENT";this.eventService.publish(event,contact)}onConnectionStateChangeEvent(event){"ON_XMPP_DISCONNECTED"===event.name&&this.userContact&&(this.userContact.resources={},Object.keys(this.contacts).forEach(key=>{const contact=this.contacts[key];contact.isBot||(contact.resources={},"unknown"!==contact.status&&"none"!==contact.subscription&&(contact.status="offline",contact.imStatusStamp=[]))}),this.presentationModeActive=!1,this.awayStateActive=!1)}async resendInitialPresenceOnReconnect(){this.eventService.publish("RESET_PRESENCE_AFTER_RECONNECT")}createContact(jid=null,firstname=null,lastname=null,company=null,login=null){const contact=new contact_model_1.Contact(jid,null,company);return contact.login=login,contact.avatarServerURL=config.webservices.protocol+"://"+config.webservices.currentServer,contact.firstname=firstname,contact.lastname=lastname,contact.displayOrder=this.getDisplayOrder(),contact.computeDisplayName(),contact}createBotContact(jid,name,id,botAvatarUrl,botCapabilities,isRainbowSupportBot){let contact=this.contacts[jid];return contact||(contact=new contact_model_1.Contact(jid),isRainbowSupportBot&&(contact.botDetails="emilyDetails")),contact.displayOrder=this.getDisplayOrder(),contact.lastname=name,contact.isBot=!0,contact.status="online",contact.imStatus="online",contact.subscription="both",contact.computeDisplayName(),contact.avatar=window.rainbowSDK?null:{src:botAvatarUrl},contact.dbId=id,contact.isBotSharing=!!botCapabilities&&botCapabilities.some((function(param){return"SHARING"===param})),this.contacts[contact.id]=this.dbContacts[id]=contact,contact}isMediaPillarJid(jid){return jid&&0===jid.indexOf("mp_")}isUserContactJid(jid){return!(!this.userContact||!jid||0===jid.length)&&jid.startsWith(this.userContact.jid)}isUserContact(contact){return!(!contact||!contact.jid)&&this.isUserContactJid(contact.jid)}searchContacts(criteria){return this.getContacts().filter(contact=>(contact.roster||contact.isBot)&&!contact.isTerminated&&this.contactMatcher(contact,criteria))}contactMatcher(contact,criteria){const displayname=contact.firstname+" "+contact.lastname,queries=criteria.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ ]+/),names=displayname.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ ]+/);return queries.every(query=>names.some((name,index)=>!(!name.length||0!==name.indexOf(query))&&(names[index]="",!0)))}getContacts(){return Object.keys(this.contacts).map(key=>this.contacts[key])}getContact(jid,phoneNumber=null){const contactId=jid||phoneNumber;return this.isUserContactJid(contactId)?this.userContact:this.contacts[contactId]}getContactByJid(jid){return this.getContact(jid)}getContactById(dbId){return this.dbContacts[dbId]}getContactByJidTel(jidTel){return this.jtelContacts[jidTel]}getContactByEmail(email){const contactKey=Object.keys(this.contacts).find(key=>this.contacts[key].containsEmail(email));return contactKey?this.contacts[contactKey]:null}getContactByPhoneNumber(phonenumber){const contactKey=Object.keys(this.contacts).find(key=>this.contacts[key].containsPhoneNumber(phonenumber));return contactKey?this.contacts[contactKey]:null}getDirectoryContactByPhoneNumber(phonenumber){const contactKey=Object.keys(this.contacts).find(key=>this.contacts[key].containsDirectoryPhoneNumber(phonenumber));return contactKey?this.contacts[contactKey]:null}async getContactByDbIdInner(dbId){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${dbId}?format=full`,response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;const contactData=(await response.json()).data,existingContact=this.contacts[contactData.jid_im]?this.contacts[contactData.jid_im]:this.dbContacts[dbId],contact=existingContact||this.createBasicContact(contactData.jid_im,null,!1);return contact.updateFromUserData(contactData),contact.getAvatar(),this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact,this.logger.info("[contactService] GetContactByDBId ("+dbId+") -- "+contactData.jid_im+" -- success"),contact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getContactByDBId");throw this.logger.error(errorInfo.message),errorInfo.error}}async getContactByDBId(dbId,force=!1){const existingContact=this.dbContacts[dbId];return!force&&existingContact?existingContact:(this.getContactPromises[dbId]||(this.getContactPromises[dbId]=new Promise((resolve,reject)=>{this.getContactByDbIdInner(dbId).then(contact=>{resolve(contact),delete this.getContactPromises[dbId]}).catch(error=>{reject(error),delete this.getContactPromises[dbId]})})),this.getContactPromises[dbId])}async getContactsByEmails(emails){try{this.logger.info("[contactService] getContactsByEmails with ["+emails.join()+"]");const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/loginemails",loginEmail=emails.map(email=>email.toLowerCase()),response=await fetch(url,{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify({loginEmail:loginEmail})});if(!response.ok)throw response;const responseData=await response.json(),contacts={},contactsArray=responseData.data.map(userData=>{let contact=this.dbContacts[userData.id];return contact||(contact=this.createContact(),this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact),contact.updateFromUserData(userData),contact.getAvatar(),contacts[contact.loginEmail]=contact,loginEmail.splice(loginEmail.indexOf(contact.loginEmail.toLowerCase()),1),contact});return{contacts:contacts,contactsArray:contactsArray,emails:loginEmail}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getContactsByEmails");throw this.logger.error(errorInfo.message),errorInfo.error}}async getContactsByJids(jids){try{this.logger.info(`[contactService] getContactsByJids with [${jids.length>10?jids.length:jids.join()}]`);const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/jids?limit=1000",response=await fetch(url,{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify({jid_im:jids})});if(!response.ok)throw response;(await response.json()).data.forEach(userData=>{let contact=this.getContact(userData.jid_im);contact||(contact=this.createContact()),contact.updateFromUserData(userData),contact.isAnonymousGuest()||(this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact,contact.getAvatar(),contact.temp=!1)})}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getContactsByJids");throw this.logger.error(errorInfo.message),errorInfo.error}}createBasicContact(jid,phoneNumber=null,append=!0){this.logger.debug(`[contactService] CreateContact ${jid} ${anonymizer_1.default(phoneNumber)}`);const contact=this.createContact();if(!jid)return contact.id=phoneNumber,contact.initials="?",contact.displayName=phoneNumber||(this.i18nService.isInitialized?this.i18nService.translate("accountDeleted"):"Unknown contact"),contact.lastname=phoneNumber||(this.i18nService.isInitialized?this.i18nService.translate("accountDeleted"):"Unknown contact"),contact.firstname="",contact.phoneProCan=phoneNumber||"",contact.phonePro=contact.phoneProCan,contact.temp=!0,this.authService.fromSDK?contact.avatar={src:""}:contact.avatar={src:"/assets/skins/rainbow/images/conversations/unknownUser.jpeg"},contact.nameUpdatePrio=contact_model_1.Contact.NameUpdatePrio.NO_UPDATE_PRIO,contact;let contactId=jid;return contactId||(contactId=phoneNumber,contact.phoneProCan=phoneNumber),contactId||(contactId="anonymous"),contact.jid=jid,contact.id=contactId,contact.ask="none",contact.subscription="none",this.updateContactRichStatus(contact),!1!==append&&(this.contacts[contact.id]=contact),contact}createEmptyContact(jid){const contact=this.createBasicContact(jid);return contact.initials="?",contact.displayName=this.i18nService.isInitialized?this.i18nService.translate("accountDeleted"):"Unknown contact",contact.lastname=this.i18nService.isInitialized?this.i18nService.translate("accountDeleted"):"Unknown contact",contact.firstname="",contact.temp=!0,contact.avatar={src:"/assets/skins/rainbow/images/conversations/unknownUser.jpeg"},contact}createDirectoryContact(id,storeDb=!0){this.logger.debug(`[contactService] createDirectoryContact ${id} `);const contact=this.createContact();return contact.id=id,contact.jid=id,contact.dbId=id,contact.ask="none",contact.subscription="none",this.updateContactRichStatus(contact),!0===storeDb&&(this.contacts[contact.id]=contact),contact}getOrCreateContact(jid,phoneNumber=null){if(!jid&&!phoneNumber)return Promise.reject(new Error("No jid or no phoneNumber"));const existingContact=this.getContact(jid,phoneNumber);if(existingContact)return Promise.resolve(existingContact);if(jid&&-1===jid.indexOf("@"))return Promise.reject(new Error("Invalid jid "+jid));const contactId=jid||phoneNumber;return jid?(this.getContactPromises[contactId]||(this.getContactPromises[contactId]=new Promise((resolve,reject)=>{const contact=this.createBasicContact(jid,phoneNumber,!1);this.updateContactFromServer(contact).then(()=>{this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact,delete this.getContactPromises[contactId],resolve(contact)}).catch(error=>{this.logger.error("[contactService] getOrCreateContact -- failure -- "+error.message),delete this.getContactPromises[contactId],reject(error)})})),this.getContactPromises[contactId]):Promise.resolve(this.createBasicContact(null,phoneNumber))}createContactFromData(userData){if(!userData)return null;const existingContact=this.getContact(userData.jid_im);if(existingContact)return!existingContact.personalRoutines&&userData.personalRoutines&&(existingContact.personalRoutines=userData.personalRoutines.map(userDataRoutine=>personalRoutine_model_1.PersonalRoutine.createRoutineFromData(userDataRoutine))),!existingContact.forwards&&userData.forwards&&(existingContact.forwards=userData.forwards.map(userDataForward=>telephonyForward_model_1.TelephonyForward.createForwardFromUserData(userDataForward))),existingContact;const contact=this.createBasicContact(userData.jid_im,void 0,!1);return contact.updateFromUserData(userData),this.updateContactRichStatus(contact,this.isUserContactJid(contact.jid)),contact.getAvatar(),this.sendUpdateEvent(contact),this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact,contact}async updateContactFromServer(contact,shouldSkipAvatar=!1){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/jids/${contact.jid}?format=full`,response=await fetch(url,{headers:this.authService.getRequestHeader()});if(!response.ok)throw response;const responseData=await response.json();contact.updateFromUserData(responseData.data),this.updateContactRichStatus(contact,this.isUserContactJid(contact.jid)),shouldSkipAvatar||contact.getAvatar(),this.sendUpdateEvent(contact)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateContactFromServer");throw this.logger.error(errorInfo.message),errorInfo.error}}async getContactInfoByEmail(email){try{const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/loginemails?format=full",response=await fetch(url,{method:"POST",headers:this.authService.getRequestHeader(),body:JSON.stringify({loginEmail:[email]})});if(!response.ok)throw response;return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getContactInfoByEmail");throw this.logger.error(errorInfo.message),errorInfo.error}}onContactChangeEvent(jid,type){this.logger.info("[contactService] onContactChangeEvent event: "+event+" || status: "+jid+" || type: "+type),setTimeout(async()=>{const contact=this.getContact(jid);contact&&(await this.updateContactFromServer(contact,!0),"avatar"===type&&contact.getAvatar(256,!0),this.sendUpdateEvent(contact))},500)}async onUserManagementEvent(stanza){try{const stanzaElem=xmlParser_1.default(stanza);if("update"===stanzaElem.find("usersettings").attr("action")){this.logger.info("[contactService] onUserManagementEvent - usersettings updated");const settingsElem=stanzaElem.find("setting");if(settingsElem.length){const settingsName=settingsElem.attr("name");if(["ringingOnDnd","protectionAgainstMailTypeOffline","activeAlarm","activeNotif","autoAnswerByDeviceType","autoAnswer","applyMsTeamsPresence"].includes(settingsName)){const value=settingsElem.attr("value");this.settingsService.setSetting(settingsName,value)}else await this.sendPresenceFromConfiguration();return this.eventService.publish("ON_MY_CONTACT_SETTINGS_CHANGE"),!0}}return"update"!==stanzaElem.find("userpassword").attr("action")||(this.logger.info("[contactService] onUserManagementEvent - userPassword updated"),this.xmppService.changePasswordInfo||(this.xmppService.changePasswordInfo={fromThirdParty:!0}),!0)}catch(error){return!0}}async sendPresenceFromConfiguration(sendAuthInfo=!1){this.logger.info("(with auth info)");try{const setting=await this.getUserSettings();this.settingsService.setSetting("presence",setting.presence);let message="",presence=setting.presence;if("invisible"===presence?presence="xa":"away"===presence&&(presence="xa",message="away"),this.logger.info("[contactService] sendPresenceFromConfiguration -> getUserSettings are "+presence+" || message : "+message),this.userContact&&this.userContact.resources&&this.userContact.resources[this.userContact.fullJid]){const myRessource=this.userContact.resources[this.userContact.fullJid];if(myRessource&&(myRessource.show!==presence||"dnd"===myRessource.show&&""!==myRessource.status||"xa"===myRessource.show&&myRessource.status!==message)){if(!this.busyState||"dnd"!==this.busyState.status||this.manualState){this.logger.info("[contactService] sendPresenceFromConfiguration should update my status from "+myRessource.show+" to "+presence+" ("+message+")");const userOptions={im:this.userContact.instantMessagesEnabled,alert:this.userContact.alertNotificationEnabledForMyCompany,companyid:this.userContact.company?this.userContact.company.id:""};this.dndStateActivated="dnd"===presence,this.setUserContactStatus(presence,message,sendAuthInfo,userOptions)}}else this.settingsService.setSetting("ringingOnDnd",setting.ringingOnDnd),this.eventService.publish("ON_RELOAD_CAPABILITIES_FOR_MY_CONYTACT")}else{const userOptions={im:this.userContact.instantMessagesEnabled,alert:this.userContact.alertNotificationEnabledForMyCompany,companyid:this.userContact.company?this.userContact.company.id:""};this.logger.info("[contactService] sendPresenceFromConfiguration set initial presence "),this.dndStateActivated="dnd"===presence,this.setUserContactStatus(presence,message,sendAuthInfo,userOptions)}}catch(error){this.logger.info("[contactService] sendPresenceFromConfiguration failure, send online"),this.setUserContactStatus("online",null,sendAuthInfo)}}changeMyPresence(status){if(this.logger.info("[contactService] changeMyPresence "+status+" "+this.userContact.message),"dnd"===status&&"presentation"===this.userContact.message||"busy"===status)return;let message="";"online"===status&&(message="mode=auto"),"away"===status&&(status="xa",message="away"),"busy"!==this.userContact.status||"phone"!==this.userContact.message&&"audioPhone"!==this.userContact.message||"xa"!==status&&"away"!==status&&"dnd"!==status||this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT","presenceActivatedConfirmation",!0),this.setUserContactStatus(status,message),"online"===status&&setTimeout(()=>{this.manualState=!1,this.dndStateActivated=!1,this.updatePresence()},1e3);let presence="online";"xa"===status&&"away"===message?presence="away":"dnd"===status?presence="dnd":"xa"===status&&(presence="invisible"),this.setUserSettings({presence:presence}),this.userContact.calendarState&&this.userContact.calendarState.applyCalendarPresence&&"busy"===this.userContact.calendarState.message&&this.eventService.publish("EXIT_CALENDAR_PRESENCE_STATE")}async updateUserContact(userData){let responseData=null;if(!this.userContact||this.userContact.modifyProfileEnabled)try{this.logger.info("[contactService] updateUserContact");const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.authService.userId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(userData)});if(!response.ok)throw response;return responseData=(await response.json()).data,this.userContact.updateFromUserData(responseData),this.authService.loggedInUser=responseData,this.logger.info("[contactService] updateUserContact successfully"),this.userContact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateUserContact");throw this.logger.error(errorInfo.message),errorInfo.error}else this.logger.warn("[contactService] updateUserContact is not allowed for this contact")}reconnect(){this.updateUserContactFullJid()}updateUserContactFullJid(){this.userContact.fullJid=this.xmppService.fullJid,this.attachHandlers()}async completeContactPhoneNumbers(contact){if(contact.isBot)throw new Error("No phone numbers for bot contacts");if(contact.phoneNumbersInitialized)return contact;if(contact.dbId)try{return await this.getContactByDBId(contact.dbId,!0)}catch(error){throw new Error(error.message)}return contact}updateUserPassword(oldPassword,newPassword,async=!1){return new Promise((resolve,reject)=>{const login=this.userContact.loginEmail;this.xmppService.changePasswordInfo={resolve:async?resolve:null,login:login,newPassword:newPassword};const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.authService.userId}/change-password`,headers=this.authService.getPostHeader();fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({oldPassword:oldPassword,newPassword:newPassword})}).then(response=>{if(!response.ok)throw response;async||resolve()}).catch(async error=>{this.xmppService.changePasswordInfo=null;const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateUserPassword");this.logger.error(errorInfo.message),reject(errorInfo.error)})})}async getNetwork(){try{const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/networks?limit=2000&format=full",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info(`[contactService] GetNetwork success -- find ${responseData.data.length} contact(s)`),responseData.data.forEach(contactData=>{const contact=this.createContact();contact.updateFromUserData(contactData),this.contacts[contact.id]=contact,this.dbContacts[contact.dbId]=contact,this.jtelContacts[contact.jidtel]=contact,this.updateContactRichStatus(contact),contact.getAvatar(),this.sendUpdateEvent(contact)})}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getNetwork");throw this.logger.error(errorInfo.message),errorInfo.error}}async updateNetworkWithRosterInfo(){try{const stanza=await this.xmppService.sendIQ($iq({type:"get"}).c("query",{xmlns:"jabber:iq:roster"})),stanzaElem=xmlParser_1.default(stanza);this.logger.info("[contactService] Get rosters info successfully"),stanzaElem.find("item").forEach(rosterElem=>{const jid=this.xmppService.getBareJidFromJid(rosterElem.attr("jid"));if(jid&&jid.length&&!this.isTelJid(jid)){const contact=this.contacts[jid];if(contact){const ask=rosterElem.attr("ask"),subscription=rosterElem.attr("subscription");contact.ask=ask||"none",contact.subscription=subscription||"none",contact.roster=!0,this.updateContactRichStatus(contact),this.logger.info("[contactService] Update contact from roster ("+contact.ask+", "+contact.subscription+") "+jid)}}})}catch(error){throw this.logger.error("[contactService] Get rosters failure : "+error.message),new Error(error.message)}}async getUserSettings(){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.userContact.dbId}/settings`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json(),presence=responseData.data.presence&&this.userContact.changePresenceEnabled?responseData.data.presence:"online",activeAlarm=responseData.data.activeAlarm||"relax1",activeNotif=responseData.data.activeNotif||"notif1",ringingOnDnd=responseData.data.ringingOnDnd,promptForCalendarPresence=responseData.data.promptForCalendarPresence,protectionAgainstMailTypeOffline=responseData.data.protectionAgainstMailTypeOffline,applyCalendarPresence=Boolean(responseData.data.applyCalendarPresence),applyMsTeamsPresence=Boolean(responseData.data.applyMsTeamsPresence),autoAnswer=responseData.data.autoAnswer||!1,autoAnswerByDeviceType=responseData.data.autoAnswerByDeviceType||"desktop";this.logger.info("[contactService] GetUserSettings success");const settings={presence:presence,activeAlarm:activeAlarm,activeNotif:activeNotif,ringingOnDnd:ringingOnDnd,promptForCalendarPresence:promptForCalendarPresence,protectionAgainstMailTypeOffline:protectionAgainstMailTypeOffline,applyCalendarPresence:applyCalendarPresence,autoAnswer:autoAnswer,autoAnswerByDeviceType:autoAnswerByDeviceType,applyMsTeamsPresence:applyMsTeamsPresence};return this.manageCalendarPresencePrompt(settings),this.settingsService.setSetting("activeAlarm",settings.activeAlarm),this.settingsService.setSetting("activeNotif",settings.activeNotif),this.settingsService.setSetting("ringingOnDnd",settings.ringingOnDnd),this.settingsService.setSetting("protectionAgainstMailTypeOffline",settings.protectionAgainstMailTypeOffline),this.settingsService.setSetting("applyCalendarPresence",String(settings.applyCalendarPresence)),this.settingsService.setSetting("applyMsTeamsPresence",String(settings.applyMsTeamsPresence)),this.settingsService.setSetting("autoAnswer",settings.autoAnswer),this.settingsService.setSetting("presence",settings.presence),this.settingsService.setSetting("autoAnswerByDeviceType",String(settings.autoAnswerByDeviceType)),this.logger.info("[contactService] Get alarm & notif data ("+settings.activeAlarm+" / "+settings.activeNotif+")"),this.logger.info("[contactService] Get mail setting data ("+settings.protectionAgainstMailTypeOffline+")"),settings}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getUserSettings");return this.logger.error(errorInfo.message),{presence:"online",activeAlarm:"relax1",activeNotif:"notif1",ringingOnDnd:!1,promptForCalendarPresence:!1,autoAnswer:!1,autoAnswerByDeviceType:"desktop"}}}async setUserSettings(params){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.userContact.dbId}/settings`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(params)});if(!response.ok)throw response;this.logger.info(`[contactService] SetUserSettings ${JSON.stringify(params)} -- success`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setUserSettings");throw this.logger.error(errorInfo.message),errorInfo.error.errorDetailsCode&&403153===errorInfo.error.errorDetailsCode&&(this.setUserContactStatus("online","mode=auto"),this.mainService.showGlobalPopupMessage({popupTitle:"presence",popupBody:"changePresenceDisabled",okLabel:"ok"})),errorInfo.error}}getUserSettingFromSettingsService(settings){return this.settingsService.getSetting(settings)}manageCalendarPresencePrompt(settings){if(void 0!==settings.promptForCalendarPresence)this.settingsService.setSetting("disableCalendarPresence",settings.promptForCalendarPresence?"false":"true"),this.logger.info("[contactService] promptForCalendarPresence -- "+settings.promptForCalendarPresence);else{const promptForCalendarPresence="true"!==this.settingsService.getSetting("disableCalendarPresence");this.logger.info("[contactService] MIGRATION NECESSARY -- promptForCalendarPresence : "+promptForCalendarPresence),this.setUserSettings({promptForCalendarPresence:promptForCalendarPresence})}}onMSTeamsPresenceUpdateForContact(contact,status,message){this.logger.debug(`[contactService] onMSTeamsPresenceUpdateForContact -- ${contact.jid} -- ${status} -- ${message}`),contact.msTeamsPresence=status,"dnd"===status&&"teams"===message&&(contact.msTeamsPresence="busy"),this.updateContactRichStatus(contact,this.isUserContactJid(contact.jid)),this.isUserContact(contact)&&this.sendUpdateEvent(contact)}updateContactCalendarPresenceInfo(contact){const calendarState=contact.calendarState;let calendarParams=null,calendarMessage=null;calendarState.iconId=null;let calendarLabelKey=null;if(calendarState.autoReplyOn)calendarState.iconId="calendar--busy",calendarMessage="<div style='text-align:left'>"+lodash_escape_1.default(calendarState.autoReplyInfos.message).replace(/\n/g,"<br/>")+"</div>",calendarParams={meetingDate:calendarState.autoReplyInfos.until,message:calendarMessage},calendarLabelKey=calendarState.autoReplyInfos.until?calendarState.autoReplyInfos.untilDate?"calendarAutoReply-date":"calendarAutoReply":"calendarAutoReplySimple";else{if("busy"===calendarState.message)calendarState.iconId="calendar--ok",calendarLabelKey=calendarState.untilDate?"calendar-busy-date":"calendar-busy";else if("out_of_office"===calendarState.message)calendarState.iconId="calendar--busy",calendarLabelKey=calendarState.untilDate?"calendar-outofoffice-date":"calendar-outofoffice";else if("online"===calendarState.status){const isBusyToday=calendarState.mdate&&calendarState.mdate.isSame(moment(),"d");calendarState.tooltip=isBusyToday?this.i18nService.translate("calendar-free",{meetingDate:calendarState.until}):this.i18nService.translate("calendar-noappointment")}calendarParams={meetingDate:calendarState.until}}calendarLabelKey&&(calendarState.tooltip=this.i18nService.translate(calendarLabelKey,{meetingDate:calendarParams.meetingDate}),calendarParams.message&&(calendarParams.message=calendarParams.message.replace(/<script>/g,""),calendarParams.message=calendarParams.message.replace(/(?:<br?\/?>\s*){2,}/g,"<br/>"),calendarState.tooltip=calendarState.tooltip+" "+calendarParams.message)),this.updateContactRichStatus(contact,this.isUserContactJid(contact.jid)),this.isUserContact(contact)&&this.sendUpdateEvent(contact)}isTelJid(jid){return 0===jid.indexOf("tel_")}getResourceFromJid(jid){return this.xmppService.getResourceFromJid(jid)}getImJid(jid){const bareJid=this.xmppService.getBareJidFromJid(jid);if(this.isTelJid(bareJid)){const contact=this.jtelContacts[bareJid];return contact?contact.jid:(this.logger.warn("[contactService] -- getIMJid("+jid+") -- failure -- no associated contact"),null)}return bareJid}async rosterChangedHandlerPromise(attr){try{if(this.isTelJid(attr.jid))return void this.logger.debug("[contactService] Contact changed ("+attr.jid+") ignored");const contact=await this.getOrCreateContact(attr.jid);"remove"===attr.subscription?(contact.ask="none",contact.subscription="none",contact.roster=!1):(contact.ask=attr.ask,contact.subscription=attr.subscription,contact.roster=!0,"both"===attr.subscription&&this.updatePresence(!0)),this.updateContactRichStatus(contact),this.sendUpdateEvent(contact),this.sendEvent("ON_CONTACT_ROSTER_UPDATE_EVENT"),this.logger.info("[contactService] rosterChangedHandler - contact "+attr.jid+" changed ("+attr.ask+", "+attr.subscription+") success")}catch(error){this.logger.error("[contactService] rosterChangedHandler - contact "+attr.jid+" failure - "+error.message)}}async contactPresenceChangedHandler(attr){const resource=this.getResourceFromJid(attr.jid);if("calendar"===resource)return;if("presence"===resource)return;const jidIm=this.getImJid(attr.jid);if(!jidIm)return;if(jidIm.startsWith("room"))return;const contact=await this.getOrCreateContact(jidIm),isUserContact=this.isUserContact(contact);this.isTelJid(attr.jid)?(this.logger.info("[contactService] Update telephony presence ("+jidIm+") source: "+resource),this.logger.info("[contactService] Update telephony presence ("+jidIm+") msg: "+attr.message+" / status: "+attr.status),this.updateContactTelephonyStatus(contact,attr,isUserContact)):(this.logger.info("[contactService] Update im presence contact ("+jidIm+") status: "+attr.status+" "+attr.stamp),this.isUserContact(contact)&&"mode=auto"===attr.message&&"online"!==contact.status&&contact.resources.hasOwnProperty(attr.jid)&&attr.jid!==contact.fullJid&&"EVT_SERVICE_INITIATED"!==contact.telStatus&&"EVT_ESTABLISHED"!==contact.telStatus&&(contact.resources[contact.fullJid]&&"online"===contact.resources[contact.fullJid].show?this.logger.info("[contactService] Current ressource is already online, ignore message!"):(this.manualState&&(this.logger.info("[contactService] User is in manual state, leave it"),this.setUserContactStatus("online","mode=auto")),this.busyState&&"dnd"===this.busyState.status&&"busy"!==this.userContact.status&&(this.logger.info("[contactService] User is in call, re-update presence state"),setTimeout(()=>{this.updatePresence(!0)},500)))),this.updateContactIMStatus(contact,attr,this.isUserContact(contact)),this.updateLastActivity(contact)),this.sendUpdateEvent(contact)}getMissedPresenceMessages(){this.logger.info("[contactService] GetMissedPresenceMessages");try{const list=this.xmppService.getPresenceWaitingList();if(list.length){for(this.logger.info("[contactService] GetMissedPresenceMessages length "+list.length);list.length>0;){const item=list.pop();this.contactPresenceChangedHandler(item)}this.xmppService.resetPresenceWaitingList()}}catch(error){this.logger.error("[contactService] GetMissedPresenceMessages error "+error)}}computeStatusList(){let list=[];return this.userContact&&this.userContact.status&&(this.logger.info("[contactService] computeStatusList "+this.userContact.status+" "+this.userContact.message),list=this.userContact.changePresenceEnabled?"offline"===this.userContact.status?["online"]:"busy"===this.userContact.status?["online","away","xa","dnd"]:"dnd"===this.userContact.status&&"presentation"===this.userContact.message?["dnd"]:["online","away","xa","dnd"]:[]),list}resetBusyState(){this.logger.info("[contactService] resetBusyState"),this.setBusyState(null,null,!0),this.sendPresenceFromConfiguration()}setBusyState(status,message,noUpdate=!1){this.logger.info("[contactService] setBusyState -- "+status+" -- "+message),this.busyState={status:status,message:message},noUpdate||this.updatePresence()}updateContactRichStatus(contact,isMe=!1){if("EVT_SERVICE_INITIATED"===contact.telStatus||"EVT_ESTABLISHED"===contact.telStatus)contact.status="busy",contact.message="audioPhone";else{if("subscribe"===contact.ask)contact.status="wait";else if("none"===contact.subscription||"from"===contact.subscription)contact.status="unknown";else{const calculatedStatus=this.calculateContactStatusFromResources(contact,isMe);"xa"===calculatedStatus.presence&&(""!==calculatedStatus.message||isMe?"away"===calculatedStatus.message&&(calculatedStatus.presence="away",calculatedStatus.message=""):calculatedStatus.presence="offline"),contact.status=calculatedStatus.presence,contact.message=calculatedStatus.message,this.logger.info(`[contactService] updateContactRichStatus ${isMe?"MY ":"USER"} PRESENCE : ${calculatedStatus.presence} || message : ${calculatedStatus.message}`),contact.rxSubject.next({name:"update",data:contact})}this.updateContactStatusMessage(contact)}isMe&&this.eventService.publish("ON_UPDATE_MYCONTACT_EVENT",contact),this.eventService.publish("ON_UPDATE_CONTACT_RICH_STATUS_EVENT",contact)}calculateContactStatusFromResources(contact,isMe){let onThePhone=!1,manualInvisible=!1,manualDnd=!1,manualAway=!1,calendarDND=!1,presentationMode=!1,busyWebrtc=!1,busyWebrtcStatus="",online=!1,onlineMobile=!1,autoAway=!1,msTeamsBusy=!1,msTeamsDND=!1,fullJid=contact.fullJid,presence="offline",status="";return contact.calendarState.applyCalendarPresence&&"busy"===contact.calendarState.message&&(calendarDND=!0),contact.msTeamsPresence&&(msTeamsBusy="busy"===contact.msTeamsPresence,msTeamsDND="dnd"===contact.msTeamsPresence),Object.keys(contact.resources).forEach(key=>{const resource=contact.resources[key];"phone"!==resource.type?(isMe||fullJid||(fullJid=key),"xa"===resource.show&&""===resource.status?manualInvisible=!0:"dnd"===resource.show&&""===resource.status?manualDnd=!0:"xa"===resource.show&&"away"===resource.status?manualAway=!0:"dnd"===resource.show&&"presentation"===resource.status?presentationMode=!0:"dnd"===resource.show&&resource.status?(busyWebrtc=!0,busyWebrtcStatus=resource.status):""!==resource.show&&"online"!==resource.show||""!==resource.status&&"mode=auto"!==resource.status?"away"===resource.show&&""===resource.status&&(autoAway=!0):-1!==key.indexOf("mobile_")?onlineMobile=!0:online=!0):onThePhone="EVT_SERVICE_INITIATED"===resource.status||"EVT_ESTABLISHED"===resource.status}),onThePhone?(presence="busy",status="phone"):manualInvisible?(presence="xa",status="",isMe&&(this.dndStateActivated=!1)):manualDnd?(presence="dnd",status="",isMe&&(this.dndStateActivated=!0)):manualAway?(presence="away",status="",isMe&&(this.dndStateActivated=!1)):calendarDND?(presence="dnd",status="appointment",isMe&&(this.dndStateActivated=!0)):msTeamsBusy||msTeamsDND?(presence="dnd",status="Teams",isMe&&(this.dndStateActivated=!0)):presentationMode?(presence="dnd",status="presentation",isMe&&(this.dndStateActivated=!0)):busyWebrtc?(presence="busy",status=busyWebrtcStatus,isMe&&(this.dndStateActivated=!1)):online?(presence="online",status="",isMe&&(this.dndStateActivated=!1)):onlineMobile?(presence="online-mobile",status="",isMe&&(this.dndStateActivated=!1)):autoAway&&(presence="away",status="",isMe&&(this.dndStateActivated=!1)),isMe||contact.fullJid||(contact.fullJid=fullJid),{presence:presence,message:status}}updatePresence(forced=!1){this.logger.info("[contactService] updatePresence"),this.manualState?(this.logger.info("[contactService] updatePresence manualState"),"away"===this.userContact.status&&this.busyState&&"dnd"===this.busyState.status&&(this.setUserContactStatus("online","mode=auto"),this.setUserSettings({presence:"online"}),setTimeout(()=>{this.updatePresence()},1e3))):!this.presentationModeActive||this.busyState&&this.busyState.status?this.busyState&&"dnd"===this.busyState.status?(this.logger.info("[contactService] updatePresence dnd "+this.busyState.message),this.xmppService.sendPresence("dnd",this.busyState.message)):this.awayStateActive?(this.logger.info("[contactService] updatePresence away"),this.xmppService.sendPresence("away","")):this.userContact&&"online"!==this.userContact.status?(this.logger.info("[contactService] updatePresence online"),this.setUserContactStatus("online")):forced&&this.userContact&&"online"===this.userContact.status&&(this.logger.info("[contactService] updatePresence forced online"),this.setUserContactStatus("online")):(this.logger.info("[contactService] updatePresence dnd presentation"),this.xmppService.sendPresence("dnd","presentation"))}setUserContactStatus(status,message=null,withAuthInfo=!1,userOptions){try{this.logger.info("[contactService] Set userContact status : "+status+(message?"("+message+")":"")),this.xmppService.started&&("online"===status?(this.manualState=!1,this.dndStateActivated=!1,this.xmppService.sendPresence(null,message,withAuthInfo,userOptions)):(this.manualState=!0,this.dndStateActivated=!1,"away"===status?this.xmppService.sendPresence("away",message,withAuthInfo,userOptions):"dnd"===status?(this.dndStateActivated=!0,this.xmppService.sendPresence("dnd",message,withAuthInfo,userOptions)):"xa"===status&&this.xmppService.sendPresence("xa",message,withAuthInfo,userOptions)))}catch(error){this.logger.error("[contactService] Set userContact status error : "+error)}}updateContactTelephonyStatus(contact,attr,isMe){const statusOrg=contact.telStatus;if("pcg2"===this.getResourceFromJid(attr.jid))switch(attr.status){case"offline":contact.telStatus="";break;case"online":contact.telStatus="EVT_CONNECTION_CLEARED";break;case"dnd":contact.telStatus="EVT_ESTABLISHED";break;default:contact.telStatus=""}else contact.telStatus=attr.message;this.updateContactRichStatus(contact,isMe),isMe&&statusOrg!==contact.telStatus&&this.eventService.publish("ON_UPDATE_MYTELEPHONY_STATUS_EVENT")}updateContactIMStatus(contact,attr,isMe){if(contact.imStatusStamp[attr.jid]&&contact.imStatusStamp[attr.jid]>attr.stamp)return void this.logger.info("[contactService] Ignore obsolete presence message for contact "+contact.jid);if(!this.getResourceFromJid(attr.jid))return void this.logger.info("[contactService] Ignore no ressource presence message for contact "+contact.jid);this.logger.info("[contactService] updateIMStatus "+JSON.stringify(attr)),contact.imStatusStamp[attr.jid]=attr.stamp,attr.status&&(contact.imStatus=attr.status);const status=attr.message?attr.message:"";if("offline"===contact.imStatus?(contact.fullJid===attr.jid&&(contact.fullJid=null),delete contact.resources[attr.jid],delete contact.imStatusStamp[attr.jid],0===contact.resources.length&&(contact.message="")):(contact.resources[attr.jid]?(contact.resources[attr.jid].show=contact.imStatus,contact.resources[attr.jid].status=status,contact.resources[attr.jid].stamp=attr.stamp):contact.resources[attr.jid]={show:contact.imStatus,status:status,initStamp:attr.stamp,stamp:attr.stamp},this.logger.info("[Contact] updateIMStatus user resources after update "+JSON.stringify(contact.resources)),this.xmppService.isMobileResource(attr.jid)||isMe||(contact.fullJid=attr.jid),!isMe&&config.webrtcWithMobiles&&(contact.fullJid=attr.jid)),this.updateContactRichStatus(contact,isMe),isMe&&this.xmppService.isMobileResource(attr.jid)&&("offline"!==attr.status&&null===contact.mobileResource&&(contact.mobileResource=attr.jid,this.logger.info("[Contact] updateIMStatus: post event ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT"),this.eventService.publish("ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT","started")),"offline"===attr.status)){let otherMobileResource=null;for(const key in contact.resources)if(contact.resources.hasOwnProperty(key)&&this.xmppService.isMobileResource(key)){otherMobileResource=key;break}contact.mobileResource=otherMobileResource,null===contact.mobileResource&&this.eventService.publish("ON_MOBILE_TELEPHONY_STATUS_CHANGED_EVENT","stopped")}}async getContactLastActivityMessage(contact){try{if(contact.lastActivityMessage)return;this.xmppService.connection.lastactivity.query(contact.jid,{onResponse:stanza=>{const inactivityInMSeconds=1e3*Number.parseInt(xmlParser_1.default(stanza).find("query").attr("seconds"),10),dateInMSeconds=(new Date).getTime(),lastActivityDate=new Date(dateInMSeconds-inactivityInMSeconds);this.updateContactLastActivityDate(contact,lastActivityDate)}})}catch(error){throw new Error("[contactService] getInitialContactLastActivityMessage -- Failure -- "+error.message)}}updateContactsLastActivityMessage(){this.contacts&&Object.keys(this.contacts).forEach(key=>{this.updateContactStatusMessage(this.contacts[key])})}updateLastActivity(contact){let lastActivityDate=null;"offline"!==contact.status&&"away"!==contact.status||Object.keys(contact.imStatusStamp).forEach(key=>{const stamp=contact.imStatusStamp[key];(!lastActivityDate||lastActivityDate<stamp)&&(lastActivityDate=stamp)}),this.updateContactLastActivityDate(contact,lastActivityDate)}updateContactLastActivityDate(contact,lastActivityDate){contact.lastActivityDate=lastActivityDate,this.updateContactStatusMessage(contact)}updateContactStatusMessage(contact){if(contact.lastActivityDate){const mdate=moment(contact.lastActivityDate);"de"===this.userContact.language?(contact.lastActivityMessage=mdate.fromNow(!0).replace("Tage","Tagen"),contact.lastActivityMessage=contact.lastActivityMessage.replace("eine Stunde","einer Stunde")):contact.lastActivityMessage=mdate.fromNow(!0)}else contact.lastActivityMessage="";if("unknown"===contact.status?contact.statusMessage=this.i18nService.translate("unknown"):"offline"===contact.status&&""===contact.lastActivityMessage?contact.statusMessage=this.i18nService.translate("offlineFilter"):"away"===contact.status&&""===contact.lastActivityMessage?contact.statusMessage=this.i18nService.translate("shortAway"):contact.statusMessage=this.i18nService.translate(contact.status,{offlineDate:contact.lastActivityMessage}),contact.message){let message=this.i18nService.translate(contact.message);"de"!==this.userContact.language&&"Teams"!==message&&(message=message.toLowerCase()),"("!==message.charAt(0)&&(message="("+message+")"),contact.statusMessage+=" "+message}}async deleteUserAccount(){try{this.logger.info("[contactService] deleteUserAccount");const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.userContact.dbId}`,response=await fetch(url,{method:"DELETE",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;await response.json()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteUserAccount");throw this.logger.error(errorInfo.message),errorInfo.error}}async removeContact(contact){try{if(!contact||!contact.dbId)throw new Error("[contactService] removeContact : wrongContact");const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/networks/${contact.dbId}`,response=await fetch(url,{method:"DELETE",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;await response.json(),this.logger.info(`[contactService] removeContact ${contact.dbId} -- SUCCESS`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeContact");throw this.logger.error(errorInfo.message),errorInfo.error}}async pushAvatarImage(avatarImg){const oldImage=this.userContact.avatar;try{this.logger.info("[contactService] Push avatar image");const resizedImage=await imageUtils_service_1.resizeImage(avatarImg,512,512),binaryData=imageUtils_service_1.getBinaryData(resizedImage),url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.userContact.dbId}/avatar`,headers=this.authService.getPostHeader("image/"+binaryData.type),response=await fetch(url,{method:"POST",headers:headers,body:binaryData.data});if(!response.ok)throw response;await response.json()}catch(error){this.userContact.avatar=oldImage;const errorInfo=await this.errorHelperService.getErrorInfo(error,"pushAvatarImage");throw this.logger.error(errorInfo.message),errorInfo.error}}async notifyImByEmail(contact){let responseData=null;try{const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/notifications/emails/offline",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify({userId:contact.dbId})});if(!response.ok)throw response;responseData=await response.json();let mail="";responseData.data&&responseData.data.email&&(mail=responseData.data.email.substr(0,3)+"***"+responseData.data.email.substr(-3)),this.logger.info("[contactService] notifyImByEmail "+mail+" - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"notifyImByEmail");throw this.logger.error(errorInfo.message),errorInfo.error}}myMobileAvailable(){return this.userContact?this.userContact.mobileResource:null}sendSubscribeInvitation(jid){return this.logger.info("[contactService] Send subscribe invitation to "+jid),this.xmppService.send($pres({to:jid,type:"subscribe"}))}shouldShowNotification(){let show=!0;return("dnd"===this.userContact.status||"busy"===this.userContact.status&&this.dndStateActivated||"busy"===this.busyState.status&&"sharing"===this.busyState.message)&&(show=!1),show}isSingleComputerClient(){const instancesWebDesk=Object.keys(this.userContact.resources).filter(contact=>-1!==contact.indexOf("web_")||-1!==contact.indexOf("desk_"));return this.logger.info("[contactService] isSingleComputerClient clients number : "+instancesWebDesk.length),instancesWebDesk.length<=1}onPresentationModeChangedEvent(status){"active"===status?this.presentationModeActive=!0:"disable"===status&&(this.presentationModeActive=!1),null===this.lastUpdatePresentationMode&&(this.logger.debug(`[contactService] onPresentationModeChangedEvent '${status}' request presence update`),this.lastUpdatePresentationMode=this.presentationModeActive,this.updatePresence()),this.startUpdatePresentationModeRefreshTimer()}startUpdatePresentationModeRefreshTimer(){this.logger.debug("[contactService] startUpdatePresentationModeRefreshTimer"),null!==this.presentationModeTimeout&&(clearTimeout(this.presentationModeTimeout),this.presentationModeTimeout=null),this.presentationModeTimeout=setTimeout(()=>{this.logger.debug("[contactService] startUpdatePresentationModeRefreshTimer interval reach"),this.lastUpdatePresentationMode!==this.presentationModeActive?(this.logger.debug("[contactService] startUpdatePresentationModeRefreshTimer interval - request presence update"),this.lastUpdatePresentationMode=this.presentationModeActive,this.updatePresence(),this.startUpdatePresentationModeRefreshTimer()):(this.logger.debug("[contactService] startUpdatePresentationModeRefreshTimer interval - no presence update needed"),this.lastUpdatePresentationMode=null)},1e3)}}exports.ContactService=ContactService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var Observable=__webpack_require__(5),ConnectableObservable=__webpack_require__(115),groupBy=__webpack_require__(104),observable=__webpack_require__(41),Subject=__webpack_require__(14),BehaviorSubject=__webpack_require__(100),ReplaySubject=__webpack_require__(83),AsyncSubject=__webpack_require__(52),asap=__webpack_require__(73),scheduler_async=__webpack_require__(16),queue=__webpack_require__(99),tslib_es6=__webpack_require__(0),AsyncAction=__webpack_require__(53),AnimationFrameAction_AnimationFrameAction=function(_super){function AnimationFrameAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return tslib_es6.a(AnimationFrameAction,_super),AnimationFrameAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.actions.push(this),scheduler.scheduled||(scheduler.scheduled=requestAnimationFrame((function(){return scheduler.flush(null)}))))},AnimationFrameAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0)return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);0===scheduler.actions.length&&(cancelAnimationFrame(id),scheduler.scheduled=void 0)},AnimationFrameAction}(AsyncAction.a),AsyncScheduler=__webpack_require__(51),animationFrameScheduler=new(function(_super){function AnimationFrameScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return tslib_es6.a(AnimationFrameScheduler,_super),AnimationFrameScheduler.prototype.flush=function(action){this.active=!0,this.scheduled=void 0;var error,actions=this.actions,index=-1,count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay))break}while(++index<count&&(action=actions.shift()));if(this.active=!1,error){for(;++index<count&&(action=actions.shift());)action.unsubscribe();throw error}},AnimationFrameScheduler}(AsyncScheduler.a))(AnimationFrameAction_AnimationFrameAction),animationFrame=animationFrameScheduler,VirtualTimeScheduler_VirtualTimeScheduler=function(_super){function VirtualTimeScheduler(SchedulerAction,maxFrames){void 0===SchedulerAction&&(SchedulerAction=VirtualTimeScheduler_VirtualAction),void 0===maxFrames&&(maxFrames=Number.POSITIVE_INFINITY);var _this=_super.call(this,SchedulerAction,(function(){return _this.frame}))||this;return _this.maxFrames=maxFrames,_this.frame=0,_this.index=-1,_this}return tslib_es6.a(VirtualTimeScheduler,_super),VirtualTimeScheduler.prototype.flush=function(){for(var error,action,actions=this.actions,maxFrames=this.maxFrames;(action=actions[0])&&action.delay<=maxFrames&&(actions.shift(),this.frame=action.delay,!(error=action.execute(action.state,action.delay))););if(error){for(;action=actions.shift();)action.unsubscribe();throw error}},VirtualTimeScheduler.frameTimeFactor=10,VirtualTimeScheduler}(AsyncScheduler.a),VirtualTimeScheduler_VirtualAction=function(_super){function VirtualAction(scheduler,work,index){void 0===index&&(index=scheduler.index+=1);var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this.index=index,_this.active=!0,_this.index=scheduler.index=index,_this}return tslib_es6.a(VirtualAction,_super),VirtualAction.prototype.schedule=function(state,delay){if(void 0===delay&&(delay=0),!this.id)return _super.prototype.schedule.call(this,state,delay);this.active=!1;var action=new VirtualAction(this.scheduler,this.work);return this.add(action),action.schedule(state,delay)},VirtualAction.prototype.requestAsyncId=function(scheduler,id,delay){void 0===delay&&(delay=0),this.delay=scheduler.frame+delay;var actions=scheduler.actions;return actions.push(this),actions.sort(VirtualAction.sortActions),!0},VirtualAction.prototype.recycleAsyncId=function(scheduler,id,delay){void 0===delay&&(delay=0)},VirtualAction.prototype._execute=function(state,delay){if(!0===this.active)return _super.prototype._execute.call(this,state,delay)},VirtualAction.sortActions=function(a,b){return a.delay===b.delay?a.index===b.index?0:a.index>b.index?1:-1:a.delay>b.delay?1:-1},VirtualAction}(AsyncAction.a),Scheduler=__webpack_require__(101),Subscription=__webpack_require__(10),Subscriber=__webpack_require__(2),Notification=__webpack_require__(33),pipe=__webpack_require__(72),noop=__webpack_require__(37),identity=__webpack_require__(30);function isObservable(obj){return!!obj&&(obj instanceof Observable.a||"function"==typeof obj.lift&&"function"==typeof obj.subscribe)}var ArgumentOutOfRangeError=__webpack_require__(45),EmptyError=__webpack_require__(48),ObjectUnsubscribedError=__webpack_require__(42),UnsubscriptionError=__webpack_require__(75),TimeoutError=__webpack_require__(117),map=__webpack_require__(20),canReportError=__webpack_require__(90),isArray=__webpack_require__(17),isScheduler=__webpack_require__(21);function bindCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(!Object(isScheduler.a)(resultSelector))return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return bindCallback(callbackFunc,scheduler).apply(void 0,args).pipe(Object(map.a)((function(args){return Object(isArray.a)(args)?resultSelector.apply(void 0,args):resultSelector(args)})))};scheduler=resultSelector}return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var subject,context=this,params={context:context,subject:subject,callbackFunc:callbackFunc,scheduler:scheduler};return new Observable.a((function(subscriber){if(scheduler){var state={args:args,subscriber:subscriber,params:params};return scheduler.schedule(dispatch,0,state)}if(!subject){subject=new AsyncSubject.a;try{callbackFunc.apply(context,args.concat([function(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i]=arguments[_i];subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs),subject.complete()}]))}catch(err){Object(canReportError.a)(subject)?subject.error(err):console.warn(err)}}return subject.subscribe(subscriber)}))}}function dispatch(state){var _this=this,args=state.args,subscriber=state.subscriber,params=state.params,callbackFunc=params.callbackFunc,context=params.context,scheduler=params.scheduler,subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject.a;try{callbackFunc.apply(context,args.concat([function(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i]=arguments[_i];var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}))}]))}catch(err){subject.error(err)}}this.add(subject.subscribe(subscriber))}function dispatchNext(state){var value=state.value,subject=state.subject;subject.next(value),subject.complete()}function bindNodeCallback(callbackFunc,resultSelector,scheduler){if(resultSelector){if(!Object(isScheduler.a)(resultSelector))return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return bindNodeCallback(callbackFunc,scheduler).apply(void 0,args).pipe(Object(map.a)((function(args){return Object(isArray.a)(args)?resultSelector.apply(void 0,args):resultSelector(args)})))};scheduler=resultSelector}return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var params={subject:void 0,args:args,callbackFunc:callbackFunc,scheduler:scheduler,context:this};return new Observable.a((function(subscriber){var context=params.context,subject=params.subject;if(scheduler)return scheduler.schedule(bindNodeCallback_dispatch,0,{params:params,subscriber:subscriber,context:context});if(!subject){subject=params.subject=new AsyncSubject.a;try{callbackFunc.apply(context,args.concat([function(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i]=arguments[_i];var err=innerArgs.shift();err?subject.error(err):(subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs),subject.complete())}]))}catch(err){Object(canReportError.a)(subject)?subject.error(err):console.warn(err)}}return subject.subscribe(subscriber)}))}}function bindNodeCallback_dispatch(state){var _this=this,params=state.params,subscriber=state.subscriber,context=state.context,callbackFunc=params.callbackFunc,args=params.args,scheduler=params.scheduler,subject=params.subject;if(!subject){subject=params.subject=new AsyncSubject.a;try{callbackFunc.apply(context,args.concat([function(){for(var innerArgs=[],_i=0;_i<arguments.length;_i++)innerArgs[_i]=arguments[_i];var err=innerArgs.shift();if(err)_this.add(scheduler.schedule(bindNodeCallback_dispatchError,0,{err:err,subject:subject}));else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;_this.add(scheduler.schedule(bindNodeCallback_dispatchNext,0,{value:value,subject:subject}))}}]))}catch(err){this.add(scheduler.schedule(bindNodeCallback_dispatchError,0,{err:err,subject:subject}))}}this.add(subject.subscribe(subscriber))}function bindNodeCallback_dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value),subject.complete()}function bindNodeCallback_dispatchError(arg){var err=arg.err;arg.subject.error(err)}var combineLatest=__webpack_require__(85),concat=__webpack_require__(59),defer=__webpack_require__(87),empty=__webpack_require__(22),isObject=__webpack_require__(89),from=__webpack_require__(23);function forkJoin(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=arguments[_i];if(1===sources.length){var first_1=sources[0];if(Object(isArray.a)(first_1))return forkJoinInternal(first_1,null);if(Object(isObject.a)(first_1)&&Object.getPrototypeOf(first_1)===Object.prototype){var keys=Object.keys(first_1);return forkJoinInternal(keys.map((function(key){return first_1[key]})),keys)}}if("function"==typeof sources[sources.length-1]){var resultSelector_1=sources.pop();return forkJoinInternal(sources=1===sources.length&&Object(isArray.a)(sources[0])?sources[0]:sources,null).pipe(Object(map.a)((function(args){return resultSelector_1.apply(void 0,args)})))}return forkJoinInternal(sources,null)}function forkJoinInternal(sources,keys){return new Observable.a((function(subscriber){var len=sources.length;if(0!==len)for(var values=new Array(len),completed=0,emitted=0,_loop_1=function(i){var source=Object(from.a)(sources[i]),hasValue=!1;subscriber.add(source.subscribe({next:function(value){hasValue||(hasValue=!0,emitted++),values[i]=value},error:function(err){return subscriber.error(err)},complete:function(){++completed!==len&&hasValue||(emitted===len&&subscriber.next(keys?keys.reduce((function(result,key,i){return result[key]=values[i],result}),{}):values),subscriber.complete())}}))},i=0;i<len;i++)_loop_1(i);else subscriber.complete()}))}var isFunction=__webpack_require__(46);function fromEvent(target,eventName,options,resultSelector){return Object(isFunction.a)(options)&&(resultSelector=options,options=void 0),resultSelector?fromEvent(target,eventName,options).pipe(Object(map.a)((function(args){return Object(isArray.a)(args)?resultSelector.apply(void 0,args):resultSelector(args)}))):new Observable.a((function(subscriber){!function setupSubscription(sourceObj,eventName,handler,subscriber,options){var unsubscribe;if(function(sourceObj){return sourceObj&&"function"==typeof sourceObj.addEventListener&&"function"==typeof sourceObj.removeEventListener}(sourceObj)){var source_1=sourceObj;sourceObj.addEventListener(eventName,handler,options),unsubscribe=function(){return source_1.removeEventListener(eventName,handler,options)}}else if(function(sourceObj){return sourceObj&&"function"==typeof sourceObj.on&&"function"==typeof sourceObj.off}(sourceObj)){var source_2=sourceObj;sourceObj.on(eventName,handler),unsubscribe=function(){return source_2.off(eventName,handler)}}else if(function(sourceObj){return sourceObj&&"function"==typeof sourceObj.addListener&&"function"==typeof sourceObj.removeListener}(sourceObj)){var source_3=sourceObj;sourceObj.addListener(eventName,handler),unsubscribe=function(){return source_3.removeListener(eventName,handler)}}else{if(!sourceObj||!sourceObj.length)throw new TypeError("Invalid event target");for(var i=0,len=sourceObj.length;i<len;i++)setupSubscription(sourceObj[i],eventName,handler,subscriber,options)}subscriber.add(unsubscribe)}(target,eventName,(function(e){arguments.length>1?subscriber.next(Array.prototype.slice.call(arguments)):subscriber.next(e)}),subscriber,options)}))}function fromEventPattern(addHandler,removeHandler,resultSelector){return resultSelector?fromEventPattern(addHandler,removeHandler).pipe(Object(map.a)((function(args){return Object(isArray.a)(args)?resultSelector.apply(void 0,args):resultSelector(args)}))):new Observable.a((function(subscriber){var retValue,handler=function(){for(var e=[],_i=0;_i<arguments.length;_i++)e[_i]=arguments[_i];return subscriber.next(1===e.length?e[0]:e)};try{retValue=addHandler(handler)}catch(err){return void subscriber.error(err)}if(Object(isFunction.a)(removeHandler))return function(){return removeHandler(handler,retValue)}}))}function generate(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler){var resultSelector,initialState;if(1==arguments.length){var options=initialStateOrOptions;initialState=options.initialState,condition=options.condition,iterate=options.iterate,resultSelector=options.resultSelector||identity.a,scheduler=options.scheduler}else void 0===resultSelectorOrObservable||Object(isScheduler.a)(resultSelectorOrObservable)?(initialState=initialStateOrOptions,resultSelector=identity.a,scheduler=resultSelectorOrObservable):(initialState=initialStateOrOptions,resultSelector=resultSelectorOrObservable);return new Observable.a((function(subscriber){var state=initialState;if(scheduler)return scheduler.schedule(generate_dispatch,0,{subscriber:subscriber,iterate:iterate,condition:condition,resultSelector:resultSelector,state:state});for(;;){if(condition){var conditionResult=void 0;try{conditionResult=condition(state)}catch(err){return void subscriber.error(err)}if(!conditionResult){subscriber.complete();break}}var value=void 0;try{value=resultSelector(state)}catch(err){return void subscriber.error(err)}if(subscriber.next(value),subscriber.closed)break;try{state=iterate(state)}catch(err){return void subscriber.error(err)}}}))}function generate_dispatch(state){var subscriber=state.subscriber,condition=state.condition;if(!subscriber.closed){if(state.needIterate)try{state.state=state.iterate(state.state)}catch(err){return void subscriber.error(err)}else state.needIterate=!0;if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state)}catch(err){return void subscriber.error(err)}if(!conditionResult)return void subscriber.complete();if(subscriber.closed)return}var value;try{value=state.resultSelector(state.state)}catch(err){return void subscriber.error(err)}if(!subscriber.closed&&(subscriber.next(value),!subscriber.closed))return this.schedule(state)}}function iif(condition,trueResult,falseResult){return void 0===trueResult&&(trueResult=empty.a),void 0===falseResult&&(falseResult=empty.a),Object(defer.a)((function(){return condition()?trueResult:falseResult}))}var isNumeric=__webpack_require__(54);function interval(period,scheduler){return void 0===period&&(period=0),void 0===scheduler&&(scheduler=scheduler_async.a),(!Object(isNumeric.a)(period)||period<0)&&(period=0),scheduler&&"function"==typeof scheduler.schedule||(scheduler=scheduler_async.a),new Observable.a((function(subscriber){return subscriber.add(scheduler.schedule(interval_dispatch,period,{subscriber:subscriber,counter:0,period:period})),subscriber}))}function interval_dispatch(state){var subscriber=state.subscriber,counter=state.counter,period=state.period;subscriber.next(counter),this.schedule({subscriber:subscriber,counter:counter+1,period:period},period)}var merge=__webpack_require__(119),NEVER=new Observable.a(noop.a);function never(){return NEVER}var of=__webpack_require__(65);function onErrorResumeNext(){for(var sources=[],_i=0;_i<arguments.length;_i++)sources[_i]=arguments[_i];if(0===sources.length)return empty.a;var first=sources[0],remainder=sources.slice(1);return 1===sources.length&&Object(isArray.a)(first)?onErrorResumeNext.apply(void 0,first):new Observable.a((function(subscriber){var subNext=function(){return subscriber.add(onErrorResumeNext.apply(void 0,remainder).subscribe(subscriber))};return Object(from.a)(first).subscribe({next:function(value){subscriber.next(value)},error:subNext,complete:subNext})}))}function pairs(obj,scheduler){return scheduler?new Observable.a((function(subscriber){var keys=Object.keys(obj),subscription=new Subscription.a;return subscription.add(scheduler.schedule(pairs_dispatch,0,{keys:keys,index:0,subscriber:subscriber,subscription:subscription,obj:obj})),subscription})):new Observable.a((function(subscriber){for(var keys=Object.keys(obj),i=0;i<keys.length&&!subscriber.closed;i++){var key=keys[i];obj.hasOwnProperty(key)&&subscriber.next([key,obj[key]])}subscriber.complete()}))}function pairs_dispatch(state){var keys=state.keys,index=state.index,subscriber=state.subscriber,subscription=state.subscription,obj=state.obj;if(!subscriber.closed)if(index<keys.length){var key=keys[index];subscriber.next([key,obj[key]]),subscription.add(this.schedule({keys:keys,index:index+1,subscriber:subscriber,subscription:subscription,obj:obj}))}else subscriber.complete()}var not=__webpack_require__(132),subscribeTo=__webpack_require__(60),filter=__webpack_require__(32);function partition(source,predicate,thisArg){return[Object(filter.a)(predicate,thisArg)(new Observable.a(Object(subscribeTo.a)(source))),Object(filter.a)(Object(not.a)(predicate,thisArg))(new Observable.a(Object(subscribeTo.a)(source)))]}var race=__webpack_require__(120);function range(start,count,scheduler){return void 0===start&&(start=0),new Observable.a((function(subscriber){void 0===count&&(count=start,start=0);var index=0,current=start;if(scheduler)return scheduler.schedule(range_dispatch,0,{index:index,count:count,start:start,subscriber:subscriber});for(;;){if(index++>=count){subscriber.complete();break}if(subscriber.next(current++),subscriber.closed)break}}))}function range_dispatch(state){var start=state.start,index=state.index,count=state.count,subscriber=state.subscriber;index>=count?subscriber.complete():(subscriber.next(start),subscriber.closed||(state.index=index+1,state.start=start+1,this.schedule(state)))}var throwError=__webpack_require__(84),timer=__webpack_require__(121);function using(resourceFactory,observableFactory){return new Observable.a((function(subscriber){var resource,result;try{resource=resourceFactory()}catch(err){return void subscriber.error(err)}try{result=observableFactory(resource)}catch(err){return void subscriber.error(err)}var subscription=(result?Object(from.a)(result):empty.a).subscribe(subscriber);return function(){subscription.unsubscribe(),resource&&resource.unsubscribe()}}))}var zip=__webpack_require__(88),scheduled=__webpack_require__(127),config=__webpack_require__(27);__webpack_require__.d(__webpack_exports__,"Observable",(function(){return Observable.a})),__webpack_require__.d(__webpack_exports__,"ConnectableObservable",(function(){return ConnectableObservable.a})),__webpack_require__.d(__webpack_exports__,"GroupedObservable",(function(){return groupBy.a})),__webpack_require__.d(__webpack_exports__,"observable",(function(){return observable.a})),__webpack_require__.d(__webpack_exports__,"Subject",(function(){return Subject.a})),__webpack_require__.d(__webpack_exports__,"BehaviorSubject",(function(){return BehaviorSubject.a})),__webpack_require__.d(__webpack_exports__,"ReplaySubject",(function(){return ReplaySubject.a})),__webpack_require__.d(__webpack_exports__,"AsyncSubject",(function(){return AsyncSubject.a})),__webpack_require__.d(__webpack_exports__,"asap",(function(){return asap.a})),__webpack_require__.d(__webpack_exports__,"asapScheduler",(function(){return asap.b})),__webpack_require__.d(__webpack_exports__,"async",(function(){return scheduler_async.a})),__webpack_require__.d(__webpack_exports__,"asyncScheduler",(function(){return scheduler_async.b})),__webpack_require__.d(__webpack_exports__,"queue",(function(){return queue.a})),__webpack_require__.d(__webpack_exports__,"queueScheduler",(function(){return queue.b})),__webpack_require__.d(__webpack_exports__,"animationFrame",(function(){return animationFrame})),__webpack_require__.d(__webpack_exports__,"animationFrameScheduler",(function(){return animationFrameScheduler})),__webpack_require__.d(__webpack_exports__,"VirtualTimeScheduler",(function(){return VirtualTimeScheduler_VirtualTimeScheduler})),__webpack_require__.d(__webpack_exports__,"VirtualAction",(function(){return VirtualTimeScheduler_VirtualAction})),__webpack_require__.d(__webpack_exports__,"Scheduler",(function(){return Scheduler.a})),__webpack_require__.d(__webpack_exports__,"Subscription",(function(){return Subscription.a})),__webpack_require__.d(__webpack_exports__,"Subscriber",(function(){return Subscriber.a})),__webpack_require__.d(__webpack_exports__,"Notification",(function(){return Notification.a})),__webpack_require__.d(__webpack_exports__,"NotificationKind",(function(){return Notification.b})),__webpack_require__.d(__webpack_exports__,"pipe",(function(){return pipe.a})),__webpack_require__.d(__webpack_exports__,"noop",(function(){return noop.a})),__webpack_require__.d(__webpack_exports__,"identity",(function(){return identity.a})),__webpack_require__.d(__webpack_exports__,"isObservable",(function(){return isObservable})),__webpack_require__.d(__webpack_exports__,"ArgumentOutOfRangeError",(function(){return ArgumentOutOfRangeError.a})),__webpack_require__.d(__webpack_exports__,"EmptyError",(function(){return EmptyError.a})),__webpack_require__.d(__webpack_exports__,"ObjectUnsubscribedError",(function(){return ObjectUnsubscribedError.a})),__webpack_require__.d(__webpack_exports__,"UnsubscriptionError",(function(){return UnsubscriptionError.a})),__webpack_require__.d(__webpack_exports__,"TimeoutError",(function(){return TimeoutError.a})),__webpack_require__.d(__webpack_exports__,"bindCallback",(function(){return bindCallback})),__webpack_require__.d(__webpack_exports__,"bindNodeCallback",(function(){return bindNodeCallback})),__webpack_require__.d(__webpack_exports__,"combineLatest",(function(){return combineLatest.b})),__webpack_require__.d(__webpack_exports__,"concat",(function(){return concat.a})),__webpack_require__.d(__webpack_exports__,"defer",(function(){return defer.a})),__webpack_require__.d(__webpack_exports__,"empty",(function(){return empty.b})),__webpack_require__.d(__webpack_exports__,"forkJoin",(function(){return forkJoin})),__webpack_require__.d(__webpack_exports__,"from",(function(){return from.a})),__webpack_require__.d(__webpack_exports__,"fromEvent",(function(){return fromEvent})),__webpack_require__.d(__webpack_exports__,"fromEventPattern",(function(){return fromEventPattern})),__webpack_require__.d(__webpack_exports__,"generate",(function(){return generate})),__webpack_require__.d(__webpack_exports__,"iif",(function(){return iif})),__webpack_require__.d(__webpack_exports__,"interval",(function(){return interval})),__webpack_require__.d(__webpack_exports__,"merge",(function(){return merge.a})),__webpack_require__.d(__webpack_exports__,"never",(function(){return never})),__webpack_require__.d(__webpack_exports__,"of",(function(){return of.a})),__webpack_require__.d(__webpack_exports__,"onErrorResumeNext",(function(){return onErrorResumeNext})),__webpack_require__.d(__webpack_exports__,"pairs",(function(){return pairs})),__webpack_require__.d(__webpack_exports__,"partition",(function(){return partition})),__webpack_require__.d(__webpack_exports__,"race",(function(){return race.a})),__webpack_require__.d(__webpack_exports__,"range",(function(){return range})),__webpack_require__.d(__webpack_exports__,"throwError",(function(){return throwError.a})),__webpack_require__.d(__webpack_exports__,"timer",(function(){return timer.a})),__webpack_require__.d(__webpack_exports__,"using",(function(){return using})),__webpack_require__.d(__webpack_exports__,"zip",(function(){return zip.b})),__webpack_require__.d(__webpack_exports__,"scheduled",(function(){return scheduled.a})),__webpack_require__.d(__webpack_exports__,"EMPTY",(function(){return empty.a})),__webpack_require__.d(__webpack_exports__,"NEVER",(function(){return NEVER})),__webpack_require__.d(__webpack_exports__,"config",(function(){return config.a}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),main_service_1=__webpack_require__(15),settings_service_1=__webpack_require__(18),authSettings_model_1=__webpack_require__(161),jwt_decode_1=__webpack_require__(162),sha256_1=__webpack_require__(386),fetchWithTimeout_1=__webpack_require__(387),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19);window.moduleIds=[],window.moduleIds.push("$$APP_PWD_PART1$$"),window.moduleIds.push("$$APP_PWD_PART2$$"),window.moduleIds.push("$$APP_PWD_PART3$$"),window.moduleIds.push("$$APP_PWD_PART4$$");class AuthService{constructor(){this.SSO_LOGIN_POPUP_WINDOW_NAME="Single Sign-On Login",this.token=null,this.appToken=null,this.login=null,this.userId=null,this.jidIm=null,this.jidTel=null,this.jidPwd=null,this.xmppDomain=null,this.companyId=null,this.firstUseNewVersion=!1,this.initialized=!1,this.isGuest=!1,this.authType="RAINBOW",this.fromSDK=!1,this.authSettings=null,this.browserFingerprint=null,this.visibilityHandlerSubscription=null,this.renewTokenInterval=null,this.renewAppTokenInterval=null,this.sdkHostForced=null,this.win=window,this.globalSSOSettings=null,this.rxSubject=new rxjs_1.Subject,this.logger=logger_service_1.LoggerService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance();const storedVersion=localStorage.getItem("version"),storedMajorVersion=this.getMajorVersion(storedVersion),currentMajorVersion=this.getMajorVersion(this.win.version);config.appModuleKey||(config.appModuleKey=this.win.moduleIds?this.win.moduleIds.join(""):"default"),storedMajorVersion!==currentMajorVersion&&(this.firstUseNewVersion=!0),localStorage.setItem("version",this.win.version),this.getServerApiUrls()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.authService||(win.rainbow.authService=new AuthService),win.rainbow.authService}subscribe(handler){return this.rxSubject.subscribe(handler)}emitEvent(eventName){this.rxSubject.next(event_model_1.RBEvent.create(eventName))}async logon(login,password,rememberMe=!0,authSettings=null){try{if(-1===login.indexOf("@"))throw this.createError(`Wrong login format '${login}'`,"errorUnauthorized",401500,void 0,!0);let url=config.restServerUrl+"/api/rainbow/authentication/v1.0/login";authSettings&&("RAINBOW"===authSettings.type?url=authSettings.loginUrl:authSettings.safetyUrl&&(url=authSettings.safetyUrl,this.authType=authSettings.type));const headers={};headers.Authorization="Basic "+window.btoa(unescape(encodeURIComponent(login+":"+password))),headers.Accept="application/json",this.setInformationHeaders(headers);let clientKey=null;config.rainbowApiClientKey&&(clientKey=config.rainbowApiClientKey+":"+sha256_1.SHA256(config.appModuleKey+password)),this.fromSDK&&this.appToken&&this.appToken.appID&&(clientKey=this.appToken.appID+":"+sha256_1.SHA256(this.appToken.appSecret+password)),clientKey&&(headers["x-rainbow-app-auth"]="Basic "+window.btoa(unescape(encodeURIComponent(clientKey))));const response=await fetchWithTimeout_1.default(url,{method:"GET",headers:headers,credentials:"include"});if(!response.ok)throw response;const responseData=await response.json();this.token=responseData.token,this.extractUserInfo(responseData.loggedInUser),rememberMe?(this.logger.info("[AuthService] Store authentication info in local storage"),localStorage.setItem("login",this.login),localStorage.setItem("id",this.userId),localStorage.setItem("token",this.token),localStorage.setItem("authType",this.authType)):this.removeCredentials(),localStorage.setItem("firstUse","false"),this.logger.info(`[AuthService] Authenticate with ${login} -- SUCCESS`),this.registerEventsHandler(),this.startTokenSurvey()}catch(error){let errorMessage=`authenticate for login ${login} -- FAILURE -- `;if(error.localError)throw this.logger.error(`[AuthService] ${errorMessage} ${error}`),error;let errorStatus="errorUltimateUnknownError",errorCode=null,errorData=null;if(0===error.status||-1===error.status)errorMessage+="No server response",errorStatus="errorNoServerResponse";else{const responseData=await error.json();401===error.status?(this.removeCredentials(),errorMessage+=responseData.errorDetails,errorCode=responseData.errorDetailsCode,401500===responseData.errorDetailsCode?errorStatus="errorUnauthorized":401501===responseData.errorDetailsCode&&(errorStatus="errorLoginForbidden",responseData.errorDetailsData&&(errorData={delay:responseData.errorDetailsData.forbiddenDelay}))):500===error.status&&(errorMessage+=responseData.errorDetails,errorStatus="errorInternalServerError")}throw this.logger.error("[AuthService] "+errorMessage),this.createError(errorMessage,errorStatus,errorCode,errorData)}}async logonWithToken(token=null){try{if(this.logger.info("[authService] logonWithToken -- "+token),token||(token=localStorage.getItem("token")),!token)throw new Error("No token");const decodedToken=jwt_decode_1.default(token);this.token=token,this.login=decodedToken.user.loginEmail,this.userId=decodedToken.user.id,this.authType="RAINBOW",decodedToken.saml&&(this.authType="SAML"),decodedToken.oidc&&(this.authType="OIDC"),localStorage.setItem("token",this.token),localStorage.setItem("login",this.login),localStorage.setItem("id",this.userId),localStorage.setItem("authType",this.authType),await new Promise(res=>setTimeout(res,2e3)),await this.getUserData(),await this.startTokenSurvey(),this.authSettings=await this.getUserAuthenticationSettings(this.login),this.registerEventsHandler()}catch(error){const errorMessage=error?error.message:"Unknown error";throw"No token"===errorMessage?this.logger.debug("[AuthService] AuthenticateWithToken -- No available token"):this.logger.error("[AuthService] AuthenticateWithToken -- FAILURE -- "+errorMessage),new Error(errorMessage)}}async sdkLogOn(login,password,host,appToken,token){return this.sdkHostForced=host,this.appToken=appToken,this.fromSDK=!0,this.getServerApiUrls(),token?this.logonWithToken(token):this.logon(login,password,!1)}async sdkSetRenewedToken(token=null){try{return this.logger.debug("[AuthService] sdkSetRenewedToken with "+token),this.token=token,await new Promise(res=>setTimeout(res,2e3)),localStorage.setItem("token",this.token),this.startUserTokenSurvey(),void this.logger.debug("[AuthService] sdkSetRenewedToken -- reStartTokenSurvey -- SUCCESS")}catch(error){const newError=error&&error.message?error:new Error("Unknown error");throw this.logger.error("[AuthService] StartTokenSurvey -- FAILURE -- "+newError.message),newError}}logout(){return this.removeCredentials(),this.authSettings&&this.authSettings.logoutUrl&&"RAINBOW"!==this.authType?(this.logger.info("[authService] Logout -- "+this.authType),this.authSettings.setParameter("token",()=>this.token),this.authSettings.logoutUrl):(this.logger.info("[AuthService] Logout -- SUCCESS"),null)}async getGlobalSSOConfiguration(){try{const defaultLoginUrl=config.restServerUrl+"/api/rainbow/authentication/v1.0/login",url=config.restServerUrl+"/api/rainbow/authentication/v1.0/global-sso",headers={};this.setInformationHeaders(headers);const response=await fetchWithTimeout_1.default(url,{method:"GET",headers:headers});if(!response.ok)throw response;this.logger.info("[AuthService] getGlobalSSOConfiguration -- SUCCESS");let responseData=await response.json(),asipSanteConfig=null;if(responseData=responseData.data,responseData&&responseData.length&&responseData.forEach(ssoConfig=>{this.logger.info("[AuthService] getGlobalSSOConfiguration -- type: "+ssoConfig.type),"ASIP_SANTE"===ssoConfig.type&&(asipSanteConfig=ssoConfig)}),asipSanteConfig){const authSettings=authSettings_model_1.AuthSettings.createFromData([asipSanteConfig]);authSettings.setParameter("x-rainbow-app-auth",challenge=>this.getRainbowAppAuth(config.rainbowApiClientKey,config.appModuleKey,challenge)),!window||-1===window.location.href.indexOf("localhost")&&-1===window.location.href.indexOf("openrainbow.red")||authSettings.setParameter("safetyUrl",()=>defaultLoginUrl),this.globalSSOSettings=authSettings}return this.globalSSOSettings}catch(error){let errorMessage="getGlobalSSOConfiguration failure : ",errorStatus="errorUltimateUnknownError";if(0===error.status||-1===error.status)errorMessage+="No server response",errorStatus="errorNoServerResponse";else{const responseData=await error.json();400===error.status||404===error.status?(errorMessage+=responseData.errorDetails,errorStatus="errorUnauthorized"):500===error.status&&(errorMessage+=responseData.errorDetails,errorStatus="errorInternalServerError")}this.logger.info("[authService] "+errorMessage);const newError=new Error(errorMessage);throw newError.details=errorStatus,newError}}async getUserAuthenticationSettings(login=null,inAppAuth=!1){try{const defaultLoginUrl=config.restServerUrl+"/api/rainbow/authentication/v1.0/login";if(config.disableSSO&&(inAppAuth=!0),inAppAuth)return authSettings_model_1.AuthSettings.createFromData([{type:"RAINBOW",loginUrl:defaultLoginUrl}]);const url=`${config.restServerUrl}/api/rainbow/authentication/v1.0/urls?uid=${encodeURIComponent(login)}`,headers={};this.setInformationHeaders(headers);const response=await fetchWithTimeout_1.default(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json(),authSettings=authSettings_model_1.AuthSettings.createFromData(responseData.data);return authSettings.setParameter("uid",()=>login),authSettings.setParameter("x-rainbow-app-auth",challenge=>this.getRainbowAppAuth(config.rainbowApiClientKey,config.appModuleKey,challenge)),!window||-1===window.location.href.indexOf("localhost")&&-1===window.location.href.indexOf("openrainbow.red")||authSettings.setParameter("safetyUrl",()=>defaultLoginUrl),authSettings}catch(error){let errorMessage='authenticate for login "'+login+'" failure : ',errorStatus="errorUltimateUnknownError";if(0===error.status||-1===error.status)errorMessage+="No server response",errorStatus="errorNoServerResponse";else{const responseData=await error.json();400===error.status||404===error.status?(errorMessage+=responseData.errorDetails,errorStatus="errorUnauthorized"):500===error.status&&(errorMessage+=responseData.errorDetails,errorStatus="errorInternalServerError")}this.logger.info("[authService] "+errorMessage);const newError=new Error(errorMessage);throw newError.details=errorStatus,newError}}removeCredentials(){this.authType="RAINBOW",localStorage.removeItem("id"),localStorage.removeItem("token"),localStorage.removeItem("authType"),localStorage.removeItem("token"),this.isGuest&&(localStorage.removeItem("login"),this.isGuest=!1),this.resetUserEnvironment(),this.logger.debug("[AuthService] removeCredentials -- SUCCESS")}resetUserEnvironment(){config.defaultEnvironment&&(config.xmpp.currentServer=config.defaultEnvironment,config.xmpp.server=config.defaultEnvironment,config.webservices.currentServer=config.defaultEnvironment,config.webservices.server=config.defaultEnvironment)}getRequestHeader(accept){return{Authorization:"Bearer "+this.token,Accept:accept||"application/json"}}getRequestHeaderWithRange(range){const header=this.getRequestHeader();return header.Range=range,header}getPostHeader(contentType=null,accept=null){const header=this.getRequestHeader(accept);return header["Content-Type"]=contentType||"application/json",header}getPostHeaderWithRange(range,contentType){const header=this.getPostHeader(contentType);return header["Content-Range"]=range,header}setInformationHeaders(headers){headers["x-rainbow-client"]=this.getInformationHeadersApp(),headers["x-rainbow-client-version"]=this.getInformationHeadersAppVersion()}getInformationHeadersApp(){return"web_sdk"}getInformationHeadersAppVersion(){const winAsAny=window;return winAsAny.sdkversion?winAsAny.sdkversion:"9.9.99"}async startTokenSurvey(){try{await this.startAppTokenSurvey(),await this.startUserTokenSurvey(),this.logger.debug("[AuthService] StartTokenSurvey -- SUCCESS")}catch(error){const newError=error&&error.message?error:new Error("Unknown error");throw this.logger.error("[AuthService] StartTokenSurvey -- FAILURE -- "+newError.message),newError}}stopTokenSurvey(){this.renewTokenInterval&&clearTimeout(this.renewTokenInterval),this.renewAppTokenInterval&&clearTimeout(this.renewAppTokenInterval),this.logger.debug("[AuthService] StopTokenSurvey -- SUCCESS")}getRainbowAppAuth(appId,appSecret,password=null){return window.btoa(unescape(encodeURIComponent((appId||"")+":"+sha256_1.SHA256((appSecret||"")+(password||"")))))}registerEventsHandler(){this.visibilityHandlerSubscription&&this.visibilityHandlerSubscription.unsubscribe(),this.visibilityHandlerSubscription=this.mainService.appVisible.subscribe(visible=>{visible&&this.startTokenSurvey()})}getMajorVersion(appVersion){if(!appVersion)return null;const result=/\d+\.\d+/g.exec(appVersion);return result&&result.length>0?result[0]:null}getServerApiUrls(){const server=localStorage.getItem("server");server&&"null"!==server&&"undefined"!==server?(this.logger.debug("[AuthService] getServerApiUrls -- Find server data from local storage -- "+server),config.xmpp.currentServer=config.webservices.currentServer=server,"openrainbow.net"===server&&(config.appModuleKey=config.dotNetAppModuleKey,config.rainbowApiClientKey=config.dotNetRainbowApiClientKey,config.multiEnvServer="openrainbow.net"),"openrainbow.com"===server&&(config.appModuleKey=config.dotComAppModuleKey,config.rainbowApiClientKey=config.dotComRainbowApiClientKey,config.multiEnvServer="openrainbow.com"),"openrainbow.red"===server&&(config.appModuleKey=config.dotComAppModuleKey,config.rainbowApiClientKey=config.dotComRainbowApiClientKey,config.multiEnvServer="openrainbow.com"),config.defaultEnvironment||(config.defaultEnvironment=config.xmpp.currentServer)):this.sdkHostForced?(config.xmpp.currentServer=config.webservices.currentServer=this.sdkHostForced,this.logger.debug("[AuthService] getServerApiUrls -- Use forced sdk server -- "+this.sdkHostForced)):config.xmpp&&(config.xmpp.currentServer=config.xmpp.server,config.webservices.currentServer=config.webservices.server,this.logger.debug("[AuthService] getServerApiUrls -- Use default config server -- "+config.xmpp.server)),config.webservices&&(config.restServerUrl=`${config.webservices.protocol}://${config.webservices.currentServer}:${config.webservices.port}`)}async startAppTokenSurvey(){if(!this.appToken||"string"!=typeof this.appToken||!this.appToken.length)return void this.logger.info("[AuthService] startAppTokenSurvey -- No application token.");const decodedToken=jwt_decode_1.default(this.appToken),tokenExpirationTimestamp=1e3*decodedToken.exp,expirationDate=new Date(tokenExpirationTimestamp),tokenExpirationDuration=tokenExpirationTimestamp-(new Date).valueOf();if(this.renewAppTokenInterval&&clearTimeout(this.renewAppTokenInterval),this.logger.info("[AuthService] startAppTokenSurvey -- Extract application token info (countRenewed: "+decodedToken.countRenewed+", maxTokenRenew: "+decodedToken.maxTokenRenew+")"),tokenExpirationDuration<0)return this.logger.info("[AuthService] startAppTokenSurvey -- Application token has already expired, re-new it immediately"),void await this.renewAppToken();if(tokenExpirationDuration<3e4)return this.logger.info("[AuthService] startAppTokenSurvey -- Application token will expire in less 5 minutes, re-new it immediately"),void await this.renewAppToken();const usedExpirationDuration=tokenExpirationDuration-24e3;this.logger.info("[authService] startAppTokenSurvey -- Start application token survey (expirationDate: "+expirationDate+" tokenExpirationDuration: "+tokenExpirationDuration+"ms usedExpirationDuration: "+usedExpirationDuration+"ms)"),this.renewAppTokenInterval=setTimeout(()=>{this.renewAppToken()},usedExpirationDuration)}async renewAppToken(){try{const url=config.restServerUrl+"/api/rainbow/applications/v1.0/authentication/renew",response=await fetchWithTimeout_1.default(url,{method:"GET",headers:this.getRequestHeader()});if(!response.ok)throw response;const responseData=await response.json();this.logger.info("[AuthService] renewAppToken -- Renew application token success"),this.appToken=responseData.token,localStorage.setItem("appToken",this.appToken),this.emitEvent("ON_APP_TOKEN_RENEW"),this.startAppTokenSurvey()}catch(error){this.renewAppTokenInterval&&clearTimeout(this.renewAppTokenInterval);const responseData=await error.json(),errorMessage="Renew application token failure -- "+(responseData&&responseData.errorDetails?responseData.errorDetails:"no details"),newError=new Error(errorMessage);throw newError.details="APP_TOKEN_EXPIRED",this.logger.error("[AuthService] renewAppToken -- FAILURE --"+errorMessage),this.emitEvent("ON_APP_TOKEN_EXPIRE"),newError}}async startUserTokenSurvey(){if(!this.token||"string"!=typeof this.token||!this.token.length)return void this.logger.info("[AuthService] No token.");const decodedToken=jwt_decode_1.default(this.token),tokenExpirationTimestamp=1e3*decodedToken.exp,halfTokenDuration=(tokenExpirationTimestamp-1e3*decodedToken.iat)/2,expirationDate=new Date(tokenExpirationTimestamp),tokenExpirationDuration=tokenExpirationTimestamp-(new Date).valueOf();if(this.renewTokenInterval&&clearTimeout(this.renewTokenInterval),this.logger.info("[AuthService] startUserTokenSurvey -- Extract auth token info (countRenewed: "+decodedToken.countRenewed+", maxTokenRenew: "+decodedToken.maxTokenRenew+", tokenExpirationDuration: "+tokenExpirationDuration+")"),tokenExpirationDuration<0){this.logger.info("[AuthService] startUserTokenSurvey --  Auth token has already expired send ON_AUTH_TOKEN_EXPIRE event"),this.token=null,this.emitEvent("ON_AUTH_TOKEN_EXPIRE");const error=new Error("Token expired");throw error.details="AUTH_TOKEN_EXPIRED",error}if(tokenExpirationDuration<halfTokenDuration)return this.logger.info("[AuthService] startUserTokenSurvey -- Auth token will expire in less "+halfTokenDuration/1e3+" seconds"),this.emitEvent("ON_AUTH_TOKEN_WILL_EXPIRE"),this.logger.info("[AuthService] startUserTokenSurvey send ON_AUTH_TOKEN_WILL_EXPIRE event"),void(void 0===decodedToken.oauth&&(this.logger.info("[AuthService] startUserTokenSurvey -- try to re-new it immediately"),await this.renewAuthToken()));const usedExpirationDuration=tokenExpirationDuration-halfTokenDuration;this.logger.info("[AuthService] startUserTokenSurvey -- Start auth token survey (expirationDate: "+expirationDate+" tokenExpirationDuration: "+tokenExpirationDuration+"ms usedExpirationDuration: "+usedExpirationDuration+"ms)"),this.renewTokenInterval=setTimeout(()=>{void 0===decodedToken.oauth?this.renewAuthToken():this.startTokenSurvey()},usedExpirationDuration)}async renewAuthToken(restartTokenSurvey=!1){try{const url=config.restServerUrl+"/api/rainbow/authentication/v1.0/renew",response=await fetchWithTimeout_1.default(url,{method:"GET",headers:this.getRequestHeader()});if(!response.ok)throw response;const responseData=await response.json();this.logger.info("[AuthService] renewAuthToken -- Renew authentication token success"),this.token=responseData.token,localStorage.setItem("token",this.token),this.emitEvent("ON_AUTH_TOKEN_RENEW"),restartTokenSurvey&&!0!==restartTokenSurvey||this.startTokenSurvey()}catch(error){this.renewTokenInterval&&clearTimeout(this.renewTokenInterval);let errorDetails="";if(error.json){const responseData=await error.json();errorDetails=responseData&&responseData.errorDetails?responseData.errorDetails:"no details";const errorMessage="Renew authentication token failure -- "+errorDetails,newError=new Error(errorMessage);throw newError.details="AUTH_TOKEN_EXPIRED",this.logger.error("[AuthService] renewAuthToken -- FAILURE -- "+errorMessage),this.emitEvent("ON_AUTH_TOKEN_EXPIRE"),newError}{const errorMessage="Renew authentication token failure -- "+error.message;this.logger.error("[AuthService] renewAuthToken -- FAILURE -- "+errorMessage)}}}async getUserData(){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.userId}`,response=await fetchWithTimeout_1.default(url,{method:"GET",headers:this.getRequestHeader()});if(!response.ok)throw response;const responseData=await response.json();this.extractUserInfo(responseData.data)}catch(error){if(this.removeCredentials(),error instanceof Response)throw new Error("Wrong token -- "+error.statusText);throw new Error("Wrong token -- "+error.message)}}async getUserEnvironments(login){try{if(!config.multiEnvServer)return[{environmentApiUrl:"https://"+config.xmpp.currentServer}];config.defaultEnvironment||(config.defaultEnvironment=config.xmpp.server);const url=config.webservices.protocol+"://"+config.multiEnvServer+":"+config.webservices.port+"/api/rainbow/multienvironments/v1.0/environments?loginEmail="+encodeURIComponent(login),response=await fetchWithTimeout_1.default(url,{method:"GET"});if(!response.ok)throw response;return(await response.json()).data}catch(error){let errorMessage='getUserEnvironments for login "'+login+'" failure : ';if(0===error.status||-1===error.status)errorMessage+="No server response";else if(500===error.status){errorMessage+=(await error.json()).errorDetails}return this.logger.info("[authService] "+errorMessage),this.logger.info("[authService] getUserEnvironment -- continue with default environment"),null}}async getCompanySAMLConfiguration(companyId){try{const url=`${config.restServerUrl}/api/rainbow/authentication/v1.0/saml/${companyId}/metadata.xml`,response=await fetchWithTimeout_1.default(url,{method:"GET",headers:this.getRequestHeader()});if(!response.ok)throw response;return this.logger.debug("[AuthService] getCompanySAMLConfiguration -- SUCCESS"),await response.text()}catch(error){throw this.logger.error("[AuthService] getCompanySAMLConfiguration -- FAILURE -- "+JSON.stringify(error)),new Error("getCompanySAMLConfiguration failure")}}async getFingerPrint(){if(!this.browserFingerprint){const browserTests=["audio","availableScreenResolution","canvas","colorDepth","cookies","cpuClass","deviceDpi","doNotTrack","indexedDb","installedFonts","language","localStorage","pixelRatio","platform","plugins","processorCores","screenResolution","sessionStorage","timezoneOffset","touchSupport","userAgent","webGl"];this.browserFingerprint=await imprint.test(browserTests)}return this.browserFingerprint}handleUserLanguage(){const userServerLanguage=this.loggedInUser.language;userServerLanguage&&this.settingsService.setAppliLangageCodeFromServer(userServerLanguage)}createError(message,details=null,detailsCode=null,detailsData=null,localError=!1){const error=new Error(message);return error.details=details,error.detailsCode=detailsCode,error.detailsData=detailsData,error.localError=localError,error}extractUserInfo(responseData){this.loggedInUser=responseData,this.login=this.loggedInUser.loginEmail,this.userId=this.loggedInUser.id,this.jidIm=this.loggedInUser.jid_im,this.jidPwd=this.loggedInUser.jid_password,this.jidTel=this.loggedInUser.jid_tel,this.initialized=this.loggedInUser.isInitialized,this.isGuest=this.loggedInUser.guestMode,this.companyId=this.loggedInUser.companyId,this.xmppDomain=this.jidIm.split("@")[1],this.handleUserLanguage()}}exports.AuthService=AuthService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),logger_service_1=__webpack_require__(4),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),randomString_1=__webpack_require__(163),main_service_1=__webpack_require__(15),anonymizer_1=__webpack_require__(66),xmlParser_1=__webpack_require__(139);class XmppService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.rxConnectionSubject=new rxjs_1.Subject,this.rxContactSubject=new rxjs_1.Subject,this.showBodyMessage=!1,this.presenceWaitingList=[],this.xmppServerURL=null,this.stropheStatus=null,this.presenceStatus="offline",this.pingTimeout=null,this.connecting=!1,this.disconnectInfo=null,this.connectionWatcherTimout=null,this.isInitialPresenceSent=!1,this.historyHandler=null,this.bulkHistoryHandler=null,this.searchTextHandler=null,this.reconnectInProgress=!1,this.reconnectionDelay=250,this.reconnectTimeout=null,this.connectivityEventSubscription=null,this.lastPingDate=null,this.started=!1,this.connection=null,this.jid=null,this.fullJid=null,this.changePasswordInfo=null,this.contactServiceReady=!1,this.connected=!1,this.reconnectionMode=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.xmppService||(win.rainbow.xmppService=new XmppService),win.rainbow.xmppService}onHandleConnectivity(online){online?(this.logger.info("[xmppService] onHandleConnectivityEvent -- retrieve connectivity"),this.autoReconnect(!0)):(this.logger.info("[xmppService] onHandleConnectivityEvent -- lost connectivity"),this.stropheStatus===Strophe.Status.CONNECTED&&(this.interruptAutoReconnect(),this.disconnect("NO_NETWORK")))}async start(){try{if(this.connectivityEventSubscription=this.mainService.appConnectivity.subscribe(online=>{this.onHandleConnectivity(online)}),!this.authService.jidIm||!this.authService.jidPwd)throw new Error("No valid XMPP credentials");this.xmppServerURL=`${config.xmpp.protocol}://${config.xmpp.currentServer}:${config.xmpp.port}/websocket`,this.showBodyMessage=this.settingsService.getBooleanSetting("showBodyMessage"),this.pingTimeout=config.xmpp.pingInterval?2*parseInt(config.xmpp.pingInterval,10):12e4,await this.connect(),this.publishConnectionEvent("ON_XMPP_CONNECTED",{reason:"LOGIN"})}catch(error){throw this.logger.error("[xmppService] start -- FAILURE -- "+error.message),error}}async stop(){this.reconnectionMode=!1;try{await this.disconnect("LOGOUT")}catch(error){}this.started=!1,this.connected=!1,this.stropheStatus=null,this.presenceStatus="offline",this.fullJid=null,this.lastPingDate=null,this.reconnectInProgress=!1,this.connectivityEventSubscription&&(this.connectivityEventSubscription.unsubscribe(),this.connectivityEventSubscription=null)}resetAllObjects(){this.reconnectionMode=!1,this.started=!1,this.connected=!1,this.stropheStatus=null,this.presenceStatus="offline",this.fullJid=null,this.lastPingDate=null,this.connectivityEventSubscription&&(this.connectivityEventSubscription.unsubscribe(),this.connectivityEventSubscription=null)}async connect(){try{if(this.stropheStatus===Strophe.Status.CONNECTING||this.stropheStatus===Strophe.Status.CONNECTED||this.stropheStatus===Strophe.Status.AUTHENTICATING){const error=new Error("XMPP service already connected or connecting");throw error.details=this.stropheStatus===Strophe.Status.CONNECTING?"XMPP_IN_CONNECTING_STATE":"XMPP_ALREADY_CONNECTED",error}const client=this.authService.getInformationHeadersApp(),clientVersion=this.authService.getInformationHeadersAppVersion(),xmppDomain=this.authService.xmppDomain;if(null===client||null===clientVersion||null===xmppDomain)throw new Error("XMPP service -- Missing connection data");let jingleRxSubject=null;this.connection&&this.connection.jingle&&this.connection.jingle.rxSubject&&(jingleRxSubject=this.connection.jingle.rxSubject),this.connection=new Strophe.Connection(`${this.xmppServerURL}?x-rainbow-client=${client}&x-rainbow-client-version=${clientVersion}&x-rainbow-xmpp-dom=${xmppDomain}`),this.connection.rawInput=data=>{this.handleRawXmppMessage(data,"Recv: ")},this.connection.rawOutput=data=>{this.handleRawXmppMessage(data,"Sent: ")},jingleRxSubject&&this.connection&&this.connection.jingle&&(this.connection.jingle.rxSubject=jingleRxSubject),this.jid=this.authService.jidIm,this.fullJid||(this.fullJid=this.generateRandomFullJid(this.jid)),await this.stropheConnect(),this.connected=!0,this.connection.ping.addPingHandler(ping=>(this.logger.info(`[xmppService] onKeepAlivePingEvent (${new Date})`),this.connected&&(this.connection.ping.pong(ping),this.lastPingDate=new Date),!0)),this.addHandler(stanza=>this.onRosterChangedMessageReceived(stanza),"jabber:iq:roster","iq","set"),this.addHandler(stanza=>this.onMamMessageReceived(stanza),Strophe.NS.MAM,"message",null),this.addHandler(stanza=>this.onMamMessageReceived(stanza),Strophe.NS.MAM,"iq",null),this.addHandler(stanza=>this.onMamBulkMessageReceived(stanza),"urn:xmpp:mam:1:bulk","message",null),this.addHandler(stanza=>this.onMamBulkMessageReceived(stanza),"urn:xmpp:mam:1:bulk","iq",null),this.addHandler(stanza=>this.onSearchTextMessageReceived(stanza),"urn:xmpp:mam:tmp","message",null),this.addHandler(stanza=>this.onPresenceMessageReceived(stanza),null,"presence"),this.connection.jingle&&this.connection.jingle.attachHandlers(),this.presenceWaitingList=[];const iq=$iq({type:"set"});iq.c("enable",{xmlns:"urn:xmpp:carbons:2"}),this.sendIQ(iq),this.started=!0}catch(error){throw this.logger.error("[xmppService] connect -- FAILURE -- "+error.message),error}}waitForGuestXmppReconnection(){return this.logger.info("[xmppService] waitForGuestXmppReconnection -- waiting"),new Promise(resolve=>{const xmppConnectionTimout=setTimeout(async()=>{xmppConnectionTimout&&clearTimeout(xmppConnectionTimout),xmppSubscription&&xmppSubscription.unsubscribe(),this.logger.info("[xmppService] waitForGuestXmppReconnection -- security timeout"),await this.stop(),resolve()},15e3),xmppSubscription=this.subscribeToConnectionEvents(async()=>{xmppConnectionTimout&&clearTimeout(xmppConnectionTimout),xmppSubscription&&xmppSubscription.unsubscribe(),this.logger.info("[xmppService] waitForGuestXmppReconnection -- reconnection done"),await this.stop(),resolve()});this.reconnectionMode=!0,this.start()})}disconnect(reason){return new Promise(resolve=>{this.connected?this.stropheStatus===Strophe.Status.CONNECTED?(this.logger.info("[xmppService] disconnect -- "+reason),this.disconnectInfo={reason:reason,resolve:resolve},this.connection.disconnect(reason)):(this.logger.warn("[xmppService] disconnect - service is started and not started = flags are not correct"),resolve(-1)):(this.logger.info("[xmppService] disconnect - service is not started"),resolve(0))})}stropheConnect(){return new Promise((resolve,reject)=>{this.connecting=!0,this.connection.connect(this.fullJid,this.authService.jidPwd,(status,reason=null)=>{switch(this.stropheStatus=status,status){case Strophe.Status.CONNECTING:this.logger.info("[xmppService] connecting -- "+this.fullJid),this.publishConnectionEvent("ON_XMPP_CONNECTING");break;case Strophe.Status.AUTHFAIL:this.logger.error(`[xmppService] onAuthenticationFailureEvent -- ${reason} -- ${this.fullJid}`),this.connecting=!1,reject(new Error("Authentication failure -- "+reason));break;case Strophe.Status.CONNFAIL:if(!this.connecting)break;this.logger.error("[xmppService] onConnectionFailureEvent -- ConnectionFail -- "+this.fullJid),this.connecting=!1,reject(new Error("Connection failure -- "+reason));break;case Strophe.Status.CONNECTED:this.logger.info("[xmppService] onConnectedEvent -- "+this.fullJid),this.connecting=!1,this.reconnectInProgress=!1,resolve(null);break;case Strophe.Status.DISCONNECTED:if(this.connecting){this.logger.error("[xmppService] onConnectionFailureEvent -- Disconnected -- "+this.fullJid),reject(new Error("Connection failure -- "+reason));break}this.reconnectInProgress||this.onDisconnectEvent(reason);break;case Strophe.Status.ERROR:this.connected&&(this.logger.error(`[xmppService] WebSocketError -- ${this.fullJid} -- ${reason}`),"resource-constraint"===reason&&(this.interruptAutoReconnect(!0),this.reconnectInProgress=!0,this.authService.logout(),this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:"RESOURCE_CONSTRAINTS"})))}})})}connectionWatcher(){try{if(this.logger.error("[xmppService] connection watcher : so bad, no message since "+this.pingTimeout/1e3+" seconds (no ping)"),this.connection){const message=this.stropheStatus===Strophe.Status.CONNECTED?"Have lost connectivity":"Stuck in reconnecting state";this.logger.info("[xmppService] connection watcher -- "+message),this.stropheStatus=null,this.connection.disconnect("No ping")}}catch(error){this.logger.error("connectionWatcher error "+error)}}generateRandomFullJid(jid){const OS=navigator.platform.toUpperCase().indexOf("MAC")>=0?"osx":"win";let platform="desk_"+OS;return this.mainService.isDesktopApp()||(platform=this.authService.fromSDK?"web_sdk":"web_"+OS),`${jid}/${platform}_${version}_${randomString_1.default(8)}`}handleRawXmppMessage(data,direction){if(this.connectionWatcherTimout&&clearTimeout(this.connectionWatcherTimout),this.connectionWatcherTimout=setTimeout(()=>{this.connectionWatcher()},this.pingTimeout),!(data.indexOf("<PHOTO>")>-1)){let log=direction;if(data.indexOf("urn:xmpp:mam:1:bulk")>-1)"true"===this.settingsService.getSetting("devMode")&&"true"===this.settingsService.getSetting("showBodyMessage")?log+=data:log+="Hidden content -- bulk";else if(data.indexOf("xmlns='jabber:x:bubble:conference'")>-1&&(data.indexOf("name='invitation'")>-1||data.indexOf("name='conferenceAdd'")>-1||data.indexOf("name='conferenceRemove'")>-1))log+="Hidden content -- xmlns='jabber:x:bubble:conference -- ",data.indexOf("name='invitation'")>-1&&(log+=" invitation"),data.indexOf("name='conferenceAdd'")>-1&&(log+=" conferenceAdd"),data.indexOf("name='conferenceRemove'")>-1&&(log+=" conferenceRemove");else if(data.indexOf("urn:xmpp:jingle")>-1)"true"===this.settingsService.getSetting("devMode")&&"true"===this.settingsService.getSetting("showBodyMessage")?log+=data:data.indexOf("displayname")>-1||data.indexOf("number")>-1?log+="Hidden content -- jingle":log+=data;else if(data.indexOf("urn:xmpp:janus:1")>-1&&(data.indexOf("displayName")>-1||data.indexOf("displayname")>-1||data.indexOf("number")>-1))log+="Hidden content";else if(data.indexOf("<message")>-1&&(data.indexOf("<body")>-1||data.indexOf("<content>")>-1||data.indexOf("<thumbnail")>-1))log+=this.messageBodyDiscretion(data);else{let result=data;if("http://jabber.org/protocol/ibb"===xmlParser_1.default(data).find("data").attr("xmlns")&&(log+="Encoded file in base 64"),!this.showBodyMessage){if(-1!==data.indexOf("<identity")){const firstName=data.indexOf("firstName="),firstNameIndex=data.indexOf("'",firstName);if(-1!==firstName&&-1!==firstNameIndex){const firstNameLastIndex=data.indexOf("'",firstNameIndex+1);firstNameIndex+1!==firstNameLastIndex&&(result=data.substr(0,firstNameIndex+2)+"***"+data.substr(firstNameLastIndex))}const lastName=result.indexOf("lastName="),lastNameIndex=result.indexOf("'",lastName);if(-1!==lastName&&-1!==lastNameIndex){const lastNameLastIndex=result.indexOf("'",lastNameIndex+1);lastNameIndex+1!==lastNameLastIndex&&(result=result.substr(0,lastNameIndex+2)+"***"+result.substr(lastNameLastIndex))}}if(-1!==result.indexOf("<caller_info")||-1!==result.indexOf("<callee_info")){const number=result.indexOf("number="),numberIndex=result.indexOf("'",number);if(-1!==number&&-1!==numberIndex){const numberLastIndex=result.indexOf("'",numberIndex+1);if(numberIndex+1!==numberLastIndex){const numberText=result.substr(numberIndex+1,numberLastIndex-numberIndex-1);result=result.substr(0,numberIndex+1)+anonymizer_1.default(numberText)+result.substr(numberLastIndex)}}}if(-1!==result.indexOf("<caller>")){const caller=result.indexOf("<caller>"),endCaller=result.indexOf("</caller>",caller),numberText=result.substring(caller+8,endCaller);-1===numberText.indexOf("@")&&-1===numberText.indexOf("janus")&&(result=result.substr(0,caller+8)+anonymizer_1.default(numberText)+result.substr(endCaller))}if(-1!==result.indexOf("<callee>")){const callee=result.indexOf("<callee>"),endCallee=result.indexOf("</callee>",callee),numberText=result.substring(callee+8,endCallee);-1===numberText.indexOf("@")&&-1===numberText.indexOf("janus")&&(result=result.substr(0,callee+8)+anonymizer_1.default(numberText)+result.substr(endCallee))}if(-1!==result.indexOf("<event")){const message=result.indexOf("<message>"),endMessage=result.indexOf("</message>",message);result=result.substr(0,message+9)+"***"+result.substr(endMessage)}const endpointTel=result.indexOf("endpointTel='");if(-1!==endpointTel){const endEndpointTel=result.indexOf("'",endpointTel+13),numberText=result.substring(endpointTel+13,endEndpointTel);result=result.substr(0,endpointTel+13)+anonymizer_1.default(numberText)+result.substr(endEndpointTel)}const destination=result.indexOf("destination='");if(-1!==destination){const endDestination=result.indexOf("'",destination+13),numberText=result.substring(destination+13,endDestination);result=result.substr(0,destination+13)+anonymizer_1.default(numberText)+result.substr(endDestination)}if(-1!==result.indexOf("<name>")){const message=result.indexOf("<name>"),endMessage=result.indexOf("</name>",message);result=result.substr(0,message+6)+"***"+result.substr(endMessage)}}log+=result}this.logger.debug(log)}}messageBodyDiscretion(data){return this.showBodyMessage?data:(data=this.messageTagDiscretion("content",data),data=this.messageTagDiscretion("body",data),data=this.messageTagDiscretion("subject",data),data=this.messageTagDiscretion("filename",data))}messageTagDiscretion(tag,data){const startTagIndex=data.indexOf("<"+tag);if(-1!==startTagIndex){const endTagIndex=data.indexOf(">",startTagIndex),endEmptyTagIndex=data.indexOf("/>",startTagIndex);if(-1!==endTagIndex&&endTagIndex!==endEmptyTagIndex+1)return data.substr(0,endTagIndex+2)+"***"+data.substr(data.indexOf("</"+tag+">")-1)}return data}async onDisconnectEvent(reason){if(this.connectionWatcherTimout&&clearTimeout(this.connectionWatcherTimout),this.authService.stopTokenSurvey(),this.isInitialPresenceSent=!1,this.started){if(this.disconnectInfo)return this.logger.info(`[xmppService] onDisconnectEvent -- Expected disconnection -- ${this.disconnectInfo.reason} -- ${this.fullJid}`),this.connected=!1,this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:this.disconnectInfo.reason}),this.disconnectInfo.resolve(),void(this.disconnectInfo=null);if(this.changePasswordInfo)if(this.connected=!1,this.changePasswordInfo.fromThirdParty)this.logger.error("[xmppService] onDisconnectEvent -- Expected disconnection -- change password from third party -- "+this.fullJid),this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:"3RD_PARTY_CHANGE_PWD"});else{this.logger.error("[xmppService] onDisconnectEvent -- Expected disconnection -- change password -- "+this.fullJid);try{await this.authService.logon(this.changePasswordInfo.login,this.changePasswordInfo.newPassword,!0)}catch(error){this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:"CHANGE_PWD_ERROR"})}this.changePasswordInfo.resolve&&this.changePasswordInfo.resolve(),this.changePasswordInfo=null,this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:"CHANGE_PWD"}),this.autoReconnect()}else this.logger.error(`[xmppService] onDisconnectEvent -- Unexpected disconnection -- ${reason} -- ${this.fullJid}`),this.connected=!1,this.publishConnectionEvent("ON_XMPP_DISCONNECTED",{reason:"UNKNOWN"}),this.autoReconnect()}else this.logger.info("[xmppService] onDisconnectEvent -- service not started -- ignored")}interruptAutoReconnect(force=!1){(this.reconnectInProgress||force)&&(this.logger.info("[xmppService] interrupt auto-reconnection"),this.reconnectionDelay=250,this.reconnectInProgress=!1,this.reconnectTimeout&&clearTimeout(this.reconnectTimeout),this.connectionWatcherTimout&&(this.logger.info("[xmppService] Clear connection watcher timeout"),clearTimeout(this.connectionWatcherTimout)))}async autoReconnect(force=!1){try{this.interruptAutoReconnect(force),this.logger.info("[xmppService] autoReconnect"),this.reconnectInProgress=!0,await this.authService.startTokenSurvey(),await this.connect(),this.reconnectionDelay=250,this.reconnectInProgress=!1,this.logger.info("[xmppService] autoReconnect -- SUCCESS"),this.publishConnectionEvent("ON_XMPP_CONNECTED",{reason:"RECONNECTION",lastActivityDate:this.lastPingDate})}catch(errorInfo){let error=errorInfo;switch(errorInfo&&errorInfo.details||(error=new Error,error.details="UNKNOWN"),error.details){case"AUTH_TOKEN_EXPIRED":this.logger.error("[xmppService] Impossible to renew token, redirect to login page"),this.interruptAutoReconnect(),this.authService.logout(),this.reconnectInProgress=!1;break;case"XMPP_ALREADY_CONNECTED":this.logger.error("[xmppService] In auto-reconnect, but already connected -- ignore"),this.reconnectInProgress=!1;break;case"XMPP_IN_CONNECTING_STATE":this.logger.error("[xmppService] xmpp is still connecting -- wait");break;default:this.reconnectInProgress&&(this.reconnectionDelay=2*this.reconnectionDelay,this.reconnectionDelay>15e3&&(this.reconnectionDelay=15e3),this.logger.info("[xmppService] Auto-reconnection failure (next try in "+this.reconnectionDelay+"ms)"),this.reconnectTimeout=setTimeout(()=>{this.autoReconnect()},this.reconnectionDelay)),this.reconnectInProgress=!1}}}subscribeToContactEvents(observer){return this.rxContactSubject.subscribe(observer)}subscribeToConnectionEvents(observer){return this.rxConnectionSubject.subscribe(observer)}publishContactEvent(name,params){this.rxContactSubject.next(event_model_1.RBEvent.create(name,params))}publishConnectionEvent(name,data=null){this.reconnectionMode&&("ON_XMPP_CONNECTED"!==name||"RECONNECTION"!==data.reason&&"LOGIN"!==data.reason)||("ON_XMPP_CONNECTED"===name?this.mainService.appConnected.next(!0):"ON_XMPP_DISCONNECTED"===name&&("3RD_PARTY_CHANGE_PWD"===data.reason||"CHANGE_PWD_ERROR"===data.reason||"RESOURCE_CONSTRAINTS"===data.reason?this.mainService.appConnected.next(!0):this.mainService.appConnected.next(!1)),this.rxConnectionSubject.next(event_model_1.RBEvent.create(name,data)))}onRosterChangedMessageReceived(stanza){try{return xmlParser_1.default(stanza).find("item").forEach(elem=>{const jid=this.getBareJidFromJid(elem.attr("jid")),favorite=!!elem.find("group").first()&&"favorites"===elem.find("group").first().text(),sub=elem.attr("subscription"),ask=elem.attr("ask");this.publishContactEvent("ON_ROSTER_CHANGED_EVENT",{jid:jid,subscription:sub||"none",favorite:favorite,ask:ask||"none"})}),!0}catch(error){return!0}}sendPresence(show,message,auth=!1,userOptions){if(this.connection&&this.connection.send&&this.stropheStatus===Strophe.Status.CONNECTED)try{this.logger.info("Send presence "+show+" - "+message+" ("+this.jid+")");const presenceIq=$pres();presenceIq.c("priority").t("5"),presenceIq.up(),show&&"online"!==show&&presenceIq.c("show").t(show),!message||show&&"online"!==show?message&&presenceIq.up().c("status").t(message):presenceIq.c("status").t(message),!0===auth&&(userOptions||(userOptions={im:!0,alert:!1,companyid:""}),show&&"online"!==show&&presenceIq.up(),presenceIq.c("application",{xmlns:"jabber:iq:application"}),presenceIq.c("appid").t(config.rainbowApiClientKey).up(),presenceIq.c("xrbversion").t(version).up(),presenceIq.c("xrbclient").t(this.authService.getInformationHeadersApp()).up(),presenceIq.c("companyid").t(userOptions.companyid).up(),presenceIq.c("userid").t(this.authService.userId).up().up(),presenceIq.c("parameters",{xmlns:"jabber:iq:configuration"}),presenceIq.c("user_options",{alert:userOptions.alert,im:userOptions.im})),this.connection.send(presenceIq)}catch(error){return void this.logger.error("this.connection.send error : "+error)}else this.logger.error('[xmppService] Try to send "presence IQ" but no xmpp connection')}resetPresence(status){this.logger.info(`Reset presence to ${this.presenceStatus} (${this.jid})`),this.sendPresence(status.show,status.status)}onPresenceMessageReceived(presence){try{const pres=xmlParser_1.default(presence),fromJid=pres.attr("from"),fromBareJid=this.getBareJidFromJid(fromJid),namespace=pres.find("x").attr("xmlns"),ptype=pres.attr("type");if(namespace&&0===namespace.indexOf(Strophe.NS.MUC))return!0;if(pres.find("actor").length>0&&"jabber:iq:configuration"===pres.find("actor").attr("xmlns")&&(pres.find("avatar").length>0?this.publishContactEvent("ON_CONTACT_UPDATE_EVENT",{from:fromBareJid,type:"avatar"}):pres.find("data").length>0&&this.publishContactEvent("ON_CONTACT_UPDATE_EVENT",{from:fromBareJid,type:"data"}),pres.find("x").length&&"vcard-temp:x:update"===pres.find("x").attr("xmlns")&&!pres.find("delay").length))return!0;if("error"===ptype)this.logger.error("Receive error presence message");else if("subscribe"===ptype)this.logger.info("Receive subscribe from ("+fromBareJid+")");else{let presenceStatus="offline",presenceMessage="";if("unavailable"!==ptype){const show=pres.find("show").text();presenceMessage=pres.find("status").text(),presenceStatus=show&&"chat"!==show?"dnd"===show?"dnd":"xa"===show?"xa":"away":"online"}const applyCalendarPresence=Boolean(pres.find("applyCalendarPresence").length),stamp=pres.find("delay").attr("stamp"),presStamp=stamp?new Date(stamp):new Date;let until=pres.find("until").text();until=until?new Date(until):null;const eventAttr={jid:fromJid,status:presenceStatus,message:presenceMessage,stamp:presStamp,until:until,applyCalendarPresence:applyCalendarPresence};this.isConnectedJid(fromJid)&&!this.isInitialPresenceSent&&(this.isInitialPresenceSent=!0,this.publishConnectionEvent("ON_XMPP_CONNECTED",{reason:"PRESENCE"})),this.contactServiceReady?this.publishContactEvent("ON_CONTACT_PRESENCE_EVENT",eventAttr):(this.logger.info("[xmppService] Receive presence message but contact service is not ready yet"),this.presenceWaitingList.push(eventAttr))}return!0}catch(error){return!0}}getPresenceWaitingList(){return this.presenceWaitingList}resetPresenceWaitingList(){this.presenceWaitingList=[]}addHistoryHandler(handler){this.historyHandler=handler}addBulkHistoryHandler(handler){this.bulkHistoryHandler=handler}addSearchTextHandler(handler){this.searchTextHandler=handler}onMamBulkMessageReceived(stanza){try{this.bulkHistoryHandler(stanza)}catch(error){return!0}return!0}onMamMessageReceived(stanza){try{const stanzaElem=xmlParser_1.default(stanza);let queryId=stanzaElem.find("result").attr("queryid");return queryId||(queryId=stanzaElem.attr("id")),queryId&&(-1!==queryId.indexOf("tel_")||-1!==queryId.indexOf("cache_"))&&this.historyHandler&&this.historyHandler(stanza),!0}catch(error){return!0}}onSearchTextMessageReceived(stanza){try{const stanzaElem=xmlParser_1.default(stanza);let queryId=stanzaElem.find("result").attr("queryid");return queryId||(queryId=stanzaElem.attr("id")),this.searchTextHandler&&this.searchTextHandler(queryId,stanza),!0}catch(error){return!0}}getBareJidFromJid(jid){return Strophe.getBareJidFromJid(jid)}getResourceFromJid(jid){return Strophe.getResourceFromJid(jid)}isMobileResource(jid){return-1!==jid.indexOf("mobile_")}addHandler(handler,ns,name=null,type=null){return this.connection.addHandler(handler,ns,name,type)}deleteHandler(handRef){this.connection&&this.connection.deleteHandler(handRef)}isConnectedJid(jid){return!(!jid||0===jid.length)&&jid.startsWith(this.jid)}send(stanza){return new Promise(resolve=>{try{if(!this.connection&&this.stropheStatus!==Strophe.Status.CONNECTED)throw this.logger.error('[xmppService] Try to send "stanza" but no xmpp connection'),new Error("No XMPP connection");this.connection.send(stanza)}catch(error){this.logger.error("[xmppService] this.connection.send error : "+error)}resolve()})}sendIQ(iq,timeout=null){return new Promise((resolve,reject)=>{try{if(!this.connection&&this.stropheStatus!==Strophe.Status.CONNECTED)throw this.logger.error('[xmppService] Try to send "iq" but no xmpp connection'),new Error("No XMPP connection");this.connection.sendIQ(iq,data=>{resolve(data)},error=>{reject(new Error(error?error.innerHTML:"XMPP request timeout"))},timeout&&timeout>XmppService.REQUEST_TIMEOUT?timeout:XmppService.REQUEST_TIMEOUT)}catch(error){this.logger.error("[xmppService] this.connection.sendIQ error : "+error),reject(new Error("this.connection.sendIQ error"))}})}}XmppService.REQUEST_TIMEOUT=1e4,exports.XmppService=XmppService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Subscription}));var _util_isArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17),_util_isObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(89),_util_isFunction__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(46),_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(75),Subscription=function(){function Subscription(unsubscribe){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,unsubscribe&&(this._ctorUnsubscribe=!0,this._unsubscribe=unsubscribe)}var empty;return Subscription.prototype.unsubscribe=function(){var errors;if(!this.closed){var _parentOrParents=this._parentOrParents,_ctorUnsubscribe=this._ctorUnsubscribe,_unsubscribe=this._unsubscribe,_subscriptions=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,_parentOrParents instanceof Subscription)_parentOrParents.remove(this);else if(null!==_parentOrParents)for(var index=0;index<_parentOrParents.length;++index){_parentOrParents[index].remove(this)}if(Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__.a)(_unsubscribe)){_ctorUnsubscribe&&(this._unsubscribe=void 0);try{_unsubscribe.call(this)}catch(e){errors=e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__.a?flattenUnsubscriptionErrors(e.errors):[e]}}if(Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__.a)(_subscriptions)){index=-1;for(var len=_subscriptions.length;++index<len;){var sub=_subscriptions[index];if(Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__.a)(sub))try{sub.unsubscribe()}catch(e){errors=errors||[],e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__.a?errors=errors.concat(flattenUnsubscriptionErrors(e.errors)):errors.push(e)}}}if(errors)throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__.a(errors)}},Subscription.prototype.add=function(teardown){var subscription=teardown;if(!teardown)return Subscription.EMPTY;switch(typeof teardown){case"function":subscription=new Subscription(teardown);case"object":if(subscription===this||subscription.closed||"function"!=typeof subscription.unsubscribe)return subscription;if(this.closed)return subscription.unsubscribe(),subscription;if(!(subscription instanceof Subscription)){var tmp=subscription;(subscription=new Subscription)._subscriptions=[tmp]}break;default:throw new Error("unrecognized teardown "+teardown+" added to Subscription.")}var _parentOrParents=subscription._parentOrParents;if(null===_parentOrParents)subscription._parentOrParents=this;else if(_parentOrParents instanceof Subscription){if(_parentOrParents===this)return subscription;subscription._parentOrParents=[_parentOrParents,this]}else{if(-1!==_parentOrParents.indexOf(this))return subscription;_parentOrParents.push(this)}var subscriptions=this._subscriptions;return null===subscriptions?this._subscriptions=[subscription]:subscriptions.push(subscription),subscription},Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);-1!==subscriptionIndex&&subscriptions.splice(subscriptionIndex,1)}},Subscription.EMPTY=((empty=new Subscription).closed=!0,empty),Subscription}();function flattenUnsubscriptionErrors(errors){return errors.reduce((function(errs,err){return errs.concat(err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__.a?err.errors:err)}),[])}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class EventService{constructor(){this.$rootScope=null}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.eventService||(win.rainbow.eventService=new EventService),win.rainbow.eventService}configure($rootScope=null){this.$rootScope=$rootScope}subscribe(eventName,handler){return this.$rootScope?this.$rootScope.$on(eventName,handler):()=>{}}unsubscribe(subscription){subscription()}publish(eventName,...args){this.$rootScope&&this.$rootScope.$broadcast(eventName,...args)}publishWithApply(eventName,...args){this.$rootScope&&this.$rootScope.$apply(()=>{this.$rootScope.$broadcast(eventName,...args)})}setVariable(varName,value){this.$rootScope[varName]=value}getVariable(varName){return this.$rootScope[varName]}}exports.EventService=EventService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const i18n_service_1=__webpack_require__(38);class ErrorHelperInfo{constructor(){this.message="",this.error=null}}exports.ErrorHelperInfo=ErrorHelperInfo;class ErrorHelperService{constructor(){this.i18n=i18n_service_1.I18nService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.errorHelperService||(win.rainbow.errorHelperService=new ErrorHelperService),win.rainbow.errorHelperService}async getErrorInfo(error,context=null,params=null){const errorInfo=new ErrorHelperInfo;if(error instanceof Error&&(errorInfo.message=error.message,"Failed to fetch"===error.message&&(error.translatedMessage=this.i18n.translate("IceConfigurationFailed")),errorInfo.error=error),error instanceof Response){const data=await error.json(),status=data&&data.errorDetailsCode?data.errorDetailsCode:error.status,statusText=this.getStatusText(data,error),errorText=this.getErrorText(data),feature=this.getFeature(data),portal=error.url?error.url.match(/api\/rainbow\/(\w+)\//)[1]:void 0,requestId=error.headers&&error.headers.get("x-rainbow-request-id")?` (x-rainbow-request-id:${error.headers.get("x-rainbow-request-id")})`:"";context&&(errorInfo.message=context+" -- "),errorInfo.message+=`${statusText} -- ${errorText}`,feature&&(errorInfo.message+="-- "+feature),requestId&&(errorInfo.message+=requestId),errorInfo.error=new Error(errorInfo.message),errorInfo.error.status=error.status,errorInfo.error.statusText=statusText,errorInfo.error.fieldErrors=this.getBadRequestFieldErrors(data,error),errorInfo.error.errorDetails=errorText,errorInfo.error.errorDetailsCode=status,errorInfo.error.errorDetailsLabel=this.getErrorCodeLabel(status,portal),errorInfo.error.translatedMessage=this.getTranslatedErrorMessage(errorInfo.error,params,portal),errorInfo.error.portal=portal,errorInfo.error.feature=feature,data&&data.errorDetailsData&&(errorInfo.error.errorDetailsData=data.errorDetailsData),errorInfo.error.fullResponseData=data}return errorInfo}getTranslatedErrorMessage(error,params,portal){let errorMessage="";return error.errorDetailsCode&&(errorMessage=this.getLocalizedError(error.errorDetailsCode,params,portal)),errorMessage}getLocalizedError(errorCode,params,portal){let errorMessage="";const errorLabel=this.getErrorCodeLabel(errorCode,portal);if(errorLabel){const translation=this.i18n.translate(errorLabel,params);translation!==errorLabel&&(errorMessage=translation)}return errorMessage}getErrorText(data){if(!data)return"Unknow error - Something goes really wrong";let message="";return data.errorDetails?data.errorDetails instanceof Array?data.errorDetails.forEach(details=>{message+=details.msg}):data.errorDetails.msg?message+=JSON.stringify(data.errorDetails.msg):data.errorDetails.details?message+=data.errorDetails.details:message+="string"==typeof data.errorDetails?data.errorDetails:JSON.stringify(data.errorDetails):data.errorMsg&&(message+=data.errorMsg),message}getFeature(data){return data&&data.errorDetails&&!(data.errorDetails instanceof Array)&&data.errorDetails.feature?data.errorDetails.feature:null}getStatusText(status,response){switch(status){case-1:return"Service unavailable";case 400:return"Bad request";case 401:return"Authorization failure";case 403:return"Access is forbidden";case 404:return"Resource not found";case 413:return"Request Entity Too Large";case 415:return"Unsupported Media Type";case 429:return"Too many requests";case 500:return"Internal server error";default:return response.statusText?response.statusText:"Unknown error"}}getBadRequestFieldErrors(data,response){const fieldErrors={},errorDetails=data?data.errorDetails:null,errorDetailsCode=data?data.errorDetailsCode:null,errorDetailsData=data?data.errorDetailsData:null;return 400===response.status?(errorDetails&&(errorDetails instanceof Array?errorDetails.forEach(details=>{fieldErrors[details.param]||(fieldErrors[details.param]={ok:!1,message:details.msg,value:details.value})}):errorDetails.param&&(fieldErrors[errorDetails.param]||(fieldErrors[errorDetails.param]={ok:!1,message:errorDetails.msg,value:errorDetails.value}))),400511===errorDetailsCode&&(fieldErrors.office365Tenant={ok:!1,message:ErrorHelperService.ERROR_CODE_LABELS[400511]}),400601===errorDetailsCode&&(fieldErrors.outgoingPrefix={ok:!1,message:ErrorHelperService.ERROR_CODE_LABELS[400601]},fieldErrors.numberingPrefix={ok:!1,message:ErrorHelperService.ERROR_CODE_LABELS[400601]})):409===response.status&&409e3===errorDetailsCode&&errorDetailsData&&(errorDetailsData.loginEmail&&(fieldErrors.loginEmail={ok:!1,label:"userAlreadyExist"}),errorDetailsData.authenticationExternalUid&&(fieldErrors.authenticationExternalUid={ok:!1,label:"userIdAlreadyUsed"})),fieldErrors}getErrorCodeLabel(errorCode,portal){return portal&&ErrorHelperService.PORTAL_ERROR_CODE_LABELS[portal]&&ErrorHelperService.PORTAL_ERROR_CODE_LABELS[portal][errorCode]?ErrorHelperService.PORTAL_ERROR_CODE_LABELS[portal][errorCode]:ErrorHelperService.ERROR_CODE_LABELS[errorCode]}}ErrorHelperService.ERROR_CODE_LABELS={"-1":"unknownError",0:"errorNoServerResponse",400:"Bad request",4e5:"Bad request",400210:"invalidPhoneNumber",400400:"errorWrongPassword",400500:"invalidFile",400504:"companyNameAlreadyExist",400505:"BPCompanyWithoutPaymentConfigurationData",400506:"NoActiveSubscriptionToOffer",400509:"errorDecreaseSubscriptionForbidden",400511:"ActiveDirectoryDomainAlreadyUsed",400552:"BPCompanyAndECCompanyMustNotBeSame",400601:"outboundAndInternalPrefixesCantBeIdentical",400973:"noCreateUserPermission",400975:"userAlreadyExistsInOtherCompany",400983:"userAlreadyExistsInOtherCompany",400990:"noUserFound",400993:"noUserFound",401:"Authorization failure",401102:"Authorization failure",401202:"errorInvalidToken",401500:"errorUnauthorized",401501:"errorLoginForbidden",401510:"errorUnauthorized",401520:"errorUserNotActive",401521:"errorUserNotActive",403:"Forbidden",403e3:"accessDeniedNotRequiredRole",403001:"accessDeniedNotOwner",403034:"cantDeselectDefaultWebRTCGateway",403035:"cantDeleteDefaultWebRTCGateway",403060:"confLockMsg",403072:"errorIsoMd5Mismatch",403153:"notAllowedToAccessMeeting",403154:"notAllowedToAccessMeeting",403191:"dialInAlreadyEnabled",403192:"dialInAlreadyDisabled",403200:"notAllowedToChangeRole",403203:"notAllowedToChangeRole",403204:"notAllowedToMoveExistingUserToThisCompany",403205:"notAllowedToManageUser",403301:"notAllowedToManageCompany",403303:"notAllowedOperation",403304:"notAllowedToAddAnotherAdmin",403311:"errorRemoveSyncOngoingSubscriptionForbidden",403315:"errorRemoveSubscriptionForbidden",403316:"errorRemoveAdminAllocatedSubscriptionForbidden",403317:"errorRemoveClientAllocatedSubscriptionForbidden",403400:"notAllowedDeleteAppOwner",403500:"notAllowedBlacklistedEmail",403501:"notAllowedBlacklistedEmail",403502:"notAllowedToInviteExternalContacts",403503:"NotAllowedSelfRegistrationEmail",403504:"notAllowedLoggedInUserEmail",403507:"notAllowedSupportEmail",403513:"companyNotABpCompany",403516:"companyNotABpCompany",403517:"companySeenAsTerminated",403518:"companyBpTypeIncompatible",403519:"companyAlreadyLinkedToBp",403520:"companyNotVadBp",403525:"isolatedUser",403526:"isolatedUser",403531:"resetPasswordBlocked",403532:"resetPasswordForbidden",403608:"errorAssignSubscriptionSyncOngoing",403609:"errorAssignSubscriptionSyncOngoing",403610:"maxSubscriptionAllocationReached",403611:"notAllowedToCreateAnEquipment",403615:"maximumNumberConferenceParticipantsReach",403616:"subscriptionCompanyAdminEssentialAlreadyExists",403617:"roleCompanyAdminEssentialAlreadyExists",403620:"maximumNumberReached",403621:"MaximumNumberConvUsersReach",403624:"notAllowedRemoveService",403625:"errorAllocatedSubscriptionRemoveForbidden",403626:"restrictedConvAccess",403630:"uploadErrorMaxQuotaReached",403655:"userAlreadyCompanyMember",403660:"userNotInDefaultCompany",403670:"errorOperationForbiddenOnGuest",403683:"errorOtherOperationInProgress",403700:"errorDeleteSiteWithSystems",403701:"errorDeleteOrganisationLinkedCompany",403702:"errorDeleteCompanyWithSubscriptions",403703:"errorDeleteCompanyWithSites",403704:"errorDeleteCompanyWithUsers",403705:"errorDeleteCompanyStillTerminated",403706:"errorRemoveBusinessPartnerRole",403719:"externalTrunkChangeForbidden",403721:"numberingPlanCantBeUpdated",403722:"outgoingPrefixChangeForbidden",403723:"cannotRemoveCompanyPublicNumber",403724:"notAllowedDeleteCloudPbxWithPublicNumbers",403725:"notAllowedDeleteCloudPbxWithUsedExtensions",403762:"forbiddenOperationGroupLinkedToAutomatedAttendantMenu",403770:"forbiddenOperationUserBelongsToGroup",403780:"forbiddenOperationUserAlreadyManager",403784:"forbiddenOperationGroupStillAssocToWelcome",403785:"forbiddenOperationUserStillAssocToWelcome",403786:"forbiddenOperationUserBelongsToGroup",403792:"errorDialInLicenseAssignment",403910:"errorOtherOperationInProgress",403911:"errorOtherOperationInProgress",404:"resourceNotFound",404e3:"resourceNotFound",404001:"resourceNotFoundUpdateImpossible",404002:"resourceNotFoundDeleteImpossible",404116:"archivedOrDeletedConversation",404300:"noValidOfferReferenceInACTISFile",404301:"offerNotFound",409e3:"errorConflict",409005:"inviteUsersError",409011:"noMessagesToExport",409251:"DDIAlreadyAssociatedToCompany",409552:"internalNumberAlreadyUsed",409555:"publicNumberAlreadyExists",409557:"notAllowedDeleteUserAssociatedToCloudPbx",409600:"userAlreadyExist",409601:"invitationReSentConflict",409602:"userAlreadyNetworkMember",409603:"invitationReSentConflict",409605:"joinCompanyConflict",409620:"offerAlreadySubscribed",409623:"conferenceOfferAlreadySubscribed",409625:"errorUpdateSyncOngoingSubscriptionForbidden",409800:"companyNotIrBp",409801:"companyNotLinkedToBp",409802:"actisCompanyAdminMismatch",409803:"actisCompanyNameMismatch",413e3:"uploadErrorTooLarge",429:"tooManyRequests",487063:"ccdLogonCommandRejected",487064:"ccdLogonCommandRejectedWrongIdOrPassword",487065:"ccdLogonCommandRejectedWrongOrUnknownGroupId",500:"errorInternalServerError",5e5:"errorInternalServerError",500600:"genericPCGInternalServerError",500660:"ccdFeatureFailed",500661:"ccdFeatureFailedUnknownDevice",500662:"ccdFeatureFailedWrongUserType",500663:"ccdFeatureFailedProacdIdCannotBeEmpty",500664:"ccdFeatureFailedAgentDeviceTypeNotAuthorized",500665:"ccdFeatureFailedNoProacdDeviceAvailable",500666:"ccdFeatureFailedPBXRejectCCDCommand",1001:"extensionNotLinkedToEquipment",1002:"extensionHasNoIdentifier",1003:"extensionDoesNotExist",1004:"extensionLookupFailure",1005:"extensionConflict",1006:"nonUniqueEquipmentForExtension",1007:"userAlreadyAssociatedToExtension",1008:"extensionAssociatedToAnotherUser",1009:"failedToAttachExtension",1010:"userHasNoExtension",1011:"userHasTooManyExtensions",1012:"failedToDetachExtension",2001:"companyHasNoCloudPbx",2002:"extensionNumberNotCompatibleWithCloudPBXNumberingPlan",2003:"extensionNumberAlreadyAssignedToAnotherUser",2004:"userAlreadyAssignedToAnotherEquipment",2005:"failedToAssociateExtensionNumber",2006:"failedToUpdateExtensionNumber",2007:"noSipDeviceWithMacAddress",2008:"sipDeviceWithMacAddressBelongsToAnotherCompany",2009:"sipDeviceWithMacAddressAttachedToAnotherUser",2010:"anotherSipDeviceWithMacAddressAttachedToUser",2011:"cannotManageSipDeviceForUserWithoutExtensionNumber",2012:"failedToAttachSipDeviceToUser",2013:"cannotManagePublicNumberForUserWithoutExtensionNumber",2014:"publicNumberDoesNotExist",2015:"publicNumberAlreadyAssociatedToAnotherUser",2016:"anotherPublicNumberIsAttachedToUser",2017:"failedToAttachPublicNumberToUser",2018:"failedToDetachExtensionNumberNotProvided",2019:"userAttachedToAnotherExtensionNumber",2020:"cannotDetachPublicNumberFromUserWithoutExtensionNumber",2021:"failedToDetachPublicNumberFromUser",2022:"failedToDetachSipDeviceFromUser"},ErrorHelperService.PORTAL_ERROR_CODE_LABELS={subscription:{403614:"forbiddenDurationChangeBecausePriceChanges"},massprovisioning:{4e5:"invalidValue",400501:"invalidFile",400502:"invalidColumnName",400504:"invalidFile",400505:"invalidValueInActionColumn",400506:"invalidValueInActionColumn",400508:"noDataToImport",400600:"deviceTypeCannotBeUpdated",400601:"duplicateDeviceIds",400602:"duplicateMacAdresses",400603:"invalidDeviceTypes",400604:"missingDeviceTypeInLines",400605:"invalidEquipment",400972:"noCreateUserPermission",400973:"noCreateUserPermission",400980:"noUpdateUserPermission",400981:"noUpdateUserPermission",400990:"noDeleteUserPermission",400991:"noDeleteUserPermission",400994:"noUserFound",403610:"errorMaxSubscriptionReached",403622:"userDoesNotHaveVoiceLicense",404600:"deviceDoesNotExist",404601:"noCloudPbxInCompany"},rvcpprovisioning:{403622:"noVoiceLicenceAllocatedToUser",403684:"overflowConfigurationChangesStillInProgress",403694:"forbiddenOperationEquipmentHasGroups",403695:"publicNumberAlreadyDefault",403699:"forbiddenOperationEquipmentHasWelcomeService",403728:"forbiddenOperationEquipmentHasDevices",403739:"forbiddenOperationWelcomeServiceUsed",403744:"forbiddenOperationUserAlreadyAssocToWelcome",403745:"forbiddenOperationGroupAlreadyAssocToWelcome",403752:"forbiddenOperationMoreThanThreeConsecutiveMenus",403754:"forbiddenOperationMenuLinkedToAnotherMenu",403761:"forbiddenOperationUserLinkedToAutomatedAttendantMenu",403765:"forbiddenOperationMenuAlreadyLinkedToAnotherMenu",403767:"forbiddenOperationSubMenuLinkedToItsParent",409253:"forbiddenOperationCantAssignDeviceToAttendantUser",409556:"companyHasAlreadyACloudPbx",409560:"macAddressAlreadyUsed",409561:"deviceStillUsedByUser",409562:"deviceAlreadyUsed",409563:"deviceAlreadyUsedByAnotherSystem",409565:"forbiddenOperationCallForkingToPublicNumberUsedByCloudPbx",413e3:"fileTooLarge",415e3:"audioFileTypeNotSupported"},authentication:{401102:"Authorization failure",401103:"Authorization failure",401500:"Authorization failure",401520:"Forbidden",401521:"Forbidden",401522:"Forbidden",401523:"Forbidden",401530:"Authorization failure",401600:"Authorization failure",401700:"Authorization failure",403e3:"Authorization failure",5e5:"errorInternalServerError",503e3:"resourceNotFound"},webinar:{403135:"WebinarInvalidRegistrationId",409019:"webinarEmptyConversation"},vnauseradmin:{400006:"addressNotRecognizedByEmergencyService",400007:"E911ServiceUnavailable",400014:"yourAccountPublicNumberInvalid",400034:"yourAccountPublicNumberDoesNotExist",400059:"invalidAddress",400063:"invalidStateCode",400065:"invalidTelephoneNumberFormat",400201:"invalidBlankName",400202:"invalidBlankStreetName",400203:"invalidBlankStreetNumber",400204:"invalidBlankCity",400205:"invalidBlankState",400206:"invalidBlankZipCode",400207:"youMustHavePublicNumber",400208:"onlyNumericValuesAllowed",400209:"youMustHavePublicNumber",403153:"notAllowedToModifyAddress",405103:"invalidZipCode",409e3:"errorLocationAddressConflict"}},exports.ErrorHelperService=ErrorHelperService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),offer_model_1=__webpack_require__(165),contact_service_1=__webpack_require__(6),settings_service_1=__webpack_require__(18);class ProfileService{constructor(){this.FeaturesEnum={COMPANY_ADMIN_COUNT:"COMPANY_ADMIN_COUNT",COMPANY_LOGO_MODIFICATION:"COMPANY_LOGO_MODIFICATION",COMPANY_DOMAIN_NAME_MODIFICATION:"COMPANY_DOMAIN_NAME_MODIFICATION",COMPANY_DETAILS_MODIFICATION:"COMPANY_DETAILS_MODIFICATION",COMPANY_SINGLE_SIGN_ON_SAML:"COMPANY_SINGLE_SIGN_ON_SAML",COMPANY_SINGLE_SIGN_ON_OIDC:"COMPANY_SINGLE_SIGN_ON_OIDC",WEBRTC_FOR_MOBILE:"WEBRTC_FOR_MOBILE",BUBBLE_PARTICIPANT_COUNT:"BUBBLE_PARTICIPANT_COUNT",TELEPHONY_BASIC_CALL:"TELEPHONY_BASIC_CALL",TELEPHONY_SECOND_CALL:"TELEPHONY_SECOND_CALL",TELEPHONY_TRANSFER_CALL:"TELEPHONY_TRANSFER_CALL",TELEPHONY_CONFERENCE_CALL:"TELEPHONY_CONFERENCE_CALL",TELEPHONY_DEFLECT_CALL:"TELEPHONY_DEFLECT_CALL",TELEPHONY_PHONE_BOOK:"TELEPHONY_PHONE_BOOK",TELEPHONY_VOICE_MAIL:"TELEPHONY_VOICE_MAIL",TELEPHONY_CALL_FORWARD:"TELEPHONY_CALL_FORWARD",TELEPHONY_NOMADIC:"TELEPHONY_NOMADIC",CONFERENCE_PARTICIPANT_COUNT:"CONFERENCE_PARTICIPANT_COUNT",WEBRTC_CONFERENCE_ALLOWED:"WEBRTC_CONFERENCE_ALLOWED",WEBRTC_CONFERENCE_PARTICIPANT_COUNT:"WEBRTC_CONFERENCE_PARTICIPANT_COUNT",WEBRTC_PARTICIPANT_ALLOWED:"WEBRTC_PARTICIPANT_ALLOWED",CONFERENCE_ALLOWED:"CONFERENCE_ALLOWED",CONFERENCE_DIAL_OUT:"CONFERENCE_DIAL_OUT",CONFERENCE_RECORDING:"CONFERENCE_RECORDING",MSO365_CALENDAR_PRESENCE:"MSO365_CALENDAR_PRESENCE",MSO365_DIRECTORY_PROVISIONING:"MSO365_DIRECTORY_PROVISIONING",MSO365_DIRECTORY_SEARCH:"MSO365_DIRECTORY_SEARCH",MSO365_CONTACT_SEARCH:"MSO365_CONTACT_SEARCH",MS_OUTLOOK_PLUGIN:"MS_OUTLOOK_PLUGIN",MS_SKYPE_PLUGIN:"MS_SKYPE_PLUGIN",FILE_SHARING_QUOTA_GB:"FILE_SHARING_QUOTA_GB",GOOGLE_CALENDAR_PRESENCE:"GOOGLE_CALENDAR_PRESENCE",WEBRTC_P2P_RECORDING:"WEBRTC_P2P_RECORDING",BUBBLE_PROMOTE_MEMBER:"BUBBLE_PROMOTE_MEMBER",BUBBLE_GUESTS_ALLOWED:"BUBBLE_GUESTS_ALLOWED",BUBBLE_ACTIVE_SPEAKER:"BUBBLE_ACTIVE_SPEAKER",TELEPHONY_WEBRTC_GATEWAY:"TELEPHONY_WEBRTC_GATEWAY",TELEPHONY_WEBRTC_PSTN_CALLING:"TELEPHONY_WEBRTC_PSTN_CALLING",ANALYTICS_DASHBOARD_EC:"ANALYTICS_DASHBOARD_EC",ANALYTICS_DASHBOARD_BP:"ANALYTICS_DASHBOARD_BP",TELEPHONY_CALL_SUBJECT:"CALL_SUBJECT",CHANNEL_CREATE:"CHANNEL_CREATE",CHANNEL_CREATE_ADMIN_ROLE_BYPASS:"CHANNEL_CREATE_ADMIN_ROLE_BYPASS",CHANNEL_ACTIVATED:"CHANNEL_ACTIVATED",MANAGE_ANDROID_TV:"MANAGE_ANDROID_TV",USE_ANDROID_TV:"USE_ANDROID_TV",LDAP_DIRECTORY_SYNC:"LDAP_DIRECTORY_SYNC",LDAP_CONTACT_SYNC:"LDAP_CONTACT_SYNC",MASSPRO_USER_PROVISIONING_CSV:"MASSPRO_USER_PROVISIONING_CSV",SEARCH_BY_TAGS:"SEARCH_BY_TAGS",TELEPHONY_3DPARTY_ASSOC:"TELEPHONY_3DPARTY_ASSOC",WEBCLIENT_UI_2_0:"WEBCLIENT_UI_2_0",WEBRTC_UNIFIED_PLAN:"WEBRTC_UNIFIED_PLAN",WEBRTC_CONFERENCE_SIMULCAST:"WEBRTC_CONFERENCE_SIMULCAST",USE_CLOUD_PBX:"USE_CLOUD_PBX",USE_OXO_MANAGED_PBX:"USE_OXO_MANAGED_PBX",SOFTPHONE_MODE_ONLY:"SOFTPHONE_MODE_ONLY",GIVE_REQUEST_REMOTE_CONTROL:"GIVE_REQUEST_REMOTE_CONTROL",BUBBLE_MAX_LOAD_STARTUP:"BUBBLE_MAX_LOAD_STARTUP",BUBBLE_COUNT:"BUBBLE_COUNT",BUBBLE_MEETING_SCHEDULER:"BUBBLE_MEETING_SCHEDULER",BUBBLE_TALKING_TIME:"BUBBLE_TALKING_TIME",APP_PERMISSIONS:"APP_PERMISSIONS",FREE_UI_CUSTOMIZATION:"FREE_UI_CUSTOMIZATION",PREMIUM_UI_CUSTOMIZATION:"PREMIUM_UI_CUSTOMIZATION",TELEPHONY_MAKE_CALL_CTI_APP:"TELEPHONY_MAKE_CALL_CTI_APP",CLOUD_PBX_WELCOME:"CLOUD_PBX_WELCOME",BUBBLE_TAG_COUNT:"BUBBLE_TAG_COUNT",TELEPHONY_CCD_AGENT:"TELEPHONY_CCD_AGENT",ALERT_NOTIFICATIONS_ALLOWED:"ALERT_NOTIFICATIONS_ALLOWED",BUBBLE_FOLDER_COUNT:"BUBBLE_FOLDER_COUNT",BUBBLE_POP_OUT_VIDEO_SHARING:"BUBBLE_POP_OUT_VIDEO_SHARING",ACCESSIBILITY_KEYBOARD_SHORTCUTS:"ACCESSIBILITY_KEYBOARD_SHORTCUTS",WEBRTC_ADD_PARTICIPANT:"WEBRTC_ADD_PARTICIPANT",WEBINAR_ACCESS:"WEBINAR_ACCESS",WEBINAR_MAX_ORGANIZERS:"WEBINAR_MAX_ORGANIZERS",WEBINAR_MAX_PARTICIPANTS:"WEBINAR_MAX_PARTICIPANTS",BLURRING_UI_2_0:"BLURRING_UI_2_0",CONFERENCE_UI_3_0:"CONFERENCE_UI_3_0",TELEPHONY_MAX_KEYS:"TELEPHONY_MAX_KEYS",TELEPHONY_MAX_SPEED_DIALING_KEYS:"TELEPHONY_MAX_SPEED_DIALING_KEYS",TELEPHONY_MAX_FEATURE_CODE_KEYS:"TELEPHONY_MAX_FEATURE_CODE_KEYS",TELEPHONY_MAX_SUPERVISION_KEYS:"TELEPHONY_MAX_SUPERVISION_KEYS",CONNECTIVITY_ALL_USER:"CONNECTIVITY_ALL_USER",WEBRTC_BLIND_TRANSFER_CALL:"WEBRTC_BLIND_TRANSFER_CALL",TELEPHONY_ADD_PARTICIPANT:"TELEPHONY_ADD_PARTICIPANT",TELEPHONY_BASIC_ATTENDANT_CONSOLE:"TELEPHONY_BASIC_ATTENDANT_CONSOLE",MIX_WEBRTC_PSTN_CALLS:"MIX_WEBRTC_PSTN_CALLS",CLOUD_PBX_PERSONAL_ROUTINES:"CLOUD_PBX_PERSONAL_ROUTINES",TELEPHONY_MULTI_WEBRTC_GATEWAY:"TELEPHONY_MULTI_WEBRTC_GATEWAY",WEBRTC_GRID49:"WEBRTC_GRID49",WEBRTC_CONFERENCE_V2_MODEL:"WEBRTC_CONFERENCE_V2_MODEL",TELEPHONY_OXO_MULTICALL:"TELEPHONY_OXO_MULTICALL",WEBRTC_MODULATE_VIDEO_QUALITY:"WEBRTC_MODULATE_VIDEO_QUALITY",ADMIN_ALARMS:"ADMIN_ALARMS",FLEXIBLE_PANEL:"FLEXIBLE_PANEL",BUBBLE_PSTN_DIALIN:"BUBBLE_PSTN_DIALIN",CONFERENCE_RECORDING_MAX_TIMER:"CONFERENCE_RECORDING_MAX_TIMER",PERSONAL_DIRECTORY:"PERSONAL_DIRECTORY",MSO365_TEAMS_PRESENCE:"MSO365_TEAMS_PRESENCE",ELEARNING_TRAINING:"ELEARNING_TRAINING",REPORT_A_PROBLEM:"REPORT_A_PROBLEM",WEBRTC_MANAGE_TWO_CALLS:"WEBRTC_MANAGE_TWO_CALLS",SUPERVISION_GROUP_SUPERVISOR_ALLOWED:"SUPERVISION_GROUP_SUPERVISOR_ALLOWED",TELEPHONY_CALL_POPOUT:"TELEPHONY_CALL_POPOUT",TELEPHONY_OXE_EMERGENCY:"TELEPHONY_OXE_EMERGENCY",MESSAGE_BOOKMARK:"MESSAGE_BOOKMARK",CLOUD_PBX_CALL_QUEUE_MAX_USERS:"CLOUD_PBX_CALL_QUEUE_MAX_USERS",CLOUD_PBX_MANAGER_ASSISTANT:"CLOUD_PBX_MANAGER_ASSISTANT"},this.rxSubject=new rxjs_1.Subject,this.started=!1,this.features={},this.profiles=[],this.mainOffers=[],this.thirdPartyApps=null,this.profileEventHandler=null,this.timer=null,this.contactService=contact_service_1.ContactService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.profileService||(win.rainbow.profileService=new ProfileService),win.rainbow.profileService}async start(){try{this.logger.info(""),this.logger.info("[profileService] === STARTING ==="),this.attachHandlers(),await this.getServerProfile(),this.started=!0,this.logger.info("[profileService] === STARTED ==="),this.rxSubject.next(event_model_1.RBEvent.create("ON_PROFILE_FEATURES_UPDATED"))}catch(error){throw this.logger.info("[profileService] === STARTING FAILURE === "+error.message),error}}async stop(){this.logger.info("[profileService] === STOPPING ==="),this.detachHandlers(),this.started=!1,this.logger.info("[profileService] === STOPPED ===")}reconnect(){this.restart()}restart(){this.logger.info("[profileService] === RESTART ==="),this.attachHandlers(),this.onUserUpdateNeeded()}subscribe(handler){return this.rxSubject.subscribe(handler)}attachHandlers(){this.detachHandlers(),this.logger.info("[profileService] attachHandlers"),this.profileEventHandler=this.xmppService.addHandler(stanza=>this.onManagementMessageReceived(stanza),null,"message","management")}detachHandlers(){this.logger.info("[profileService] detachHandlers"),this.profileEventHandler&&(this.xmppService.deleteHandler(this.profileEventHandler),this.profileEventHandler=null)}onManagementMessageReceived(stanza){try{const userprofileElem=$(stanza).find("userprofile");if(userprofileElem.length)switch(this.logger.info("[profileService] onManagementMessageReceived  -- on userprofile management message received"),userprofileElem.attr("action")){case"create":case"update":case"delete":this.onUserUpdateNeeded();break;default:this.logger.info("[profileService] onManagementMessageReceived  -- unknown action")}return!0}catch(error){return this.logger.error("[profileService] onManagementMessageReceived ERROR "+error),!0}}onUserUpdateNeeded(){this.timer||(this.timer=setTimeout(async()=>{try{await this.contactService.updateContactFromServer(this.contactService.userContact,!0),await this.getServerProfile(),this.rxSubject.next(event_model_1.RBEvent.create("ON_PROFILE_FEATURES_UPDATED")),this.timer=null}catch(error){this.timer=null,this.logger.info("[profileService] === onUserUpdateNeeded FAILURE === "+error.message)}},3e3))}getServerProfile(){return Promise.all([this.getServerProfiles(),this.getServerProfilesFeatures()])}async getServerProfiles(){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/profiles`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.profiles=[],this.mainOffers=[],responseData.data.forEach(profileData=>{this.logger.debug("[profileService] getServerProfiles === response === "+profileData),this.profiles.push(profileData);const offer=offer_model_1.Offer.createFromProfileData(profileData);(offer.isExclusive||offer.isDefault)&&this.mainOffers.push(offer)}),this.mainOffers.sort(offer_model_1.Offer.offerComparator)}catch(error){let errorMessage="getServerProfiles failure: no server response";throw error&&(errorMessage="getServerProfiles failure: "+JSON.stringify(error)),this.logger.error("[profileService] "+errorMessage),new Error(errorMessage)}}async getServerProfilesFeatures(){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/profiles/features`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.features={},responseData.data.forEach(featureData=>{this.logger.debug("[profileService] getServerProfilesFeatures === response === "+JSON.stringify(featureData)),featureData.hasOwnProperty("featureUniqueRef")&&(this.features[featureData.featureUniqueRef]=featureData)})}catch(error){let errorMessage="getServerProfilesFeatures failure: no server response";throw error&&(errorMessage="getServerProfilesFeatures failure: "+JSON.stringify(error)),this.logger.error("[profileService] "+errorMessage),new Error(errorMessage)}}isFeatureEnabled(featureUniqueRef,features=null){if(features||(features=this.features),"TELEPHONY_OXE_EMERGENCY"===featureUniqueRef){if("RQRAINB-7280"===this.settingsService.getSetting("sipWiseMode"))return!0}return!(!config.urgencyNotifReceptionForced||"ALERT_NOTIFICATIONS_ALLOWED"!==featureUniqueRef)||(this.started&&features.hasOwnProperty(featureUniqueRef)&&features[featureUniqueRef].hasOwnProperty("featureType")&&"boolean"===features[featureUniqueRef].featureType&&features[featureUniqueRef].hasOwnProperty("isEnabled")?features[featureUniqueRef].isEnabled:(this.logger.info("[profileService] isFeatureEnabled("+featureUniqueRef+"): service not started or feature not enabled"),!1))}getFeatureLimitMax(featureUniqueRef,features=null){if(features||(features=this.features),this.started&&features.hasOwnProperty(featureUniqueRef)&&features[featureUniqueRef].hasOwnProperty("featureType")&&"number"===features[featureUniqueRef].featureType&&features[featureUniqueRef].hasOwnProperty("limitMax")){const limitMax=features[featureUniqueRef].limitMax;return this.logger.debug("[profileService] getFeatureLimitMax("+featureUniqueRef+"): "+limitMax),limitMax}return this.logger.info("[profileService] getFeatureLimitMax("+featureUniqueRef+"): service not started or feature not enabled"),0}getFeatureLimitMin(featureUniqueRef,features=null){if(features||(features=this.features),this.started&&features.hasOwnProperty(featureUniqueRef)&&features[featureUniqueRef].hasOwnProperty("featureType")&&"number"===features[featureUniqueRef].featureType&&features[featureUniqueRef].hasOwnProperty("limitMin")){const limitMin=features[featureUniqueRef].limitMin;return this.logger.debug("[profileService] getFeatureLimitMin("+featureUniqueRef+"): "+limitMin),limitMin}return this.logger.info("[profileService] getFeatureLimitMin("+featureUniqueRef+"): service not started or feature not enabled"),0}getMyProfileOffer(){return this.mainOffers.length>0?this.mainOffers.slice(-1)[0]:null}getMyProfileName(){const profile=this.getMyProfileOffer();return profile?profile.name:null}getMyProfiles(){let profiles=[];return this.started?profiles=this.profiles:this.logger.warn("[profileService] getMyProfiles(): service not started"),profiles}getMyProfileFeatures(){const profileFeatures={};return this.started?Object.keys(this.features).forEach(featureUniqueRef=>{const originalFeature=this.features[featureUniqueRef],feature={};Object.keys(originalFeature).filter(featureProperty=>"featureUniqueRef"===featureProperty||"featureType"===featureProperty||"limitMin"===featureProperty||"limitMax"===featureProperty||"isEnabled"===featureProperty).forEach(featureProperty=>{feature[featureProperty]=originalFeature[featureProperty]}),profileFeatures[featureUniqueRef]=feature}):this.logger.warn("[profileService] getMyProfileFeatures(): service not started"),profileFeatures}async getThirdPartyApps(force=!1){try{if(null!==this.thirdPartyApps&&!force)return this.logger.info("[profileService] getThirdPartyApps -- from cache"),this.thirdPartyApps;const url=config.restServerUrl+"/api/rainbow/authentication/v1.0/oauth/tokens?format=medium",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[profileService] getThirdPartyApps from server -- success"),this.thirdPartyApps=responseData&&responseData.data?responseData.data:[],this.thirdPartyApps}catch(error){let errorMessage="getThirdPartyApps from server failed -- no answer from server";throw error&&(errorMessage="getThirdPartyApps from server failed -- "+JSON.stringify(error)),this.logger.error("[profileService] "+errorMessage),new Error(errorMessage)}}async revokeThirdPartyAccess(tokenId){try{if(!tokenId)throw this.logger.warn("[profileService] revokeThirdPartyAccess missing token"),new Error("No tokenId");this.logger.info("[profileService] revokeThirdPartyAccess with token -- "+tokenId);const url=`${config.restServerUrl}/api/rainbow/authentication/v1.0/oauth/tokens/${tokenId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[profileService] revokeThirdPartyAccess -- success"),this.thirdPartyApps||(this.thirdPartyApps=responseData&&responseData.data?responseData.data:[]),this.thirdPartyApps.forEach((app,index)=>{app.id===tokenId&&this.thirdPartyApps.splice(index,1)}),this.thirdPartyApps}catch(error){let errorMessage="revokeThirdPartyAccess from server failed -- no answer from server";throw error&&(errorMessage="revokeThirdPartyAccess from server failed -- "+JSON.stringify(error)),this.logger.error("[profileService] "+errorMessage),new Error(errorMessage)}}getProfilesByName(name){return this.profiles.filter(profile=>-1!==profile.profileName.toLowerCase().indexOf(name))}async setUserData(params){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify(params),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info(`[profileService] setUserData ${body} -- success`),responseData}catch(error){let errorMessage="setUserData failure: no server response";throw error&&(errorMessage="setUserData failure: "+JSON.stringify(error)),this.logger.error("[profileService] "+errorMessage),new Error(errorMessage)}}}exports.ProfileService=ProfileService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return SubjectSubscriber})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Subject}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Observable__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(5),_Subscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(2),_Subscription__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(10),_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(42),_SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(128),_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(74),SubjectSubscriber=function(_super){function SubjectSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(SubjectSubscriber,_super),SubjectSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__.a),Subject=function(_super){function Subject(){var _this=_super.call(this)||this;return _this.observers=[],_this.closed=!1,_this.isStopped=!1,_this.hasError=!1,_this.thrownError=null,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(Subject,_super),Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__.a]=function(){return new SubjectSubscriber(this)},Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);return subject.operator=operator,subject},Subject.prototype.next=function(value){if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__.a;if(!this.isStopped)for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].next(value)},Subject.prototype.error=function(err){if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__.a;this.hasError=!0,this.thrownError=err,this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].error(err);this.observers.length=0},Subject.prototype.complete=function(){if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__.a;this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].complete();this.observers.length=0},Subject.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},Subject.prototype._trySubscribe=function(subscriber){if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__.a;return _super.prototype._trySubscribe.call(this,subscriber)},Subject.prototype._subscribe=function(subscriber){if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__.a;return this.hasError?(subscriber.error(this.thrownError),_Subscription__WEBPACK_IMPORTED_MODULE_3__.a.EMPTY):this.isStopped?(subscriber.complete(),_Subscription__WEBPACK_IMPORTED_MODULE_3__.a.EMPTY):(this.observers.push(subscriber),new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__.a(this,subscriber))},Subject.prototype.asObservable=function(){var observable=new _Observable__WEBPACK_IMPORTED_MODULE_1__.a;return observable.source=this,observable},Subject.create=function(destination,source){return new AnonymousSubject(destination,source)},Subject}(_Observable__WEBPACK_IMPORTED_MODULE_1__.a),AnonymousSubject=function(_super){function AnonymousSubject(destination,source){var _this=_super.call(this)||this;return _this.destination=destination,_this.source=source,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(AnonymousSubject,_super),AnonymousSubject.prototype.next=function(value){var destination=this.destination;destination&&destination.next&&destination.next(value)},AnonymousSubject.prototype.error=function(err){var destination=this.destination;destination&&destination.error&&this.destination.error(err)},AnonymousSubject.prototype.complete=function(){var destination=this.destination;destination&&destination.complete&&this.destination.complete()},AnonymousSubject.prototype._subscribe=function(subscriber){return this.source?this.source.subscribe(subscriber):_Subscription__WEBPACK_IMPORTED_MODULE_3__.a.EMPTY},AnonymousSubject}(Subject)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const md5_1=__webpack_require__(385),core_1=__webpack_require__(43),core_2=__webpack_require__(43),rxjs_1=__webpack_require__(7),logger_service_1=__webpack_require__(4);class MainService{constructor(){this.appVisible=new rxjs_1.BehaviorSubject(!0),this.appActive=new rxjs_1.BehaviorSubject(!0),this.appActiveAutoAway=!0,this.appActiveDelay=180,this.appActiveTimeout=null,this.appActiveListener=null,this.appConnected=new rxjs_1.BehaviorSubject(!1),this.appConnectivity=new rxjs_1.BehaviorSubject(!1),this.appConnectivityValue=!1,this.appConnectivityTimeout=null,this.globalPopupMessageSubject=null,this.logger=logger_service_1.LoggerService.getInstance();const win=window;win.moduleIds||(win.moduleIds=[]),win.config||(win.config={xmpp:{protocol:"wss",currentServer:null,port:"443",pingInterval:"60000"},webservices:{protocol:"https",currentServer:null,port:"443"}}),window.addEventListener("blur",()=>{this.logger.debug("[MainService] Application visibility change : false"),this.appVisible.next(!1)}),window.addEventListener("focus",()=>{this.logger.debug("[MainService] Application visibility change : true"),this.appVisible.next(!0)}),this.appActiveListener=()=>{this.appActive.value||this.appActive.next(!0),this.appActiveTimeout&&(clearTimeout(this.appActiveTimeout),this.appActiveTimeout=null),window.document.removeEventListener("mousemove",this.appActiveListener),window.document.removeEventListener("keypress",this.appActiveListener),setTimeout(()=>{this.startTimer()},2e3)},this.appConnectivityValue=navigator.onLine,window.addEventListener("offline",()=>{this.logger.debug("[MainService] Connectivity change : down"),this.appConnectivityTimeout&&(clearInterval(this.appConnectivityTimeout),this.appConnectivityTimeout=null),this.appConnectivityValue&&(this.appConnectivityValue=!1,this.appConnectivityTimeout=setTimeout(()=>{this.appConnectivity.next(!1)},2500))}),window.addEventListener("online",()=>{this.logger.debug("[MainService] Connectivity change : up"),this.appConnectivityTimeout&&(clearInterval(this.appConnectivityTimeout),this.appConnectivityTimeout=null),this.appConnectivityValue||(this.appConnectivityValue=!0,this.appConnectivityTimeout=setTimeout(()=>{this.appConnectivity.next(!0)},1e3))}),win.BroadcastChannel&&(this.broadcastChannelSubject=new rxjs_1.Subject,this.broadcastChannel=new BroadcastChannel("rainbowBroadcastChannel"),this.broadcastChannel.onmessage=event=>{this.broadcastChannelSubject.next(event)},this.globalPopupMessageSubject=new rxjs_1.Subject);const{fetch:originalFetch}=window;window.fetch=async(...args)=>{const[resource,httpConfig]=args;let isRainbowUrl=!1;if(config&&config.webservices){isRainbowUrl=-1!==resource.toString().split("?")[0].indexOf(config.webservices.currentServer)}if(httpConfig&&httpConfig.headers&&isRainbowUrl){const OS=navigator.platform.toUpperCase().indexOf("MAC")>=0?"osx":"win";if(window.sdk&&window.sdk.key&&window.sdk.key.appID)httpConfig.headers["x-rainbow-client-id"]=window.sdk.key.appID,httpConfig.headers["x-rainbow-client"]="web_sdk_"+OS,httpConfig.headers["x-rainbow-client-version"]=window.sdkversion?window.sdkversion:"9.99.9",httpConfig.headers["x-rainbow-correlation-id"]="web_sdk_"+crypto.randomUUID();else{const prefix=this.isDesktopApp()?"desk_":"web_";httpConfig.headers["x-rainbow-client"]=prefix+OS,httpConfig.headers["x-rainbow-client-version"]=version,httpConfig.headers["x-rainbow-correlation-id"]=prefix+crypto.randomUUID()}}try{const response=await originalFetch(resource,httpConfig);if(httpConfig){httpConfig.method||(httpConfig.method="GET");const resources=resource.toString().split("?");resources[1]&&(resources[0]+="?URI_HIDDEN_PARAMS");const requestId=response.headers&&response.headers.get("x-rainbow-request-id")?` (x-rainbow-request-id:${response.headers.get("x-rainbow-request-id")})`:"",correlationId=response.headers&&response.headers.get("x-rainbow-correlation-id")?` (x-rainbow-correlation-id:${response.headers.get("x-rainbow-correlation-id")})`:"",appVersion=response.headers&&response.headers.get("x-rainbow-client-version")?` (x-rainbow-client-version:${response.headers.get("x-rainbow-client-version")})`:"";this.logger.debug(`[HTTP] [${httpConfig.method}] [${response.status}] ${resources[0]} ${requestId} ${correlationId} ${appVersion}`)}return response}catch(error){if(httpConfig){httpConfig.method||(httpConfig.method="GET");const resources=resource.toString().split("?");resources[1]&&(resources[0]+="?URI_HIDDEN_PARAMS");const correlationId=httpConfig.headers&&httpConfig.headers["x-rainbow-correlation-id"]?` (x-rainbow-correlation-id:${httpConfig.headers["x-rainbow-correlation-id"]})`:"";this.logger.warn(`[HTTP] [${httpConfig.method}] ${resources[0]} ${correlationId} -- ${error}`)}else this.logger.debug("[HTTP] "+error);throw error}}}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.mainService||(win.rainbow.mainService=new MainService),win.rainbow.mainService}static MD5(date){return md5_1.MD5(core_1.Latin1.parse(date)).toString(core_2.Hex)}configure(centralizedService=null,sdkConfig=null){if(sdkConfig)return this.appActiveAutoAway=sdkConfig.autoAway,this.appActiveDelay=sdkConfig.autoAwayDelay,void this.startTimer();this.logger.info("[MainService] STARTED"),centralizedService&&centralizedService.isDesktopApp()?(centralizedService.idle.setDetectionInterval(this.appActiveDelay),centralizedService.idle.onStateChanged.addListener(state=>{this.appActive.next("active"===state)})):this.startTimer()}startTimer(){this.appActiveTimeout&&(clearTimeout(this.appActiveTimeout),this.appActiveTimeout=null),this.appActiveTimeout=setTimeout(()=>{this.appActive.next(!1)},1e3*this.appActiveDelay),window.document.addEventListener("mousemove",this.appActiveListener),window.document.addEventListener("keypress",this.appActiveListener)}isDesktopApp(){const ua=navigator.userAgent.toLowerCase();return ua.indexOf("qtwebengine")>-1||ua.indexOf("electron/")>-1}broadcastChannelSubscribe(handler){return this.broadcastChannelSubject.subscribe(handler)}postBroadcastChannelMessage(message){this.broadcastChannel.postMessage(message)}showGlobalPopupMessage(popupMessageData){this.globalPopupMessageSubject.next({show:!0,data:popupMessageData})}hideGlobalPopupMessage(){this.globalPopupMessageSubject.next({show:!1})}inject(serviceName){return window.rainbow[serviceName]}}exports.MainService=MainService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return asyncScheduler})),__webpack_require__.d(__webpack_exports__,"a",(function(){return async}));var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(53),asyncScheduler=new(__webpack_require__(51).a)(_AsyncAction__WEBPACK_IMPORTED_MODULE_0__.a),async=asyncScheduler},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isArray}));var isArray=function(){return Array.isArray||function(x){return x&&"number"==typeof x.length}}()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19);class SettingsService{constructor(){this.automaticHookOff=!1,this.automaticHookOffTime=0,this.timers=[],this.languageCodes=[],this.defaultLanguage={label:"English",settingCode:"en",code:"en",isoCode:"en",codeMoment:"en",unicode:"1f1ec-1f1e7"},this.languages=[this.defaultLanguage,{label:"Français",settingCode:"fr",code:"fr",isoCode:"fr",codeMoment:"fr",unicode:"1f1eb-1f1f7"},{label:"Català",settingCode:"ca",code:"ca",isoCode:"ca",codeMoment:"ca",unicode:"1f1ea-1f1f8"},{label:"Czech",settingCode:"cs",code:"cs",isoCode:"cs",codeMoment:"cs",unicode:"1F1E8-1F1FF"},{label:"Deutsch",settingCode:"de",code:"de",isoCode:"de",codeMoment:"de",unicode:"1f1e9-1f1ea"},{label:"Español",settingCode:"es-es",code:"es-es",isoCode:"es-ES",codeMoment:"es",unicode:"1f1ea-1f1f8"},{label:"Suomi",settingCode:"fi",code:"fi",isoCode:"fi",codeMoment:"fi",unicode:"1f1eb-1f1ee"},{label:"Italiano",settingCode:"it",code:"it",isoCode:"it",codeMoment:"it",unicode:"1f1ee-1f1f9"},{label:"עברית",settingCode:"he",code:"he",isoCode:"he",codeMoment:"he",unicode:"1f1ee-1f1f1"},{label:"日本語",settingCode:"ja",code:"ja",isoCode:"ja",codeMoment:"ja",unicode:"1f1ef-1f1f5"},{label:"한국어",settingCode:"ko",code:"ko",isoCode:"ko",codeMoment:"ko",unicode:"1f1f0-1f1f7"},{label:"Nederlands",settingCode:"nl",code:"nl",isoCode:"nl",codeMoment:"nl",unicode:"1F1F3-1F1F1"},{label:"Nynorsk",settingCode:"no",code:"no",isoCode:"no",codeMoment:"nn",unicode:"1F1F3-1F1F4"},{label:"Português do Brasil",settingCode:"pt-br",code:"pt-BR",isoCode:"pt-BR",codeMoment:"pt-br",unicode:"1F1E7-1F1F7"},{label:"Português",settingCode:"pt-pt",code:"pt-PT",isoCode:"pt-PT",codeMoment:"pt",unicode:"1F1F5-1F1F9"},{label:"Polski",settingCode:"pl",code:"pl",isoCode:"pl",codeMoment:"pl",unicode:"1F1F5-1F1F1"},{label:"Pусский",settingCode:"ru",code:"ru",isoCode:"ru",codeMoment:"ru",unicode:"1F1F7 1F1FA"},{label:"Svenskt",settingCode:"sv-se",code:"sv-SE",isoCode:"sv-SE",codeMoment:"sv",unicode:"1F1F8-1F1EA"},{label:"Türkçe",settingCode:"tr",code:"tr",isoCode:"tr",codeMoment:"tr",unicode:"1f1f9-1f1f7"},{label:"中文",settingCode:"zh-cn",code:"zh-cn",isoCode:"zh-CN",codeMoment:"zh-cn",unicode:"1f1e8-1f1f3"},{label:"繁體中文",settingCode:"zh-tw",code:"zh-TW",isoCode:"zh-TW",codeMoment:"zh-tw",unicode:"1F1F9-1F1FC"},{label:"العربية",settingCode:"ar",code:"ar",isoCode:"ar",codeMoment:"ar",unicode:"0600-06FF"}],this.settings={init:!0,lang:"en",imSound:"true",imNotif:"true",displayOrder:"FL",nbMaxConversations:"100",microphone:"default",headsetMicrophone:null,speakerphoneMicrophone:null,customMicrophone:null,headsetDeviceName:null,speakerphoneDeviceName:null,speaker:"default",headsetSpeaker:null,speakerphoneSpeaker:null,customSpeaker:null,ringingSpeaker:"default",ringingSpeakerName:"",camera:"default",cameraUsed:"",audioProfile:"handfree",currentDevice:null,iceConfig:null,sdk:!1,userWiewOrderType:"lastname",userWiewFilterType:"all",autoStartAnimatedGif:"false",fixedLayout:"false",theme:"default",translationMsg:"false",newUI:"false",autoAcceptRoomInvite:"false",server:null,activeAlarm:"relax1",activeNotif:"stairs",ringingOnDnd:!1,devMode:"false",hasSecondRinger:"false",validationMode:"false",disableCalendarPresence:"false",deviceList:"[]",displayFilesType:"filesListCell--as-grid",displayRoomsAsGrid:"true",conversationsDensity:"default",collapsedButton:"false",displayCollapsedConversations:"false",handFreeInputDeviceName:null,handFreeOutputDeviceName:null,customSpeakerName:null,customMicrophoneName:null,showBodyMessage:"false",bubblesFilterType:"all",bubblesOrderType:"lastActivityDate",webinarsFilterType:"all",webinarsOrderType:"lastActivityDate",displayWebinarsAsGrid:"false",protectionAgainstMailTypeOffline:!1,channelMarkdown:"false",enableKeyboardLog:"false",searchFilterValue:"NoFiltering",enableSingleSignOnWebAuthPopup:"false",enableSingleSignOnConfig:"false",extension:"false",enableDSCP:!1,filterIce:!1,dtx:!1,debugWebRTC:!1,sipWiseMode:"false",fontSize:"62.5%",lastInactiveBubbleShownDate:null,meetingsOrderType:"lastActivityDate",meetingsFilterType:"all",filesOrderBy:"date",filesFilterBy:"all",enterKeyAction:"enterSend",activeTalker:!1,forceConsoleLog:!1,sfuJoinBundle:!1,geoip:"",applyCalendarPresence:!1,informationImSound:"ding",importantImSound:"important",emergencyImSound:"emergency",showNewAnalytics:!1,analyticsValidationMode:!1,sfuCustomMuteMode:!1,ccdPhoneTypeSelected:"computer",ccdProACDNumber:"",ccdOtherPhoneNumber:"",ccdGroupNumber:"",webrtcStats:"false",enableDebugMode:"false",enableAioUrlMode:"false",enableDebugConnectionMode:"false",analyticsGUIConfig:null,sfuDisableVideos:!1,sfuRecording:"false",virtualBackgroundFlag:"false",virtualBackgroundType:"none",virtualBackgroundMirror:"true",testConfigEnabled:!1,imgVirtualBackground:"",autoAnswer:!1,autoAnswerByDeviceType:"",enablePBXDisplayForAllCases:"false",grid49:"false",callLogsViewMode:"condensed",subLevelV3:"false",enableIceRestartOnHold:"false",enableIceRestartOnUnhold:"false",disableWaitingCallTone:"false",subtitles:"false",webConfServiceV2:"false",isAutomaticHookOff:"false",automaticHookOffTime:"0",joinWithoutAudio:"false",pmode:"false",toneOnSecondaryRingerOnly:"false",applyMsTeamsPresence:!1,autoPopoutMode:!1,openPopoutOnAnswerCall:!1,openPopoutOnMinimize:!1,allowToCreateManagerAssistant:"true",unreadStyle:"red-line"},this.updateSubject=new rxjs_1.Subject}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.settingsService||(win.rainbow.settingsService=new SettingsService),win.rainbow.settingsService}configure(defaultLanguage){this.languageCodes=this.languages.map(language=>language.settingCode);const localSettings=this.getLocalStorageSettings();if(localSettings.init)defaultLanguage&&(localSettings.lang=this.getMappedLanguage(defaultLanguage),this.setAppliLanguageCode(localSettings.lang)),Object.keys(localSettings).forEach(key=>{null!==localSettings[key]&&(this.settings[key]=localSettings[key])});else{const browser=navigator,browserLanguage=browser.languages?browser.languages[0]:browser.language||browser.userLanguage,preferredLanguage=defaultLanguage||browserLanguage;this.settings.lang=this.getMappedLanguage(preferredLanguage),this.setAppliLanguageCode(this.settings.lang),Object.keys(this.settings).forEach(key=>{localStorage.setItem(key,this.settings[key])})}this.sendUpdateEvent(event_model_1.RBEvent.create("SETTINGS_UPDATED"))}setSetting(key,value){this.settings[key]=value,localStorage.setItem(key,value)}getSetting(key){return this.settings[key]}getBooleanSetting(key){return"true"===this.settings[key]}setSettingTemporarly(key,value,time=3e5){const previousValue=this.settings[key];this.settings[key]=value,this.timers.push(setTimeout(()=>{this.settings[key]=previousValue},time))}sendUpdateEvent(event){this.updateSubject.next(event)}subscribeUpdateEvent(eventName,handler){return this.updateSubject.subscribe(event=>{event.name===eventName&&handler(event.data)})}getLocalStorageSettings(){const settings={};return Object.keys(this.settings).forEach(key=>{settings[key]=localStorage.getItem(key)}),settings.nbMaxConversations?parseInt(settings.nbMaxConversations,10)<50&&this.setSetting("nbMaxConversations","50"):settings.nbMaxConversations=this.settings.nbMaxConversations,"default"===settings.headsetMicrophone&&(settings.headsetMicrophone=null),"default"===settings.headsetSpeaker&&(settings.headsetSpeaker=null),"default"===settings.speakerphoneMicrophone&&(settings.speakerphoneMicrophone=null),"default"===settings.speakerphoneSpeaker&&(settings.speakerphoneSpeaker=null),"default"===settings.customMicrophone&&(settings.customMicrophone=null),"default"===settings.customSpeaker&&(settings.customSpeaker=null),"true"===settings.webConfServiceV2&&(config.confV2Model=!0),settings}getRedirectVoIP(){return"false"===this.getSetting("ringingOnDnd").toString()}setRedirectVoIP(redirectVoIP){this.settings.ringingOnDnd=!redirectVoIP,localStorage.setItem("ringingOnDnd",(!redirectVoIP).toString())}isAutomaticHookOff(){return"true"===this.getSetting("isAutomaticHookOff").toString()}setAutomaticHookOff(isActivated){this.setSetting("isAutomaticHookOff",isActivated.toString())}getAutomaticHookOffTime(){return parseInt(this.getSetting("automaticHookOffTime").toString(),10)}setAutomaticHookOffTime(milliseconds){this.setSetting("automaticHookOffTime",milliseconds.toString())}setIceConfig(iceConfig){this.settings.iceConfig=iceConfig}getAvailableLanguages(){return this.languages}getAppliLanguage(){const language=this.languages.filter(lang=>lang.settingCode===this.settings.lang)[0];return language||this.defaultLanguage}getAppliLanguageCodeForServer(){const langArray=this.settings.lang.split("-");return 1===langArray.length?this.settings.lang:langArray[0]+"-"+langArray[1].toUpperCase()}setAppliLangageCodeFromServer(serverCode){const langArray=serverCode.split("-");let clientCode=langArray[0];clientCode&&(clientCode=clientCode.toLowerCase()),2===langArray.length&&(clientCode+="-"+langArray[1].toLowerCase()),clientCode=this.getMappedLanguage(clientCode),clientCode=this.languageCodes.indexOf(clientCode)>=0?clientCode:"en",this.setAppliLanguageCode(clientCode)}setAppliLanguageCode(lang,save=!1){save?this.setSetting("lang",lang):this.settings.lang=lang,this.sendUpdateEvent(event_model_1.RBEvent.create("LANGUAGE_UPDATED",lang))}getBestLanguageForIsoCode(isoCode){const language=this.getLanguageByIsoCode(isoCode);if(language)return language;if(-1!==isoCode.indexOf("-")){const isoLanguageWithoutCountry=isoCode.split("-")[0];return this.getLanguageByIsoCode(isoLanguageWithoutCountry)}return this.getLanguageByIsoCode("en")}getSimpleLanguageCode(isoCode){if(!isoCode)return"en";const isoCodeLower=isoCode.toLowerCase();if(-1!==isoCodeLower.indexOf("-")){return isoCodeLower.split("-")[0]}return isoCodeLower}getLanguageByIsoCode(isoCode){return this.languages.find(lang=>lang.isoCode===isoCode)}getMappedLanguage(codedLanguage){if(!codedLanguage)return"en";const codedLang=codedLanguage.toLowerCase();switch(codedLang.split("-")[0]){case"ar":return"ar";case"ca":return"ca";case"cs":return"cs";case"en":return"en";case"fr":return"fr";case"de":return"de";case"es":return"es-es";case"fi":return"fi";case"it":return"it";case"he":return"he";case"ja":return"ja";case"ko":return"ko";case"nl":return"nl";case"no":return"no";case"pt":return"pt-br"===codedLang?"pt-br":"pt-pt";case"pl":return"pl";case"ru":return"ru";case"sv":return"sv-se";case"tr":return"tr";case"zh":return["zh-cn","zh-tw"].indexOf(codedLang)>=0?codedLang:"zh-cn";default:return"en"}}isHybridTelephonySettingsCustomEnabled(){return!1}async getHybridTelephonyCustomizationManifest(){return{version:"1",extensionPoints:{onIncomingPbxCallActions:[{name:"",command:{url:"",params:""}}],onIncomingPbxCallButtonActions:[{name:"",command:{url:"",params:""}}]}}}async setHybridTelephonyCustomizationManifest(manifest){console.error(manifest)}}exports.SettingsService=SettingsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class RBEvent{constructor(name,data){this.name=null,this.data=null,this.name=name,this.data=data}static create(name,data=null){return new RBEvent(name,data)}}exports.RBEvent=RBEvent},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return map}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2);function map(project,thisArg){return function(source){if("function"!=typeof project)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return source.lift(new MapOperator(project,thisArg))}}var MapOperator=function(){function MapOperator(project,thisArg){this.project=project,this.thisArg=thisArg}return MapOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapSubscriber(subscriber,this.project,this.thisArg))},MapOperator}(),MapSubscriber=function(_super){function MapSubscriber(destination,project,thisArg){var _this=_super.call(this,destination)||this;return _this.project=project,_this.count=0,_this.thisArg=thisArg||_this,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(MapSubscriber,_super),MapSubscriber.prototype._next=function(value){var result;try{result=this.project.call(this.thisArg,value,this.count++)}catch(err){return void this.destination.error(err)}this.destination.next(result)},MapSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";function isScheduler(value){return value&&"function"==typeof value.schedule}__webpack_require__.d(__webpack_exports__,"a",(function(){return isScheduler}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return EMPTY})),__webpack_require__.d(__webpack_exports__,"b",(function(){return empty}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),EMPTY=new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){return subscriber.complete()}));function empty(scheduler){return scheduler?function(scheduler){return new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){return scheduler.schedule((function(){return subscriber.complete()}))}))}(scheduler):EMPTY}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return from}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(60),_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(127);function from(input,scheduler){return scheduler?Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__.a)(input,scheduler):input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__.a?input:new _Observable__WEBPACK_IMPORTED_MODULE_0__.a(Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__.a)(input))}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);class Company{constructor(data){this.logo=null,this.nameForLogs="",this.banner=null,this.office365ScopesGranted=[],this.visibility="public",Company.attributes.forEach(attribute=>{void 0!==data[attribute.name]?this[attribute.name]=data[attribute.name]:void 0!==attribute.defaultValue&&(this[attribute.name]=attribute.defaultValue)}),this.state=data.state?data.state:"USA"===data.country?"AL":"CAN"===data.country?"AB":null,this.name&&(this.filterName=this.name.toLowerCase()),this.rxSubject=new rxjs_1.Subject}static create(id,name){return new Company({id:id,name:name})}static createFromData(data){const company=new Company(data);return company.selectedThemeCustomers||(company.selectedThemeCustomers={}),company.selectedTheme||(company.selectedTheme={}),company}static prune(data,userContact){const dataCopy=Object.assign({},data);return delete dataCopy.dataLocation,delete dataCopy.businessSpecific,dataCopy.selectedTheme&&dataCopy.selectedTheme.hasOwnProperty("isFromBp")&&delete dataCopy.selectedTheme.isFromBp,dataCopy.selectedThemeCustomers&&dataCopy.selectedThemeCustomers.hasOwnProperty("isFromBp")&&delete dataCopy.selectedThemeCustomers.isFromBp,delete dataCopy.giphyEnabled,dataCopy.isBP?"VAD"!==dataCopy.bpType&&"DR"!==dataCopy.bpType&&delete dataCopy.bpBusinessType:(delete dataCopy.bpType,delete dataCopy.bpBusinessModel,delete dataCopy.bpApplicantNumber,delete dataCopy.bpCRDid,delete dataCopy.bpHasRightToSell,delete dataCopy.bpHasRightToConnect,delete dataCopy.bpIsContractAccepted),""===dataCopy.economicActivityClassification&&delete dataCopy.economicActivityClassification,dataCopy.allowDeviceFirmwareSelection||delete dataCopy.selectedDeviceFirmware,userContact&&(userContact.isSuperadmin()||userContact.isBPAdminFinance())||(delete dataCopy.bpType,delete dataCopy.adminHasRightToUpdateSubscriptions,delete dataCopy.adminAllowedUpdateSubscriptionsOps),userContact&&userContact.isSuperadmin()||(delete dataCopy.superadminComment,delete dataCopy.allowDeviceFirmwareSelection),userContact&&(userContact.isSuperadmin()||null!==dataCopy.supportEmail&&""!==dataCopy.supportEmail)||delete dataCopy.supportEmail,userContact&&(userContact.isSuperadmin()||null!==dataCopy.privateDC&&""!==dataCopy.privateDC)||delete dataCopy.privateDC,dataCopy}updateFromData(data){Company.attributes.forEach(attribute=>{void 0!==data[attribute.name]&&(this[attribute.name]=data[attribute.name])})}getNameForLogs(){return!this.nameForLogs&&this.name&&(this.nameForLogs=this.name.charAt(0)+this.name.replace(/[^\s](?=.{1,}$)/g,"*").substr(1)),this.nameForLogs}isActive(){return"active"===this.status}isInitializing(){return"initializing"===this.status}isInvited(){return"invited"===this.status}isFreemium(){return"freemium"===this.offerType}isPremium(){return"premium"===this.offerType}isVAD(){return this.isBP&&"VAD"===this.bpType}isIR(){return this.isBP&&"IR"===this.bpType}isDR(){return this.isBP&&"DR"===this.bpType}isEC(){return!this.isBP}onChange(callback){return this.rxSubject.subscribe(callback)}sendChangeEvent(type,value=null){this.rxSubject.next({type:type,value:value})}getSelectedWhiteThemeId(){return this.selectedTheme?this.selectedTheme.light:null}setSelectedWhiteThemeId(lightId){this.selectedTheme||(this.selectedTheme={}),this.selectedTheme.light=lightId}getSelectedDarkThemeId(){return this.selectedTheme?this.selectedTheme.dark:null}setSelectedDarkThemeId(darkId){this.selectedTheme||(this.selectedTheme={}),this.selectedTheme.dark=darkId}setSelectedTheme(theme){theme.isWhiteType()?this.setSelectedWhiteThemeId(theme.id):this.setSelectedDarkThemeId(theme.id)}getSelectedCustomerWhiteThemeId(){return this.selectedThemeCustomers?this.selectedThemeCustomers.light:null}setSelectedCustomerWhiteThemeId(lightId){this.selectedThemeCustomers||(this.selectedThemeCustomers={}),this.selectedThemeCustomers.light=lightId}getSelectedCustomerDarkThemeId(){return this.selectedThemeCustomers?this.selectedThemeCustomers.dark:null}setSelectedCustomerDarkThemeId(darkId){this.selectedThemeCustomers||(this.selectedThemeCustomers={}),this.selectedThemeCustomers.dark=darkId}setSelectedThemeCustomers(theme){theme.isWhiteType()?this.setSelectedCustomerWhiteThemeId(theme.id):this.setSelectedCustomerDarkThemeId(theme.id)}}Company.StatusValues=["initializing","active","alerting","hold","terminated"],Company.VisibilityValuesWithOrganization=["public","private","organization","closed","isolated"],Company.VisibilityValues=["public","private","closed","isolated"],Company.SizeValues=["self-employed","1-10 employees","11-50 employees","51-200 employees","201-500 employees","501-1000 employees","1001-5000 employees","5001-10,000 employees","10,001+ employees"],Company.OfferTypes=["freemium","premium"],Company.BPTypes=["VAD","DR","IR"],Company.BPTypeLabels={IR:"Indirect Reseller",VAD:"Value Added Distributor",DR:"Direct Reseller"},Company.BPBusinessModels=["resell"],Company.BPBusinessModelLabels={resell:"Resell",referral:"Referral"},Company.adminAllowedUpdateSubscriptionsOperations=["all","increase_only"],Company.BPBusinessTypes={DEFAULT:"default",VOICE_BY_ALE:"voice_by_ale",VOICE_BY_PARTNER:"voice_by_partner",CONFERENCE:"conference"},Company.EconomicActivityClassificationTypes={NONE:"notDefined-f",A:"agriculture",B:"mining",C:"manufacturing",D:"electricity",E:"water supply",F:"construction",G:"wholesale",H:"transportation",I:"accommodation",J:"information and communication",K:"financial",L:"real estate activities",M:"professional",N:"administrative",O:"public administration",P:"education",Q:"human health",R:"arts",S:"other service activities",T:"activities of households as employer",U:"activities of extraterritorial organisations and bodies"},Company.PrivateDCValues=["HDS"],Company.attributes=[{name:"id",defaultValue:void 0},{name:"name",defaultValue:""},{name:"creationDate",defaultValue:void 0},{name:"companyContactId",defaultValue:void 0},{name:"adminEmail",defaultValue:""},{name:"supportEmail",defaultValue:void 0},{name:"status",defaultValue:"active"},{name:"economicActivityClassification",defaultValue:"NONE"},{name:"website",defaultValue:void 0},{name:"description",defaultValue:void 0},{name:"visibility",defaultValue:"private"},{name:"visibleBy",defaultValue:[]},{name:"organisationId",defaultValue:""},{name:"userSelfRegisterEnabled",defaultValue:!1},{name:"userSelfRegisterAllowedDomains",defaultValue:[]},{name:"offerType",defaultValue:"freemium"},{name:"street",defaultValue:void 0},{name:"city",defaultValue:void 0},{name:"postalCode",defaultValue:void 0},{name:"country",defaultValue:void 0},{name:"state",defaultValue:null},{name:"timezone",defaultValue:void 0},{name:"size",defaultValue:void 0},{name:"slogan",defaultValue:void 0},{name:"isBP",defaultValue:!1},{name:"bpType",defaultValue:void 0},{name:"bpBusinessModel",defaultValue:void 0},{name:"bpApplicantNumber",defaultValue:void 0},{name:"bpCRDid",defaultValue:void 0},{name:"bpHasRightToSell",defaultValue:void 0},{name:"bpId",defaultValue:void 0},{name:"bpHasRightToConnect",defaultValue:void 0},{name:"adminHasRightToUpdateSubscriptions",defaultValue:!1},{name:"adminAllowedUpdateSubscriptionsOps",defaultValue:"all"},{name:"externalReference",defaultValue:void 0},{name:"externalReference2",defaultValue:void 0},{name:"lastAvatarUpdateDate",defaultValue:null},{name:"lastBannerUpdateDate",defaultValue:null},{name:"avatarShape",defaultValue:"circle"},{name:"catalogId",defaultValue:void 0},{name:"office365Tenant",defaultValue:void 0},{name:"office365ScopesGranted",defaultValue:void 0},{name:"isCentrex",defaultValue:void 0},{name:"tenantCallNumber",defaultValue:void 0},{name:"tenantName",defaultValue:void 0},{name:"numberUsers",defaultValue:void 0},{name:"dataLocation",defaultValue:void 0},{name:"privateDC",defaultValue:void 0},{name:"businessSpecific",defaultValue:void 0},{name:"superadminComment",defaultValue:void 0},{name:"bpBusinessType",defaultValue:[]},{name:"voIPSettings",defaultValue:void 0},{name:"ddiReadOnly",defaultValue:void 0},{name:"allowUsersSelectTheme",defaultValue:!0},{name:"allowUsersSelectPublicTheme",defaultValue:!0},{name:"selectedTheme",defaultValue:void 0},{name:"selectedThemeCustomers",defaultValue:void 0},{name:"tryNewUiCustomisation",defaultValue:void 0},{name:"softphoneOnlyCustomisation",defaultValue:void 0},{name:"fileSharingCustomisation",defaultValue:"enabled"},{name:"userTitleNameCustomisation",defaultValue:void 0},{name:"useRoomCustomisation",defaultValue:"enabled"},{name:"phoneMeetingCustomisation",defaultValue:"enabled"},{name:"useChannelCustomisation",defaultValue:"enabled"},{name:"useScreenSharingCustomisation",defaultValue:"enabled"},{name:"useWebRTCVideoCustomisation",defaultValue:"enabled"},{name:"useWebRTCAudioCustomisation",defaultValue:"enabled"},{name:"useSpeakingTimeStatistics",defaultValue:"enabled"},{name:"instantMessagesCustomisation",defaultValue:"enabled"},{name:"readReceiptsCustomisation",defaultValue:"enabled"},{name:"userProfileCustomisation",defaultValue:"enabled"},{name:"fileStorageCustomisation",defaultValue:"enabled"},{name:"overridePresenceCustomisation",defaultValue:"enabled"},{name:"changeSettingsCustomisation",defaultValue:"enabled"},{name:"changeTelephonyCustomisation",defaultValue:"enabled"},{name:"recordingConversationCustomisation",defaultValue:"enabled"},{name:"useGifCustomisation",defaultValue:"enabled"},{name:"useDialOutCustomisation",defaultValue:"enabled"},{name:"selectedAppCustomisationTemplate",defaultValue:void 0},{name:"mobilePermanentConnectionMode",defaultValue:void 0},{name:"alertNotificationSending",defaultValue:"disabled"},{name:"alertNotificationReception",defaultValue:"disabled"},{name:"cloudPbxRecordingInboundOnly",defaultValue:void 0},{name:"defaultLicenseGroup",defaultValue:void 0},{name:"allowDeviceFirmwareSelection",defaultValue:!1},{name:"selectedDeviceFirmware",defaultValue:"released"},{name:"supportUrlFAQ",defaultValue:void 0},{name:"allowPhoneNumbersVisibility",defaultValue:void 0},{name:"disableCCareAdminAccess",defaultValue:void 0},{name:"disableCCareAdminAccessCustomers",defaultValue:void 0},{name:"disableCCareAdminAccessResellers",defaultValue:void 0},{name:"eLearningCustomisation",defaultValue:"enabled"},{name:"eLearningGamificationCustomisation",defaultValue:"enabled"}],exports.Company=Company},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const room_model_1=__webpack_require__(144),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),imageUtils_service_1=__webpack_require__(64),rxjs_2=__webpack_require__(7),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),main_service_1=__webpack_require__(15),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),contact_service_1=__webpack_require__(6),fileStorage_service_1=__webpack_require__(34),logger_service_1=__webpack_require__(4),i18n_service_1=__webpack_require__(38),randomString_1=__webpack_require__(163),event_service_1=__webpack_require__(11),errorHelper_service_1=__webpack_require__(12);class RoomService{constructor(){this.ROOM_UPDATE_EVENT="ROOM_UPDATE_EVENT",this.ROOM_USER_UPDATE_EVENT="ROOM_USER_UPDATE_EVENT",this.ROOM_AVATAR_UPDATE_EVENT="ROOM_AVATAR_UPDATE_EVENT",this.ROOM_HISTORY_UPDATE_EVENT="ROOM_HISTORY_UPDATE_EVENT",this.ROOM_ADMIN_MESSAGE_EVENT="ROOM_ADMIN_MESSAGE_EVENT",this.ROOM_INVITATION="ROOM_INVITATION",this.ROOM_ADD_CONF_ENDPOINT_EVENT="ROOM_ADD_CONF_ENDPOINT_EVENT",this.ROOM_REMOVE_CONF_ENDPOINT_EVENT="ROOM_REMOVE_CONF_ENDPOINT_EVENT",this.ROOM_ADD_USERS_EVENT="ROOM_ADD_USERS_EVENT",this.ROOM_DELETE_USERS_EVENT="ROOM_DELETE_USERS_EVENT",this.ROOM_CONFERENCE_DELEGATE_EVENT="ROOM_CONFERENCE_DELEGATE_EVENT",this.RoomUserStatus={INVITED:"invited",ACCEPTED:"accepted",UNSUBSCRIBED:"unsubscribed",REJECTED:"rejected",DELETED:"deleted"},this.openInviteIdByRoomIdSubject=new rxjs_1.Subject,this.rxSubject=new rxjs_1.Subject,this.roomTags=[],this.rooms={},this.started=!1,this.context="global",this.portalURL=null,this.listeners=[],this.xmppConnectionSubscription=null,this.roomPresenceWaitingList=[],this.userContact=null,this.invitationCounter=0,this.meetingInvitationCounter=0,this.roomsByJids={},this.roomsInProgress={},this.updateLater={},this.maxRoomsUsers=0,this.maxRoomsStartupLoad=0,this.personalAudioRoomId="",this.currentPersonalAudioRoomId="",this.openInviteIdByRoomId={},this.getRoomByJidPromises={},this.roomPresenceRef=null,this.roomMessageRef=null,this.roomInfoMessageRef=null,this.roomMessageConfigRef=null,this.roomHistoryInfoRef=null,this.roomNotificationRef=null,this.roomErrorMessageRef=null,this.roomServiceConfig=null,this.settingsService=settings_service_1.SettingsService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.mainService=main_service_1.MainService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.roomService||(win.rainbow.roomService=new RoomService),win.rainbow.roomService}async start(roomServiceConfig=null){try{this.roomServiceConfig=roomServiceConfig,this.userContact=this.contactService.userContact,this.started=!0,this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/",this.invitationCounter=0,this.meetingInvitationCounter=0,this.rooms={},this.roomsByJids={},this.roomsInProgress={},this.updateLater={},this.maxRoomsUsers=this.profileService.getFeatureLimitMax(this.profileService.FeaturesEnum.BUBBLE_PARTICIPANT_COUNT),this.maxRoomsStartupLoad=this.profileService.getFeatureLimitMax(this.profileService.FeaturesEnum.BUBBLE_MAX_LOAD_STARTUP),this.personalAudioRoomId="",this.currentPersonalAudioRoomId="",this.openInviteIdByRoomId={},this.getRoomByJidPromises={},this.roomTags=[],this.logger.info(""),this.logger.info("[roomService] === STARTING ==="),this.attachHandlers(),this.context=this.userContact&&this.userContact.roomsEnabled?"global":"webinar","global"===this.context&&await this.getServerRooms(),await this.getServerRooms(!0),this.computeInvitationCounter(),"global"===this.context&&(this.roomServiceConfig&&this.roomServiceConfig.ignoreOpenInviteData||this.retrieveOpenInviteData(),this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED)&&(this.retrievePersonalAudioRoom(),this.retrieveCurrentPersonalAudioRoom())),this.logger.info("[roomService] === STARTED ===")}catch(error){this.logger.error("[roomService] === STARTING FAILURE === "+error.message),this.computeInvitationCounter(),this.reconnect()}}async stop(){this.logger.info(""),this.logger.info("[roomService] === STOPPING ==="),this.listeners.forEach(listener=>{listener()}),this.rooms={},this.roomsByJids={},this.roomPresenceWaitingList=[],this.started=!1,this.logger.info("[roomService] === STOPPED ===")}attachHandlers(){this.logger.info("[roomService] attachHandlers"),this.roomPresenceRef&&(this.xmppService.connection.deleteHandler(this.roomPresenceRef),this.roomPresenceRef=null),this.roomPresenceRef=this.xmppService.connection.addHandler(stanza=>this.onRoomPresence(stanza),"http://jabber.org/protocol/muc#user","presence"),this.roomMessageRef&&(this.xmppService.connection.deleteHandler(this.roomMessageRef),this.roomMessageRef=null),this.roomMessageRef=this.xmppService.connection.addHandler(stanza=>this.onRoomMessage(stanza),"jabber:x:conference","message"),this.roomInfoMessageRef&&(this.xmppService.connection.deleteHandler(this.roomInfoMessageRef),this.roomInfoMessageRef=null),this.roomInfoMessageRef=this.xmppService.connection.addHandler(stanza=>this.onRoomInfoMessage(stanza),null,"message","groupchat"),this.roomMessageConfigRef&&(this.xmppService.connection.deleteHandler(this.roomMessageConfigRef),this.roomMessageConfigRef=null),this.roomMessageConfigRef=this.xmppService.connection.addHandler(stanza=>this.onRoomMessageConfig(stanza),null,"message","management"),this.roomHistoryInfoRef&&(this.xmppService.connection.deleteHandler(this.roomHistoryInfoRef),this.roomHistoryInfoRef=null),this.roomHistoryInfoRef=this.xmppService.connection.addHandler(stanza=>this.onRoomHistoryInfoMessage(stanza),"jabber:iq:notification","message"),this.roomNotificationRef&&(this.xmppService.connection.deleteHandler(this.roomNotificationRef),this.roomNotificationRef=null),this.roomNotificationRef=this.xmppService.connection.addHandler(stanza=>this.onRoomNotificationMessage(stanza),"jabber:x:bubble:conference","message"),this.roomErrorMessageRef&&(this.xmppService.connection.deleteHandler(this.roomErrorMessageRef),this.roomErrorMessageRef=null),this.roomErrorMessageRef=this.xmppService.connection.addHandler(stanza=>this.onRoomErrorMessage(stanza),null,"message","error"),this.listeners.forEach(listener=>{listener()}),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChange(event)})}async reconnect(attempt=0){if(!this.userContact||this.userContact.roomsEnabled)try{this.logger.info("[roomService] reconnect"),attempt++,this.attachHandlers(),Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];room&&(room.initPresenceAck=!1,room.initPresInterval&&(this.logger.info("[roomService] onConnectionStateChange cancel initPresence retryer for room: "+room.jid+" "+room.getNameForLogs()),room.initPresInterval.unsubscribe(),room.initPresInterval=null),room.initPresPromise&&(this.logger.info("[roomService] onConnectionStateChange remove initPresPromise for room: "+room.jid+" "+room.getNameForLogs()),room.initPresPromise=null,room.initPresPromiseResolve=null))}),this.roomPresenceWaitingList=[],await this.getServerRooms(),await this.getServerRooms(!0),this.computeInvitationCounter(),this.retrieveOpenInviteData(),this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED)&&(this.retrievePersonalAudioRoom(),this.retrieveCurrentPersonalAudioRoom()),this.logger.info("[roomService] reconnect success")}catch(error){this.logger.error("[roomService] reconnect failure -- "+error.message),1===attempt&&this.reconnect(attempt)}else this.logger.info("[roomService] === Reconnect skipped - roomsEnabled : false")}onConnectionStateChange(event){this.logger.info("[roomService] onConnectionStateChange status:"+event.name),"ON_XMPP_DISCONNECTED"===event.name&&this.rooms&&(Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];room&&(room.initPresenceAck=!1,room.initPresInterval&&(this.logger.info("[roomService] onConnectionStateChange cancel initPresence retryer for room: "+room.jid+" "+room.getNameForLogs()),room.initPresInterval.unsubscribe(),room.initPresInterval=null),room.initPresPromise&&(this.logger.info("[roomService] onConnectionStateChange remove initPresPromise for room: "+room.jid+" "+room.getNameForLogs()),room.initPresPromise=null,room.initPresPromiseResolve=null))}),this.roomPresenceWaitingList=[])}subscribe(callback){return this.rxSubject.subscribe(callback)}sendEvent(type,value){this.rxSubject.next({type:type,value:value})}getRooms(){const roomArray=[];return Object.keys(this.rooms).forEach(key=>{roomArray.push(this.rooms[key])}),roomArray}searchRooms(criteria){const queries=criteria.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ -]+/);return this.getRooms().filter(room=>{if(!this.contactService.userContact.phoneMeetingsEnabled&&room.isMeetingRoom())return!1;if("accepted"!==room.status||room.isWebinarRoom())return!1;room.filterName=room.name.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"");const names=room.filterName.split(/[ -]+/);return queries.every(query=>names.some((name,index)=>!(!name.length||-1===name.indexOf(query))&&(names[index]="",!0)))})}getRoomInvitations(){return this.getRooms().filter(room=>"invited"===room.status&&"Rainbow_OutlookCreation_InternalUseOnly"!==room.desc&&!room.isMeetingRoom()&&!room.isWebinarRoom())}getMeetingInvitations(){return this.getRooms().filter(room=>!room.isWebinarRoom()&&("invited"===room.status&&"Rainbow_OutlookCreation_InternalUseOnly"!==room.desc&&room.isMeetingRoom()&&!room.isWebinarRoom()))}getWebinarInvitations(){return this.getRooms().filter(room=>"invited"===room.status&&room.isWebinarRoom()&&null!==room.webinarId)}getMyRooms(){return this.getRooms().filter(room=>room.owner)}getRoomById(roomId){return this.rooms[roomId]}getRoomByJid(jid){return this.roomsByJids[jid]}getRoomsByContainerId(containerId){return this.getRooms().filter(room=>room.containerId===containerId)}computeInvitationCounter(){this.invitationCounter=0,this.meetingInvitationCounter=0,Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];"invited"===room.status&&(room.isMeetingRoom()?this.meetingInvitationCounter+=1:this.invitationCounter+=1)}),this.logger.info("[roomService] invitationCounter for rooms updated - value is "+this.invitationCounter),this.logger.info("[roomService] meetingInvitationCounter updated - value is "+this.meetingInvitationCounter)}getOrderedRooms(order){const rooms=this.getRooms();switch(order){case"lastActivityDate":return rooms.sort((roomA,roomB)=>roomB.getLastActivityDate().getTime()-roomA.getLastActivityDate().getTime());case"creationDate":return rooms.sort((roomA,roomB)=>roomB.getCreationDate().getTime()-roomA.getCreationDate().getTime());default:return rooms.sort((roomA,roomB)=>roomA.name.localeCompare(roomB.name))}}getMyOrderedRooms(order){const rooms=this.getMyRooms();switch(order){case"lastActivityDate":return rooms.sort((roomA,roomB)=>roomB.getLastActivityDate().getTime()-roomA.getLastActivityDate().getTime());case"creationDate":return rooms.sort((roomA,roomB)=>roomB.getCreationDate().getTime()-roomA.getCreationDate().getTime());default:return rooms.sort((roomA,roomB)=>roomA.name.localeCompare(roomB.name))}}async updateRoomFromServer(room){this.logger.info(`updateRoomFromServer(${room.dbId})`);try{let url=`${this.portalURL}rooms/${room.dbId}?format=full&unsubscribed=true`;"webinar"===this.context&&(url+="&context=webinar");const response=await fetch(url,{headers:this.authService.getRequestHeader()}),roomData=(await response.json()).data;await this.getAllRoomsParticipants([roomData]),this.updateRoomData(room,roomData),this.eventService.publish(this.ROOM_UPDATE_EVENT,room)}catch(error){this.logger.error("updateRoomFromServer -- FAILURE -- "+error.message)}}updateRoomData(room,newRoomData){if(room.name=newRoomData.name,room.desc=newRoomData.topic,room.conference=newRoomData.conference,room.users=[],newRoomData.users.forEach(userData=>{const contact=this.contactService.getContactById(userData.userId);contact&&(room.users.push({contact:contact,status:userData.status,date:new Date(userData.additionDate),privilege:userData.privilege}),this.contactService.isUserContact(contact)&&(room.status=userData.status))}),this.refreshMemberAndOrganizerLists(room),room.isModerator=room.status!==this.RoomUserStatus.UNSUBSCRIBED&&room.isUserModerator(this.contactService.userContact),newRoomData.lastAvatarUpdateDate&&newRoomData.lastAvatarUpdateDate!==room.lastAvatarUpdate){room.lastAvatarUpdate=newRoomData.lastAvatarUpdateDate;const updateToken=main_service_1.MainService.MD5(room.lastAvatarUpdate);room.avatar=`${config.restServerUrl}/api/room-avatar/${room.dbId}?size=512&update=${updateToken}`}room.updateAvatarInfo(),room.guestEmails=newRoomData.guestEmails,room.guestPhoneNumbers=newRoomData.conference&&newRoomData.conference.guestPhoneNumbers?newRoomData.conference.guestPhoneNumbers:[],room.confEndpoints=newRoomData.confEndpoints}async getServerRoom(roomId){try{this.logger.info(`[roomService] getServerRoom(${roomId})`);let url=`${this.portalURL}rooms/${roomId}?format=full&unsubscribed=true`;"webinar"===this.context&&(url+="&context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const roomData=(await response.json()).data;this.logger.info(`[roomService] getServerRoom(${roomId}) -- SUCCESS`);const roomsData=await this.getAllRoomsParticipants([roomData]);return this.createRoomFromData(roomsData[0])}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}getServerRoomByJid(roomJid){return this.logger.info(`[roomService] getServerRoomByJid(${roomJid})`),this.getRoomByJidPromises[roomJid]||(this.getRoomByJidPromises[roomJid]=(async()=>{try{let url=`${this.portalURL}rooms/jids/${roomJid}?format=full`;"webinar"===this.context&&(url+="&context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const roomData=(await response.json()).data;this.logger.info(`[roomService] getServerRoomByJid(${roomJid}) -- SUCCESS`);const roomsData=await this.getAllRoomsParticipants([roomData]);return delete this.getRoomByJidPromises[roomJid],this.createRoomFromData(roomsData[0])}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerRoomByJid");throw this.logger.error("[roomService] "+errorInfo.message),delete this.getRoomByJidPromises[roomJid],errorInfo.error}})()),this.getRoomByJidPromises[roomJid]}async getServerRooms(webinar=!1){const getAllRooms=async(page,limit,rooms)=>{try{let url=`${this.portalURL}rooms?format=full&userId=${this.userContact.dbId}&sortField=lastActivityDate&status=invited&status=accepted&status=unsubscribed&offset=${page}&limit=${limit}`;webinar&&(url+="&webinar=true&context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return rooms=rooms.concat(responseData.data),this.logger.info(`[roomService] getServerRooms retrieved ${responseData.data.length} rooms, total ${rooms.length}, existing ${responseData.total}`),rooms.length===responseData.total?(this.logger.info("[roomService] getServerRooms no need to loop again. All rooms retrieved..."),rooms):(page+=limit,this.logger.info("[roomService] getServerRooms need another loop to get more rooms... "),await getAllRooms(page,limit,rooms))}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"getSetOfRooms")).error}};try{const limit=this.maxRoomsStartupLoad?this.maxRoomsStartupLoad:1e3,response=await getAllRooms(0,limit,[]);this.logger.info(`[roomService] getServerRooms successfully: find ${response.length} room(s)`);try{(await this.getAllRoomsParticipants(response)).forEach(roomData=>{this.createRoomFromData(roomData,!0)})}catch(error){this.logger.info("[roomService] getServerRooms issue while retrieving all participant"),response.forEach(roomData=>{this.createRoomFromData(roomData,!0)})}this.sendInitialPresenceForAllRooms()}catch(error){const errorMessage="getServerRooms failure: "+(error.data?error.data.errorDetails:error.message);throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async getRoomParticipants(roomData){try{const limit=100,roomId=roomData.id,total=roomData.activeUsersCounter;let usersData=roomData.users.concat();if(total>limit){usersData=[];const requestCount=total/limit+1;let offset=0;const requests=[];for(let i=1;i<requestCount;i++)requests.push(this.getRoomParticipantPage(roomId,offset,limit)),offset+=limit;(await Promise.all(requests)).forEach(page=>{usersData=usersData.concat(page.data)}),roomData.users=usersData}return usersData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getSetOfUsers");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async getRoomParticipantPage(roomId,offset,limit){try{const url=`${this.portalURL}rooms/${roomId}/users?format=full&offset=${offset}&limit=${limit}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return await response.json()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRoomParticipantPage");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async getAllRoomsParticipants(roomsData){try{const startDate=performance.now(),roomsUsersJids=(await Promise.all(roomsData.map(roomData=>this.getRoomParticipants(roomData)))).reduce((jids,roomUsers)=>(roomUsers.forEach(roomUser=>{jids[roomUser.jid_im]||(jids[roomUser.jid_im]=!0)}),jids),{}),missingRoomsUsersJids=Object.keys(roomsUsersJids).filter(jid=>{const contact=this.contactService.getContactByJid(jid);return!contact||contact.temp});if(missingRoomsUsersJids&&missingRoomsUsersJids.length)if(missingRoomsUsersJids.length>1e3){const arrays=[];for(;missingRoomsUsersJids.length>0;)arrays.push(missingRoomsUsersJids.splice(0,1e3));await Promise.all(arrays.map(jidArray=>this.contactService.getContactsByJids(jidArray)))}else await this.contactService.getContactsByJids(missingRoomsUsersJids);await Promise.all(roomsData.map(roomData=>this.contactService.getContactByDBId(roomData.creator)));const endDate=performance.now();return this.logger.info(`[roomService] getAllRoomsParticipants - get "${missingRoomsUsersJids.length} participants in ${Math.round(endDate-startDate)} ms`),roomsData}catch(error){throw this.logger.error("[roomService] "+error.message),error}}createRoomFromData(roomData,doNotSendPresence=!1){const room=room_model_1.Room.create(roomData.id,roomData.jid,roomData.name,roomData.topic,roomData.creationDate,roomData.confEndpoints,roomData.history,roomData.customData,roomData.conference,roomData.avatar,roomData.isActive,roomData.lastActivityDate,roomData.autoRegister,roomData.autoAcceptInvitation,roomData.tags,roomData.containerId,roomData.containerName,roomData.isOwnedByGroup,roomData.isAlertNotificationEnabled),owner=this.contactService.dbContacts[roomData.creator];owner?roomData.isOwnedByGroup?(this.logger.warn("[roomService] createRoomFromData -- Room created for hunting group -- "+roomData.name+" -- make me the owner"),room.ownerContact=this.contactService.userContact,room.owner=!1):(room.ownerContact=owner,room.owner=owner.jid===this.contactService.userContact.jid):this.logger.warn("[roomService] createRoomFromData -- failure -- Impossible to find owner of room "+roomData.name+" --- ignored"),roomData.users.forEach(userData=>{const contact=this.contactService.getContactById(userData.userId);contact&&(room.users.push({contact:contact,status:userData.status,date:new Date(userData.additionDate),privilege:userData.privilege,invitingUserId:userData.invitingUserId}),this.contactService.isUserContact(contact)&&(room.status=userData.status))}),room.guestEmails=roomData.guestEmails,room.guestPhoneNumbers=roomData.conference&&roomData.conference.guestPhoneNumbers?roomData.conference.guestPhoneNumbers:[],this.refreshMemberAndOrganizerLists(room);const ownUser=room.getUserByJid(this.contactService.userContact.jid);room.isModerator=ownUser&&ownUser.status!==this.RoomUserStatus.UNSUBSCRIBED&&room.isUserModerator(this.contactService.userContact);let sendConferenceEventType="";return this.rooms[room.dbId]&&(this.rooms[room.dbId].initPresPromise&&(room.initPresPromise=this.rooms[room.dbId].initPresPromise,room.initPresInterval=this.rooms[room.dbId].initPresInterval,room.initPresPromiseResolve=this.rooms[room.dbId].initPresPromiseResolve),room.rxSubject=this.rooms[room.dbId].rxSubject,room.initPresenceAck=this.rooms[room.dbId].initPresenceAck,this.rooms[room.dbId].getCurrentConferenceSession()&&!room.getCurrentConferenceSession()?sendConferenceEventType="stopEvent":!this.rooms[room.dbId].getCurrentConferenceSession()&&room.getCurrentConferenceSession()&&(sendConferenceEventType="startEvent")),room.updateAvatarInfo(),roomData.lastAvatarUpdateDate&&(room.avatar=config.restServerUrl+"/api/room-avatar/"+roomData.id+"?size=512&update="+main_service_1.MainService.MD5(roomData.lastAvatarUpdateDate)),room.isWebinarRoom()&&(room.webinarId=room.conference.webinar.id),this.rooms[room.dbId]=room,this.roomsByJids[room.jid]=room,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),"accepted"!==room.status||!room.isActive||room.initPresenceAck||doNotSendPresence||this.sendInitialRoomPresenceSync(room),sendConferenceEventType&&("stopEvent"===sendConferenceEventType?room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_STOP_EVENT")):room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT"))),room}refreshMemberAndOrganizerLists(room){room.organizers=[],room.members=[],room.users.forEach(user=>{(user.status===this.RoomUserStatus.ACCEPTED||user.status===this.RoomUserStatus.INVITED||room.ownerContact&&user.contact.jid===room.ownerContact.jid)&&(user.privilege===room_model_1.Room.Privilege.MODERATOR?room.organizers.push(user):room.members.push(user))})}equalContactsArrayByDbId(contactsA,contactsB){if(contactsA===contactsB)return!0;if(null===contactsA||null===contactsB)return!1;if(contactsA.length!==contactsB.length)return!1;for(let i=0;i<contactsA.length;++i)if(contactsA[i].dbId!==contactsB[i].dbId)return!1;return!0}async getOrCreateRoomWithContacts(newContacts,newEmails){try{let foundRoom=null;const participants=[].concat([this.contactService.userContact],newContacts).sort(this.sortObjectByProperty("dbId"));if(this.getMyRooms().some(room=>!(!room||room.status!==this.RoomUserStatus.ACCEPTED||!this.equalContactsArrayByDbId(room.users.map(user=>user.contact).sort(this.sortObjectByProperty("dbId")),participants))&&(foundRoom=room,this.logger.debug("[roomService] getOrCreateRoomWithContacts - Found Room "+room.getNameForLogs()),!0)),foundRoom)return newEmails.length&&await this.addRoomUsers(foundRoom,null,newEmails),foundRoom;const currentRoomsCount=await this.retrieveRoomConsumption();if(currentRoomsCount>this.profileService.getFeatureLimitMax(this.profileService.FeaturesEnum.BUBBLE_COUNT))return this.mainService.showGlobalPopupMessage({popupTitle:"createBubble",popupBody:"maxCollabSpaceReached",okLabel:"ok"}),null;const roomNameRoot=this.contactService.userContact.initials+" "+this.i18n.translate("new")+" "+this.i18n.translate("bubble")+" ",escalatedRooms=this.getMyRooms().filter(room=>room&&0===room.name.indexOf(roomNameRoot));let roomName=null,index=1;for(;!roomName;){const tempRoomName=roomNameRoot+index.toString();escalatedRooms.sort(this.sortObjectByProperty("name")).some(room=>room&&room.name===tempRoomName)||(roomName=tempRoomName),index++}return await this.createRoomWithContacts(roomName,"",newContacts,newEmails)}catch(error){throw this.logger.error("[roomService] getOrCreateRoomWithContacts failure"),error}}async createRoomWithContacts(roomName,topic,contacts,emails){try{const room=await this.createRoom(roomName,topic,!0,null,!0,null,!0);return await this.addRoomUsers(room,contacts,emails),room}catch(error){const errorMessage=error&&error.message?"createRoomWithContacts failure: "+error.message:"createRoomWithContacts failure";throw this.logger.error("[roomService] "+errorMessage),error&&error.errorDetailsLabel?error:new Error(errorMessage)}}async setAvatarRoom(roomData,avatarImg,width=512,height=512){if(!avatarImg)return roomData;try{const resizedImage=await imageUtils_service_1.resizeImage(avatarImg,width,height),binaryData=imageUtils_service_1.getBinaryData(resizedImage);let url=`${this.portalURL}rooms/${roomData.id}/avatar`;"webinar"===this.context&&(url+="?context=webinar");const headers=this.authService.getPostHeader("image/"+binaryData.type),response=await fetch(url,{method:"POST",headers:headers,body:binaryData.data});if(!response.ok)throw response;return await response.json(),this.logger.info("[roomService] setAvatarRoom -- SUCCESS"),roomData.avatar=`${config.restServerUrl}/api/room-avatar/${roomData.id}?size=512&rand=${randomString_1.default()}`,roomData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setAvatarRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async deleteAvatarRoom(roomId){let url=`${this.portalURL}rooms/${roomId}/avatar`;"webinar"===this.context&&(url+="?context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[roomService] avatar room sucessfully deleted")}async pushContactInRoom(user,room){try{const contact=await this.contactService.getContactByDBId(user.userId);room.users.push({contact:contact,status:user.status,date:new Date(user.additionDate),privilege:user.privilege}),this.contactService.isUserContact(contact)&&(room.status=user.status),this.logger.info("[roomService] pushContactInRoom success")}catch(error){this.logger.info("[roomService] pushContactInRoom failure : "+error.message)}}async addRoomUser(room,contact,reason=null,privilege=null,withoutInvitation=!1){try{if(room.users.some(user=>(user.status===this.RoomUserStatus.INVITED||user.status===this.RoomUserStatus.ACCEPTED||user.status===this.RoomUserStatus.REJECTED)&&user.contact.dbId===contact.dbId))return this.logger.debug(`[roomService] user: ${contact.dbId} already invited or accepted, will not be added`),room;if(room.users.filter(user=>user.status!==this.RoomUserStatus.DELETED).length>=this.maxRoomsUsers){const profileError=new Error("addRoomUser failure - Not Allowed : Participants max limit has been reached: "+this.maxRoomsUsers);throw profileError.status=profileError.errorDetailsCode="403",profileError.errorDetailsLabel="MaximumNumberRoomUsersReach",profileError.errorDetailsCode="403620",this.logger.error("[roomService] "+profileError.message),profileError}const userStatus="boolean"==typeof withoutInvitation&&withoutInvitation?this.RoomUserStatus.ACCEPTED:this.RoomUserStatus.INVITED,userReason=reason||"JustForFun",userPrivilege=privilege||room_model_1.Room.Privilege.USER,url=`${this.portalURL}rooms/${room.dbId}/users`,headers=this.authService.getPostHeader(),body=JSON.stringify({userId:contact.dbId,privilege:userPrivilege,reason:userReason,status:userStatus}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info(`[roomService] addRoomUser ${contact.nameForLogs} to room ${room.dbId} (${room.getNameForLogs()}) success`);const userData=(await response.json()).data,user=room.getUserByJid(userData.jid_im);return user?(user.status=userData.status,user.date=new Date,user.privilege=userData.privilege):room.users.push({contact:contact,status:userStatus,date:new Date,privilege:userPrivilege}),this.refreshMemberAndOrganizerLists(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addRoomUser");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async addRoomUsers(room,contacts,emails=null){try{const addRoomUserPromises=[];contacts.forEach(contact=>{room.users.some(user=>{if(user.contact.dbId===contact.dbId){switch(user.status){case this.RoomUserStatus.REJECTED:case this.RoomUserStatus.UNSUBSCRIBED:addRoomUserPromises.push(this.ownerReinviteRejectedUser(room,contact));break;case this.RoomUserStatus.DELETED:addRoomUserPromises.push(this.ownerReinviteDeletedUser(room,contact))}return!0}return!1})||addRoomUserPromises.push(this.addRoomUser(room,contact))}),await Promise.all(addRoomUserPromises),this.logger.info("[roomService] addRoomUsers success"),this.eventService.publish(this.ROOM_ADD_USERS_EVENT,room),await this.inviteGuestEmailToJoinRoom(room,emails)}catch(error){const errorMessage="addRoomUsers failure: "+error.message;throw this.logger.error("[roomService] "+errorMessage),error}}async deleteRoomUsers(room,contacts){try{const deleteRoomUserPromises=[];return contacts.forEach(contact=>{room.users.some(user=>user.contact.dbId===contact.dbId)&&deleteRoomUserPromises.push(this.ownerDeletesUserFromRoom(room,contact))}),await Promise.all(deleteRoomUserPromises),this.logger.info("[roomService] deleteRoomUsers success"),this.eventService.publish(this.ROOM_DELETE_USERS_EVENT,room),room}catch(error){const errorMessage="deleteRoomUsers failure: "+error.message;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async addRoomAndroidTVs(room,contactAndroidTVs){try{const addRoomAndroidTVPromises=[];return contactAndroidTVs.forEach(contactAndroidTV=>{null!==contactAndroidTV&&addRoomAndroidTVPromises.push(this.addRoomAndroidTV(room,contactAndroidTV))}),await Promise.all(addRoomAndroidTVPromises),this.logger.info("[roomService] addRoomAndroidTVs success"),this.eventService.publish(this.ROOM_ADD_USERS_EVENT,room),room}catch(error){const errorMessage="addRoomAndroidTVs failure: "+error.message;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async addRoomAndroidTV(room,contact){try{const reason="androidtv",privilege="moderator",status="accepted",url=`${this.portalURL}rooms/${room.dbId}/users`,headers=this.authService.getPostHeader(),body=JSON.stringify({userId:contact.dbId,privilege:privilege,reason:reason,status:status}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info(`[roomService] addRoomAndroidTV ${contact.nameForLog} to room ${room.dbId} (${room.getNameForLogs()}) success`);const userData=(await response.json()).data,user=room.getUserByJid(userData.jid_im);return user?(user.status=userData.status,user.date=new Date,user.privilege=userData.privilege):room.users.push({contact:contact,status:status,date:new Date,privilege:privilege}),this.refreshMemberAndOrganizerLists(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),room}catch(error){if(error.data&&error.data.errorDetails){const errorMessage=`addRoomAndroidTV ${contact.nameForLog} to room ${room.dbId} (${room.getNameForLogs()}) failure: ${error.data.errorDetails}`;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"addRoomAndroidTV");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}sendInitialPresenceForAllRooms(){Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];room&&!room.initPresPromise&&!room.initPresenceAck&&"accepted"===room.status&&room.isActive&&this.roomPresenceWaitingList.push(room)}),this.sendInitialPresenceForRoomsByParts(15)}allSettled(promises){const wrappedPromises=promises.map(prom=>Promise.resolve(prom).then(val=>({status:"fulfilled",value:val}),err=>({status:"rejected",reason:err})));return Promise.all(wrappedPromises)}sendInitialPresenceForRoomsByParts(groupSize=10,extraDelay=!1){if(!this.roomPresenceWaitingList||!this.roomPresenceWaitingList.length)return;this.logger.info("[roomService] sendInitialPresenceForRoomsByParts");const arrayLength=this.roomPresenceWaitingList.length,presencePromises=[],delay=extraDelay?3e4:7500;for(let i=0;i<groupSize;i++)this.roomPresenceWaitingList[i]&&presencePromises.push(this.sendInitialRoomPresenceSync(this.roomPresenceWaitingList[i],delay));presencePromises.length&&this.allSettled(presencePromises).then(()=>{this.logger.info("[roomService] sendInitialPresenceForRoomsByParts -- done for group -- presences remaining "+this.roomPresenceWaitingList.length);const addDelay=arrayLength===this.roomPresenceWaitingList.length;this.sendInitialPresenceForRoomsByParts(15,addDelay)})}sendInitialRoomPresence(room,attempt=0){const attemptInfo=attempt?" -- attempt "+attempt:"";this.logger.info("[roomService] sendInitialRoomPresence "+attemptInfo+" -- "+room.getNameForLogs()+" -- "+room.dbId);const presenceIq=$pres({to:room.jid+"/"+this.xmppService.fullJid});presenceIq.c("x",{xmlns:"http://jabber.org/protocol/muc"}).c("history",{maxchars:"0"}),this.xmppService.send(presenceIq)}sendInitialRoomPresenceSync(room,intervalDelay=7500){return room.initPresPromise?room.initPresPromise:room.initPresenceAck?(this.logger.info(`[roomService] sendInitialRoomPresenceSync -- ${room.getNameForLogs()} -- ${room.dbId} -- room already activated`),this.roomPresenceWaitingList&&this.roomPresenceWaitingList.length&&this.roomPresenceWaitingList.forEach((waitingListRoom,index)=>{waitingListRoom.dbId===room.dbId&&this.roomPresenceWaitingList.splice(index,1)}),Promise.resolve()):(room.initPresPromise=new Promise((resolve,reject)=>{room.initPresPromiseResolve=resolve,this.sendInitialRoomPresence(room,0);let attemptNumber=0;room.initPresInterval=rxjs_2.interval(intervalDelay).subscribe(()=>{attemptNumber<3?(attemptNumber+=1,this.sendInitialRoomPresence(room,attemptNumber)):(this.logger.error("[roomService] sendInitialRoomPresenceSync : no response after "+attemptNumber+" retries => clean presence promise and interval for "+room.getNameForLogs()+" -- "+room.jid),reject("[roomService] sendInitialRoomPresenceSync : no response"),room.initPresPromise=null,room.initPresInterval&&(room.initPresInterval.unsubscribe(),room.initPresInterval=null),room=this.rooms[room.dbId],this.eventService.publish(this.ROOM_UPDATE_EVENT,room))})}),room.initPresPromise)}sendUnavailableRoomPresence(room){const presenceIq=$pres({to:room.jid+"/"+this.contactService.userContact.jid,type:"unavailable"});presenceIq.c("x",{xmlns:"http://jabber.org/protocol/muc"}),this.xmppService.send(presenceIq)}sendAvailableRoomPresence(room){const presenceIq=$pres({to:room.jid+"/"+this.contactService.userContact.jid,type:"available"});presenceIq.c("x",{xmlns:"http://jabber.org/protocol/muc"}),this.xmppService.send(presenceIq)}async createRoom(roomName,roomDesc,withHistory,roomAvatar,disableNotifications=!0,mediaType=null,createConversation=null,autoAcceptInvitation=!1,muteUponEntry=!1,disableTimeStats=!1,playEntryTone=!0){const roomNameForLogs=roomName.charAt(0)+"***"+roomName.slice(-1);try{this.logger.info('[roomService] createRoom "'+roomNameForLogs+'"'),(void 0===disableNotifications||disableNotifications&&"boolean"!=typeof disableNotifications)&&(disableNotifications=!0);const data={name:roomName,topic:roomDesc,history:withHistory?"all":"none",disableNotifications:disableNotifications,mediaType:null,createConversation:createConversation=createConversation||"true",autoAcceptInvitation:Boolean(autoAcceptInvitation),muteUponEntry:muteUponEntry,disableTimeStats:!1,playEntryTone:playEntryTone};mediaType&&(data.mediaType=mediaType),disableTimeStats&&(data.disableTimeStats=disableTimeStats);const url=this.portalURL+"rooms/",headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const roomData=(await response.json()).data;try{await this.setAvatarRoom(roomData,roomAvatar)}catch(error){this.logger.error("[roomService] createRoom: setAvatarRoom ERROR")}if(this.rooms[roomData.id])return this.logger.info('[roomService] createRoom -- room "'+roomNameForLogs+'" already exists'),this.rooms[roomData.id];const room=room_model_1.Room.create(roomData.id,roomData.jid,roomData.name,roomData.topic,roomData.creationDate,roomData.confEndpoints,roomData.history,roomData.customData,roomData.conference,roomData.avatar,roomData.isActive,roomData.lastActivityDate,roomData.autoRegister,roomData.autoAcceptInvitation,roomData.tags,roomData.containerId,roomData.containerName,roomData.isOwnedByGroup,roomData.isAlertNotificationEnabled);return room.ownerContact=this.contactService.userContact,room.owner=!0,room.isModerator=!0,room.status="accepted",roomData.users.forEach(userData=>{const contact=this.contactService.getContactById(userData.userId);contact&&(room.users.push({contact:contact,status:userData.status,date:new Date(userData.additionDate),privilege:userData.privilege}),this.contactService.isUserContact(contact)&&(room.status=userData.status))}),this.refreshMemberAndOrganizerLists(room),this.rooms[room.dbId]=room,this.roomsByJids[room.jid]=room,this.logger.info('[roomService] createRoom "'+roomNameForLogs+'" -- success'),await this.sendInitialRoomPresenceSync(room),this.rooms[room.dbId]}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async updateRoomUser(room,contact,status=null,privilege=null){try{const data={status:void 0,privilege:void 0};status&&(data.status=status),privilege&&(data.privilege=privilege);const url=`${this.portalURL}rooms/${room.dbId}/users/${contact.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info(`[roomService] updateRoomUser ${contact.nameForLogs} to room ${room.dbId} (${room.getNameForLogs()}) success`);const userData=(await response.json()).data;return room.users.forEach(user=>{user.contact.jid===userData.jid_im&&(user.privilege=userData.privilege,user.status=userData.status)}),this.refreshMemberAndOrganizerLists(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="updateRoomUser "+contact.nameForLogs+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateRoomUser");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerArchiveRoom(room){this.logger.info("[roomService] ownerArchiveRoom");try{const urltmp=`${this.portalURL}rooms/${room.dbId}/archive`,headers=this.authService.getPostHeader(),body=JSON.stringify({}),response=await fetch(urltmp,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const usersData=(await response.json()).data.users;room.users.forEach(user=>{const userIsPresent=usersData.find(item=>user.contact.jid===item.jid_im);userIsPresent&&(user.privilege=userIsPresent.privilege,user.status=userIsPresent.status)}),this.refreshMemberAndOrganizerLists(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),this.logger.info("[roomService] unsubscribe all users successfully"),this.logger.info("[roomService] ownerArchiveRoom successfully")}catch(error){this.logger.error("[roomService] ownerArchiveRoom failure "+error.message)}}unsubscribeUserFromRoom(room,contact){return this.updateRoomUser(room,contact,this.RoomUserStatus.UNSUBSCRIBED)}async ownerDeletesUserFromRoom(room,contact){try{this.logger.info("[roomService] ownerDeletesUserFromRoom");const url=`${this.portalURL}rooms/${room.dbId}/users/${contact.dbId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info(`[roomService] ownerDeletesUserFromRoom ${contact.dbId} from room ${room.dbId} (${room.getNameForLogs()}) success`);return room.getUserByJid(contact.jid).status="deleted",this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="ownerDeletesUserFromRoom "+contact.dbId+" from room "+room.dbId+"("+room.getNameForLogs()+") failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"ownerDeletesUserFromRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerReinviteRejectedUser(room,contact,reason=null,privilege=null,withoutInvitation=!1){try{return await this.ownerDeletesUserFromRoom(room,contact),await this.addRoomUser(room,contact,reason,privilege,withoutInvitation),this.logger.info("[roomService] ownerReinviteRejectedUser "+contact.dbId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),room}catch(error){const errorMessage="ownerReinviteRejectedUser failure: "+error.message;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async ownerReinviteDeletedUser(room,contact,reason=null,privilege=null,withoutInvitation=!1){try{return await this.addRoomUser(room,contact,reason,privilege,withoutInvitation),this.logger.info("[roomService] ownerReinviteDeletedUser "+contact.dbId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),room}catch(error){const errorMessage="ownerReinviteDeletedUser failure: "+error.message;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}getInvitingUser(room){const connectedUserId=this.contactService.userContact.dbId;let invitingUserId=null;room.users.forEach(user=>{user.contact.dbId===connectedUserId&&(invitingUserId=user.invitingUserId)});return invitingUserId?this.contactService.getContactById(invitingUserId):room.ownerContact}async ownerDeleteRoom(room){const roomId=room.dbId;try{if(!roomId)return this.logger.error("[roomService] ownerDeleteRoom failure because the roomId is empty ..."),null;const url=`${this.portalURL}rooms/${roomId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return this.logger.info("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") success"),delete this.rooms[room.dbId],this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room.rxSubject.next(void 0),room}catch(error){let errorMessage="ownerDeleteRoom ("+roomId+") failure: unknown error occurred";if(error&&error.data&&(errorMessage="ownerDeleteRoom ("+roomId+") failure: "+error.data.errorDetails),error&&404===error.status)this.logger.info("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") not found, deleting it from local storage"),delete this.rooms[room.dbId],this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room);else{if(409111===(await error.json()).errorDetailsCode)return this.logger.info("[roomService] ownerDeleteRoom -- failed -- we should activate and delete it again -- "+room.dbId+"("+room.getNameForLogs()+")"),this.activateAndDeleteBubble(room)}throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async activateAndDeleteBubble(room){this.sendInitialRoomPresenceSync(room),setTimeout(async()=>{const roomId=room.dbId;try{if(!roomId)return void this.logger.error("[roomService] ownerDeleteRoom failure because the roomId is empty ...");const url=`${this.portalURL}rooms/${roomId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") success"),delete this.rooms[room.dbId],this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room.rxSubject.next(void 0)}catch(error){const errorDetailsCode=(await error.json()).errorDetailsCode;this.logger.error("[roomService] ownerDeleteRoom "+room.dbId+"("+room.getNameForLogs()+") -- delete failure -- "+errorDetailsCode)}},2e3)}async ownerUpdateRoom(roomData){try{this.logger.info("[roomService] ownerUpdateRoom");const url=`${this.portalURL}rooms/${roomData.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({name:roomData.name,topic:roomData.desc,visibility:roomData.type?"public":"private"}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return this.rooms[room.id].desc=room.topic,this.rooms[room.id].type="private"===room.visibility?room_model_1.Room.Type.PRIVATE:room_model_1.Room.Type.PUBLIC,this.logger.info("[roomService] ownerUpdateRoom successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){const errorMessage="ownerUpdateRoom failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}}async checkPromoteOwner(room,contact){try{const url=`${this.portalURL}rooms/${room.dbId}/owners/${contact.dbId}/check`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;this.logger.info("[roomService] checkPromoteOwner "+contact.nameForLogs+" to room "+room.dbId+"("+room.getNameForLogs()+") success")}catch(error){const errorData=await error.json();this.logger.error("[roomService] Error checkPromoteOwner");const errorDetailsCode=errorData.errorDetailsCode;let bubbleParticipantCountErrorMsg=null,bubblePromoteMemberErrorMsg=null,webRtcConfAllowedErrorMsg=null;const rberror={name:"RainbowError",message:""};throw 409002===errorDetailsCode&&errorData.errorDetailsData&&(Array.isArray(errorData.errorDetailsData)?(errorData.errorDetailsData.forEach(errorDetails=>{"BUBBLE_PARTICIPANT_COUNT"===errorDetails.feature?bubbleParticipantCountErrorMsg=this.i18n.translate("promoteToOwnerFailureParticipantCountReached",{name:contact.displayName,maxValue:errorDetails.maxValue}):"WEBRTC_CONFERENCE_ALLOWED"===errorDetails.feature?webRtcConfAllowedErrorMsg=this.i18n.translate("promoteToOwnerFailureWebRtcConferenceAllowed",{name:contact.displayName}):"BUBBLE_PROMOTE_MEMBER"===errorDetails.feature&&(bubblePromoteMemberErrorMsg=this.i18n.translate("promoteToOwnerFailureBubblePromoteMember",{name:contact.displayName}))}),bubbleParticipantCountErrorMsg?(rberror.message=bubbleParticipantCountErrorMsg,rberror.details={promotePossible:!1}):webRtcConfAllowedErrorMsg?(rberror.message=this.i18n.translate("promoteOrganizerToOwnerMsg",{name:contact.displayName}),rberror.details={promotePossible:!0,secondMessage:webRtcConfAllowedErrorMsg}):bubblePromoteMemberErrorMsg&&(rberror.message=this.i18n.translate("promoteOrganizerToOwnerMsg",{name:contact.displayName}),rberror.details={promotePossible:!0,secondMessage:bubblePromoteMemberErrorMsg})):(rberror.message=this.i18n.translate("promoteToOwnerFailureNotInRoom",{name:contact.displayName}),rberror.details={promotePossible:!1})),rberror}}getCheckPromoteErrorMsg(responseData,contact){let errorMessage="";return responseData&&responseData.errorDetailsData&&responseData.errorDetailsData.length>0&&responseData.errorDetailsData.every(errorDetails=>"BUBBLE_PARTICIPANT_COUNT"===errorDetails.feature&&(errorMessage=this.i18n.translate("promoteToOwnerFailureParticipantCountReached",{name:contact.displayName}),!0)),errorMessage}async changeRoomOwner(room,newOwnerContact){try{if(this.logger.info("[roomService] changeRoomOwner"),!room||!newOwnerContact){const msg="changeRoomOwner error: - missing room or new owner";throw this.logger.error("[roomService] "+msg),new Error(msg)}const confEndpointId=room.confEndpoints&&room.confEndpoints.length?room.confEndpoints[0].confEndpointId:"";await this.deleteRoomConferenceEndPoint(room,confEndpointId);const url=`${this.portalURL}rooms/${room.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({owner:newOwnerContact.dbId}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return room.ownerContact=newOwnerContact,room.owner=newOwnerContact.jid===this.contactService.userContact.jid,this.logger.info("[roomService] changeRoomOwner successfully ("+room.dbId+")"),this.rooms[room.dbId]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="changeRoomOwner failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"changeRoomOwner");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerUpdateRoomCustomData(roomData){try{this.logger.info("[roomService] ownerUpdateRoomCustomData");const url=`${this.portalURL}rooms/${roomData.dbId}/custom-data`,headers=this.authService.getPostHeader(),body=JSON.stringify({customData:roomData.customData}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[roomService] ownerUpdateRoomCustomData successfully got ("+JSON.stringify(data,null,4)+")"),data.customData||{}}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="ownerUpdateRoomCustomData failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"ownerUpdateRoomCustomData");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerUpdateRoomNameAndDescription(roomData){try{this.logger.info("[roomService] ownerUpdateRoomNameAndDescription");const url=`${this.portalURL}rooms/${roomData.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({name:roomData.name,topic:roomData.desc,visibility:roomData.type?"public":"private"}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return this.rooms[room.id].desc=room.topic,this.rooms[room.id].type="private"===room.visibility?room_model_1.Room.Type.PRIVATE:room_model_1.Room.Type.PUBLIC,(room.conference||room.confEndpoints)&&(this.rooms[room.id].conference=room.conference?room.conference:null,this.rooms[room.id].confEndpoints=room.confEndpoints?room.confEndpoints:[]),this.logger.info("[roomService] ownerUpdateRoomNameAndDescription successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="ownerUpdateRoomNameAndDescription failure: "+error.data.errorDetails;this.logger.error("[roomService] "+errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"ownerUpdateRoomNameAndDescription");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerUpdateAutoRegister(roomData){try{this.logger.info("[roomService] ownerUpdateAutoRegister");const url=`${this.portalURL}rooms/${roomData.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({autoRegister:roomData.getAutoRegister()}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return this.rooms[room.id].setAutoRegister(room.autoRegister),this.rooms[room.id].desc=room.topic,this.rooms[room.id].type="private"===room.visibility?room_model_1.Room.Type.PRIVATE:room_model_1.Room.Type.PUBLIC,(room.conference||room.confEndpoints)&&(this.rooms[room.id].conference=room.conference?room.conference:null,this.rooms[room.id].confEndpoints=room.confEndpoints?room.confEndpoints:[]),this.logger.info("[roomService] ownerUpdateAutoRegister successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="ownerUpdateAutoRegister failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"ownerUpdateAutoRegister");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async moderatorUpdateRoomConfig(roomData){try{this.logger.info("[roomService] moderatorUpdateRoomConfig");const url=`${this.portalURL}rooms/${roomData.dbId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({name:roomData.name,topic:roomData.desc,visibility:roomData.type?"public":"private",muteUponEntry:roomData.getMuteUponEntry(),disableTimeStats:roomData.getDisableTimeStats(),playEntryTone:roomData.getPlayEntryTone()}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return this.rooms[room.id].desc=room.topic,this.rooms[room.id].type="private"===room.visibility?room_model_1.Room.Type.PRIVATE:room_model_1.Room.Type.PUBLIC,(room.conference||room.confEndpoints)&&(this.rooms[room.id].conference=room.conference?room.conference:null,this.rooms[room.id].confEndpoints=room.confEndpoints?room.confEndpoints:[]),this.logger.info("[roomService] moderatorUpdateRoomConfig successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="moderatorUpdateRoomConfig failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"moderatorUpdateRoomConfig");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async updateRoomPhoneNumbers(roomId,dialInPhoneNumbers=[]){try{this.logger.info("[roomService] updateRoomPhoneNumbers");const url=`${this.portalURL}rooms/${roomId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({phoneNumbers:dialInPhoneNumbers}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return room.conference&&room.conference.phoneNumbers&&room.conference.phoneNumbers.length&&(this.rooms[room.id].conference.phoneNumbers=room.conference.phoneNumbers?room.conference.phoneNumbers:[]),this.logger.info("[roomService] updateRoomPhoneNumbers successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="updateRoomPhoneNumbers failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateRoomPhoneNumbers");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async updateIncludeAllPhoneNumbers(roomId,includeAllPhoneNumbers){try{this.logger.info("[roomService] updateIncludeAllPhoneNumbers");const url=`${this.portalURL}rooms/${roomId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({includeAllPhoneNumbers:includeAllPhoneNumbers}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const room=(await response.json()).data;return this.logger.info("[roomService] updateRoomPhoneNumbers successfully ("+room.id+", "+room.jid+")"),this.rooms[room.id]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="updateIncludeAllPhoneNumbers failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateIncludeAllPhoneNumbers");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async updateMyRoomUser(room,status){try{let url=`${this.portalURL}rooms/${room.dbId}/users/${this.contactService.userContact.dbId}`;"webinar"===this.context&&(url+="?context=webinar");const headers=this.authService.getPostHeader(),body=JSON.stringify({status:status}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info("[roomService] updateMyRoomUser "+this.contactService.userContact.nameForLogs+" to room "+room.dbId+"("+room.getNameForLogs()+") success"),room}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="updateMyRoomUser "+this.contactService.userContact.nameForLogs+" to room "+room.dbId+"("+room.getNameForLogs()+") failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateMyRoomUser");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}unsubscribeMeFromRoom(room){return this.updateMyRoomUser(room,this.RoomUserStatus.UNSUBSCRIBED)}async participantCloseRoom(room){const userId=this.contactService.userContact.dbId;try{this.logger.info("[roomService] participantCloseRoom");const url=`${this.portalURL}rooms/${room.dbId}/users/${userId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return this.logger.info("[roomService] participantCloseRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") success"),delete this.rooms[room.dbId],this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="participantCloseRoom "+userId+" from room "+room.dbId+"("+room.getNameForLogs()+") failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"participantCloseRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}acceptRoomInvitation(room){return this.updateMyRoomUser(room,this.RoomUserStatus.ACCEPTED)}declineRoomInvitation(room){return this.updateMyRoomUser(room,this.RoomUserStatus.REJECTED)}async getRoomConferenceEndPoint(room,conferenceEndPointId){try{this.logger.info("[roomService] getRoomConferenceEndPoint");const url=`${this.portalURL}rooms/${room.dbId}/conference/${conferenceEndPointId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const conferenceData=(await response.json()).data;return this.logger.info("[roomService] getRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"success"),conferenceData}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="getRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRoomConferenceEndPoint");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async addRoomConferenceEndPoint(room,conferenceEndPoint,mediaType,createConversation){try{if(this.logger.info("[roomService] addRoomConferenceEndPoint"),!conferenceEndPoint)throw new Error("No ConferenceEndPoint to associate with Room");let alreadyAttached=!1;if(room.confEndpoints.forEach(endpoint=>{endpoint.confEndpointId===conferenceEndPoint.id&&(alreadyAttached=!0)}),alreadyAttached)return this.logger.info("[roomService] addRoomConferenceEndPoint : already attached to room !"),room;const deleteConfEndpointPromises=[];mediaType&&"pstnAudio"===mediaType&&Object.keys(this.rooms).forEach(key=>{this.rooms[key].conference&&!this.rooms[key].conference.scheduled&&this.rooms[key].getPstnConfEndpointId()===conferenceEndPoint.id&&deleteConfEndpointPromises.push(this.deleteRoomConferenceEndPoint(this.rooms[key],conferenceEndPoint.id))}),await Promise.all(deleteConfEndpointPromises);const url=`${this.portalURL}rooms/${room.dbId}/conferences`,headers=this.authService.getPostHeader(),body=JSON.stringify({confId:conferenceEndPoint.id,createConversation:createConversation||"true"}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const conferenceData=(await response.json()).data;return this.logger.debug("[roomService] addRoomConferenceEndPoint response data:"+JSON.stringify(conferenceData)),room.confEndpoints.push(conferenceData),this.logger.info("[roomService] addRoomConferenceEndPoint "+conferenceEndPoint.id+" to room "+room.dbId+"success"),this.eventService.publish(this.ROOM_ADD_CONF_ENDPOINT_EVENT,room),this.sendEvent("ROOM_ADD_CONF_ENDPOINT_EVENT",room),room}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addRoomConferenceEndPoint");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async deleteRoomConferenceEndPoint(room,conferenceEndPointId){try{if(this.logger.info("[roomService] deleteRoomConferenceEndPoint"),!room||!conferenceEndPointId)return void this.logger.info("[roomService] deleteRoomConferenceEndPoint : missing parameters ");let roomHasConfEndpoint=!1;if(room.confEndpoints&&room.confEndpoints.length)for(let i=0;i<room.confEndpoints.length;i++)if(room.confEndpoints[i].confEndpointId===conferenceEndPointId){roomHasConfEndpoint=!0;break}if(!roomHasConfEndpoint)return void this.logger.info("[roomService] deleteRoomConferenceEndPoint : room has no such conference attached");const url=`${this.portalURL}rooms/${room.dbId}/conferences/${conferenceEndPointId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;room.confEndpoints=(await response.json()).data,this.logger.info("[roomService] deleteRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"success"),this.eventService.publish(this.ROOM_REMOVE_CONF_ENDPOINT_EVENT,room),this.sendEvent("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room)}catch(error){const errorData=(await error.json()).data,errorMessage="deleteRoomConferenceEndPoint "+conferenceEndPointId+" from room "+room.dbId+"failure: "+errorData.errorDetails;if(this.logger.error("[roomService] "+errorMessage),404!==error.status)throw new Error(errorMessage);room.confEndpoints=[],this.eventService.publish(this.ROOM_REMOVE_CONF_ENDPOINT_EVENT,room),this.sendEvent("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room)}}async inviteGuestEmailToJoinRoom(room,emails){try{if(!emails||!emails.length)return null;this.logger.info("[roomService] inviteGuestEmailToJoinRoom");const url=`${this.portalURL}rooms/${room.dbId}/invitations`,headers=this.authService.getPostHeader(),body=JSON.stringify({scenario:"chat",emails:emails,lang:this.getLanguageWithIsoCode()}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const myBody=await response.json();if(this.logger.info("[roomService] myBody = "+myBody),myBody.data&&myBody.data.failed&&myBody.data.failed.invalidUsers.length){const firstErrorCode=myBody.data.failed.invalidUsers[0].errorDetailsCode,locError=this.errorHelperService.getLocalizedError(firstErrorCode,null,null);throw this.logger.error("[roomService] "+locError),new Error(locError)}return this.eventService.publish("ROOM_UPDATE_EVENT",room),room}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"inviteGuestEmailToJoinRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async ownerCancelGuestFromRoom(room,emails){try{if(this.logger.info("[roomService] ownerCancelGuestFromRoom"),!emails||!emails.length)return Promise.resolve(room);const data={emails:emails,scenario:"chat",lang:this.getLanguageWithIsoCode()};room&&room.isMyPersonalMeetingRoom()&&room.getPstnConfEndpointId()&&(data.scenario="pstn-conference",data.confId=room.getPstnConfEndpointId());const url=`${this.portalURL}rooms/${room.dbId}/invitations/cancel`,headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return room.guestEmails=(await response.json()).guestEmails,this.eventService.publish("ROOM_UPDATE_EVENT",room),room}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"ownerCancelGuestFromRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async notifyRoomUsersJoinConference(room,users,emails){const conferenceEndPointId=room.getPstnConfEndpointId();try{if(this.logger.info("[roomService] notifyRoomUsersJoinConference"),!conferenceEndPointId)return room;const instantMessage=room.desc,data={scenario:"pstn-conference",confId:conferenceEndPointId,noMail:"false",update:"false",users:users?users.map(user=>user.dbId):void 0,emails:emails,instantMessage:instantMessage,lang:this.getLanguageWithIsoCode()},url=`${this.portalURL}rooms/${room.dbId}/invitations`,headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info("[roomService] notifyRoomUsersJoinConference "+conferenceEndPointId+" from room "+room.dbId+"success"),this.rooms[room.dbId].guestEmails=emails,this.eventService.publish("ROOM_UPDATE_EVENT",this.rooms[room.dbId]),this.rooms[room.dbId]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="notifyRoomUsersJoinConference "+conferenceEndPointId+" from room "+room.dbId+"failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"notifyRoomUsersJoinConference");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async notifyUsersCancelConference(room,users,emails){const conferenceEndPointId=room.getPstnConfEndpointId();try{if(this.logger.debug("[roomService] notifyUsersCancelConference"),!conferenceEndPointId)return room;const data={scenario:"pstn-conference",confId:conferenceEndPointId,noMail:"false",users:users?users.map(user=>user.dbId):void 0,emails:emails,lang:this.getLanguageWithIsoCode()},url=`${this.portalURL}rooms/${room.dbId}/invitations`,headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"DELETE",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info("[roomService] notifyUsersCancelConference "+conferenceEndPointId+" from room "+room.dbId+"success"),this.rooms[room.dbId].guestEmails=this.rooms[room.dbId].guestEmails.filter(email=>-1===emails.indexOf(email)),this.eventService.publish("ROOM_UPDATE_EVENT",this.rooms[room.dbId]),this.rooms[room.dbId]}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="notifyUsersCancelConference "+conferenceEndPointId+" from room "+room.dbId+"failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"notifyUsersCancelConference");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async getRoomByConferenceEndpointId(conferenceEndpointId){try{this.logger.info("[roomService] getRoomFromConferenceEndpointId");const url=`${this.portalURL}rooms?userId=${this.contactService.userContact.dbId}&confId=${conferenceEndpointId}&format=full`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;this.logger.info("[roomService] getRoomFromConferenceEndpointId -- "+conferenceEndpointId+" -- success");const roomData=(await response.json()).data;if(roomData.length)return this.getRoomById(roomData[0].id)||this.createRoomFromData(roomData[0]),this.getRoomById(roomData[0].id);throw this.logger.info("[roomService] getRoomFromConferenceEndpointId -- no room with confId "+conferenceEndpointId),new Error("no room with confId "+conferenceEndpointId)}catch(error){if(error.data&&error.data.errorDetails){const errorMessage="getRoomFromConferenceEndpointId -- "+conferenceEndpointId+" -- failure: "+error.data.errorDetails;throw this.logger.error("[roomService] "+errorMessage),new Error(errorMessage)}const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRoomByConferenceEndpointId");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}removeAnotherRoomWithSameConfEndpointId(endpointId,currentRoom){endpointId&&currentRoom&&Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];room&&!room.isMeetingRoom()&&room.confEndpoints.length&&"webrtc"===room.confEndpoints[0].mediaType&&room.confEndpoints[0].confEndpointId===endpointId&&room.dbId!==currentRoom.dbId&&(room.confEndpoints=[],this.rooms[room.dbId]=room,this.roomsByJids[room.jid]=room,this.logger.info("[roomService] removeAnotherRoomWithSameConfEndpointId : conferenceRemove event for room "+room.dbId),this.eventService.publish("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room),this.sendEvent("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room),room.rxSubject.next(event_model_1.RBEvent.create("ROOM_REMOVE_CONF_ENDPOINT_EVENT")))})}async onRoomMessage(stanza){this.logger.info("[roomService] onRoomMessage");try{const eventElem=$(stanza).find("event");if(eventElem.length>0){const eventName=eventElem.attr("name");if("conferenceAdd"===eventName||"conferenceRemove"===eventName||"invitation"===eventName)return!0}const roomId=$(stanza).find("x").attr("thread"),room=await this.getServerRoom(roomId);return room.isMeetingRoom()&&this.eventService.publish("MEETING_CREATED_EVENT",room),this.computeInvitationCounter(),this.eventService.publish(this.ROOM_INVITATION,room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),!0}catch(error){return this.logger.error("[roomService] onRoomMessage error "+error),!0}}onRoomErrorMessage(stanza){try{const textElement=$(stanza).find("text");if("Only occupants are allowed to send messages to the conference"===(textElement&&textElement.length?textElement.text():"")){this.logger.info("[roomService] onRoomErrorMessage error -- missing presence in the bubble, resend it");const fromJid=$(stanza).attr("from"),room=this.getRoomByJid(fromJid);room&&(room.initPresenceAck=!1,this.sendInitialRoomPresenceSync(room),room.isActive=!0,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room))}return!0}catch(_err){return!0}}onRoomNotificationMessage(stanza){try{const stanzaElem=$(stanza),xElem=stanzaElem.find("x");if(stanzaElem.find("event").length&&xElem.length){const eventName=stanzaElem.find("event").attr("name");if(!eventName||"invitation"!==eventName)return!0;const roomId=$(xElem[0]).attr("roomid");if(!roomId)return this.logger.info("[roomService] onRoomNotificationMessage error -- missing roomId"),!0;this.logger.info("[roomService] onRoomNotificationMessage : room event message with roomId "+roomId+" and event name "+eventName),setTimeout(()=>{this.getServerRoom(roomId).then(room=>{room.isMeetingRoom()&&this.eventService.publish("MEETING_CREATED_EVENT",room),room.isWebinarRoom()&&(room.webinarId=stanzaElem.find("x[webinarid]").attr("webinarid")),"true"===this.settingsService.getSetting("autoAcceptRoomInvite")?this.acceptRoomInvitation(room):(this.computeInvitationCounter(),this.eventService.publish(this.ROOM_INVITATION,room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),"accepted"===room.status&&room.isWebConferenceV2Room()?(room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),this.eventService.publish("ON_WEBCONFERENCE_STARTED_INVITATION",room)):"accepted"===room.status&&room.confEndpoints&&room.confEndpoints.length&&"webrtc"===room.confEndpoints[0].mediaType&&this.eventService.publish("ON_CONFERENCE_STARTED_INVITATION",room),this.logger.info("[roomService] onRoomNotificationMessage -- get server room success for roomId "+room.dbId+" and roomJid"+room.jid+" and name "+room.getNameForLogs()))}).catch(error=>(this.logger.error("[roomService] onRoomNotificationMessage failure :  impossible to get associated room : "+error.message),!0))},2e3)}return!0}catch(error){return this.logger.error("[roomService] onRoomNotificationMessage error "+error),!0}}onRoomInfoMessage(stanza){this.logger.info("[roomService] onRoomInfoMessage");try{if($(stanza).find("event").length>0){this.logger.info("[roomService] onRoomInfoMessage : room event message");const fromJid=$(stanza).attr("from"),roomBareJid=this.xmppService.getBareJidFromJid(fromJid);let userJid=$(stanza).find("event").attr("jid");const eventName=$(stanza).find("event").attr("name"),msgId=$(stanza).attr("id"),flagNoNotificationPopUp="true"===$(stanza).find("deskphone").text(),gmwi=$(stanza).find("gmwi");if(gmwi&&gmwi.length&&(userJid=this.contactService.userContact.jid),this.logger.info("[roomService] onRoomInfoMessage : room event message with parameters "+roomBareJid+" || "+userJid+" || "+eventName+" || "+msgId),roomBareJid&&userJid&&eventName&&msgId){const room=this.getRoomByJid(roomBareJid);if(!room)return this.manageEventForNonExistingRoom(roomBareJid,eventName,userJid,flagNoNotificationPopUp),!0;room.noNotificationPopUp=flagNoNotificationPopUp;const user=room.getUserByJid(userJid);if("voicemessage"===eventName&&user&&"deleted"!==user.status&&gmwi.length){const newMsgs=gmwi.find("message").attr("new"),oldMsgs=gmwi.find("message").attr("old");return this.eventService.publish(this.ROOM_ADMIN_MESSAGE_EVENT,roomBareJid,userJid,eventName,msgId,{newMsgs:newMsgs,oldMsgs:oldMsgs}),!0}if("conferenceDelegate"===eventName&&user&&"deleted"!==user.status){const userId=$(stanza).find("event").attr("user-id");return room.setWebConferenceOwnerId(userId),this.eventService.publish(this.ROOM_CONFERENCE_DELEGATE_EVENT,room.dbId,userId),!0}if("dialInEnable"===eventName||"dialInDisable"===eventName||"dialInReset"===eventName)return!0;switch(user&&"deleted"!==user.status&&this.eventService.publish(this.ROOM_ADMIN_MESSAGE_EVENT,roomBareJid,userJid,eventName,msgId),eventName){case"conferenceAdd":if(room.isWebinarRoom())return!0;setTimeout(()=>{this.getServerRoom(room.dbId).then(updatedRoom=>{if(updatedRoom.isWebConferenceV2Room())return updatedRoom.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),this.eventService.publish("ON_WEBCONFERENCE_STARTED_INVITATION",updatedRoom),void this.logger.info("[roomService] onRoomInfoMessage : conferenceAdd -- confV2 !");const info=updatedRoom.confEndpoints&&updatedRoom.confEndpoints[0]?updatedRoom.confEndpoints[0].confEndpointId:void 0;updatedRoom.getPstnConfEndpointId()&&updatedRoom.isMeetingRoom()&&(this.currentPersonalAudioRoomId=room.dbId),(updatedRoom.isMeetingRoom()||this.contactService.userContact.webrtcAudioEnabled)&&(this.logger.info("[roomService] onRoomInfoMessage : conferenceAdd event with conferenceObject related to room : "+info),this.eventService.publish("ROOM_UPDATE_CONFID",updatedRoom),this.eventService.publish("ROOM_ADD_CONF_ENDPOINT_EVENT",updatedRoom),this.sendEvent("ROOM_ADD_CONF_ENDPOINT_EVENT",updatedRoom),updatedRoom.rxSubject.next(event_model_1.RBEvent.create("ROOM_ADD_CONF_ENDPOINT_EVENT")),this.eventService.publish("ON_CONFERENCE_STARTED_INVITATION",updatedRoom,user),this.removeAnotherRoomWithSameConfEndpointId(updatedRoom.confEndpoints[0].confEndpointId,updatedRoom))})},1e3);break;case"conferenceRemove":if(room.isWebinarRoom())return!0;if(room.isWebConferenceV2Room())return room.conference.sessions=[],room.confEndpoints=[],this.rooms[room.dbId]=room,this.roomsByJids[room.jid]=room,room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_STOP_EVENT")),this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",room.dbId),this.logger.info("[roomService] onRoomInfoMessage : conferenceRemove -- confV2 !"),!0;if(room.isMeetingRoom())this.getServerRoom(room.dbId).then(updatedRoom=>{room.getPstnConfEndpointId()&&!updatedRoom.getPstnConfEndpointId()&&(this.currentPersonalAudioRoomId=""),this.logger.info("[roomService] onRoomInfoMessage : conferenceRemove event"),this.eventService.publish("ROOM_REMOVE_CONF_ENDPOINT_EVENT",updatedRoom),this.sendEvent("ROOM_REMOVE_CONF_ENDPOINT_EVENT",updatedRoom),updatedRoom.rxSubject.next(event_model_1.RBEvent.create("ROOM_REMOVE_CONF_ENDPOINT_EVENT")),this.eventService.publish("ON_CONFERENCE_ENDED_INVITATION",updatedRoom)});else{const confEndpoint=room.confEndpoints[0];room.confEndpoints=[],this.rooms[room.dbId]=room,this.roomsByJids[room.jid]=room,this.logger.info("[roomService] onRoomInfoMessage : conferenceRemove event"),this.eventService.publish("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room),this.sendEvent("ROOM_REMOVE_CONF_ENDPOINT_EVENT",room),room.rxSubject.next(event_model_1.RBEvent.create("ROOM_REMOVE_CONF_ENDPOINT_EVENT")),this.eventService.publish("ON_CONFERENCE_ENDED_INVITATION",room,confEndpoint)}break;case"invitation":!room.isUserModerator(this.contactService.userContact)||user&&user.status!==this.RoomUserStatus.DELETED||this.getServerRoom(room.dbId).then(updatedRoom=>{this.eventService.publish(this.ROOM_UPDATE_EVENT,updatedRoom),this.sendEvent(this.ROOM_UPDATE_EVENT,room)})}}}else if($(stanza).find("subject").length>0){const fromJid=$(stanza).attr("from"),fromBareJid=this.xmppService.getBareJidFromJid(fromJid),room=this.getRoomByJid(fromBareJid),topic=$(stanza).find("subject").text();room&&topic&&(this.logger.info("[roomService] onRoomInfoMessage : update subject of room"),room.desc=topic,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room))}return!0}catch(error){return this.logger.error("[roomService] onRoomInfoMessage error "+error),!0}}onRoomHistoryInfoMessage(stanza){const changedElem=$(stanza).find("changed");if(changedElem.length>0){const roomId=changedElem.attr("with"),room=this.getRoomByJid(roomId);this.logger.debug("[roomService] onRoomHistoryInfoMessage with "+roomId),this.eventService.publish(this.ROOM_HISTORY_UPDATE_EVENT,room)}return!0}async onRoomMessageConfig(stanza){try{const stanzaElem=$(stanza),roomElem=stanzaElem.find("room"),userId=roomElem.attr("userjid"),userStatus=roomElem.attr("status"),delayElem=stanzaElem.find("delay");if(delayElem.length>0&&"Offline Storage"===delayElem.text())return!0;if(roomElem.length>0){const roomId=roomElem.attr("roomid"),logMessage=`[roomService] onRoomMessageConfig -- management -- ${roomId} --`,room=this.getRoomById(roomId);let serverUpdateMandatory=!1;if(room){const topic=roomElem.attr("topic"),name=roomElem.attr("name");let playEntryTone;const playEntryToneElem=roomElem.attr("playEntryTone");let muteUponEntry;"true"===playEntryToneElem?playEntryTone=!0:"false"===playEntryToneElem&&(playEntryTone=!1),void 0!==playEntryToneElem&&(this.logger.info(logMessage+" update playEntryTone"),room.setPlayEntryTone(playEntryTone));const muteUponEntryElem=roomElem.attr("muteUponEntry");let includeAllPhoneNumbers;"true"===muteUponEntryElem?muteUponEntry=!0:"false"===muteUponEntryElem&&(muteUponEntry=!1),void 0!==muteUponEntryElem&&(this.logger.info(logMessage+" update muteUponEntry"),room.setMuteUponEntry(muteUponEntry));const includeAllPhoneNumbersElem=roomElem.attr("includeAllPhoneNumbers");"true"===includeAllPhoneNumbersElem?includeAllPhoneNumbers=!0:"false"===includeAllPhoneNumbersElem&&(includeAllPhoneNumbers=!1),void 0!==includeAllPhoneNumbersElem&&(this.logger.info(logMessage+" update includeAllPhoneNumbers"),room.setIncludeAllPhoneNumbers(includeAllPhoneNumbers));"true"===roomElem.attr("phoneNumbersUpdated")&&(serverUpdateMandatory=!0),(name||topic)&&(this.logger.info(logMessage+" update name or topic"),room.name=name,room.desc=topic||"");const guestsElem=roomElem.find("guests");guestsElem.length>0&&"update"===guestsElem.attr("action")&&(this.logger.info(logMessage+" update guests"),room.guestEmails=[],room.guestPhoneNumbers=[],$(guestsElem).find("email").each((__index,emailElem)=>{room.guestEmails.push(emailElem.textContent)}),$(guestsElem).find("phone-number").each((__index,phoneNumberElem)=>{room.guestPhoneNumbers.push(phoneNumberElem.textContent)}));const autoRegister=roomElem.attr("autoRegister");autoRegister&&(this.logger.info(`${logMessage} update autoRegister: ${autoRegister}`),room.setAutoRegister(autoRegister));const customData=roomElem.attr("customData");if(customData)try{const extractedContent=this.extractHtmlContent(customData);room.customData=JSON.parse(extractedContent),this.logger.info(logMessage+" handle customData")}catch(err){this.logger.error(`${logMessage} handle customData -- FAILURE -- ${err.message}`),room.customData="{}"}const isAlertNotificationEnabled=roomElem.attr("alertenabled");isAlertNotificationEnabled&&(room.isAlertNotificationEnabled="true"===isAlertNotificationEnabled);const avatarElem=stanzaElem.find("avatar"),lastAvatarUpdateDate=roomElem.attr("lastAvatarUpdateDate"),avatarType=avatarElem.length>0&&"delete"===avatarElem.attr("action")?"delete":"update";if(room&&(lastAvatarUpdateDate||"delete"===avatarType)&&(this.logger.info(logMessage+" update avatar"),serverUpdateMandatory=!0),userStatus){this.logger.info(logMessage+" update user status");const user=room.getUserByJid(userId);if(user){const reason=void 0!==roomElem.attr("alertenabled")?"alertEnabled":null;this.updateUserStatus(room,user,userStatus,reason)}else if(this.roomServiceConfig&&(this.roomServiceConfig.webinar||room.isWebinarRoom())&&"accepted"===userStatus){let contact=null,roomData=null;roomElem.find("payload").each((__index,payloadElem)=>{const datatype=payloadElem.getAttribute("datatype"),jsonElem=$(payloadElem).find("json");"urn:rainbow:json:userdata"===datatype&&(contact=this.contactService.createContactFromData(JSON.parse(jsonElem[0].textContent))),"urn:rainbow:json:roomuserdata"===datatype&&(roomData=JSON.parse(jsonElem[0].textContent))}),room.users.push({contact:contact,status:"accepted",date:new Date(roomData.additionDate),privilege:roomData.privilege}),this.contactService.isUserContact(contact)&&(room.status=roomData.status),this.refreshMemberAndOrganizerLists(room)}else this.logger.info(logMessage+" update user status -- room exists, but user not. Update the room"),serverUpdateMandatory=!0}const privilege=roomElem.attr("privilege");if(privilege){this.logger.info(`${logMessage} update user's privilege ${privilege}`);const user=userId?room.getUserByJid(userId):null;if(this.roomServiceConfig&&this.roomServiceConfig.ignorePrivilege||(serverUpdateMandatory=!0),"owner"===privilege&&user&&user.contact&&user.contact.jid===this.contactService.userContact.jid){room.ownerContact=user.contact,room.owner=!0;const message=this.i18n.translate("promotedToOwner",{name:escape(room.name)});this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}const tagsElem=roomElem.find("tags");if(tagsElem&&tagsElem.length){this.logger.info(logMessage+" update room tags");const action=tagsElem.attr("action");this.logger.info(`${logMessage} action = ${action}`);const tagList=tagsElem.find("tag");"update"===action&&(room.tags=[],tagList&&tagList.length&&tagList.each((__index,tagElem)=>{const value=tagElem.getAttribute("value"),color=tagElem.getAttribute("color"),emoji=tagElem.getAttribute("emoji"),tagData={};value&&(tagData.tag=value),color&&(tagData.color=color),emoji&&(tagData.emoji=emoji),room.tags.push(tagData)}))}serverUpdateMandatory&&await this.updateRoomFromServer(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),room.rxSubject.next(void 0)}else if(void 0===room&&roomId&&!this.roomsInProgress[roomId]&&"deleted"!==userStatus&&"rejected"!==userStatus){this.logger.info(logMessage+" room does not exist, create new one"),this.roomsInProgress[roomId]=!0;const newRoom=await this.getServerRoom(roomId);delete this.roomsInProgress[roomId],this.logger.info(logMessage+" sendInitialRoomPresence to the new room"),this.sendInitialRoomPresence(newRoom),this.updateLater[roomId]&&(delete this.updateLater[roomId],this.logger.info("[roomService] onRoomMessageConfig -- later update of the new room"),this.getServerRoom(roomId).then(roomToUpdate=>{roomToUpdate.updateAvatarInfo()}))}else this.roomsInProgress[roomId]&&(this.updateLater[roomId]=roomId)}const openinviteElem=stanzaElem.find("openinvite");if(openinviteElem.length>0){this.logger.info("[roomService] onRoomMessageConfig -- openinvite");const openInviteAction=openinviteElem.attr("action"),roomId=openinviteElem.find("roomid").text(),openInviteId=openinviteElem.find("openinviteid").text(),roomType=openinviteElem.find("roomType").text(),invitationURL=openinviteElem.find("invitationURL").text();switch(openInviteAction){case"update":{let shouldDeletePreviousPersonalAudioRoomAssociation=!1;"personal_audio_room"!==roomType||roomId||(shouldDeletePreviousPersonalAudioRoomAssociation=!0),Object.keys(this.openInviteIdByRoomId).forEach(key=>{this.openInviteIdByRoomId[key]&&this.openInviteIdByRoomId[key].openInviteId===openInviteId&&key!==roomId&&(this.logger.info("[roomService] onRoomMessageConfig -- openinviteId removed from "+key),delete this.openInviteIdByRoomId[key],this.openInviteIdByRoomIdSubject.next({invitationURL:invitationURL,openInviteId:openInviteId,roomType:roomType,id:roomId,action:"deleted"})),shouldDeletePreviousPersonalAudioRoomAssociation&&"personal_audio_room"===this.openInviteIdByRoomId[key].roomType&&delete this.openInviteIdByRoomId[key]})}case"create":roomId&&openInviteId&&(this.openInviteIdByRoomId[roomId]={},this.openInviteIdByRoomId[roomId].roomType=roomType,this.openInviteIdByRoomId[roomId].openInviteId=openInviteId,this.openInviteIdByRoomId[roomId].openInviteLink=invitationURL,this.openInviteIdByRoomIdSubject.next({invitationURL:invitationURL,openInviteId:openInviteId,roomType:roomType,id:roomId,action:"updated"}),this.logger.info("[roomService] onRoomMessageConfig -- openinviteId "+openInviteId+" assigned to room "+roomId),this.eventService.publish("ON_OPEN_INVITE_ID_UPDATED_EVENT",this.rooms[roomId]),"personal_audio_room"===roomType&&this.eventService.publish("ON_PERSONAL_MEETING_OPEN_INVITE_ID_UPDATED_EVENT"));break;case"delete":Object.keys(this.openInviteIdByRoomId).forEach(key=>{this.openInviteIdByRoomId[key]&&this.openInviteIdByRoomId[key].openInviteId===openInviteId&&key===roomId&&(this.logger.info("[roomService] onRoomMessageConfig -- openinviteId removed from "+key),delete this.openInviteIdByRoomId[key],this.openInviteIdByRoomIdSubject.next({invitationURL:invitationURL,openInviteId:openInviteId,roomType:roomType,id:roomId,action:"deleted"}),this.eventService.publish("ON_OPEN_INVITE_ID_DELETED_EVENT",this.rooms[roomId]))});break;default:this.logger.info("[roomService] onRoomMessageConfig -- openinviteId - unkown action : "+openInviteAction)}}const meetingElem=stanzaElem.find("meeting");if("management"===stanzaElem.attr("type")&&meetingElem.length>0){this.logger.debug("[roomService] onRoomMessageConfig -- management meeting event");const meetingAction=meetingElem.attr("action"),roomId=meetingElem.find("roomid").length?meetingElem.find("roomid").text():"";switch(meetingAction){case"saved":this.currentPersonalAudioRoomId="",this.logger.debug("meeting saved: "+roomId),this.sendEvent("ON_MEETING_SAVED_EVENT",roomId);break;case"deleted":this.logger.debug("meeting deleted: "+roomId),this.currentPersonalAudioRoomId="",this.sendEvent("ON_MEETING_DELETED_EVENT",roomId);break;case"created":this.logger.debug("meeting created: "+roomId),this.personalAudioRoomId=roomId,this.currentPersonalAudioRoomId=roomId,this.sendEvent("ON_MEETING_CREATED_EVENT",roomId);break;case"updated":this.logger.debug("meeting updated: "+roomId),this.personalAudioRoomId=roomId,this.currentPersonalAudioRoomId=roomId,this.sendEvent("ON_MEETING_UPDATED_EVENT",roomId)}}const roomscontainerElem=stanzaElem.find("roomscontainer");if("management"===stanzaElem.attr("type")&&roomscontainerElem.length>0){const containerId=roomscontainerElem.attr("containerid"),containerName=roomscontainerElem.attr("name");switch(roomscontainerElem.attr("action")){case"update":{const addedRooms=[],addedElem=roomscontainerElem.find("added");addedElem.length&&(addedElem.find("roomid").each((__index,roomIdElem)=>{addedRooms.push(roomIdElem.textContent)}),addedRooms.forEach(roomId=>{this.rooms[roomId]&&(this.rooms[roomId].containerId=containerId,this.rooms[roomId].containerName=containerName)}));const removedRooms=[],removedElem=roomscontainerElem.find("removed");removedElem.length&&(removedElem.find("roomid").each((__index,roomIdElem)=>{removedRooms.push(roomIdElem.textContent)}),removedRooms.forEach(roomId=>{this.rooms[roomId]&&(this.rooms[roomId].containerId="",this.rooms[roomId].containerName="")})),(addedRooms.length||removedRooms.length)&&this.sendEvent(this.ROOM_UPDATE_EVENT,null);break}case"create":{const addedRooms=[],addedElem=roomscontainerElem.find("added");addedElem.length&&(addedElem.find("roomid").each((__index,roomIdElem)=>{addedRooms.push(roomIdElem.textContent)}),addedRooms.forEach(roomId=>{this.rooms[roomId]&&(this.rooms[roomId].containerId=containerId,this.rooms[roomId].containerName=containerName)})),addedRooms.length&&this.sendEvent(this.ROOM_UPDATE_EVENT,null);break}case"delete":{const rooms=this.getRoomsByContainerId(containerId);rooms.forEach(room=>{this.rooms[room.dbId].containerId="",this.rooms[room.dbId].containerName=""}),rooms.length&&this.sendEvent(this.ROOM_UPDATE_EVENT,null);break}}}return!0}catch(error){return this.logger.info("[roomService] onRoomMessageConfig  -- failure -- "+error.message),!0}}extractHtmlContent(html){const parser=new DOMParser;let content="{}";try{content=parser.parseFromString(html,"text/html").documentElement.textContent}catch(error){this.logger.error("[roomService] error in extractHtmlContent:"+error.message),content="{}"}return content}onRoomPresence(stanza){try{const stanzaElem=$(stanza),fromJid=stanzaElem.attr("from"),fromRoomBareJid=this.xmppService.getBareJidFromJid(fromJid);let fromUserJid=this.xmppService.getResourceFromJid(fromJid);const statusElems=stanzaElem.find("status");let statusCode=null;statusElems.each((__index,statusElem)=>{"332"===$(statusElem).attr("code")&&(statusCode="332"),"338"===$(statusElem).attr("code")&&(statusCode="338"),"339"===$(statusElem).attr("code")&&(statusCode="339"),"110"!==$(statusElem).attr("code")||statusCode||(statusCode="110")});const room=this.getRoomByJid(fromRoomBareJid);if(room)if("338"===statusCode)this.logger.info("[roomService] onRoomPresence - "+room.dbId+"- Deactivated"),room.isActive=!1,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room);else if("339"===statusCode)this.logger.info("[roomService] onRoomPresence - "+room.dbId+"- Reactivated"),room.initPresenceAck=!1,this.sendInitialRoomPresenceSync(room),room.isActive=!0,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room);else if(this.logger.info("[roomService] onRoomPresence -- "+room.dbId),-1!==fromUserJid.indexOf("/")&&(fromUserJid=this.xmppService.getBareJidFromJid(fromUserJid)),this.contactService.isUserContactJid(fromUserJid)){const type=stanzaElem.attr("type");type&&"unavailable"===type&&"110"===statusCode?this.logger.warn("[roomService] disconnected from room "+room.getNameForLogs()+" because of a unavailable presence -- do nothing"):"332"===statusCode?(this.logger.warn("[roomService] disconnected from room "+room.getNameForLogs()+" because of a system shutdown"),room.initPresenceAck=!1,this.sendInitialRoomPresenceSync(room)):(room.initPresenceAck=!0,this.roomPresenceWaitingList&&this.roomPresenceWaitingList.length&&this.roomPresenceWaitingList.forEach((waitingListRoom,index)=>{waitingListRoom.dbId===room.dbId&&this.roomPresenceWaitingList.splice(index,1)}),room.initPresPromise&&(this.logger.info("[roomService] onRoomPresence - initPresPromise resolved"),room.initPresPromiseResolve(room),room.initPresInterval&&(room.initPresInterval.unsubscribe(),room.initPresInterval=null),room.initPresPromise=null,room.initPresPromiseResolve=null,this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room)))}else room.dbId&&!this.rooms[room.dbId]&&this.getServerRoom(room.dbId);return!0}catch(error){return this.logger.error("[roomService] onRoomPresence error "+error),!0}}updateUserStatus(room,user,status,reason=null){if(this.logger.info("[roomService] "+user.status+" || "+status),this.contactService.isUserContactJid(user.contact.jid)&&user.status!==status)switch(this.logger.info("[roomService] my new status "+status),status){case"deleted":delete this.roomsByJids[room.jid],delete this.rooms[room.dbId],this.logger.info("[roomService] deleteRoom successfully ("+room.dbId+")"),this.sendUnavailableRoomPresence(room),this.computeInvitationCounter(),room.isMeetingRoom()&&this.eventService.publish("MEETING_DELETE_EVENT",room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room,"remove"),this.sendEvent(this.ROOM_UPDATE_EVENT,room),this.contactService.userContact.guestMode&&!room.isWebinarRoom()&&this.eventService.publish("ON_OPEN_POPUP","concludeInvitation");break;case"unsubscribed":this.logger.info("[roomService] unsubscribed successfully ("+room.dbId+")"),this.sendUnavailableRoomPresence(room),room.status=this.RoomUserStatus.UNSUBSCRIBED,user.status=status,room.updateAvatarInfo(),room.isModerator=!1,room.initPresenceAck=!1,this.computeInvitationCounter(),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room);break;case"accepted":room.status=this.RoomUserStatus.ACCEPTED,user.status=status,this.fileStorageService.retrieveReceivedFilesForRoom(room.dbId).then(()=>{this.sendInitialRoomPresenceSync(room),room.updateAvatarInfo(),this.computeInvitationCounter(),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),this.getServerRoom(room.dbId).then(updatedRoom=>{if(this.eventService.publish(this.ROOM_UPDATE_EVENT,updatedRoom),this.sendEvent(this.ROOM_UPDATE_EVENT,updatedRoom),updatedRoom.isWebConferenceV2Room())return updatedRoom.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),this.eventService.publish("ON_WEBCONFERENCE_STARTED_INVITATION",updatedRoom),void this.logger.info("[roomService] onRoomInfoMessage : conferenceAdd -- confV2 !");updatedRoom.confEndpoints&&updatedRoom.confEndpoints.length&&!updatedRoom.isWebinarRoom()&&"webrtc"===updatedRoom.confEndpoints[0].mediaType&&this.eventService.publish("ON_CONFERENCE_STARTED_INVITATION",updatedRoom)}).catch(()=>{this.logger.warn("[roomService] getServerRoom "+room.dbId+" failed")})});break;case"rejected":delete this.roomsByJids[room.jid],delete this.rooms[room.dbId],room.status=this.RoomUserStatus.REJECTED,user.status=status,this.computeInvitationCounter(),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room)}else user&&!this.contactService.isUserContactJid(user.contact.jid)&&(this.logger.info("[roomService] Update user with status "+status),user.status===this.RoomUserStatus.DELETED&&status===this.RoomUserStatus.ACCEPTED&&(user.date=new Date,user.privilege===room_model_1.Room.Privilege.MODERATOR&&(user.privilege=room_model_1.Room.Privilege.USER)),user.status=status,room.updateAvatarInfo(),this.refreshMemberAndOrganizerLists(room),this.eventService.publish(this.ROOM_UPDATE_EVENT,room),this.sendEvent(this.ROOM_UPDATE_EVENT,room),reason||this.sendEvent(this.ROOM_USER_UPDATE_EVENT,{room:room,user:user}))}findRoomsWithConfId(confId){return this.getRooms().filter(room=>!(!room.confEndpoints||!room.confEndpoints.length)&&room.confEndpoints.some(confEndpoint=>confEndpoint.confEndpointId===confId))}removeConfIdInAllRooms(rooms){const actionPromises=[];return rooms.forEach(room=>{room.confEndpoints&&room.confEndpoints.length>0&&actionPromises.push(this.deleteRoomConferenceEndPoint(room,room.confEndpoints[0].confEndpointId))}),Promise.all(actionPromises)}async resetOpenInviteId(roomId){try{if(!roomId)throw new Error("[roomService] resetOpenInviteId -- no roomId ");const url=`${this.portalURL}users/${this.contactService.userContact.dbId}/public-links/reset`,headers=this.authService.getPostHeader(),body=JSON.stringify({roomId:roomId}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const openInviteData=(await response.json()).data;return openInviteData&&openInviteData.openInviteId&&openInviteData.roomId&&(this.logger.info("[roomService] resetOpenInviteId success - openinviteId "+openInviteData.openInviteId+" bound to room "+roomId),this.openInviteIdByRoomId[openInviteData.roomId]={},this.openInviteIdByRoomId[openInviteData.roomId].roomType=openInviteData.roomType,this.openInviteIdByRoomId[openInviteData.roomId].openInviteId=openInviteData.openInviteId,this.openInviteIdByRoomId[openInviteData.roomId].openInviteLink=openInviteData.invitationURL),openInviteData.openInviteId}catch(error){const errorMessage="resetOpenInviteId failure";throw this.logger.error("[contactService] "+errorMessage),new Error(errorMessage)}}async bindOpenInviteIdToRoom(room){try{const url=`${this.portalURL}users/${this.contactService.userContact.dbId}/public-links/bind`,headers=this.authService.getPostHeader(),body=JSON.stringify({roomId:room.dbId}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const openInviteData=(await response.json()).data;if(openInviteData&&openInviteData.roomId&&openInviteData.roomType&&openInviteData.openInviteId)return this.logger.info(`[roomService] createRoomOpenInviteId -- SUCCESS - room ${openInviteData.roomId} with type ${openInviteData.roomType} bound to openInviteId ${openInviteData.openInviteId}`),this.openInviteIdByRoomId[openInviteData.roomId]={},this.openInviteIdByRoomId[openInviteData.roomId].roomType=openInviteData.roomType,this.openInviteIdByRoomId[openInviteData.roomId].openInviteId=openInviteData.openInviteId,this.openInviteIdByRoomId[openInviteData.roomId].openInviteLink=openInviteData.invitationURL,this.rooms[room.dbId];throw new Error("[roomService] No or unvalid openInviteData")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"bindOpenInviteIdToRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async unbindOpenInviteFromRoom(roomId){try{const url=`${this.portalURL}users/${this.contactService.userContact.dbId}/public-links/unbind`,headers=this.authService.getPostHeader(),body=JSON.stringify({roomId:roomId}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return void this.logger.info("[roomService] openInvite successfully unbound")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"unbindOpenInviteFromRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async joinRoomUsingOpenInviteId(openInviteId){try{const url=config.restServerUrl+"/api/rainbow/enduser/v1.0/rooms/open-invites",headers=this.authService.getPostHeader(),body=JSON.stringify({openInviteId:openInviteId}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const openInvitesData=(await response.json()).data;if(openInvitesData&&openInvitesData.roomId)return openInvitesData.roomId;throw new Error("No roomId info in openInvitation")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinRoomUsingOpenInviteId");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async retrieveOpenInviteData(type=null,roomId=null){this.logger.debug("[roomService] retrieveOpenInviteData - type: "+type+" - roomId: "+roomId);try{let urlParams="";roomId&&(urlParams+="?roomId="+roomId),type&&(urlParams+=urlParams?"&type="+type:"?type="+type);const url=this.portalURL+"users/"+this.contactService.userContact.dbId+"/public-links"+urlParams,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const openInviteData=(await response.json()).data;openInviteData&&openInviteData.length?(this.logger.debug("[roomService] retrieveOpenInviteData -- SUCCESS - found "+openInviteData.length),openInviteData.forEach(openInvitePair=>{openInvitePair.roomId&&(this.openInviteIdByRoomId[openInvitePair.roomId]={},this.openInviteIdByRoomId[openInvitePair.roomId].roomType=openInvitePair.roomType,this.openInviteIdByRoomId[openInvitePair.roomId].openInviteId=openInvitePair.openInviteId,this.openInviteIdByRoomId[openInvitePair.roomId].openInviteLink=openInvitePair.invitationURL,this.logger.debug("[roomService] retrieveOpenInviteData - openInviteId "+openInvitePair.openInviteId+" set for room "+openInvitePair.roomId))})):this.logger.debug("[roomService] retrieveOpenInviteData -- FAILURE - none found")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveOpenInviteData");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async retrieveOpenInviteIdForRoom(roomId){this.logger.debug("[roomService] retrieveOpenInviteIdForRoom - roomId: "+roomId);try{const url=`${this.portalURL}rooms/${roomId}/public-links`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const openInviteData=(await response.json()).data;return openInviteData.openInviteId&&(this.openInviteIdByRoomId[roomId]={},this.openInviteIdByRoomId[roomId].roomType="default",this.openInviteIdByRoomId[roomId].openInviteId=openInviteData.openInviteId,this.openInviteIdByRoomId[roomId].openInviteLink=openInviteData.invitationURL,this.logger.debug("[roomService] retrieveOpenInviteIdForRoom - openInviteId "+openInviteData.openInviteId+" set for room "+roomId)),openInviteData.openInviteId}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveOpenInviteIdForRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async retrieveOpenInviteLinkForRoom(roomId){this.logger.debug("[roomService] retrieveOpenInviteLinkForRoom - roomId: "+roomId);try{const url=`${this.portalURL}rooms/${roomId}/public-links`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const openInviteData=(await response.json()).data;return openInviteData.openInviteId&&(this.openInviteIdByRoomId[roomId]={},this.openInviteIdByRoomId[roomId].roomType="default",this.openInviteIdByRoomId[roomId].openInviteId=openInviteData.openInviteId,this.openInviteIdByRoomId[roomId].openInviteLink=openInviteData.invitationURL,this.logger.debug("[roomService] retrieveOpenInviteLinkForRoom - openInviteLink "+openInviteData.openInviteLink+" set for room "+roomId)),openInviteData.openInviteLink}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveOpenInviteLinkForRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async checkOpenInviteIdValidity(openInvideId){this.logger.debug("[roomService] checkOpenInviteIdValidity - openInvideId: "+openInvideId);try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/rooms/open-invites/validate?openInviteId=${openInvideId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const openInviteData=(await response.json()).data,roomName=openInviteData.roomName,roomTopic=openInviteData.roomTopic,roomLocked=openInviteData.roomLocked,invitingFirstName=openInviteData.invitingFirstName,invitingLastName=openInviteData.invitingLastName,invitingCompanyName=openInviteData.invitingCompanyName;return this.logger.info(`[roomService] checkOpenInviteIdValidity:\nroomName: ${roomName}\nroomTopic: ${roomTopic}\nroomLocked: ${roomLocked}\ninvitingFirstName: ${invitingFirstName}\ninvitingLastName: ${invitingLastName}\ninvitingCompanyName: ${invitingCompanyName}`),openInviteData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"checkOpenInviteIdValidity");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}updateRoomConfEndpoint(oldConfId,newConfId){const rooms=this.findRoomsWithConfId(oldConfId);rooms&&rooms.length&&rooms.forEach(room=>{room.confEndpoints.forEach(endpoint=>{endpoint.confEndpointId===oldConfId&&(endpoint.confEndpointId=newConfId)}),this.getServerRoom(room.dbId).then(servRoom=>{this.eventService.publish(this.ROOM_UPDATE_EVENT,servRoom)}),this.sendEvent("ROOM_ADD_CONF_ENDPOINT_EVENT",room)})}hasNoDefaultMeetingRooms(){return Object.keys(this.rooms).some(key=>this.rooms[key].isMeetingRoom()&&!this.rooms[key].isMyPersonalMeetingRoom())}async retrievePersonalAudioRoom(force=!1){if(!force&&this.personalAudioRoomId&&this.getRoomById(this.personalAudioRoomId))return this.logger.debug("[roomService] retrievePersonalAudioRoom from service data"),this.getRoomById(this.personalAudioRoomId);try{this.logger.debug("[roomService] retrievePersonalAudioRoom from server");const url=this.portalURL+"meetings/personal",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const meetingRoomData=(await response.json()).data;if(meetingRoomData.id){this.personalAudioRoomId=meetingRoomData.id;const room=this.getRoomById(meetingRoomData.id);return room?this.updateRoomData(room,meetingRoomData):this.createRoomFromData(meetingRoomData),this.getRoomById(meetingRoomData.id)}throw new Error("Wrong data from server")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrievePersonalAudioRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async retrieveCurrentPersonalAudioRoom(force=!1){if(!force&&this.currentPersonalAudioRoomId&&this.getRoomById(this.currentPersonalAudioRoomId))return this.logger.debug("[roomService] retrieveCurrentPersonalAudioRoom from service data"),this.getRoomById(this.currentPersonalAudioRoomId);try{this.logger.debug("[roomService] retrieveCurrentPersonalAudioRoom from server");const url=this.portalURL+"meetings/current",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const meetingRoomData=(await response.json()).data;if(meetingRoomData.id){this.currentPersonalAudioRoomId=meetingRoomData.id;const room=this.getRoomById(meetingRoomData.id);return room?this.updateRoomData(room,meetingRoomData):this.createRoomFromData(meetingRoomData),this.getRoomById(meetingRoomData.id)}const error=new Error("Wrong data from server");throw this.logger.info("[roomService] "+error.message),error}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveCurrentPersonalAudioRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async reUseMeetingRoom(roomId){if(this.logger.debug("[roomService] reUseMeetingRoom - "+roomId),!roomId){const error=new Error("reUseMeetingRoom - missing parameter");throw this.logger.error(error.message),error}const room=this.getRoomById(roomId);room&&!room.isActive&&this.sendAvailableRoomPresence(room);try{const url=`${this.portalURL}meetings/${roomId}/reuse`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const meetingRoomData=(await response.json()).data;if(meetingRoomData.id){this.currentPersonalAudioRoomId=meetingRoomData.id;const serviceRoom=this.getRoomById(meetingRoomData.id);return serviceRoom?this.updateRoomData(serviceRoom,meetingRoomData):this.createRoomFromData(meetingRoomData),this.getRoomById(meetingRoomData.id)}throw new Error("Wrong data from server")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"reUseMeetingRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async deletePersonalMeetingRoom(){this.logger.debug("[roomService] deletePersonalMeetingRoom");try{const url=this.portalURL+"meetings/delete",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const meetingRoomData=(await response.json()).data;if(meetingRoomData.id){let room=this.getRoomById(meetingRoomData.id);return room?this.updateRoomData(room,meetingRoomData):this.createRoomFromData(meetingRoomData),this.currentPersonalAudioRoomId=meetingRoomData.id,this.personalAudioRoomId=meetingRoomData.id,this.eventService.publish("ON_MEETING_CREATED_EVENT",meetingRoomData.id),room=this.getRoomById(meetingRoomData.id),room}throw new Error("Wrong data from server")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deletePersonalMeetingRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async saveCurrentPersonalMeetingRoom(name){this.logger.debug("[roomService] saveCurrentPersonalMeetingRoom");try{const url=this.portalURL+"meetings/save",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({name:name})});if(!response.ok)throw response;const meetingRoomData=(await response.json()).data;if(meetingRoomData.id){this.currentPersonalAudioRoomId=meetingRoomData.id;let room=this.getRoomById(meetingRoomData.id);return room?this.updateRoomData(room,meetingRoomData):this.createRoomFromData(meetingRoomData),this.currentPersonalAudioRoomId=meetingRoomData.id,this.personalAudioRoomId=meetingRoomData.id,this.eventService.publish("ON_MEETING_CREATED_EVENT",meetingRoomData.id),room=this.getRoomById(meetingRoomData.id),room}throw new Error("Wrong data from server")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"saveCurrentPersonalMeetingRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}getRoomsWithSfuConferenceEndpoints(){const confEndpointsId=[];return Object.keys(this.rooms).forEach(key=>{const room=this.rooms[key];room&&!room.isWebConferenceV2Room()&&room.confEndpoints.length&&"webrtc"===room.confEndpoints[0].mediaType&&confEndpointsId.push(room.confEndpoints[0].confEndpointId)}),confEndpointsId}getPersonalAudioRoomOpenInviteIdLink(){return this.getOpenInviteIdLinkForRoom(this.personalAudioRoomId)}getOpenInviteIdLinkForRoom(roomId){return this.openInviteIdByRoomId[roomId]?this.openInviteIdByRoomId[roomId].openInviteLink:null}getOpenInviteIdForRoom(roomId){return this.openInviteIdByRoomId[roomId]?this.openInviteIdByRoomId[roomId].openInviteId:null}getName(room){return room.name}sortObjectByProperty(property_name){return(aaa,bbb)=>aaa[property_name]<bbb[property_name]?-1:aaa[property_name]>bbb[property_name]?1:0}async retrieveRoomConsumption(){this.logger.debug("[roomService] retrieveRoomConsumption");try{const url=this.portalURL+"rooms/consumption",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const roomConsumptionData=(await response.json()).data;return this.logger.debug("[roomService] retrieveRoomConsumption -- SUCCESS -- "+roomConsumptionData.currentValue),roomConsumptionData.currentValue}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveRoomConsumption");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async startAdHocConference(caller,callee,participants){try{const url=this.portalURL+"adhoc",headers=this.authService.getPostHeader(),bodyData={};caller&&(bodyData.caller=caller),bodyData.callee=callee,bodyData.participants=participants;const response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(bodyData)});if(!response.ok)throw response;const roomData=(await response.json()).data;return this.logger.debug("[roomService] startAdHocConference -- SUCCESS -- "),roomData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startAdHocConference");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}async startAdHocConferenceV2(caller,participants){try{const url=this.portalURL+"ad-hoc",headers=this.authService.getPostHeader(),bodyData={};caller&&(bodyData.caller=caller),bodyData.participants=participants;const response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(bodyData)});if(!response.ok)throw response;const roomData=(await response.json()).data;return this.logger.debug("[roomService] startAdHocConferenceV2 -- SUCCESS -- "),roomData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startAdHocConferenceV2");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}getParticipantDataForAdhocFromCall(call){const result={participant:null,blindTrasfer:!1};if("Phone"===call.type.value){let deskphoneCase=!1;null!==call.sipWiseEndPointDeviceList&&call.sipWiseEndPointDeviceList.length&&call.id===call.sipWiseEndPointDeviceList[0].callId&&(deskphoneCase="sip"===call.sipWiseEndPointDeviceList[0].deviceType),call.contact.temp?(result.participant={phoneNumber:call.contact.id,connected:!0},result.blindTrasfer=!0):call.sipWiseData&&call.sipWiseData.called&&call.sipWiseData.called.phoneNumber&&-1!==call.sipWiseData.called.phoneNumber.indexOf("+")?(result.participant={phoneNumber:call.sipWiseData.called.phoneNumber,connected:!0},result.blindTrasfer=!0):(result.participant={userId:call.contact.dbId,connected:!0,deskphone:deskphoneCase},deskphoneCase&&(result.blindTrasfer=!0))}else result.participant={userId:call.contact.dbId,connected:!0};return this.logger.info(`[roomService] getParticipantDataForAdhocFromCall for call ${call.id}: type ${call.type.value} -- ${JSON.stringify(result.participant)} -- blind transfer : ${result.blindTrasfer}`),result}async manageEventForNonExistingRoom(roomJid,eventName,userJid,flagNoNotificationPopUp){try{setTimeout(async()=>{this.logger.debug("[roomService] manageEventForNonExistingRoom for "+roomJid);let room=this.getRoomByJid(roomJid);room||(room=await this.getServerRoomByJid(roomJid));const user=room.getUserByJid(userJid);if("conferenceAdd"===eventName){if(!room.isMeetingRoom()&&!this.contactService.userContact.webrtcAudioEnabled)return room;room.noNotificationPopUp=flagNoNotificationPopUp,room.isWebConferenceV2Room()?(room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),this.eventService.publish("ON_WEBCONFERENCE_STARTED_INVITATION",room),this.logger.info("[roomService] onRoomInfoMessage : conferenceAdd -- confV2 !")):(this.eventService.publish("ROOM_ADD_CONF_ENDPOINT_EVENT",room),this.sendEvent("ROOM_ADD_CONF_ENDPOINT_EVENT",room),this.eventService.publish("ON_CONFERENCE_STARTED_INVITATION",room,user))}return room},4e3)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"manageEventForNonExistingRoom");throw this.logger.error("[roomService] "+errorInfo.message),errorInfo.error}}getLanguageWithIsoCode(){let result="en";if(this.contactService.userContact.language){const splitted=this.contactService.userContact.language.split("-");splitted.length>1&&(result=splitted[0]+"-"+splitted[1].toUpperCase())}return result}}exports.RoomService=RoomService},function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib_es6=__webpack_require__(0),InnerSubscriber_InnerSubscriber=function(_super){function InnerSubscriber(parent,outerValue,outerIndex){var _this=_super.call(this)||this;return _this.parent=parent,_this.outerValue=outerValue,_this.outerIndex=outerIndex,_this.index=0,_this}return tslib_es6.a(InnerSubscriber,_super),InnerSubscriber.prototype._next=function(value){this.parent.notifyNext(this.outerValue,value,this.outerIndex,this.index++,this)},InnerSubscriber.prototype._error=function(error){this.parent.notifyError(error,this),this.unsubscribe()},InnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},InnerSubscriber}(__webpack_require__(2).a),subscribeTo=__webpack_require__(60),Observable=__webpack_require__(5);function subscribeToResult(outerSubscriber,result,outerValue,outerIndex,innerSubscriber){if(void 0===innerSubscriber&&(innerSubscriber=new InnerSubscriber_InnerSubscriber(outerSubscriber,outerValue,outerIndex)),!innerSubscriber.closed)return result instanceof Observable.a?result.subscribe(innerSubscriber):Object(subscribeTo.a)(result)(innerSubscriber)}__webpack_require__.d(__webpack_exports__,"a",(function(){return subscribeToResult}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return config}));var _enable_super_gross_mode_that_will_cause_bad_things=!1,config={Promise:void 0,set useDeprecatedSynchronousErrorHandling(value){value&&(new Error).stack;_enable_super_gross_mode_that_will_cause_bad_things=value},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const eventsService=new class{dispatchEvent(eventName,eventDetail=null){document.dispatchEvent(new CustomEvent(eventName,{detail:eventDetail}))}};exports.eventsService=eventsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);class Call{constructor(status,id,type,contact){this.isVm=!1,this.remoteMedia=0,this.localMedia=0,this.isEscalated=!1,this.isError=!1,this.startDate=new Date,this.isInitiator=!1,this.participants=null,this.isConference=!1,this.isRecorded=!1,this.subject=void 0,this.currentCalled={contactPhoneNumber:"",contact:null,participantsPhoneNumbers:[],participants:[]},this.fullJid="",this.mediaPillarCall=null,this.isSecondary=!1,this.isSecondSharingCall=!1,this.relevant=!0,this.relevantEquipmentId="unknown",this.deviceId=null,this.isOwner=void 0,this.isMPAudioOwner=void 0,this.pbxConnectionDown=void 0,this.isMuted=!1,this.duration=0,this.durationTimer=null,this.unifiedPlanActivated=!0,this.globalCallId=null,this.correlatorData=null,this.correlatorDataHex=null,this.activeControl=!1,this.hasRemoteControlling=!1,this.networkQuality=0,this.sipWiseData=null,this.sipWiseEndPointDeviceList=null,this.PBXDisplay=null,this.noIncomingPopup=!1,this.errorMessage=null,this.lastCause=null,this.onHold=!1,this.putOnHold=!1,this.autoOffHookResource=void 0,this.mixtWebTelSingleStepTrans=!1,this.localStreams=[],this.pinnedMedia="",this.dimLocalSharingScreen=!0,this.statsInterval=null,this.originalStream=null,this.autoClear=null,this.autoAnswer=!1,this.distantType="",this.addVideoAfterUnhold=!1,this.callLayoutSizeValues={},this.isInExternalWindow=!1,this.rxSubject=new rxjs_1.Subject,this.direction=null,this.remoteNumber=null,this.callerNumber=null,this.calledNumber=null,this.calledDisplayName=null,this.calledLastName=null,this.calledFirstName=null,this.calledJID=null,this.calledRole=null,this.status=status,this.type=type,this.id=id,this.conversationId=null,this.connectionId=null,this.isVm=null,this.contact=contact,this.remoteMedia=0,this.localMedia=0,this.isEscalated=!1,this.startDate=new Date,this.isInitiator=!1,this.participants=null,this.isConference=!1,this.avatars=contact&&contact.avatar?[this.contact.avatar.src]:[],this.subject=void 0,this.currentCalled={contactPhoneNumber:"",contact:null,participantsPhoneNumbers:[],participants:[]},this.fullJid="",this.mediaPillarCall=null,this.isSecondary=!1,this.isSecondSharingCall=!1,this.relevant=!1,this.relevantEquipmentId="unknown",this.deviceId=null,this.isOwner=void 0,this.isMPAudioOwner=void 0,this.pbxConnectionDown=void 0,this.isMuted=!1,this.duration=0,this.statusInfo=null,this.globalCallId=void 0,this.correlatorData=void 0,this.correlatorDataHex=void 0,this.activeControl=!1,this.hasRemoteControlling=!1,this.networkQuality=0,this.sipWiseData={initCause:"",called:{phoneNumber:"",displayName:""},assocPhoneCallId:null},this.sipWiseEndPointDeviceList=[],this.PBXDisplay=void 0,this.noIncomingPopup=!1,this.onHold=!1,this.putOnHold=!1,this.localStreams=[],this.direction=void 0,this.remoteNumber=void 0,this.callerNumber=void 0,this.calledNumber=void 0,this.calledDisplayName=void 0,this.calledLastName=void 0,this.calledFirstName=void 0,this.calledJID=void 0,this.calledRole=void 0,this.pinnedMedia="",this.dimLocalSharingScreen=!0,this.statsInterval=null,this.originalStream=null,this.autoClear=null,this.autoAnswer=!1,this.distantType="",this.addVideoAfterUnhold=!1,this.mixtWebTelSingleStepTrans=!1}static create(status,id,type,contact){return new Call(status,id,type,contact)}setCallId(id){this.id=id}getGlobalCallId(){return this.globalCallId}setGlobalCallId(id){this.globalCallId=id}setConversationId(conversationId){this.conversationId=conversationId}setStatus(status){this.status=status,this.manageDurationTimer()}setCalledDisplayName(calledDisplayName){this.calledDisplayName=calledDisplayName}getCalledDisplayName(){return this.calledDisplayName}setCalledRole(calledRole){this.calledRole=calledRole}manageDurationTimer(){this.status===Call.Status.ACTIVE?this.startDuration():this.status===Call.Status.UNKNOWN&&this.stopDuration()}setCorrelatorData(correlatorData){this.correlatorData=correlatorData}setCorrelatorDataHex(correlatorDataHex){this.correlatorDataHex=correlatorDataHex}setType(type){this.type=type}setIsVm(isVM){this.isVm=isVM}getIsVm(){return this.isVm}setContact(contact){this.contact=contact,this.avatars=[this.contact.avatar.src]}getCurrentCalled(){return this.currentCalled}setSubject(subject){this.subject=subject}setCurrentCalledContactNumber(number){this.currentCalled.contactPhoneNumber=number}setRelevantEquipmentId(relevantEquipmentId){this.relevantEquipmentId=relevantEquipmentId}setParticipants(participants){this.participants=participants,this.avatars=[],this.participants.forEach(participant=>{this.avatars.push(participant.avatar.src)})}setConnectionId(connectionId){this.connectionId=connectionId,this.id=Call.getIdFromConnectionId(connectionId)}isInConversationWithMobile(){return!!this.fullJid&&(-1!==this.fullJid.indexOf("mobile_android")||-1!==this.fullJid.indexOf("mobile_ios"))}isInConversationWithDesktopApp(){return!!this.fullJid&&-1!==this.fullJid.indexOf("desk_")}setCurrentCalled(currentCalled){currentCalled?this.contact&&this.contact.id?(this.currentCalled.contactPhoneNumber=currentCalled.contactPhoneNumber&&""!==currentCalled.contactPhoneNumber?currentCalled.contactPhoneNumber:"",this.currentCalled.contact=currentCalled.contact?currentCalled.contact:null,this.currentCalled.participantsPhoneNumbers=null,this.currentCalled.participants=null):(this.currentCalled.contactPhoneNumber="",this.currentCalled.contact=null,this.currentCalled.participantsPhoneNumbers=currentCalled.participantsPhoneNumbers&&currentCalled.participantsPhoneNumbers.length>0?currentCalled.participantsPhoneNumbers:null,this.currentCalled.participants=currentCalled.participants&&currentCalled.participants.length>0?currentCalled.participants:null):(this.currentCalled.contactPhoneNumber="",this.currentCalled.contact=null,this.currentCalled.participantsPhoneNumbers=null,this.currentCalled.participants=null)}static getIdFromConnectionId(connectionId){return connectionId}static getCallIdFromConnectionId(connectionId){return connectionId?connectionId.split("#")[0]:null}static getDeviceIdFromConnectionId(connectionId){const deviceId=connectionId?connectionId.split("#")[1]:null;return deviceId||null}isWebRtcMediaPillar(){return this.fullJid&&0===this.fullJid.indexOf("mp_")}isMediaPillarCall(){return null!==this.mediaPillarCall||this.isWebRtcMediaPillar()}getMediaPillarCall(){return this.mediaPillarCall}setMediaPillarCall(mediaPillarCallContext){this.mediaPillarCall=mediaPillarCallContext||null}setDeviceIdSipWise(deviceId){this.deviceId=deviceId||null}getDeviceIdSipWise(){return this.deviceId}setConnectionIdSipWise(connectionId){this.connectionId=connectionId}getConnectionIdSipWise(){return this.connectionId}resetSipWiseData(){this.sipWiseData={initCause:"",called:{phoneNumber:"",displayName:""}}}setInitCauseSipWiseData(cause){this.sipWiseData.initCause=cause,this.lastCause=cause}getInitCauseSipWiseData(){return this.sipWiseData.initCause}setTypeSipWiseData(type){this.sipWiseData.type=type}getTypeSipWiseData(){return this.sipWiseData.type}setCalledSipWiseData(called){this.sipWiseData.called=called}getCalledSipWiseData(){return this.sipWiseData.called}isHuntingGroupCallSipWise(){return"distributed"===this.sipWiseData.initCause}getHuntingGroupCalledInfo(){return this.isHuntingGroupCallSipWise()?this.getCalledSipWiseData():null}isHuntingGroupCallQueueSipWise(){return"ccq"===this.sipWiseData.type}setAssocPhoneCallId(assocPhoneCallId){this.sipWiseData.assocPhoneCallId=assocPhoneCallId}getAssocPhoneCallId(){return this.sipWiseData.assocPhoneCallId}setEndPointDeviceListSipWise(deviceList){this.sipWiseEndPointDeviceList=deviceList}getEndPointDeviceListSipWise(){return this.sipWiseEndPointDeviceList}setAutoOffHookResource(resource){this.autoOffHookResource=resource}getAutoOffHookResource(){return this.autoOffHookResource}setMixtWebTelSingleStepTrans(flag){this.mixtWebTelSingleStepTrans=flag}getMixtWebTelSingleStepTrans(){return this.mixtWebTelSingleStepTrans}setDirection(direction){this.direction=direction}getDirection(){return this.direction}getDeviceIdFromConnectionIdFromCall(){return this.deviceId?this.deviceId:this.connectionId?this.connectionId.split("#")[1]:null}startDuration(){this.durationTimer||(this.durationTimer=rxjs_1.interval(1e3).subscribe(()=>{this.duration++}))}stopDuration(){this.durationTimer&&(this.durationTimer.unsubscribe(),this.durationTimer=null,this.duration=0)}getStatusForDisplay(){return this.status&&this.status.value?Call.StatusDisplay[this.status.value]:""}toString(){return"(type:"+(this.type?this.type.value:this.type)+", id:"+this.id+", status:"+(this.status?this.status.value:this.status)+(this.isConference?" conference":"")+")"}isInCallWithMediaPillar(){return this.fullJid&&-1!==this.fullJid.indexOf("mp_")}subscribe(observer){return this.rxSubject.subscribe(observer)}publish(name,value=null){this.rxSubject.next({name:name,value:value})}}Call.Status={UNKNOWN:{key:0,value:"Unknown"},DIALING:{key:1,value:"dialing"},QUEUED_INCOMMING:{key:2,value:"queuedIncomming"},QUEUED_OUTGOING:{key:10,value:"queuedOutGoing"},RINGING_INCOMMING:{key:3,value:"incommingCall"},RINGING_OUTGOING:{key:4,value:"ringingOutgoing"},ACTIVE:{key:5,value:"active"},HOLD:{key:6,value:"held"},PUT_ON_HOLD:{key:7,value:"putOnHold"},RELEASING:{key:8,value:"releasing"},ANSWERING:{key:9,value:"answering"},CONNECTING:{key:12,value:"connecting"},ERROR:{key:11,value:"error"}},Call.Type={WEBRTC:{key:1,value:"Video"},PHONE:{key:2,value:"Phone"}},Call.Media={AUDIO:1,VIDEO:2,PHONE:4,SHARING:8},Call.StatusDisplay={Unknown:"",dialing:"dialing",queuedIncomming:"incoming",queuedOutGoing:"ringingOutgoing",incommingCall:"incoming",ringingOutgoing:"ringingOutgoing",active:"inCall",held:"held",putOnHold:"putOnHold",releasing:"releasing",answering:"answering",connecting:"connecting",error:"failed"},exports.Call=Call},function(module,__webpack_exports__,__webpack_require__){"use strict";function identity(x){return x}__webpack_require__.d(__webpack_exports__,"a",(function(){return identity}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return OuterSubscriber}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),OuterSubscriber=function(_super){function OuterSubscriber(){return null!==_super&&_super.apply(this,arguments)||this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(OuterSubscriber,_super),OuterSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue)},OuterSubscriber.prototype.notifyError=function(error,innerSub){this.destination.error(error)},OuterSubscriber.prototype.notifyComplete=function(innerSub){this.destination.complete()},OuterSubscriber}(__webpack_require__(2).a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return filter}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2);function filter(predicate,thisArg){return function(source){return source.lift(new FilterOperator(predicate,thisArg))}}var FilterOperator=function(){function FilterOperator(predicate,thisArg){this.predicate=predicate,this.thisArg=thisArg}return FilterOperator.prototype.call=function(subscriber,source){return source.subscribe(new FilterSubscriber(subscriber,this.predicate,this.thisArg))},FilterOperator}(),FilterSubscriber=function(_super){function FilterSubscriber(destination,predicate,thisArg){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.thisArg=thisArg,_this.count=0,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(FilterSubscriber,_super),FilterSubscriber.prototype._next=function(value){var result;try{result=this.predicate.call(this.thisArg,value,this.count++)}catch(err){return void this.destination.error(err)}result&&this.destination.next(value)},FilterSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return NotificationKind})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Notification}));var NotificationKind,_observable_empty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(22),_observable_of__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(65),_observable_throwError__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(84);NotificationKind||(NotificationKind={});var Notification=function(){function Notification(kind,value,error){this.kind=kind,this.value=value,this.error=error,this.hasValue="N"===kind}return Notification.prototype.observe=function(observer){switch(this.kind){case"N":return observer.next&&observer.next(this.value);case"E":return observer.error&&observer.error(this.error);case"C":return observer.complete&&observer.complete()}},Notification.prototype.do=function(next,error,complete){switch(this.kind){case"N":return next&&next(this.value);case"E":return error&&error(this.error);case"C":return complete&&complete()}},Notification.prototype.accept=function(nextOrObserver,error,complete){return nextOrObserver&&"function"==typeof nextOrObserver.next?this.observe(nextOrObserver):this.do(nextOrObserver,error,complete)},Notification.prototype.toObservable=function(){switch(this.kind){case"N":return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__.a)(this.value);case"E":return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__.a)(this.error);case"C":return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__.b)()}throw new Error("unexpected notification kind value")},Notification.createNext=function(value){return void 0!==value?new Notification("N",value):Notification.undefinedValueNotification},Notification.createError=function(err){return new Notification("E",void 0,err)},Notification.createComplete=function(){return Notification.completeNotification},Notification.completeNotification=new Notification("C"),Notification.undefinedValueNotification=new Notification("N",void 0),Notification}()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const fileDescriptor_1=__webpack_require__(76),fileViewer_1=__webpack_require__(106),rxjs_1=__webpack_require__(7),filePublicDownload_1=__webpack_require__(167),distinctUntilChanged_1=__webpack_require__(143),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),event_service_1=__webpack_require__(11),errorHelper_service_1=__webpack_require__(12);class FileStorageService{constructor(){this.started=!1,this.listeners=[],this.currentOrder="date",this.voiceMessageFileDescriptors=[],this.fileDescriptors=[],this.receivedFileDescriptors=[],this.mergedFileDescriptors=[],this.uploadingFileDescriptors=[],this.contactService=contact_service_1.ContactService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.deleteFileWoConfirm=!1,this.fileDescriptorsSubject=null,this.uploadingFileDescriptorsSubject=null,this.conferenceRecordingFiles=[],this.conferenceRecordingFilesSubject=null,this.sharedWithMeConferenceRecordingFiles=[],this.sharedWithMeConferenceRecordingFilesSubject=null,this.publicFileDownload=[],this.publicFileDownloadSubject=null,this.startedSubject=new rxjs_1.BehaviorSubject(!1),this.retrieveFileDescriptorPromises=[],this.authService=auth_service_1.AuthService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.fileStorageService||(win.rainbow.fileStorageService=new FileStorageService),win.rainbow.fileStorageService}async start(fileStorageServiceConfig=null){this.started=!1,this.portalURL=config.restServerUrl+"/api/rainbow/filestorage/v1.0/files",this.fileDescriptors=[],this.receivedFileDescriptors=[],this.mergedFileDescriptors=[],this.voiceMessageFileDescriptors=[],this.fileDescriptorsSubject=new rxjs_1.Subject,this.uploadingFileDescriptorsSubject=new rxjs_1.Subject,this.publicFileDownload=[],this.publicFileDownloadSubject=new rxjs_1.Subject,this.conferenceRecordingFilesSubject=new rxjs_1.Subject,this.sharedWithMeConferenceRecordingFilesSubject=new rxjs_1.Subject,this.contactService.userContact.fileStorageEnabledSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(async fileStorageEnabled=>{if(fileStorageEnabled){this.logger.info("[FileStorageService] === STARTING ===");try{this.consumptionData=null,await this.getFileDescriptorsFromServer(),this.started=!0,this.logger.info("[FileStorageService] === STARTED ==="),this.startedSubject.next(!0),this.contactService.userContact.fileStorageEnabledSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(fileStorageEnable=>{fileStorageEnable||this.stop()})}catch(error){this.logger.error("[FileStorageService] === STARTING === failure -- "+error.message),this.startedSubject.next(!1)}fileStorageServiceConfig&&fileStorageServiceConfig.webinar||(this.retrieveUserConsumption(),this.retrieveVoiceMessageFileDescriptorsListPerOwner().then(()=>{this.logger.info("[FileStorageService] === STARTED (retrieveVoiceMessageFileDescriptorsListPerOwner)")}).catch(()=>{this.logger.error("[FileStorageService] === STARTING === failure -- (retrieveVoiceMessageFileDescriptorsListPerOwner)")})),this.listeners.push(this.eventService.subscribe("ROOM_UPDATE_EVENT",(__event,room,action)=>{action&&"remove"===action&&(this.logger.info("[FileStorageService] ROOM_UPDATE_EVENT REMOVED for roomId="+room.dbId),this.removeRoomFileViewer(room))}))}else this.logger.info("start skipped - fileStorageEnabled : false")})}async stop(){this.logger.info("[FileStorageService] === STOPPING ==="),this.started&&(this.started=!1),this.listeners&&this.listeners.forEach(unregisterListener=>{unregisterListener()}),this.voiceMessageFileDescriptors=[],this.fileDescriptors=[],this.receivedFileDescriptors=[],this.uploadingFileDescriptors=[],this.conferenceRecordingFiles=[],this.sharedWithMeConferenceRecordingFiles=[],this.logger.info("[FileStorageService] === STOPPED ==="),this.startedSubject.next(!1)}async reinit(isBlocking=!1){this.contactService&&this.contactService.userContact&&!this.contactService.userContact.fileStorageEnabled?this.logger.info("reinit skipped - fileStorageEnabled : "+this.contactService.userContact.fileStorageEnabled):isBlocking?await this.reinitInternal():this.reinitInternal()}async reinitInternal(){try{await this.retrieveFileDescriptorsListPerOwner(),await this.retrieveReceivedFiles(this.contactService.userContact.dbId),this.orderDocuments(),this.logger.info("[FileStorageService] reinitInternal done")}catch(error){throw this.logger.error("[FileStorageService] reinitInternal failure -- "+error.message),error}}removeRoomFileViewer(room){if(this.contactService&&this.contactService.userContact&&!this.contactService.userContact.fileStorageEnabled)this.logger.info("removeRoomFileViewer skipped - fileStorageEnabled : "+this.contactService.userContact.fileStorageEnabled);else{this.logger.info("[FileStorageService] >removeRoomFileViewer: "+room.dbId),this.receivedFileDescriptors.forEach(file=>{if(file&&file.ownerId!==this.contactService.userContact.dbId){const viewerFound=file.viewers.find(element=>element.viewerId===room.dbId);viewerFound&&(this.logger.info("[FileStorageService] >viewer found delete it"),file.viewers.splice(file.viewers.indexOf(viewerFound),1))}});for(let index=0;index<this.receivedFileDescriptors.length;index++){const fileDescriptor=this.receivedFileDescriptors[index];!fileDescriptor||fileDescriptor.viewers&&fileDescriptor.viewers.length||(this.logger.info("[FileStorageService] >receivedFileDescriptor empty, delete it"),this.receivedFileDescriptors.splice(index,1),index-=1)}this.orderDocuments()}}getNewDocuments(set){switch(set){case"mine":return this.fileDescriptors;case"received":return this.receivedFileDescriptors;default:return this.mergedFileDescriptors}}getDocuments(orderedBy,received){return this.currentOrder!==orderedBy&&(this.currentOrder=orderedBy,this.orderDocuments()),received?this.receivedFileDescriptors:this.fileDescriptors}getFileDescriptorById(id){for(const fileDescriptor of this.fileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;for(const fileDescriptor of this.receivedFileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;for(const fileDescriptor of this.sharedWithMeConferenceRecordingFiles)if(fileDescriptor.id===id)return fileDescriptor;return null}getFileDescriptorByViewerId(id){for(const fileDescriptor of this.fileDescriptors)for(const viewer of fileDescriptor.viewers)if(viewer.viewerId===id)return fileDescriptor;for(const fileDescriptor of this.receivedFileDescriptors)if(fileDescriptor.id===id)return fileDescriptor;return null}getReceivedFileDescriptorsFromConversation(conversation){if(conversation.contact){const files=this.receivedFileDescriptors.filter(file=>conversation.contact.dbId===file.ownerId&&void 0!==file.viewers.find(viewer=>viewer.viewerId===this.contactService.userContact.dbId));return files||[]}if(conversation.room){const files=this.receivedFileDescriptors.filter(file=>file.ownerId!==this.contactService.userContact.dbId&&void 0!==file.viewers.find(viewer=>viewer.viewerId===conversation.room.dbId));return files||[]}return[]}getReceivedFilesFromContact(dbId){return this.receivedFileDescriptors.filter(file=>file.ownerId===dbId)}getSentFilesToContact(dbId){if(this.contactService&&this.contactService.userContact&&!this.contactService.userContact.fileStorageEnabled)return this.logger.info("getSentFilesToContact skipped - fileStorageEnabled : "+this.contactService.userContact.fileStorageEnabled),[];return this.fileDescriptors.filter(file=>{for(let i=0;i<file.viewers.length;i++)if(file.viewers[i].viewerId===dbId)return!0;return!1})}getReceivedFilesForRoom(dbId){return this.receivedFileDescriptors.filter(file=>{for(let i=0;i<file.viewers.length;i++)if(file.viewers[i].viewerId===dbId&&file.ownerId!==this.contactService.userContact.dbId)return!0;return!1})}getConsumptionData(){return this.consumptionData}getVoiceMessageFileDescriptorByMsgId(msgId){return this.voiceMessageFileDescriptors.find(file=>null!==file.tags&&file.tags.msgId===msgId)}async createFileDescriptor(file,viewers=[],voiceMessageData=null,ccarelogs=!1,ccareclientlogs=!1){const fileName=file.name,extension=file.name.split(".").pop(),size=file.size;try{const data={fileName:fileName,extension:extension,size:size,viewers:viewers};voiceMessageData&&(data.voicemessage=!0,data.encoding=!0,data.duration=voiceMessageData.duration),ccarelogs&&(data.ccarelogs=!0,data.ccareclientlogs=ccareclientlogs);const url=this.portalURL,headers=this.authService.getPostHeader(),body=JSON.stringify(data),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const fileDescriptorData=(await response.json()).data,fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);return fileDescriptor&&(this.fileDescriptors.push(fileDescriptor),this.uploadingFileDescriptors.push(fileDescriptor),this.uploadingFileDescriptorsSubject.next({size:this.getUploadingFilesSize()})),this.logger.info("[FileStorageService] createFileDescriptor -- "+fileDescriptor.id+" -- success"),this.orderDocuments(),fileDescriptor}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createFileDescriptor");throw 403153===errorInfo.error.errorDetailsCode&&(this.contactService.userContact.fileSharingEnabled=!1,this.contactService.userContact.rxSubject.next(void 0)),this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}createFileDescriptorFromData(data){if(data){let viewers=[];data.viewers&&(viewers=fileViewer_1.FileViewer.createFromData(data.viewers));let url=data.url;url||(url=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files/"+data.id);const state=data.isUploaded?"uploaded":"not_uploaded",voiceMessage=data.tags&&"voicemail"===data.tags.purpose,recordingFile=data.tags&&"conference_record"===data.tags.purpose,recordingConferenceId=recordingFile&&data.tags&&data.tags.conferenceRecording?data.tags.conferenceRecording.filesConfRecordingId:null;let virusScanState="unknown";virusScanState=null===data.isClean?"notScanned":!0===data.isClean?"isClean":"isInfected";try{return fileDescriptor_1.FileDescriptor.create(data.id,url,data.ownerId,data.fileName,data.extension,data.typeMIME,data.size,data.registrationDate,data.uploadedDate,data.dateToSort,viewers,state,data.thumbnail,data.orientation,data.original_w,data.original_h,data.tags,virusScanState,voiceMessage,recordingFile,recordingConferenceId)}catch(err){return err}}return null}async deleteFileDescriptor(id){try{const url=`${this.portalURL}/${id}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[FileStorageService] deleteFileDescriptor -- SUCCESS"),this.removeUploadingFileFromId(id),this.deleteFileDescriptorFromCache(id),this.eventService.publish("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:id}),this.retrieveUserConsumption()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteFileDescriptor");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async deleteAllFileDescriptor(){try{const url=this.portalURL+"/all",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[FileStorageService] deleteAllFileDescriptor -- success"),this.deleteAllFilesDescriptorsFromCache(),this.retrieveUserConsumption()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteAllFileDescriptor");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async getFileDescriptorsFromServer(){try{await Promise.all([this.retrieveFileDescriptorsListPerOwner(),this.retrieveReceivedFiles(this.contactService.userContact.dbId)]),this.orderDocuments()}catch(error){this.logger.error("getFilesDescriptorsFromServer - error")}}async retrieveFileDescriptorsListPerOwner(){try{this.fileDescriptors=[];const url=this.portalURL+"?format=full&limit=1000",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const fileDescriptorsResponse=await response.json();let fileDescriptorsData=fileDescriptorsResponse.data;if(!fileDescriptorsData)return this.fileDescriptors;const limit=fileDescriptorsResponse.limit,total=fileDescriptorsResponse.total;let getAllFileDescriptorPromise=null;if(total<=limit)getAllFileDescriptorPromise=Promise.resolve([]);else{let offset=limit;const requestCount=total/limit,requestArray=[];for(let index=1;index<requestCount;index++)requestArray.push(this.retrieveFileDescriptorsListPerOwnerwithOffset(offset,limit)),offset+=limit;getAllFileDescriptorPromise=Promise.all(requestArray)}(await getAllFileDescriptorPromise).forEach(responseData=>{fileDescriptorsData=fileDescriptorsData.concat(responseData)});for(const fileDescriptorData of fileDescriptorsData){const fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);this.fileDescriptors.push(fileDescriptor)}return this.logger.info("[FileStorageService] retrieveFileDescriptorsListPerOwner -- success"),this.fileDescriptors}catch(error){this.logger.error("[FileStorageService] retrieveFileDescriptorsListPerOwner -- error"),this.logger.error(error);const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveFileDescriptorsListPerOwner");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveFileDescriptorsListPerOwnerwithOffset(offset,limit){const url=`${this.portalURL}?format=full&limit=${limit}&offset=${offset}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data}async retrieveVoiceMessageFileDescriptorsListPerOwner(){try{const url=this.portalURL+"?format=full&path=/voice-messages",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const fileDescriptorsData=(await response.json()).data;return fileDescriptorsData?(this.voiceMessageFileDescriptors=fileDescriptorsData.reduce((fileDescriptors,fileDescriptorData)=>{const fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);return"not_uploaded"===fileDescriptor.state?(this.logger.info(`[FileStorageService] file ${fileDescriptor.fileName} not uploaded`),fileDescriptor&&fileDescriptor.ownerId===this.contactService.userContact.dbId?(this.logger.info(`[FileStorageService] file ${fileDescriptor.fileName} is our property, we can delete it`),this.deleteFileDescriptor(fileDescriptor.id)):this.logger.info(`[FileStorageService] file ${fileDescriptor.fileName} is NOT our property, we CANNOT delete it`)):fileDescriptors.push(fileDescriptor),fileDescriptors},[]),this.logger.info("[FileStorageService] retrieveVoiceMessageFileDescriptorsListPerOwner -- success"),this.voiceMessageFileDescriptors):[]}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveVoiceMessageFileDescriptorsListPerOwner");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveFilesReceivedFromPeer(userId,peerId){try{const url=`${this.portalURL}/viewers/${userId}?ownerId=${peerId}&format=full`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const receivedFileDescriptors=(await response.json()).data.map(fileDescriptorData=>this.createFileDescriptorFromData(fileDescriptorData));return this.logger.info("[FileStorageService] retrieveFilesReceivedFromPeer success"),receivedFileDescriptors}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveFilesReceivedFromPeer");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveSentFiles(peerId){try{this.logger.info("[FileStorageService] >retrieveSentFiles");const url=`${this.portalURL}?format=full&viewerId=${peerId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data.reduce((fileDescriptors,fileDescriptorData)=>{const fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);return fileDescriptor.state===fileDescriptor_1.FileState.NOT_UPLOADED?this.logger.warn(`[FileStorageService] file ${fileDescriptor.fileName} not uploaded`):fileDescriptors.push(fileDescriptor),fileDescriptors},[])}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveSentFiles");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveReceivedFilesForRoom(roomId){try{const url=`${this.portalURL}/viewers/${roomId}?format=full`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const fileDescriptorsData=(await response.json()).data;return fileDescriptorsData?fileDescriptorsData.reduce((fileDescriptors,fileDescriptorData)=>{if(fileDescriptorData.ownerId!==this.contactService.userContact.dbId){fileDescriptorData.viewers=[];const newFileDesc=this.createFileDescriptorFromData(fileDescriptorData);if(!newFileDesc.viewers.length){const viewerAdded=fileViewer_1.FileViewer.createFromData([{viewerId:roomId,type:"room"}])[0];newFileDesc.viewers.push(viewerAdded)}fileDescriptors.push(newFileDesc),this.receivedFileDescriptors.find(fd=>fd.id===fileDescriptorData.id)||this.receivedFileDescriptors.push(newFileDesc)}return fileDescriptors},[]):[]}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveReceivedFilesForRoom");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveReceivedFiles(viewerId){try{this.receivedFileDescriptors=[];const url=`${this.portalURL}/viewers/${viewerId}?format=full&limit=1000`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const fileDescriptorsResponse=await response.json();let fileDescriptorsData=fileDescriptorsResponse.data;if(!fileDescriptorsData)return this.receivedFileDescriptors;const limit=fileDescriptorsResponse.limit,total=fileDescriptorsResponse.total;let getReceivedFileDescriptorPromise=null;if(total<=limit)getReceivedFileDescriptorPromise=Promise.resolve([]);else{let offset=limit;const requestCount=total/limit,requestArray=[];for(let index=1;index<requestCount;index++)requestArray.push(this.retrieveReceivedFilesWithOffset(viewerId,offset,limit)),offset+=limit;getReceivedFileDescriptorPromise=Promise.all(requestArray)}return(await getReceivedFileDescriptorPromise).forEach(responseData=>{fileDescriptorsData=fileDescriptorsData.concat(responseData)}),this.receivedFileDescriptors=fileDescriptorsData.reduce((fileDescriptors,fileDescriptorData)=>{const fileDescriptor=this.createFileDescriptorFromData(fileDescriptorData);if(fileDescriptor&&fileDescriptor.ownerId!==this.contactService.userContact.dbId){const oldFileDesc=this.getFileDescriptorById(fileDescriptor.id);oldFileDesc&&(fileDescriptor.previewBlob=oldFileDesc.previewBlob,fileDescriptor.previewBlobSubject.next(URL.createObjectURL(fileDescriptor.previewBlob))),fileDescriptors.push(fileDescriptor)}return fileDescriptors},[]),this.logger.info("[FileStorageService] retrieveReceivedFiles -- success"),this.receivedFileDescriptors}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveReceivedFiles");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async retrieveReceivedFilesWithOffset(viewerId,offset,limit){const url=`${this.portalURL}/viewers/${viewerId}?format=full&limit=${limit}&offset=${offset}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data}async retrieveUserConsumption(){try{const url=config.restServerUrl+"/api/rainbow/filestorage/v1.0/users/consumption",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return this.consumptionData=(await response.json()).data,this.logger.info("[FileStorageService] retrieveUserConsumption success - "+JSON.stringify(this.consumptionData)),this.eventService.publish("ON_CONSUMPTION_DATA_UPDATED_EVENT"),this.consumptionData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveUserConsumption");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async deleteFileViewer(viewerId,fileId){try{const url=`${this.portalURL}/${fileId}/viewers/${viewerId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[FileStorageService] deleteFileViewer "+response.statusText);const fileDescriptor=this.getFileDescriptorById(fileId);if(fileDescriptor){const index=fileDescriptor.viewers.findIndex(viewer=>viewer.viewerId===viewerId);-1!==index&&fileDescriptor.viewers.splice(index,1),fileDescriptor.stateSubject.next(fileDescriptor.state)}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteFileViewer");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async addFileViewer(fileId,viewerId,type){let fileDescriptor=this.getFileDescriptorById(fileId);if(fileDescriptor||(fileDescriptor=await this.retrieveOneFileDescriptor(fileId)),fileDescriptor){if(fileDescriptor.isAlreadyFileViewer(viewerId))return fileDescriptor;try{const url=`${this.portalURL}/${fileId}/viewers`,headers=this.authService.getPostHeader(),body=JSON.stringify({viewerId:viewerId,type:type}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[FileStorageService] addFileViewer success");const viewerAdded=fileViewer_1.FileViewer.createFromData([{viewerId:viewerId,type:type}])[0];return fileDescriptor.viewers.push(viewerAdded),fileDescriptor.stateSubject.next(fileDescriptor.state),fileDescriptor}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addFileViewer");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}return null}async copyFileToUserCloudStorage(fileId){try{const url=`${this.portalURL}/${fileId}/copy`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;const responseData=(await response.json()).data;this.logger.info(`[FileStorageService] copyFileToUserCloudStorage | copyFile ${fileId} -- success`);const fileDesc=await this.retrieveAndStoreOneFileDescriptor(responseData.id,!0);return fileDesc.ownerId===this.contactService.userContact.dbId&&this.retrieveUserConsumption(),fileDesc}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"copyFileToUserCloudStorage");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}retrieveOneFileDescriptor(fileId){return this.retrieveFileDescriptorPromises[fileId]?(this.logger.info(`[FileStorageService] retrieveOneFileDescriptor for ${fileId} already lauched`),this.retrieveFileDescriptorPromises[fileId]):(this.retrieveFileDescriptorPromises[fileId]=(async()=>{try{this.logger.info("[FileStorageService] retrieveOneFileDescriptor "+fileId);const url=`${this.portalURL}/${fileId}?format=full`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=(await response.json()).data,fileDescriptor=this.createFileDescriptorFromData(responseData);return this.logger.info(`[FileStorageService] retrieveOneFileDescriptor ${fileId} -- success`),delete this.retrieveFileDescriptorPromises[fileId],fileDescriptor}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveOneFileDescriptor");throw this.logger.debug("[fileStorageService] "+errorInfo.message),delete this.retrieveFileDescriptorPromises[fileId],errorInfo.error}})(),this.retrieveFileDescriptorPromises[fileId])}retrieveAndStoreOneFileDescriptor(fileId,forceRetrieve=!1){const fileDescriptor=this.getFileDescriptorById(fileId);return fileDescriptor&&!forceRetrieve?(this.logger.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- return existing fileDescriptor "+fileId),Promise.resolve(fileDescriptor)):this.retrieveOneFileDescriptor(fileId).then(retrievedFileDescriptor=>{if(retrievedFileDescriptor.recordingFile)return retrievedFileDescriptor.ownerId!==this.contactService.userContact.dbId&&(this.sharedWithMeConferenceRecordingFiles.push(retrievedFileDescriptor),this.sharedWithMeConferenceRecordingFilesSubject.next(this.sharedWithMeConferenceRecordingFiles)),Promise.resolve(retrievedFileDescriptor);fileDescriptor&&fileDescriptor.isImage()&&(retrievedFileDescriptor.previewBlob=fileDescriptor.previewBlob,retrievedFileDescriptor.previewBlobSubject.next(retrievedFileDescriptor.previewBlob));const currentFileDescriptor=this.fileDescriptors.find(_fileDescriptor=>_fileDescriptor.id===retrievedFileDescriptor.id);currentFileDescriptor&&currentFileDescriptor.update(retrievedFileDescriptor);const currentReceivedFileDescriptor=this.receivedFileDescriptors.find(_fileDescriptor=>_fileDescriptor.id===retrievedFileDescriptor.id);return currentReceivedFileDescriptor&&currentReceivedFileDescriptor.update(retrievedFileDescriptor),currentFileDescriptor||currentReceivedFileDescriptor||(retrievedFileDescriptor.ownerId===this.contactService.userContact.dbId?(this.fileDescriptors.push(retrievedFileDescriptor),this.logger.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- fileDescriptor "+retrievedFileDescriptor.id+" -- now stored in my files")):(this.receivedFileDescriptors.push(retrievedFileDescriptor),this.logger.info("[FileStorageService] retrieveAndStoreOneFileDescriptor -- fileDescriptor "+retrievedFileDescriptor.id+" -- now stored in received files")),this.fileDescriptorsSubject.next({action:"new",fd:retrievedFileDescriptor})),this.orderDocuments(),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:retrievedFileDescriptor.id}),Promise.resolve(retrievedFileDescriptor)}).catch(error=>(error.status>=400&&error.status<500&&fileDescriptor&&(404===error.status&&this.deleteFileDescriptorFromCache(fileDescriptor.id),this.orderDocuments(),this.logger.debug("[FileStorageService] Sending ON_FILE_REMOVED_FROM_STORE_EVENT"),this.eventService.publish("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:fileDescriptor.id})),Promise.reject(error)))}deleteFileDescriptorFromCache(id){this.logger.info("[FileStorageService] deleteFileDescriptorFromCache "+id);for(let index=0;index<this.receivedFileDescriptors.length;index++){const fileDescriptor=this.receivedFileDescriptors[index];if(fileDescriptor.id===id){this.receivedFileDescriptors.splice(index,1),fileDescriptor.setState(fileDescriptor_1.FileState.DELETED);break}}for(let index=0;index<this.sharedWithMeConferenceRecordingFiles.length;index++){const fileDescriptor=this.sharedWithMeConferenceRecordingFiles[index];if(fileDescriptor.id===id){this.sharedWithMeConferenceRecordingFiles.splice(index,1),this.sharedWithMeConferenceRecordingFilesSubject.next(this.sharedWithMeConferenceRecordingFiles),fileDescriptor.setState(fileDescriptor_1.FileState.DELETED);break}}for(let index=0;index<this.fileDescriptors.length;index++){const fileDescriptor=this.fileDescriptors[index];if(fileDescriptor.id===id){this.fileDescriptors.splice(index,1),fileDescriptor.setState(fileDescriptor_1.FileState.DELETED);break}}this.orderDocuments()}deleteAllFilesDescriptorsFromCache(){this.logger.info("[FileStorageService] deleteAllFilesDesceiptorsFromCache"),this.fileDescriptors.forEach(fileDescriptor=>{fileDescriptor.setState(fileDescriptor_1.FileState.DELETED),this.receivedFileDescriptors.forEach((receivedFileDescriptor,index)=>{receivedFileDescriptor.id===fileDescriptor.id&&this.receivedFileDescriptors.splice(index,1)})}),this.fileDescriptors=[],this.uploadingFileDescriptors=[],this.orderDocuments(),this.fileDescriptorsSubject.next({action:"listUpdate"})}orderDocuments(set="all"){this.logger.debug("[FileStorageService] orderDocuments");let documentsSet=null;switch(set){case"mine":documentsSet=this.fileDescriptors;break;case"received":documentsSet=this.receivedFileDescriptors;break;default:this.mergedFileDescriptors=this.fileDescriptors.concat(this.receivedFileDescriptors),documentsSet=this.mergedFileDescriptors}switch(this.currentOrder){default:documentsSet.sort((fda,fdb)=>fdb.time-fda.time);break;case"name":documentsSet.sort((fda,fdb)=>fda.fileName.localeCompare(fdb.fileName));break;case"size":documentsSet.sort((fda,fdb)=>fda.size-fdb.size)}}extractFileIdFromUrl(url){const parts=url.split("/");return parts.pop()||parts.pop()}retrieveAndStoreOneVoiceMessageFileDescriptor(fileId){this.retrieveOneFileDescriptor(fileId).then(retrievedFileDescriptor=>{if(retrievedFileDescriptor.tags&&"/voice-messages"===retrievedFileDescriptor.tags.path){if(void 0!==this.voiceMessageFileDescriptors.find(file=>file.id===fileId)){const fileDescriptorIndex=this.voiceMessageFileDescriptors.findIndex(oneFileDescriptor=>oneFileDescriptor.id===retrievedFileDescriptor.id);fileDescriptorIndex>-1&&this.voiceMessageFileDescriptors.splice(fileDescriptorIndex,1,retrievedFileDescriptor),this.logger.info("[FileStorageService] getRetrieveAndStoreOneVoiceMessageFileDescriptor "+fileId+" -- success")}else this.voiceMessageFileDescriptors.push(retrievedFileDescriptor)}})}deleteVoiceMessageFileDescriptor(fileId){this.logger.info("[FileStorageService] deleteVoiceMessageFileDescriptore "+fileId);const fileDescriptorExist=this.voiceMessageFileDescriptors.find(file=>file.id===fileId);if(void 0!==fileDescriptorExist){const fileDescriptorIndex=this.voiceMessageFileDescriptors.findIndex(oneFileDescriptor=>oneFileDescriptor.id===fileDescriptorExist.id);fileDescriptorIndex>-1&&this.voiceMessageFileDescriptors.splice(fileDescriptorIndex,1)}}updateAFileDescriptorLocally(fileDesc){this.fileDescriptors=this.fileDescriptors.map(fd=>fd.id===fileDesc.id?fileDesc:fd),this.receivedFileDescriptors=this.receivedFileDescriptors.map(fd=>fd.id===fileDesc.id?fileDesc:fd),this.orderDocuments()}getPublicFileDownloads(){return this.publicFileDownload}clearPublicFileDownloads(){this.publicFileDownload=[]}findPublicFileDownload(fileUrl){return this.publicFileDownload.find(element=>element.url===fileUrl)}updatePublicFileDownloadArray(filesPublicDownload,fileSystem){this.logger.info("[FileStorageService] >updatePublicFileDownloadArray"),filesPublicDownload.forEach(element=>{const fileDownload=this.findPublicFileDownload(element.url);if(fileDownload)this.logger.info("[FileStorageService] file ("+element.url+") Found - to update"),fileDownload.receivedBytes=element.receivedBytes,fileDownload.savePath=element.savePath,fileDownload.isDownloadFinished()&&fileDownload.openFolderOnceDownloadFinished&&(this.logger.debug("[FileStorageService] showItemInFolder auto on download completion"),fileSystem.showItemInFolder(fileDownload.savePath)),this.logger.debug("[FileStorageService] fileName="+fileDownload.fileName),this.logger.debug("[FileStorageService] file receivedBytes="+fileDownload.receivedBytes),this.logger.debug("[FileStorageService] file totalBytes="+fileDownload.totalBytes),this.logger.debug("[FileStorageService] file savePath="+fileDownload.savePath),fileDownload.progressSubject.next(void 0);else{this.logger.info("[FileStorageService] file Not Found");const newFile=filePublicDownload_1.FilePublicDownload.create(element.url,element.fileName,element.totalBytes,element.receivedBytes,element.savePath);this.publicFileDownload.unshift(newFile)}this.publicFileDownloadSubject.next(void 0)})}removePublicFileDownload(file){if(!file||!file.url)return;const index=this.publicFileDownload.indexOf(file);index>=0&&(this.publicFileDownload.splice(index,1),this.publicFileDownloadSubject.next(void 0))}async getRecordingFileAvatar(recordingFileId){try{const url=config.restServerUrl+"/api/rainbow/filestorage/v1.0/conferences-recordings/avatar/"+recordingFileId+"?thumbnail=true",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const blob=await response.blob();return URL.createObjectURL(blob)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRecordingFileAvatar");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}getRecordingFiles(){return this.conferenceRecordingFilesSubject.next(this.conferenceRecordingFiles),this.conferenceRecordingFiles}async getRecordingFilesFromServer(){try{const url=config.restServerUrl+"/api/rainbow/filestorage/v1.0/conferences-recordings?format=full&limit=1000",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const recordingFileDescriptorsData=(await response.json()).data;if(!recordingFileDescriptorsData)throw recordingFileDescriptorsData;return this.conferenceRecordingFiles=recordingFileDescriptorsData,this.logger.info("[FileStorageService] getRecordingFilesFromServer -- success"),this.conferenceRecordingFilesSubject.next(this.conferenceRecordingFiles),await this.retrieveUserConsumption(),this.conferenceRecordingFiles}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRecordingFilesFromServer");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}getSharedWithMeConferenceRecordingFiles(){return this.sharedWithMeConferenceRecordingFilesSubject.next(this.sharedWithMeConferenceRecordingFiles),this.sharedWithMeConferenceRecordingFiles}async getSharedWithMeConferenceRecordingFilesFromServer(){try{const url=`${this.portalURL}/viewers/${this.contactService.userContact.dbId}?format=full&purpose=conference_record&&typeMIME=video`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const recordingFileDescriptorsData=(await response.json()).data;if(!recordingFileDescriptorsData)throw recordingFileDescriptorsData;const receivedFileDescriptors=recordingFileDescriptorsData.map(fileDescriptorData=>this.createFileDescriptorFromData(fileDescriptorData));return this.sharedWithMeConferenceRecordingFiles=receivedFileDescriptors,this.sharedWithMeConferenceRecordingFilesSubject.next(this.sharedWithMeConferenceRecordingFiles),this.logger.info("[FileStorageService] getSharedWithMeConferenceRecordingFiles -- success"),await this.retrieveUserConsumption(),this.sharedWithMeConferenceRecordingFiles}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getSharedWithMeConferenceRecordingFiles");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async deleteConferenceRecordingFile(conferenceRecordingFileId){try{this.logger.info("[FileStorageService] deleteConferenceRecordingFile");const url=`${config.restServerUrl}/api/rainbow/filestorage/v1.0/conferences-recordings/${conferenceRecordingFileId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;const deletedConferenceFile=(await response.json()).data;if(!deletedConferenceFile)throw response;this.logger.info("[FileStorageService] deleteConferenceRecordingFile -- success");const filteredConferenceRecordingFiles=this.conferenceRecordingFiles.filter(recordingFile=>recordingFile.id!==deletedConferenceFile.id);return this.conferenceRecordingFiles=filteredConferenceRecordingFiles,this.conferenceRecordingFilesSubject.next(this.conferenceRecordingFiles),await this.retrieveUserConsumption(),this.conferenceRecordingFiles}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteConferenceRecordingFile");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}async getConferenceRecordingAssociatedFiles(conferenceRecordingFile){try{this.logger.info("[FileStorageService] getConferenceRecordingAssociatedFiles");const result=[];if(!conferenceRecordingFile.associatedRecordingFiles){this.logger.info("[FileStorageService] getConferenceRecordingAssociatedFiles - fetching from the server"),conferenceRecordingFile.associatedRecordingFiles=[];for(let i=0;i<conferenceRecordingFile.records.length;i++){let fileDescriptor=this.getFileDescriptorById(conferenceRecordingFile.records[i].fileId);fileDescriptor||(fileDescriptor=await this.retrieveOneFileDescriptor(conferenceRecordingFile.records[i].fileId)),this.logger.info("[FileStorageService] getConferenceRecordingAssociatedFiles -- success: "+conferenceRecordingFile.records[i].fileName),result.push(fileDescriptor)}return conferenceRecordingFile.associatedRecordingFiles=result,result}return this.logger.info("[FileStorageService] getConferenceRecordingAssociatedFiles - return results from cache"),conferenceRecordingFile.associatedRecordingFiles}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getConferenceRecordingAssociatedFiles");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}getUploadingFilesSize(){let filesSize=0;return this.uploadingFileDescriptors.forEach(fileDescriptor=>{filesSize+=fileDescriptor.size}),filesSize}removeUploadingFileFromId(fileId){const file=this.uploadingFileDescriptors.find(fileDesc=>fileDesc.id===fileId);file&&this.removeUploadingFileDescriptor(file)}removeUploadingFileDescriptor(fileDesc){if(fileDesc.state===fileDescriptor_1.FileState.UPLOADED){const consumption=this.getConsumptionData(),usedSpace=0!==consumption.currentValue?consumption.currentValue:0;consumption.currentValue=usedSpace+fileDesc.size}const index=this.uploadingFileDescriptors.indexOf(fileDesc);index>-1&&(this.uploadingFileDescriptors.splice(index,1),this.uploadingFileDescriptorsSubject.next({size:this.getUploadingFilesSize()}))}isEnoughAvailableSpaceForFiles(filesToSend){if(!filesToSend.length)return!0;let newFilesSize=0;filesToSend.forEach(attachmentFile=>{attachmentFile.fd||(attachmentFile.file?newFilesSize+=attachmentFile.file.size:attachmentFile.size&&(newFilesSize+=attachmentFile.size))});const consumption=this.getConsumptionData(),totalAvailableSpace=consumption.maxValue,usedSpace=0!==consumption.currentValue?consumption.currentValue:0,remainingSpace=totalAvailableSpace-usedSpace,filesUploadingSize=this.getUploadingFilesSize();return this.logger.debug(`[FileStorageService] isEnoughAvailableSpaceForFiles - totalAvailableSpace: ${totalAvailableSpace} - usedSpace: ${usedSpace} - filesUploadingSize: ${filesUploadingSize}`),newFilesSize<remainingSpace-filesUploadingSize}isEnoughAvailableSpaceForFileDescriptor(fileId,fileViewers){if(!fileId)return!0;const fileDescriptor=this.getFileDescriptorById(fileId),consumption=this.getConsumptionData(),remainingSpace=consumption.maxValue-(0!==consumption.currentValue?consumption.currentValue:0),filesUploadingSize=this.getUploadingFilesSize();return fileDescriptor.size*fileViewers.length<remainingSpace-filesUploadingSize}stopAllFileTransfer(){this.fileDescriptors.forEach(fileDesc=>{fileDesc&&(fileDesc.abortTransferController&&fileDesc.abortTransferController.abort(),fileDesc.abortXMLHttpRequestArray&&fileDesc.abortXMLHttpRequestArray.length&&fileDesc.abortXMLHttpRequestArray.map(func=>{func()}))})}}exports.FileStorageService=FileStorageService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),logger_service_1=__webpack_require__(4),call_model_1=__webpack_require__(29),xmpp_service_1=__webpack_require__(9),contact_service_1=__webpack_require__(6),virtualBackground_service_1=__webpack_require__(68),event_service_1=__webpack_require__(11),webrtcP2PEventHandler_1=__webpack_require__(428),webrtcConfigAndUtils_1=__webpack_require__(44),profile_service_1=__webpack_require__(13),deviceManagement_service_1=__webpack_require__(56);class WebrtcP2PService{constructor(){this.firefoxPreferedSharing="window",this.started=!1,this.connected=!1,this.RTC=null,this.webrtcP2PEventHandler=null,this.calls={},this.autoreleaseTimeout=null,this.makingCall=!1,this.reconnectCall=!1,this.alreadyAttaching=!1,this.virtualBackgroundService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.rxSubject=new rxjs_1.Subject,this.eventService=event_service_1.EventService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.isMixPstnWebRtcAllowed=!1,this.audioProfileChanging=!1,this.xmppConnectionSubscription=null,this.replaceBackgroundSubscription=null,this.deviceManagementSubscription=null,this.listeners=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webrtcP2PService||(win.rainbow.webrtcP2PService=new WebrtcP2PService),win.rainbow.webrtcP2PService}allowDesktopSharing(){return!1}allowAdvancedDesktopSharing(){return!1}getDesktopSharingSource(){return null}askToAddSharing(__conversationId,__shouldAskForAudio=!1){return!1}askToStartSharing(__contactId,__media,__shouldAskForAudio=!1){return!1}isNativeApplication(){return!1}async start(){this.RTC=this.webrtcConfigAndUtils.getBrowserMethodHandler(),this.started=!0,this.connected=!0,this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChangeEvent(event)}),this.listeners.push(this.eventService.subscribe("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD",()=>{this.putActiveWebrtcCallOnHold()})),this.attachHandlers(),this.replaceBackgroundSubscription&&(this.replaceBackgroundSubscription.unsubscribe(),this.replaceBackgroundSubscription=null),this.replaceBackgroundSubscription=this.virtualBackgroundService.rxSubject.subscribe(event=>{"UPDATE_STREAM"===event.name&&this.onReplaceBackgroundChangeEvent(event)}),this.deviceManagementSubscription=this.deviceManagementService.subscribe(event=>{try{event.name===this.deviceManagementService.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED&&(this.logger.info(`[webrtcP2PService] deviceManagement event -- ${event.name} -- ${event.data.kind}`),("audioinput"===event.data.kind||"videoinput"===event.data.kind)&&setTimeout(()=>{this.onAudioVideoInputDeviceChange()},1e3))}catch{}}),this.listeners.push(this.eventService.subscribe("ON_AUDIO_STREAM_TRACK_ENDED",()=>{this.getCurrentActiveCall()&&setTimeout(async()=>{this.updateLocalAudioStreamForCall(this.getCurrentActiveCall())},1e4)})),this.isMixPstnWebRtcAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MIX_WEBRTC_PSTN_CALLS)||config.mixwebrtcpstn,this.logger.info("[webrtcP2PService] SERVICE | === STARTED ===")}async stop(){try{if(this.started){let listener;for(this.started=!1,this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.replaceBackgroundSubscription&&(this.replaceBackgroundSubscription.unsubscribe(),this.replaceBackgroundSubscription=null),this.deviceManagementSubscription&&(this.deviceManagementSubscription.unsubscribe(),this.deviceManagementSubscription=null);listener=this.listeners.pop();)listener();this.removeHandlers(),Object.keys(this.calls).forEach(key=>{this.calls[key]&&(this.calls[key].statsInterval&&(window.clearInterval(this.calls[key].statsInterval),this.calls[key].statsInterval=null),this.terminateAndRemoveCall(this.calls[key]))}),this.xmppService.connection.jingle.terminate(),this.connected=!1,this.reconnectCall=!1,this.makingCall=!1,this.webrtcConfigAndUtils.stop(),this.logger.info("[webrtcP2PService] === STOPPED ===")}}catch(error){this.logger.info("[webrtcP2PService] SERVICE | === STOPPING ERROR : "+error)}}reconnect(){this.attachHandlers()}attachHandlers(){this.removeHandlers(),this.logger.info("[webrtcP2PService] attachHandlers"),this.webrtcP2PEventHandler=new webrtcP2PEventHandler_1.WebrtcP2PEventHandler(this),this.reconnectSessionsIfNeeded()}removeHandlers(){this.logger.info("[webrtcP2PService] removeHandlers"),this.webrtcP2PEventHandler&&(this.webrtcP2PEventHandler=null)}reconnectSessionsIfNeeded(){this.logger.info("[webrtcP2PService] | reconnectSessionsIfNeeded"),this.connected=!0,Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.statsInterval&&(window.clearInterval(call.statsInterval),call.statsInterval=null);const session=this.xmppService.connection.jingle.sessions[call.id];this.reconnectCall&&session&&session.peerconnection?(this.logger.info("[webrtcP2PService] | onConnectionStateChangeEvent : connected - start reconnection on session "+call.id),session.me=this.contactService.userContact.fullJid,session.isInitiator&&(session.initiator=session.me),session.connection=this.xmppService.connection,this.contactService.setBusyState("dnd",this.calculatePresenceMessage(call)),setTimeout(()=>{if(session.peerconnection){const state=session.peerconnection.connectionState?session.peerconnection.connectionState:session.peerconnection.iceConnectionState;if("stable"===session.peerconnection.signalingState&&"failed"!==state&&"disconnected"!==state)return void this.logger.info("[webrtcP2PService] sendTransportReplaceForSession not needed for "+session.sid);session.reconnectSession()}},2e3)):session||this.rejectCall(call)}}),this.reconnectCall=!1}subscribe(handler){return this.rxSubject.subscribe(handler)}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}removeCallObject(call,reason="",text=""){this.terminateAndRemoveCall(call,reason,text)}terminateAndRemoveCall(call,reason="",text=""){try{if(call){this.logger.info("[webrtcP2PService] terminateAndRemoveCall with id: "+call.id),call.status=call_model_1.Call.Status.UNKNOWN,call.stopDuration();const session=this.xmppService.connection.jingle.sessions?this.xmppService.connection.jingle.sessions[call.id]:null;session&&this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.webrtcConfigAndUtils.disableAllStreamsForSession(call),call.originalStream&&(call.originalStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),call.originalStream.stop&&call.originalStream.stop(),call.originalStream=null,this.virtualBackgroundService.stopProcessStream()),call.statsInterval&&(window.clearInterval(call.statsInterval),call.statsInterval=null),delete this.calls[call.id],this.eventService.publish("ON_CALL_UPDATED_EVENT",call),session&&this.xmppService.connection.jingle.terminate(call.id,reason,text),this.sendEvent("stopHighlighting")}}catch(error){this.logger.info("[webrtcP2PService] terminateAndRemoveCall error "+error)}}onReplaceBackgroundChangeEvent(event){try{const call=this.getCurrentActiveCall();call&&(this.logger.info("[webrtcP2PService] onReplaceBackgroundChangeEvent"),this.changeBackgroundForCall(call,event.data,"none"===event.data.type))}catch(error){}}putActiveWebrtcCallOnHold(){const call=this.getActiveWebrtcAudioCall();call&&this.putCallOnHold(call)}onConnectionStateChangeEvent(event){try{"ON_XMPP_DISCONNECTED"===event.name?(this.logger.info("[webrtcP2PService] | onConnectionStateChangeEvent : disconnected"),this.connected=!1):"ON_XMPP_CONNECTED"===event.name&&(this.connected=!0)}catch(error){this.logger.info("[webrtcP2PService] | onConnectionStateChangeEvent : disconnected error : "+error)}}isUserContactInCall(){let result=!1;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.status!==call_model_1.Call.Status.RINGING_INCOMMING&&(result=!0)}}),result}getCurrentActiveCall(){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&(result=call)}}),result}getCurrentActiveSessions(){const activeSessions=[];return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];if(call.status!==call_model_1.Call.Status.UNKNOWN){const session=this.xmppService.connection.jingle.sessions[call.id];session&&activeSessions.push(session)}}}),activeSessions}getCurrentCallsNotMediaPillar(){const activeCalls=[];return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status===call_model_1.Call.Status.UNKNOWN||call.isMediaPillarCall()||activeCalls.push(call)}}),activeCalls}existWebrtcActiveSessionNotMP(){let result=!1;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status===call_model_1.Call.Status.UNKNOWN||!this.xmppService.connection.jingle.sessions[call.id]||call.isMediaPillarCall()||call.isSecondSharingCall||(result=!0)}}),result}existMediaPillarAudioCall(){let result=!1;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.localMedia&call_model_1.Call.Media.AUDIO&&call.isMediaPillarCall()&&(result=!0)}}),result}getMediaPillarAudioCalls(){const mpAudioCalls=[];return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.localMedia&call_model_1.Call.Media.AUDIO&&call.isMediaPillarCall()&&mpAudioCalls.push(call)}}),mpAudioCalls}isInMediaPillarAudioCallWithContactJid(jid){let result=!1;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.localMedia&call_model_1.Call.Media.AUDIO&&call.isMediaPillarCall()&&call.fullJid===jid&&(result=!0)}}),result}hasMediaPillarCallWithContactJid(jid){let result=!1;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.localMedia&call_model_1.Call.Media.AUDIO&&call.isMediaPillarCall()&&call.contact&&call.contact.jid===jid&&(result=!0)}}),result}getCallOnHold(){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.HOLD||call.isMediaPillarCall()||(result=call)}}),result}getWebrtcAudioCall(){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.localMedia&call_model_1.Call.Media.AUDIO&&!call.isMediaPillarCall()&&(result=call)}}),result}getActiveWebrtcAudioCall(){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status===call_model_1.Call.Status.ACTIVE&&call.localMedia&call_model_1.Call.Media.AUDIO&&!call.isMediaPillarCall()&&(result=call)}}),result}getMPWebrtcAudioCallByState(soughtCallState){let result=null;return soughtCallState?(Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status===soughtCallState&&null===call.mediaPillarCall&&call.isWebRtcMediaPillar()&&(result=call)}}),result):result}getCurrentSharingCall(){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status===call_model_1.Call.Status.UNKNOWN||call.localMedia!==call_model_1.Call.Media.SHARING&&call.remoteMedia!==call_model_1.Call.Media.SHARING||(result=call)}}),result}getOrCreateCallByCallId(callId){let call=this.calls[callId];if(!call){const sess=this.xmppService.connection.jingle.sessions[callId],peerJid=this.xmppService.getBareJidFromJid(sess.peerjid),contact=this.contactService.getContactByJid(peerJid);call=call_model_1.Call.create(call_model_1.Call.Status.UNKNOWN,callId,call_model_1.Call.Type.WEBRTC,contact),this.calls[call.id]=call}return call}getCallByContact(contact){let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.contact&&contact.jid===call.contact.jid&&(result=call)}}),result}endAllCallsForContact(contact){contact&&(this.logger.info("[webrtcP2PService] endAllCallsForContact "+contact.jid),Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&call.contact&&call.contact.jid===contact.jid&&!call.isWebRtcMediaPillar()&&call.localMedia===call_model_1.Call.Media.SHARING&&(this.logger.info("[webrtcP2PService] endAllCallsForContact "+contact.jid+" release call (sharing): "+call),this.releaseCall(call))}}))}onVideoInputChangeEvent(){this.logger.info("[webrtcP2PService] MEDIA   | onVideoInputChangeEvent"),Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];this.xmppService.connection.jingle.sessions[call.id]&&call.localMedia&&call.localMedia&call_model_1.Call.Media.AUDIO&&call.localMedia&call_model_1.Call.Media.VIDEO&&(this.logger.info("[webrtcP2PService] MEDIA   | audio + video call, renegotiate the profile"),this.addVideoToCall(call,!0))}})}onAudioVideoInputDeviceChange(){this.audioProfileChanging&&this.logger.info("[webrtcP2PService] onAudioVideoInputDeviceChange -- ignore"),this.logger.info("[webrtcP2PService] onAudioVideoInputDeviceChange"),this.audioProfileChanging=!0,Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];this.updateLocalAudioStreamForCall(call)}}),this.audioProfileChanging=!1}getCallById(callId){this.logger.info("[webrtcP2PService] getCallById "+callId);let result=null;return Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.id===callId&&(result=call)}}),result}getCallByJid(contactJid,fullJid=""){let result=null;return contactJid||fullJid?(this.logger.info("[webrtcP2PService] getCallByJid "+contactJid),Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call.contact&&call.contact.jid===contactJid&&(result=call)}}),result||(this.logger.info("[webrtcP2PService] getCallByJid fallback "+fullJid),Object.keys(this.calls).forEach(key=>{if(this.calls[key]){const call=this.calls[key];call&&call.fullJid===fullJid&&(result=call)}})),result):result}async resetAudioOutputElement(){config.deviceManagement&&this.logger.warn("[webrtcP2PService] resetAudioOutputElement -- should use the new device management!")}makeVideoCall(contact){this.makeCall(contact,"videoOnly")}makeDesktopSharingCall(contact,media="sharing"){media||(media="sharing"),"sharing"===media&&this.isMixPstnWebRtcAllowed&&this.existMediaPillarAudioCall()&&this.eventService.publish("PUT_ACTIVE_TELEPHONY_CALL_ON_HOLD"),this.makingCall=!0,this.logger.info("[webrtcP2PService] MEDIA   | makeDesktopSharingCall - trying to start a desktop sharing call with media "+media),this.webrtcP2PEventHandler.sendProposition(contact,media),this.sendEvent("startHighlighting")}async makeCall(contact,mediaType,message=""){if(this.logger.info("[webrtcP2PService] MEDIA   | makeCall to "+JSON.stringify({displayName:contact.nameForLogs,resources:contact.resources})),this.makingCall)return void this.logger.info("[webrtcP2PService] | makeCall already making a call !");this.makingCall=!0,this.isMixPstnWebRtcAllowed&&this.existMediaPillarAudioCall()&&this.eventService.publish("PUT_ACTIVE_TELEPHONY_CALL_ON_HOLD");const activeCall=this.getActiveWebrtcAudioCall();activeCall?(this.putCallOnHold(activeCall),this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"make-call-without-prior-hold"})):this.getCallOnHold()&&this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"make-call-after-hold"}),await this.webrtcP2PEventHandler.sendProposition(contact,mediaType,message)}answerCall(call,type=""){call.isMediaPillarCall()||call.remoteMedia===call_model_1.Call.Media.SHARING||this.eventService.publish("PUT_ACTIVE_TELEPHONY_CALL_ON_HOLD");const activeCall=this.getActiveWebrtcAudioCall();activeCall?(this.putCallOnHold(activeCall),this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"take-call-without-prior-hold"})):this.getCallOnHold()&&this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"take-call-after-hold"}),this.webrtcP2PEventHandler.acceptProposition(call,type)}rejectCall(call,reason=""){if(!call)return void this.logger.info("[webrtcP2PService] MEDIA   | rejectCall - trying to rejectCall a non existing call !");this.makingCall=!1,this.autoreleaseTimeout&&clearTimeout(this.autoreleaseTimeout);this.xmppService.connection.jingle.sessions[call.id]?this.releaseCall(call):call.isInitiator?this.webrtcP2PEventHandler.retractProposition(call):this.webrtcP2PEventHandler.rejectProposition(call,reason)}releaseCall(call,reason="",text=""){if(call){this.makingCall=!1,this.logger.info("[webrtcP2PService] MEDIA   | releaseCall : "+call);try{const session=this.xmppService.connection.jingle.sessions[call.id];this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.autoreleaseTimeout&&clearTimeout(this.autoreleaseTimeout),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.webrtcConfigAndUtils.callsStats[call.id]&&delete this.webrtcConfigAndUtils.callsStats[call.id],this.webrtcConfigAndUtils.callsStatsSimplified[call.id]&&delete this.webrtcConfigAndUtils.callsStatsSimplified[call.id],this.removeCallObject(call,reason,text),this.isUserContactInCall()||this.clearSrcObjectsFromElements()}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | releaseCall ERROR"),this.logger.error(error),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.webrtcConfigAndUtils.callsStats[call.id]&&delete this.webrtcConfigAndUtils.callsStats[call.id],this.webrtcConfigAndUtils.callsStatsSimplified[call.id]&&delete this.webrtcConfigAndUtils.callsStatsSimplified[call.id],this.resetToSafeState(call),this.removeCallObject(call)}}else this.logger.info("[webrtcP2PService] MEDIA   | releaseCall - trying to release a non existing call !")}async makeJingleCall(call,mediaPillarJid="",phoneNumber="",otherSid=""){try{this.logger.info("[webrtcP2PService] makeJingleCall"),await this.webrtcConfigAndUtils.setWebrtcConfiguration();let localType="";call.localMedia&call_model_1.Call.Media.AUDIO&&(localType="audio"),call.localMedia&call_model_1.Call.Media.VIDEO&&(localType=localType?"audio+video":"video"),mediaPillarJid&&""!==mediaPillarJid&&this.logger.info("[webrtcP2PService] MEDIA   | makeJingleCall in mediaPillar case for number : "+phoneNumber),mediaPillarJid&&""!==mediaPillarJid&&phoneNumber&&""!==phoneNumber?(localType="sip",this.xmppService.connection.jingle.initiate(mediaPillarJid,this.xmppService.connection.jid,localType,call.localStreams,call.id,null,phoneNumber)):this.xmppService.connection.jingle.initiate(call.fullJid,this.xmppService.connection.jid,localType,call.localStreams,call.id,null,null,!1,!1,otherSid),call.status=call_model_1.Call.Status.CONNECTING,this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | makeCall failure : "+JSON.stringify({error:error.message})),this.makingCall=!1,call&&this.removeCallObject(call),this.resetToSafeState(call)}}async makeJingleSharingCall(call){try{this.logger.info("[webrtcP2PService] MEDIA   | makeJingleSharingCall - make desktop sharing call");let type="sharing";call.localMedia===call_model_1.Call.Media.SHARING&&(type="sharing-only"),await this.webrtcConfigAndUtils.setWebrtcConfiguration(),this.logger.info("[webrtcP2PService] SHARING | getUserMedia success");const mediaPillarSessionsLocalStreams=[],mediaPillarAudioCalls=this.getMediaPillarAudioCalls();mediaPillarAudioCalls.forEach(mediaPillarAudioCall=>{const mediaPillarSession=this.xmppService.connection.jingle.sessions[mediaPillarAudioCall.id],mediaPillarStreams=mediaPillarSession?mediaPillarSession.localStreams:null;mediaPillarStreams&&mediaPillarSessionsLocalStreams.push.apply(mediaPillarSessionsLocalStreams,mediaPillarStreams)});const callStreamsForSharingCall=mediaPillarAudioCalls&&0!==mediaPillarAudioCalls.length?call.localStreams.filter((function(localStream){return!(mediaPillarSessionsLocalStreams&&mediaPillarSessionsLocalStreams.includes(localStream))})):call.localStreams;this.xmppService.connection.jingle.initiate(call.fullJid,this.xmppService.connection.jid,type,callStreamsForSharingCall,call.id),call.status=call_model_1.Call.Status.CONNECTING,this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}catch(error){this.makingCall=!1,call&&this.removeCallObject(call),this.resetToSafeState(call),this.logger.info("[webrtcP2PService] MEDIA   | makeJingleSharingCall failure : "+JSON.stringify({error:error.message}))}}startDesktopSharing(contact,media){if(this.makingCall)return void this.logger.info("[webrtcP2PService] | startDesktopSharing already making a call !");this.makingCall=!0;!this.askToStartSharing(contact.jid,media)&&this.makeDesktopSharingCall(contact,media)}startSharingCancelled(){this.makingCall=!1}async answerJingleCall(call){try{this.logger.info("[webrtcP2PService] MEDIA   | answerJingleCall "+call.id);const mediaToGet=[];let localType="audio";call.localMedia&call_model_1.Call.Media.AUDIO&&mediaToGet.push("audio"),call.localMedia&call_model_1.Call.Media.VIDEO&&(mediaToGet.push("video"),localType="audio+video"),call.localMedia===call_model_1.Call.Media.VIDEO&&(localType="video");let mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=this.webrtcConfigAndUtils.getMobileMediaConstraints("video")),await this.webrtcConfigAndUtils.setWebrtcConfiguration();const stream=await this.getBrowserMedia(mediaToGet,mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate),session=this.xmppService.connection.jingle.sessions[call.id];if(!session)return stream&&this.disableStreams([stream]),this.releaseCall(call),void this.resetToSafeState(call);if(stream){let modifiedStream=stream;-1!==mediaToGet.indexOf("video")&&(call.originalStream=stream,modifiedStream=await this.virtualBackgroundService.startProcessStream(stream)),this.pushInLocalStreams(modifiedStream,call.id),session.addStream(modifiedStream),session.localStreams.push(modifiedStream)}else localType=null;session.localType=localType,session.sendAnswer(),session.accept(),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | answerJingleCall failure for : "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")&&(this.releaseCall(call),this.openErrorPopup()),this.resetToSafeState(call)}}onCallTransferred(call){const session=this.xmppService.connection.jingle.sessions[call.id];this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.autoreleaseTimeout&&clearTimeout(this.autoreleaseTimeout),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.webrtcConfigAndUtils.callsStats[call.id]&&delete this.webrtcConfigAndUtils.callsStats[call.id],this.webrtcConfigAndUtils.callsStatsSimplified[call.id]&&delete this.webrtcConfigAndUtils.callsStatsSimplified[call.id],this.removeCallObject(call)}askToAddDesktopSharing(conversation){this.logger.info("[webrtcP2PService] MEDIA   | askToAddDesktopSharing - Desktop sharing escalation");!this.askToAddSharing(conversation.id)&&this.addSharingToCall(conversation.videoCall)}async addAudioToCall(call,mediaModify=!1){try{this.logger.info("[webrtcP2PService] MEDIA   | addAudioToCall");const session=this.xmppService.connection.jingle.sessions[call.id];session.isRenegotiating=!0;const mediaToGet=["audio"],stream=await this.getBrowserMedia(mediaToGet);this.stopActiveAudioVideoStreams(session),this.pushInLocalStreams(stream,call.id);for(let i=0;i<call.localStreams.length;i++)session.removeStream(call.localStreams[i]);const type=mediaModify?"contentModify":"contentAdd";this.updateCurrentCall(call,session,"audio",type),"contentModify"===type&&session.muteAudio(call.isMuted)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | addAudioToCall failure : "+error),this.releaseCall(call),this.resetToSafeState(call)}}async addSharingToCall(call){this.logger.info("[webrtcP2PService] MEDIA   | addSharingToCall - Desktop sharing escalation");const session=this.xmppService.connection.jingle.sessions[call.id];try{session.isRenegotiating=!0;const mediaToGet=["sharing"];let mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=this.webrtcConfigAndUtils.getMobileMediaConstraints("sharing"));const stream=await this.getBrowserMedia(mediaToGet,null,null,mediaConstraints.fixedFrameRate);for(let i=0;i<call.localStreams.length;i++)session.removeStream(call.localStreams[i]),session.localStreams[i]=null;session.localStreams=[],this.pushInLocalStreams(stream,call.id);for(let i=0;i<call.localStreams.length;i++)session.removeStream(call.localStreams[i]);this.updateCurrentCall(call,session,"sharing","contentAdd"),this.sendEvent("startHighlighting")}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | addSharingToCall failure : "+error),session.isRenegotiating=!1,-1!==error.toString().indexOf("getUserMedia")&&this.openErrorPopup()}}async addVideoToCall(call,mediaModify=!1){try{this.logger.info("[webrtcP2PService] MEDIA   | addVideoToCall");const session=this.xmppService.connection.jingle.sessions[call.id],mediaToGet=["audio","video"];session.isRenegotiating=!0;let mediaConstraints={};call.isInConversationWithMobile()&&(mediaConstraints=this.webrtcConfigAndUtils.getMobileMediaConstraints("video"));const stream=await this.getBrowserMedia(mediaToGet,mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate);this.stopActiveAudioVideoStreams(session),call.originalStream&&(call.originalStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),call.originalStream.stop&&call.originalStream.stop(),call.originalStream=null);let modifiedStream=stream;-1!==mediaToGet.indexOf("video")&&(call.originalStream=stream,modifiedStream=await this.virtualBackgroundService.startProcessStream(stream)),this.pushInLocalStreams(modifiedStream,call.id);for(let i=0;i<call.localStreams.length;i++)session.removeStream(call.localStreams[i]);const type=mediaModify?"contentModify":"contentAdd";this.updateCurrentCall(call,session,"video",type),session.muteAudio(call.isMuted)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | addVideoToCall failure for : "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")?(this.logger.warn("[webrtcP2PService] addVideoToCall impossible, no webcam plugged"),this.openErrorPopup()):(this.releaseCall(call),this.resetToSafeState(call))}}changeBackgroundForCall(call,data,shouldRemoveOld){const session=this.xmppService.connection.jingle.sessions[call.id];session.isRenegotiating=!0;for(let i=0;i<call.localStreams.length;i++)session.removeStream(call.localStreams[i]);let index=-1;call.localStreams.forEach((stream,ind)=>{stream.id===call.originalStream.id&&(index=ind)}),-1!==index&&call.localStreams.splice(index,1),index=-1,session.localStreams.forEach((stream,ind)=>{stream.id===call.originalStream.id&&(index=ind)}),-1!==index&&session.localStreams.splice(index,1),shouldRemoveOld&&this.stopActiveAudioVideoStreams(session),this.pushInLocalStreams(data.stream,call.id),this.updateCurrentCall(call,session,"video","contentModify"),session.muteAudio(call.isMuted)}removeSharingFromCall(call){this.logger.info("[webrtcP2PService] MEDIA   | removeSharingFromCall");const session=this.xmppService.connection.jingle.sessions[call.id];this.stopActiveSharingStream(session),session.isRenegotiating=!0,this.updateCurrentCall(call,session,"sharing","contentRemove"),this.sendEvent("stopHighlighting")}async removeVideoAndSharingFromCall(call){try{this.logger.info("[webrtcP2PService]  MEDIA   | removeVideoAndSharingFromCall");const session=this.xmppService.connection.jingle.sessions[call.id];this.stopAllActiveStreams(session),this.sendEvent("stopHighlighting"),call.originalStream&&(call.originalStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),call.originalStream.stop&&call.originalStream.stop(),call.originalStream=null,this.virtualBackgroundService.stopProcessStream()),call.localStreams.forEach((function(stream){session.removeStream(stream)}));const mediaToGet=["audio"];session.isRenegotiating=!0;const stream=await this.getBrowserMedia(mediaToGet);this.pushInLocalStreams(stream,call.id),call.localMedia=call_model_1.Call.Media.AUDIO,this.updateCurrentCall(call,session,"video","contentRemove"),session.muteAudio(!0)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | removeVideoAndSharingFromCall failure for : "+call+" failure : "+error),-1!==error.toString().indexOf("getUserMedia")&&this.openErrorPopup(),this.releaseCall(call),this.resetToSafeState(call)}}async removeVideoFromCall(call){try{this.logger.info("[webrtcP2PService] MEDIA   | removeVideoFromCall");const session=this.xmppService.connection.jingle.sessions[call.id];this.stopActiveAudioVideoStreams(session),call.originalStream&&(call.originalStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),call.originalStream.stop&&call.originalStream.stop(),call.originalStream=null,this.virtualBackgroundService.stopProcessStream()),call.localStreams.forEach((function(stream){session.removeStream(stream)}));const mediaToGet=["audio"];session.isRenegotiating=!0;const stream=await this.getBrowserMedia(mediaToGet);this.pushInLocalStreams(stream,call.id),this.updateCurrentCall(call,session,"video","contentRemove"),call.status===call_model_1.Call.Status.PUT_ON_HOLD?session.muteAudio(!0):session.muteAudio(call.isMuted)}catch(error){this.logger.info("[webrtcP2PService] MEDIA   | removeVideoFromCall failure for : "+call+" failure : "+error),-1!==error.toString().indexOf("getUserMedia")&&this.openErrorPopup(),this.releaseCall(call),this.resetToSafeState(call)}}muteAudio(conversation,state){const call=conversation.videoCall;if(!call)throw new Error("[webrtcP2PService] MEDIA   | muteAudio - trying to mute a non existing call !");this.logger.info("[webrtcP2PService] MEDIA   | mute audio: "+call+" | state: "+state),conversation.isMutedAudio=state,call.isMuted=state;const session=this.xmppService.connection.jingle.sessions[call.id];if(!session)throw new Error("[webrtcP2PService] MEDIA   | muteAudio - trying to mute a non existing session !");return session.muteAudio(state),this.eventService.publish("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",{conversation:conversation,call:call}),call}sendDTMF(dialString,call,skipHandle=!1){const session=this.xmppService.connection.jingle.sessions[call.id];if(session&&session.peerconnection){const audioDtmfSender=session.peerconnection.getSenders().find((function(sender){return sender.dtmf&&sender.track&&sender.track.enabled&&"audio"===sender.track.kind})),dtmfSender=audioDtmfSender?audioDtmfSender.dtmf:null;dtmfSender?(this.logger.info("[webrtcP2PService] sendDTMF: dtmf sender found on webrtc session for call id "+call.id+" dialstring: "+dialString),dtmfSender.ontonechange=skipHandle?this.silentToneChangeEventHandle.bind(this):this.handleToneChangeEvent.bind(this),dtmfSender.insertDTMF(dialString)):this.logger.error("[webrtcP2PService]sendDTMF: no dtmf sender found on webrtc session for call id "+call.id)}else this.logger.error("[webrtcP2PService]sendDTMF: no webrtc session found for call id "+call.id)}putCallOnHold(call){this.logger.info("[webrtcP2PService] putCallOnHold for call "+call.id);const session=this.xmppService.connection.jingle.sessions[call.id];call.localMedia&call_model_1.Call.Media.VIDEO&&(call.addVideoAfterUnhold=!0),(call.localMedia&call_model_1.Call.Media.VIDEO||call.localMedia&call_model_1.Call.Media.SHARING)&&this.removeVideoAndSharingFromCall(call),session&&(session.sendHold(!0),session.muteAudio(!0),call.onHold=!0,call.setStatus(call_model_1.Call.Status.HOLD),this.eventService.publish("ON_CALL_UPDATED_EVENT",call))}retrieveCallOnHold(call){this.logger.info("[webrtcP2PService] retrieveCallOnHold for call "+call.id);const session=this.xmppService.connection.jingle.sessions[call.id];if(session){this.eventService.publish("PUT_ACTIVE_TELEPHONY_CALL_ON_HOLD");const activeCall=this.getActiveWebrtcAudioCall();activeCall?(this.putCallOnHold(activeCall),this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"alternate"})):this.eventService.publish("CREATE_RAINBOW_ANALYTICS_EVENT",{category:"multi-call-management",action:"retrieve"}),session.sendHold(!1),session.muteAudio(call.isMuted),call.onHold=!1,call.setStatus(call_model_1.Call.Status.ACTIVE),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.attachDistantMediaStreams(!0,call),call.addVideoAfterUnhold&&this.addVideoToCall(call),call.addVideoAfterUnhold=!1}}referTo(session,confEndpointId,referTo){session?session.sendRefer(confEndpointId,referTo):this.logger.info("[webrtcP2PService] MEDIA   | referTo - trying to transfer a non existing session !")}transferCall(session,otherSession){session&&otherSession?session.sendP2PTrasnferCallRefer(otherSession.sid,otherSession.peerjid):this.logger.info("[webrtcP2PService] MEDIA   | trasnferCall - trying to transfer a non existing session !")}sendReferStatus(callId,status){const session=this.xmppService.connection.jingle.sessions[callId];session?(this.logger.info("[webrtcP2PService] MEDIA   | sendReferStatus - "+status),session.sendReferStatus(status)):this.logger.info("[webrtcP2PService] MEDIA   | sendReferStatus - trying to transfer a non existing session !")}sendReferTransfer(callId,method,referTo){const session=this.xmppService.connection.jingle.sessions[callId];session?(this.logger.info("[webrtcP2PService] MEDIA   | sendReferTransfer - method "+method+" referTo "+referTo),session.sendReferTransfer(method,referTo)):this.logger.info("[webrtcP2PService] MEDIA   | sendReferStatus - trying to transfer a non existing session !")}disableStreams(streams){if(streams&&streams.length)for(streams.forEach((function(stream){stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream=null}));streams.length>0;)streams.pop()}pushInLocalStreams(stream,callId){stream.callId=callId;const call=this.calls[callId];call&&call.localStreams.push(stream)}openErrorPopup(msg=""){msg||(msg="cameraNotAvailable"),this.eventService.publish("ON_WEBRTC_CALL_ERROR_EVENT",msg)}stopActiveSharingStream(session){if(session){const call=this.calls[session.sid];if(call&&call.localStreams.length)for(let i=0;i<call.localStreams.length;i++)if(call.localStreams[i]&&call.localStreams[i].getVideoTracks().length&&!call.localStreams[i].getAudioTracks().length){let stream=call.localStreams.splice(i,1);stream=stream[0],stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null}}session&&session.localStreams&&(session.localStreams.forEach((function(stream){stream.getVideoTracks().length&&!stream.getAudioTracks().length&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop()),session.removeStream(stream)})),session.localStreams=[]),session&&this.xmppService.connection.jingle.localStream&&session.removeStream(this.xmppService.connection.jingle.localStream)}stopActiveAudioVideoStreams(session,stopAll=!1){if(session){const call=this.calls[session.sid];if(call&&call.localStreams.length)if(stopAll)for(;call.localStreams.length;){let stream=call.localStreams.pop();stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream.stop&&stream.stop(),stream=null}else for(let i=0;i<call.localStreams.length;i++)if(call.localStreams[i]&&call.localStreams[i].getAudioTracks().length){let stream=call.localStreams.splice(i,1);stream=stream[0],stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream.stop&&stream.stop(),stream=null}}if(session&&session.localStreams){if(session.localStreams.forEach((function(stream){(stream.getAudioTracks().length||stopAll)&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),session.removeStream(stream))})),stopAll)for(;session.localStreams.length;){let temp=session.localStreams.pop();temp=null}session.localStreams=[]}session&&this.xmppService.connection.jingle.localStream&&session.removeStream(this.xmppService.connection.jingle.localStream)}resetToSafeState(call=null){this.logger.info("[webrtcP2PService] MEDIA   | resetToSafeState"),this.autoreleaseTimeout&&clearTimeout(this.autoreleaseTimeout),call&&call.localStreams.length&&this.disableStreams(call.localStreams),call&&call.originalStream&&this.disableStreams([call.originalStream]),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE")}getConstraintsForMedia(userMedia,fixedVideoWidth,fixedVideoHeight,fixedFrameRate,getAudioForSharing){let constraints={},width=fixedVideoWidth||this.webrtcConfigAndUtils.videoQualityConfiguration.video.fixedVideoWidth,height=fixedVideoHeight||this.webrtcConfigAndUtils.videoQualityConfiguration.video.fixedVideoHeight,frameRate=fixedFrameRate||this.webrtcConfigAndUtils.videoQualityConfiguration.video.fixedFrameRate;if(userMedia.indexOf("sharing")>=0&&(width=fixedVideoWidth||this.webrtcConfigAndUtils.videoQualityConfiguration.sharing.fixedVideoWidth,height=fixedVideoHeight||this.webrtcConfigAndUtils.videoQualityConfiguration.sharing.fixedVideoHeight,frameRate=fixedFrameRate||this.webrtcConfigAndUtils.videoQualityConfiguration.sharing.fixedFrameRate),this.logger.info("[webrtcP2PService] GetUserMedia new deviceManagement"),userMedia.indexOf("audio")>=0){const microphone=this.deviceManagementService.getCurrentAudioInputDevice();let mic="default";microphone&&microphone.deviceId?(constraints.audio={deviceId:{exact:microphone.deviceId}},mic="id - "+microphone.deviceId+" and label "+microphone.label):constraints.audio=!0,this.logger.info("[webrtcP2PService] GetUserMedia for microphone "+mic)}if(userMedia.indexOf("video")>=0){constraints.video={width:width,height:height,frameRate:frameRate};const camera=this.deviceManagementService.getCurrentVideoInputDevice();let cam="default";camera&&camera.deviceId&&"default"!==camera.deviceId&&(constraints.video.deviceId={exact:camera.deviceId},cam="id - "+camera.deviceId+" and label "+camera.label),this.logger.info("[webrtcP2PService] GetUserMedia for camera "+cam)}if(userMedia.indexOf("sharing")>=0)if(this.isNativeApplication()||"chrome"!==window.adapter.default.browserDetails.browser)if("firefox"===window.adapter.default.browserDetails.browser)constraints.video={mediaSource:this.firefoxPreferedSharing};else{const sharingSources=this.getDesktopSharingSource(),chromeMediaSource=sharingSources&&sharingSources.chromeMediaSource?sharingSources.chromeMediaSource:"desktop",chromeMediaSourceId=sharingSources&&sharingSources.chromeMediaSourceId?sharingSources.chromeMediaSourceId:null;constraints.video={mandatory:{chromeMediaSource:chromeMediaSource,maxWidth:width,maxHeight:height,maxFrameRate:frameRate}},getAudioForSharing&&(constraints.audio={mandatory:{chromeMediaSource:"desktop"}}),chromeMediaSourceId&&(constraints.video.mandatory.chromeMediaSourceId=chromeMediaSourceId)}else constraints={},constraints={audio:getAudioForSharing,video:{chromeMediaSource:"desktop",width:{max:width},height:{max:height},frameRate:{ideal:frameRate}}};return constraints.audio||(constraints.audio=!1),constraints.video||(constraints.video=!1),constraints}async getBrowserMedia(userMedia,fixedVideoWidth=0,fixedVideoHeight=0,fixedFrameRate=0,referer=null,getAudioForSharing=!1){try{let stream=null;if(getAudioForSharing=Boolean(getAudioForSharing),!userMedia||0===userMedia.length)return stream;let shouldGetDisplayMedia=!1;const constraints=this.getConstraintsForMedia(userMedia,fixedVideoWidth,fixedVideoHeight,fixedFrameRate,getAudioForSharing);if(userMedia.indexOf("sharing")>=0&&!this.isNativeApplication()&&"chrome"===window.adapter.default.browserDetails.browser&&(shouldGetDisplayMedia=!0),this.logger.info("[webrtcP2PService] GetUserMedia with constraint "+JSON.stringify(constraints)),!constraints)throw new Error("getUserMedia cancelled");if(shouldGetDisplayMedia){if(stream=await navigator.mediaDevices.getDisplayMedia(constraints),this.logger.info("[webrtcP2PService] | getDisplayMedia success"),stream.getVideoTracks().length&&this.logger.info("[webrtcP2PService] getDisplayMedia video stream kind "+stream.getVideoTracks()[0].kind+", id "+stream.getVideoTracks()[0].id+", label "+stream.getVideoTracks()[0].label+", readyState "+stream.getVideoTracks()[0].readyState+", enabled "+stream.getVideoTracks()[0].enabled),stream&&(0===stream.getAudioTracks().length&&0===stream.getVideoTracks().length||!1===stream.active))throw this.logger.info("[webrtcP2PService] Stream has no active audio or video tracks"),new Error("getDisplayMedia failure : Stream has no active audio or video tracks");stream.getVideoTracks()[0].onended=()=>{this.logger.info("[webrtcP2PService] Stop screensharing in chrome has been triggered"),this.eventService.publish("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED"),this.sendEvent("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED",{webinar:referer})}}else{if(stream=await navigator.mediaDevices.getUserMedia(constraints),this.logger.info("[webrtcP2PService] | getUserMedia success"),stream.getAudioTracks().length&&this.logger.info("[webrtcP2PService] getUserMedia audio stream kind "+stream.getAudioTracks()[0].kind+", id "+stream.getAudioTracks()[0].id+", label "+stream.getAudioTracks()[0].label+", readyState "+stream.getAudioTracks()[0].readyState+", enabled "+stream.getAudioTracks()[0].enabled),stream.getVideoTracks().length&&this.logger.info("[webrtcP2PService] getUserMedia video stream kind "+stream.getVideoTracks()[0].kind+", id "+stream.getVideoTracks()[0].id+", label "+stream.getVideoTracks()[0].label+", readyState "+stream.getVideoTracks()[0].readyState+", enabled "+stream.getVideoTracks()[0].enabled),stream&&(0===stream.getAudioTracks().length&&0===stream.getVideoTracks().length||!1===stream.active))throw this.logger.info("[webrtcP2PService] Stream has no active audio or video tracks"),new Error("getUserMedia failure : Stream has no active audio or video tracks");userMedia.indexOf("sharing")>=0&&(stream.getVideoTracks()[0].onended=()=>{this.logger.info("Stop screensharing native button has been triggered"),this.eventService.publish("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED"),this.sendEvent("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED",{webinar:referer})}),stream&&stream.getAudioTracks().length&&(stream.getAudioTracks()[0].onended=()=>{this.logger.error("[webrtcP2PService] getUserMedia -- audio stream track ended"),this.eventService.publish("ON_AUDIO_STREAM_TRACK_ENDED")})}return stream}catch(err){throw this.logger.info("[webrtcP2PService] | getUserMedia failure: "+err),new Error("getUserMedia failure "+err)}}calculatePresenceMessage(call){let message="audio";return call&&call.localMedia&call_model_1.Call.Media.VIDEO&&(message="video"),call&&call.remoteMedia&call_model_1.Call.Media.VIDEO&&(message="video"),call&&call.localMedia&call_model_1.Call.Media.SHARING&&(message="sharing"),message}updateRemoteTypeMedia(remoteType,call){switch(remoteType){case"audio":call.remoteMedia=call_model_1.Call.Media.AUDIO;break;case"video":call.remoteMedia=call_model_1.Call.Media.VIDEO;break;case"audio+video":call.remoteMedia=call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.VIDEO;break;case"sharing":call.remoteMedia=call_model_1.Call.Media.SHARING|call_model_1.Call.Media.AUDIO;break;case"sharing-only":call.remoteMedia=call_model_1.Call.Media.SHARING;break;default:call.remoteMedia=null}this.logger.debug("[webrtcP2PService] updateRemoteTypeMedia "+call.remoteMedia)}async updateLocalAudioStreamForCall(call){const session=this.xmppService.connection.jingle.sessions[call.id];if(session)try{const mediaToGet=["audio"],changeVideo=call.localMedia&call_model_1.Call.Media.VIDEO;let sharingStream;if(changeVideo&&mediaToGet.push("video"),changeVideo&&call.originalStream&&(call.originalStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),call.originalStream.stop&&call.originalStream.stop(),call.originalStream=null),call.localMedia&call_model_1.Call.Media.SHARING)for(let i=0;i<session.localStreams.length;i++)session.localStreams[i]&&session.localStreams[i].getVideoTracks().length&&!session.localStreams[i].getAudioTracks().length&&(sharingStream=session.localStreams.splice(i,1)[0]);this.webrtcConfigAndUtils.disableMediaStreams(session.localStreams),session.localStreams=[],call.localStreams=[];const stream=await this.getBrowserMedia(mediaToGet);let modifiedStream=stream;changeVideo&&(call.originalStream=stream,modifiedStream=await this.virtualBackgroundService.startProcessStream(stream)),await session.replaceTransceiverTrack(modifiedStream.getAudioTracks()[0],0),changeVideo&&await session.replaceTransceiverTrack(modifiedStream.getVideoTracks()[0],1),session.localStreams.push(modifiedStream),this.pushInLocalStreams(modifiedStream,call.id),sharingStream&&(session.localStreams.push(sharingStream),this.pushInLocalStreams(sharingStream,call.id)),this.logger.info("[webrtcP2PService] onAudioVideoInputDeviceChange -- success 'on the fly'"),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",call),this.sendEvent("localMediaUpdate")}catch{call.localMedia&call_model_1.Call.Media.VIDEO?this.addVideoToCall(call,!0):this.addAudioToCall(call,!0),this.logger.info("[webrtcP2PService] onAudioVideoInputDeviceChange -- success 'via transport-replace'")}else call&&!session&&setTimeout(()=>{this.onAudioVideoInputDeviceChange()},2e3)}calculateNewCallType(call,session,type,action){let result=session.localType;return"contentAdd"===action&&("video"===type?(result=call.localMedia&call_model_1.Call.Media.SHARING?"sharing+video":"video",call.localMedia=call.localMedia|call_model_1.Call.Media.VIDEO):"sharing"===type?(result=call.localMedia&call_model_1.Call.Media.VIDEO?"sharing+video":"sharing",call.localMedia=call.localMedia|call_model_1.Call.Media.SHARING):"audio"===type&&(call.localMedia&call_model_1.Call.Media.SHARING?(result="sharing",call.localMedia=call.localMedia|call_model_1.Call.Media.AUDIO):(result="audio",call.localMedia=call_model_1.Call.Media.AUDIO))),"contentRemove"===action&&("video"===type?call.localMedia&call_model_1.Call.Media.SHARING?(result="sharing",call.localMedia=call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.SHARING):(result="audio",call.localMedia=call_model_1.Call.Media.AUDIO):"sharing"===type&&(call.localMedia&call_model_1.Call.Media.VIDEO?(result="video",call.localMedia=call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.VIDEO):(result="audio",call.localMedia=call_model_1.Call.Media.AUDIO))),"contentModify"===action&&call.localMedia&call_model_1.Call.Media.VIDEO&&!(call.localMedia&call_model_1.Call.Media.SHARING)&&(result="video"),this.logger.info("[webrtcP2PService] calculateNewCallType for type "+type+" and action "+action+" with result "+result),result}updateCurrentCall(call,session,type,action){this.logger.info("[webrtcP2PService] updateCurrentCall for type "+type+" and action "+action);const newType=this.calculateNewCallType(call,session,type,action);for(let i=0;i<call.localStreams.length;i++)session.addStream(call.localStreams[i]),session.localStreams.push(call.localStreams[i]);switch(action){case"contentAdd":session.contentAdd(newType);break;case"contentRemove":session.contentRemove(newType);break;case"contentModify":session.contentModify(newType)}this.contactService.setBusyState("dnd",this.calculatePresenceMessage(call)),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",call)}stopAllActiveStreams(session){this.stopActiveAudioVideoStreams(session,!0)}handleToneChangeEvent(event){""!==event.tone&&(this.logger.info("[webrtcP2PService] Dtmf Tone played: "+event.tone),this.eventService.publish("ON_DTMF_SENT",event.tone))}silentToneChangeEventHandle(event){this.logger.info("[webrtcP2PService] Dtmf Tone played: "+event.tone)}clearSrcObjectsFromElements(){0===Object.keys(this.xmppService.connection.jingle.sessions).length?(this.RTC.clearMediaStream($("#largevideo"),null),this.RTC.clearMediaStream($("#globalVideoTag"),null),this.RTC.clearMediaStream($("#globalAudioTag"),null)):this.logger.info("[webrtcP2PService]  clearSrcObjectsFromElements -- ignored because not all calls are terminated")}attachDistantMediaStreamsUnifiedPlan(call){const sess=this.xmppService.connection.jingle.sessions[call.id];sess?(sess.remoteStreamsObject[0]&&(this.logger.info("[webrtcP2PService] attachDistantMediaStreamsUnifiedPlan audio track for element globalAudioTag "+sess.remoteStreamsObject[0].id),this.RTC.attachMediaStream($("#globalAudioTag"),sess.remoteStreamsObject[0])),sess.remoteStreamsObject[1]&&sess.remoteStreamsObject[2]?(this.RTC.attachMediaStreamIfNeeded($("#largevideo"),sess.remoteStreamsObject[2],sess.remoteStreamsObject[2].id),$("#largevideo")[0]&&($("#largevideo")[0].muted=!0,$("#largevideo")[0].volume=0),this.RTC.attachMediaStreamIfNeeded($("#p2pSecondVideo"),sess.remoteStreamsObject[1],sess.remoteStreamsObject[1].id),$("#p2pSecondVideo")[0]&&($("#p2pSecondVideo")[0].muted=!0,$("#p2pSecondVideo")[0].volume=0)):sess.remoteStreamsObject[1]?(this.RTC.attachMediaStreamIfNeeded($("#largevideo"),sess.remoteStreamsObject[1],sess.remoteStreamsObject[1].id),$("#largevideo")[0]&&($("#largevideo")[0].muted=!0,$("#largevideo")[0].volume=0)):sess.remoteStreamsObject[2]&&(this.RTC.attachMediaStreamIfNeeded($("#largevideo"),sess.remoteStreamsObject[2],sess.remoteStreamsObject[2].id),$("#largevideo")[0]&&($("#largevideo")[0].muted=!0,$("#largevideo")[0].volume=0))):this.logger.warn("[webrtcP2PService] attachDistantMediaStreamsUnifiedPlan -- missing session "+call.id)}attachDistantMediaStreams(attach,call){if(attach){if(this.alreadyAttaching)return;this.alreadyAttaching=!0,this.attachDistantMediaStreamsUnifiedPlan(call),this.alreadyAttaching=!1}else this.isUserContactInCall()||(this.RTC.clearMediaStream($("#largevideo"),null),this.RTC.clearMediaStream($("#globalVideoTag"),null),this.RTC.clearMediaStream($("#globalAudioTag"),null))}attachLocalVideoOnlyStreamToElement(call,attach,element){this.logger.info("[webrtcP2PService] attachLocalVideoOnlyStreamToElement "+attach),attach?(call.localStreams&&call.localStreams.length&&call.localStreams.forEach(track=>{track.getVideoTracks().length&&track.getAudioTracks().length||track.getVideoTracks().length&&this.RTC.attachMediaStreamIfNeeded(element,track,track.id)}),element[0]&&(element[0].volume=0)):this.RTC.clearMediaStream(element,null)}attachLocalAudioVideoStreamToElement(call,attach,element){this.logger.info("[webrtcP2PService] attachLocalAudioVideoStreamToElement "+attach),attach?(call.localStreams&&call.localStreams.length&&call.localStreams.forEach(track=>{track.getVideoTracks().length&&track.getAudioTracks().length&&this.RTC.attachMediaStreamIfNeeded(element,track,track.id)}),element[0]&&(element[0].volume=0)):this.RTC.clearMediaStream(element,null)}attachLocalMediaStreams(attach,call=null){if(call||(call=this.getCurrentActiveCall()),this.logger.info("[webrtcP2PService] attachLocalMediaStreams "+attach),attach){if(call.localStreams&&call.localStreams.length){let firstVideoStream=!1;call.localStreams.forEach(track=>{track.getVideoTracks().length&&track.getAudioTracks().length?(firstVideoStream?this.RTC.attachMediaStreamIfNeeded($("#minivideo2"),track,track.id):(firstVideoStream=!0,this.RTC.attachMediaStreamIfNeeded($("#minivideo"),track,track.id)),this.RTC.attachMediaStreamIfNeeded($("#callVideoPip"),track,track.id)):track.getVideoTracks().length&&(firstVideoStream?this.RTC.attachMediaStreamIfNeeded($("#minivideo2"),track,track.id):(firstVideoStream=!0,this.RTC.attachMediaStreamIfNeeded($("#minivideo"),track,track.id)),this.RTC.attachMediaStreamIfNeeded($("#callSharingPip"),track,track.id))})}$("#callVideoPip")[0]&&($("#callVideoPip")[0].volume=0),$("#minivideo")[0]&&($("#minivideo")[0].volume=0),$("#minivideo2")[0]&&($("#minivideo2")[0].volume=0),$("#callSharingPip")[0]&&($("#callSharingPip")[0].volume=0)}else this.RTC.clearMediaStream($("#minivideo"),null),this.RTC.clearMediaStream($("#minivideo2"),null),this.RTC.clearMediaStream($("#callVideoPip"),null),this.RTC.clearMediaStream($("#callSharingPip"),null)}removeConferencePip(){return this.RTC.clearMediaStream($("#conferenceSharingPip"),null),this.RTC.clearMediaStream($("#conferenceVideoPip"),null),!0}}exports.WebrtcP2PService=WebrtcP2PService},function(module,__webpack_exports__,__webpack_require__){"use strict";function getSymbolIterator(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}__webpack_require__.d(__webpack_exports__,"a",(function(){return iterator}));var iterator=getSymbolIterator()},function(module,__webpack_exports__,__webpack_require__){"use strict";function noop(){}__webpack_require__.d(__webpack_exports__,"a",(function(){return noop}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const settings_service_1=__webpack_require__(18),logger_service_1=__webpack_require__(4),rxjs_1=__webpack_require__(7);class I18nService{constructor(){this.isInitialized=!1,this.subject=new rxjs_1.Subject,this.settingsService=settings_service_1.SettingsService.getInstance(),this.loggerService=logger_service_1.LoggerService.getInstance(),this.subscription=this.settingsService.subscribeUpdateEvent("LANGUAGE_UPDATED",()=>{this.updateTranslationLanguage()})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.i18nService||(win.rainbow.i18nService=new I18nService),win.rainbow.i18nService}subscribe(observable){return this.subject.subscribe(observable)}async configure(translator){this.translator=translator,await this.updateTranslationLanguage()}translate(label,params=null){return this.translator?this.translator.instant(label,params):label}getCurrentLanguage(){return this.translator?this.translator.use():"en"}async updateTranslationLanguage(){try{const currentLanguage=this.settingsService.getAppliLanguage();if(this.translator){const loadedLanguage=await this.translator.use(currentLanguage.code);this.loggerService.info(`[I18nService] updateTranslationLanguage -- "${loadedLanguage}" labels are loaded`),this.isInitialized=!0,this.subject.next()}moment.locale(currentLanguage.codeMoment)}catch(error){this.loggerService.error("[I18nService] updateTranslationLanguage -- failure")}}}exports.I18nService=I18nService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SDK={OK:1,ERROR:-1,ERRORUNAUTHORIZED:-2,ERRORXMPP:-4,ERRORXMPPJID:-8,ERRORBADREQUEST:-16,ERRORUNSUPPORTED:-32,ERRORNOTFOUND:-64}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.sdkConfig={verboseLog:!0,customLogger:null,measurePerformance:!1,videoQuality:"high",newModels:!1,experimentalModels:!1,displayOrder:"FL",autoAway:!0,autoAwayDelay:180,logs:{contactService:!0,xmppMessages:!0,xmppService:!0,conversationService:!0,presence:!0},credentials:{appID:"",appSecret:"",host:"openrainbow.com"},features:{bots:!0,channels:!0,conference:!0,telephony:!0,profileService:!0,roomService:!0,favoriteService:!0,conversationService:!0,calendarService:!0}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return observable}));var observable=function(){return"function"==typeof Symbol&&Symbol.observable||"@@observable"}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ObjectUnsubscribedError}));var ObjectUnsubscribedError=function(){function ObjectUnsubscribedErrorImpl(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return ObjectUnsubscribedErrorImpl.prototype=Object.create(Error.prototype),ObjectUnsubscribedErrorImpl}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Base",(function(){return Base})),__webpack_require__.d(__webpack_exports__,"WordArray",(function(){return WordArray})),__webpack_require__.d(__webpack_exports__,"Hex",(function(){return Hex})),__webpack_require__.d(__webpack_exports__,"Latin1",(function(){return Latin1})),__webpack_require__.d(__webpack_exports__,"Utf8",(function(){return Utf8})),__webpack_require__.d(__webpack_exports__,"BufferedBlockAlgorithm",(function(){return BufferedBlockAlgorithm})),__webpack_require__.d(__webpack_exports__,"Hasher",(function(){return Hasher})),__webpack_require__.d(__webpack_exports__,"HMAC",(function(){return HMAC}));class Base{static create(...args){return new this(...args)}mixIn(properties){return Object.assign(this,properties)}clone(){const clone=new this.constructor;return Object.assign(clone,this),clone}}class WordArray extends Base{constructor(words=[],sigBytes=4*words.length){super();let typedArray=words;if(typedArray instanceof ArrayBuffer&&(typedArray=new Uint8Array(typedArray)),(typedArray instanceof Int8Array||typedArray instanceof Uint8ClampedArray||typedArray instanceof Int16Array||typedArray instanceof Uint16Array||typedArray instanceof Int32Array||typedArray instanceof Uint32Array||typedArray instanceof Float32Array||typedArray instanceof Float64Array)&&(typedArray=new Uint8Array(typedArray.buffer,typedArray.byteOffset,typedArray.byteLength)),typedArray instanceof Uint8Array){const typedArrayByteLength=typedArray.byteLength,_words=[];for(let i=0;i<typedArrayByteLength;i+=1)_words[i>>>2]|=typedArray[i]<<24-i%4*8;this.words=_words,this.sigBytes=typedArrayByteLength}else this.words=words,this.sigBytes=sigBytes}static random(nBytes){const words=[],r=m_w=>{let _m_w=m_w,_m_z=987654321;const mask=4294967295;return()=>{_m_z=36969*(65535&_m_z)+(_m_z>>16)&mask,_m_w=18e3*(65535&_m_w)+(_m_w>>16)&mask;let result=(_m_z<<16)+_m_w&mask;return result/=4294967296,result+=.5,result*(Math.random()>.5?1:-1)}};for(let rcache,i=0;i<nBytes;i+=4){const _r=r(4294967296*(rcache||Math.random()));rcache=987654071*_r(),words.push(4294967296*_r()|0)}return new WordArray(words,nBytes)}toString(encoder=Hex){return encoder.stringify(this)}concat(wordArray){const thisWords=this.words,thatWords=wordArray.words,thisSigBytes=this.sigBytes,thatSigBytes=wordArray.sigBytes;if(this.clamp(),thisSigBytes%4)for(let i=0;i<thatSigBytes;i+=1){const thatByte=thatWords[i>>>2]>>>24-i%4*8&255;thisWords[thisSigBytes+i>>>2]|=thatByte<<24-(thisSigBytes+i)%4*8}else for(let i=0;i<thatSigBytes;i+=4)thisWords[thisSigBytes+i>>>2]=thatWords[i>>>2];return this.sigBytes+=thatSigBytes,this}clamp(){const{words:words,sigBytes:sigBytes}=this;words[sigBytes>>>2]&=4294967295<<32-sigBytes%4*8,words.length=Math.ceil(sigBytes/4)}clone(){const clone=super.clone.call(this);return clone.words=this.words.slice(0),clone}}const Hex={stringify(wordArray){const{words:words,sigBytes:sigBytes}=wordArray,hexChars=[];for(let i=0;i<sigBytes;i+=1){const bite=words[i>>>2]>>>24-i%4*8&255;hexChars.push((bite>>>4).toString(16)),hexChars.push((15&bite).toString(16))}return hexChars.join("")},parse(hexStr){const hexStrLength=hexStr.length,words=[];for(let i=0;i<hexStrLength;i+=2)words[i>>>3]|=parseInt(hexStr.substr(i,2),16)<<24-i%8*4;return new WordArray(words,hexStrLength/2)}},Latin1={stringify(wordArray){const{words:words,sigBytes:sigBytes}=wordArray,latin1Chars=[];for(let i=0;i<sigBytes;i+=1){const bite=words[i>>>2]>>>24-i%4*8&255;latin1Chars.push(String.fromCharCode(bite))}return latin1Chars.join("")},parse(latin1Str){const latin1StrLength=latin1Str.length,words=[];for(let i=0;i<latin1StrLength;i+=1)words[i>>>2]|=(255&latin1Str.charCodeAt(i))<<24-i%4*8;return new WordArray(words,latin1StrLength)}},Utf8={stringify(wordArray){try{return decodeURIComponent(escape(Latin1.stringify(wordArray)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:utf8Str=>Latin1.parse(unescape(encodeURIComponent(utf8Str)))};class BufferedBlockAlgorithm extends Base{constructor(){super(),this._minBufferSize=0}reset(){this._data=new WordArray,this._nDataBytes=0}_append(data){let m_data=data;"string"==typeof m_data&&(m_data=Utf8.parse(m_data)),this._data.concat(m_data),this._nDataBytes+=m_data.sigBytes}_process(doFlush){let processedWords;const{_data:data,blockSize:blockSize}=this,dataWords=data.words,dataSigBytes=data.sigBytes;let nBlocksReady=dataSigBytes/(4*blockSize);nBlocksReady=doFlush?Math.ceil(nBlocksReady):Math.max((0|nBlocksReady)-this._minBufferSize,0);const nWordsReady=nBlocksReady*blockSize,nBytesReady=Math.min(4*nWordsReady,dataSigBytes);if(nWordsReady){for(let offset=0;offset<nWordsReady;offset+=blockSize)this._doProcessBlock(dataWords,offset);processedWords=dataWords.splice(0,nWordsReady),data.sigBytes-=nBytesReady}return new WordArray(processedWords,nBytesReady)}clone(){const clone=super.clone.call(this);return clone._data=this._data.clone(),clone}}class Hasher extends BufferedBlockAlgorithm{constructor(cfg){super(),this.blockSize=16,this.cfg=Object.assign(new Base,cfg),this.reset()}static _createHelper(SubHasher){return(message,cfg)=>new SubHasher(cfg).finalize(message)}static _createHmacHelper(SubHasher){return(message,key)=>new HMAC(SubHasher,key).finalize(message)}reset(){super.reset.call(this),this._doReset()}update(messageUpdate){return this._append(messageUpdate),this._process(),this}finalize(messageUpdate){messageUpdate&&this._append(messageUpdate);return this._doFinalize()}}class HMAC extends Base{constructor(SubHasher,key){super();const hasher=new SubHasher;this._hasher=hasher;let _key=key;"string"==typeof _key&&(_key=Utf8.parse(_key));const hasherBlockSize=hasher.blockSize,hasherBlockSizeBytes=4*hasherBlockSize;_key.sigBytes>hasherBlockSizeBytes&&(_key=hasher.finalize(key)),_key.clamp();const oKey=_key.clone();this._oKey=oKey;const iKey=_key.clone();this._iKey=iKey;const oKeyWords=oKey.words,iKeyWords=iKey.words;for(let i=0;i<hasherBlockSize;i+=1)oKeyWords[i]^=1549556828,iKeyWords[i]^=909522486;oKey.sigBytes=hasherBlockSizeBytes,iKey.sigBytes=hasherBlockSizeBytes,this.reset()}reset(){const hasher=this._hasher;hasher.reset(),hasher.update(this._iKey)}update(messageUpdate){return this._hasher.update(messageUpdate),this}finalize(messageUpdate){const hasher=this._hasher,innerHash=hasher.finalize(messageUpdate);hasher.reset();return hasher.finalize(this._oKey.clone().concat(innerHash))}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),settings_service_1=__webpack_require__(18),xmpp_service_1=__webpack_require__(9),main_service_1=__webpack_require__(15);class WebrtcConfigAndUtils{constructor(){this.mobileVideoQualityConfiguration={video:{fixedFrameRate:20,fixedVideoWidth:960,fixedVideoHeight:540},sharing:{fixedFrameRate:5,fixedVideoWidth:1280,fixedVideoHeight:720}},this.videoQualityConfiguration={video:{fixedFrameRate:24,fixedVideoWidth:1280,fixedVideoHeight:720},sharing:{fixedFrameRate:5,fixedVideoWidth:1920,fixedVideoHeight:1080}},this.RTC={browser:"",attachMediaStream:()=>{},clearMediaStream:()=>{},attachMediaStreamIfNeeded:()=>{},attachSessionMediaToElement:()=>{}},this.callsStats={},this.callsStatsSimplified={},this.logger=logger_service_1.LoggerService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.ttl=0,this.ttlTimeout=null,this.started=!1,this.xmppService.connected&&this.start(),this.subscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChangeEvent(event)})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webrtcConfigAndUtils||(win.rainbow.webrtcConfigAndUtils=new WebrtcConfigAndUtils),win.rainbow.webrtcConfigAndUtils}start(){this.deviceManagementService=this.mainService.inject("deviceManagementService"),this.logger.log("[WebrtcConfigAndUtils] -- start"),this.RTC=this.getBrowserMethodHandler(),this.setWebrtcConfiguration(),this.started=!0}stop(){this.logger.log("[WebrtcConfigAndUtils] -- stop"),this.ttl=0,this.webrtcConfig=null,this.companyConfig=null,this.ttlTimeout&&(clearTimeout(this.ttlTimeout),this.ttlTimeout=null)}onConnectionStateChangeEvent(event){"ON_XMPP_DISCONNECTED"===event.name?(this.started=!1,"LOGOUT"===event.data.reason?this.stop():(this.logger.log("[WebrtcConfigAndUtils] onConnectionStateChangeEvent : disconnected"),this.ttlTimeout&&(clearTimeout(this.ttlTimeout),this.ttlTimeout=null),this.ttl=0)):"ON_XMPP_CONNECTED"===event.name&&(this.logger.log("[WebrtcConfigAndUtils] onConnectionStateChangeEvent : connected"),this.started||this.start())}getBrowserMethodHandler(){return window.adapter&&"chrome"!==window.adapter.default.browserDetails.browser?"firefox"===window.adapter.default.browserDetails.browser?this.RTC={browser:"firefox",attachMediaStream:(element,stream)=>{element&&element[0]&&(element[0].mozSrcObject=stream,element[0].srcObject=stream,element[0].play())},clearMediaStream:element=>{try{element[0]&&(element[0].pause(),element[0].mozSrcObject=null,element[0].srcObject=null,element[0].uniqueId=null)}catch(err){this.logger.log("[WebrtcConfigAndUtils] | clearMediaStream failure "+err)}},attachMediaStreamIfNeeded:(element,stream,uniqueId)=>{this.logger.log("[WebrtcConfigAndUtils] | attachMediaStreamIfNeeded for ID "+uniqueId),element&&element[0]&&(element[0].uniqueId!==uniqueId||!element[0].mozSrcObject&&!element[0].srcObject)?(element[0].uniqueId=uniqueId,this.RTC.attachMediaStream(element,stream)):element&&element[0]&&element[0].srcObject&&stream&&element[0].srcObject.id!==stream.id&&(this.RTC.attachMediaStream(element,stream),element[0].play())},attachSessionMediaToElement:(elementId,session)=>{const element=document.getElementById(elementId);element&&session&&(session.remoteStreamsObject[0]?this.RTC.attachMediaStreamIfNeeded([element],session.remoteStreamsObject[0],session.sid):session.localStreams&&this.RTC.attachMediaStreamIfNeeded([element],session.localStreams[0],session.sid))}}:this.RTC={browser:"safari",attachMediaStream:(element,stream)=>{element&&element[0]&&(element[0].setAttribute("playsinline",!0),element[0].srcObject=stream,element[0].play())},clearMediaStream:element=>{try{element&&element[0]&&(element[0].pause(),element[0].srcObject=null,element[0].uniqueId=null)}catch(err){this.logger.log("[WebrtcConfigAndUtils] | clearMediaStream failure "+err)}},attachMediaStreamIfNeeded:(element,stream,uniqueId)=>{this.logger.log("[WebrtcConfigAndUtils] | attachMediaStreamIfNeeded for ID "+uniqueId),!element||!element[0]||element[0].uniqueId===uniqueId&&element[0].srcObject?element&&element[0]&&element[0].srcObject&&stream&&element[0].srcObject.id!==stream.id&&this.RTC.attachMediaStream(element,stream):(element[0].uniqueId=uniqueId,this.RTC.attachMediaStream(element,stream))},attachSessionMediaToElement:(elementId,session)=>{const element=document.getElementById(elementId);element&&session&&(session.remoteStreamsObject[0]?this.RTC.attachMediaStreamIfNeeded([element],session.remoteStreamsObject[0],session.sid):session.localStreams&&this.RTC.attachMediaStreamIfNeeded([element],session.localStreams[0],session.sid))}}:this.RTC={browser:"chrome",attachMediaStream:(element,stream)=>{this.logger.log("[WebrtcConfigAndUtils] | attachMediaStream to element"),element&&element[0]&&(element[0].srcObject=stream,"VIDEO"===element[0].nodeName&&(element[0].autoplay=!0,element[0].muted=!0))},clearMediaStream:element=>{element&&element[0]&&(element[0].pause(),element[0].srcObject=null,element[0].uniqueId=null)},attachMediaStreamIfNeeded:(element,stream,uniqueId)=>{this.logger.log("[WebrtcConfigAndUtils] | attachMediaStreamIfNeeded for ID "+uniqueId),!element||!element[0]||element[0].uniqueId===uniqueId&&element[0].srcObject?element&&element[0]&&element[0].srcObject&&stream&&element[0].srcObject.id!==stream.id&&(this.RTC.attachMediaStream(element,stream),element[0].play()):(element[0].uniqueId=uniqueId,this.RTC.attachMediaStream(element,stream))},attachSessionMediaToElement:(elementId,session)=>{const element=document.getElementById(elementId);element&&session&&(session.remoteStreamsObject[0]?this.RTC.attachMediaStreamIfNeeded([element],session.remoteStreamsObject[0],session.sid):session.localStreams&&this.RTC.attachMediaStreamIfNeeded([element],session.localStreams[0],session.sid))}},this.RTC}disableAllStreamsForSession(session){if(session&&session.localStreams){if(session.localStreams.length>0){for(session.localStreams.forEach(stream=>{stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream=null});session.localStreams.length>0;)session.localStreams.pop();this.logger.log("[WebrtcConfigAndUtils] | disableAllStreamsForSession : Session streams stopped and removed.")}}else this.logger.log("[WebrtcConfigAndUtils] | disableAllStreamsForSession -- missing session or no localStreams")}disableMediaStreams(streams){if(streams&&streams.length)for(streams.forEach(stream=>{stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream=null});streams.length>0;)streams.pop()}disableMediaStream(stream){stream&&(stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream=null)}getMobileMediaConstraints(type){return this.mobileVideoQualityConfiguration[type]}async createOrUpdateStatisticsForCall(call){try{if(!call)throw new Error("[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall -- missing call");if(!call.contact)throw new Error("[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall -- missing contact for call");const callId=call.id,contactDbId=call.contact.dbId?call.contact.dbId:call.contact.id;if(!callId||!contactDbId)throw new Error(`[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall -- missing informations for ${callId} `);const metrics=[];if(this.callsStats[callId])return this.callsStats[callId].RainMetrics&&this.callsStats[callId].push(this.callsStats[callId].RainMetrics),metrics.push({connectionId:callId,stats:this.callsStats[callId]}),void await this.updateStatisticsForCall(this.callsStats[callId].id,callId,"ended",metrics);this.logger.info("[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall "+callId),this.callsStats[callId]={},metrics.push({connectionId:callId,stats:this.callsStats[callId]});const id=await this.createStatisticsForSession(callId,contactDbId,"pending");this.callsStats[callId].id=id,this.logger.info("[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall success for session "+callId+" with id "+id)}catch(error){this.logger.error("[WebrtcConfigAndUtils] createOrUpdateStatisticsForCall error -- "+error.message)}}async updateStatisticsForCall(id,callId,callState,metrics){try{if(!id)throw new Error("[WebrtcConfigAndUtils] updateStatisticsForCall -- missing id "+id);this.logger.info("[WebrtcConfigAndUtils] updateStatisticsForCall "+callId);const portalURL=config.restServerUrl+"/api/rainbow/metrics/v1.0/";window.adapter.default.browserDetails.browser&&metrics[0]&&metrics[0].stats&&metrics[0].stats.push({browser:window.adapter.default.browserDetails.browser});const response=await fetch(portalURL+"webrtcmetrics/"+id+"/metrics",{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify({metrics:metrics})});if(!response.ok)throw response;if(this.logger.info("[WebrtcConfigAndUtils] updateStatisticsForCall success"),"ended"===callState){this.logger.info("[WebrtcConfigAndUtils] updateStatisticsForCall -- update call state with "+callState);const response2=await fetch(portalURL+"webrtcmetrics/"+id,{method:"PUT",headers:this.authService.getPostHeader(),body:JSON.stringify({callState:callState})});if(!response2.ok)throw response2;this.logger.info("[WebrtcConfigAndUtils] updateStatisticsForCall -- update call state success")}}catch(error){this.logger.error("[WebrtcConfigAndUtils] updateStatisticsForCall failure "+error.errorMsg)}}async createStatisticsForSession(callId,peerId,callState){try{this.logger.info("[WebrtcConfigAndUtils] createStatisticsForSession "+callId);const portalURL=config.restServerUrl+"/api/rainbow/metrics/v1.0/webrtcmetrics",response=await fetch(portalURL,{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify({callId:callId,peerId:peerId,callState:callState})});if(!response.ok)throw response;const result=(await response.json()).data,id=result?result.id:null;return this.logger.info("[WebrtcConfigAndUtils] createStatisticsForSession success"),id&&!this.callsStats[callId]&&(this.callsStats[callId]={}),id}catch(error){throw this.logger.error("[WebrtcConfigAndUtils] createStatisticsForSession failure "+error.errorMsg),error}}async setWebrtcConfiguration(){try{const promises=[];promises.push(this.setIceConfig()),promises.push(this.setCompanyWebrtcConfig()),await Promise.all(promises),this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration -- done")}catch(error){this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration -- error -- proceed anyway")}}async getVirginBrowserMedia(userMedia){try{this.logger.info("[WebrtcConfigAndUtils] getVirginBrowserMedia");const constraints=this.getConstraintsForMedia(userMedia),stream=await navigator.mediaDevices.getUserMedia(constraints);return this.logger.info("[WebrtcConfigAndUtils] getVirginBrowserMedia -- done"),stream.getAudioTracks().length&&this.logger.info("[WebrtcConfigAndUtils] getVirginBrowserMedia audio stream kind "+stream.getAudioTracks()[0].kind+", id "+stream.getAudioTracks()[0].id+", label "+stream.getAudioTracks()[0].label+", readyState "+stream.getAudioTracks()[0].readyState+", enabled "+stream.getAudioTracks()[0].enabled),stream.getVideoTracks().length&&this.logger.info("[WebrtcConfigAndUtils] getVirginBrowserMedia video stream kind "+stream.getVideoTracks()[0].kind+", id "+stream.getVideoTracks()[0].id+", label "+stream.getVideoTracks()[0].label+", readyState "+stream.getVideoTracks()[0].readyState+", enabled "+stream.getVideoTracks()[0].enabled),stream}catch(error){throw this.logger.info("[WebrtcConfigAndUtils] getVirginBrowserMedia -- error -- "+error),error}}getConstraintsForMedia(userMedia){const constraints={};if(this.logger.info("[WebrtcConfigAndUtils] getConstraintsForMedia with medias: "+userMedia),userMedia.indexOf("audio")>=0){const microphone=this.deviceManagementService.getCurrentAudioInputDevice();constraints.audio=!0;let mic="default";microphone&&microphone.deviceId&&(constraints.audio={deviceId:{exact:microphone.deviceId}},mic="id - "+microphone.deviceId+" and label "+microphone.label),this.logger.info("[WebrtcConfigAndUtils] getConstraintsForMedia for microphone "+mic)}if(userMedia.indexOf("video")>=0){constraints.video=!0;const camera=this.deviceManagementService.getCurrentVideoInputDevice();let cam="default";camera&&camera.deviceId&&"default"!==camera.deviceId&&(constraints.video={deviceId:{exact:camera.deviceId}},cam="id - "+camera.deviceId+" and label "+camera.label),this.logger.info("[WebrtcConfigAndUtils] GetUserMedia for camera "+cam)}return constraints.audio||(constraints.audio=!1),constraints.video||(constraints.video=!1),constraints}async setIceConfig(){try{if(this.webrtcConfig&&0!==this.ttl)return this.logger.info("[WebrtcConfigAndUtils] setIceConfig from stored variable"),void(this.xmppService.connection.jingle.ice_config=this.webrtcConfig);this.webrtcConfig&&(this.xmppService.connection.jingle.ice_config=this.webrtcConfig);const result=await this.getIceConfig();if(this.webrtcConfig)this.webrtcConfig.iceServers=result.iceServers,this.webrtcConfig.dc=result.dc;else{this.webrtcConfig=result;"true"===this.settingsService.getSetting("enableDSCP")&&(this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration - DSCP is enabled"),this.webrtcConfig.enableDSCP=!0);"true"===this.settingsService.getSetting("dtx")&&(this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration - DTX is enabled"),this.webrtcConfig.dtx=!0),this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration - Simulcasting is enabled"),this.webrtcConfig.simulcast=!0;"true"===this.settingsService.getSetting("debugWebRTC")&&(this.logger.info("[WebrtcConfigAndUtils] setWebrtcConfiguration - debugWebRTC is enabled"),this.webrtcConfig.debugWeRTC=!0)}this.xmppService.connection.jingle.ice_config=this.webrtcConfig,this.logger.info("[WebrtcConfigAndUtils] setIceConfig from server success !")}catch(error){throw this.logger.error("[WebrtcConfigAndUtils] setIceConfig from server ERROR : "+error),error}}async getIceConfig(){const geoip=this.settingsService.getSetting("geoip");let geoipUrl="";geoip&&(geoipUrl="&geoip="+geoip);const url=config.restServerUrl+"/api/rainbow/geolocation/v1.0/"+"settings/iceservers?nbServers=2"+geoipUrl;try{const response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;const result=await response.json();this.ttl=result.ttl,this.ttl&&(this.ttlTimeout=setTimeout(()=>{this.ttl=0,this.setWebrtcConfiguration()},1e3*result.ttl));const iceServers=result.data,dc=[];return iceServers.forEach((function(element){element.dc&&!dc.includes(element.dc)&&dc.push(element.dc),delete element.dc,delete element.id}),this),this.logger.info(`[WebrtcConfigAndUtils] getIceConfig success -- iceServers number ${iceServers.length} and dc number ${dc.length}`),{iceServers:iceServers,dc:dc}}catch(error){throw this.logger.error("[WebrtcConfigAndUtils] getIceConfig failure -- "+error.message),error}}async setCompanyWebrtcConfig(){try{if(this.companyConfig)return this.logger.info("[WebrtcConfigAndUtils] setCompanyWebrtcConfig from stored variable"),this.xmppService.connection.jingle.company_config=this.companyConfig,void this.setVideoQualityConfigurationForCompany();this.logger.info("[WebrtcConfigAndUtils] setCompanyWebrtcConfig"),this.companyConfig=await this.getCompanyWebrtcConfig(),this.xmppService.connection.jingle.company_config=this.companyConfig,this.setVideoQualityConfigurationForCompany(),this.logger.info("[WebrtcConfigAndUtils] setCompanyWebrtcConfig from server success !")}catch(error){throw this.logger.error("[WebrtcConfigAndUtils] setCompanyWebrtcConfig from server ERROR : "+error),error}}setVideoQualityConfigurationForCompany(){this.companyConfig&&this.companyConfig.video&&(this.videoQualityConfiguration.video.fixedVideoHeight=this.companyConfig.video.height?this.companyConfig.video.height:this.videoQualityConfiguration.video.fixedVideoHeight,this.videoQualityConfiguration.video.fixedVideoWidth=this.companyConfig.video.width?this.companyConfig.video.width:this.videoQualityConfiguration.video.fixedVideoWidth,this.videoQualityConfiguration.video.fixedFrameRate=this.companyConfig.video.frameRate?this.companyConfig.video.frameRate:this.videoQualityConfiguration.video.fixedFrameRate),this.companyConfig&&this.companyConfig.sharing&&(this.videoQualityConfiguration.sharing.fixedVideoHeight=this.companyConfig.sharing.height?this.companyConfig.sharing.height:this.videoQualityConfiguration.sharing.fixedVideoHeight,this.videoQualityConfiguration.sharing.fixedVideoWidth=this.companyConfig.sharing.width?this.companyConfig.sharing.width:this.videoQualityConfiguration.sharing.fixedVideoWidth,this.videoQualityConfiguration.sharing.fixedFrameRate=this.companyConfig.sharing.frameRate?this.companyConfig.sharing.frameRate:this.videoQualityConfiguration.sharing.fixedFrameRate)}async getCompanyWebrtcConfig(){try{const apiURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/settings/webrtc",response=await fetch(apiURL,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;const result=(await response.json()).data;return this.logger.info("[WebrtcConfigAndUtils] getCompanyWebrtcConfig success"),result}catch(error){const msg=error&&error.data?error.data.errorDetails:"Unknown error";if(error&&error.data&&400100===error.data.errorDetailsCode)return this.logger.info("[WebrtcConfigAndUtils] getCompanyWebrtcConfig -- "+msg),{};throw this.logger.error("[WebrtcConfigAndUtils] getCompanyWebrtcConfig failure -- "+msg),error}}}exports.WebrtcConfigAndUtils=WebrtcConfigAndUtils},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ArgumentOutOfRangeError}));var ArgumentOutOfRangeError=function(){function ArgumentOutOfRangeErrorImpl(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return ArgumentOutOfRangeErrorImpl.prototype=Object.create(Error.prototype),ArgumentOutOfRangeErrorImpl}()},function(module,__webpack_exports__,__webpack_require__){"use strict";function isFunction(x){return"function"==typeof x}__webpack_require__.d(__webpack_exports__,"a",(function(){return isFunction}))},function(module,exports,__webpack_require__){"use strict";(function(Buffer){Object.defineProperty(exports,"__esModule",{value:!0});const fileDescriptor_1=__webpack_require__(76),fileDescriptorEventHandler_service_1=__webpack_require__(434),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),fileStorage_service_1=__webpack_require__(34),errorHelper_service_1=__webpack_require__(12),event_service_1=__webpack_require__(11),rxjs_1=__webpack_require__(7),operators_1=__webpack_require__(510),main_service_1=__webpack_require__(15);class LocalImage{release(){URL.revokeObjectURL(this.url)}constructor(fd,blob){blob&&(this.url=URL.createObjectURL(blob)),this.fd=fd}}exports.LocalImage=LocalImage;exports.Capabilities=class{};class FileServerService{constructor(){this.ONE_KILOBYTE=1024,this.ONE_MEGABYTE=1048576,this.ONE_GIGABYTE=1073741824,this.FILE_RANGE=4*this.ONE_MEGABYTE,this.PARALLEL_REQUEST_NB=10,this._started=!1,this.serviceStatusSubject=new rxjs_1.Subject,this.portalURL=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files",this.thumbnailPromises=[],this.thumbnailPreviewPromises=[],this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.centralizedService=null,this.eventService=event_service_1.EventService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.fileReader=new FileReader}get started(){return this._started}set started(value){this._started=value,this.serviceStatusSubject.next(this._started)}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.fileServerService||(win.rainbow.fileServerService=new FileServerService),win.rainbow.fileServerService}async waitTillStarted(){return new Promise(resolve=>{this.started?resolve():this.serviceStatusSubject.pipe(operators_1.filter(started=>!0===started)).subscribe(()=>{resolve()})})}async start(){try{this.logger.info("[FileServerService] === STARTING ===");try{"caches"in self&&(this.cache=await caches.open("RainbowImageCache"))}catch(error){}this.started=!0,this.portalURL=config.restServerUrl+"/api/rainbow/fileserver/v1.0/files",await this.getServercapabilities();try{this.centralizedService=this.mainService.inject("centralizedService")}catch(error){}this.attachHandlers(),this.logger.info("[FileServerService] === STARTED ===")}catch(error){this.logger.error("[FileServerService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info("[FileServerService] === STOPPING ==="),this.started&&(this.started=!1),this.logger.info("[FileServerService] === STOPPED ===")}reconnect(){this.attachHandlers()}attachHandlers(){this.removeHandlers(),this.fileDescriptorEventHandler=fileDescriptorEventHandler_service_1.FileDescriptorEventHandlerService.create(),this.fileMessageHandlerRef||(this.fileMessageHandlerRef=this.xmppService.addHandler(stanza=>(setTimeout(()=>{this.fileDescriptorEventHandler.onManagementMessageReceived(stanza)},250),!0),null,"message","management"))}removeHandlers(){this.fileDescriptorEventHandler=void 0,this.fileMessageHandlerRef=void 0}async getFileDescriptorPublicUrl(fileDescriptor){if(await this.waitTillStarted(),!fileDescriptor)return null;if((!this.centralizedService||!this.centralizedService.isDesktopApp())&&fileDescriptor.publicUrl){this.logger.info("[FileServerService]  >getFileDescriptorPublicUrl: publicUrlExpirationDate="+moment(fileDescriptor.publicUrlExpirationDate).format("DD-MM-YYYY_H_mm_ss")),this.logger.info("[FileServerService]  >getFileDescriptorPublicUrl: isDateExpired="+fileDescriptor.isPublicUrlExpired());const nowDate=moment(),duration=moment.duration(moment(fileDescriptor.publicUrlExpirationDate).diff(nowDate)).asSeconds();if(this.logger.info("[FileServerService] >getFileDescriptorPublicUrl: date expiration="+duration),duration>1800)return fileDescriptor.publicUrl}try{const serverUrl=new URL(this.portalURL+"/"+fileDescriptor.id+"/temporary-url"),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(response.ok){const responseData=await response.json();fileDescriptor.publicUrl=responseData.data.url;const mdate=moment(responseData.data.expirationDate);return mdate.isValid()&&(fileDescriptor.publicUrlExpirationDate=mdate.toDate(),this.logger.info("[FileServerService] >getFileDescriptorPublicUrl: Get PublicUrl Success, publicUrlExpirationDate="+moment(fileDescriptor.publicUrlExpirationDate).format("DD-MM-YYYY_H_mm_ss"))),this.logger.info("[FileServerService] Get PublicUrl Success"),fileDescriptor.publicUrl}return""}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getFileDescriptorPublicUrl");throw this.logger.error("[FileServerService] "+errorInfo.message),errorInfo.error}}async getFileDescriptorUrl(fileDescriptor,thumbnail=!1,cacheEnabled=!1){try{let blob=null;const cacheRequest=new Request(`/rainbowImages/${thumbnail?"thumbnail/":""}${fileDescriptor.id}`);if(cacheEnabled&&this.cache){const cacheResponse=await this.cache.match(cacheRequest);cacheResponse&&(blob=await cacheResponse.blob())}return blob||(thumbnail?blob=fileDescriptor.previewBlob?fileDescriptor.previewBlob:await this.getBlobThumbnailFromFileDescriptor(fileDescriptor):(blob=await this.getBlobFromFileDescriptor(fileDescriptor,!1,null),!fileDescriptor.orientation&&fileDescriptor.isImage()&&await this.setImageOrientationForFileDescriptor(fileDescriptor,blob).catch(()=>{})),cacheEnabled&&this.cache&&this.cache.put(cacheRequest,new Response(blob))),URL.createObjectURL(blob)}catch(error){throw new Error(`getFileDescriptorUrl(${fileDescriptor.id}, ${thumbnail}) -- failure -- ${error}`)}}removeFileDescriptorFromCache(fileDescriptor){this.cache&&(this.cache.delete("/rainbowImages/thumbnail/"+fileDescriptor.id),this.cache.delete("/rainbowImages/"+fileDescriptor.id))}async clearCache(){if(this.cache)try{await caches.delete("RainbowImageCache"),this.cache=await caches.open("RainbowImageCache")}catch(error){}}async getLocalImage(fileDescriptorId,thumbnail,forced=!0){await this.waitTillStarted();try{let fileDescriptor=this.fileStorageService.getFileDescriptorById(fileDescriptorId);fileDescriptor||(fileDescriptor=await this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileDescriptorId)),fileDescriptor.fileName.includes("__rboriginal__")&&(thumbnail=!1);let blob=null;return blob=thumbnail&&fileDescriptor.previewBlob&&!forced?fileDescriptor.previewBlob:thumbnail?await this.getLargeBlobThumbnail(fileDescriptor):await this.getBlobFromFileDescriptor(fileDescriptor,!1,null),new LocalImage(fileDescriptor,blob)}catch(error){throw this.logger.debug(`[fileServerService] getFileLocalURL -- no file descriptor found with ${fileDescriptorId} + " id.`),error}}getLargeBlobThumbnail(fileDescriptor){const url=fileDescriptor.url+"?thumbnail500=true";return this.getBlobFileDescriptorFromUrl(url,fileDescriptor)}async getPartialDataFromServer(fileDescriptor,url,minRange,maxRange,index,__cancelable,currentLoadingRef){try{await this.waitTillStarted();const headers=this.authService.getRequestHeaderWithRange("bytes="+minRange+"-"+maxRange),response=await fetch(url,{method:"GET",headers:headers,signal:fileDescriptor.abortTransferController.signal});if(!response.ok)throw response;const reader=response.body.getReader(),contentLength=Number(response.headers.get("Content-Length"));let receivedLength=0;const chunks=[];let loading=!0;for(;loading;){const{done:done,value:value}=await reader.read();if(done){loading=!1;continue}if(chunks.push(value),receivedLength+=value.length,fileDescriptor.loadingRef!==currentLoadingRef){this.logger.info("[FileServerService] This load has been canceled - NTIA");continue}const percentChunk=Math.floor(100*receivedLength/contentLength);fileDescriptor&&(fileDescriptor.chunkPercentArray[index]=percentChunk,fileDescriptor.updateProgressInfo())}return{data:new Blob(chunks),index:index}}catch(error){if(error instanceof DOMException&&error.code===DOMException.ABORT_ERR)throw this.logger.warn("[FileServerService] "+error.message),error;{const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPartialDataFromServer");throw this.logger.error("[FileServerService] "+errorInfo.message),errorInfo.error}}}getFileStorageService(){return this.fileStorageService}async getBlobThumbnailPreviewFromFileDescriptor(fileDescriptor){await this.waitTillStarted();const url=fileDescriptor.url+"?thumbnail500=true";return this.thumbnailPreviewPromises[fileDescriptor.id]=new Promise((resolve,reject)=>{this.getBlobFileDescriptorFromUrl(url,fileDescriptor).then(blob=>{(fileDescriptor=this.fileStorageService.getFileDescriptorById(fileDescriptor.id)).previewBlob=blob,fileDescriptor.previewDownloaded=!0,fileDescriptor.previewBlobSubject.next(fileDescriptor.previewBlob),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"success",type:"download",fileDesc:fileDescriptor}),delete this.thumbnailPreviewPromises[fileDescriptor.id],resolve(blob)}).catch(error=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"download",message:error.message,fileDesc:fileDescriptor}),delete this.thumbnailPreviewPromises[fileDescriptor.id],reject(error)})}),this.thumbnailPreviewPromises[fileDescriptor.id]}async getBlobThumbnailFromFileDescriptor(fileDescriptor){if(await this.waitTillStarted(),fileDescriptor.thumbnail.isThumbnailAvailable()||fileDescriptor.isImage()||fileDescriptor.recordingFile){let url=fileDescriptor.url;return fileDescriptor.thumbnail.isThumbnailAvailable()?this.thumbnailPreviewPromises[fileDescriptor.id]?(this.logger.info("[FileServerService] getBlobThumbnailFromFileDescriptor preview for "+fileDescriptor.id+" already lauched"),this.thumbnailPreviewPromises[fileDescriptor.id]):this.getBlobThumbnailPreviewFromFileDescriptor(fileDescriptor):this.thumbnailPromises[fileDescriptor.id]?(this.logger.info("[FileServerService] getBlobThumbnailFromFileDescriptor full image update for "+fileDescriptor.id+" already lauched"),this.thumbnailPromises[fileDescriptor.id]):(fileDescriptor.uploadedDate&&(url+="?update="+main_service_1.MainService.MD5(fileDescriptor.uploadedDate)),this.thumbnailPromises[fileDescriptor.id]=new Promise((resolve,reject)=>{this.getBlobFileDescriptorFromUrl(url,fileDescriptor).then(async blob=>{(fileDescriptor=fileDescriptor.recordingFile?await this.fileStorageService.retrieveOneFileDescriptor(fileDescriptor.id):this.fileStorageService.getFileDescriptorById(fileDescriptor.id))&&(fileDescriptor.previewBlob||(fileDescriptor.previewBlob=blob),!fileDescriptor.orientation&&fileDescriptor.isImage()&&await this.setImageOrientationForFileDescriptor(fileDescriptor,blob).catch(()=>{}),fileDescriptor.previewBlobSubject.next(fileDescriptor.previewBlob),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"success",type:"download",fileDesc:fileDescriptor}),delete this.thumbnailPromises[fileDescriptor.id],resolve(blob))}).catch(error=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"download",message:error.message,fileDesc:fileDescriptor}),delete this.thumbnailPromises[fileDescriptor.id],reject(error)})}),this.thumbnailPromises[fileDescriptor.id])}throw new Error("No available thumbnail")}async callAndProcessGetPartialDataFromServer(fileDescriptor,url,minRange,maxRange,index,cancelable,currentLoadingRef,blobArray,actionOnPartialResponse=null){try{const response=await this.getPartialDataFromServer(fileDescriptor,url,minRange,maxRange,index,cancelable,currentLoadingRef);return fileDescriptor.loadingRef!==currentLoadingRef?(this.logger.info("[FileServerService] This load has been canceled - NTIA"),null):(fileDescriptor.updateProgressInfo(),this.logger.info("[FileServerService] getBlobFromFileDescriptor : chunk"+index+" downloaded"),this.logger.debug("[FileServerService] refreshFilePercent: chunkPerformedPercent="+fileDescriptor.chunkPerformedPercent),blobArray[response.index]=response.data,this.writeAvailableChunksInDisk(fileDescriptor,blobArray),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fileDescriptor,cancelable:cancelable}),actionOnPartialResponse?(await actionOnPartialResponse(response,fileDescriptor.id),response.data):response)}catch(error){throw this.logger.info("[FileServerService] error on chunk download="+error),error}}async getBlobFromFileDescriptor(fileDescriptor,cancelable=!0,actionOnPartialResponse=null){if(await this.waitTillStarted(),!fileDescriptor){const err=new Error("[FileServerService] getBlobFromFileDescriptor : missing file descriptor");throw this.logger.warn(err.message),err}if(this.logger.info("[FileServerService] getBlobFromFileDescriptor: "+fileDescriptor.id),fileDescriptor.state!==fileDescriptor_1.FileState.UPLOADED){const err=new Error("[FileServerService] getBlobFromFileDescriptor : file is not in uploaded state="+fileDescriptor.state);throw this.logger.warn(err.message),err}let url=fileDescriptor.url;fileDescriptor.uploadedDate&&(url+="?update="+main_service_1.MainService.MD5(fileDescriptor.uploadedDate));let chunkSize=this.FILE_RANGE;if(Boolean(this.capabilities.maxChunkSizeDownload)&&0!==fileDescriptor.size&&fileDescriptor.size>chunkSize){fileDescriptor.size>=100*chunkSize&&(chunkSize=fileDescriptor.size/100+this.ONE_KILOBYTE,this.logger.debug("[FileServerService] changing chunk size: "+chunkSize));const blobArray=[],requestDataArray=[];fileDescriptor.state=fileDescriptor_1.FileState.DOWNLOADING,fileDescriptor.chunkTotalNumber=Math.ceil(fileDescriptor.size/chunkSize),fileDescriptor.chunkPerformedPercent=0,fileDescriptor.chunkWrittenInDisk=-1,fileDescriptor.chunkPercentArray=new Array(fileDescriptor.chunkTotalNumber),fileDescriptor.chunkPercentArray.fill(0),fileDescriptor.abortTransferController=new AbortController;const currentLoadingRef=++fileDescriptor.loadingRef;fileDescriptor.updateProgressInfo(),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fileDescriptor,cancelable:cancelable}),this.logger.info("[FileServerService] getBlobFromFileDescriptor: need to download "+fileDescriptor.chunkTotalNumber+" chunks");for(let i=0;i<fileDescriptor.chunkTotalNumber;i++){let minRange=i*chunkSize,maxRange=(i+1)*chunkSize-1;maxRange=maxRange<fileDescriptor.size?maxRange:fileDescriptor.size,requestDataArray.push({fileDescriptor:fileDescriptor,url:url,minRange:minRange,maxRange:maxRange,i:i,cancelable:cancelable,currentLoadingRef:currentLoadingRef,blobArray:blobArray,actionOnPartialResponse:actionOnPartialResponse})}return new Promise((resolve,reject)=>{fileDescriptor.fileTransferSubscription=rxjs_1.from(requestDataArray).pipe(operators_1.mergeMap(requestData=>this.callAndProcessGetPartialDataFromServer(requestData.fileDescriptor,requestData.url,requestData.minRange,requestData.maxRange,requestData.i,requestData.cancelable,requestData.currentLoadingRef,requestData.blobArray,requestData.actionOnPartialResponse),this.PARALLEL_REQUEST_NB)).pipe(operators_1.catchError(async errorResponse=>{if(fileDescriptor.loadingRef!==currentLoadingRef)return void this.logger.info("[FileServerService] This load has been canceled - NTIA");fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.chunkTotalNumber=0,fileDescriptor.chunkPerformedPercent=0,errorResponse instanceof DOMException&&errorResponse.code===DOMException.ABORT_ERR&&(this.logger.warn("[FileServerService] "+errorResponse.message),reject(errorResponse));const errorInfo=await this.errorHelperService.getErrorInfo(errorResponse,"getFileDescriptorPublicUrl"),translatedErrorMessage=errorInfo.error&&errorInfo.error.translatedMessage?errorInfo.error.translatedMessage:errorInfo.message;this.logger.error("[FileServerService] error= "+translatedErrorMessage),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"download",message:translatedErrorMessage,fileDesc:fileDescriptor}),reject(errorInfo)})).pipe(operators_1.toArray()).subscribe(()=>{if(fileDescriptor.loadingRef!==currentLoadingRef)return void this.logger.info("[FileServerService] This load has been canceled - NTIA");this.logger.info("[FileServerService] getBlobFromFileDescriptor: promisesCompletion");const blob=new Blob(blobArray,{type:fileDescriptor.typeMIME});this.logger.info("[FileServerService] getBlobFromFileDescriptor success"),fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.chunkTotalNumber=0,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.updateProgressInfo(),this.writeAvailableChunksInDisk(fileDescriptor,blobArray),fileDescriptor.writeStream&&(this.logger.info("[FileServerService] Close WriteStream"),fileDescriptor.writeStream.end()),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{type:"download",fileDesc:fileDescriptor}),resolve(blob)})})}try{fileDescriptor.state=fileDescriptor_1.FileState.DOWNLOADING;const blob=await this.getBlobFileDescriptorFromUrl(url,fileDescriptor);return this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor}),blob}catch(error){throw fileDescriptor.state=fileDescriptor_1.FileState.UPLOADED,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor}),this.logger.info("[FileServerService] arrayPromise : error "+error.message),error}}writeAvailableChunksInDisk(fd,blobArray){if(this.logger.debug("[FileServerService] >writeAvailableChunksInDisk"),!fd.writeStream)return;const start=fd.chunkWrittenInDisk+1;this.logger.debug("[FileServerService] >writeAvailableChunksInDisk : We start at "+start);for(let index=start;index<blobArray.length;index++){if(!blobArray[index]){this.logger.debug("[FileServerService] >writeAvailableChunksInDisk : Blob "+index+" NOT available");break}this.logger.debug("[FileServerService] >writeAvailableChunksInDisk : Blob "+index+" available"),fd.chunkWrittenInDisk=index,fd.writeStream.write(Buffer.from(blobArray[index])),blobArray[index]=null}}async getBlobFileDescriptorFromUrl(url,fileDescriptor){await this.waitTillStarted(),this.logger.debug("[FileServerService] >getBlobFileDescriptorFromUrl: "+url),fileDescriptor.chunkTotalNumber=1,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.chunkPercentArray=new Array(fileDescriptor.chunkTotalNumber),fileDescriptor.chunkPercentArray.fill(0);const currentLoadingRef=++fileDescriptor.loadingRef;fileDescriptor.updateProgressInfo(),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!1});try{const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers,signal:fileDescriptor.abortTransferController.signal});if(!response.ok)throw response;const reader=response.body.getReader(),contentLength=Number(response.headers.get("Content-Length"));let receivedLength=0;const chunks=[];let loading=!0;for(;loading;){const{done:done,value:value}=await reader.read();if(done){loading=!1;continue}if(chunks.push(value),receivedLength+=value.length,fileDescriptor.loadingRef!==currentLoadingRef){this.logger.info("[FileServerService] This load has been canceled - NTIA");continue}const percentChunk=Math.floor(100*receivedLength/contentLength);fileDescriptor&&(fileDescriptor.chunkPercentArray[0]=percentChunk,fileDescriptor.updateProgressInfo())}if(fileDescriptor.loadingRef!==currentLoadingRef)return this.logger.info("[FileServerService] This load has been canceled - NTIA"),null;const blob=new Blob(chunks,{type:fileDescriptor.typeMIME});return fileDescriptor.state=fileDescriptor_1.FileState.UPLOADED,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.updateProgressInfo(),this.logger.debug("[FileServerService] getBlobFileDescriptorFromUrl success"),blob}catch(error){if(fileDescriptor.loadingRef!==currentLoadingRef)return this.logger.info("[FileServerService] This load has been canceled - NTIA"),null;fileDescriptor.state=fileDescriptor_1.FileState.UPLOADED;const errorInfo=await this.errorHelperService.getErrorInfo(error,"getBlobFileDescriptorFromUrl");throw this.logger.error("[FileServerService] "+errorInfo.message),errorInfo.error}}async getBlobUrlAndOrientationByFileDescriptorId(id){const fileDescriptor=this.fileStorageService.getFileDescriptorById(id);if(!fileDescriptor)throw this.logger.error("[FileServerService] getBlobUrlAndOrientationById no file descriptor found for ID "+id),new Error("[FileServerService] getBlobUrlAndOrientationById no file descriptor found");try{const blob=await this.getBlobFromFileDescriptor(fileDescriptor,!1,null),result={id:id,blob:blob,blobUrl:URL.createObjectURL(blob)};if(fileDescriptor.orientation)return result.orientation=fileDescriptor.orientation,fileDescriptor.blobOrientationSubject.next(result),result;try{const orientation=await this.setImageOrientationForFileDescriptor(fileDescriptor,blob);result.orientation=orientation}catch(error){}return fileDescriptor.blobOrientationSubject.next(result),result}catch(error){throw this.logger.error("[FileServerService] Error on getBlobFromFileDescriptor"),error}}setImageOrientationForFileDescriptor(fileDescriptor,blob){return new Promise((resolve,reject)=>{if(!fileDescriptor||!fileDescriptor.isImage())return void reject();const reader=new FileReader;reader.onload=evt=>{fileDescriptor.orientation=1;const arrayBuffer=evt.target.result,view=new DataView(arrayBuffer);if(65496!==view.getUint16(0,!1))return void reject();const length=view.byteLength;let offset=2;for(;offset<length;){if(view.getUint16(offset+2,!1)<=8)return void reject();const marker=view.getUint16(offset,!1);if(offset+=2,65505===marker){if(1165519206!==view.getUint32(offset+=2,!1))return void reject();const little=18761===view.getUint16(offset+=6,!1);offset+=view.getUint32(offset+4,little);const tags=view.getUint16(offset,little);offset+=2;for(let i=0;i<tags;i++)if(274===view.getUint16(offset+12*i,little)){const orientation=view.getUint16(offset+12*i+8,little);return fileDescriptor.orientation=orientation,void resolve(orientation)}}else{if(65280!=(65280&marker))break;offset+=view.getUint16(offset,!1)}}reject()},reader.readAsArrayBuffer(blob)})}async sendPartialDataToServer(uploadRequestData){await this.waitTillStarted();const fileDescriptor=uploadRequestData.fileDescriptor;return this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),new Promise((resolve,reject)=>{const request=new XMLHttpRequest;let serverUrl=new URL(this.portalURL+"/"+fileDescriptor.id),headers=this.authService.getPostHeader("application/octet-stream");fileDescriptor.chunkTotalNumber>1&&(serverUrl=new URL(this.portalURL+"/"+fileDescriptor.id+"/parts/"+uploadRequestData.index),headers=this.authService.getPostHeaderWithRange("bytes "+uploadRequestData.minRange+"-"+uploadRequestData.maxRange+"/"+fileDescriptor.size,"application/octet-stream")),request.open("PUT",serverUrl.href),Object.entries(headers).map(([headerName,headerValue])=>{request.setRequestHeader(headerName,headerValue)}),fileDescriptor.abortXMLHttpRequestArray.push(()=>{request.abort()}),request.upload.addEventListener("progress",eventData=>{const percentCompleted=eventData.loaded/eventData.total*100;fileDescriptor.chunkPercentArray[uploadRequestData.index]=percentCompleted,fileDescriptor.updateProgressInfo()}),request.onload=()=>{if(200!==request.status){const error={errorDetailsCode:request.status,message:request.statusText};reject(error)}const chunkResponse=JSON.parse(request.responseText).data;this.logger.info("[FileServerService] sendPartialDataToServer success"),fileDescriptor.chunkPercentArray[uploadRequestData.index]=100,fileDescriptor.updateProgressInfo(),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),resolve(chunkResponse)},request.onerror=async error=>{const errorInfo=await this.errorHelperService.getErrorInfo(error,"sendPartialDataToServer");this.logger.error("[FileServerService] "+errorInfo.message),reject(errorInfo.error)},request.addEventListener("abort",()=>{this.logger.warn(`[FileServerService] Request aborted for ${fileDescriptor.id} - part: ${uploadRequestData.index}`),resolve(null)}),request.send(uploadRequestData.blob)})}async uploadAFileByChunk(fileDescriptor,file){await this.waitTillStarted(),this.logger.info("[FileServerService] >uploadAFileByChunk");let chunkSize=this.FILE_RANGE;file.size>=100*chunkSize&&(chunkSize=Math.round(file.size/100+this.ONE_KILOBYTE),this.logger.debug("[FileServerService] changing chunk size: "+chunkSize));const chunkTotalNumber=Math.ceil(file.size/chunkSize),requestDataArray=[];fileDescriptor.chunkTotalNumber=chunkTotalNumber,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.chunkPercentArray=new Array(fileDescriptor.chunkTotalNumber),fileDescriptor.chunkPercentArray.fill(0),fileDescriptor.state=fileDescriptor_1.FileState.UPLOADING;for(let index=0;index<chunkTotalNumber;index++){const minRange=index*chunkSize;let maxRange=(index+1)*chunkSize-1;maxRange=maxRange<file.size?maxRange:file.size;const blob=file.slice(minRange,maxRange+1);requestDataArray.push({fileDescriptor:fileDescriptor,blob:blob,minRange:minRange,maxRange:maxRange,index:index,nbOfChunks:chunkTotalNumber})}const requestDataArray$=rxjs_1.from(requestDataArray);return new Promise((resolve,reject)=>{fileDescriptor.fileTransferSubscription=requestDataArray$.pipe(operators_1.mergeMap(requestData=>this.sendPartialDataToServer(requestData),this.PARALLEL_REQUEST_NB)).pipe(operators_1.catchError(async errorResponse=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor});try{const errorInfo=await this.errorHelperService.getErrorInfo(errorResponse,"uploadAFileByChunk"),translatedErrorMessage=errorInfo.error&&errorInfo.error.translatedMessage?errorInfo.error.translatedMessage:errorInfo.message;throw this.logger.error("[FileServerService] error= "+translatedErrorMessage),reject(errorInfo),errorInfo}catch(__error){throw reject(errorResponse),errorResponse}})).pipe(operators_1.toArray()).subscribe(async()=>{try{if(fileDescriptor.chunkTotalNumber>1){const serverUrl=new URL(this.portalURL+"/"+fileDescriptor.id+"/parts/end"),headers=this.authService.getPostHeader("application/octet-stream"),response=await fetch(serverUrl.href,{method:"PUT",headers:headers});if(!response.ok)throw response}this.logger.info("[FileServerService] uploadAFileByChunk success"),fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.fileToSend=null,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"success",type:"upload",fileDesc:fileDescriptor}),this.fileStorageService.removeUploadingFileDescriptor(fileDescriptor),this.fileStorageService.orderDocuments(),this.fileStorageService.retrieveUserConsumption(),resolve(fileDescriptor)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"uploadAFileByChunk");throw this.logger.error("[FileServerService] "+errorInfo.message),errorInfo.error}},()=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor}),this.fileStorageService.removeUploadingFileDescriptor(fileDescriptor),this.fileStorageService.retrieveUserConsumption()})})}async uploadFile(fileDescriptor){await this.waitTillStarted();const file=fileDescriptor.fileToSend;this.logger.info("[FileServerService] >uploadFile");let chunkSize=this.FILE_RANGE;file.size>=100*chunkSize&&(chunkSize=Math.round(file.size/100+this.ONE_KILOBYTE),this.logger.debug("[FileServerService] changing chunk size: "+chunkSize));const chunkTotalNumber=Math.ceil(file.size/chunkSize),requestDataArray=[];fileDescriptor.chunkTotalNumber=chunkTotalNumber,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.chunkPercentArray=new Array(fileDescriptor.chunkTotalNumber),fileDescriptor.chunkPercentArray.fill(0),fileDescriptor.state=fileDescriptor_1.FileState.UPLOADING;for(let index=0;index<chunkTotalNumber;index++){const minRange=index*chunkSize;let maxRange=(index+1)*chunkSize-1;maxRange=maxRange<file.size?maxRange:file.size;const blob=file.slice(minRange,maxRange+1);requestDataArray.push({fileDescriptor:fileDescriptor,blob:blob,minRange:minRange,maxRange:maxRange,index:index,nbOfChunks:chunkTotalNumber})}const requestDataArray$=rxjs_1.from(requestDataArray);return new Promise((resolve,reject)=>{fileDescriptor.fileTransferSubscription=requestDataArray$.pipe(operators_1.mergeMap(requestData=>this.sendPartialDataToServer(requestData),this.PARALLEL_REQUEST_NB)).pipe(operators_1.catchError(async errorResponse=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor});try{const errorInfo=await this.errorHelperService.getErrorInfo(errorResponse,"uploadFile"),translatedErrorMessage=errorInfo.error&&errorInfo.error.translatedMessage?errorInfo.error.translatedMessage:errorInfo.message;throw this.logger.error("[FileServerService] error= "+translatedErrorMessage),reject(errorInfo),errorInfo}catch(__error){throw reject(errorResponse),errorResponse}})).pipe(operators_1.toArray()).subscribe(async()=>{try{if(fileDescriptor.chunkTotalNumber>1){const serverUrl=new URL(this.portalURL+"/"+fileDescriptor.id+"/parts/end"),headers=this.authService.getPostHeader("application/octet-stream"),response=await fetch(serverUrl.href,{method:"PUT",headers:headers});if(!response.ok)throw response}this.logger.info("[FileServerService] uploadFile success"),fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,fileDescriptor.chunkPerformedPercent=0,fileDescriptor.fileToSend=null,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"success",type:"upload",fileDesc:fileDescriptor}),this.fileStorageService.removeUploadingFileDescriptor(fileDescriptor),this.fileStorageService.orderDocuments(),this.fileStorageService.retrieveUserConsumption(),resolve(fileDescriptor)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"uploadFile");throw this.logger.error("[FileServerService] "+errorInfo.message),errorInfo.error}},()=>{this.eventService.publish("ON_FILE_TRANSFER_EVENT",{result:"failure",type:"upload",fileDesc:fileDescriptor}),this.fileStorageService.removeUploadingFileDescriptor(fileDescriptor),this.fileStorageService.retrieveUserConsumption()})})}cancelCurrentFiletransfer(fileDescriptorId){const fileDesc=this.fileStorageService.getFileDescriptorById(fileDescriptorId);fileDesc&&(fileDesc.abortTransferController&&fileDesc.abortTransferController.abort(),fileDesc.abortXMLHttpRequestArray&&fileDesc.abortXMLHttpRequestArray.length&&fileDesc.abortXMLHttpRequestArray.map(func=>{func()}),fileDesc.fileTransferSubscription&&fileDesc.fileTransferSubscription.unsubscribe(),fileDesc.state===fileDescriptor_1.FileState.UPLOADING?fileDesc.state=fileDescriptor_1.FileState.NOT_UPLOADED:fileDesc.state===fileDescriptor_1.FileState.DOWNLOADING&&(fileDesc.state=fileDescriptor_1.FileState.UPLOADED),fileDesc.progressSubject.next({}))}async getServercapabilities(){try{await this.waitTillStarted();const serverUrl=new URL(config.restServerUrl+"/api/rainbow/fileserver/v1.0/capabilities"),headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(!response.ok)throw response;return this.capabilities=(await response.json()).data,this.logger.info("[FileServerService] getServercapabilities -- success -- "+this.capabilities),this.capabilities}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServercapabilities");throw this.logger.error("[fileStorageService] "+errorInfo.message),errorInfo.error}}}exports.FileServerService=FileServerService}).call(this,__webpack_require__(98).Buffer)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return EmptyError}));var EmptyError=function(){function EmptyErrorImpl(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return EmptyErrorImpl.prototype=Object.create(Error.prototype),EmptyErrorImpl}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return mergeMap})),__webpack_require__.d(__webpack_exports__,"a",(function(){return flatMap}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_map__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),_observable_from__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(23),_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(3);function mergeMap(project,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),"function"==typeof resultSelector?function(source){return source.pipe(mergeMap((function(a,i){return Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__.a)(project(a,i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_1__.a)((function(b,ii){return resultSelector(a,b,i,ii)})))}),concurrent))}:("number"==typeof resultSelector&&(concurrent=resultSelector),function(source){return source.lift(new MergeMapOperator(project,concurrent))})}var MergeMapOperator=function(){function MergeMapOperator(project,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),this.project=project,this.concurrent=concurrent}return MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.concurrent))},MergeMapOperator}(),MergeMapSubscriber=function(_super){function MergeMapSubscriber(destination,project,concurrent){void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY);var _this=_super.call(this,destination)||this;return _this.project=project,_this.concurrent=concurrent,_this.hasCompleted=!1,_this.buffer=[],_this.active=0,_this.index=0,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(MergeMapSubscriber,_super),MergeMapSubscriber.prototype._next=function(value){this.active<this.concurrent?this._tryNext(value):this.buffer.push(value)},MergeMapSubscriber.prototype._tryNext=function(value){var result,index=this.index++;try{result=this.project(value,index)}catch(err){return void this.destination.error(err)}this.active++,this._innerSub(result)},MergeMapSubscriber.prototype._innerSub=function(ish){var innerSubscriber=new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__.a(this),destination=this.destination;destination.add(innerSubscriber);var innerSubscription=Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__.c)(ish,innerSubscriber);innerSubscription!==innerSubscriber&&destination.add(innerSubscription)},MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()},MergeMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue)},MergeMapSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--,buffer.length>0?this._next(buffer.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},MergeMapSubscriber}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__.b),flatMap=mergeMap},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return fromArray}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(129),_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(91);function fromArray(input,scheduler){return scheduler?Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__.a)(input,scheduler):new _Observable__WEBPACK_IMPORTED_MODULE_0__.a(Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__.a)(input))}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AsyncScheduler}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Scheduler__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(101),AsyncScheduler=function(_super){function AsyncScheduler(SchedulerAction,now){void 0===now&&(now=_Scheduler__WEBPACK_IMPORTED_MODULE_1__.a.now);var _this=_super.call(this,SchedulerAction,(function(){return AsyncScheduler.delegate&&AsyncScheduler.delegate!==_this?AsyncScheduler.delegate.now():now()}))||this;return _this.actions=[],_this.active=!1,_this.scheduled=void 0,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(AsyncScheduler,_super),AsyncScheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),AsyncScheduler.delegate&&AsyncScheduler.delegate!==this?AsyncScheduler.delegate.schedule(work,delay,state):_super.prototype.schedule.call(this,work,delay,state)},AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active)actions.push(action);else{var error;this.active=!0;do{if(error=action.execute(action.state,action.delay))break}while(action=actions.shift());if(this.active=!1,error){for(;action=actions.shift();)action.unsubscribe();throw error}}},AsyncScheduler}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AsyncSubject}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(14),_Subscription__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(10),AsyncSubject=function(_super){function AsyncSubject(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.value=null,_this.hasNext=!1,_this.hasCompleted=!1,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(AsyncSubject,_super),AsyncSubject.prototype._subscribe=function(subscriber){return this.hasError?(subscriber.error(this.thrownError),_Subscription__WEBPACK_IMPORTED_MODULE_2__.a.EMPTY):this.hasCompleted&&this.hasNext?(subscriber.next(this.value),subscriber.complete(),_Subscription__WEBPACK_IMPORTED_MODULE_2__.a.EMPTY):_super.prototype._subscribe.call(this,subscriber)},AsyncSubject.prototype.next=function(value){this.hasCompleted||(this.value=value,this.hasNext=!0)},AsyncSubject.prototype.error=function(error){this.hasCompleted||_super.prototype.error.call(this,error)},AsyncSubject.prototype.complete=function(){this.hasCompleted=!0,this.hasNext&&_super.prototype.next.call(this,this.value),_super.prototype.complete.call(this)},AsyncSubject}(_Subject__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib_es6=__webpack_require__(0),Action_Action=function(_super){function Action(scheduler,work){return _super.call(this)||this}return tslib_es6.a(Action,_super),Action.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),this},Action}(__webpack_require__(10).a);__webpack_require__.d(__webpack_exports__,"a",(function(){return AsyncAction_AsyncAction}));var AsyncAction_AsyncAction=function(_super){function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this.pending=!1,_this}return tslib_es6.a(AsyncAction,_super),AsyncAction.prototype.schedule=function(state,delay){if(void 0===delay&&(delay=0),this.closed)return this;this.state=state;var id=this.id,scheduler=this.scheduler;return null!=id&&(this.id=this.recycleAsyncId(scheduler,id,delay)),this.pending=!0,this.delay=delay,this.id=this.id||this.requestAsyncId(scheduler,this.id,delay),this},AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),setInterval(scheduler.flush.bind(scheduler,this),delay)},AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&this.delay===delay&&!1===this.pending)return id;clearInterval(id)},AsyncAction.prototype.execute=function(state,delay){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var error=this._execute(state,delay);if(error)return error;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},AsyncAction.prototype._execute=function(state,delay){var errored=!1,errorValue=void 0;try{this.work(state)}catch(e){errored=!0,errorValue=!!e&&e||new Error(e)}if(errored)return this.unsubscribe(),errorValue},AsyncAction.prototype._unsubscribe=function(){var id=this.id,scheduler=this.scheduler,actions=scheduler.actions,index=actions.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==index&&actions.splice(index,1),null!=id&&(this.id=this.recycleAsyncId(scheduler,id,null)),this.delay=null},AsyncAction}(Action_Action)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isNumeric}));var _isArray__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(17);function isNumeric(val){return!Object(_isArray__WEBPACK_IMPORTED_MODULE_0__.a)(val)&&val-parseFloat(val)+1>=0}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LogLevel=exports.RefreshMode=exports.TypeErrorType=exports.ContainerFitStatus=exports.ValidationEvent=exports.ValidationPhase=exports.ContainerStyle=exports.InputTextStyle=exports.ActionIconPlacement=exports.FillMode=exports.Orientation=exports.ShowCardActionMode=exports.ImageStyle=exports.ActionAlignment=exports.VerticalAlignment=exports.HorizontalAlignment=exports.TextColor=exports.Spacing=exports.FontType=exports.TextWeight=exports.TextSize=exports.SizeUnit=exports.ImageSize=exports.Size=exports.ActionMode=exports.ActionStyle=void 0;var ActionStyle=function(){function ActionStyle(){}return ActionStyle.Default="default",ActionStyle.Positive="positive",ActionStyle.Destructive="destructive",ActionStyle}();exports.ActionStyle=ActionStyle;var ActionMode=function(){function ActionMode(){}return ActionMode.Primary="primary",ActionMode.Secondary="secondary",ActionMode}();exports.ActionMode=ActionMode,function(Size){Size[Size.Auto=0]="Auto",Size[Size.Stretch=1]="Stretch",Size[Size.Small=2]="Small",Size[Size.Medium=3]="Medium",Size[Size.Large=4]="Large"}(exports.Size||(exports.Size={})),function(ImageSize){ImageSize[ImageSize.Small=0]="Small",ImageSize[ImageSize.Medium=1]="Medium",ImageSize[ImageSize.Large=2]="Large"}(exports.ImageSize||(exports.ImageSize={})),function(SizeUnit){SizeUnit[SizeUnit.Weight=0]="Weight",SizeUnit[SizeUnit.Pixel=1]="Pixel"}(exports.SizeUnit||(exports.SizeUnit={})),function(TextSize){TextSize[TextSize.Small=0]="Small",TextSize[TextSize.Default=1]="Default",TextSize[TextSize.Medium=2]="Medium",TextSize[TextSize.Large=3]="Large",TextSize[TextSize.ExtraLarge=4]="ExtraLarge"}(exports.TextSize||(exports.TextSize={})),function(TextWeight){TextWeight[TextWeight.Lighter=0]="Lighter",TextWeight[TextWeight.Default=1]="Default",TextWeight[TextWeight.Bolder=2]="Bolder"}(exports.TextWeight||(exports.TextWeight={})),function(FontType){FontType[FontType.Default=0]="Default",FontType[FontType.Monospace=1]="Monospace"}(exports.FontType||(exports.FontType={})),function(Spacing){Spacing[Spacing.None=0]="None",Spacing[Spacing.Small=1]="Small",Spacing[Spacing.Default=2]="Default",Spacing[Spacing.Medium=3]="Medium",Spacing[Spacing.Large=4]="Large",Spacing[Spacing.ExtraLarge=5]="ExtraLarge",Spacing[Spacing.Padding=6]="Padding"}(exports.Spacing||(exports.Spacing={})),function(TextColor){TextColor[TextColor.Default=0]="Default",TextColor[TextColor.Dark=1]="Dark",TextColor[TextColor.Light=2]="Light",TextColor[TextColor.Accent=3]="Accent",TextColor[TextColor.Good=4]="Good",TextColor[TextColor.Warning=5]="Warning",TextColor[TextColor.Attention=6]="Attention"}(exports.TextColor||(exports.TextColor={})),function(HorizontalAlignment){HorizontalAlignment[HorizontalAlignment.Left=0]="Left",HorizontalAlignment[HorizontalAlignment.Center=1]="Center",HorizontalAlignment[HorizontalAlignment.Right=2]="Right"}(exports.HorizontalAlignment||(exports.HorizontalAlignment={})),function(VerticalAlignment){VerticalAlignment[VerticalAlignment.Top=0]="Top",VerticalAlignment[VerticalAlignment.Center=1]="Center",VerticalAlignment[VerticalAlignment.Bottom=2]="Bottom"}(exports.VerticalAlignment||(exports.VerticalAlignment={})),function(ActionAlignment){ActionAlignment[ActionAlignment.Left=0]="Left",ActionAlignment[ActionAlignment.Center=1]="Center",ActionAlignment[ActionAlignment.Right=2]="Right",ActionAlignment[ActionAlignment.Stretch=3]="Stretch"}(exports.ActionAlignment||(exports.ActionAlignment={})),function(ImageStyle){ImageStyle[ImageStyle.Default=0]="Default",ImageStyle[ImageStyle.Person=1]="Person"}(exports.ImageStyle||(exports.ImageStyle={})),function(ShowCardActionMode){ShowCardActionMode[ShowCardActionMode.Inline=0]="Inline",ShowCardActionMode[ShowCardActionMode.Popup=1]="Popup"}(exports.ShowCardActionMode||(exports.ShowCardActionMode={})),function(Orientation){Orientation[Orientation.Horizontal=0]="Horizontal",Orientation[Orientation.Vertical=1]="Vertical"}(exports.Orientation||(exports.Orientation={})),function(FillMode){FillMode[FillMode.Cover=0]="Cover",FillMode[FillMode.RepeatHorizontally=1]="RepeatHorizontally",FillMode[FillMode.RepeatVertically=2]="RepeatVertically",FillMode[FillMode.Repeat=3]="Repeat"}(exports.FillMode||(exports.FillMode={})),function(ActionIconPlacement){ActionIconPlacement[ActionIconPlacement.LeftOfTitle=0]="LeftOfTitle",ActionIconPlacement[ActionIconPlacement.AboveTitle=1]="AboveTitle"}(exports.ActionIconPlacement||(exports.ActionIconPlacement={})),function(InputTextStyle){InputTextStyle[InputTextStyle.Text=0]="Text",InputTextStyle[InputTextStyle.Tel=1]="Tel",InputTextStyle[InputTextStyle.Url=2]="Url",InputTextStyle[InputTextStyle.Email=3]="Email",InputTextStyle[InputTextStyle.Password=4]="Password"}(exports.InputTextStyle||(exports.InputTextStyle={}));var ContainerStyle=function(){function ContainerStyle(){}return ContainerStyle.Default="default",ContainerStyle.Emphasis="emphasis",ContainerStyle.Accent="accent",ContainerStyle.Good="good",ContainerStyle.Attention="attention",ContainerStyle.Warning="warning",ContainerStyle}();exports.ContainerStyle=ContainerStyle,function(ValidationPhase){ValidationPhase[ValidationPhase.Parse=0]="Parse",ValidationPhase[ValidationPhase.ToJSON=1]="ToJSON",ValidationPhase[ValidationPhase.Validation=2]="Validation"}(exports.ValidationPhase||(exports.ValidationPhase={})),function(ValidationEvent){ValidationEvent[ValidationEvent.Hint=0]="Hint",ValidationEvent[ValidationEvent.ActionTypeNotAllowed=1]="ActionTypeNotAllowed",ValidationEvent[ValidationEvent.CollectionCantBeEmpty=2]="CollectionCantBeEmpty",ValidationEvent[ValidationEvent.Deprecated=3]="Deprecated",ValidationEvent[ValidationEvent.ElementTypeNotAllowed=4]="ElementTypeNotAllowed",ValidationEvent[ValidationEvent.InteractivityNotAllowed=5]="InteractivityNotAllowed",ValidationEvent[ValidationEvent.InvalidPropertyValue=6]="InvalidPropertyValue",ValidationEvent[ValidationEvent.MissingCardType=7]="MissingCardType",ValidationEvent[ValidationEvent.PropertyCantBeNull=8]="PropertyCantBeNull",ValidationEvent[ValidationEvent.TooManyActions=9]="TooManyActions",ValidationEvent[ValidationEvent.UnknownActionType=10]="UnknownActionType",ValidationEvent[ValidationEvent.UnknownElementType=11]="UnknownElementType",ValidationEvent[ValidationEvent.UnsupportedCardVersion=12]="UnsupportedCardVersion",ValidationEvent[ValidationEvent.DuplicateId=13]="DuplicateId",ValidationEvent[ValidationEvent.UnsupportedProperty=14]="UnsupportedProperty",ValidationEvent[ValidationEvent.RequiredInputsShouldHaveLabel=15]="RequiredInputsShouldHaveLabel",ValidationEvent[ValidationEvent.RequiredInputsShouldHaveErrorMessage=16]="RequiredInputsShouldHaveErrorMessage",ValidationEvent[ValidationEvent.Other=17]="Other"}(exports.ValidationEvent||(exports.ValidationEvent={})),function(ContainerFitStatus){ContainerFitStatus[ContainerFitStatus.FullyInContainer=0]="FullyInContainer",ContainerFitStatus[ContainerFitStatus.Overflowing=1]="Overflowing",ContainerFitStatus[ContainerFitStatus.FullyOutOfContainer=2]="FullyOutOfContainer"}(exports.ContainerFitStatus||(exports.ContainerFitStatus={})),function(TypeErrorType){TypeErrorType[TypeErrorType.UnknownType=0]="UnknownType",TypeErrorType[TypeErrorType.ForbiddenType=1]="ForbiddenType"}(exports.TypeErrorType||(exports.TypeErrorType={})),function(RefreshMode){RefreshMode[RefreshMode.Disabled=0]="Disabled",RefreshMode[RefreshMode.Manual=1]="Manual",RefreshMode[RefreshMode.Automatic=2]="Automatic"}(exports.RefreshMode||(exports.RefreshMode={})),function(LogLevel){LogLevel[LogLevel.Info=0]="Info",LogLevel[LogLevel.Warning=1]="Warning",LogLevel[LogLevel.Error=2]="Error"}(exports.LogLevel||(exports.LogLevel={}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),logger_service_1=__webpack_require__(4),webrtcConfigAndUtils_1=__webpack_require__(44),settings_service_1=__webpack_require__(18),xmpp_service_1=__webpack_require__(9);class SdkApis{constructor(setSetSinkIdForAudioElement=null,getCurrentAudioInputDevice=null,getCurrentAudioOutputDevice=null,getCurrentVideoInputDevice=null,setCurrentVideoInputDevice=null,setCurrentAudioOutputDevice=null,setCurrentAudioInputDevice=null,getAllVideoInputDevices=null,getAllAudioInputDevices=null,getAllAudioOutputDevices=null){this.setSetSinkIdForAudioElement=setSetSinkIdForAudioElement,this.getCurrentAudioInputDevice=getCurrentAudioInputDevice,this.getCurrentAudioOutputDevice=getCurrentAudioOutputDevice,this.getCurrentVideoInputDevice=getCurrentVideoInputDevice,this.setCurrentVideoInputDevice=setCurrentVideoInputDevice,this.setCurrentAudioOutputDevice=setCurrentAudioOutputDevice,this.setCurrentAudioInputDevice=setCurrentAudioInputDevice,this.getAllVideoInputDevices=getAllVideoInputDevices,this.getAllAudioInputDevices=getAllAudioInputDevices,this.getAllAudioOutputDevices=getAllAudioOutputDevices}}class DeviceManagementService{constructor(){this._sdkApis=Object.keys(new SdkApis),this.RAINBOW_ONAUDIOVIDEODEVICEACCESSERROR="rainbowonaudiovideodeviceaccesserror",this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE="rainbowonaudiovideodevicelistupdate",this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED="rainbowonnewaudiovideodeviceselected",this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED="rainbowonnewsecondaryoutputdeviceselected",this.logger=logger_service_1.LoggerService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.rxSubject=new rxjs_1.Subject,this.deviceWatcher=null,this.audioInputDevices=[],this.audioOutputDevices=[],this.videoInputDevices=[],this.currentAudioInputDevice=null,this.currentAudioOutputDevice=null,this.currentVideoInputDevice=null,this.currentSecondaryOutputDevice=null,this.getUserMediaForAudioDone=!1,this.getUserMediaForVideoDone=!1,this.started=!1,this.devicesToIgnore=["display","screen","amd ","monitor","écran","lenovo usb audio","(hdmi)"," dac("],this.inputDevicesToAcceptEvenWhenNotDefault=["plantronics","jabra","konftel","sennheiser"]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.deviceManagementService||(win.rainbow.deviceManagementService=new DeviceManagementService),win.rainbow.deviceManagementService}async start(){this.started||(this.checkDeviceList(),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{try{"ON_XMPP_CONNECTED"===event.name&&"RECONNECTION"===event.data.reason&&(this.logger.info("[DeviceManagementService] XMPP Connection state event : RECONNECTION"),this.setGlobalTagSinkId(!0))}catch{}}),this.started=!0)}async stop(){this.deviceWatcher&&(this.deviceWatcher=null),this.xmppConnectionSubscription&&(this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=null),navigator.mediaDevices&&navigator.mediaDevices.ondevicechange&&(navigator.mediaDevices.ondevicechange=null),this.started=!1}subscribe(handler){return this.rxSubject.subscribe(handler)}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}arrayContains(array,textSearched){return array.some((function(element){return textSearched.indexOf(element)>-1}))}getHashFromLabel(label){const first=label.lastIndexOf("("),last=label.lastIndexOf(")");let result="";return first&&last&&(result=label.substring(first+1,last),-1===result.indexOf(":")&&(result="")),result}compareHashInLabel(labelA,labelB){const hashA=this.getHashFromLabel(labelA),hashB=this.getHashFromLabel(labelB);return hashA&&hashB&&hashA===hashB}async setSetSinkIdForAudioElement(element,outputDevice){if(!element)throw new Error("[DeviceManagementService] setSetSinkIdForAudioElement -- no HTML Audio Element received !");if(element.setSinkId)if(outputDevice){if(element.sinkId!==outputDevice.deviceId)try{this.logger.debug("[DeviceManagementService] -- setSetSinkIdForAudioElement to new device -- "+outputDevice.deviceId),await element.setSinkId(outputDevice.deviceId),element.load&&element.load()}catch(error){return void this.logger.error("[DeviceManagementService] -- setSetSinkIdForAudioElement error -- "+error)}}else this.logger.debug("[DeviceManagementService] setSetSinkIdForAudioElement -- no output device or setSinkId does not exist !")}getCurrentAudioInputDevice(){return this.currentAudioInputDevice}setCurrentAudioInputDevice(device){if(!device||"audioinput"!==device.kind)throw new Error("[DeviceManagementService] setCurrentAudioInputDevice -- wrong parameter !");this.currentAudioInputDevice=device,this.logger.debug(`[DeviceManagementService] API setCurrentAudioInputDevice ${this.currentAudioInputDevice.deviceId} -- ${this.currentAudioInputDevice.label}`),this.settingsService.setSetting("handFreeInputDeviceName",this.currentAudioInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:device.kind})}getAllAudioInputDevices(){return this.audioInputDevices}getCurrentAudioOutputDevice(){return this.currentAudioOutputDevice}setCurrentAudioOutputDevice(device){if(!device||"audiooutput"!==device.kind)throw new Error("[DeviceManagementService] setCurrentAudioOutputDevice -- wrong parameter !");this.currentAudioOutputDevice=device,this.settingsService.setSetting("handFreeOutputDeviceName",this.currentAudioOutputDevice.label),this.logger.debug(`[DeviceManagementService] API setCurrentAudioOutputDevice ${this.currentAudioOutputDevice.deviceId} -- ${this.currentAudioOutputDevice.label}`),this.setGlobalTagSinkId(),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:device.kind})}getAllAudioOutputDevices(){return this.audioOutputDevices}getCurrentVideoInputDevice(){return this.currentVideoInputDevice}setCurrentVideoInputDevice(device){if(!device||"videoinput"!==device.kind)throw new Error("[DeviceManagementService] setCurrentVideoInputDevice -- wrong parameter !");this.currentVideoInputDevice=device,this.logger.debug(`[DeviceManagementService] API setCurrentVideoInputDevice ${this.currentVideoInputDevice.deviceId} -- ${this.currentVideoInputDevice.label}`),this.settingsService.setSetting("cameraUsed",this.currentVideoInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:device.kind})}getAllVideoInputDevices(){return this.videoInputDevices}getCurrentSecondaryOutputDevice(){return this.currentSecondaryOutputDevice}setCurrentSecondaryOutputDevice(device){if(!device||"audiooutput"!==device.kind)throw new Error("[DeviceManagementService] setCurrentSecondaryOutputDevice -- wrong parameter !");this.currentSecondaryOutputDevice=device,this.logger.debug(`[DeviceManagementService] API setCurrentSecondaryOutputDevice ${this.currentSecondaryOutputDevice.deviceId} -- ${this.currentSecondaryOutputDevice.label}`),this.settingsService.setSetting("ringingSpeaker",this.currentSecondaryOutputDevice.label),this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED)}startDeviceWatcher(){navigator&&navigator.mediaDevices&&!navigator.mediaDevices.ondevicechange&&(navigator.mediaDevices.ondevicechange=event=>{this.logger.info("[DeviceManagementService] ondevicechange detected "+JSON.stringify(event)),this.deviceWatcher||(this.deviceWatcher=setTimeout(()=>{this.checkDeviceList(),this.deviceWatcher=null},500))})}async checkDeviceList(){let tempStream=null;if(window.adapter&&"firefox"===window.adapter.default.browserDetails.browser&&(this.getUserMediaForVideoDone||this.getUserMediaForAudioDone))try{tempStream=await navigator.mediaDevices.getUserMedia({audio:!0,video:!1})}catch{}const devices=await navigator.mediaDevices.enumerateDevices();this.logger.info("[DeviceManagementService] devices brut list "+JSON.stringify(devices));const tempAudioInputDevices=[],tempAudioOutputDevices=[],tempVideoInputDevices=[];devices.forEach(device=>{device.deviceId&&device.label&&("audioinput"!==device.kind&&"audiooutput"!==device.kind||(this.getUserMediaForAudioDone=!0),"videoinput"===device.kind&&(this.getUserMediaForVideoDone=!0)),"audioinput"===device.kind&&tempAudioInputDevices.push(device),"audiooutput"===device.kind&&tempAudioOutputDevices.push(device),"videoinput"===device.kind&&tempVideoInputDevices.push(device)}),this.getUserMediaForAudioDone||this.getUserMediaForVideoDone||!tempAudioInputDevices.length||!tempVideoInputDevices.length?this.getUserMediaForAudioDone||!tempAudioInputDevices.length?this.getUserMediaForVideoDone||!tempVideoInputDevices.length?(this.startDeviceWatcher(),this.updateCurrentAudioInputDevices(tempAudioInputDevices),this.updateCurrentAudioOutputDevices(tempAudioOutputDevices),this.updateCurrentVideoInputDevices(tempVideoInputDevices),tempStream&&this.webrtcConfigAndUtils.disableMediaStream(tempStream)):this.testGetUserMedia([],tempVideoInputDevices):this.testGetUserMedia(tempAudioInputDevices,[]):this.testGetUserMedia(tempAudioInputDevices,tempVideoInputDevices)}async testGetUserMedia(audioInputDevices,videoInputDevices){let shouldTestAudio=!0,shouldTestVideo=!0;audioInputDevices.length||(this.logger.info("[DeviceManagementService] testGetUserMedia -- ignore audio test... "),shouldTestAudio=!1),videoInputDevices.length||(this.logger.info("[DeviceManagementService] testGetUserMedia -- inore video test... "),shouldTestVideo=!1),this.logger.info(`[DeviceManagementService] testGetUserMedia for audio ${shouldTestAudio} and video ${shouldTestVideo}`);try{const stream=await navigator.mediaDevices.getUserMedia({audio:shouldTestAudio,video:shouldTestVideo});this.webrtcConfigAndUtils.disableMediaStream(stream)}catch(error){this.logger.warn("[DeviceManagementService] testGetUserMedia -- default devices does not work -- "+error),(error&&error.indexOf&&-1!==error.indexOf("NotAllowedError")||error&&error.toString&&-1!==error.toString().indexOf("NotAllowedError"))&&this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICEACCESSERROR)}this.getUserMediaForVideoDone=shouldTestVideo,this.getUserMediaForAudioDone=shouldTestAudio,this.logger.info(`[DeviceManagementService] testGetUserMedia results after test: for audio ${this.getUserMediaForAudioDone} and video ${this.getUserMediaForVideoDone} -- success`),this.checkDeviceList()}isDeviceSelectedByDefaultByOS(newDevice,deviceList){let isDefault=!1,systemHasDefaultDevices=!1;return deviceList.forEach(device=>{"default"!==device.deviceId&&"communications"!==device.deviceId||(systemHasDefaultDevices=!0,newDevice.groupId===device.groupId&&newDevice.label&&device.label&&-1!==device.label.indexOf(newDevice.label)&&(isDefault=!0))}),!systemHasDefaultDevices||isDefault}updateCurrentAudioInputDevice(tempAudioInputDevices){let defaultAudioInputDevice=null;tempAudioInputDevices.forEach(device=>{"default"===device.deviceId&&(defaultAudioInputDevice=device,this.currentAudioInputDevice||(this.currentAudioInputDevice=defaultAudioInputDevice)),"communications"===device.deviceId&&this.currentAudioInputDevice&&"default"===this.currentAudioInputDevice.deviceId&&(this.currentAudioInputDevice=device),this.currentAudioInputDevice&&this.currentAudioInputDevice.groupId===device.groupId&&("default"!==this.currentAudioInputDevice.deviceId&&"communications"!==this.currentAudioInputDevice.deviceId?-1===device.label.toLowerCase().indexOf("stereo")&&(this.currentAudioInputDevice=device):this.currentAudioInputDevice=device)}),this.currentAudioInputDevice||(this.currentAudioInputDevice=tempAudioInputDevices[0])}updateCurrentAudioInputDevices(tempAudioInputDevices=[]){if(this.audioInputDevices.length!==tempAudioInputDevices.length&&this.logger.info(`[DeviceManagementService] updateCurrentAudioInputDevices -- current length: ${this.audioInputDevices.length} -- new length: ${tempAudioInputDevices.length}`),this.audioInputDevices.length||tempAudioInputDevices.length){if(!this.audioInputDevices.length&&tempAudioInputDevices.length){this.audioInputDevices=tempAudioInputDevices,this.currentAudioInputDevice=null;const savedDeviceName=this.settingsService.getSetting("handFreeInputDeviceName");savedDeviceName&&this.audioInputDevices.forEach(device=>{device.label===savedDeviceName&&(this.currentAudioInputDevice=device,this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (start-up) from settings -- "+savedDeviceName))}),this.currentAudioInputDevice||this.updateCurrentAudioInputDevice(this.audioInputDevices),this.currentAudioInputDevice?this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (start-up) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label):this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (start-up) is now null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audioinput",action:"added"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput"})}else if(this.audioInputDevices.length&&!tempAudioInputDevices.length)this.audioInputDevices=[],this.currentAudioInputDevice=null,this.logger.info("[DeviceManagementService] currentAudioInputDevice is now null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audioinput",action:"removed"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput"});else if(this.audioInputDevices.length===tempAudioInputDevices.length){let currentAudioInputDeviceChanged=!1,currentAudioInputDeviceListChanged=!1,defaultAudioInputDeviceChanged=!1;this.audioInputDevices.forEach(inputDevice=>{const result=tempAudioInputDevices.find(device=>inputDevice.deviceId===device.deviceId);result||(currentAudioInputDeviceListChanged=!0),result||inputDevice.deviceId!==this.currentAudioInputDevice.deviceId||(currentAudioInputDeviceChanged=!0)}),this.audioInputDevices.forEach(inputDevice=>{if("default"===inputDevice.deviceId||"communications"===inputDevice.deviceId){const result=tempAudioInputDevices.find(device=>inputDevice.deviceId===device.deviceId);result&&result.label!==inputDevice.label&&(currentAudioInputDeviceListChanged=!0,this.currentAudioInputDevice&&result.deviceId===this.currentAudioInputDevice.deviceId&&(defaultAudioInputDeviceChanged=!0))}}),this.audioInputDevices=tempAudioInputDevices,this.currentAudioInputDevice&&this.audioInputDevices.forEach(device=>{device.deviceId===this.currentAudioInputDevice.deviceId&&(this.currentAudioInputDevice=device)}),currentAudioInputDeviceListChanged&&(this.logger.info("[DeviceManagementService] currentAudioInputDeviceListChanged has changed"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audioinput",action:"updated"})),defaultAudioInputDeviceChanged&&!currentAudioInputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (id change) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput"})),currentAudioInputDeviceChanged&&(this.currentAudioInputDevice=null,this.updateCurrentAudioInputDevice(this.audioInputDevices),this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (id change) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput"}))}else if(this.audioInputDevices.length>tempAudioInputDevices.length){let currentAudioInputDeviceChanged=!1,defaultAudioInputDeviceChanged=!1;this.audioInputDevices.forEach(inputDevice=>{const result=tempAudioInputDevices.find(device=>inputDevice.deviceId===device.deviceId);result||inputDevice.deviceId!==this.currentAudioInputDevice.deviceId?result&&inputDevice.deviceId===this.currentAudioInputDevice.deviceId&&result.label!==this.currentAudioInputDevice.label&&(defaultAudioInputDeviceChanged=!0):currentAudioInputDeviceChanged=!0}),this.audioInputDevices=tempAudioInputDevices,this.currentAudioInputDevice&&this.audioInputDevices.forEach(device=>{device.deviceId===this.currentAudioInputDevice.deviceId&&(this.currentAudioInputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audioinput",action:"removed"}),defaultAudioInputDeviceChanged&&!currentAudioInputDeviceChanged?(this.currentAudioInputDevice&&this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (after current device disconnected) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput",plugOut:!0})):currentAudioInputDeviceChanged&&(this.currentAudioInputDevice=null,this.updateCurrentAudioInputDevice(this.audioInputDevices),this.currentAudioInputDevice?this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (after current device disconnected) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label):this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (after current device disconnected) is now null"),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput",plugOut:!0}))}else if(this.audioInputDevices.length<tempAudioInputDevices.length){let currentAudioInputDeviceChanged=!1;tempAudioInputDevices.forEach(inputDevice=>{if(!this.audioInputDevices.find(device=>inputDevice.deviceId===device.deviceId)&&inputDevice.deviceId!==this.currentAudioInputDevice.deviceId){const label=inputDevice.label?inputDevice.label.toLowerCase():"";(this.isDeviceSelectedByDefaultByOS(inputDevice,tempAudioInputDevices)||this.arrayContains(this.inputDevicesToAcceptEvenWhenNotDefault,label))&&label&&-1===label.indexOf("webcam")&&-1===label.indexOf("camera")&&-1===label.indexOf("konftel cam")&&(this.currentAudioInputDevice=inputDevice,currentAudioInputDeviceChanged=!0)}}),this.audioInputDevices=tempAudioInputDevices,this.currentAudioInputDevice&&this.audioInputDevices.forEach(device=>{device.deviceId===this.currentAudioInputDevice.deviceId&&(this.currentAudioInputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audioinput",action:"added"}),currentAudioInputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentAudioInputDevice has changed (new device connected) "+this.currentAudioInputDevice.deviceId+" -- "+this.currentAudioInputDevice.label),this.settingsService.setSetting("handFreeInputDeviceName",this.currentAudioInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audioinput",plugIn:!0}))}}else this.logger.info("[DeviceManagementService] checkDeviceList -- no audio input device detected !")}updateCurrentAudioOutputDevice(tempAudioOutputDevices){let defaultAudioOutputDevice=null;this.currentAudioInputDevice&&this.currentAudioInputDevice.label&&tempAudioOutputDevices.forEach(outputDevice=>{const groupIdFound=this.currentAudioInputDevice.groupId===outputDevice.groupId,sameNameFound=this.currentAudioInputDevice.label===outputDevice.label||this.compareHashInLabel(this.currentAudioInputDevice.label,outputDevice.label);(groupIdFound||sameNameFound)&&(this.currentAudioOutputDevice=outputDevice)}),this.currentAudioOutputDevice||tempAudioOutputDevices.forEach(device=>{"default"===device.deviceId&&(defaultAudioOutputDevice=device,this.currentAudioOutputDevice||(this.currentAudioOutputDevice=defaultAudioOutputDevice)),"communications"===device.deviceId&&this.currentAudioOutputDevice&&"default"===this.currentAudioOutputDevice.deviceId&&(this.currentAudioOutputDevice=device),this.currentAudioOutputDevice&&this.currentAudioOutputDevice.groupId===device.groupId&&(this.currentAudioOutputDevice=device)}),this.currentAudioOutputDevice||(this.currentAudioOutputDevice=tempAudioOutputDevices[0]),this.currentAudioOutputDevice&&this.setGlobalTagSinkId()}async setGlobalTagSinkId(forceRefresh=!1){const device=this.currentAudioOutputDevice,element=document.getElementById("globalAudioTag");if(element)if(device&&element.setSinkId){if(!forceRefresh&&element.sinkId===device.deviceId)return this.logger.debug("[DeviceManagementService] setGlobalTagSinkId -- Already using the same device id"),void(element.load&&element.load());try{this.logger.debug("[DeviceManagementService] -- setGlobalTagSinkId to new device -- "+device.deviceId),element.srcObject&&!element.srcObject.active&&this.webrtcConfigAndUtils.RTC.clearMediaStream([document.getElementById("globalAudioTag")]),await element.setSinkId(device.deviceId),element.load&&element.load()}catch(error){this.logger.error("[DeviceManagementService] -- setGlobalTagSinkId error -- "+error);let anotherDevice=this.audioOutputDevices.find(output=>"default"!==output.deviceId&&"communications"!==output.deviceId&&output.deviceId!==device.deviceId);anotherDevice||(anotherDevice=this.audioOutputDevices[0]),this.logger.debug("[DeviceManagementService] setGlobalTagSinkId -- Try to set another device "+anotherDevice.deviceId),await element.setSinkId(anotherDevice.deviceId),this.logger.debug("[DeviceManagementService] setGlobalTagSinkId -- Try to set to the selected device "+device.deviceId),await element.setSinkId(device.deviceId),element.load&&element.load()}}else this.logger.warn("[DeviceManagementService] setGlobalTagSinkId -- no output device or setSinkId does not exist !");else this.logger.debug("[DeviceManagementService] setGlobalTagSinkId -- globalAudioTag is missing")}updateCurrentAudioOutputDevices(tempAudioOutputDevices=[]){if(this.audioOutputDevices.length!==tempAudioOutputDevices.length&&this.logger.info(`[DeviceManagementService] updateCurrentAudioOutputDevices -- current length: ${this.audioOutputDevices.length} -- new length: ${tempAudioOutputDevices.length}`),this.audioOutputDevices.length||tempAudioOutputDevices.length){if(!this.audioOutputDevices.length&&tempAudioOutputDevices.length){this.audioOutputDevices=tempAudioOutputDevices,this.currentAudioOutputDevice=null;const savedDeviceName=this.settingsService.getSetting("handFreeOutputDeviceName");savedDeviceName&&this.audioOutputDevices.forEach(device=>{device.label===savedDeviceName&&(this.currentAudioOutputDevice=device,this.setGlobalTagSinkId(),this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (start-up) from settings -- "+savedDeviceName))}),this.currentAudioOutputDevice||this.updateCurrentAudioOutputDevice(this.audioOutputDevices),this.currentAudioOutputDevice?this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (start-up) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label):this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (start-up) is now null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audiooutput",action:"added"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput"});const savedSecondaryDeviceName=this.settingsService.getSetting("ringingSpeaker");savedSecondaryDeviceName&&this.audioOutputDevices.forEach(device=>{device.label===savedSecondaryDeviceName&&(this.currentSecondaryOutputDevice=device,this.logger.info("[DeviceManagementService] currentSecondaryOutputDevice has changed (start-up) from settings "+device.label))}),this.currentSecondaryOutputDevice||(this.currentSecondaryOutputDevice=this.audioOutputDevices[0]),this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED)}else if(this.audioOutputDevices.length&&!tempAudioOutputDevices.length)this.audioOutputDevices=[],this.currentAudioOutputDevice=null,this.currentSecondaryOutputDevice=null,this.logger.info("[DeviceManagementService] currentAudioOutputDevice is now null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audiooutput",action:"removed"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput"}),this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED);else if(this.audioOutputDevices.length===tempAudioOutputDevices.length){let currentAudioOutputDeviceChanged=!1,currentAudioOutputDeviceListChanged=!1,defaultAudioOutputDeviceChanged=!1,currentSecondaryAudioOutputDeviceChanged=!1;this.audioOutputDevices.forEach(outputDevice=>{const result=tempAudioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId);result||(currentAudioOutputDeviceListChanged=!0),result||outputDevice.deviceId!==this.currentAudioOutputDevice.deviceId||(currentAudioOutputDeviceChanged=!0)}),this.audioOutputDevices.forEach(outputDevice=>{if("default"===outputDevice.deviceId||"communications"===outputDevice.deviceId){const result=tempAudioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId);result&&result.label!==outputDevice.label&&(currentAudioOutputDeviceListChanged=!0,this.currentAudioOutputDevice&&result.deviceId===this.currentAudioOutputDevice.deviceId&&(defaultAudioOutputDeviceChanged=!0),this.currentSecondaryOutputDevice&&result.deviceId===this.currentSecondaryOutputDevice.deviceId&&(currentSecondaryAudioOutputDeviceChanged=!0))}}),this.audioOutputDevices=tempAudioOutputDevices,this.currentAudioOutputDevice&&this.audioOutputDevices.forEach(device=>{device.deviceId===this.currentAudioOutputDevice.deviceId&&(this.currentAudioOutputDevice=device),this.currentSecondaryOutputDevice&&device.deviceId===this.currentSecondaryOutputDevice.deviceId&&(this.currentSecondaryOutputDevice=device)}),currentAudioOutputDeviceListChanged&&(this.logger.info("[DeviceManagementService] currentAudioOutputDeviceListChanged has changed"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audiooutput",action:"updated"})),defaultAudioOutputDeviceChanged&&!currentAudioOutputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (id change) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput"})),currentSecondaryAudioOutputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentSecondaryAudioOutputDeviceChanged has changed (id change) "+this.currentSecondaryOutputDevice.deviceId+" -- "+this.currentSecondaryOutputDevice.label),this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED)),currentAudioOutputDeviceChanged&&(this.currentAudioOutputDevice=null,this.updateCurrentAudioOutputDevice(this.audioOutputDevices),this.currentAudioOutputDevice?this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (id change) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label):this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (id change) is now null"),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput"}))}else if(this.audioOutputDevices.length>tempAudioOutputDevices.length){let currentAudioOutputDeviceChanged=!1,defaultAudioOutputDeviceChanged=!1,defaultSecondaryAudioOuputDeviceChanged=!1;this.audioOutputDevices.forEach(outputDevice=>{const result=tempAudioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId);result||outputDevice.deviceId!==this.currentAudioOutputDevice.deviceId?result&&outputDevice.deviceId===this.currentAudioOutputDevice.deviceId&&result.label!==this.currentAudioOutputDevice.label&&(defaultAudioOutputDeviceChanged=!0):currentAudioOutputDeviceChanged=!0});let currentSecondaryAudioOutputDeviceChanged=!1;this.currentSecondaryOutputDevice&&this.audioOutputDevices.forEach(outputDevice=>{const result=tempAudioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId);result||outputDevice.deviceId!==this.currentSecondaryOutputDevice.deviceId?result&&outputDevice.deviceId===this.currentSecondaryOutputDevice.deviceId&&result.label!==this.currentSecondaryOutputDevice.label&&(defaultSecondaryAudioOuputDeviceChanged=!0):currentSecondaryAudioOutputDeviceChanged=!0}),this.audioOutputDevices=tempAudioOutputDevices,this.currentAudioOutputDevice&&this.audioOutputDevices.forEach(device=>{device.deviceId===this.currentAudioOutputDevice.deviceId&&(this.currentAudioOutputDevice=device),this.currentSecondaryOutputDevice&&device.deviceId===this.currentSecondaryOutputDevice.deviceId&&(this.currentSecondaryOutputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audiooutput",action:"removed"}),defaultAudioOutputDeviceChanged&&!currentAudioOutputDeviceChanged?(this.currentAudioOutputDevice&&this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (after current device disconnected) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput",plugOut:!0})):currentAudioOutputDeviceChanged&&(this.currentAudioOutputDevice=null,this.updateCurrentAudioOutputDevice(this.audioOutputDevices),this.currentAudioOutputDevice?this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (after current device disconnected) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label):this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (after current device disconnected) is now null"),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput",plugOut:!0})),defaultSecondaryAudioOuputDeviceChanged&&!currentSecondaryAudioOutputDeviceChanged?this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED):currentSecondaryAudioOutputDeviceChanged&&(this.currentSecondaryOutputDevice=this.audioOutputDevices[0],this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED))}else if(this.audioOutputDevices.length<tempAudioOutputDevices.length){let currentAudioOutputDeviceChanged=!1;tempAudioOutputDevices.forEach(outputDevice=>{if(!this.audioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId)&&outputDevice.deviceId!==this.currentAudioOutputDevice.deviceId){const groupIdFound=this.audioInputDevices.find(inputDevice=>inputDevice.groupId===outputDevice.groupId),sameNameFound=this.audioInputDevices.find(inputDevice=>inputDevice.label&&outputDevice.label&&(inputDevice.label===outputDevice.label||this.compareHashInLabel(inputDevice.label,outputDevice.label))),label=outputDevice.label?outputDevice.label.toLowerCase():"";groupIdFound||sameNameFound?(this.currentAudioInputDevice.groupId===outputDevice.groupId||this.currentAudioInputDevice.label&&(this.currentAudioInputDevice.label===outputDevice.label||this.compareHashInLabel(this.currentAudioInputDevice.label,outputDevice.label)))&&(this.currentAudioOutputDevice=outputDevice,currentAudioOutputDeviceChanged=!0):this.isDeviceSelectedByDefaultByOS(outputDevice,tempAudioOutputDevices)&&!this.arrayContains(this.devicesToIgnore,label)&&(-1!==label.indexOf("stereo")&&this.currentAudioInputDevice&&this.currentAudioInputDevice.label&&-1!==this.currentAudioInputDevice.label.toLowerCase().indexOf("ag audio")||(this.currentAudioOutputDevice=outputDevice,currentAudioOutputDeviceChanged=!0))}});let defaultSecondaryAudioOuputDeviceChanged=!1;this.currentSecondaryOutputDevice&&this.audioOutputDevices.forEach(outputDevice=>{const result=tempAudioOutputDevices.find(device=>outputDevice.deviceId===device.deviceId);result&&outputDevice.deviceId===this.currentSecondaryOutputDevice.deviceId&&result.label!==this.currentSecondaryOutputDevice.label&&(defaultSecondaryAudioOuputDeviceChanged=!0)}),this.audioOutputDevices=tempAudioOutputDevices,this.currentAudioOutputDevice&&this.audioOutputDevices.forEach(device=>{device.deviceId===this.currentAudioOutputDevice.deviceId&&(this.currentAudioOutputDevice=device),this.currentSecondaryOutputDevice&&device.deviceId===this.currentSecondaryOutputDevice.deviceId&&(this.currentSecondaryOutputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"audiooutput",action:"added"}),currentAudioOutputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentAudioOutputDevice has changed (new device connected) "+this.currentAudioOutputDevice.deviceId+" -- "+this.currentAudioOutputDevice.label),this.settingsService.setSetting("handFreeOutputDeviceName",this.currentAudioOutputDevice.label),this.setGlobalTagSinkId(),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"audiooutput",plugIn:!0})),defaultSecondaryAudioOuputDeviceChanged&&this.sendEvent(this.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED)}}else this.logger.info("[DeviceManagementService] checkDeviceList -- no audio output device detected !")}updateCurrentVideoInputDevice(tempVideoInputDevices){let defaulVideoInputDevice=null;tempVideoInputDevices.forEach(device=>{"default"===device.deviceId&&(defaulVideoInputDevice=device,this.currentVideoInputDevice||(this.currentVideoInputDevice=defaulVideoInputDevice)),this.currentVideoInputDevice&&this.currentVideoInputDevice.groupId===device.groupId&&(this.currentVideoInputDevice=device)}),this.currentVideoInputDevice||(this.currentVideoInputDevice=tempVideoInputDevices[0])}updateCurrentVideoInputDevices(tempVideoInputDevices=[]){if(this.videoInputDevices.length||tempVideoInputDevices.length){if(this.videoInputDevices.length!==tempVideoInputDevices.length&&this.logger.info(`[DeviceManagementService] updateCurrentVideoInputDevices -- current length: ${this.videoInputDevices.length} -- new length: ${tempVideoInputDevices.length}`),!this.videoInputDevices.length&&tempVideoInputDevices.length){if(this.videoInputDevices=tempVideoInputDevices,this.currentVideoInputDevice=null,!this.currentVideoInputDevice){const savedDeviceName=this.settingsService.getSetting("cameraUsed");savedDeviceName&&this.videoInputDevices.forEach(device=>{device.label===savedDeviceName&&(this.currentVideoInputDevice=device,this.logger.info("[DeviceManagementService] currentVideoInputDevice has changed from settings"))})}this.currentVideoInputDevice||this.updateCurrentVideoInputDevice(tempVideoInputDevices),this.currentVideoInputDevice?this.logger.info("[DeviceManagementService] new currentVideoInputDevice (start-up) "+this.currentVideoInputDevice.deviceId+" -- "+this.currentVideoInputDevice.label):this.logger.info("[DeviceManagementService] new currentVideoInputDevice (start-up) is null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"videoinput",action:"added"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"videoinput"})}else if(this.videoInputDevices.length&&!tempVideoInputDevices.length)this.videoInputDevices=[],this.currentVideoInputDevice=null,this.logger.info("[DeviceManagementService] currentVideoInputDevice is now null"),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"videoinput",action:"removed"}),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"videoinput"});else if(this.videoInputDevices.length>tempVideoInputDevices.length){let currentVideoInputDeviceChanged=!1;this.videoInputDevices.forEach(videoDevice=>{tempVideoInputDevices.find(device=>videoDevice.deviceId===device.deviceId)||videoDevice.deviceId!==this.currentVideoInputDevice.deviceId||(currentVideoInputDeviceChanged=!0)}),this.videoInputDevices=tempVideoInputDevices,!currentVideoInputDeviceChanged&&this.currentVideoInputDevice&&this.videoInputDevices.forEach(device=>{device.deviceId===this.currentVideoInputDevice.deviceId&&(this.currentVideoInputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"videoinput",action:"removed"}),currentVideoInputDeviceChanged&&(this.currentVideoInputDevice=null,this.updateCurrentVideoInputDevice(tempVideoInputDevices),this.currentVideoInputDevice?this.logger.info("[DeviceManagementService] new currentVideoInputDevice has changed (after current device disconnected) "+this.currentVideoInputDevice.deviceId+" -- "+this.currentVideoInputDevice.label):this.logger.info("[DeviceManagementService] new currentVideoInputDevice has changed (after current device disconnected) is null"),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"videoinput"}))}else if(this.videoInputDevices.length<tempVideoInputDevices.length){let currentVideoInputDeviceChanged=!1;tempVideoInputDevices.forEach(videoDevice=>{this.videoInputDevices.find(device=>videoDevice.deviceId===device.deviceId)||videoDevice.deviceId===this.currentVideoInputDevice.deviceId||videoDevice.label&&-1===videoDevice.label.toLowerCase().indexOf("facetime")&&-1===videoDevice.label.toLowerCase().indexOf("virtual")&&(this.currentVideoInputDevice=videoDevice,currentVideoInputDeviceChanged=!0)}),this.videoInputDevices=tempVideoInputDevices,!currentVideoInputDeviceChanged&&this.currentVideoInputDevice&&this.videoInputDevices.forEach(device=>{device.deviceId===this.currentVideoInputDevice.deviceId&&(this.currentVideoInputDevice=device)}),this.sendEvent(this.RAINBOW_ONAUDIOVIDEODEVICELISTUPDATE,{kind:"videoinput",action:"added"}),currentVideoInputDeviceChanged&&(this.logger.info("[DeviceManagementService] currentVideoInputDevice has changed (new device connected) "+this.currentVideoInputDevice.deviceId+" -- "+this.currentVideoInputDevice.label),this.settingsService.setSetting("cameraUsed",this.currentVideoInputDevice.label),this.sendEvent(this.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED,{kind:"videoinput",plugIn:!0}))}}else this.logger.info("[DeviceManagementService] checkDeviceList -- no video input device detected !")}}exports.DeviceManagementService=DeviceManagementService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),call_model_1=__webpack_require__(29),settings_service_1=__webpack_require__(18),logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),main_service_1=__webpack_require__(15),profile_service_1=__webpack_require__(13),anonymizer_1=__webpack_require__(66),contact_service_1=__webpack_require__(6),webrtcP2P_service_1=__webpack_require__(35),errorHelper_service_1=__webpack_require__(12),event_service_1=__webpack_require__(11),telephonySipWise_service_1=__webpack_require__(437),telephonyHybridEventHandler_1=__webpack_require__(439),telephonySipWiseEventHandler_1=__webpack_require__(459);class TelephonyService{constructor(){this.calls={},this.pendingMakeCalls=[],this.agentStatus={},this.currentPgiObject={},this.starting=!1,this.started=!1,this.isOxo=!1,this.isOxe=!1,this.isThirdParty=!1,this.forwardObject={},this.nomadicObject={},this.listeners=[],this.subscriptions=[],this.CALLSERVICE_NS="urn:xmpp:pbxagent:callservice:1",this.sipWise=!1,this.rxSubject=new rxjs_1.Subject,this.settingsService=settings_service_1.SettingsService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.telephonyServiceSipWise=telephonySipWise_service_1.TelephonyServiceSipWise.getInstance(),this.makingCall=!1,this.mediaPillarConfigured=!1,this.mediaPillarRemoteExtension="",this.mediaPillarAlive=!1,this.nomadicAnswerNotTakedIntoAccount=!1,this.sipWiseUserGroupsData={},this.telAPIPromiseInProgress=[],this.cliOptions=[],this.currentCli=null}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.telephonyService||(win.rainbow.telephonyService=new TelephonyService),win.rainbow.telephonyService}async start(){this.logger.info("[telephonyService] [TEL] === STARTING ==="),this.setSipWise(this.isSipWiseRoot()),this.isSipWise()&&(this.logger.info("[telephonyService] starting in sipWise mode"),this.telephonyServiceSipWise.start()),this.calls={},this.pendingMakeCalls=[],this.starting=this.started=!1,this.agentStatus={phoneApi:"disconnected",xmppAgent:"stopped",agentVersion:"unknown",featureVVM:!1,featureOXOMULTICALL:!1},this.voicemailNumber=this.contactService.userContact.voicemailNumber,this.pbxId=this.contactService.userContact.pbxId,this.makingCall=!1,this.telAPIPromiseInProgress=[],this.forwardObject={forwardType:"Desactivation",forwardTo:void 0,pbxForwardType:"no_forward"},this.nomadicObject={},this.nomadicAnswerNotTakedIntoAccount=!1,this.sipWiseUserGroupsData={myMemberId:"",managerAssistGrId:0,managerId:0,managerName:"",managerStatus:"",managerForward:"unknow",assistantId:0,assistantName:"",assistantStatus:"",isSomeMngAssistAsHG:!1,huntingGroupNb:0,managerAssistantNb:0,managerAssistantMyAssistList:[],managerAssistantMyMngList:[],sipWiseUserGroupsList:[],initialized:!1},this.isBasicCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_BASIC_CALL),this.isSecondCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_SECOND_CALL),this.isTransferAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_TRANSFER_CALL),this.isConferenceAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CONFERENCE_CALL),this.isVMDeflectCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_DEFLECT_CALL),this.voiceMailFeatureEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL),this.isForwardEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CALL_FORWARD),this.isNomadicEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_NOMADIC),this.isWebrtcBlindTransferAllowed=!0,this.isAdhocConferenceAllowed=this.contactService.userContact.webrtcAudioEnabled&&(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED)||this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_ADD_PARTICIPANT))&&this.contactService.userContact.roomsEnabled,this.isMixPstnWebRtcAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MIX_WEBRTC_PSTN_CALLS)||config.mixwebrtcpstn,this.userJidTel=this.authService.jidTel,this.portalURL=config.restServerUrl+"/api/rainbow/telephony/v1.0/",this.subscriptions.push(this.xmppService.subscribeToContactEvents(event=>{"ON_CONTACT_PRESENCE_EVENT"===event.name&&this.onTelPresenceChange(event.data)})),this.subscriptions.push(this.xmppService.subscribeToConnectionEvents(event=>{try{"ON_XMPP_DISCONNECTED"===event.name&&(this.starting=this.started=!1,this.telephonyOfflineCallManagement(),this.eventService.publish("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped"))}catch(_err){}})),this.telephonyEventHandler=this.isSipWise()?telephonySipWiseEventHandler_1.TelephonySipWiseEventHandler.create(this):telephonyHybridEventHandler_1.TelephonyHybridEventHandler.create(this),this.logger.info("[telephonyService] starting on user jidTel: "+this.userJidTel),this.contactService.userContact&&(this.logger.info("[telephonyService] [TEL] starting user name: "+this.contactService.userContact.nameForLogs+", full jid: "+this.contactService.userContact.fullJid),this.logger.info("[telephonyService] [TEL] starting phonePbx: "+anonymizer_1.default(this.contactService.userContact.phonePbx)+", phonePro: "+anonymizer_1.default(this.contactService.userContact.phonePro)+", voicemailNumber: "+anonymizer_1.default(this.contactService.userContact.voicemailNumber)+", pbxId: "+this.contactService.userContact.pbxId)),this.contactService.userContact&&(this.contactService.userContact.telStatus?(this.logger.info("[telephonyService] start with my existing telephony presence "+this.contactService.userContact.telStatus+" of user contact ("+this.contactService.userContact.jidtel+") "),this.onTelPresenceChange({jid:this.userJidTel+"/phone",status:this.contactService.userContact.telStatus})):(this.logger.info("[telephonyService] Subscribe and wait for my telephony presence ("+this.contactService.userContact.jidtel+")"),this.contactService.sendSubscribeInvitation(this.contactService.userContact.jidtel))),this.listeners.push(this.eventService.subscribe("ON_ACTIVE_CONVERSATION_CHANGE",this.onActiveConversationChange.bind(this))),this.listeners.push(this.eventService.subscribe("ON_CALL_UPDATED_EVENT",this.onCallUpdated.bind(this))),this.listeners.push(this.eventService.subscribe("PUT_ACTIVE_TELEPHONY_CALL_ON_HOLD",this.putActiveTelephonyCallOnHold.bind(this))),this.listeners.push(this.eventService.subscribe("ON_WEBRTCGATEWAY_CONFIG_CHANGE",this.onMediaPillarConfigChanged.bind(this))),this.listeners.push(this.eventService.subscribe("ON_WEBRTCGATEWAY_STATE_CHG",this.onMediaPillarStateChanged.bind(this))),this.listeners.push(this.eventService.subscribe("TELEPHONY_MAKE_SIMPLE_CALL_TO_NUMBER",(__event,number)=>{this.makeCall(null,number)})),this.listeners.push(this.eventService.subscribe("ON_SIPWISE_HUNTING_GROUP_UPDATE_EVENT",()=>{this.onUpdateHuntingGroupsData()}))}attachHandlers(){this.logger.info("[telephonyService] attachHandlers"),this.telephonyEventHandler.attachHandlers()}async stop(){let listener;for(this.logger.info(""),this.logger.info("[telephonyService] [TEL] === STOPPING ==="),this.starting=this.started=!1,this.userJidTel=null,this.calls=null,this.telAPIPromiseInProgress=[],this.telephonyEventHandler&&(this.telephonyEventHandler.detachHandlers(),this.telephonyEventHandler=null);listener=this.listeners.pop();)listener();this.currentPgiObject={},this.subscriptions&&this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.logger.info("[telephonyService] [TEL] === STOPPED ==="),this.eventService.publish("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped")}async onTelPresenceChange(attr){if(this.contactService.isTelJid(attr.jid)){const ressourceFromJid=this.contactService.getResourceFromJid(attr.jid);if("phone"!==ressourceFromJid&&"pcg2"!==ressourceFromJid)return!0;const jidIm=this.contactService.getImJid(attr.jid);if(!jidIm)return!0;const status=attr.status;if(this.contactService.isUserContactJid(jidIm))if(this.telAPIPromiseInProgress=[],"unavailable"===status||"offline"===status)this.logger.info("[telephonyService] received my telephony presence -- "+status),this.starting=this.started=!1,this.telephonyOfflineCallManagement(),this.eventService.publish("ON_TELEPHONY_STATUS_CHANGED_EVENT","stopped"),this.logger.info("[telephonyService] [TEL] === STOPPED ===");else if(!this.started&&!this.starting){this.logger.info("[telephonyService] received my telephony presence -- "+status),this.starting=!0;try{if(await this.getAgentStatus(),this.attachHandlers(),this.isSipWise())this.sipWiseUserGroupsDataClear(),this.telephonyServiceSipWise.emergencyCallDataClear(),this.telephonyServiceSipWise.routingDataClear(),await this.getTelephonyState(!1);else if(this.isNomadicEnabled){await this.getNomadicStatus();const snapshotSecondary=this.nomadicObject.featureActivated&&this.nomadicObject.modeActivated&&!this.nomadicObject.makeCallInitiatorIsMain;await this.getTelephonyState(snapshotSecondary)}else await this.getTelephonyState(!1);this.isForwardEnabled&&this.getForwardStatus(),this.logger.info("[telephonyService] [TEL] === STARTED ==="),this.started=!0,this.starting=!1,this.eventService.publish("ON_TELEPHONY_STATUS_CHANGED_EVENT","started")}catch(error){this.starting=!1,this.logger.error("[telephonyService] receive telephony presence but error in initialization - "+(error?error.message:"unknown error")),setTimeout(()=>{this.logger.debug("[telephonyService] -- try to reinit after 10sec timeout"),this.launchTelephonyInitilization()},1e4)}}}return!0}launchTelephonyInitilization(){this.contactService.userContact&&this.contactService.userContact.telStatus?(this.logger.info("[telephonyService] launchTelephonyInitilization telStatus: "+this.contactService.userContact.telStatus+" => start"),this.onTelPresenceChange({jid:this.userJidTel+"/phone",status:this.contactService.userContact.telStatus})):this.logger.info("[telephonyService] launchTelephonyInitilization no tel presence => do nothing")}reconnect(){this.logger.info("[telephonyService] [TEL] reconnect (xmpp reconnection)"),this.attachHandlers()}telephonyOfflineCallManagement(){this.logger.info("[telephonyService] telephony Offline Call Management");try{Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key];if(call){call.status!==call_model_1.Call.Status.RINGING_INCOMMING&&call.status!==call_model_1.Call.Status.QUEUED_INCOMMING||(call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&(this.logger.info("[telephonyService] Offline Call Management: release MP webrtc call for phone call "+call.id+" in state "+call.status.value),this.webrtcP2PService.releaseCall(call.mediaPillarCall.webrtcCallRef)),this.logger.info("[telephonyService] Offline Call Management: stop popup and ringing tone for phone call "+call.id+" in state "+call.status.value),call.setStatus(call_model_1.Call.Status.UNKNOWN),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)),(call.status===call_model_1.Call.Status.RINGING_OUTGOING||call.status===call_model_1.Call.Status.QUEUED_OUTGOING)&&call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&(this.logger.info("[telephonyService] Offline Call Management: release MP webrtc call for phone call "+call.id+" in state "+call.status.value),this.webrtcP2PService.releaseCall(call.mediaPillarCall.webrtcCallRef));call.isMediaPillarCall()&&call.status===call_model_1.Call.Status.ACTIVE?(this.logger.info("[telephonyService] Offline Call Management: keep MP call for phone call "+call.id+" in state "+call.status.value),call.pbxConnectionDown=!0):(delete this.calls[call.id],this.logger.info("[telephonyService] Offline Call Management: phone call deleted: "+call.id+" in state "+call.status.value))}}),this.logger.info("[telephonyService] Offline Call Management: clear "+this.pendingMakeCalls.length+" pending makecalls"),this.pendingMakeCalls=[]}catch(error){const errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";this.logger.error("[telephonyService] telephonyOfflineCallManagement  exception  -- "+errorMessage+" : "+errorStack)}}async getAgentStatus(){let toPCG="/phone";this.isSipWise()&&(this.logger.info("[telephonyService] getAgentStatus --- sipWise version"),toPCG="/pcg2");const getAgentIq=$iq({type:"get",to:this.userJidTel+toPCG}).c("pbxagentstatus",{xmlns:"urn:xmpp:pbxagent:monitoring:1"});try{const data=await this.xmppService.sendIQ(getAgentIq,6e4),phoneApi=$(data).find("phoneapi").text(),xmppAgent=$(data).find("xmppagent").text(),agentVersion=$(data).find("version").text(),features=$(data).find("features").text(),type=$(data).find("type").text(),featuresCapabilities=$(data).find("featuresCapabilities").text();let featureVVM=!1,featureOXOMULTICALL=!1;if(featuresCapabilities){const featuresTab=featuresCapabilities.split(",");featureVVM=featuresTab.includes("VVM"),featureOXOMULTICALL=featuresTab.includes("OXO_MULTICALL")}else features&&(featureVVM="VVM"===features);if(agentVersion&&(this.agentStatus={phoneApi:phoneApi,xmppAgent:xmppAgent,agentVersion:agentVersion,featureVVM:featureVVM,featureOXOMULTICALL:featureOXOMULTICALL},type?(this.isOxe=type.toLowerCase().includes("oxe"),this.isOxo=type.toLowerCase().includes("oxo"),this.isThirdParty=type.toLowerCase().includes("tp")):(this.isOxe=agentVersion.toLowerCase().includes("oxe"),this.isOxo=agentVersion.toLowerCase().includes("oxo"),this.isThirdParty=agentVersion.toLowerCase().includes("tp"))),this.isSipWise()&&"RVCP"!==type){this.setSipWise(!1);const errorMessage="getAgentStatus -- sipWise failure : wrong PCG type";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}this.logger.info("[telephonyService] [TEL] getAgentStatus -- success -- version "+agentVersion+" isOxe:"+this.isOxe+" isOxo:"+this.isOxo+" isSipWise:"+this.isSipWise()+" isThirdParty:"+this.isThirdParty),this.eventService.publish("ON_AGENT_STATUS_RECEIVED_EVENT")}catch(error){const errorMessage="getAgentStatus -- failure : "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}}async getTelephonyState(secondary){if(this.isSipWise()){this.logger.info("[telephonyService] getTelephonyState -- sipWise get Devices then routingInfo then snapshot");try{return await this.telephonyServiceSipWise.getUserDevices(),await this.telephonyServiceSipWise.getUserRoutingInfo(),await this.telephonyServiceSipWise.processSnapshot(),this.getSipWiseUserGroups(),void this.telephonyServiceSipWise.getEmergencyCallData()}catch(error){this.logger.info("[telephonyService] sipwise getTelephonyState CATCH");const errorMessage="sipwise getTelephonyState -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}}let iq;iq=secondary?$iq({type:"get",to:this.userJidTel+"/phone"}).c("callservice",{xmlns:this.CALLSERVICE_NS}).c("connections",{deviceType:"SECONDARY"}):$iq({type:"get",to:this.userJidTel+"/phone"}).c("callservice",{xmlns:this.CALLSERVICE_NS}).c("connections");try{const data=await this.xmppService.sendIQ(iq,6e4),errorMessage=this.getErrorMessage(data,"getTelephonyState");if(errorMessage)throw this.logger.info("[telephonyService] getTelephonyState -- failure -- "+errorMessage),new Error(errorMessage);const existingCalls=$(data).find("connection");if(this.logger.info("[telephonyService] [TEL] getTelephonyState ("+(secondary?"SECONDARY":"MAIN")+") -- success -- "+existingCalls.length+" existing call(s)"),0===existingCalls.length)return;const getCallPromises=[];existingCalls.each((__index,connection)=>{getCallPromises.push(this.createCallFromConnectionElem(connection,secondary))});try{await Promise.all(getCallPromises),this.logger.info("[telephonyService] getTelephonyState ("+(secondary?"SECONDARY":"MAIN")+") -- calls creation completed -- "+existingCalls.length+" calls created")}catch(error){throw this.logger.error("[telephonyService] getTelephonyState -- calls creation failure -- "+error.message),error}}catch(error){throw this.logger.error("[telephonyService] getTelephonyState -- failure -- "+error.message),error}}async snapshotDevice(secondary){if(this.isSipWise())return;let reqUrl=this.portalURL+"snapshotdevice";secondary&&(reqUrl+="?deviceType=SECONDARY");try{const url=reqUrl,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[telephonyService] snapshotdevice success "),data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"snapshotdevice");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}async createCallFromConnectionElem(connectionElemObj,secondary){const connectionElem=$(connectionElemObj),jid=connectionElem.attr("endpointIm");let phoneNumber=connectionElem.attr("endpointTel");const connectionId=connectionElem.attr("callId"),endpointLci=connectionElem.attr("endpointLci"),lci=connectionElem.attr("lci"),participantsElem=connectionElem.find("participant"),identityFirstName=connectionElem.find("identity").attr("firstName"),identityLastName=connectionElem.find("identity").attr("lastName"),partyElem=connectionElem.find("party");let firstName="",lastName="";jid||phoneNumber||(phoneNumber="****"),this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK)&&0===participantsElem.length&&identityLastName&&identityLastName.length&&(lastName=identityLastName,identityFirstName&&identityFirstName.length&&(firstName=identityFirstName),this.logger.info("[telephonyService] createCallFromConnectionElem - name resolution for: "+connectionId+" for phoneNumber:"+anonymizer_1.default(phoneNumber)+" with firstname : "+firstName.slice(0,1)+"***"));const getParticipants=()=>0===participantsElem.length?this.contactService.getOrCreateContact(jid,phoneNumber):this.getParticipantsFromParticipantsElem(participantsElem);try{const response=await getParticipants();let callStatus=call_model_1.Call.Status.ACTIVE;"LCI_INITIATED"===lci&&(callStatus=call_model_1.Call.Status.DIALING),"LCI_HELD"===lci&&"LCI_CONNECTED"===endpointLci&&(callStatus=call_model_1.Call.Status.HOLD),"LCI_CONNECTED"===lci&&"LCI_HELD"===endpointLci&&(callStatus=call_model_1.Call.Status.PUT_ON_HOLD),"LCI_CONNECTED"===lci&&"LCI_QUEUED"===endpointLci&&(callStatus=call_model_1.Call.Status.QUEUED_OUTGOING),"LCI_QUEUED"===lci&&"LCI_CONNECTED"===endpointLci&&(callStatus=call_model_1.Call.Status.QUEUED_INCOMMING),"LCI_ALERTING"===lci&&(callStatus=call_model_1.Call.Status.RINGING_INCOMMING);let call=null;if(0===participantsElem.length?(response&&response.temp&&""!==lastName&&response.updateName(firstName,lastName),call=this.getOrCreateCall(callStatus,connectionId,response),this.logger.info("[telephonyService] [TEL] createCallFromConnectionElem - create call "+call+" for user: "+response.id)):(call=this.getOrCreateCall(callStatus,connectionId),call.setParticipants(response),call.isConference=!0,this.logger.info("[telephonyService] [TEL] createCallFromConnectionElem - create conference call "+call)),partyElem&&partyElem.length&&(call.calledNumber=partyElem.attr("number")||"",call.calledNumber)){call.calledRole=partyElem.attr("role")||"",call.calledJID=partyElem.attr("jid")||"";const calledDisplayName=partyElem.attr("displayName")||"",calledFirstName=partyElem.attr("firstName")||"",calledLastName=partyElem.attr("lastName")||"";call.calledDisplayName=calledDisplayName||call.calledDisplayName,call.calledFirstName=calledFirstName||call.calledFirstName,call.calledLastName=calledLastName||call.calledLastName,call.calledFirstName||call.calledLastName?call.calledDisplayName=this.computeDisplayName(call.calledFirstName,call.calledLastName):call.calledDisplayName||(call.calledDisplayName=call.calledNumber)}return call.relevantEquipmentId=call_model_1.Call.getDeviceIdFromConnectionId(connectionId),call.isSecondary=secondary,call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){throw this.logger.error("[TelephonyService] createCallFromConnectionElem - failure - "+error.message),error}}computeDisplayName(firstname,lastname){const firstName=firstname?firstname.charAt(0).toUpperCase()+firstname.slice(1):null,lastName=lastname?lastname.charAt(0).toUpperCase()+lastname.slice(1):null;let displayName="";return displayName=lastName&&firstName?"FL"===this.settingsService.getSetting("displayOrder")?firstName+" "+lastName:lastName+" "+firstName:lastName&&!firstName?lastName:firstName||"Anonymous",displayName}async getParticipantsFromParticipantsElem(participants){const confParticipants=[],participantPromises=[];return participants.each((__index,participant)=>{const participantElem=$(participant);let endpointTel=participantElem.find("endpointTel").text();const endpointIm=participantElem.find("endpointIm").text();endpointIm&&this.contactService.isUserContactJid(endpointIm)||participantPromises.push((async()=>{endpointIm||endpointTel||(endpointTel="****");const contact=await this.contactService.getOrCreateContact(endpointIm,endpointTel);confParticipants.push(contact)})())}),await Promise.all(participantPromises),confParticipants}getOrCreateCall(status,connectionId,contact=null){let call=this.calls[call_model_1.Call.getIdFromConnectionId(connectionId)];return call?(call.setConnectionId(connectionId),call.startDate=call.startDate||new Date):(call=call_model_1.Call.create(status,null,call_model_1.Call.Type.PHONE,contact),call.setConnectionId(connectionId),this.calls[call.id]=call),call}createCallSipWise(status,callId){let call=null;return callId&&(call=this.calls[callId]),call?call.startDate=call.startDate||new Date:(call=call_model_1.Call.create(status,callId,call_model_1.Call.Type.PHONE),this.calls[call.id]=call),call}getOrCreateCallSipWise(status,callId,legId,deviceId,contact){let call=null;return callId&&(call=this.calls[callId]),call?(call.setConnectionIdSipWise(legId),contact&&call.setContact(contact),deviceId&&call.setDeviceIdSipWise(deviceId),call.startDate=call.startDate||new Date):(call=call_model_1.Call.create(status,callId,call_model_1.Call.Type.PHONE,contact),call.setConnectionIdSipWise(legId),call.setDeviceIdSipWise(deviceId),this.calls[call.id]=call),call}getActiveCall(){return this.getCall(call_model_1.Call.Status.ACTIVE)}getRingingOutgoingCall(){return this.getCall(call_model_1.Call.Status.RINGING_OUTGOING)}getCall(searchedCallStatus){let foundCall=null;return Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key];call.status===searchedCallStatus&&(foundCall=call)}),foundCall}getOngoingOutgoingCall(){let ongoingOutgoingCall=null;return Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key];call.status!==call_model_1.Call.Status.RINGING_OUTGOING&&call.status!==call_model_1.Call.Status.QUEUED_OUTGOING&&call.status!==call_model_1.Call.Status.DIALING&&call.status!==call_model_1.Call.Status.ERROR||(ongoingOutgoingCall=call)}),ongoingOutgoingCall}getRingingIncomingCalls(){return this.getCalls(call_model_1.Call.Status.RINGING_INCOMMING)}getQueuedIncomingCalls(){return this.getCalls(call_model_1.Call.Status.QUEUED_INCOMMING)}getCallsOnHold(){return this.getCalls(call_model_1.Call.Status.HOLD)}getCalls(searchedCallStatus=null){const calls=[],searchedStatusArray=searchedCallStatus?Array.isArray(searchedCallStatus)?searchedCallStatus:[searchedCallStatus]:[call_model_1.Call.Status.DIALING,call_model_1.Call.Status.RINGING_OUTGOING,call_model_1.Call.Status.QUEUED_OUTGOING,call_model_1.Call.Status.ACTIVE,call_model_1.Call.Status.HOLD,call_model_1.Call.Status.PUT_ON_HOLD,call_model_1.Call.Status.ERROR];return Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key],status=call.status;searchedStatusArray.includes(status)&&calls.push(call)}),calls}getNotIdleCalls(){const calls=[];return Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key];call.status!==call_model_1.Call.Status.UNKNOWN&&calls.push(call)}),calls}isUserIdle(){return!Object.keys(this.calls||{}).some(key=>this.calls[key].status!==call_model_1.Call.Status.UNKNOWN)}getActiveCallsForContact(contact){const calls=[];return contact&&contact.jid&&Object.keys(this.calls||{}).forEach(key=>{!this.calls[key].contact||this.calls[key].contact.jid!==contact.jid||this.calls[key].status!==call_model_1.Call.Status.DIALING&&this.calls[key].status!==call_model_1.Call.Status.RINGING_OUTGOING&&this.calls[key].status!==call_model_1.Call.Status.QUEUED_OUTGOING&&this.calls[key].status!==call_model_1.Call.Status.ACTIVE&&this.calls[key].status!==call_model_1.Call.Status.HOLD&&this.calls[key].status!==call_model_1.Call.Status.PUT_ON_HOLD||calls.push(this.calls[key])}),calls}getCallsForContact(contact){const calls=[];return contact&&contact.jid&&Object.keys(this.calls||{}).forEach(key=>{const call=this.calls[key];call.contact&&call.contact.jid===contact.jid&&call.status!==call_model_1.Call.Status.UNKNOWN&&calls.push(call)}),calls}getConferenceCallForContact(contact){let conferenceCall=null;return contact&&contact.jid&&Object.keys(this.calls||{}).forEach(key=>{this.calls[key].status===call_model_1.Call.Status.ACTIVE&&this.calls[key].isConference&&(this.calls[key].participants||[]).some(participantContact=>participantContact&&participantContact.jid===contact.jid)&&(conferenceCall=this.calls[key])}),conferenceCall}getOtherCallWithSameGlobalCallId(sourceCall){if(!sourceCall||!sourceCall.globalCallId)return null;const foundCallKey=Object.keys(this.calls||{}).reverse().find(key=>{const call=this.calls[key];return this.logger.debug("[telephonyService] getOtherCallWithSameGlobalCallId check call "+call),call.id!==sourceCall.id&&call.globalCallId===sourceCall.globalCallId}),foundCall=foundCallKey?this.calls[foundCallKey]:null;return this.logger.info("[telephonyService] getOtherCallWithSameGlobalCallId source call id: "+sourceCall.id+" globalCallId: "+sourceCall.globalCallId+" => "+(foundCall?"found call "+foundCall:"not found")),foundCall}logMakecallReqData(reqData,contact){const reqDataForLogs={};Object.keys(reqData).forEach(reqDataProperty=>{switch(reqDataProperty){case"calleeExtNumber":case"calleeIntNumber":case"calleeShortNumber":reqDataForLogs[reqDataProperty]=anonymizer_1.default(reqData[reqDataProperty]);break;case"calleeDisplayName":contact&&(reqDataForLogs[reqDataProperty]=contact&&contact.nameForLogs?contact.nameForLogs:"");break;default:reqDataForLogs[reqDataProperty]=reqData[reqDataProperty]}}),this.logger.info("[telephonyService] makeCall data: "+JSON.stringify(reqDataForLogs))}async makeCall(contact,phoneNumber,callSubject,correlatorData,correlatorDataHex,calledNumber){if(this.logger.info("[telephonyService] [TEL] makeCall to "+(contact&&contact.nameForLogs?contact.nameForLogs:anonymizer_1.default(phoneNumber))),this.makingCall)return void this.logger.warn("[telephonyService] [TEL] makeCall failure - makeCall already making a call");if(this.getRingingOutgoingCall())return this.logger.warn("[telephonyService] [TEL] makeCall failure - ringingOutgoing call in progress"),void this.displayNotAllowedNotification(contact,phoneNumber);const activeCall=this.getActiveCall();if(activeCall&&activeCall.isConference)return this.logger.warn("[telephonyService] [TEL] makeCall failure - conference call in progress"),void this.displayNotAllowedNotification(contact,phoneNumber);if(!this.contactService.userContact.capabilities.telephony)return this.logger.warn("[telephonyService] [TEL] makeCall failure - user cannot make telephony call (telephony capability)"),void this.displayNotAllowedNotification(contact,phoneNumber);if(this.isMixPstnWebRtcAllowed&&this.eventService.publish("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD"),this.makingCall=!0,!activeCall)return this.isSipWise()?this.telephonyServiceSipWise.makeSimpleCall(contact,phoneNumber,calledNumber):this.makeSimpleCall(contact,phoneNumber,callSubject,correlatorData,correlatorDataHex,calledNumber);if(!this.isSipWise())return this.makeConsultationCall(contact,phoneNumber,activeCall.connectionId,correlatorData,correlatorDataHex);if(this.isMediaPillarAvailable()&&this.isMediaPillarUserSelected())try{return await this.telephonyServiceSipWise.holdCall(activeCall),this.telephonyServiceSipWise.makeSimpleCall(contact,phoneNumber)}catch(error){return}return this.telephonyServiceSipWise.makeSimpleCall(contact,phoneNumber)}displayNotAllowedNotification(contact,phoneNumber){this.logger.debug("[telephonyService] displayNotAllowedNotification");const call=call_model_1.Call.create(call_model_1.Call.Status.ERROR,null,call_model_1.Call.Type.PHONE,contact);call.errorMessage="notAllowed",call.isSecondary=this.nomadicObject&&!this.nomadicObject.makeCallInitiatorIsMain,call.isOwner=!0,call.setIsVm(phoneNumber===this.voicemailNumber),this.calls[call.contact.id]=call,setTimeout(()=>{this.clearCall(call)},5e3),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}async makeSimpleCall(contact,phoneNumber,callSubject,correlatorData,correlatorDataHex,calledNumber){if(this.logger.info("[telephonyService] makeSimpleCall to "+(contact&&contact.nameForLogs?contact.nameForLogs:anonymizer_1.default(phoneNumber))),!this.isBasicCallAllowed){const profileError=new Error("makeSimpleCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),this.makingCall=!1,profileError}if(this.isMediaPillarAvailable()&&this.isMediaPillarUserSelected()&&this.webrtcP2PService.getWebrtcAudioCall())throw this.logger.info("[telephonyService] makeCall failure - webrtcgateway call not possible when webrtc call already engaged"),this.makingCall=!1,this.eventService.publish("ON_CALL_NOTALLOWED_EVENT","webCallAlreadyProgress"),new Error("webCallAlreadyProgress");const phoneInfo=this.getPhoneInfo(contact,phoneNumber),reqUrl=this.portalURL+"calls",reqData={calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName,callSubject:callSubject,correlatorData:correlatorData,correlatorDataHex:correlatorDataHex,secondaryDeviceMakeCall:void 0!==this.nomadicObject.makeCallInitiatorIsMain&&!0===this.nomadicObject.featureActivated&&this.isNomadicEnabled?this.nomadicObject.makeCallInitiatorIsMain?"false":"true":void 0,resource:this.xmppService.getResourceFromJid(this.contactService.userContact.fullJid),calledNumber:""};return calledNumber&&(reqData.calledNumber=calledNumber),this.logger.info("[telephonyService] makeSimpleCall "+reqUrl),this.logMakecallReqData(reqData,contact),this.doRequestMakecall(contact,phoneNumber,reqUrl,reqData)}async makeConsultationCall(contact,phoneNumber,callId,correlatorData,correlatorDataHex){if(this.logger.info("[telephonyService] makeConsultationCall to "+(contact&&contact.nameForLogs?contact.nameForLogs:anonymizer_1.default(phoneNumber))),!this.isSecondCallAllowed){const profileError=new Error("makeConsultationCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),this.makingCall=!1,profileError}const phoneInfo=this.getPhoneInfo(contact,phoneNumber,correlatorData,correlatorDataHex),reqUrl=this.portalURL+"calls/"+encodeURIComponent(callId)+"/consultation",reqData={calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName,correlatorData:phoneInfo.correlatorData,correlatorDataHex:phoneInfo.correlatorDataHex,resource:this.xmppService.getResourceFromJid(this.contactService.userContact.fullJid)};this.logger.info("[telephonyService] makeConsultationCall "+reqUrl),this.logMakecallReqData(reqData,contact);try{return this.doRequestMakecall(contact,phoneNumber,reqUrl,reqData)}catch(error){throw this.deleteCallIfInvalid(error,this.calls[call_model_1.Call.getIdFromConnectionId(callId)]),error}}async doRequestMakecall(contact,phoneNumber,reqUrl,reqData){this.logger.info("[telephonyService] doRequestMakecall to "+(contact&&contact.nameForLogs?contact.nameForLogs:anonymizer_1.default(phoneNumber)));const call=call_model_1.Call.create(call_model_1.Call.Status.UNKNOWN,null,call_model_1.Call.Type.PHONE,contact);call.isSecondary=this.nomadicObject&&!this.nomadicObject.makeCallInitiatorIsMain,call.isOwner=!0,call.setIsVm(phoneNumber===this.voicemailNumber),this.pendingMakeCalls.push(call),this.logger.info("[telephonyService] doRequestMakecall Call created ("+call+")");try{const url=reqUrl,headers=this.authService.getPostHeader(),data=reqData,body=JSON.stringify(data),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const responseBody=await response.json();this.logger.info("[telephonyService] [TEL] makecall - success : callee "+anonymizer_1.default(phoneNumber)+" callId: "+responseBody.data.callId);return this.pendingMakeCalls.includes(call)?(call.setStatus(call_model_1.Call.Status.DIALING),call.setConnectionId(responseBody.data.callId),call.setRelevantEquipmentId(call_model_1.Call.getDeviceIdFromConnectionId(call.connectionId)),this.calls[call.id]=call,this.pendingMakeCalls.splice(this.pendingMakeCalls.indexOf(call),1),this.logger.info("[telephonyService] doRequestMakecall Call confirmed by makecall acknowlegement ("+call+")"),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call.id):call.id?call.id:responseBody.data.callId}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"makeCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),call.setStatus(call_model_1.Call.Status.ERROR),call.errorMessage="403"===errorInfo.error.errorDetailsCode?"notAllowed":"invalidPhoneNumber",this.calls[call.contact.id]=call,this.pendingMakeCalls.splice(this.pendingMakeCalls.indexOf(call),1),setTimeout(()=>{this.clearCall(call)},5e3),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),errorInfo.error}finally{this.makingCall=!1}}async makeCallByPhoneNumber(phoneNumber,callSubject,correlatorData,correlatorDataHex){if(this.logger.info("[telephonyService] [TEL] makeCallByPhoneNumber : "+anonymizer_1.default(phoneNumber)),!this.started){const errorMessage="makeCallByPhoneNumber failure: telephony not started";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}if(this.contactService.userContact.phonePro===phoneNumber||this.contactService.userContact.phoneProCan===phoneNumber||this.contactService.userContact.phonePbx===phoneNumber){const errorMessage="makeCallByPhoneNumber failure: impossible to call its own phone number";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}try{const contact=await this.contactService.getOrCreateContact(null,phoneNumber);await this.makeCall(contact,phoneNumber,callSubject,correlatorData,correlatorDataHex)}catch(error){const _errorMessage="makeCallByPhoneNumber failure "+(error?error.message:"");throw this.logger.error("[telephonyService] - callService - "+_errorMessage),new Error(_errorMessage)}}getPhoneInfo(contact,phoneNumber,correlatorData=null,correlatorDataHex=null){let longNumber=phoneNumber,shortNumber="",internalNumber="",pbxId="";return contact&&(phoneNumber===contact.phonePro||phoneNumber===contact.phoneProCan?(longNumber=contact.phoneProCan?contact.phoneProCan:"",shortNumber=contact.phonePbx,pbxId=contact.pbxId,internalNumber=contact.phoneInternalNumber):phoneNumber===contact.phonePbx&&(longNumber="",shortNumber=contact.phonePbx,pbxId=contact.pbxId,internalNumber=contact.phoneInternalNumber)),{longNumber:longNumber,shortNumber:shortNumber,pbxId:pbxId,internalNumber:internalNumber,correlatorData:correlatorData,correlatorDataHex:correlatorDataHex}}getErrorMessage(data,actionLabel){let errorMessage=actionLabel+" failure : ";if("error"===$(data).attr("type")){const error=$(data).find("error");if(error){const errorType=error.attr("type"),errorCode=error.attr("code");errorType&&(errorMessage+=errorType+" : ","modify"===errorType&&(errorMessage+=error.find("text").text())),errorCode&&"503"===errorCode&&(errorMessage+="Agent error : service unavailable"),this.logger.error("[telephonyService] "+errorMessage)}else errorMessage+="Unknown error";return errorMessage}return null}async releaseCall(call){this.logger.info("[telephonyService] [TEL] releaseCall "+call.id);const promiseId="releaseCall"+call.id;return this.telAPIPromiseInProgress[promiseId]?this.logger.info("[telephonyService] [TEL] releaseCall "+call.id+" already engaged then not re-sent to API"):this.telAPIPromiseInProgress[promiseId]=new Promise((resolve,reject)=>{this.innerReleaseCall(call).then(callResult=>{resolve(callResult),delete this.telAPIPromiseInProgress[promiseId]}).catch(error=>{reject(error),delete this.telAPIPromiseInProgress[promiseId]})}),this.telAPIPromiseInProgress[promiseId]}async innerReleaseCall(call){if(!this.isBasicCallAllowed){const profileError=new Error("innerReleaseCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] [TEL] "+profileError.message),profileError}if(call.pbxConnectionDown)return call.mediaPillarCall&&call.mediaPillarCall.webrtcCallRef&&call.mediaPillarCall.webrtcCallRef.status!==call_model_1.Call.Status.UNKNOWN?(this.logger.info("[telephonyService] innerReleaseCall "+call.id+" with pbx connection down : we release the mediapillar web call: "+call.mediaPillarCall.webrtcCallRef),this.webrtcP2PService.releaseCall(call.mediaPillarCall.webrtcCallRef)):this.logger.info("[telephonyService] innerReleaseCall "+call.id+" with pbx connection down : "+(call.mediaPillarCall?call.mediaPillarCall.webrtcCallRef?"no need to release webrtc call with status "+call.mediaPillarCall.webrtcCallRef:"no MP webrtc call to release":"no MP context!")),this.logger.info("[telephonyService] [TEL] innerReleaseCall "+call.id+" with pbx connection down : we remove the phone call"),this.clearCall(call),call;if(this.isSipWise())return this.telephonyServiceSipWise.releaseCall(call);this.logger.info("[telephonyService] [TEL] innerReleaseCall "+call.id);try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return call.setStatus(call_model_1.Call.Status.UNKNOWN),call.startDate=null,call.setIsVm(!1),this.logger.info("[telephonyService] [TEL] releaseCall "+call.id+" - success"),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),delete this.calls[call.id],call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"innerReleaseCall");throw this.deleteCallIfInvalid(errorInfo.error,call),this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async releaseCallAndNotify(call){try{await this.releaseCall(call)}catch(error){throw call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),error}}deleteCallIfInvalid(error,call){error&&"telephony"===error.portal&&404100===error.errorDetailsCode&&error.message&&(error.message.toLowerCase().includes("invalid connection identifier")||error.message.toLowerCase().includes("failed to send releasecall"))&&call&&(this.logger.warn("[telephonyService] deleteCallIfInvalid: delete client call non existing on server: "+call.id),call.setStatus(call_model_1.Call.Status.UNKNOWN),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.calls[call.id]&&delete this.calls[call.id])}async answerCall(call){this.logger.info("[telephonyService] [TEL] answerCall : "+call.id);const activeCall=this.getActiveCall();if(!this.isBasicCallAllowed){const profileError=new Error("answerCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.isMixPstnWebRtcAllowed&&this.eventService.publish("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD"),this.isSipWise())return this.telephonyServiceSipWise.answerCall(call);if(call.status!==call_model_1.Call.Status.QUEUED_INCOMMING||!activeCall||!this.isOxe)return this.doRequestAnswerCall(call);try{await this.holdCall(activeCall)}catch(error){this.logger.warn("[telephonyService] holdCall (before answerCall) failed on callId:"+activeCall.connectionId+" "+error)}try{return await this.doRequestAnswerCall(call)}catch(error){const errorMessage="answerCall failure : "+error.message;throw this.logger.error("[telephonyService] - callService -  "+errorMessage),new Error(errorMessage)}}async doRequestAnswerCall(call){try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/answer",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[telephonyService] [TEL] answerCall - success : "+anonymizer_1.default(call.contact.displayName)+" Call ("+call+")"),this.isOxo?(this.logger.info("[telephonyService] answerCall call id "+call.id+" -- OXO specific mng wait established"),call):(call.status===call_model_1.Call.Status.RINGING_INCOMMING||call.status===call_model_1.Call.Status.QUEUED_INCOMMING?(call.setConnectionId(data.callId),call.setStatus(call_model_1.Call.Status.ACTIVE),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)):this.logger.info("[telephonyService] answerCall Call ("+call+") not ringing anymore: don't modify it"),call)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"answerCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error&&"Device is not able to answer a call"===errorInfo.error.errorDetails&&(this.logger.info("[telephonyService] [TEL] errorDetails "+errorInfo.error.errorDetails),this.mainService.showGlobalPopupMessage({autoClose:!1,okLabel:"close",popupTitle:"warning",popupBody:"deviceDoesntAllowAnswer"})),this.deleteCallIfInvalid(errorInfo.error,call),errorInfo.error}}async holdCall(call){if(this.logger.info("[telephonyService] [TEL] holdCall : callId: "+call.id+" "+call.contact.nameForLog),!call||call.status===call_model_1.Call.Status.HOLD)return call;if(this.isSipWise())return this.telephonyServiceSipWise.holdCall(call);try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/hold",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[telephonyService] [TEL] holdCall - success : "+anonymizer_1.default(call.contact.displayName)+" Call ("+call+")"),call.setConnectionId(data.callId),call.setStatus(call_model_1.Call.Status.HOLD),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"holdCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async retrieveCall(call){this.logger.info("[telephonyService] [TEL] retrieveCall callId: "+call.id+" "+call.contact.nameForLog),this.isMixPstnWebRtcAllowed&&this.eventService.publish("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD");const activeCall=this.getActiveCall();if(activeCall)try{return await this.holdCall(activeCall),await this.retrieveCall(call)}catch(error){const errorMessage="retrieveCall failure : "+error.message;throw this.logger.error("[telephonyService] [TEL] - callService -  "+errorMessage),new Error(errorMessage)}else{if(this.isSipWise())return this.telephonyServiceSipWise.retrieveCall(call);try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/retrieve",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[telephonyService] [TEL] retrieveCall - success : "+anonymizer_1.default(call.contact.displayName)+" Call ("+call+")"),call.setConnectionId(data.callId),call.setStatus(call_model_1.Call.Status.ACTIVE),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}async alternateCall(activeCall,heldCall){if(activeCall&&heldCall){if(!this.isSecondCallAllowed){const profileError=new Error("alternateCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}this.logger.info("[telephonyService] [TEL] alternateCall held("+heldCall.contact.displayName+") to active("+activeCall.contact.displayName+")");try{const url=this.portalURL+"calls/"+encodeURIComponent(activeCall.connectionId)+"/alternate/"+encodeURIComponent(heldCall.connectionId),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] alternateCall - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"alternateCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}async deflectCallToVM(call){if(call){if(!this.isVMDeflectCallAllowed){const profileError=new Error("deflectCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.logger.info("[telephonyService] [TEL] deflectCallToVM "+call.contact.nameForLogs),this.isSipWise())await this.telephonyServiceSipWise.deflectCall(call,this.voicemailNumber);else try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/deflect",headers=this.authService.getPostHeader(),data={calleeExtNumber:"",calleeIntNumber:"VOICEMAILBOX",calleeShortNumber:this.voicemailNumber,calleePbxId:this.pbxId},body=JSON.stringify(data),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] deflectCall - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deflectCallToVM");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}async deflectCallToNumber(call,number){if(!call||!number)return;let profileError;if(!this.isVMDeflectCallAllowed)throw profileError=new Error("deflectCall failure - Not Allowed"),profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError;if(this.logger.info("[telephonyService] [TEL] deflectCallToNumber "+call.contact.nameForLog),!this.isSipWise())throw profileError=new Error("deflectCall failure - Not Allowed"),profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] [TEL] "+profileError.message),profileError;await this.telephonyServiceSipWise.deflectCall(call,number)}async transfertCall(activeCall,heldCall){if(activeCall&&heldCall){if(!this.isTransferAllowed){const profileError=new Error("transferCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.logger.info("[telephonyService] transfertCall [TEL] held("+heldCall.contact.displayName+") to active("+activeCall.contact.displayName+")"),this.isSipWise())await this.telephonyServiceSipWise.transferCall(activeCall,heldCall);else try{const url=this.portalURL+"calls/"+encodeURIComponent(activeCall.connectionId)+"/transfer/"+encodeURIComponent(heldCall.connectionId),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] transferCall - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"transfertCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}async blindTransfertCall(activeCall,calleNumber,destionationObject){if(!activeCall||!calleNumber&&!destionationObject)throw new Error("[telephonyService] blindTransfertCall -- missing parameters");if(!this.isSipWise())throw new Error("[telephonyService] blindTransfertCall -- only allowed for RB Hub users");if(calleNumber&&!this.isTransferAllowed){const profileError=new Error("[telephonyService] blind transfertCall failure - Transfer Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(destionationObject&&!this.isMixPstnWebRtcAllowed){const profileError=new Error("[telephonyService] blind transfertCall failure - Mix WEBRTC_PSTN Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}return this.telephonyServiceSipWise.blindTransferCall(activeCall,calleNumber,destionationObject)}async conferenceCall(activeCall,heldCall){if(activeCall&&heldCall){if(!this.isConferenceAllowed){const profileError=new Error("conferenceCall failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.logger.info("[telephonyService] [TEL] conferenceCall "+activeCall.connectionId+" ("+activeCall.contact.displayName+") and "+heldCall.connectionId+" ("+heldCall.contact.displayName+")"),this.isSipWise())return this.conferenceCallSipWise(activeCall,heldCall);try{const url=this.portalURL+"calls/"+encodeURIComponent(activeCall.connectionId)+"/conference/"+encodeURIComponent(heldCall.connectionId),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;return void this.logger.info("[telephonyService] [TEL] conferenceCall - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"conferenceCall");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}async conferenceCallSipWise(activeCall,heldCall){try{if(!this.isMixPstnWebRtcAllowed)throw new Error("conferenceCallSipWise failure - Not Allowed -- missing feature flag");const roomService=this.mainService.inject("roomService");if(!roomService)throw new Error("conferenceCallSipWise failure - Room / Bubble service is missing");const webConferenceServiceV2=this.mainService.inject("webConferenceServiceV2");if(!webConferenceServiceV2)throw new Error("conferenceCallSipWise failure - Web conference service is missing");this.logger.info("[telephonyService] conferenceCallSipWise");const caller={userId:this.contactService.userContact.dbId},particpants=[];let activeCallBlindTransfer=!1,heldCallBlindTransfer=!1;const firstParticipant=roomService.getParticipantDataForAdhocFromCall(activeCall);particpants.push(firstParticipant.participant),activeCallBlindTransfer=firstParticipant.blindTrasfer;const secondParticipant=roomService.getParticipantDataForAdhocFromCall(heldCall);particpants.push(secondParticipant.participant),heldCallBlindTransfer=secondParticipant.blindTrasfer;const adhocData=await roomService.startAdHocConferenceV2(caller,particpants);this.logger.info("[telephonyService] conferenceCallSipWise -- ad hoc started "+JSON.stringify(adhocData));let room=roomService.getRoomById(adhocData.roomId);room&&room.isWebConferenceV2Room()||(room=await roomService.getServerRoom(adhocData.roomId));const webrtcCallId=activeCall.type===call_model_1.Call.Type.WEBRTC?activeCall.id:heldCall.type===call_model_1.Call.Type.WEBRTC?heldCall.id:null,session=this.xmppService.connection.jingle.sessions[webrtcCallId];await webConferenceServiceV2.transferP2pCallToConference(session,adhocData.jingleJid,room,!0,activeCall.isMuted);const activeCallBlindTransferData=adhocData&&adhocData.gatewayPrefix&&adhocData.participantGatewaySessionIds?adhocData.gatewayPrefix+adhocData.participantGatewaySessionIds[0]:"",heldCallBlindTransferData=adhocData&&adhocData.gatewayPrefix&&adhocData.participantGatewaySessionIds?adhocData.gatewayPrefix+adhocData.participantGatewaySessionIds[1]:"",nameSpaceRefer="urn:xmpp:jingle:apps:rtp:info:1";return activeCallBlindTransfer?(this.logger.info("[telephonyService] conferenceCallSipWise -- activeCallBlindTransfer "+activeCallBlindTransferData),this.blindTransfertCall(activeCall,activeCallBlindTransferData)):activeCall.type===call_model_1.Call.Type.PHONE?(this.logger.info("[telephonyService] conferenceCallSipWise -- activeCall invite via IQ refer"),this.xmppService.send($msg({from:this.contactService.userContact.fullJid,to:activeCall.contact.jid}).c("refer",{xmlns:nameSpaceRefer,confEndpointId:room.dbId,referTo:adhocData.jingleJid,telCallId:activeCall.id}))):activeCall.type===call_model_1.Call.Type.WEBRTC&&this.webrtcP2PService.referTo(session,room.dbId,adhocData.jingleJid),heldCallBlindTransfer?(this.logger.info("[telephonyService] conferenceCallSipWise -- heldCallBlindTransfer "+heldCallBlindTransfer),this.blindTransfertCall(heldCall,heldCallBlindTransferData)):heldCall.type===call_model_1.Call.Type.PHONE?(this.logger.info("[telephonyService] conferenceCallSipWise -- heldCall invite via IQ refer"),this.xmppService.send($msg({from:this.contactService.userContact.fullJid,to:heldCall.contact.jid}).c("refer",{xmlns:nameSpaceRefer,confEndpointId:room.dbId,referTo:adhocData.jingleJid,telCallId:heldCall.id}))):heldCall.type===call_model_1.Call.Type.WEBRTC&&this.webrtcP2PService.referTo(session,room.dbId,adhocData.jingleJid),room}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"conferenceCallSipWise");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async sipWiseForwardToDevice(phoneNumber,destType,forwardType){if(this.logger.info("[telephonyService] [TEL] sipWiseforwardToDevice : "+phoneNumber+" / destType = "+destType+" / fwType = "+forwardType),!this.isForwardEnabled){const profileError=new Error("sipWiseforwardToDevice failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.contactService.userContact.phonePro===phoneNumber||this.contactService.userContact.phoneProCan===phoneNumber||this.contactService.userContact.phonePbx===phoneNumber){const errorMessage="sipWiseforwardToDevice failure: impossible to forward its own phone number";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}if(!phoneNumber||!forwardType||""===forwardType||!destType||""===destType){const errorMessage="sipWiseforwardToDevice failure: bad parameters";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}if(!this.isSipWise()){const errorMessage="sipWiseforwardToDevice not implemented if not sipWise case";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}try{await this.telephonyServiceSipWise.forwardToDevice(phoneNumber,destType,forwardType)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sipWiseForwardToDevice");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}async sipWiseCancelForward(forwardType){if(this.logger.info("[telephonyService] [TEL] sipWiseCancelForward :  fwType = "+forwardType),!this.isForwardEnabled){const profileError=new Error("cancelForward failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(!this.isSipWise()){const errorMessage="sipWiseCancelForward not implemented if not sipWise case";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}try{return void await this.telephonyServiceSipWise.cancelForward(forwardType)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sipWiseCancelForward");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}async forwardToDevice(phoneNumber,forwardType){if(this.logger.info("[telephonyService] [TEL] forwardToDevice : "+phoneNumber+" forwardType :"+forwardType),!this.isForwardEnabled){const profileError=new Error("forwardToDevice failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.contactService.userContact.phonePro===phoneNumber||this.contactService.userContact.phoneProCan===phoneNumber||this.contactService.userContact.phonePbx===phoneNumber){const errorMessage="forwardToDevice failure: impossible to forward its own phone number";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessage)}if(this.isSipWise())try{const contact=await this.contactService.getOrCreateContact(null,phoneNumber),phoneInfo=this.getPhoneInfo(contact,phoneNumber);let destType="externalNumber";return forwardType="immediate",""!==phoneInfo.longNumber?(destType="externalNumber",phoneNumber=phoneInfo.longNumber):(destType="internalNumber",phoneNumber=phoneInfo.shortNumber),void await this.telephonyServiceSipWise.forwardToDevice(phoneNumber,destType,forwardType)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"forwardToDevice");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}try{const contact=await this.contactService.getOrCreateContact(null,phoneNumber),phoneInfo=this.getPhoneInfo(contact,phoneNumber);forwardType=forwardType||"immediate";const url=this.portalURL+"forward",headers=this.authService.getPostHeader(),data={calleeExtNumber:phoneInfo.longNumber,calleeIntNumber:phoneInfo.internalNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,calleeDisplayName:contact.displayName,forwardType:forwardType},body=JSON.stringify(data),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] forwardToDevice - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"forwardToDevice");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async forwardToVoicemail(forwardType,userId){if(this.logger.info("[telephonyService] [TEL] forwardToVoicemail forwardType :"+forwardType),!this.voiceMailFeatureEnabled||!this.isForwardEnabled){const profileError=new Error("forwardToVoicemail failure - voicemail/forward feature not enabled");throw this.logger.error("[telephonyService] "+profileError.message),profileError}if(forwardType=forwardType||"immediate",this.isSipWise()){const destType="voicemail";try{return void await this.telephonyServiceSipWise.forwardToDevice(this.voicemailNumber,destType,forwardType,userId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"forwardToVoicemail");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}try{const url=this.portalURL+"forward",headers=this.authService.getPostHeader(),data={calleeExtNumber:"",calleeIntNumber:"VOICEMAILBOX",calleePbxId:this.pbxId,forwardType:forwardType},body=JSON.stringify(data),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] forwardToVoicemail - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"forwardToVoicemail");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async cancelForward(userId){if(this.logger.info("[telephonyService] [TEL] cancelForward"),!this.isForwardEnabled){const profileError=new Error("cancelForward failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.isSipWise()){const forwardType="immediate";try{return void await this.telephonyServiceSipWise.cancelForward(forwardType,userId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cancelForward");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}if(this.contactService.userContact.phonePbx)try{const url=this.portalURL+"forward",headers=this.authService.getPostHeader(),data={calleeExtNumber:"",calleeIntNumber:"CANCELFORWARD",calleePbxId:this.pbxId,forwardType:"no_forward"},body=JSON.stringify(data),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] cancelForward - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cancelForward");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async getForwardStatus(){if(!this.isForwardEnabled){const profileError=new Error("getForwardStatus failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(!this.starting&&!this.started)throw new Error("getForwardStatus failure - Telephony not started");if(this.isSipWise())try{return void await this.telephonyServiceSipWise.getForwardStatus()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getForwardStatus");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}this.logger.info("[telephonyService] [TEL] getForwardStatus");try{const url=this.portalURL+"forward",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;this.eventService.publish("ON_CALL_FORWARDED_EVENT",{forwardType:data.forwardType,forwardTo:data.forwardTo,pbxForwardType:data.pbxForwardType}),this.forwardObject.forwardType=data.forwardType,this.forwardObject.forwardTo=data.forwardTo,this.forwardObject.pbxForwardType=data.pbxForwardType,this.logger.info("[telephonyService] getForwardStatus - success - forwardType: "+data.forwardType+" forwardTo: "+data.forwardTo+" pbxForwardType: "+data.pbxForwardType)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getForwardStatus");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}getForwardObject(){return this.forwardObject}async isOverFlowStatusActivated(){if(this.isSipWise()){return(await this.telephonyServiceSipWise.getOverFlowStatus(this.contactService.userContact.systemId,this.contactService.userContact.phoneNumberId)).activate}return!1}async nomadicLogin(phoneNumber,isUnchangeableNumber=!1,NotTakeIntoAccount=!1){if(!this.isNomadicEnabled||!this.nomadicObject.featureActivated){const profileError=new Error("nomadicLogin failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(this.contactService.userContact.phonePro===phoneNumber||this.contactService.userContact.phoneProCan===phoneNumber||this.contactService.userContact.phonePbx===phoneNumber){const errorMessage="nomadicLogin failure: impossible to use its own phone number like nomadic phone",errorMessageKey="nomadicImpossibleUseOwnPhonenumber";throw this.logger.error("[telephonyService] "+errorMessage),new Error(errorMessageKey)}this.logger.info("[telephonyService] [TEL] nomadicLogin : "+anonymizer_1.default(phoneNumber)),NotTakeIntoAccount=NotTakeIntoAccount||!1,isUnchangeableNumber=isUnchangeableNumber||!1,this.nomadicAnswerNotTakedIntoAccount=NotTakeIntoAccount;try{const contact=await this.contactService.getOrCreateContact(null,phoneNumber),phoneInfo=this.getPhoneInfo(contact,phoneNumber),url=this.portalURL+"nomadic/login",data={destinationExtNumber:phoneInfo.longNumber,destinationIntNumber:phoneInfo.internalNumber,destinationShortNumber:phoneInfo.shortNumber,destinationRainbowNumber:isUnchangeableNumber?phoneNumber:"",destinationPbxId:phoneInfo.pbxId,destinationDisplayName:contact.displayName,destinationCountry:contact.country},body=JSON.stringify(data),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] nomadicLogin - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"nomadicLogin");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async nomadicLoginOnOfficePhone(){if(!this.isNomadicEnabled||!this.nomadicObject.featureActivated){const profileError=new Error("nomadicLoginOnOfficePhone failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}this.logger.info("[telephonyService] [TEL] nomadicLoginOnOfficePhone");try{const url=this.portalURL+"nomadic/login",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] nomadicLoginOnOfficePhone - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"nomadicLoginOnOfficePhone");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}async nomadicLogout(){if(!this.isNomadicEnabled||!this.nomadicObject.featureActivated){const profileError=new Error("nomadicLogout failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}this.logger.info("[telephonyService] [TEL] nomadicLogout");try{const url=this.portalURL+"nomadic/logout",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] nomadicLogout - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"nomadicLogout");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}async getNomadicStatus(){if(this.isSipWise())this.logger.info("[telephonyService] getNomadicStatus -- SipWise bypass Nomadic");else{if(!this.isNomadicEnabled){const profileError=new Error("getNomadicStatus failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[telephonyService] "+profileError.message),profileError}if(!this.starting&&!this.started)throw new Error("getNomadicStatus failure - Telephony not started");try{const url=this.portalURL+"nomadic",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;this.updateNomadicData(data)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getNomadicStatus");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}}async setNomadicState(){this.logger.info("[telephonyService] [TEL] setNomadicState");try{const url=this.portalURL+"nomadic/state",data={makeCallInitiatorIsMain:"true"},body=JSON.stringify(data),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] setNomadicState - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setNomadicState");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}async updateNomadicData(response){const destination=response.destination?anonymizer_1.default(response.destination):"";this.logger.info("[telephonyService] [TEL] updateNomadicData destination: "+destination+" featureActivated: "+response.featureActivated+" makeCallInitiatorIsMain: "+response.makeCallInitiatorIsMain+" modeActivated: "+response.modeActivated+" monodevice: "+this.contactService.userContact.isVirtualTerm+" NomadicInitialized: "+response.nomadicModeInitialized+" otherPhoneModeDenied:"+response.otherPhoneModeDenied);const nomadicObjectOrg=JSON.parse(JSON.stringify(this.nomadicObject));this.nomadicObject.featureActivated="true"===response.featureActivated,this.nomadicObject.modeActivated="true"===response.modeActivated,this.nomadicObject.destination=response.destination,this.nomadicObject.makeCallInitiatorIsMain="true"===response.makeCallInitiatorIsMain,this.nomadicObject.otherPhoneModeDenied="true"===response.otherPhoneModeDenied,void 0===response.nomadicModeInitialized?this.nomadicObject.nomadicModeInitialized=!0:this.nomadicObject.nomadicModeInitialized="true"===response.nomadicModeInitialized;const makeCallInitiatorIsMainChanged=nomadicObjectOrg.makeCallInitiatorIsMain!==this.nomadicObject.makeCallInitiatorIsMain;if(this.nomadicAnswerNotTakedIntoAccount||this.eventService.publish("ON_CALL_NOMADIC_EVENT",this.nomadicObject),this.nomadicAnswerNotTakedIntoAccount=!1,!this.nomadicObject.featureActivated||this.nomadicObject.nomadicModeInitialized||""!==this.nomadicObject.destination&&void 0!==this.nomadicObject.destination||!this.isMediaPillarConfigured())if(this.contactService.userContact.isVirtualTerm||!this.nomadicObject.featureActivated||this.nomadicObject.nomadicModeInitialized||""!==this.nomadicObject.destination&&void 0!==this.nomadicObject.destination||!this.contactService.userContact.mobileProCan&&!this.contactService.userContact.mobilePerso)if(!this.contactService.userContact.isVirtualTerm||!this.nomadicObject.featureActivated||this.nomadicObject.nomadicModeInitialized||""!==this.nomadicObject.destination&&void 0!==this.nomadicObject.destination||!this.contactService.userContact.mobileProCan&&!this.contactService.userContact.mobilePerso){if(this.contactService.userContact.isVirtualTerm&&this.nomadicObject.featureActivated&&!this.nomadicObject.makeCallInitiatorIsMain&&!this.nomadicObject.modeActivated&&this.isMediaPillarConfigured()){const defaultNumber=this.getMyMediaPillarRemoteExtension();this.nomadicLogin(defaultNumber)}}else{const defaultNumber=this.contactService.userContact.mobileProCan?this.contactService.userContact.mobileProCan:this.contactService.userContact.mobilePerso;this.nomadicLogin(defaultNumber)}else{const defaultNumber=this.contactService.userContact.mobileProCan?this.contactService.userContact.mobileProCan:this.contactService.userContact.mobilePerso;(async()=>{await this.nomadicLogin(defaultNumber,!1,!0),this.nomadicLoginOnOfficePhone()})()}else{const defaultNumber=this.getMyMediaPillarRemoteExtension();this.nomadicLogin(defaultNumber)}return makeCallInitiatorIsMainChanged}getNomadicObject(){return this.nomadicObject}getNomadicDestination(){return this.nomadicObject.destination}isMediaPillarConfigured(){return this.mediaPillarConfigured&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_WEBRTC_PSTN_CALLING)}getMyMediaPillarRemoteExtension(){if(!this.isSipWise())return this.mediaPillarRemoteExtension;const webrtc=this.telephonyServiceSipWise.getDeviceIdWithType("webrtc");return webrtc||""}isMediaPillarAvailable(){return this.isMediaPillarConfigured()&&this.mediaPillarAlive}isMediaPillarUserSelected(){let selected;if(this.isSipWise()){const current=this.telephonyServiceSipWise.getCurrentDevice();selected=current&&"webrtc"===current.type}else selected=!this.nomadicObject.makeCallInitiatorIsMain&&this.getNomadicDestination()===this.getMyMediaPillarRemoteExtension();return selected}async sendDtmf(call,dtmf){if(call&&dtmf){if(this.logger.info("[telephonyService] [TEL] sendDtmf for call "+call.id),this.isSipWise())return void await this.telephonyServiceSipWise.sendDtmf(call,dtmf);try{const url=this.portalURL+"calls/"+encodeURIComponent(call.connectionId)+"/dtmf",data={dtmf:dtmf},body=JSON.stringify(data),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] [TEL] sendDtmf - success");return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sendDtmf");throw this.logger.error("[telephonyService] [TEL] "+errorInfo.message),errorInfo.error}}}clearCall(call,nobroadcast=!1){if(call)this.logger.info("[telephonyService] clearCall for call id: "+call.id),call.setStatus(call_model_1.Call.Status.UNKNOWN),nobroadcast||(call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)),call.contact&&delete this.calls[call.contact.id],call.getCurrentCalled()&&call.setCurrentCalled(null);else{const errorMessage="clearCall failure : call null";this.logger.error("[telephonyService]"+errorMessage)}}startAsPhoneNumber(phoneNumber){const cleanPhoneNumber=phoneNumber.trim().split(".").join("");if(cleanPhoneNumber.length<1)return!1;const match=cleanPhoneNumber.match(/^(\+|\d|#|\*|\(|\)|\.|-|–|—|\s|\/)*$/);return!!match&&match[0]===cleanPhoneNumber}updateContactFromOutlookInfos(__contact,__phoneNumber,__reload,__mode){this.logger.info("[telephonyService] default updateContactFromOutlookInfos")}isSipWiseRoot(){return this.contactService.userContact&&this.contactService.userContact.systDeviceName===TelephonyService.SIPWISE_RVCP}setSipWise(condition){this.sipWise=condition}isSipWise(){return this.sipWise}isSipWiseEmulatedRingBackTone(){let emulatedRingBackTone=!1;const settings=this.telephonyServiceSipWise.getSettings();return settings&&(emulatedRingBackTone=Boolean(settings.emulatedRingBackTone)),emulatedRingBackTone}getSipWiseRoutingInfo(){this.logger.info("[telephonyService] getSipWiseRoutingInfo"),this.isSipWise()?this.telephonyServiceSipWise.getUserRoutingInfo():this.logger.info("[telephonyService] getSipWiseRoutingInfo Anomaly not a sipWise situation")}setSipWiseCurrentDevice(currentDeviceId){this.isSipWise()?this.telephonyServiceSipWise.putUserRoutingInfo(currentDeviceId,null):this.logger.info("[telephonyService] setSipWiseCurrentDevice Anomaly not a sipWise situation")}async getSipWiseCurrentCli(forceUpdate=!1){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] getSipWiseCurrentCli Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");if(!1===Boolean(this.currentCli)||forceUpdate)try{this.currentCli=await this.telephonyServiceSipWise.getCliOptionsCurrent()}catch(error){throw this.logger.error("[telephonyService] getSipWiseCurrentCli - error retrieving option"),this.currentCli=null,error}return this.currentCli}async getSipWiseAllCli(forceUpdate=!1){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] getSipWiseAllCli Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");if(0===this.cliOptions.length||forceUpdate)try{this.cliOptions=await this.telephonyServiceSipWise.getCliOptionsAll(),this.currentCli=this.cliOptions.find(cliOption=>!0===cliOption.current)}catch(error){throw this.logger.error("[telephonyService] getSipWiseAllCli - error retrieving options, empty the list"),this.cliOptions=[],error}return this.cliOptions}async getSipWiseCurrentCliIfEditable(){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] getSipWiseCurrentCliIfEditable Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");const cliOptions=await this.getSipWiseAllCli();return cliOptions&&cliOptions.length>1?this.currentCli:null}async setSipWiseCliOption(cliOption){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] setSipWiseCliOption Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");return await this.telephonyServiceSipWise.setCliOption(cliOption)}async getSipWiseClir(){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] getSipWiseClir Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");return await this.telephonyServiceSipWise.getClirOption()}async setSipWiseClirOption(clirActivation){if(!this.isSipWiseRoot())throw this.logger.info("[telephonyService] setSipWiseClirOption Anomaly not a sipWise situation"),new Error("Anomaly not a sipWise situation");await this.telephonyServiceSipWise.setClirOption(clirActivation)}isMonolineIncomingModeActivated(){return this.telephonyServiceSipWise.isMonolineIncomingModeActivated()}sipWiseUserGroupsDataClear(){this.sipWiseUserGroupsData.myMemberId="",this.sipWiseUserGroupsData.managerAssistGrId=0,this.sipWiseUserGroupsData.managerId=0,this.sipWiseUserGroupsData.managerName="",this.sipWiseUserGroupsData.managerStatus="",this.sipWiseUserGroupsData.managerForward="unknow",this.sipWiseUserGroupsData.assistantId=0,this.sipWiseUserGroupsData.assistantName="",this.sipWiseUserGroupsData.assistantStatus="",this.sipWiseUserGroupsData.isSomeMngAssistAsHG=!1,this.sipWiseUserGroupsData.huntingGroupNb=0,this.sipWiseUserGroupsData.managerAssistantNb=0,this.sipWiseUserGroupsData.managerAssistantMyAssistList=[],this.sipWiseUserGroupsData.managerAssistantMyMngList=[],this.sipWiseUserGroupsData.sipWiseUserGroupsList=[]}sipWiseGetFormerManagerAssistGrId(){return this.sipWiseUserGroupsData.managerAssistGrId}sipWiseUserGroupsDataIsManagerAssistant(){return!!(this.isSipWise()&&this.sipWiseUserGroupsData.managerAssistantNb>0)&&(1===this.sipWiseUserGroupsData.managerAssistantNb||(this.logger.info("[telephonyService] sipWiseUserGroupsDataIsManagerAssistant Anomaly not 1:1 Manager/Assistant"),!1))}sipWiseManAssistGetMyRole(){let myRole="";if(this.isSipWise()&&this.sipWiseUserGroupsData.managerAssistantNb>0){const foundGr=this.sipWiseUserGroupsData.sipWiseUserGroupsList.find(elt=>"manager_assistant"===elt.type);if(foundGr){const me=foundGr.members.find(elt=>elt.memberId===this.contactService.userContact.dbId);me&&(myRole=me.roles[0])}}return myRole}sipWiseManAssistIamManagerForwarded(){let managerForward="unknown",result=!1;return this.isSipWise()&&this.sipWiseUserGroupsData.managerAssistantNb>=1&&"manager"===this.sipWiseManAssistGetMyRole()&&(managerForward=this.sipWiseUserGroupsData.managerForward),"activated"===managerForward&&(result=!0),result}getSipWiseUserGroupsData(){return this.sipWiseUserGroupsData}async getSipWiseUserGroups(){if(this.logger.info("[telephonyService] getSipWiseUserGroups"),this.isSipWise())try{await this.telephonyServiceSipWise.getUserGroups(),await this.telephonyServiceSipWise.getAllUserGroupsForwards(),this.eventService.publish("ON_TEL_USER_GROUPS_EVENT",this.sipWiseUserGroupsData)}catch(error){this.logger.info("[telephonyService] sipwise getSipWiseUserGroups CATCH");const errorMessage="sipwise getUserGroups -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise getUserGroups -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async setSipWiseJoinGroup(groupId){if(this.logger.info("[telephonyService] [TEL] setSipWiseJoinGroup"),this.isSipWise())if(groupId)try{await this.telephonyServiceSipWise.joinGroup(groupId)}catch(error){this.logger.info("[telephonyService] sipwise joinGroup CATCH");const errorMessage="sipwise join Group -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise join Group -- groupId anomaly";this.logger.error("[telephonyService] "+errorMessage)}else{const errorMessage="sipwise join Group -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async setSipWiseLeaveGroup(groupId){if(this.logger.info("[telephonyService] [TEL] setSipWiseLeaveGroup"),this.isSipWise())if(groupId)try{await this.telephonyServiceSipWise.leaveGroup(groupId)}catch(error){this.eventService.publish("ON_TEL_USER_GROUPS_EVENT",this.sipWiseUserGroupsData),this.logger.info("[telephonyService] sipwise leaveGroup CATCH");const errorMessage="sipwise leave Group -- "+(error.data?error.data.errorDetails:"");throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise leave Group -- groupId anomaly";this.logger.error("[telephonyService] "+errorMessage)}else{const errorMessage="sipwise leave Group -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async setSipWiseJoinAllGroups(){if(this.logger.info("[telephonyService] [TEL] setSipWiseJoinAllGroups"),this.isSipWise())try{await this.telephonyServiceSipWise.joinAllGroups()}catch(error){this.logger.info("[telephonyService] setSipWiseJoinAllGroups CATCH");const errorMessage="sipwise joinAllGroups -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise joinAllGroups -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async setSipWiseLeaveAllGroups(){if(this.logger.info("[telephonyService] [TEL] setSipWiseLeaveAllGroups"),this.isSipWise())try{return await this.telephonyServiceSipWise.leaveAllGroups()}catch(error){this.logger.info("[telephonyService] setSipWiseLeaveAllGroups CATCH");const errorMessage="sipwise leaveAllGroups -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise leaveAllGroups -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async getSipWiseUserGroupsForwards(groupId){if(this.logger.info("[telephonyService] [TEL] getSipWiseUserGroupsForwards"),this.isSipWise())try{await this.telephonyServiceSipWise.getUserGroupForwards(groupId),this.eventService.publish("ON_TEL_USER_GROUPS_EVENT",this.sipWiseUserGroupsData)}catch(error){this.logger.info("[telephonyService] sipwise getSipWiseUserGroupsForwards CATCH");const errorMessage="sipwise getUserGroupsForwards -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise getUserGroupsForward -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}async setSipWiseUserGroupsForwards(groupId,callForwardType,forwardData){if(this.logger.info("[telephonyService] [TEL] setSipWiseUserGroupsForwards"),this.isSipWise())try{await this.telephonyServiceSipWise.setUserGroupForward(groupId,callForwardType,forwardData)}catch(error){this.logger.info("[telephonyService] setSipWiseUserGroupsForwards CATCH");const errorMessage="sipwise setSipWiseUserGroupsForwards -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else{const errorMessage="sipwise setSipWiseUserGroupsForwards -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}sipWiseManAssistActivate(active,groupName){let groupId,groupNotFound=!0;if(this.logger.info("[telephonyService] [TEL] sipWiseManAssistActivate  Activ : "+active+" groupName : "+groupName),0===this.sipWiseUserGroupsData.managerAssistantNb){const errorMessage="sipwise sipWiseManAssistActivate -- no Manager Assistant group available";return void this.logger.error("[telephonyService] "+errorMessage)}if(groupName||(groupName=""),this.sipWiseUserGroupsData.sipWiseUserGroupsList.forEach(group=>{groupNotFound&&"manager_assistant"===group.type&&(groupName!==group.name&&""!==groupName||(groupId=group.id,groupNotFound=!1))}),groupNotFound)return;const forwardData={destinationType:"managersecretary",activate:active};this.setSipWiseUserGroupsForwards(groupId,"immediate",forwardData)}async sipWiseManAssistAsHGJoinLeave(action="",groupId,leaderId){if(this.logger.info("[telephonyService] [TEL] sipWiseManAssistAsHGJoinLeave  Activ : "+action+" groupId: "+groupId+" leaderId: "+leaderId),this.isSipWise())if(this.sipWiseUserGroupsData.isSomeMngAssistAsHG)if("join"===action||"leave"===action){if(groupId){if(!this.sipWiseUserGroupsData.sipWiseUserGroupsList.find(group=>"hunting_group"===group.type&&"manager_assistant"===group.subType&&group.id===groupId)){const errorMessage="sipwise sipWiseManAssistAsHGJoinLeave -- invalid groupId";return void this.logger.error("[telephonyService] "+errorMessage)}}if(leaderId){if(!this.sipWiseUserGroupsData.sipWiseUserGroupsList.find(group=>"hunting_group"===group.type&&"manager_assistant"===group.subType&&group.members[0].memberId===leaderId)){const errorMessage="sipwise sipWiseManAssistAsHGJoinLeave -- invalid leaderId";return void this.logger.error("[telephonyService] "+errorMessage)}}if(groupId)if("join"===action)try{await this.telephonyServiceSipWise.joinGroup(groupId,leaderId)}catch(error){this.logger.info("[telephonyService] sipWiseManAssistAsHGJoinLeave CATCH");const errorMessage="sipwise joinGroup -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else try{await this.telephonyServiceSipWise.leaveGroup(groupId,leaderId)}catch(error){this.logger.info("[telephonyService] sipWiseManAssistAsHGJoinLeave CATCH");const errorMessage="sipwise leaveGroup -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else if("join"===action)try{await this.telephonyServiceSipWise.joinAllGroups("manager_assistant")}catch(error){this.logger.info("[telephonyService] setSipWiseJoinAllGroups CATCH");const errorMessage="sipwise joinAllGroups -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}else try{await this.telephonyServiceSipWise.leaveAllGroups("manager_assistant")}catch(error){this.logger.info("[telephonyService] setSipWiseLeaveAllGroups CATCH");const errorMessage="sipwise leaveAllGroups -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}}else{const errorMessage="sipwise sipWiseManAssistAsHGJoinLeave -- invalid action";this.logger.error("[telephonyService] "+errorMessage)}else{const errorMessage="sipwise sipWiseManAssistAsHGJoinLeave -- no Manager Assistant group available";this.logger.error("[telephonyService] "+errorMessage)}else{const errorMessage="sipWiseManAssistAsHGJoinLeave -- not a sipWise situation";this.logger.error("[telephonyService] "+errorMessage)}}sipWiseUserGroupsDataIsMngAssistAsHG(){return this.sipWiseUserGroupsData.isSomeMngAssistAsHG}async onUpdateHuntingGroupsData(){try{await this.getSipWiseUserGroups()}catch(error){this.logger.info("[telephonyService] onUpdateHuntingGroupsData CATCH");const errorMessage="onUpdateHuntingGroupsData -- "+error.message;throw this.logger.error("[telephonyService] "+errorMessage),error}}oxoMultiCallMode(){if(!this.isOxo)return!1;let result=!1;result=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_OXO_MULTICALL),result=result&&this.agentStatus.featureOXOMULTICALL;const sipWiseFlagHack=this.settingsService.getSetting("sipWiseMode");return result=result||"RQ6394"===sipWiseFlagHack,result}sipWiseMode(){let mode=this.settingsService.getSetting("sipWiseMode");return this.sipWise||(mode="false"),mode}async resetAllSipWiseCall(){if(this.isSipWise()){const iq=$iq({type:"set",to:this.userJidTel+"/pcg2"}).c("telephony",{xmlns:"urn:xmpp:pbxagent:telephony:1"}).c("service").c("deleteCalls",{forced:"true"});try{const data=await this.xmppService.sendIQ(iq,6e4);this.logger.error("[telephonyService] resetAllSipWiseCall : try to reset all ghost calls !"+data)}catch(error){const errorMessage="resetAllSipWiseCall failure : "+error.message;this.logger.error("[telephonyService]"+errorMessage)}}}async oxopbxsUpdateIndividualPassword(newPassword){try{const url="${config.restServerUrl}/api/rainbow/oxopbxprovisioning/v1.0/oxopbxs/"+this.contactService.userContact.systemId+"/subscribers/"+this.contactService.userContact.dbId+"/password",reqData={password:newPassword},body=JSON.stringify(reqData),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[telephonyService] oxopbxsUpdateIndividualPassword : success");return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"oxopbxsUpdateIndividualPassword");throw this.logger.error("[telephonyService] "+errorInfo.message),errorInfo.error}}setPgiCallObject(numberCalled,dtmfToSend,roomJid,callId){this.currentPgiObject={numberCalled:numberCalled,dtmfToSend:dtmfToSend,roomJid:roomJid,callId:callId}}onMediaPillarConfigChanged(__event,isConfigured,remoteExtension){this.mediaPillarConfigured=isConfigured,this.mediaPillarRemoteExtension=remoteExtension,this.logger.info("[telephonyService] onMediaPillarConfigChanged isConfigured: "+isConfigured+" remoteExtension: "+remoteExtension)}onMediaPillarStateChanged(__event,mediaPillarAlive){this.mediaPillarAlive=mediaPillarAlive,this.logger.info("[telephonyService] onMediaPillarStateChanged alive: "+mediaPillarAlive)}getCapabilitiesForCall(call,destinationContact=null){if(!call)return{};const capabilities={makeCall:!1,answer:!1,drop:!1,hold:!1,retrieve:!1,transfer:!1,conference:!1,deflect:!1,blindTransfer:!1,adhocConference:!1},ongoingOutgoingCall=this.getOngoingOutgoingCall();switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:capabilities.answer=!0,capabilities.drop=!0,capabilities.makeCall=this.isSecondCallAllowed&&!ongoingOutgoingCall,capabilities.deflect=!0;break;case call_model_1.Call.Status.QUEUED_INCOMMING:capabilities.answer=this.isSecondCallAllowed,capabilities.drop=!0,capabilities.makeCall=this.isSecondCallAllowed&&!ongoingOutgoingCall,capabilities.deflect=!0;break;case call_model_1.Call.Status.DIALING:case call_model_1.Call.Status.QUEUED_OUTGOING:case call_model_1.Call.Status.RINGING_OUTGOING:capabilities.drop=!0;break;case call_model_1.Call.Status.ACTIVE:{const selectedCall=this.activeConversation?this.activeConversation.audioCall:null;capabilities.drop=!0,capabilities.hold=!call.isConference,capabilities.makeCall=this.isSecondCallAllowed&&!call.isConference&&(!destinationContact||call.contact.jid!==destinationContact.jid),capabilities.blindTransfer=this.isSipWise()&&this.isTransferAllowed&&(!destinationContact||call.contact.jid!==destinationContact.jid),capabilities.adhocConference=this.isSipWise()&&this.isAdhocConferenceAllowed&&!(this.contactService.userContact&&this.contactService.userContact.attendantConsoleEnabled),capabilities.transfer=this.isTransferAllowed&&selectedCall&&selectedCall.status===call_model_1.Call.Status.HOLD;break}case call_model_1.Call.Status.HOLD:{const selectedCall=this.activeConversation?this.activeConversation.audioCall:null;capabilities.retrieve=this.isSecondCallAllowed&&!ongoingOutgoingCall,capabilities.makeCall=this.isSecondCallAllowed&&!ongoingOutgoingCall,capabilities.transfer=this.isTransferAllowed&&selectedCall&&(selectedCall.status===call_model_1.Call.Status.ACTIVE||selectedCall.status===call_model_1.Call.Status.RINGING_OUTGOING&&!this.isSipWise()),capabilities.conference=this.isConferenceAllowed&&selectedCall&&selectedCall.status===call_model_1.Call.Status.ACTIVE&&!this.isSipWise();break}case call_model_1.Call.Status.PUT_ON_HOLD:capabilities.drop=!0,capabilities.makeCall=this.isSecondCallAllowed&&!ongoingOutgoingCall;break;case call_model_1.Call.Status.ERROR:capabilities.drop=!0}return this.logger.info("[telephonyService] TelCapabilities getCapabilitiesForCall call: "+call+" => "+JSON.stringify(capabilities)),capabilities}getCapabilitiesForContact(contact){if(!contact)return;if(this.contactService.userContact&&contact.jid===this.contactService.userContact.jid)return this.getCapabilitiesForMyContact();const capabilities={makeCall:!1,answer:!1,drop:!1,hold:!1,retrieve:!1,transfer:!1,conference:!1,deflect:!1,blindTransfer:!1,adhocConference:!1},callsForContact=this.getCallsForContact(contact);return 1===callsForContact.length?this.getCapabilitiesForCall(callsForContact[0],contact):0===callsForContact.length?this.getCapabilitiesForMyContact():(this.logger.info("[telephonyService] TelCapabilities getCapabilitiesForContact contact: "+contact+" => "+JSON.stringify(capabilities)),capabilities)}getCapabilitiesForMyContact(){const capabilities={makeCall:!1,deflect:!1,blindTransfer:!1};capabilities.makeCall=!this.getOngoingOutgoingCall();const selectedCall=this.activeConversation?this.activeConversation.audioCall:null;switch(selectedCall?selectedCall.status:null){case call_model_1.Call.Status.RINGING_INCOMMING:case call_model_1.Call.Status.QUEUED_INCOMMING:capabilities.deflect=!selectedCall.sipWiseData||"distributed"!==selectedCall.sipWiseData.initCause;break;case call_model_1.Call.Status.ACTIVE:capabilities.blindTransfer=!0}return this.logger.info("[telephonyService] TelCapabilities getCapabilitiesForMyContact => "+JSON.stringify(capabilities)),capabilities}notifyTelCapabilitiesChange(call){if(call&&call.contact){const newCapabilities=this.getCapabilitiesForCall(call);!this.telCapabilitiesEquals(newCapabilities,call.contact.telCapabilities)?(this.logger.info("[telephonyService] TelCapabilities Notify for jid: "+call.contact.jid+" => "+JSON.stringify(newCapabilities)),call.contact.telCapabilities=newCapabilities):this.logger.debug("[telephonyService] TelCapabilities nothing to notify for jid: "+call.contact.jid)}const myNewCapabilities=this.getCapabilitiesForMyContact();!this.telCapabilitiesEquals(myNewCapabilities,this.contactService.userContact.telCapabilities)?(this.logger.info("[telephonyService] TelCapabilities Notify for my jid => "+JSON.stringify(myNewCapabilities)),this.contactService.userContact.telCapabilities=myNewCapabilities):this.logger.debug("[telephonyService] TelCapabilities nothing to notify for my jid")}telCapabilitiesEquals(capa1,capa2){if(null==capa1||null==capa2)return capa1===capa2;const capa1keys=Object.keys(capa1);return Object.keys(capa2).every(i=>-1!==capa1keys.indexOf(i))&&capa1keys.every(i=>capa1[i]===capa2[i])}onActiveConversationChange(__event,activeConversation){this.contactService.userContact&&(this.contactService.userContact.attendantConsoleEnabled||this.contactService.userContact.supervisorConsoleEnabled)&&(this.logger.info("[telephonyService] TelCapabilities onActiveConversationChange conv: "+(activeConversation?activeConversation.id:"null")),this.activeConversation=activeConversation,this.notifyTelCapabilitiesChange(null))}onCallUpdated(__event,call){this.contactService.userContact&&(this.contactService.userContact.attendantConsoleEnabled||this.contactService.userContact.supervisorConsoleEnabled)&&call&&call.type===call_model_1.Call.Type.PHONE&&(this.logger.info("[telephonyService] TelCapabilities onCallUpdated call: "+call),this.notifyTelCapabilitiesChange(call))}async putActiveTelephonyCallOnHold(){if(this.isMixPstnWebRtcAllowed&&this.isMediaPillarAvailable()&&this.isMediaPillarUserSelected())try{const call=this.getActiveCall();call&&(this.logger.info("[telephonyService] putActiveTelephonyCallOnHold "+call),await this.holdCall(call))}catch(error){this.logger.info("[telephonyService] putActiveTelephonyCallOnHold error -- "+error)}}}TelephonyService.SIPWISE_RVCP="RVCP Subscriber",exports.TelephonyService=TelephonyService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const settings_service_1=__webpack_require__(18),main_service_1=__webpack_require__(15),logger_service_1=__webpack_require__(4);class UserInfoService{constructor(){this.userColors=["#ca8741","#e44647","#c62582","#9b4ce7","#6573ee","#1b70e0","#6ec7d9","#98d1b1","#7fbd40","#b2d334","#dcd232","#f1be00"],this.userColorNames=["purple-lavender","purple-violet","red-coral","blue-jeanlouisdavid","green-mint","green-yellow","orange-jade","pink-lady","yellow-submarine","blue-teal"],this.logger=logger_service_1.LoggerService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.userInfoService||(win.rainbow.userInfoService=new UserInfoService),win.rainbow.userInfoService}getAvatarImage(objId,initials,color,size,lastAvatarUpdate){if(!(lastAvatarUpdate=void 0!==lastAvatarUpdate&&lastAvatarUpdate))return initials?this.createDefaultAvatarImage(initials,color):null;let src=config.webservices.protocol+"://"+config.webservices.currentServer+"/api/avatar/"+objId+"?size="+(size||256);return lastAvatarUpdate&&(src+="&update="+main_service_1.MainService.MD5(lastAvatarUpdate)),{src:src}}getNameInformation(firstName,lastName){const result={displayName:"",initials:""};return 1!==lastName.length&&2!==firstName.length?"FL"===this.settingsService.getSetting("displayOrder")?(result.displayName=firstName+" "+lastName,result.initials=firstName.charAt(0).toUpperCase()+lastName.charAt(0).toUpperCase()):(result.displayName=lastName+" "+firstName,result.initials=lastName.charAt(0).toUpperCase()+firstName.charAt(0).toUpperCase()):("FL"===this.settingsService.getSetting("displayOrder")?result.displayName=firstName+" "+lastName:result.displayName=lastName+" "+firstName,result.initials=firstName.charAt(0).toUpperCase()+firstName.charAt(1).toUpperCase()),result}createDefaultAvatarImage(initials,color){const image=new Image,canvas=document.createElement("canvas");canvas.width=image.width=225,canvas.height=image.height=225;const ctx=canvas.getContext("2d");return ctx.rect(0,0,225,225),ctx.fillStyle=color,ctx.fill(),ctx.font="bold 100px Helvetica",ctx.textAlign="center",ctx.fillStyle="white",ctx.fillText(initials,110,150),image.src=canvas.toDataURL("image/png"),image}computeUserColor(displayName){const result={colorIndex:0,color:this.userColors[0],colorName:this.userColorNames[0]};try{const upperCaseDisplayName=displayName.toUpperCase();let sum=0;for(let i=0;i<upperCaseDisplayName.length;i++)sum+=upperCaseDisplayName.charCodeAt(i);result.colorIndex=sum%12,result.color=this.userColors[result.colorIndex],result.colorName=this.userColorNames[result.colorIndex]}catch(error){this.logger.error("[UserInfoService] computeUserColor failure"),result.colorIndex=1,result.color=this.userColors[result.colorIndex],result.colorName=this.userColorNames[result.colorIndex]}return result}}exports.UserInfoService=UserInfoService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return concat}));var _of__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(65),_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(118);function concat(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__.a)()(_of__WEBPACK_IMPORTED_MODULE_0__.a.apply(void 0,observables))}},function(module,__webpack_exports__,__webpack_require__){"use strict";var subscribeToArray=__webpack_require__(129),hostReportError=__webpack_require__(61),symbol_iterator=__webpack_require__(36),observable=__webpack_require__(41),isArrayLike=__webpack_require__(130),isPromise=__webpack_require__(131),isObject=__webpack_require__(89);__webpack_require__.d(__webpack_exports__,"a",(function(){return subscribeTo}));var subscribeTo=function(result){if(result&&"function"==typeof result[observable.a])return obj=result,function(subscriber){var obs=obj[observable.a]();if("function"!=typeof obs.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return obs.subscribe(subscriber)};if(Object(isArrayLike.a)(result))return Object(subscribeToArray.a)(result);if(Object(isPromise.a)(result))return promise=result,function(subscriber){return promise.then((function(value){subscriber.closed||(subscriber.next(value),subscriber.complete())}),(function(err){return subscriber.error(err)})).then(null,hostReportError.a),subscriber};if(result&&"function"==typeof result[symbol_iterator.a])return iterable=result,function(subscriber){for(var iterator=iterable[symbol_iterator.a]();;){var item=void 0;try{item=iterator.next()}catch(err){return subscriber.error(err),subscriber}if(item.done){subscriber.complete();break}if(subscriber.next(item.value),subscriber.closed)break}return"function"==typeof iterator.return&&subscriber.add((function(){iterator.return&&iterator.return()})),subscriber};var iterable,promise,obj,value=Object(isObject.a)(result)?"an invalid object":"'"+result+"'";throw new TypeError("You provided "+value+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")}},function(module,__webpack_exports__,__webpack_require__){"use strict";function hostReportError(err){setTimeout((function(){throw err}),0)}__webpack_require__.d(__webpack_exports__,"a",(function(){return hostReportError}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UUID=exports.SizeAndUnit=exports.PaddingDefinition=exports.SpacingDefinition=exports.StringWithSubstitutions=exports.ContentTypes=exports.GlobalSettings=void 0;var Enums=__webpack_require__(55),GlobalSettings=function(){function GlobalSettings(){}return GlobalSettings.useAdvancedTextBlockTruncation=!0,GlobalSettings.useAdvancedCardBottomTruncation=!1,GlobalSettings.useMarkdownInRadioButtonAndCheckbox=!0,GlobalSettings.allowMarkForTextHighlighting=!1,GlobalSettings.alwaysBleedSeparators=!1,GlobalSettings.enableFullJsonRoundTrip=!1,GlobalSettings.displayInputValidationErrors=!0,GlobalSettings.allowPreProcessingPropertyValues=!1,GlobalSettings.setTabIndexAtCardRoot=!0,GlobalSettings.enableFallback=!0,GlobalSettings.useWebkitLineClamp=!0,GlobalSettings.allowMoreThanMaxActionsInOverflowMenu=!1,GlobalSettings.applets={logEnabled:!0,logLevel:Enums.LogLevel.Error,maximumRetryAttempts:3,defaultTimeBetweenRetryAttempts:3e3,authPromptWidth:400,authPromptHeight:600,refresh:{mode:Enums.RefreshMode.Manual,timeBetweenAutomaticRefreshes:3e3,maximumConsecutiveAutomaticRefreshes:3,allowManualRefreshesAfterAutomaticRefreshes:!0}},GlobalSettings}();exports.GlobalSettings=GlobalSettings,exports.ContentTypes={applicationJson:"application/json",applicationXWwwFormUrlencoded:"application/x-www-form-urlencoded"};var StringWithSubstitutions=function(){function StringWithSubstitutions(){this._isProcessed=!1}return StringWithSubstitutions.prototype.getReferencedInputs=function(inputs,referencedInputs){if(!referencedInputs)throw new Error("The referencedInputs parameter cannot be null.");for(var _i=0,inputs_1=inputs;_i<inputs_1.length;_i++){var input=inputs_1[_i];null!=new RegExp("\\{{2}("+input.id+").value\\}{2}","gi").exec(this._original)&&input.id&&(referencedInputs[input.id]=input)}},StringWithSubstitutions.prototype.substituteInputValues=function(inputs,contentType){if(this._processed=this._original,this._original)for(var regEx=/\{{2}([a-z0-9_$@]+).value\}{2}/gi,matches=void 0;null!==(matches=regEx.exec(this._original));)for(var _i=0,_a=Object.keys(inputs);_i<_a.length;_i++){var key=_a[_i];if(key.toLowerCase()==matches[1].toLowerCase()){var matchedInput=inputs[key],valueForReplace="";matchedInput.value&&(valueForReplace=matchedInput.value),contentType===exports.ContentTypes.applicationJson?valueForReplace=(valueForReplace=JSON.stringify(valueForReplace)).slice(1,-1):contentType===exports.ContentTypes.applicationXWwwFormUrlencoded&&(valueForReplace=encodeURIComponent(valueForReplace)),this._processed=this._processed.replace(matches[0],valueForReplace);break}}this._isProcessed=!0},StringWithSubstitutions.prototype.getOriginal=function(){return this._original},StringWithSubstitutions.prototype.get=function(){return this._isProcessed?this._processed:this._original},StringWithSubstitutions.prototype.set=function(value){this._original=value,this._isProcessed=!1},StringWithSubstitutions}();exports.StringWithSubstitutions=StringWithSubstitutions;var SpacingDefinition=function(top,right,bottom,left){void 0===top&&(top=0),void 0===right&&(right=0),void 0===bottom&&(bottom=0),void 0===left&&(left=0),this.left=0,this.top=0,this.right=0,this.bottom=0,this.top=top,this.right=right,this.bottom=bottom,this.left=left};exports.SpacingDefinition=SpacingDefinition;var PaddingDefinition=function(top,right,bottom,left){void 0===top&&(top=Enums.Spacing.None),void 0===right&&(right=Enums.Spacing.None),void 0===bottom&&(bottom=Enums.Spacing.None),void 0===left&&(left=Enums.Spacing.None),this.top=Enums.Spacing.None,this.right=Enums.Spacing.None,this.bottom=Enums.Spacing.None,this.left=Enums.Spacing.None,this.top=top,this.right=right,this.bottom=bottom,this.left=left};exports.PaddingDefinition=PaddingDefinition;var SizeAndUnit=function(){function SizeAndUnit(physicalSize,unit){this.physicalSize=physicalSize,this.unit=unit}return SizeAndUnit.parse=function(input,requireUnitSpecifier){void 0===requireUnitSpecifier&&(requireUnitSpecifier=!1);var result=new SizeAndUnit(0,Enums.SizeUnit.Weight);if("number"==typeof input)return result.physicalSize=input,result;if("string"==typeof input){var matches=/^([0-9]+)(px|\*)?$/g.exec(input),expectedMatchCount=requireUnitSpecifier?3:2;if(matches&&matches.length>=expectedMatchCount)return result.physicalSize=parseInt(matches[1]),3==matches.length&&"px"==matches[2]&&(result.unit=Enums.SizeUnit.Pixel),result}throw new Error("Invalid size: "+input)},SizeAndUnit}();exports.SizeAndUnit=SizeAndUnit;
/**
 * Fast UUID generator, RFC4122 version 4 compliant.
 * @author Jeff Ward (jcward.com).
 * @license MIT license
 * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
 **/
var UUID=function(){function UUID(){}return UUID.generate=function(){var d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return UUID.lut[255&d0]+UUID.lut[d0>>8&255]+UUID.lut[d0>>16&255]+UUID.lut[d0>>24&255]+"-"+UUID.lut[255&d1]+UUID.lut[d1>>8&255]+"-"+UUID.lut[d1>>16&15|64]+UUID.lut[d1>>24&255]+"-"+UUID.lut[63&d2|128]+UUID.lut[d2>>8&255]+"-"+UUID.lut[d2>>16&255]+UUID.lut[d2>>24&255]+UUID.lut[255&d3]+UUID.lut[d3>>8&255]+UUID.lut[d3>>16&255]+UUID.lut[d3>>24&255]},UUID.initialize=function(){for(var i=0;i<256;i++)UUID.lut[i]=(i<16?"0":"")+i.toString(16)},UUID.lut=[],UUID}();exports.UUID=UUID,UUID.initialize()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const call_model_1=__webpack_require__(29),message_1=__webpack_require__(67),event_model_1=__webpack_require__(19),fileViewer_1=__webpack_require__(106),conversation_model_1=__webpack_require__(96),searchTextConvResults_model_1=__webpack_require__(110),fileDescriptor_1=__webpack_require__(76),searchTextConvResults_model_2=__webpack_require__(110),main_service_1=__webpack_require__(15),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),room_service_1=__webpack_require__(25),event_service_1=__webpack_require__(11),i18n_service_1=__webpack_require__(38),errorHelper_service_1=__webpack_require__(12),fileStorage_service_1=__webpack_require__(34),fileServer_service_1=__webpack_require__(47),webrtcGateway_service_1=__webpack_require__(71),bot_service_1=__webpack_require__(124),telephony_service_1=__webpack_require__(57),conversationServiceEventHandler_1=__webpack_require__(166),conversationServiceBulkHistoryHandler_1=__webpack_require__(462),conversationServiceHistoryHandler_1=__webpack_require__(313),rxjs_1=__webpack_require__(7);class ConversationService{constructor(){this.activeConversation=null,this.searchTextConvResults=new searchTextConvResults_model_1.SearchTextConvResults,this.conversationServiceBulkHistoryHandler=null,this.missedInfoCounters=new rxjs_1.BehaviorSubject(conversation_model_1.ConversationMissedInfoCounters.create()),this.isReinit=!1,this.pendingMessages={},this.conversations=[],this.conversationCreationPromise={},this.inCallConversations=[],this.idleConversations=[],this.involvedContactIds=[],this.rxSubject=new rxjs_1.Subject,this.isBasicCallAllowed=!1,this.isSecondCallAllowed=!1,this.isSecondWebrtcCallAllowed=!1,this.manageTwoWebrtcCallsAllowed=!1,this.subscriptions=[],this.eventServiceSubscriptionHandlers=[],this.xmppSubscriptionHandlers=[],this.conversationServiceEventHandler=null,this.conversationHistoryHandler=null,this.webConferenceService=null,this.mainService=main_service_1.MainService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.botService=bot_service_1.BotService.getInstance(),this.favoriteService=null}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.conversationService||(win.rainbow.conversationService=new ConversationService),win.rainbow.conversationService}async start(webConferenceService){try{this.logger.info(""),this.logger.info("[conversationService] === STARTING ==="),this.webConferenceService=webConferenceService,this.pgiConferenceService=this.mainService.inject("pgiConferenceService"),this.webConferenceServiceV2=this.mainService.inject("webConferenceServiceV2"),this.webrtcP2PService=this.mainService.inject("webrtcP2PService"),this.isBasicCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_BASIC_CALL),this.isSecondCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_SECOND_CALL),this.isSecondWebrtcCallAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MIX_WEBRTC_PSTN_CALLS)||config.mixwebrtcpstn,this.manageTwoWebrtcCallsAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_MANAGE_TWO_CALLS)||config.mixwebrtcpstn,this.attachHandlers(),await this.getServerConversations(),this.linkAllActiveCallsToConversations(),this.cleanUnwantedConversations(),this.pgiConferenceService&&this.subscriptions.push(this.pgiConferenceService.conferenceSessionsSubject.subscribe(updatedConfSessionEvent=>{updatedConfSessionEvent.id===this.pgiConferenceService.getPstnInstantConferenceEndpointId()&&"created"===updatedConfSessionEvent.action&&this.pgiConferenceService.subscribeToMyConferenceSessions(active=>{this.onPGiConferenceStateEvent(active)})})),this.logger.info("[conversationService] === STARTED ==="),this.eventServiceSubscriptionHandlers.forEach(subscriptionHandler=>{subscriptionHandler()}),this.eventServiceSubscriptionHandlers=[],this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_CONTACT_UPDATED_EVENT",(__event,contact)=>{this.onContactChangedEvent(contact)})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe(this.roomService.ROOM_UPDATE_EVENT,(__event,room,action)=>{this.onRoomChangedEvent(room,action)})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe(this.roomService.ROOM_ADD_CONF_ENDPOINT_EVENT,()=>{this.onRoomAddConferenceEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe(this.roomService.ROOM_HISTORY_UPDATE_EVENT,(__event,room)=>{this.onRoomHistoryChangedEvent(room)})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_CALL_UPDATED_EVENT",(__event,call)=>{this.onCallEvent(call)})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_WEBRTC_GW_CALL_UPDATED_EVENT",(__event,call)=>{this.onCallEvent(call,!0)})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_CONVERSATIONS_UPDATED_EVENT",()=>{this.onConversationEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_UPDATE_MYCONTACT_EVENT",()=>{this.onMyContactChangedEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_TELEPHONY_STATUS_CHANGED_EVENT",()=>{this.onTelephonyStateChangeEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_CONFERENCE_STATE_EVENT",()=>{this.onConferenceStateChangeEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_CONFERENCE_PARTICIPANT_EVENT",()=>{this.onConferenceParticipantChangeEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe("ON_RELOAD_CAPABILITIES_FOR_MY_CONYTACT",()=>{this.onReloadCapabilitiesForMyContactEvent()})),this.eventServiceSubscriptionHandlers.push(this.eventService.subscribe(this.roomService.ROOM_ADMIN_MESSAGE_EVENT,(__event,roomJid,userJid,type,msgId,extraParameters)=>{this.onRoomAdminMessageEvent(roomJid,userJid,type,msgId,extraParameters)})),this.webConferenceServiceV2&&this.subscriptions.push(this.webConferenceServiceV2.subscribe(event=>{try{event.name===this.webConferenceServiceV2.RAINBOW_ONWEBCONFERENCESTATUSUPDATED&&(this.logger.debug("[conversationService] on RAINBOW_ONWEBCONFERENCESTATUSUPDATED -- should update conversation list"),this.orderConversations(),this.computeCapabilitiesForMyContact())}catch(__err){return!0}return!0}))}catch(error){throw this.logger.error("[conversationService] === STARTING FAILURE === "+error.message),error}}reconnect(){this.removeHandlers(),this.attachHandlers()}removeHandlers(){this.logger.info("[conversationService] removeHandlers "),this.conversationHistoryHandler=null,this.conversationServiceEventHandler=null,this.conversationServiceBulkHistoryHandler=null,this.xmppSubscriptionHandlers.forEach(handler=>{this.xmppService.deleteHandler(handler)}),this.xmppSubscriptionHandlers=[]}attachHandlers(){this.logger.info("[conversationService] attachHandlers"),this.conversationHistoryHandler=conversationServiceHistoryHandler_1.ConversationServiceHistoryHandler.create(this),this.conversationServiceEventHandler=conversationServiceEventHandler_1.ConversationServiceEventHandler.create(this,this.webConferenceServiceV2),this.conversationServiceBulkHistoryHandler=new conversationServiceBulkHistoryHandler_1.ConversationServiceBulkHistoryHandler(this),this.xmppService.addHistoryHandler(stanza=>this.conversationHistoryHandler.onHistoryMessageReceived(stanza)),this.xmppService.addBulkHistoryHandler(stanza=>this.conversationServiceBulkHistoryHandler.onHistoryMessageReceived(stanza)),this.xmppService.addSearchTextHandler((queryId,stanza)=>{if(this.searchTextConvResults.isCurrentQuery(queryId)){const searchTextItem=this.conversationHistoryHandler.onSearchTextMessageReceived(stanza);searchTextItem&&this.storeSearchTextResult(searchTextItem)}}),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onChatMessageReceived(stanza),!0),null,"message","chat")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onErrorMessageReceived(stanza),!0),null,"message","error")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onChatMessageReceived(stanza),!0),null,"message","groupchat")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onFileMessageReceived(stanza),!0),null,"message","file")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onWebRTCMessageReceived(stanza),!0),null,"message","webrtc")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onPBXMessageReceived(stanza),!0),null,"message","phone")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onManagementMessageReceived(stanza),!0),null,"message","management")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onReceiptMessageReceived(stanza),!0),null,"message")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.conversationServiceEventHandler.onConferenceMessageReceived(stanza),!0),"jabber:x:audioconference","message","chat")),this.xmppSubscriptionHandlers.push(this.xmppService.addHandler(stanza=>(this.onAskSharingMessageReceived(stanza),!0),"http://jabber.org/protocol/commands","iq"))}async stop(){this.logger.info("[conversationService] === STOPPING ==="),this.conversations=[],this.isReinit=!1,this.removeHandlers(),this.eventServiceSubscriptionHandlers.forEach(subscriptionHandler=>{subscriptionHandler()}),this.eventServiceSubscriptionHandlers=[],this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.subscriptions=[],this.logger.info("[conversationService] === STOPPED ===")}subscribe(handler){return this.rxSubject.subscribe(handler)}publish(rbEvent){this.rxSubject.next(rbEvent)}async getServerConversations(){if(this.logger.info("[conversationService] getServerConversations"),!this.contactService.userContact||this.contactService.userContact.instantMessagesEnabled)try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations?webinar=true`,response=await fetch(url,{headers:this.authService.getRequestHeader()});if(!response.ok)throw response;const conversationsData=(await response.json()).data;conversationsData.forEach(conversationData=>{conversationData.creationDateSort=conversationData.creationDate?new Date(conversationData.creationDate):void 0,conversationData.lastModificationSort=conversationData.lastMessageDate?new Date(conversationData.lastMessageDate):void 0}),conversationsData.sort((aa,bb)=>{const aDate=!aa.lastModificationSort&&aa.creationDateSort?aa.creationDateSort:aa.lastModificationSort;return(!bb.lastModificationSort&&bb.creationDateSort?bb.creationDateSort:bb.lastModificationSort)-aDate});const maxConversations=this.authService.fromSDK?3e3:20,conversationPromises=[];let nbValidConversations=0;conversationsData.forEach(conversationData=>{const missedImCounter=parseInt(conversationData.unreadMessageNumber,10),isWebinar="room"===conversationData.type&&(conversationData.name.startsWith("Webinar 1 - ")||conversationData.name.startsWith("Webinar 2 - "));nbValidConversations>=maxConversations&&0===missedImCounter||isWebinar?this.deleteServerConversation(conversationData.id):"room"!==conversationData.type||this.roomService&&this.roomService.started?(this.logger.info("getServerConversations -- create conversation "+conversationData.jid_im+" "+conversationData.id),conversationPromises.push(this.createConversationFromData(conversationData)),nbValidConversations++):this.logger.info("getServerConversations -- create room conversation "+conversationData.jid_im+" "+conversationData.id+" -- ignored !")}),await this.allSettled(conversationPromises),this.orderConversations()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerConversations");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}else this.logger.warn("[conversationService] getServerConversations skipped - instantMessagesEnabled : false")}allSettled(promises){const wrappedPromises=promises.map(prom=>Promise.resolve(prom).then(val=>({status:"fulfilled",value:val}),err=>({status:"rejected",reason:err})));return Promise.all(wrappedPromises)}async createServerConversation(conversation){try{if(conversation.dbId)return conversation;const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations`;let body=null;switch(conversation.type){case conversation_model_1.Conversation.Type.ONE_TO_ONE:body={peerId:conversation.contact.dbId,type:"user"};break;case conversation_model_1.Conversation.Type.ROOM:body={peerId:conversation.room.dbId,type:"room"};break;case conversation_model_1.Conversation.Type.BOT:conversation.type=conversation_model_1.Conversation.Type.ONE_TO_ONE,body={peerId:conversation.contact.dbId,type:"bot"}}const response=await fetch(url,{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify(body)});if(!response.ok)throw response;const conversationData=(await response.json()).data;return conversation.dbId=conversationData.id,conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE&&conversation.contact&&conversationData&&(conversationData.instantMessagesCustomisation&&(conversation.contact.instantMessagesEnabled="disabled"!==conversationData.instantMessagesCustomisation),conversationData.useWebRTCAudioCustomisation&&(conversation.contact.webrtcAudioEnabled="disabled"!==conversationData.useWebRTCAudioCustomisation),conversationData.useWebRTCVideoCustomisation&&(conversation.contact.webrtcVideoEnabled="disabled"!==conversationData.useWebRTCVideoCustomisation),conversationData.useScreenSharingCustomisation&&(conversation.contact.webrtcSharingEnabled="disabled"!==conversationData.useScreenSharingCustomisation),conversationData.readReceiptsCustomisation&&(conversation.contact.readReceiptsCustomisation="disabled"!==conversationData.readReceiptsCustomisation)),conversation}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createServerConversation");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async deleteServerConversation(conversationId){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations/${conversationId}`,response=await fetch(url,{method:"DELETE",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;this.logger.info("[conversationService] deleteServerConversation success: "+conversationId),this.orderConversations()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteServerConversation");if(404002===errorInfo.error.status)return void this.logger.info("[conversationService] deleteServerConversation success: "+conversationId);throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async updateServerConversation(conversation){if(!conversation.dbId)return conversation;try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations/${conversation.dbId}`,response=await fetch(url,{method:"PUT",headers:this.authService.getPostHeader(),body:JSON.stringify({mute:conversation.muted})});if(!response.ok)throw response;return conversation}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateServerConversation");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async ackAllMessages(conversation,force=!1){try{if(!conversation.ackReadAllReceivedMessages()&&!force)return void this.logger.info("[conversationService] ackAllMessages for conversation "+conversation.dbId+" already updated");const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations/${conversation.dbId}/markallread`,body=this.contactService.userContact.readReceiptsCustomisation?{}:{maskRead:!0},response=await fetch(url,{method:"PUT",headers:this.authService.getPostHeader(),body:JSON.stringify(body)});if(!response.ok)throw response;this.logger.info("[conversationService] ackAllMessages success: "+conversation.dbId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"ackAllMessages");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async setConversationBookmark(conversation,msgId){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations/${conversation.dbId}/bookmark?analyticsConversationType=${conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"p2p":"bubble"}`,body={messageId:msgId},response=await fetch(url,{method:"POST",headers:this.authService.getPostHeader(),body:JSON.stringify(body)});if(!response.ok)throw response;this.logger.info("[conversationService] setConversationBookmark success: "+conversation.dbId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setConversationBookmark");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async deleteConversationBookmark(conversation){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/conversations/${conversation.dbId}/bookmark?analyticsConversationType=${conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"p2p":"bubble"}`,response=await fetch(url,{method:"DELETE",headers:this.authService.getPostHeader()});if(!response.ok)throw response;this.logger.info("[conversationService] deleteConversationBookmark success: "+conversation.dbId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteConversationBookmark");throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}async getOrCreateConversation(id,type){return this["room"===type?"getRoomConversationInternal":"getOrCreateOneToOneConversationInternal"](id)}async createConversationFromData(conversationData){const missedImCounter=parseInt(conversationData.unreadMessageNumber,10),muted=!0===conversationData.mute;return"user"===conversationData.type?this.getOrCreateOneToOneConversationInternal(conversationData.jid_im,conversationData.id,conversationData.lastMessageDate,conversationData.lastMessageText,missedImCounter,muted,conversationData.creationDate,conversationData.lastMessageSender,conversationData.call,conversationData.replace,conversationData.forwardFrom,conversationData.forwardedMessage,conversationData.filename,conversationData.geoloc,conversationData.contentType,conversationData.bookmark,conversationData):this.getRoomConversationInternal(conversationData.jid_im,conversationData.id,conversationData.lastMessageDate,conversationData.lastMessageText,missedImCounter,muted,conversationData.creationDate,conversationData.lastMessageSender,conversationData.topic,conversationData.type,conversationData.forwardFrom,conversationData.forwardedMessage,conversationData.eventName,conversationData.eventJid,conversationData.filename,conversationData.geoloc,conversationData.contentType,conversationData.bookmark)}getOrCreateTelephonyConversation(call){this.logger.info("getOrCreateTelephonyConversation -- "+call.id);let conv=this.getConversation(call.id);return call.id&&this.telephonyService.currentPgiObject&&this.telephonyService.currentPgiObject.callId&&call.id===this.telephonyService.currentPgiObject.callId&&(conv=this.getConversation(this.telephonyService.currentPgiObject.roomJid)),conv||(conv=new conversation_model_1.Conversation(call.id),call.isConference?conv.telephonyContacts=call.participants:(conv.contact=call.contact,call.contact.conversation=conv),this.conversations[call.id]=conv),conv}getOrCreateOneToOneConversationInternal(conversationId,conversationDbId,lastModification,lastMessageText,missedIMCounter,muted,creationDate,lastMessageSenderJid,lastCallInfo,replace,forwardFrom,forwardedMessage,filename,isGeoLoc,lastMessageContentType,bookmark,conversationData){if(this.logger.info("[conversationService] getOrCreateOneToOneConversation "+conversationId+" "+conversationDbId+" "+missedIMCounter),!this.conversationCreationPromise[conversationId]){const conv=this.getConversation(conversationId);if(conv)return conv.preload=!0,Promise.resolve(conv);this.conversationCreationPromise[conversationId]=new Promise(resolve=>{this.contactService.getOrCreateContact(conversationId).then(contact=>{conversationData&&(conversationData.instantMessagesCustomisation&&(contact.instantMessagesEnabled="disabled"!==conversationData.instantMessagesCustomisation),conversationData.useWebRTCAudioCustomisation&&(contact.webrtcAudioEnabled="disabled"!==conversationData.useWebRTCAudioCustomisation),conversationData.useWebRTCVideoCustomisation&&(contact.webrtcVideoEnabled="disabled"!==conversationData.useWebRTCVideoCustomisation),conversationData.useScreenSharingCustomisation&&(contact.webrtcSharingEnabled="disabled"!==conversationData.useScreenSharingCustomisation),conversationData.readReceiptsCustomisation&&(contact.readReceiptsCustomisation="disabled"!==conversationData.readReceiptsCustomisation));const conversation=conversation_model_1.Conversation.createOneToOneConversation(contact);return conversation.lastModification=lastModification?new Date(lastModification):void 0,conversation.lastCallInfo=lastCallInfo,conversation.replaceLastMsgId=replace,lastMessageText&&(conversation.lastMessageText=lastMessageText),lastMessageContentType&&(conversation.lastMessageContentType=lastMessageContentType),conversation.lastMessageSender=this.xmppService.getBareJidFromJid(lastMessageSenderJid),conversation.muted=muted,conversation.creationDate=creationDate?new Date(creationDate):new Date,this.computeCapabilitiesForContact(contact),conversation.dbId=conversationDbId,conversation.missedCounter=missedIMCounter||0,forwardFrom&&-1!==forwardFrom.indexOf("/")&&(forwardFrom=this.xmppService.getBareJidFromJid(forwardFrom)),conversation.forwardFrom=forwardFrom,conversation.forwardedMessage=forwardedMessage,conversation.isForwardedMessageFile=Boolean(forwardFrom&&filename),conversation.isGeoLoc=isGeoLoc,conversation.bookmark=bookmark||null,this.createServerConversation(conversation)}).then(conversation=>{this.conversations[conversation.contact.id]=conversation,this.orderConversations(),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.NEW),resolve(conversation),delete this.conversationCreationPromise[conversationId]}).catch(error=>{const errorMessage="getOrCreateOneToOneConversation "+conversationId+" failure "+error.message;throw this.logger.error("[conversationService] "+errorMessage),delete this.conversationCreationPromise[conversationId],new Error(errorMessage)})})}return this.conversationCreationPromise[conversationId]}getRoomConversationInternal(roomJid,conversationDbId,lastModification,lastMessageText,missedIMCounter,muted,creationDate,lastMessageSenderJid,topic,type,forwardFrom,forwardedMessage,eventName,eventJid,filename,isGeoLoc,lastMessageContentType,bookmark){if(this.logger.info("[conversationService] getRoomConversation "+roomJid),!this.conversationCreationPromise[roomJid]){const conv=this.getConversation(roomJid);if(conv)return conv.preload=!0,Promise.resolve(conv);this.conversationCreationPromise[roomJid]=new Promise((resolve,reject)=>{const room=this.roomService.getRoomByJid(roomJid);if(room||"bot"===type)if(room){const conversation=conversation_model_1.Conversation.createRoomConversation(room);conversation.dbId=conversationDbId,conversation.lastModification=lastModification?new Date(lastModification):void 0,lastMessageText&&("conferenceRemove"===eventName?conversation.lastMessageText="conferenceRemoveMsgRoom":"conferenceAdd"===eventName?conversation.lastMessageText="conferenceAddMsgRoom":"voicemessage"===eventName?(conversation.lastMessageText=this.i18n.translate("newVoiceMessage"),conversation.lastMessageSide="ADMIN"):conversation.lastMessageText=lastMessageText),conversation.muted=muted,conversation.creationDate=creationDate?new Date(creationDate):new Date,conversation.preload=!1,conversation.lastMessageSender=eventName&&eventJid?eventJid:this.xmppService.getBareJidFromJid(lastMessageSenderJid),forwardFrom&&-1!==forwardFrom.indexOf("/")&&(forwardFrom=this.xmppService.getBareJidFromJid(forwardFrom)),conversation.forwardFrom=forwardFrom,conversation.forwardedMessage=forwardedMessage,conversation.isForwardedMessageFile=Boolean(forwardFrom&&filename),conversation.isGeoLoc=isGeoLoc,conversation.bookmark=bookmark||null,conversation.room&&topic&&(conversation.room.desc=topic),missedIMCounter&&(conversation.missedCounter=missedIMCounter),conversationDbId&&(this.conversations[conversation.id]=conversation,this.getRoomPstnConferences(conversation),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.NEW),resolve(conversation),delete this.conversationCreationPromise[roomJid]),this.createServerConversation(conversation).then(createdConv=>{const createdRoom=this.roomService.getRoomByJid(roomJid);createdConv.room=createdRoom,this.conversations[createdConv.id]=createdConv,this.orderConversations(),createdRoom&&"unsubscribed"!==createdRoom.status&&createdRoom.isActive&&this.roomService.sendInitialRoomPresence(createdRoom),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",createdConv,conversation_model_1.Conversation.EventType.NEW),resolve(createdConv),delete this.conversationCreationPromise[roomJid]}).catch(error=>{const errorMessage="getRoomConversationInternal -- createServerConversation failure: "+error.message;this.logger.error("[conversationService] "+errorMessage),delete this.conversationCreationPromise[roomJid],reject(new Error(errorMessage))})}else this.botService.getBotContactByJid(roomJid).then(botContact=>{if(!botContact)throw new Error(`No contact found for bot ${roomJid} at all`);delete this.conversationCreationPromise[roomJid],this.getOrCreateOneToOneConversationInternal(roomJid,conversationDbId,lastModification,lastMessageText,missedIMCounter,muted,creationDate),resolve()}).catch(error=>{const errorMessage="getRoomConversation failure: "+error.message;this.logger.error("[conversationService] "+errorMessage),delete this.conversationCreationPromise[roomJid],reject(new Error(errorMessage))});else this.logger.error("[conversationService] getRoomConversation ("+roomJid+") failure : no such room -- try to get from server and update"),setTimeout(()=>{this.roomService.getServerRoomByJid(roomJid).then(newRoom=>{const conversation=conversation_model_1.Conversation.createRoomConversation(newRoom);conversation.dbId=conversationDbId,conversation.lastModification=lastModification?new Date(lastModification):void 0,conversation.muted=muted,conversation.creationDate=creationDate?new Date(creationDate):new Date,conversation.preload=!1,conversation.bookmark=bookmark||null,forwardFrom&&-1!==forwardFrom.indexOf("/")&&(forwardFrom=this.xmppService.getBareJidFromJid(forwardFrom)),conversation.forwardFrom=forwardFrom,conversation.forwardedMessage=forwardedMessage,conversation.isForwardedMessageFile=Boolean(forwardFrom&&filename),conversation.isGeoLoc=isGeoLoc,lastMessageText&&("conferenceRemove"===eventName?conversation.lastMessageText="conferenceRemoveMsgRoom":"conferenceAdd"===eventName?conversation.lastMessageText="conferenceAddMsgRoom":"voicemessage"===eventName?(conversation.lastMessageText=this.i18n.translate("newVoiceMessage"),conversation.lastMessageSide="ADMIN"):conversation.lastMessageText=lastMessageText),lastMessageContentType&&(conversation.lastMessageContentType=lastMessageContentType),conversation.lastMessageSender=eventName&&eventJid?eventJid:this.xmppService.getBareJidFromJid(lastMessageSenderJid),conversation.room&&topic&&(conversation.room.desc=topic),missedIMCounter&&(conversation.missedCounter=missedIMCounter),conversationDbId?(this.conversations[conversation.id]=conversation,this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.NEW),resolve(conversation),delete this.conversationCreationPromise[roomJid]):(resolve(),delete this.conversationCreationPromise[roomJid]),this.conversations[conversation.id]&&newRoom&&newRoom.isWebConferenceV2Room()?this.eventService.publish("ON_WEBCONF_ADD_HOC_COMPLETED",newRoom):newRoom&&newRoom.confEndpoints&&newRoom.confEndpoints[0]&&this.eventService.publish("ON_ADD_HOC_COMPLETED",newRoom)}).catch(()=>{this.logger.error(`[conversationService] getRoomConversation (${roomJid}) failure : no such room at all`),reject()})},500)})}return this.conversationCreationPromise[roomJid]}getRoomPstnConferences(conversation){if(!this.pgiConferenceService)return;const confEndpoints=conversation.room.confEndpoints;confEndpoints&&confEndpoints.forEach(confEndpoint=>{if("pstnAudio"===confEndpoint.mediaType){const conferenceSession=this.pgiConferenceService.getConferenceSessionById(confEndpoint.confEndpointId);conferenceSession&&(conversation.pstnConferenceSession=conferenceSession)}})}updateRoomConferences(){this.getConversations().forEach(conversation=>{if(conversation.room&&conversation.room.confEndpoints){if(this.pgiConferenceService){const conferenceSession=this.pgiConferenceService.getConferenceSessionById(conversation.room.getPstnConfEndpointId());conversation.pstnConferenceSession=conferenceSession||null}const webConfSession=this.webConferenceService.getConferenceSessionForRoom(conversation.room.confEndpoints);conversation.webConferenceSession=webConfSession||null}else conversation.pstnConferenceSession=null,conversation.webConferenceSession=null})}async closeConversation(conversation){this.logger.info("[conversationService] closeConversation "+conversation.id),await this.deleteServerConversation(conversation.dbId),this.removeConversation(conversation)}removeConversation(conversation){this.logger.info("[conversationService] remove conversation "+conversation.id),conversation.videoCall&&conversation.videoCall.status!==call_model_1.Call.Status.UNKNOWN?this.logger.info("[conversationService] Ignore conversation deletion message for conversation"+conversation.id):(delete this.conversations[conversation.id],this.orderConversations(),this.activeConversation&&this.activeConversation.id===conversation.id&&this.selectNewActiveConversation(),conversation.contact&&(conversation.contact.conversation=null,conversation.contact=null),this.eventService.publish("ON_CONVERSATION_REMOVE_EVENT",conversation))}selectNewActiveConversation(){const conversations=this.getOrderedConversations();return conversations.inCall.length>0?this.setActiveConversation(conversations.inCall[0]):conversations.idle.length>0?this.setActiveConversation(conversations.idle[0]):this.setActiveConversation(null),this.getActiveConversation()}searchConversations(criteria){const queries=criteria.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ -]+/);return this.getOrderedConversations().idle.filter(conversation=>{const names=conversation.filterName.trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").split(/[ -]+/);return queries.every(query=>names.some((name,index)=>!(!name.length||-1===name.indexOf(query))&&(names[index]="",!0)))})}sendChatMessage(conversation,textData,additionalContent=null,answeredMsg=null,mentions=null,urgency=null,urgencyAckType=null,urlMetadata){const id=conversation_model_1.Conversation.getUniqueMessageId(),unicodeData=textData?textData.startsWith("/code")?textData:conversation.shortnameToUnicode(textData):"",answeredMsgId=answeredMsg?answeredMsg.id:null,answeredMsgDate=answeredMsg?answeredMsg.date:null,creationDate=new Date,from=this.contactService.userContact,urgencyAck=answeredMsg?answeredMsg.urgencyAck:null,message=this.addChatMessage(conversation,from,creationDate,unicodeData,id,!0,null,answeredMsgId,answeredMsgDate,additionalContent,mentions,urgencyAck,null);if(message)return message.urgency=urgency,message.urgencyAck=urgencyAck,message.urgencyAckType=urgencyAckType,message.urlMetadata=urlMetadata,this.pendingMessages[message.id]={conversation:conversation,message:message},this.sendXmppMessage(conversation,message),message}async sendChatForwardMessage(conversation,forwardText,forwardedMessage,origConv){forwardText&&forwardText.length&&this.sendChatMessage(conversation,forwardText);let newForwardedMsg=null,fileDescriptorToSend=forwardedMessage.fileId?this.fileStorageService.getFileDescriptorById(forwardedMessage.fileId):null;fileDescriptorToSend?(fileDescriptorToSend.ownerId!==this.contactService.userContact.dbId&&(fileDescriptorToSend=await this.fileStorageService.copyFileToUserCloudStorage(fileDescriptorToSend.id)),await this.shareFileToViewer(conversation,fileDescriptorToSend),newForwardedMsg=message_1.Message.createFileSharingMessage(forwardedMessage.id,forwardedMessage.date,forwardedMessage.from,forwardedMessage.side,forwardedMessage.data,forwardedMessage.status,fileDescriptorToSend.id,forwardedMessage.fileName,null,forwardedMessage.geoloc)):newForwardedMsg=message_1.Message.create(forwardedMessage.id,forwardedMessage.date,forwardedMessage.from,forwardedMessage.side,forwardedMessage.getLastTextModified(),forwardedMessage.status),origConv.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?newForwardedMsg.to=origConv.contact.jid!==forwardedMessage.from.jid?origConv.contact:this.contactService.userContact:newForwardedMsg.to=origConv.room,forwardedMessage.urlMetadata?newForwardedMsg.urlMetadata=forwardedMessage.urlMetadata:forwardedMessage.forwardedMsg&&forwardedMessage.forwardedMsg.urlMetadata&&(newForwardedMsg.urlMetadata=forwardedMessage.forwardedMsg.urlMetadata);const id=conversation_model_1.Conversation.getUniqueMessageId(),creationDate=new Date,from=this.contactService.userContact,message=this.addForwardChatMessage(conversation,from,creationDate,id,newForwardedMsg,origConv);if(message)return this.pendingMessages[message.id]={conversation:conversation,newForwardedMsg:newForwardedMsg,message:message},this.sendXmppMessage(conversation,message),message}async shareFileToViewer(conversation,fileDescriptor){if(fileDescriptor)try{const viewerType=0===conversation.type?"user":"room",viewerOrRoomId=0===conversation.type?conversation.contact.dbId:conversation.room.dbId;await this.fileStorageService.addFileViewer(fileDescriptor.id,viewerOrRoomId,viewerType)}catch(error){throw new Error(error)}}async uploadFileForConversation(conversation,file,isVoiceFile=!1){const viewerData=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?{viewerId:conversation.contact.dbId,type:"user"}:{viewerId:conversation.room.dbId,type:"room"},viewers=fileViewer_1.FileViewer.createFromData([viewerData]),fileDesc=await this.fileStorageService.createFileDescriptor(file,viewers,isVoiceFile);fileDesc.fileToSend=file,fileDesc.isImage()&&file.preview&&(fileDesc.previewBlob=file.preview);try{fileDesc.setState(fileDescriptor_1.FileState.UPLOADING),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDesc,cancelable:!0}),await this.fileServerService.uploadAFileByChunk(fileDesc,file),fileDesc.setState(fileDescriptor_1.FileState.UPLOADED),fileDesc.fileToSend=null,fileDesc.chunkPerformed=0,fileDesc.chunkTotalNumber=0,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDesc})}catch(error){throw this.logger.error("[conversationService] uploadFileForConversation --  error"),fileDesc.setState("uploadError"),error}}async sendFSMessage(conversation,file,data,voiceMessageData,attachedInfos,urgency){try{const viewerData=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?{viewerId:conversation.contact.dbId,type:"user"}:{viewerId:conversation.room.dbId,type:"room"},viewers=fileViewer_1.FileViewer.createFromData([viewerData]),fileDescriptor=await this.fileStorageService.createFileDescriptor(file,viewers,voiceMessageData||!1);fileDescriptor.fileToSend=file,fileDescriptor.isImage()&&file.preview&&(fileDescriptor.previewBlob=file.preview);let message="object"==typeof data?data:void 0;message||(message=this.addFSMessage(conversation,fileDescriptor.id,data,fileDescriptor_1.FileState.UPLOADING,attachedInfos,null,urgency),attachedInfos&&!attachedInfos.attachedMsgId&&(message.attachedMsgId=message.id)),message.fileId=fileDescriptor.id,message.fileName=fileDescriptor.fileName,message.urgency=urgency;try{this.pendingMessages[message.id]={conversation:conversation,message:message},fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADING),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),await this.fileServerService.uploadAFileByChunk(fileDescriptor,file),fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.fileToSend=null,fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor}),this.sendXmppMessage(conversation,message,fileDescriptor)}catch(error){throw this.logger.error("[conversationService] sendFSMessage -- uploadAFile error"),attachedInfos||this.fileStorageService.deleteFileDescriptor(fileDescriptor.id),fileDescriptor.setState("uploadError"),message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.fileErrorMsg=error.translatedMessage?error.translatedMessage:this.i18n.translate("unableToShareFile"),message.sendUpdateEvent(),error}return message}catch(error){if(error instanceof DOMException&&error.code===DOMException.ABORT_ERR)return null;let msgKey=error.translatedMessage?error.translatedMessage:this.i18n.translate("unableToShareFile");throw 403153===error.errorDetailsCode&&(msgKey=this.i18n.translate("fileSharingNoMoreAllowedMsg")),this.mainService.showGlobalPopupMessage({popupTitle:"fileTransfer",popupBodyTranslated:msgKey,okLabel:"ok"}),new Error(error)}}async resendFSMessage(conversation,message){try{if(!message)return;const fileDescriptor=this.fileStorageService.getFileDescriptorById(message.fileId);try{this.pendingMessages[message.id]={conversation:conversation,message:message},message.setReceiptStatus(message_1.Message.ReceiptStatus.IN_PROGRESS),fileDescriptor.chunkPerformedPercent=0,fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADING),message.sendUpdateEvent(),this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor,cancelable:!0}),await this.fileServerService.uploadAFileByChunk(fileDescriptor,fileDescriptor.fileToSend),fileDescriptor.setState(fileDescriptor_1.FileState.UPLOADED),fileDescriptor.fileToSend=null,fileDescriptor.chunkPerformed=0,fileDescriptor.chunkTotalNumber=0,this.eventService.publish("ON_FILE_TRANSFER_EVENT",{fileDesc:fileDescriptor}),this.sendXmppMessage(conversation,message,fileDescriptor)}catch(error){throw this.logger.error("[conversationService] sendFSMessage -- uploadAFile error"),fileDescriptor.setState("uploadError"),message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.fileErrorMsg=error.translatedMessage?error.translatedMessage:this.i18n.translate("unableToShareFile"),message.sendUpdateEvent(),error}}catch(error){let msgKey=error.translatedMessage?error.translatedMessage:this.i18n.translate("unableToShareFile");throw 403153===error.errorDetailsCode&&(msgKey=this.i18n.translate("fileSharingNoMoreAllowedMsg")),this.mainService.showGlobalPopupMessage({popupTitle:"fileTransfer",popupBodyTranslated:msgKey,okLabel:"ok"}),new Error(error)}}async sendEFSMessage(conversation,fileDescriptor,data,attachedInfos,geoLoc,urgency){let message=null;try{data&&0!==data.length||(data=fileDescriptor.fileName);const viewerType=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"user":"room",viewerOrRoomId=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.dbId:conversation.room.dbId;return await this.fileStorageService.addFileViewer(fileDescriptor.id,viewerOrRoomId,viewerType),message=this.addFSMessage(conversation,fileDescriptor.id,data,fileDescriptor.state,attachedInfos,geoLoc,urgency),message.fileName=fileDescriptor.fileName,attachedInfos&&!message.attachedMsgId&&(message.attachedMsgId=message.id),this.sendXmppMessage(conversation,message,fileDescriptor),this.pendingMessages[message.id]={conversation:conversation,message:message},this.eventService.publish("ON_SEND_EFS_MESSAGE",fileDescriptor),message}catch(error){message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.sendUpdateEvent()}}sendXmppMessage(conversation,message,fileDescriptor=null){if(!message)return null;const id=message.id,unicodeData=message.data.startsWith("/code")?message.data:conversation.shortnameToUnicode(message.data),to=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.jid:conversation.room.jid,type=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat",xmppMessage=$msg({to:to,type:type,id:id,"xml:lang":this.contactService.currentLanguage});if(xmppMessage.c("body",{"xml:lang":this.contactService.currentLanguage}).t(unicodeData).up(),xmppMessage.c("store",{xmlns:"urn:xmpp:hints"}).up(),xmppMessage.c("request",{xmlns:conversation_model_1.Conversation.ReceiptNS}).up(),xmppMessage.c("active",{xmlns:conversation_model_1.Conversation.ChatstatesNS}).up(),fileDescriptor&&(xmppMessage.c("x",{xmlns:"jabber:x:oob",index:message.attachIndex,count:message.attachNumber}).c("url",{},config.restServerUrl+"/api/rainbow/fileserver/v1.0/files/"+fileDescriptor.id).c("mime",{},fileDescriptor.typeMIME).c("filename",{},fileDescriptor.fileName).c("size",{},fileDescriptor.size).up(),message.fileId=fileDescriptor.id,fileDescriptor.tags&&"voicemail"===fileDescriptor.tags.purpose&&xmppMessage.c("voicemessage",{xmlns:"http://jabber.org/protocol/voicemessage"}).up()),message.attachedMsgId&&xmppMessage.c("attach-to",{xmlns:"urn:xmpp:message-attaching:1",id:message.attachedMsgId}).up(),message.geoloc&&xmppMessage.c("geoloc",{xmlns:"http://jabber.org/protocol/geoloc"}).c("lat",message.geoloc.lat).c("lon",message.geoloc.lon),message.additionalContent&&xmppMessage.c("content",{xmlns:conversation_model_1.Conversation.contentNS,type:message.additionalContent.type}).t(message.additionalContent.message).up(),message.answeredMsgId&&(message.urgencyAck&&message.urgencyAckType?xmppMessage.c("answeredMsg",{type:"urgent",action:message.urgencyAckType,stamp:message.answeredMsgDate.getTime()}).t(message.answeredMsgId).up():xmppMessage.c("answeredMsg",{stamp:message.answeredMsgDate.getTime()}).t(message.answeredMsgId).up()),message.mentions&&message.mentions.length&&(xmppMessage.c("mention",{xmlns:conversation_model_1.Conversation.AttentionNS}),message.mentions.forEach(mention=>{xmppMessage.c("jid",{pos:mention.pos,size:mention.size},mention.jid)}),xmppMessage.up()),message.urgency&&"std"!==message.urgency&&(xmppMessage.c("headers",{xmlns:"http://jabber.org/protocol/shim"}).c("header",{name:"Urgency"}).t(message.urgency).up().up(),xmppMessage.c("retry-push",{xmlns:"urn:xmpp:hints"}).up()),message.forwardedMsg&&this.addXmppForwardMessage(conversation,xmppMessage,message),message.urlMetadata){const metadata=message.urlMetadata;xmppMessage.c("url-metadata",{xmlns:"urn:xmpp:message-urlmetadata",title:metadata.title,description:metadata.description,url:metadata.url,image:metadata.image}).up()}return message.serverAckTimer=setTimeout(()=>{message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.sendUpdateEvent()},1e4),message.setReceiptStatus(message_1.Message.ReceiptStatus.SENT),message.sendUpdateEvent(),this.xmppService.send(xmppMessage),conversation.room&&(conversation.room.lastActivityDate=new Date),message}addXmppForwardMessage(conversation,xmppMessage,message){xmppMessage.c("forwarded",{xmlns:conversation_model_1.Conversation.FORWARDNS});const unicodeData=conversation.shortnameToUnicode(message.forwardedMsg.data),from=message.forwardedMsg.from.fullJid?message.forwardedMsg.from.fullJid:message.forwardedMsg.from.jid;xmppMessage.c("message",{to:message.forwardedMsg.to.jid,from:from,id:message.forwardedMsg.id,type:message.forwardConvType,xmlns:"jabber:client"}),xmppMessage.c("body",{"xml:lang":this.contactService.currentLanguage}).t(unicodeData).up();const fileDescriptor=this.fileStorageService.getFileDescriptorById(message.forwardedMsg.fileId);if(fileDescriptor&&(xmppMessage.c("x",{xmlns:"jabber:x:oob",index:message.attachIndex,count:message.attachNumber}).c("url",{},fileDescriptor.state===fileDescriptor_1.FileState.UPLOADED?config.restServerUrl+"/api/rainbow/fileserver/v1.0/files/"+fileDescriptor.id:"").c("mime",{},fileDescriptor.typeMIME).c("filename",{},fileDescriptor.fileName).c("size",{},fileDescriptor.size).up(),fileDescriptor.tags&&"voicemail"===fileDescriptor.tags.purpose&&xmppMessage.c("voicemessage",{xmlns:"http://jabber.org/protocol/voicemessage"}).up()),message.forwardedMsg.geoloc&&xmppMessage.c("geoloc",{xmlns:"http://jabber.org/protocol/geoloc"}).c("lat",message.forwardedMsg.geoloc.lat).up().c("lon",message.forwardedMsg.geoloc.lon).up().up(),message.answeredMsgId&&xmppMessage.c("answeredMsg",{stamp:message.forwardedMsg.answeredMsgDate.getTime()}).t(message.forwardedMsg.answeredMsgId).up(),message.forwardedMsg.urlMetadata){const metadata=message.forwardedMsg.urlMetadata;xmppMessage.c("url-metadata",{xmlns:"urn:xmpp:message-urlmetadata",title:metadata.title,description:metadata.description,url:metadata.url,image:metadata.image}).up()}xmppMessage.up(),xmppMessage.up()}sendAckReadOrReceivedMessage(conversation,id,event){this.logger.info(`[ConversationService] ${conversation.id} send ${event} status for message ${id}`);const to=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.jid:conversation.room.jid,type=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat",from=this.contactService.userContact.jid,maskRead=!this.contactService.userContact.readReceiptsCustomisation,receivedAttr={xmlns:conversation_model_1.Conversation.ReceiptNS,id:id,event:event,entity:"client"};"read"===event&&conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE&&maskRead&&(receivedAttr.maskread="true"),conversation.type!==conversation_model_1.Conversation.Type.ONE_TO_ONE&&(receivedAttr.type="muc"),this.xmppService.send($msg({to:to,from:from,type:type}).c("received",receivedAttr))}sendAckReceivedMessage(conversation,message){message.receiptStatus>=message_1.Message.ReceiptStatus.UNREAD||(this.sendAckReadOrReceivedMessage(conversation,message.id,"received"),message.setReceiptStatus(message_1.Message.ReceiptStatus.UNREAD))}sendAckReadMessage(conversation,message){message.receiptStatus!==message_1.Message.ReceiptStatus.READ&&(this.sendAckReadOrReceivedMessage(conversation,message.id,"read"),message.setReceiptStatus(message_1.Message.ReceiptStatus.READ),message.replaceMsgs&&message.replaceMsgs.length&&message.replaceMsgs.forEach(msg=>{this.sendAckReadOrReceivedMessage(conversation,msg.id,"read")}))}sendAckReadMessages(conversation){this.logger.info(`[ConversationService] ${conversation.id} sendAckReadMessages`);let result=!1;return conversation.messages.forEach(message=>{message.receiptStatus!==message_1.Message.ReceiptStatus.SENT&&message.receiptStatus!==message_1.Message.ReceiptStatus.UNREAD||message.side!==message_1.Message.Side.LEFT&&message.side!==message_1.Message.Side.ADMIN||(this.sendAckReadMessage(conversation,message),result=!0)}),result}sendChatStatus(conversation,status){if(conversation.status===status)return;this.logger.info(`[ConversationService] ${conversation.id} setStatus ${status.value}`),conversation.status=status;const to=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.jid:conversation.room.jid,type=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat";this.xmppService.send($msg({to:to,type:type}).c(status.value,{xmlns:conversation_model_1.Conversation.ChatstatesNS}))}sendIsTypingState(conversation,isTypingState){const id=conversation_model_1.Conversation.getUniqueMessageId(),state=isTypingState?"composing":"active",to=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.jid:conversation.room.jid,type=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat",lang=this.contactService.currentLanguage;this.xmppService.send($msg({to:to,type:type,id:id,"xml:lang":lang}).c(state,{xmlns:conversation_model_1.Conversation.ChatstatesNS}).up())}sendRecordingMessage(conversation,data){const id=conversation_model_1.Conversation.getUniqueMessageId(),to=conversation.contact.jid,unicodeData=conversation.shortnameToUnicode(data),lang=this.contactService.currentLanguage,message=this.addRecordingMessage(conversation,this.contactService.userContact,new Date,unicodeData,id);if(!message)return null;const xmppMessage=$msg({to:to,type:"chat",id:id,"xml:lang":lang}).c("body",{"xml:lang":lang}).up().c("recording",{xmlns:"jabber:iq:recordingP2P"}).t(unicodeData).up().c("request",{xmlns:conversation_model_1.Conversation.ReceiptNS}).up().c("active",{xmlns:conversation_model_1.Conversation.ChatstatesNS}).up();return message.serverAckTimer=setTimeout(()=>{message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.sendUpdateEvent()},1e4),this.xmppService.send(xmppMessage),this.pendingMessages[message.id]={conversation:conversation,message:message},message}sendCorrectedChatMessage(conversation,messageId,textData,additionalContent,mentions){const message=conversation.getMessageById(messageId);if(!message)return this.logger.info("[conversationService] sendCorrectedChatMessage - original message not found"),null;if(message.from.jid!==this.contactService.userContact.jid)return this.logger.info("[conversationService] sendCorrectedChatMessage forbidden Action - only sent messages can be modified"),null;this.sendAckReadMessages(conversation);const id=messageId,to=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?conversation.contact.jid:conversation.room.jid,type=conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat",data=null==textData?"":textData,unicodeData=conversation.shortnameToUnicode(data),lang=this.contactService.currentLanguage,xmppMessage=$msg({to:to,type:type,id:id,"xml:lang":lang}).c("body",{"xml:lang":this.contactService.currentLanguage}).t(unicodeData).up().c(""+(0===data.length&&null==additionalContent?"deleted":"modified"),{xmlns:"urn:xmpp:message-correct:0"}).up();return additionalContent&&xmppMessage.c("content",{xmlns:conversation_model_1.Conversation.contentNS,type:additionalContent.type}).t(additionalContent.message).up(),mentions&&mentions.length?(xmppMessage.c("mention",{xmlns:conversation_model_1.Conversation.AttentionNS}),mentions.forEach(mention=>{xmppMessage.c("jid",{pos:mention.pos,size:mention.size},mention.jid)})):message.mentionedMembersArray&&message.mentionedMembersArray.length&&(message.mentionedMembersArray=[],message.mentions=null),message.urgency&&"std"!==message.urgency&&(xmppMessage.c("headers",{xmlns:"http://jabber.org/protocol/shim"}).c("header",{name:"Urgency"}).t(message.urgency).up().up(),xmppMessage.c("retry-push",{xmlns:"urn:xmpp:hints"}).up()),xmppMessage.c("store",{xmlns:"urn:xmpp:hints"}).up().c("request",{xmlns:conversation_model_1.Conversation.ReceiptNS}).up().c("active",{xmlns:conversation_model_1.Conversation.ChatstatesNS}).up(),message.serverAckTimer=setTimeout(()=>{message.receiptStatus=message_1.Message.ReceiptStatus.ERROR,message.sendUpdateEvent()},1e4),message.modify({body:unicodeData,mentions:mentions}),this.xmppService.send(xmppMessage),conversation.room&&(conversation.room.lastActivityDate=new Date),conversation.updateAfterReplaceEvent(message),this.orderConversations(),this.pendingMessages[id]={conversation:conversation,message:message},message.sendUpdateEvent(),message}removeChatMessage(conversation,messageId){this.sendCorrectedChatMessage(conversation,messageId,null,null)}removeAllMessages(conversation){return new Promise(resolve=>{this.logger.info("[conversationService] removeAllMessage "+conversation.id);const mamRequest={queryid:this.xmppService.connection.getUniqueId(),with:conversation.id,onComplete:()=>{resolve()}},queryId=this.xmppService.connection.getUniqueId();this.xmppService.connection.mam.delete(queryId,mamRequest)})}async sendConversationByEmail(conversation){try{const userContact=this.contactService.userContact,url=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+userContact.dbId+"/conversations/"+conversation.dbId+"/downloads",response=await fetch(url,{method:"POST",headers:this.authService.getPostHeader()});if(!response.ok)throw response}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerConversations");if(409011===errorInfo.error.status)return error.message="No messages to export for the last 30 days.",void this.logger.info("[conversationService] deleteServerConversation success: "+error.message);throw this.logger.error("[ConversationService] "+errorInfo.message),errorInfo.error}}retrieveMsgByDate(conversation,msgDate){return msgDate&&msgDate.getTime&&(msgDate=msgDate.getTime()),this.logger.debug("[conversationService] >retrieveMsgByDate: "+msgDate),this.conversationHistoryHandler.retrieveMsgByDate(conversation,msgDate+"000")}clearSearchTextResults(){this.searchTextConvResults.clearAll(),this.searchTextConvResults.isSearching=!1}async searchTextInRoomsAndConversations(searchedText){try{this.searchTextConvResults.clearAll(),this.searchTextConvResults.isSearching=!0,await Promise.all([this.searchTextInConversations(searchedText),this.searchTextInRooms(searchedText)]),this.searchTextConvResults.isSearching=!1}catch(error){this.searchTextConvResults.isSearching=!1}}async searchTextInConversations(searchedText){const queryId=this.xmppService.connection.getUniqueId();this.searchTextConvResults.queryIds.push(queryId),this.searchTextConvResults.searchedText=searchedText,await this.conversationHistoryHandler.searchTextInConversations(queryId,searchedText),Object.keys(this.searchTextConvResults.partResults).forEach(jid=>{const result=this.searchTextConvResults.partResults[jid];result.room||this.contactService.getOrCreateContact(jid).then(contact=>{result.contact=contact,this.sortResults(result),this.searchTextConvResults.totalCount+=result.convRes.length,this.searchTextConvResults.results.push(result),delete this.searchTextConvResults.partResults[jid]})})}async searchTextInRooms(searchedText){const promisesArray=this.roomService.getRooms().map(room=>room.desc&&room.desc.startsWith("Rainbow_OutlookCreation_InternalUseOnly")||room.isWebinarRoom()?Promise.resolve():this.searchTextInConversation(searchedText,!1,room.jid,"room"));await Promise.all(promisesArray)}async searchTextInConversation(searchedText,clear,conversationId,type=null){clear&&this.searchTextConvResults.clearAll();const queryId=this.xmppService.connection.getUniqueId();this.searchTextConvResults.searchedText=searchedText,this.searchTextConvResults.queryIds.push(queryId);const searchMethodName="room"===type?"searchTextResultsInRoom":"searchTextResultsInConversation",count=await this.conversationHistoryHandler[searchMethodName](queryId,searchedText,conversationId),result=this.searchTextConvResults.partResults[conversationId];result&&(result.totalCount=count,this.sortResults(result),this.searchTextConvResults.totalCount+=count,this.searchTextConvResults.results.push(result),delete this.searchTextConvResults.partResults[conversationId])}storeSearchTextResult(searchTextMsgResult){const jid=searchTextMsgResult.otherJid;if(searchTextMsgResult.body.startsWith("/img"))return;let partialSearchTextResult=this.searchTextConvResults.partResults[jid];partialSearchTextResult||(partialSearchTextResult=new searchTextConvResults_model_2.SearchTextResult(jid),searchTextMsgResult.isRoom&&(partialSearchTextResult.room=this.roomService.getRoomByJid(jid)),this.searchTextConvResults.partResults[jid]=partialSearchTextResult),partialSearchTextResult.addMsgItem(searchTextMsgResult),partialSearchTextResult.totalCount++}sortResults(searchTextResult){searchTextResult.convRes.sort((res1,res2)=>res1.date?res2.date?res1.date-res2.date:1:-1)}setActiveConversation(conversation){return this.logger.debug("[conversationService] - setActiveConversation: "+(conversation?conversation.id:"null")),this.activeConversation=conversation,this.eventService.publish("ON_ACTIVE_CONVERSATION_CHANGE",conversation),this.activeConversation}setMostRecentConversationActive(){const conversations=this.getConversations().sort(this.sortFunction);return conversations.length>0?this.setActiveConversation(conversations[0]):this.setActiveConversation(null)}getConversations(){return Object.keys(this.conversations).map(key=>this.conversations[key])}getConversation(id){if(!this.conversations)return null;let conversation=this.conversations[id];if(!conversation){const convKey=Object.keys(this.conversations).find(key=>this.conversations[key]&&this.conversations[key].dbId===id);conversation=convKey?this.conversations[convKey]:null}if(!conversation){const convKey=Object.keys(this.conversations).find(key=>this.conversations[key]&&this.conversations[key].room&&this.conversations[key].room.dbId===id);conversation=convKey?this.conversations[convKey]:null}return conversation}getActiveConversation(){return this.activeConversation}orderConversations(){this.inCallConversations=[],this.idleConversations=[],this.involvedContactIds=[],Object.keys(this.conversations).forEach(key=>{const conversation=this.conversations[key];if(conversation.type===conversation_model_1.Conversation.Type.ROOM){if(conversation.room.owner&&conversation.room.isMeetingRoom()&&this.pgiConferenceService){const confSession=this.pgiConferenceService.getConferenceSessionById(conversation.room.getPstnConfEndpointId());if(confSession&&confSession.active)return void this.inCallConversations.push(conversation)}if(conversation.room&&this.webConferenceServiceV2){const conf=this.webConferenceServiceV2.getWebConferenceSessionById(conversation.room.dbId);if(conf&&conf.haveJoined)return void this.inCallConversations.push(conversation)}}this.isInCall(conversation)?this.inCallConversations.push(conversation):conversation.room&&conversation.room.isWebinarRoom()||conversation.isAudioCallIncomming()||this.idleConversations.push(conversation),conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE&&this.involvedContactIds.push(conversation.contact.id)}),this.inCallConversations.sort(this.sortInCallFunction),this.idleConversations.sort(this.sortFunction),this.publish(event_model_1.RBEvent.create("reorder"))}getOrderedConversations(){return{inCall:this.inCallConversations,idle:this.idleConversations,contactIds:this.involvedContactIds}}sortFunction(aa,bb){const aDate=!aa.lastModification&&aa.creationDate?aa.creationDate:aa.lastModification;return(!bb.lastModification&&bb.creationDate?bb.creationDate:bb.lastModification)-aDate}sortInCallFunction(aa,bb){const aDate=aa.audioCall?aa.audioCall.startDate:null,bDate=bb.audioCall?bb.audioCall.startDate:null;return aDate&&bDate?aDate-bDate:0}formatDate(date){return moment(date).utc().format("YYYY-MM-DDTHH:mm:ss")+"Z"}resetConversationMissedCounters(conversation){this.mainService.appVisible.getValue()&&(conversation.missedCounter=0,conversation.missedCalls=0,this.updateMissedCounters())}decreaseMissedIMCounterForConversation(conversation){conversation.missedCounter>0&&(conversation.missedCounter-=1),this.updateMissedCounters()}updateMissedCounters(){let missedIMCounter=0;const missedIMDetails=[];Object.keys(this.conversations).forEach(key=>{const conversation=this.conversations[key];0!==conversation.missedCounter&&(missedIMCounter+=conversation.missedCounter,missedIMDetails.push(conversation))}),missedIMCounter!==this.missedInfoCounters.value.missedIMCounter&&(this.missedInfoCounters.value.missedIMCounter=missedIMCounter,this.missedInfoCounters.value.missedIMDetails=missedIMDetails,this.missedInfoCounters.next(this.missedInfoCounters.value))}allowDesktopSharing(){return!(adapter&&adapter.default&&adapter.default.browserDetails)||"safari"!==adapter.default.browserDetails.browser}allowAdvancedDesktopSharing(){return!1}updateConversationCall(conversation,call){call.type===call_model_1.Call.Type.WEBRTC?conversation.videoCall=call:call.type===call_model_1.Call.Type.PHONE&&(conversation.audioCall=call),call.setConversationId(conversation.id),!call.isConference&&conversation.contact&&this.computeCapabilitiesForContact(conversation.contact),this.computeCapabilitiesForMyContact()}computeCapabilitiesForContact(contact,skipUpdateConversation=!1){let telephony=!1,webRTC=!1,sharedDesktop=!1,fileTransfert=!1,addMedia=!1;const contactStatus=contact.status,fullJid=contact.fullJid,myContact=this.contactService.userContact;if(contact.jid===myContact.jid)return void this.computeCapabilitiesForMyContact();const isContactInMyCompany=contact.company&&this.contactService.userContact.company&&"Rainbow"!==contact.company.name&&"Default"!==contact.company.name&&contact.company.name===this.contactService.userContact.company.name,conversation=this.getConversation(contact.id);if(this.webrtcP2PService&&this.webrtcP2PService.started){const videoCall=conversation?conversation.videoCall:null;videoCall&&videoCall.status!==call_model_1.Call.Status.UNKNOWN||("unknown"!==contactStatus&&"wait"!==contactStatus||!isContactInMyCompany)&&"online"!==contactStatus&&"online-mobile"!==contactStatus&&"away"!==contactStatus||((contact.webrtcAudioEnabled||contact.webrtcSharingEnabled)&&(webRTC=!0),sharedDesktop=!0)}if(this.telephonyService.started){const phoneNumberAvailable=contact.phonePro||contact.phonePbx&&contact.pbxId||contact.mobilePro||contact.phonePerso||contact.mobilePerso,audioCallsForContact=this.telephonyService.getActiveCallsForContact(contact);0===audioCallsForContact.length&&phoneNumberAvailable&&(telephony=!0),fullJid&&(0!==audioCallsForContact.length||this.webrtcP2PService&&this.webrtcP2PService.isInMediaPillarAudioCallWithContactJid(fullJid))&&(addMedia=!0)}"online"!==contactStatus&&"busy"!==contactStatus&&"away"!==contactStatus&&"dnd"!==contactStatus||(fileTransfert=!0);let capabilities={telephony:telephony,webRTC:webRTC,sharedDesktop:sharedDesktop,fileTransfert:fileTransfert,mediaAvailable:telephony||webRTC,addMedia:addMedia};if((contact.isBot||contact.displayName&&-1!==contact.displayName.indexOf("E-HELPER"))&&(capabilities={telephony:!1,webRTC:!1,sharedDesktop:!1,fileTransfert:!1,mediaAvailable:!1,addMedia:!1}),contact.capabilities=capabilities,conversation){const previousCapabilities=Object.assign({},conversation.capabilities);conversation.capabilities=capabilities,skipUpdateConversation||this.shallowEqual(previousCapabilities,capabilities)||this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.CAPABILITIES)}}computeCapabilitiesForMyContact(){let telephony=!1,webRTC=!1,sharedDesktop=!1,canMakeOrReceiveTelephonyCall=!1,canReceiveSecondWebrtcCall=!1;const myContact=this.contactService.userContact,haveActiveConferenceSession=this.webConferenceService&&this.webConferenceService.hasActiveConferenceSession&&this.webConferenceService.hasActiveConferenceSession()||this.webConferenceServiceV2&&this.webConferenceServiceV2.hasActiveWebConferenceSession();if(this.webrtcP2PService&&this.webrtcP2PService.started)if(haveActiveConferenceSession)webRTC=!1;else{if(this.webrtcP2PService.isUserContactInCall()){if(this.manageTwoWebrtcCallsAllowed){const numberOfCalls=this.webrtcP2PService.getCurrentActiveSessions().length;(numberOfCalls<2||2===numberOfCalls&&this.webrtcP2PService.getCurrentSharingCall())&&(webRTC=!0)}else this.isSecondWebrtcCallAllowed&&this.webrtcP2PService.existMediaPillarAudioCall()&&1===this.telephonyService.getCalls().length&&(webRTC=!0);this.webrtcP2PService.existMediaPillarAudioCall()&&!this.webrtcP2PService.getCurrentSharingCall()&&this.allowDesktopSharing()&&(sharedDesktop=!0)}else(myContact.webrtcAudioEnabled||myContact.webrtcSharingEnabled)&&(webRTC=!0),this.allowDesktopSharing()&&(sharedDesktop=!0)}if(this.telephonyService.started&&this.webrtcGatewayService.isMediaPillarCallSituation()){const telephonyCalls=this.telephonyService.getCalls(),hasActiveWebrtcCall=this.webrtcP2PService&&this.webrtcP2PService.existWebrtcActiveSessionNotMP();if(this.contactService.userContact.attendantConsoleEnabled)canMakeOrReceiveTelephonyCall=!0;else if(haveActiveConferenceSession)canMakeOrReceiveTelephonyCall=!1;else if(this.manageTwoWebrtcCallsAllowed){const numberOfCalls=this.webrtcP2PService.getCurrentActiveSessions().length;(numberOfCalls<2||2===numberOfCalls&&this.webrtcP2PService.getCurrentSharingCall())&&(canMakeOrReceiveTelephonyCall=!0,canReceiveSecondWebrtcCall=Boolean(numberOfCalls))}else if(this.isSecondWebrtcCallAllowed)if(hasActiveWebrtcCall)canMakeOrReceiveTelephonyCall=!telephonyCalls.length;else{(0===telephonyCalls.length&&this.isBasicCallAllowed||1===telephonyCalls.length&&this.isSecondCallAllowed)&&(canMakeOrReceiveTelephonyCall=!0),canReceiveSecondWebrtcCall=1===telephonyCalls.length;const activeTelephonyCall=this.telephonyService.getActiveCall();activeTelephonyCall&&activeTelephonyCall.isConference&&(canReceiveSecondWebrtcCall=!1)}else(!hasActiveWebrtcCall&&0===telephonyCalls.length&&this.isBasicCallAllowed||telephonyCalls.length>=1&&this.isSecondCallAllowed)&&(canMakeOrReceiveTelephonyCall=!0)}else if(this.telephonyService.started&&!this.webrtcGatewayService.isMediaPillarCallSituation()){const telephonyCalls=this.telephonyService.getCalls();(0===telephonyCalls.length&&this.isBasicCallAllowed||telephonyCalls.length>=1&&this.isSecondCallAllowed)&&(canMakeOrReceiveTelephonyCall=!0)}telephony=canMakeOrReceiveTelephonyCall;const capabilities={telephony:telephony,webRTC:webRTC,sharedDesktop:sharedDesktop,mediaAvailable:telephony||webRTC,canReceiveSecondWebrtcCall:canReceiveSecondWebrtcCall};this.logger.debug("[ConversationService] computeCapabilitiesForMyContact  capabilities "+JSON.stringify(capabilities)),myContact.capabilities=capabilities}shallowEqual(object1,object2){const keys1=Object.keys(object1),keys2=Object.keys(object2);if(keys1.length!==keys2.length)return!1;for(const key of keys1)if(object1[key]!==object2[key])return!1;return!0}onCallEvent(call,fromWebRtcGW=!1){switch(call.type){case call_model_1.Call.Type.WEBRTC:this.handleWebRtcCallEvent(call);break;case call_model_1.Call.Type.PHONE:this.handleTelephonyCallEvent(call,fromWebRtcGW)}}async handleWebRtcCallEvent(call){if(this.webrtcGatewayService.isMediaPillarJid(call.fullJid)){if(this.eventService.publish("ON_MPMEDIA_CONVERSATION_CALL_UPDATED_EVENT",{call:call}),call.status===call_model_1.Call.Status.ACTIVE&&call.mediaPillarCall){(call.mediaPillarCall.telephonyCallRefs||[]).forEach(telCall=>{if(null!==telCall&&telCall.type.value===call_model_1.Call.Type.PHONE.value){const conversation=this.getConversation(telCall.conversationId);conversation&&conversation.rxSubject.next({name:"callUpdate",value:call})}})}call.status!==call_model_1.Call.Status.RINGING_INCOMMING&&(this.computeCapabilitiesForMyContact(),call.mediaPillarCall&&call.mediaPillarCall.isIncomingCallPopupWithWebRtcCall&&this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call}))}else this.getOrCreateConversation(call.contact.id,"contact").then(conversation=>{this.updateConversationCall(conversation,call),this.orderConversations(),conversation.rxSubject.next({name:"callUpdate",value:call}),this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:conversation,call:call}),this.isSecondWebrtcCallAllowed&&this.activeConversation&&(this.activeConversation.audioCall||this.activeConversation.videoCall)&&this.activeConversation.rxSubject.next({name:"otherCallUpdate",value:call})})}existAnotherCallForContact(call){if(call.conversationId&&call.conversationId!==call.id)return!1;return this.telephonyService.getCallsForContact(call.contact).some(callForContact=>Boolean(callForContact.conversationId)&&callForContact.id!==call.id)}isTempTelephonyConversation(call){return!call.contact||call.contact.temp||call.contact.o365Flag||call.contact.companyDirectoryFlag||call.contact.personalDirectoryFlag||call.isConference||this.contactService.isUserContact(call.contact)||this.existAnotherCallForContact(call)}async handleTelephonyCallEvent(call,fromWebRtcGW=!1){if(call.status===call_model_1.Call.Status.UNKNOWN){if(this.logger.info("[ConversationService] onCallEvent -- "+call+" conversation: "+call.conversationId),call.conversationId){const conv=this.getConversation(call.conversationId);if(call.conversationId===call.id?(conv&&(this.logger.info("[ConversationService] onCallEvent "+call.id+" UNKNOWN, conversation "+call.conversationId+" : removeConversation"),this.removeConversation(conv)),this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call})):(conv&&(this.logger.info("[ConversationService] onCallEvent "+call.id+" UNKNOWN, conversation "+call.conversationId+" : set inactive"),conv.audioCall=null),this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:conv,call:call})),conv&&conv.rxSubject.next({name:"callUpdate",value:call}),this.orderConversations(),!this.activeConversation||this.activeConversation&&conv&&this.activeConversation.id===conv.id&&!this.telephonyService.isUserIdle()){const previousActiveConversation=this.activeConversation,newActiveConversation=this.selectNewActiveConversation();this.logger.info("[ConversationService] onCallEvent "+call.id+" UNKNOWN, new Active Conversation : "+(newActiveConversation?newActiveConversation.id:"null")),newActiveConversation&&previousActiveConversation&&previousActiveConversation.id!==newActiveConversation.id&&(this.logger.debug("[ConversationService] onCallEvent "+call.id+" UNKNOWN, active conversation has changed to "+newActiveConversation.id),this.publish(event_model_1.RBEvent.create("activeConversation",newActiveConversation)))}"BUSY"===call.lastCause&&this.publish(event_model_1.RBEvent.create("callBusy")),this.activeConversation&&this.activeConversation.audioCall&&this.activeConversation.audioCall.status===call_model_1.Call.Status.RINGING_INCOMMING&&this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:this.activeConversation,call:this.activeConversation.audioCall}),!this.activeConversation||!this.activeConversation.audioCall&&!this.activeConversation.videoCall||conv&&this.activeConversation.id===conv.id||this.activeConversation.rxSubject.next({name:"otherCallUpdate",value:call})}else this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call}),this.logger.error("[ConversationService] onCallEvent UNKNOWN for "+call.id+"/ Anomaly no conversationId !");call.contact&&!this.telephonyService.getConferenceCallForContact(call.contact)&&this.webrtcP2PService&&this.webrtcP2PService.endAllCallsForContact(call.contact),call.isConference&&setTimeout(()=>{(call.participants||[]).forEach(participantContact=>{participantContact&&0===this.telephonyService.getActiveCallsForContact(participantContact).length&&this.webrtcP2PService&&this.webrtcP2PService.endAllCallsForContact(participantContact)})},1e3)}if(!fromWebRtcGW&&this.webrtcGatewayService.isMediaPillarCallSituation(call)){if(!call.isSecondary)return this.eventService.publish("ON_UPDATE_TELEPHONY_ICON_EVENT"),void this.logger.info("[ConversationService] onCallEvent -- "+call+"=> event from handler IGNORED : MediaPillarCallSituation but not secondary call");if(call.status===call_model_1.Call.Status.RINGING_INCOMMING)return void this.logger.info("[ConversationService] onCallEvent -- "+call+"=> event from handler IGNORED : incoming mediapillar call events are dispatched by gateway service")}if(call.status!==call_model_1.Call.Status.UNKNOWN&&null!==call.connectionId){if(!this.isSecondCallAllowed){const calls=this.telephonyService.getNotIdleCalls();if(calls.length>1&&calls.findIndex(calliter=>calliter.id===call.id)>0)return void this.logger.info("[ConversationService] onCallEvent -- "+call+"=> event from handler IGNORED : number of calls not supported (feature Second Call not Allowed)")}const isTempConversation=this.isTempTelephonyConversation(call);this.logger.info("[ConversationService] onCallEvent -- "+call+" isTempConversation: "+isTempConversation);let conversation=isTempConversation?this.getOrCreateTelephonyConversation(call):this.getConversation(call.contact.id);conversation||(conversation=isTempConversation?this.getOrCreateTelephonyConversation(call):await this.getOrCreateConversation(call.contact.id,"contact")),isTempConversation&&!call.isConference&&call.conversationId===call.id&&!conversation.contact&&conversation.telephonyContacts&&(this.logger.info("[ConversationService] onCallEvent -- "+call.id+" : demote conference conversation to single conversation "+call.id),conversation.telephonyContacts=null,conversation.contact=call.contact,call.contact.conversation=conversation,conversation.rxSubject.next({name:"convContactChange",value:call})),isTempConversation&&conversation.contact&&call.contact&&(call.contact.firstname||call.contact.lastname)&&conversation.contact.updateName(call.contact.firstname,call.contact.lastname);let hasCallContactChangedOnActiveConversation=!1;if(call.conversationId&&call.conversationId!==conversation.id)if(this.logger.info("[ConversationService] onCallEvent -- "+call.id+" : conversation changed id "+call.conversationId+" => id "+conversation.id),call.isInExternalWindow&&this.eventService.publish("ON_REPLACE_CONVERSATIONS_IN_EXTERNAL_POPOUT",conversation,call),call.conversationId===call.id){const previousConv=this.conversations[call.id];!isTempConversation&&previousConv&&(this.logger.info("[ConversationService] onCallEvent -- "+call.id+" : remove prevous temp conversation "+call.id),this.conversations[call.id]&&this.conversations[call.id].audioCall&&(this.conversations[call.id].audioCall=null),delete this.conversations[call.id],this.activeConversation&&this.activeConversation.id===previousConv.id&&(hasCallContactChangedOnActiveConversation=!0,this.setActiveConversation(null)))}else{const previousConv=this.getConversation(call.conversationId);previousConv&&(this.logger.info("[ConversationService] onCallEvent -- "+call.id+" : set previous conversation to known rainbow contact inactive "+call.conversationId),previousConv.audioCall=null,this.activeConversation&&this.activeConversation.id===previousConv.id&&(hasCallContactChangedOnActiveConversation=!0,this.setActiveConversation(null)),this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:previousConv,call:call}))}this.updateConversationCall(conversation,call),(call.status===call_model_1.Call.Status.ACTIVE||call.status===call_model_1.Call.Status.DIALING||call.status===call_model_1.Call.Status.RINGING_OUTGOING||call.status===call_model_1.Call.Status.QUEUED_OUTGOING||hasCallContactChangedOnActiveConversation)&&(this.eventService.publish("DISPLAY_CONVERSATIONS_IF_NECESSARY"),setTimeout(()=>{this.logger.info("[ConversationService] onCallEvent -- "+call.id+" : activate conversation "+conversation.id),this.publish(event_model_1.RBEvent.create("activeConversation",conversation)),conversation&&call.isInExternalWindow&&this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:conversation,call:call})},400)),this.orderConversations(),this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:conversation,call:call}),conversation.rxSubject.next({name:"callUpdate",value:call}),this.activeConversation&&(this.activeConversation.audioCall||this.activeConversation.videoCall)&&this.activeConversation.id!==conversation.id&&this.activeConversation.rxSubject.next({name:"otherCallUpdate",value:call});if(call.getDeviceIdFromConnectionIdFromCall()!==call.relevantEquipmentId&&call.status!==call_model_1.Call.Status.ACTIVE)return void this.eventService.publish("ON_UPDATE_TELEPHONY_ICON_EVENT");call.status===call_model_1.Call.Status.ACTIVE&&call.isConference&&(call.participants||[]).forEach(participantContact=>{participantContact&&this.webrtcP2PService&&this.webrtcP2PService.endAllCallsForContact(participantContact)})}if(call.status===call_model_1.Call.Status.ERROR){let pop=!1;call.connectionId&&(!this.telephonyService.isSipWise()||"busy"!==call.errorMessage&&"invalidPhoneNumber"!==call.errorMessage&&"numberNotAllowed"!==call.errorMessage)||(pop=!0),pop&&this.publish(event_model_1.RBEvent.create("callError",call))}}async onPGiConferenceStateEvent(active){if(active)try{const currentMeetingRoom=await this.roomService.retrieveCurrentPersonalAudioRoom();await this.getOrCreateConversation(currentMeetingRoom.jid,"room")}catch(error){this.logger.debug("[conversationService] error handling pgi conference event")}this.orderConversations()}onReloadCapabilitiesForMyContactEvent(){this.logger.info("[conversationService] onReloadCapabilitiesForMyContactEvent"),this.computeCapabilitiesForMyContact()}onConversationEvent(){this.updateMissedCounters()}onContactChangedEvent(contact){this.computeCapabilitiesForContact(contact),this.computeCapabilitiesForMyContact()}onTelephonyStateChangeEvent(){const conversations=this.getConversations();conversations&&conversations.forEach(conversation=>{conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE&&this.computeCapabilitiesForContact(conversation.contact)}),this.computeCapabilitiesForMyContact()}onConferenceStateChangeEvent(){this.updateRoomConferences(),this.orderConversations(),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT")}onConferenceParticipantChangeEvent(){this.orderConversations(),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT")}onRoomChangedEvent(room,action){if(room){const conversation=this.getConversation(room.jid);conversation&&("remove"===action?this.closeConversation(conversation):(conversation.room=room,conversation.rxSubject.next({name:"roomUpdated",value:conversation})))}}onRoomHistoryChangedEvent(room){if(room){const conversation=this.getConversation(room.jid);conversation&&conversation.chatRenderer&&(conversation.reset(),conversation.chatRenderer.loadMore())}}onRoomAdminMessageEvent(roomJid,userJid,type,msgId,extraParameters){this.logger.info("[conversationService] onRoomAdminMessageEvent");const conversation=this.getConversation(roomJid);conversation&&"welcome"===type&&conversation.room&&conversation.room.ownerContact&&(userJid=conversation.room.ownerContact.jid);const contact=this.contactService.getContactByJid(userJid);if(conversation&&contact){if(!conversation.room.owner&&"invitation"===type)return;if(conversation.room&&conversation.room.isMeetingRoom())return;if(conversation.room&&conversation.room.isWebinarRoom())return;let translatedMessage="";"voicemessage"===type&&(translatedMessage=this.i18n.translate("huntingGroupVmCounters",{newMsgs:extraParameters.newMsgs,oldMsgs:extraParameters.oldMsgs})),this.conversationServiceEventHandler.onRoomAdminMessageReceived(conversation,contact,type,msgId,translatedMessage)}}onRoomAddConferenceEvent(){this.logger.info("[conversationService] onRoomAddConferenceEvent"),this.updateRoomConferences(),this.orderConversations(),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT")}onMyContactChangedEvent(){this.getOrderedConversations().idle.forEach(conversation=>{conversation.type===conversation_model_1.Conversation.Type.ONE_TO_ONE&&this.computeCapabilitiesForContact(conversation.contact)}),this.computeCapabilitiesForMyContact()}async reinit(){const conversationInnerHtmlArray=[];try{this.logger.info("[conversationService] Re-initialize conversation service"),this.activeConversation&&(this.activeConversation.reset(),this.activeConversation=null),Object.keys(this.conversations).forEach(key=>{const conversation=this.conversations[key];conversation.innerHtml&&conversationInnerHtmlArray.push({id:conversation.id,innerHtml:conversation.innerHtml})}),delete this.conversations,this.conversations=[],this.conversationCreationPromise||(this.conversationCreationPromise={}),this.isReinit=!0,this.orderConversations(),this.logger.info("[conversationService] getServerConversations"),await this.getServerConversations(),this.isReinit=!1,this.linkAllActiveCallsToConversations(),this.updateRoomConferences(),this.orderConversations(),this.missedInfoCounters.next(this.missedInfoCounters.value),conversationInnerHtmlArray.length>0&&conversationInnerHtmlArray.forEach(convInnerHtml=>{const conversation=this.getConversation(convInnerHtml.id);conversation&&(conversation.innerHtml=convInnerHtml.innerHtml)})}catch(error){this.isReinit=!1,setTimeout(async()=>{this.logger.info("[conversationService] getServerConversations failure, try again"),await this.getServerConversations(),this.linkAllActiveCallsToConversations(),this.updateRoomConferences(),this.orderConversations(),conversationInnerHtmlArray.length>0&&conversationInnerHtmlArray.forEach(convInnerHtml=>{const conversation=this.getConversation(convInnerHtml.id);conversation&&(conversation.innerHtml=convInnerHtml.innerHtml)})},1e4)}}linkAllActiveCallsToConversations(){this.telephonyService.calls&&Object.keys(this.telephonyService.calls).forEach(key=>{const call=this.telephonyService.calls[key];this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}),this.webrtcP2PService&&this.webrtcP2PService.calls&&Object.keys(this.webrtcP2PService.calls).forEach(key=>{const call=this.webrtcP2PService.calls[key];this.eventService.publish("ON_CALL_UPDATED_EVENT",call)})}async askForSharing(convId,contact){const message=$iq({from:this.xmppService.jid,to:contact.fullJid,type:"set"});message.c("command",{xmlns:"http://jabber.org/protocol/commands",node:"request-transfert-sharing",convId:convId}),await this.xmppService.sendIQ(message)}async acceptTransfertSharing(convId,contact){const message=$iq({from:this.xmppService.jid,to:contact.fullJid,type:"set"});message.c("command",{xmlns:"http://jabber.org/protocol/commands",node:"accept-transfert-sharing",convId:convId}),await this.xmppService.sendIQ(message)}async refuseTransfertSharing(convId,contact){const message=$iq({from:this.xmppService.jid,to:contact.fullJid,type:"set"});message.c("command",{xmlns:"http://jabber.org/protocol/commands",node:"refuse-transfert-sharing",convId:convId}),await this.xmppService.sendIQ(message)}onAskSharingMessageReceived(stanza){try{const stanzaElem=$(stanza),from=stanzaElem.attr("from"),fromContact=this.contactService.getContactByJid(this.xmppService.getBareJidFromJid(from)),commandElem=stanzaElem.find("command"),conversationId=commandElem.attr("convId"),conversation=this.getConversation(conversationId);if(commandElem.length>0){const activeConversation=this.getActiveConversation();activeConversation&&conversationId===activeConversation.id?this.onAskSharingIsOnActiveCall(commandElem.attr("node"),conversation,fromContact):this.onAskSharingIsNotOnActiveCall(commandElem.attr("node"),fromContact)}}catch(error){return!0}return!0}onAskSharingIsOnActiveCall(condition,conversation,fromContact){switch(condition){case"request-transfert-sharing":conversation.rxSubject.next({name:"request-transfert-sharing",fromContact:fromContact});break;case"accept-transfert-sharing":conversation.rxSubject.next({name:"accept-transfert-sharing",fromContact:fromContact});break;case"refuse-transfert-sharing":conversation.rxSubject.next({name:"refuse-transfert-sharing",fromContact:fromContact})}}onAskSharingIsNotOnActiveCall(condition,fromContact){switch(condition){case"request-transfert-sharing":this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",this.i18n.translate("askForSharing",{displayName:fromContact.displayName}));break;case"accept-transfert-sharing":this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",this.i18n.translate("acceptTransfertSharing",{displayName:fromContact.displayName}));break;case"refuse-transfert-sharing":this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",this.i18n.translate("refuseTransfertSharing",{displayName:fromContact.displayName}))}}cleanUnwantedConversations(){Object.keys(this.conversations).forEach(key=>{const conversation=this.conversations[key];conversation.type===conversation_model_1.Conversation.Type.ROOM&&(!this.contactService.userContact.roomsEnabled||conversation.room&&conversation.room.isMeetingRoom()&&!this.contactService.userContact.phoneMeetingsEnabled)&&(this.logger.info("cleanUnwantedConversations -- close conversation "+conversation.id+" due to customisation limitation"),this.closeConversation(conversation))})}async openConversationWithEmily(){try{this.logger.info("[conversationService] openConversationWithEmily");const emilyData=await this.botService.getEmily(),conversation=await this.getOrCreateConversation(emilyData.jid,"contact");return this.setActiveConversation(conversation),conversation}catch(error){const errorMessage="[conversationService] openConversationWithEmily -- failure:"+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}addChatMessage(conversation,from,date,data,messageID,isSender,subject,answeredMsgId,answeredMsgDate,additionalContent,mentions,urgency,isForwarded){if(conversation.getMessageById(messageID))return this.logger.info("[ConversationService] addChatMessage -- "+conversation.id+" add CHAT message ("+messageID+") already exists."),null;this.logger.info("[ConversationService] addChatMessage -- "+conversation.id+" add CHAT message ("+messageID+") from "+from.jid);const side=this.contactService.isUserContact(from)?"R":"L",message=message_1.Message.create(messageID,date,from,side,data,!1,additionalContent,subject,answeredMsgId,answeredMsgDate,mentions);if(message.urgency=urgency,message.isForwarded=isForwarded,isSender?message.setReceiptStatus(message_1.Message.ReceiptStatus.IN_PROGRESS):message.setReceiptStatus(message_1.Message.ReceiptStatus.SENT),message.isAdaptiveCardResponse()){const messageObject=JSON.parse(message.additionalContent.message);if(messageObject.rainbow&&""===messageObject.rainbow.text)return message}return this.addMessage(conversation,message)}addAdminBubbleMessage(conversation,from,date,type,messageId,translatedMessage=""){if(conversation.getMessageById(messageId))return this.logger.info("[ConversationService] addAdminBubbleMessage -- "+conversation.id+" add addAdminBubbleMessage message ("+messageId+") already exists."),null;this.logger.info("[ConversationService] addAdminBubbleMessage -- "+conversation.id+" add addAdminBubbleMessage from "+from.jid+" : "+type);let data=type+"MsgRoom";"voicemessage"===type&&(data=translatedMessage);const message=message_1.Message.create(messageId,date,from,message_1.Message.Side.ADMIN,data,!1);return message.setReceiptStatus(message_1.Message.ReceiptStatus.SENT),this.addMessage(conversation,message)}addFSMessage(conversation,fileId,data,status,attachedInfos,geoLoc=null,urgency=null,attention=null){const messageToSendID=conversation_model_1.Conversation.getUniqueMessageId(),unicodeData=conversation.shortnameToUnicode(data),date=new Date;this.logger.info("[ConversationService] addFSMessage --"+conversation.id+" add FILE SHARING message from me");const message=message_1.Message.createFileSharingMessage(messageToSendID,date,this.contactService.userContact,"R",unicodeData,status,fileId,null,attachedInfos,geoLoc,attention);return message.urgency=urgency,message.setReceiptStatus(message_1.Message.ReceiptStatus.IN_PROGRESS),this.addMessage(conversation,message)}addForwardChatMessage(conversation,from,date,messageID,forwardedMessage,origConv){if(conversation.getMessageById(messageID))return this.logger.info("[Conversation] "+conversation.id+" add ForwardChat message ("+messageID+") already exists."),null;this.logger.info("[Conversation] "+conversation.id+" add ForwardChat message ("+messageID+") from "+from.jid);const side=this.contactService.isUserContact(from)?"R":"L",msgFwdOtherConv=message_1.Message.createFromMsg(forwardedMessage);return msgFwdOtherConv.id=messageID,msgFwdOtherConv.side=side,msgFwdOtherConv.date=date,msgFwdOtherConv.from=from,msgFwdOtherConv.isForwarded=!0,msgFwdOtherConv.forwardedMsg=forwardedMessage,msgFwdOtherConv.setReceiptStatus(message_1.Message.ReceiptStatus.IN_PROGRESS),msgFwdOtherConv.forwardConvType=origConv.type===conversation_model_1.Conversation.Type.ONE_TO_ONE?"chat":"groupchat",this.addMessage(conversation,msgFwdOtherConv),msgFwdOtherConv}addRecordingMessage(conversation,from,date,data,messageId){const message=message_1.Message.createRecordingAdminMessage(messageId,date,from,data);return this.addMessage(conversation,message)}addFileMessage(conversation,from,date,data,messageID,urgency=null){this.logger.info("[Conversation] "+conversation.id+" add FILE message from "+from.jid+" : "+data);const side=this.contactService.isUserContact(from)?"R":"L",message=message_1.Message.createFileMessage(messageID,date,from,side,data,!1);return message.urgency=urgency,this.addMessage(conversation,message)}addFileSharingMessage(conversation,from,date,data,messageID,fileId,fileName,geoloc,urgency,isForwarded,attention=null){this.logger.info("[Conversation] "+conversation.id+" add FILE SHARING message from "+from.jid+" : "+data);const side=this.contactService.isUserContact(from)?"R":"L",message=message_1.Message.createFileSharingMessage(messageID,date,from,side,data,!1,fileId,fileName,null,geoloc,attention);return message.urgency=urgency,message.isForwarded=isForwarded,this.addMessage(conversation,message)}addWebRTCMessage(conversation,from,date,data,messageID){if(conversation.getMessageById(messageID))return this.logger.info("[Conversation] "+conversation.id+" add addWebRTCMessage message ("+messageID+") already exists."),null;const side=this.contactService.isUserContact(from)?message_1.Message.Side.RIGHT:message_1.Message.Side.LEFT,message=message_1.Message.createWebRTCMessage(messageID,date,from,side,data,!1);return this.addMessage(conversation,message)}shouldUpdateLastEditableMsg(message){const isMine=message.side===message_1.Message.Side.RIGHT,isChat=message.type===message_1.Message.Type.CHAT,isFileMessageWithText=message.type===message_1.Message.Type.FS&&message.data&&message.fileName&&message.data!==message.fileName;return isMine&&(isChat||isFileMessageWithText)}addMessage(conversation,message){if(conversation.messages.find(item=>item.id===message.id))return this.logger.info("[ConversationService] addMessage -- "+conversation.id+" try to add an already stored message with id "+message.id),message;if(message.side===message_1.Message.Side.LEFT)message.type===message_1.Message.Type.WEBRTC&&(conversation.missedCalls+=1),this.setStatusMessage(conversation,message.from,conversation_model_1.Conversation.Status.ACTIVE);else if(this.shouldUpdateLastEditableMsg(message)){const oldEditableMsg=conversation.lastEditableMsg;conversation.lastEditableMsg=message,oldEditableMsg&&oldEditableMsg.sendUpdateEvent()}return conversation.messages.push(message),conversation.lastModification=new Date,conversation.lastMessageText=message.data,conversation.lastMessageSender=message.from.id,conversation.replaceLastMsgId=null,conversation.forwardFrom=message.isForwarded?message.from.jid:null,conversation.forwardedMessage=message.isForwarded?message.data:null,conversation.isForwardedMessageFile=Boolean(message.isForwarded&&message.fileName),conversation.lastMessageSide=message.side,conversation.rxSubject.next({name:"appendMessage",message:message}),this.eventService.publish("ON_CONVERSATION_UPDATED_EVENT",conversation.id),message}setStatusMessage(conversation,from,status){this.logger.info(`[ConversationService] setStatusMessage -- ${conversation.id} add status message from ${from.jid} : ${status.value}`),conversation.participantStatuses[from.jid]=status,conversation.rxSubject.next({name:"status",value:status})}isInCall(conversation){return conversation.pstnConferenceSession?conversation.pstnConferenceSession.isParticipantConnectedByJid(this.contactService.userContact.jid):conversation.webConferenceSession?conversation.webConferenceSession.isParticipantConnectedByJid(this.contactService.userContact.jid)&&conversation.webConferenceSession.haveJoined:conversation.videoCall&&conversation.videoCall.status&&"Unknown"!==conversation.videoCall.status.value&&"incommingCall"!==conversation.videoCall.status.value||conversation.audioCall&&conversation.audioCall.status&&"Unknown"!==conversation.audioCall.status.value&&(this.contactService.userContact.attendantConsoleEnabled||"incommingCall"!==conversation.audioCall.status.value&&"queuedIncomming"!==conversation.audioCall.status.value)}}exports.ConversationService=ConversationService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.resizeImage=(avatarImg,maxWidth,maxHeight)=>new Promise((resolve,reject)=>{const image=new Image;image.onload=()=>{let imageWidth=image.width,imageHeight=image.height;imageWidth>imageHeight?imageWidth>maxWidth&&(imageHeight*=maxWidth/imageWidth,imageWidth=maxWidth):imageHeight>maxHeight&&(imageWidth*=maxHeight/imageHeight,imageHeight=maxHeight);const canvas=document.createElement("canvas");canvas.width=imageWidth,canvas.height=imageHeight,image.width=imageWidth,image.height=imageHeight,image.crossOrigin="Anonymous";canvas.getContext("2d").drawImage(image,0,0,imageWidth,imageHeight);const resizedImage=new Image;resizedImage.src=canvas.toDataURL("image/png"),resolve(resizedImage)},image.onerror=()=>{reject()},image.src=avatarImg}),exports.getBinaryData=image=>{const typeIndex=image.src.indexOf("image/")+6,binaryIndex=image.src.indexOf(";base64,"),binaryData=image.src.slice(binaryIndex+8),imageType=image.src.slice(typeIndex,binaryIndex),binaryString=window.atob(binaryData),len=binaryString.length,bytes=new Uint8Array(len);for(let i=0;i<len;i++)bytes[i]=binaryString.charCodeAt(i);return{type:imageType,data:bytes}},exports.getBase64Image=async url=>new Promise(resolve=>{const image=new Image;image.crossOrigin="anonymous";const canvas=document.createElement("canvas");image.onload=()=>{canvas.width=image.width,canvas.height=image.height;canvas.getContext("2d").drawImage(image,0,0),resolve(canvas.toDataURL("image/png"))},image.src=url})},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return of}));var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(21),_fromArray__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(50),_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(91);function of(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=args[args.length-1];return Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__.a)(scheduler)?(args.pop(),Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__.a)(args,scheduler)):Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__.a)(args)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=text=>{if(!text)return null;if(config&&config.debug)return text;let result="";return 0===text.indexOf("+")&&(result="+"),result=text.length>4?result+"*".repeat(text.length-4-result.length)+text.slice(text.length-4):text,result}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),replaceMsg_1=__webpack_require__(164);class MessageAdditionalContent{constructor(type,message){this.type=type,this.message=message}static create(type,message){return new MessageAdditionalContent(type,message)}}exports.MessageAdditionalContent=MessageAdditionalContent;class Message{constructor(id,date,from,side,data,status,fileId=null,additionalContent=null,subject=null,fileName=null,answeredMsgId=null,answeredMsgDate=null,geoloc=null,mentions=null){this.sendStatus=0,this.urlMetadata=null,this.urgencyAck=!1,this.urgencyAckType=null,this.urgencyHandler=null,this.translatedText=null,this.modified=!1,this.deleted=!1,this.lastReadSubject=new rxjs_1.BehaviorSubject(null),this.historyIndex=null,this.fileErrorMsg=null,this.shortFileDescriptor=null,this.attachedMsgId=null,this.forwardedMsg=null,this.id=id,this.date=date,this.from=from,this.side=side,this.data=data,this.status=status,this.fileId=fileId,this.additionalContent=additionalContent,this.subject=subject,this.fileName=fileName,this.answeredMsgId=answeredMsgId,this.answeredMsgDate=answeredMsgDate,this.geoloc=geoloc,this.mentions=mentions,this.receiptStatus=Message.ReceiptStatus.NONE,this.serverAckTimer=null,this.index=null,this.showCorrectedMessages=!1,this.replaceMsgs=[],this.rxSubject=new rxjs_1.Subject,this.isMerged=!1}static create(id,date,from,side,data,status,additionalContent=null,subject=null,answeredMsgId=null,answeredMsgDate=null,mentions=null){const message=new Message(id,date,from,side,data,status,null,additionalContent,subject,null,answeredMsgId,answeredMsgDate,null,mentions);return message.type=message.isAdaptiveCard()?Message.Type.FORM:Message.Type.CHAT,message}static createFromMsg(origMsg){const message=Message.create(origMsg.id,origMsg.date,origMsg.from,origMsg.side,origMsg.data,origMsg.status);return message.type=origMsg.type,message.additionalContent=origMsg.additionalContent,origMsg.fileId&&(message.type=Message.Type.FS,message.fileId=origMsg.fileId,message.fileName=origMsg.fileName),origMsg.geoloc&&(message.geoloc=origMsg.geoloc),message}static createFileSharingMessage(id,date,from,side,data,status,fileId,fileName,attachedInfos,geoloc,attention=null){const msg=new Message(id,date,from,side,data,status,fileId,null,null,fileName,null,null,geoloc,attention);return msg.type=Message.Type.FS,attachedInfos&&(msg.attachedMsgId=attachedInfos.attachedMsgId,msg.attachIndex=attachedInfos.index,msg.attachNumber=attachedInfos.number),msg}static createFileMessage(id,date,from,side,data,status){const message=new Message(id,date,from,side,data,status);return message.type=Message.Type.FILE,message}static createWebRTCMessage(id,date,from,side,data,status){const message=new Message(id,date,from,side,data,status);return message.type=Message.Type.WEBRTC,message}static createBubbleAdminMessage(id,date,from,type,translatedMessage){const adminMessage=translatedMessage||type+"MsgRoom",message=new Message(id,date,from,Message.Side.ADMIN,adminMessage,null);return message.type=Message.Type.CHAT,message}static createRecordingAdminMessage(id,date,from,cmd){const message=new Message(id,date,from,Message.Side.ADMIN,cmd+"Recording",null);return message.type=Message.Type.RECORDING,message}sendUpdateEvent(data=null){this.rxSubject.next(data)}listenUpdateEvent(callback){return this.rxSubject.subscribe(callback)}isTextModified(){return this.replaceMsgs.length>0}isModified(){return this.modified||this.replaceMsgs.length>0&&""!==this.getLastTextModified()}isDeleted(){return this.deleted||0===this.getLastTextModified().length&&null===this.additionalContent}getLastTextModified(){return this.replaceMsgs.length>0?this.replaceMsgs[this.replaceMsgs.length-1].body:this.data}addReplaceMsg(messageId,replacedMsgBody){const replacedMsg=replaceMsg_1.ReplaceMsg.create(messageId,replacedMsgBody);this.replaceMsgs.push(replacedMsg)}setReceiptStatus(receiptStatus){return this.serverAckTimer&&receiptStatus>Message.ReceiptStatus.IN_PROGRESS&&(clearTimeout(this.serverAckTimer),this.serverAckTimer=null),receiptStatus>this.receiptStatus&&(this.receiptStatus=receiptStatus),this.sendUpdateEvent({name:"receiptStatus",value:receiptStatus}),this}getInfoForLogs(){const body=this.data.length?this.data.substr(0,1)+"***"+this.data.substr(this.data.length-1):"";return"Id "+this.id+", type "+this.type.value+", side "+this.side+", date "+this.date+" and data "+body}modify(stanzaData){this.data=stanzaData.body,this.additionalContent=stanzaData.additionalContent,this.mentions=stanzaData.mentions,this.modified=!0,this.deleted=null!==this.data&&0===this.data.length&&(null===this.additionalContent||void 0===this.additionalContent),this.sendUpdateEvent()}hasAdditionalContent(){return null!==this.additionalContent&&void 0!==this.additionalContent}isMarkDown(){return this.hasAdditionalContent()&&"text/markdown"===this.additionalContent.type}isAdaptiveCard(){return this.hasAdditionalContent()&&"form/json"===this.additionalContent.type}isAdaptiveCardResponse(){return this.hasAdditionalContent()&&"rainbow/json"===this.additionalContent.type}}Message.Type={CHAT:{key:0,value:"Chat"},FILE:{key:1,value:"File"},FS:{key:2,value:"FileSharing"},WEBRTC:{key:4,value:"WebRTC CAll"},RECORDING:{key:5,value:"Recording"},FORM:{key:6,value:"FORM"},FORWARD:{key:7,value:"FORWARD"}},Message.ReceiptStatus={NONE:0,ERROR:1,IN_PROGRESS:2,SENT:3,UNREAD:4,READ:5},Message.SendStatus={NONE:0,ERROR:1},Message.ReceiptStatusText=["close","error--filled","calllog","check","done","read"],Message.Side={LEFT:"L",RIGHT:"R",ADMIN:"ADMIN"},exports.Message=Message;exports.AnswerMessage=class{constructor(name,messageAnswered,answeredMessageData){this.name=name,this.messageAnswered=messageAnswered,this.answeredMessageData=answeredMessageData}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const createTFLiteModule=__webpack_require__(402),createTFLiteSIMDModule=__webpack_require__(403),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),logger_service_1=__webpack_require__(4),settings_service_1=__webpack_require__(18),profile_service_1=__webpack_require__(13),webgl2Pipeline_1=__webpack_require__(404),canvas2DPipeline_1=__webpack_require__(410),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),imageUtils_service_1=__webpack_require__(64),xmpp_service_1=__webpack_require__(9),TimerWorker_1=__webpack_require__(411),adaptivecards_1=__webpack_require__(412);exports.glsl=String.raw,exports.segmentationDimensions={model96:{height:96,width:160},model144:{height:144,width:256}},exports.VIRTUAL_BACKGROUND_TYPE={IMAGE:"image",BLUR:"blur",BLUR_PLUS:"blur-plus",NONE:"none",VIDEO:"video"};class VirtualBackgroundStats{constructor(){this.fps=0,this.preProcessingDuration=0,this.inferenceDuration=0,this.postProcessingDuration=0,this.webglinitialization=0,this.resizingstage=0,this.tflite=0,this.softMax=0,this.jointBilateralFilter=0,this.realization=0,this.initialisation=0,this.synchro=0,this.copy=0,this.ecriture=0}static create(){return new VirtualBackgroundStats}computeAverage(){this.preProcessingDuration=this.preProcessingDuration?this.preProcessingDuration/this.fps:0,this.inferenceDuration=this.inferenceDuration?this.inferenceDuration/this.fps:0,this.postProcessingDuration=this.postProcessingDuration?this.postProcessingDuration/this.fps:0,this.webglinitialization=this.webglinitialization?this.webglinitialization/this.fps:0,this.resizingstage=this.resizingstage?this.resizingstage/this.fps:0,this.tflite=this.tflite?this.tflite/this.fps:0,this.softMax=this.softMax?this.softMax/this.fps:0,this.jointBilateralFilter=this.jointBilateralFilter?this.jointBilateralFilter/this.fps:0,this.realization=this.realization?this.realization/this.fps:0,this.initialisation=this.initialisation?this.initialisation/this.fps:0,this.synchro=this.synchro?this.synchro/this.fps:0,this.copy=this.copy?this.copy/this.fps:0,this.ecriture=this.ecriture?this.ecriture/this.fps:0}reset(){this.fps=this.preProcessingDuration=this.inferenceDuration=this.postProcessingDuration=this.webglinitialization=this.resizingstage=this.tflite=this.softMax=this.jointBilateralFilter=this.realization=this.initialisation=this.synchro=this.copy=this.ecriture=0}}exports.VirtualBackgroundStats=VirtualBackgroundStats;class VirtualBackgroundService{constructor(){if(this.settingsService=settings_service_1.SettingsService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.videoPipeline=null,this.statsEnabledFlag=!0,this.statsInterval=null,this.started=!1,this.isStreamMirrored=!0,this.simdSupported=!1,this.xmppSubscription=null,this.outputCanvasElement=null,this.videoElement=null,this.testVideo=null,this.rxSubject=new rxjs_1.Subject,this.stats=new rxjs_1.BehaviorSubject(VirtualBackgroundStats.create()),this.webglFlag=!1,this.webglAllowed=!1,this.models={model96:"/cacheV2/virtual-background/models/segm_lite_v681.tflite",model144:"/cacheV2/virtual-background/models/segm_full_v679.tflite"},this.settings={showVideoBackground:"false",webGLAllowed:"false",sigmaSpace:"1",sigmaColor:"0.1",coverageMax:"0.75",coverageMin:"0.5",lightWrapping:"0.3",blendMode:"screen"},this.webglSubscription=null,!this.wasmAvailable())return this.settingsService.setSetting("virtualBackgroundFlag","false"),void this.logger.warn("[VirtualBackgroundService] NOT AVAILABLE -- REASON : ENHANCED BROWSER SECUITY ACTIVATED FOR THIS SITE");this.settingsService.setSetting("virtualBackgroundFlag","true"),this.simdSupported=this.simdAvailable(),this.videoElement=document.createElement("video"),this.webglAvailable(),this.isStreamMirrored=this.settingsService.getBooleanSetting("virtualBackgroundMirror"),this.backgroundImages=new rxjs_1.BehaviorSubject({companyBackgrounds:[],userBackgrounds:[]}),this.loadBg=new rxjs_1.BehaviorSubject({loadPersonalBg:[]})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.virtualBackgroundService||(win.rainbow.virtualBackgroundService=new VirtualBackgroundService),win.rainbow.virtualBackgroundService}async start(){this.logger.info(`[VirtualBackgroundService] === Start === ${this.webglAllowed?"webgl":"canvas2d"} pipeline == simd ${this.simdSupported?"supported":"not supported"}`),this.backgroundImages.next(await this.getBackgrounds()),this.backgroundImages.value.companyBackgrounds.reverse(),this.backgroundImages.value.userBackgrounds.reverse(),this.loadBg.next({loadPersonalBg:[]}),this.xmppSubscription=this.xmppService.addHandler(stanza=>(this.onXmppEvent(stanza),!0),"jabber:iq:configuration","message","management")}async stop(){this.logger.info("[VirtualBackgroundService] === Stop ==="),this.backgroundImages.next({companyBackgrounds:[],userBackgrounds:[]}),this.loadBg.next({loadPersonalBg:[]}),this.cleanUp(),this.xmppSubscription&&(this.xmppService.deleteHandler(this.xmppSubscription),this.xmppSubscription=null),this.webglSubscription&&this.webglSubscription.unsubscribe()}async reconnect(){this.logger.info("[VirtualBackgroundService] === Reconnect ==="),this.cleanUp(),this.backgroundImages.next(await this.getBackgrounds()),this.loadBg.next({loadPersonalBg:[]}),this.xmppSubscription&&(this.xmppService.deleteHandler(this.xmppSubscription),this.xmppSubscription=null),this.xmppSubscription=this.xmppService.addHandler(stanza=>(this.onXmppEvent(stanza),!0),"jabber:iq:configuration","message","management")}onXmppEvent(stanza){try{const backgroundElem=$(stanza).find("background"),backgroundId=backgroundElem.attr("backgroundId"),action=backgroundElem.attr("action"),type=backgroundElem.attr("type");switch(this.logger.info(`[virtualBackgroundService] onXmppEvent-- ${action} `),action){case"create":setTimeout(()=>{"userBackgrounds"===type&&this.loadBg.next({loadPersonalBg:[]}),this.backgroundImages.value[type].unshift({id:backgroundId}),this.backgroundImages.next(this.backgroundImages.value)},1);break;case"delete":this.backgroundImages.value[type].splice(this.backgroundImages.value[type].map(el=>el.id).indexOf(backgroundId),1),this.backgroundImages.next(this.backgroundImages.value)}}catch(error){this.logger.error("[VirtualBackgroundService] onXmppEvent -- failure -- "+error.message)}return!0}async startProcessStream(stream,serviceName){return this.logger.info("[VirtualBackgroundService] startProcessStream from service "+(serviceName||"Unknown")),this.setInputStream(stream)}async stopProcessStream(){this.logger.info("[VirtualBackgroundService] stopProcessStream "),await this.stopEffect()}async setBackgroundMode(type,url=""){const currentBackgroundType=this.settingsService.getSetting("virtualBackgroundType"),currentBackgroundImageUrl=this.settingsService.getSetting("imgVirtualBackground");type===currentBackgroundType&&(type!==exports.VIRTUAL_BACKGROUND_TYPE.IMAGE&&type!==exports.VIRTUAL_BACKGROUND_TYPE.VIDEO||currentBackgroundImageUrl===url)||(this.logger.info(`[VirtualBackgroundService] setBackgroundMode "${type}" ${url?'"'+url+'"':""} `),this.settingsService.setSetting("virtualBackgroundType",type),this.settingsService.setSetting("imgVirtualBackground",url),await this.setInputStream(this.stream),this.maskFrameTimerWorker.postMessage({id:TimerWorker_1.SET_TIMEOUT,timeMs:1e3/30}),currentBackgroundType!==exports.VIRTUAL_BACKGROUND_TYPE.NONE&&type!==exports.VIRTUAL_BACKGROUND_TYPE.NONE||this.rxSubject.next(event_model_1.RBEvent.create("UPDATE_STREAM",{stream:this.modifiedStream,type:type})))}getBackgroundMode(){return{type:this.settingsService.getSetting("virtualBackgroundType"),url:this.settingsService.getSetting("imgVirtualBackground")}}setMirror(mirror){this.settingsService.setSetting("virtualBackgroundMirror",mirror?"true":"false"),this.isStreamMirrored=mirror,this.rxSubject.next(event_model_1.RBEvent.create("UPDATE_STREAM_MIRROR"))}getMirror(){return this.isStreamMirrored}enableStats(enabled){this.statsEnabledFlag=enabled}webglAvailable(){this.cleanUp(),this.outputCanvasElement&&this.outputCanvasElement.remove(),this.outputCanvasElement=document.createElement("canvas"),this.outputCanvasElement.setAttribute("style","display:none"),this.webglFlag=adaptivecards_1.parseBool("true"===this.getSetting("webGLAllowed")),this.webglFlag?(this.gl=this.outputCanvasElement.getContext("webgl2"),this.gl&&this.gl instanceof WebGL2RenderingContext?this.webglAllowed=!0:(this.logger.warn("[VirtualBackgroundService] NOT AVAILABLE -- REASON : Failed to get Webgl2 context"),this.outputCanvasElement.remove(),this.outputCanvasElement=document.createElement("canvas"),this.outputCanvasElement.setAttribute("style","display:none"))):this.webglAllowed=!1}async startEffect(stream,options){try{this.options=options,this.options.segmentationDimensions=this.simdSupported?exports.segmentationDimensions.model144:exports.segmentationDimensions.model96,this.statsEnabledFlag&&(this.statsInterval=setInterval(()=>{this.stats.value.computeAverage(),this.stats.next(this.stats.value),this.stats.value.reset()},1e3)),this.maskFrameTimerWorker=new Worker(TimerWorker_1.timerWorkerScript,{name:"Virtual background effect worker"}),this.maskFrameTimerWorker.onmessage=this.onMaskFrameTimer;const firstVideoTrack=stream.getVideoTracks()[0],{height:height,frameRate:frameRate,width:width}=firstVideoTrack.getSettings?firstVideoTrack.getSettings():firstVideoTrack.getConstraints();this.videoElement.width=width,this.videoElement.height=height,this.videoElement.srcObject=stream,this.videoElement.onloadeddata=async()=>{this.videoElement.muted=!0,await this.videoElement.play(),this.maskFrameTimerWorker.postMessage({id:TimerWorker_1.SET_TIMEOUT,timeMs:1e3/30})},this.outputCanvasElement.width=width,this.outputCanvasElement.height=height,this.videoPipeline=this.webglAllowed?webgl2Pipeline_1.Webgl2Pipeline.create():canvas2DPipeline_1.Canvas2DPipeline.create(),this.videoPipeline.init();const finalStream=this.outputCanvasElement.captureStream(frameRate);return stream.getAudioTracks().length>0&&finalStream.addTrack(stream.getAudioTracks()[0].clone()),finalStream}catch(error){return this.logger.error("[VirtualBackgroundService] startEffect -- Failure -- "+error.message),null}}async stopEffect(){this.maskFrameTimerWorker&&(this.maskFrameTimerWorker.postMessage({id:TimerWorker_1.CLEAR_TIMEOUT}),this.maskFrameTimerWorker.terminate(),this.videoElement.pause(),this.videoElement.srcObject=null),this.statsInterval&&clearInterval(this.statsInterval)}async setInputStream(stream){const backgroundType=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.BLURRING_UI_2_0)&&"true"===this.settingsService.getSetting("virtualBackgroundFlag")?this.settingsService.getSetting("virtualBackgroundType"):exports.VIRTUAL_BACKGROUND_TYPE.NONE,imgBg=this.settingsService.getSetting("imgVirtualBackground");return this.stream=stream,backgroundType===exports.VIRTUAL_BACKGROUND_TYPE.NONE||0===this.stream.getVideoTracks().length?(await this.stopEffect(),this.modifiedStream=this.stream):(await this.initVirtualBackground(),await this.stopEffect(),this.modifiedStream=await this.startEffect(this.stream,{backgroundType:backgroundType,imgBg:imgBg})),this.modifiedStream}async initVirtualBackground(){try{if(!this.started){this.started=!0,this.videoElement.play(),this.simdSupported?this.tflite=await createTFLiteSIMDModule({locateFile:()=>"/cacheV2/virtual-background/tflite/tflite-simd.wasm"}):this.tflite=await createTFLiteModule({locateFile:()=>"/cacheV2/virtual-background/tflite/tflite.wasm"});const modelResponse=await fetch(this.simdSupported?this.models.model144:this.models.model96),modelBufferOffset=this.tflite._getModelBufferMemoryOffset();if(!modelResponse.ok)throw new Error("Failed to download tflite model!");const model=await modelResponse.arrayBuffer();this.tflite.HEAPU8.set(new Uint8Array(model),modelBufferOffset),this.tflite._loadModel(model.byteLength),this.segmentationPixelCount=this.simdSupported?exports.segmentationDimensions.model144.width*exports.segmentationDimensions.model144.height:exports.segmentationDimensions.model96.width*exports.segmentationDimensions.model96.height,this.outputMemoryOffset=this.tflite._getOutputMemoryOffset()/4,this.onMaskFrameTimer=this.onMaskFrameTimer.bind(this)}}catch(error){this.logger.error(`[VirtualBackgroundService] initVirtualBackground-- failure-- ${error.message} `)}}onMaskFrameTimer(response){response.data.id===TimerWorker_1.TIMEOUT_TICK&&this.render()}wasmAvailable(){return"object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate}simdAvailable(){if(!this.wasmAvailable())return!1;const simdWasm=((...bytes)=>((...bytes)=>Uint32Array.of(1836278016,1,...bytes))(1610679297,33751040,...bytes,40239360,259))(84344833,6357249,17369600,4259847,186257917,1845758464);return WebAssembly.validate(simdWasm)}async render(){try{this.videoPipeline.render(),this.maskFrameTimerWorker.postMessage({id:TimerWorker_1.SET_TIMEOUT,timeMs:1e3/30})}catch(error){this.logger.error(`[VirtualBackgroundService] render-- failure-- ${error.message} `)}}cleanUp(){this.videoPipeline&&this.videoPipeline.cleanUp(),this.statsInterval&&clearInterval(this.statsInterval)}async getBackgrounds(){try{const userId=this.contactService.userContact.dbId,url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${userId}/backgrounds`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getBackgrounds");throw this.logger.error("[VirtualBackgroundService] "+errorInfo.message),errorInfo.error}}async putPersonnalBackgroundImage(backgroundUser,loadBgUrl){try{const userId=this.contactService.userContact.dbId,binaryData=imageUtils_service_1.getBinaryData(backgroundUser);this.loadBg.value.loadPersonalBg.unshift({url:loadBgUrl}),this.loadBg.next(this.loadBg.value);const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${userId}/backgrounds/upload`,headers=this.authService.getPostHeader("image/"+binaryData.type),response=await fetch(url,{method:"POST",headers:headers,body:binaryData.data});if(!response.ok)throw response;return await response.json()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"putPersonnalBackgroudImage");throw this.logger.error("[VirtualBackgroundService] "+errorInfo.message),errorInfo.error}}async deletePersonnalBackgroundImage(backgroundIdUser){try{const userId=this.contactService.userContact.dbId,url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${userId}/backgrounds/${backgroundIdUser}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deletePersonnalBackgroundImage");throw this.logger.error("[VirtualBackgroundService] "+errorInfo.message),errorInfo.error}}async putAdminBackgroundImage(backgroundCompany){try{const companyId=this.contactService.userContact.company.id,binaryData=imageUtils_service_1.getBinaryData(backgroundCompany),url=`${config.restServerUrl}/api/rainbow/admin/v1.0/companies/${companyId}/backgrounds/upload`,headers=this.authService.getPostHeader("image/"+binaryData.type),response=await fetch(url,{method:"POST",headers:headers,body:binaryData.data});if(!response.ok)throw response;return await response.json()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"putAdminBackgroundImage");throw this.logger.error("[VirtualBackgroundService] "+errorInfo.message),errorInfo.error}}async deleteAdminBackgroundImage(backgroundIdAdmin){try{const companyId=this.contactService.userContact.company.id,url=`${config.restServerUrl}/api/rainbow/admin/v1.0/companies/${companyId}/backgrounds/${backgroundIdAdmin}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteAdminBackgroundImage");throw this.logger.error("[VirtualBackgroundService] "+errorInfo.message),errorInfo.error}}setSetting(key,value){switch(key){case"webGLAllowed":this.settings[key]=value,localStorage.setItem(key,value),this.webglAvailable();break;case"showVideoBackground":this.settings[key]=value,localStorage.setItem(key,value);break;case"sigmaColor":case"sigmaSpace":case"coverageMax":case"coverageMin":case"lightWrapping":case"blendMode":this.settings[key]=value,localStorage.setItem(key,value),this.setPostProcessingValue(),this.webglAllowed&&this.videoPipeline.updatePostProcessingConfig()}}getSetting(key){return this.settings[key]}setPostProcessingValue(){this.sigmaSpace=this.getSetting("sigmaSpace"),this.sigmaColor=this.getSetting("sigmaColor"),this.coverageMax=this.getSetting("coverageMax"),this.coverageMin=this.getSetting("coverageMin"),this.lightWrapping=this.getSetting("lightWrapping"),this.blendMode=this.getSetting("blendMode")}}exports.VirtualBackgroundService=VirtualBackgroundService,exports.default=VirtualBackgroundService.getInstance()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.clearElementChildren=exports.getScrollY=exports.getScrollX=exports.getFitStatus=exports.truncate=exports.stringToCssColor=exports.parseEnum=exports.getEnumValueByName=exports.parseBool=exports.parseNumber=exports.parseString=exports.appendChild=exports.generateUniqueId=exports.isMobileOS=exports.isInternetExplorer=void 0;var Enums=__webpack_require__(55),Shared=__webpack_require__(62);function getEnumValueByName(enumType,name){for(var key in enumType){var keyAsNumber=parseInt(key,10);if(keyAsNumber>=0){var value=enumType[key];if(value&&"string"==typeof value&&value.toLowerCase()===name.toLowerCase())return keyAsNumber}}}function findNextCharacter(html,currIdx){for(currIdx+=1;currIdx<html.length&&"<"==html[currIdx];)for(;currIdx<html.length&&">"!=html[currIdx++];);return currIdx}exports.isInternetExplorer=function(){return void 0!==window.document.documentMode},exports.isMobileOS=function(){var userAgent=window.navigator.userAgent;return!!userAgent.match(/Android/i)||!!userAgent.match(/iPad/i)||!!userAgent.match(/iPhone/i)},exports.generateUniqueId=function(){return"__ac-"+Shared.UUID.generate()},exports.appendChild=function(node,child){child&&node.appendChild(child)},exports.parseString=function(obj,defaultValue){return"string"==typeof obj?obj:defaultValue},exports.parseNumber=function(obj,defaultValue){return"number"==typeof obj?obj:defaultValue},exports.parseBool=function(value,defaultValue){if("boolean"==typeof value)return value;if("string"==typeof value)switch(value.toLowerCase()){case"true":return!0;case"false":return!1;default:return defaultValue}return defaultValue},exports.getEnumValueByName=getEnumValueByName,exports.parseEnum=function(enumType,name,defaultValue){if(!name)return defaultValue;var enumValue=getEnumValueByName(enumType,name);return void 0!==enumValue?enumValue:defaultValue},exports.stringToCssColor=function(color){if(color){var matches=/#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi.exec(color);if(matches&&matches[4]){var a=parseInt(matches[1],16)/255;return"rgba("+parseInt(matches[2],16)+","+parseInt(matches[3],16)+","+parseInt(matches[4],16)+","+a+")"}}return color},exports.truncate=function(element,maxHeight,lineHeight){var fits=function(){return maxHeight-element.scrollHeight>=-1};if(!fits()){for(var fullText=element.innerHTML,truncateAt=function(idx){element.innerHTML=fullText.substring(0,idx)+"..."},breakableIndices=function(html){var results=[],idx=findNextCharacter(html,-1);for(;idx<html.length;)" "==html[idx]&&results.push(idx),idx=findNextCharacter(html,idx);return results}(fullText),lo=0,hi=breakableIndices.length,bestBreakIdx=0;lo<hi;){var mid=Math.floor((lo+hi)/2);truncateAt(breakableIndices[mid]),fits()?(bestBreakIdx=breakableIndices[mid],lo=mid+1):hi=mid}if(truncateAt(bestBreakIdx),lineHeight&&maxHeight-element.scrollHeight>=lineHeight-1){for(var idx=findNextCharacter(fullText,bestBreakIdx);idx<fullText.length&&(truncateAt(idx),fits());)bestBreakIdx=idx,idx=findNextCharacter(fullText,idx);truncateAt(bestBreakIdx)}}},exports.getFitStatus=function(element,containerEnd){var start=element.offsetTop;return start+element.clientHeight<=containerEnd?Enums.ContainerFitStatus.FullyInContainer:start<containerEnd?Enums.ContainerFitStatus.Overflowing:Enums.ContainerFitStatus.FullyOutOfContainer},exports.getScrollX=function(){return window.pageXOffset},exports.getScrollY=function(){return window.pageYOffset},exports.clearElementChildren=function(element){for(;element.firstChild;)element.removeChild(element.firstChild)}},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.SerializableObject=exports.property=exports.SerializableObjectSchema=exports.CustomProperty=exports.SerializableObjectCollectionProperty=exports.SerializableObjectProperty=exports.EnumProperty=exports.ValueSetProperty=exports.StringArrayProperty=exports.PixelSizeProperty=exports.NumProperty=exports.BoolProperty=exports.StringProperty=exports.PropertyDefinition=exports.BaseSerializationContext=exports.isVersionLessOrEqual=exports.Versions=exports.Version=void 0;var shared_1=__webpack_require__(62),Utils=__webpack_require__(69),Enums=__webpack_require__(55),strings_1=__webpack_require__(80),Version=function(){function Version(major,minor,label){void 0===major&&(major=1),void 0===minor&&(minor=1),this._isValid=!0,this._major=major,this._minor=minor,this._label=label}return Version.parse=function(versionString,context){if(versionString){var result=new Version;result._versionString=versionString;var matches=/(\d+).(\d+)/gi.exec(versionString);return null!=matches&&3==matches.length?(result._major=parseInt(matches[1]),result._minor=parseInt(matches[2])):result._isValid=!1,result._isValid||context.logParseEvent(void 0,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidVersionString(result._versionString)),result}},Version.prototype.toString=function(){return this._isValid?this._major+"."+this._minor:this._versionString},Version.prototype.toJSON=function(){return this.toString()},Version.prototype.compareTo=function(otherVersion){if(!this.isValid||!otherVersion.isValid)throw new Error("Cannot compare invalid version.");return this.major>otherVersion.major?1:this.major<otherVersion.major?-1:this.minor>otherVersion.minor?1:this.minor<otherVersion.minor?-1:0},Object.defineProperty(Version.prototype,"label",{get:function(){return this._label?this._label:this.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(Version.prototype,"major",{get:function(){return this._major},enumerable:!1,configurable:!0}),Object.defineProperty(Version.prototype,"minor",{get:function(){return this._minor},enumerable:!1,configurable:!0}),Object.defineProperty(Version.prototype,"isValid",{get:function(){return this._isValid},enumerable:!1,configurable:!0}),Version}();exports.Version=Version;var Versions=function(){function Versions(){}return Versions.v1_0=new Version(1,0),Versions.v1_1=new Version(1,1),Versions.v1_2=new Version(1,2),Versions.v1_3=new Version(1,3),Versions.v1_4=new Version(1,4),Versions.v1_5=new Version(1,5),Versions.latest=Versions.v1_5,Versions}();exports.Versions=Versions,exports.isVersionLessOrEqual=function(version,targetVersion){return!(version instanceof Version)||(!(targetVersion instanceof Version)||targetVersion.compareTo(version)>=0)};var BaseSerializationContext=function(){function BaseSerializationContext(targetVersion){void 0===targetVersion&&(targetVersion=Versions.latest),this.targetVersion=targetVersion,this._validationEvents=[]}return BaseSerializationContext.prototype.serializeValue=function(target,propertyName,propertyValue,defaultValue,forceDeleteIfNullOrDefault){void 0===defaultValue&&(defaultValue=void 0),void 0===forceDeleteIfNullOrDefault&&(forceDeleteIfNullOrDefault=!1),null==propertyValue||propertyValue===defaultValue?shared_1.GlobalSettings.enableFullJsonRoundTrip&&!forceDeleteIfNullOrDefault||delete target[propertyName]:propertyValue===defaultValue?delete target[propertyName]:target[propertyName]=propertyValue},BaseSerializationContext.prototype.serializeString=function(target,propertyName,propertyValue,defaultValue){null==propertyValue||propertyValue===defaultValue?delete target[propertyName]:target[propertyName]=propertyValue},BaseSerializationContext.prototype.serializeBool=function(target,propertyName,propertyValue,defaultValue){null==propertyValue||propertyValue===defaultValue?delete target[propertyName]:target[propertyName]=propertyValue},BaseSerializationContext.prototype.serializeNumber=function(target,propertyName,propertyValue,defaultValue){null==propertyValue||propertyValue===defaultValue||isNaN(propertyValue)?delete target[propertyName]:target[propertyName]=propertyValue},BaseSerializationContext.prototype.serializeEnum=function(enumType,target,propertyName,propertyValue,defaultValue){void 0===defaultValue&&(defaultValue=void 0),null==propertyValue||propertyValue===defaultValue?delete target[propertyName]:target[propertyName]=enumType[propertyValue]},BaseSerializationContext.prototype.serializeArray=function(target,propertyName,propertyValue){var items=[];if(propertyValue)for(var _i=0,propertyValue_1=propertyValue;_i<propertyValue_1.length;_i++){var item=propertyValue_1[_i],serializedItem=void 0;void 0!==(serializedItem=item instanceof SerializableObject?item.toJSON(this):item.toJSON?item.toJSON():item)&&items.push(serializedItem)}0==items.length?target.hasOwnProperty(propertyName)&&Array.isArray(target[propertyName])&&delete target[propertyName]:this.serializeValue(target,propertyName,items)},BaseSerializationContext.prototype.clearEvents=function(){this._validationEvents=[]},BaseSerializationContext.prototype.logEvent=function(source,phase,event,message){this._validationEvents.push({source:source,phase:phase,event:event,message:message})},BaseSerializationContext.prototype.logParseEvent=function(source,event,message){this.logEvent(source,Enums.ValidationPhase.Parse,event,message)},BaseSerializationContext.prototype.getEventAt=function(index){return this._validationEvents[index]},Object.defineProperty(BaseSerializationContext.prototype,"eventCount",{get:function(){return this._validationEvents.length},enumerable:!1,configurable:!0}),BaseSerializationContext}();exports.BaseSerializationContext=BaseSerializationContext;var SimpleSerializationContext=function(_super){function SimpleSerializationContext(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(SimpleSerializationContext,_super),SimpleSerializationContext}(BaseSerializationContext),PropertyDefinition=function(){function PropertyDefinition(targetVersion,name,defaultValue,onGetInitialValue){this.targetVersion=targetVersion,this.name=name,this.defaultValue=defaultValue,this.onGetInitialValue=onGetInitialValue,this.isSerializationEnabled=!0,this.sequentialNumber=PropertyDefinition._sequentialNumber,PropertyDefinition._sequentialNumber++}return PropertyDefinition.prototype.getInternalName=function(){return this.name},PropertyDefinition.prototype.parse=function(sender,source,context){return source[this.name]},PropertyDefinition.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,value,this.defaultValue)},PropertyDefinition._sequentialNumber=0,PropertyDefinition}();exports.PropertyDefinition=PropertyDefinition;var StringProperty=function(_super){function StringProperty(targetVersion,name,treatEmptyAsUndefined,regEx,defaultValue,onGetInitialValue){void 0===treatEmptyAsUndefined&&(treatEmptyAsUndefined=!0);var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.treatEmptyAsUndefined=treatEmptyAsUndefined,_this.regEx=regEx,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(StringProperty,_super),StringProperty.prototype.parse=function(sender,source,context){var parsedValue=Utils.parseString(source[this.name],this.defaultValue);if(!(void 0===parsedValue||""===parsedValue&&this.treatEmptyAsUndefined)&&void 0!==this.regEx&&!this.regEx.exec(parsedValue))return void context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(parsedValue,this.name));return parsedValue},StringProperty.prototype.toJSON=function(sender,target,value,context){context.serializeString(target,this.name,""===value&&this.treatEmptyAsUndefined?void 0:value,this.defaultValue)},StringProperty}(PropertyDefinition);exports.StringProperty=StringProperty;var BoolProperty=function(_super){function BoolProperty(targetVersion,name,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(BoolProperty,_super),BoolProperty.prototype.parse=function(sender,source,context){return Utils.parseBool(source[this.name],this.defaultValue)},BoolProperty.prototype.toJSON=function(sender,target,value,context){context.serializeBool(target,this.name,value,this.defaultValue)},BoolProperty}(PropertyDefinition);exports.BoolProperty=BoolProperty;var NumProperty=function(_super){function NumProperty(targetVersion,name,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(NumProperty,_super),NumProperty.prototype.parse=function(sender,source,context){return Utils.parseNumber(source[this.name],this.defaultValue)},NumProperty.prototype.toJSON=function(sender,target,value,context){context.serializeNumber(target,this.name,value,this.defaultValue)},NumProperty}(PropertyDefinition);exports.NumProperty=NumProperty;var PixelSizeProperty=function(_super){function PixelSizeProperty(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(PixelSizeProperty,_super),PixelSizeProperty.prototype.parse=function(sender,source,context){var result=void 0,value=source[this.name];if("string"==typeof value){var isValid=!1;try{var size=shared_1.SizeAndUnit.parse(value,!0);size.unit==Enums.SizeUnit.Pixel&&(result=size.physicalSize,isValid=!0)}catch(_a){}isValid||context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(source[this.name],"minHeight"))}return result},PixelSizeProperty.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,"number"!=typeof value||isNaN(value)?void 0:value+"px")},PixelSizeProperty}(PropertyDefinition);exports.PixelSizeProperty=PixelSizeProperty;var StringArrayProperty=function(_super){function StringArrayProperty(targetVersion,name,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(StringArrayProperty,_super),StringArrayProperty.prototype.parse=function(sender,source,context){var sourceValue=source[this.name];if(void 0===sourceValue||!Array.isArray(sourceValue))return this.defaultValue;for(var result=[],_i=0,sourceValue_1=sourceValue;_i<sourceValue_1.length;_i++){var value=sourceValue_1[_i];"string"==typeof value?result.push(value):context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,'Invalid array value "'+value+'" of type "'+typeof value+'" ignored for "'+this.name+'".')}return result},StringArrayProperty.prototype.toJSON=function(sender,target,value,context){context.serializeArray(target,this.name,value)},StringArrayProperty}(PropertyDefinition);exports.StringArrayProperty=StringArrayProperty;var ValueSetProperty=function(_super){function ValueSetProperty(targetVersion,name,values,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.values=values,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(ValueSetProperty,_super),ValueSetProperty.prototype.isValidValue=function(value,context){for(var _i=0,_a=this.values;_i<_a.length;_i++){var versionedValue=_a[_i];if(value.toLowerCase()===versionedValue.value.toLowerCase())return(versionedValue.targetVersion?versionedValue.targetVersion:this.targetVersion).compareTo(context.targetVersion)<=0}return!1},ValueSetProperty.prototype.parse=function(sender,source,context){var sourceValue=source[this.name];if(void 0===sourceValue)return this.defaultValue;if("string"==typeof sourceValue)for(var _i=0,_a=this.values;_i<_a.length;_i++){var versionedValue=_a[_i];if(sourceValue.toLowerCase()===versionedValue.value.toLowerCase()){var targetVersion=versionedValue.targetVersion?versionedValue.targetVersion:this.targetVersion;return targetVersion.compareTo(context.targetVersion)<=0?versionedValue.value:(context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.propertyValueNotSupported(sourceValue,this.name,targetVersion.toString(),context.targetVersion.toString())),this.defaultValue)}}return context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(sourceValue,this.name)),this.defaultValue},ValueSetProperty.prototype.toJSON=function(sender,target,value,context){var invalidValue=!1;if(void 0!==value){invalidValue=!0;for(var _i=0,_a=this.values;_i<_a.length;_i++){var versionedValue=_a[_i];if(versionedValue.value===value){var targetVersion=versionedValue.targetVersion?versionedValue.targetVersion:this.targetVersion;if(targetVersion.compareTo(context.targetVersion)<=0){invalidValue=!1;break}context.logEvent(sender,Enums.ValidationPhase.ToJSON,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.propertyValueNotSupported(value,this.name,targetVersion.toString(),context.targetVersion.toString()))}}}invalidValue||context.serializeValue(target,this.name,value,this.defaultValue,!0)},ValueSetProperty}(PropertyDefinition);exports.ValueSetProperty=ValueSetProperty;var EnumProperty=function(_super){function EnumProperty(targetVersion,name,enumType,defaultValue,values,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;if(_this.targetVersion=targetVersion,_this.name=name,_this.enumType=enumType,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this._values=[],values)_this._values=values;else for(var key in enumType){var keyAsNumber=parseInt(key,10);keyAsNumber>=0&&_this._values.push({value:keyAsNumber})}return _this}return __extends(EnumProperty,_super),EnumProperty.prototype.parse=function(sender,source,context){var sourceValue=source[this.name];if("string"!=typeof sourceValue)return this.defaultValue;var enumValue=Utils.getEnumValueByName(this.enumType,sourceValue);if(void 0!==enumValue)for(var _i=0,_a=this.values;_i<_a.length;_i++){var versionedValue=_a[_i];if(versionedValue.value===enumValue){var targetVersion=versionedValue.targetVersion?versionedValue.targetVersion:this.targetVersion;return targetVersion.compareTo(context.targetVersion)<=0?enumValue:(context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.propertyValueNotSupported(sourceValue,this.name,targetVersion.toString(),context.targetVersion.toString())),this.defaultValue)}}return context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(sourceValue,this.name)),this.defaultValue},EnumProperty.prototype.toJSON=function(sender,target,value,context){var invalidValue=!1;if(void 0!==value){invalidValue=!0;for(var _i=0,_a=this.values;_i<_a.length;_i++){var versionedValue=_a[_i];if(versionedValue.value===value){if((versionedValue.targetVersion?versionedValue.targetVersion:this.targetVersion).compareTo(context.targetVersion)<=0){invalidValue=!1;break}context.logEvent(sender,Enums.ValidationPhase.ToJSON,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(value,this.name))}}}invalidValue||context.serializeEnum(this.enumType,target,this.name,value,this.defaultValue)},Object.defineProperty(EnumProperty.prototype,"values",{get:function(){return this._values},enumerable:!1,configurable:!0}),EnumProperty}(PropertyDefinition);exports.EnumProperty=EnumProperty;var SerializableObjectProperty=function(_super){function SerializableObjectProperty(targetVersion,name,objectType,nullable,defaultValue){void 0===nullable&&(nullable=!1);var _this=_super.call(this,targetVersion,name,defaultValue,(function(sender){return _this.nullable?void 0:new _this.objectType}))||this;return _this.targetVersion=targetVersion,_this.name=name,_this.objectType=objectType,_this.nullable=nullable,_this}return __extends(SerializableObjectProperty,_super),SerializableObjectProperty.prototype.parse=function(sender,source,context){var sourceValue=source[this.name];if(void 0===sourceValue)return this.onGetInitialValue?this.onGetInitialValue(sender):this.defaultValue;var result=new this.objectType;return result.parse(sourceValue,context),result},SerializableObjectProperty.prototype.toJSON=function(sender,target,value,context){var serializedValue=void 0;void 0===value||value.hasAllDefaultValues()||(serializedValue=value.toJSON(context)),"object"==typeof serializedValue&&0===Object.keys(serializedValue).length&&(serializedValue=void 0),context.serializeValue(target,this.name,serializedValue,this.defaultValue,!0)},SerializableObjectProperty}(PropertyDefinition);exports.SerializableObjectProperty=SerializableObjectProperty;var SerializableObjectCollectionProperty=function(_super){function SerializableObjectCollectionProperty(targetVersion,name,objectType,onItemAdded){var _this=_super.call(this,targetVersion,name,void 0,(function(sender){return[]}))||this;return _this.targetVersion=targetVersion,_this.name=name,_this.objectType=objectType,_this.onItemAdded=onItemAdded,_this}return __extends(SerializableObjectCollectionProperty,_super),SerializableObjectCollectionProperty.prototype.parse=function(sender,source,context){var result=[],sourceCollection=source[this.name];if(Array.isArray(sourceCollection))for(var _i=0,sourceCollection_1=sourceCollection;_i<sourceCollection_1.length;_i++){var sourceItem=sourceCollection_1[_i],item=new this.objectType;item.parse(sourceItem,context),result.push(item),this.onItemAdded&&this.onItemAdded(sender,item)}return result.length>0?result:this.onGetInitialValue?this.onGetInitialValue(sender):void 0},SerializableObjectCollectionProperty.prototype.toJSON=function(sender,target,value,context){context.serializeArray(target,this.name,value)},SerializableObjectCollectionProperty}(PropertyDefinition);exports.SerializableObjectCollectionProperty=SerializableObjectCollectionProperty;var CustomProperty=function(_super){function CustomProperty(targetVersion,name,onParse,onToJSON,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,defaultValue,onGetInitialValue)||this;if(_this.targetVersion=targetVersion,_this.name=name,_this.onParse=onParse,_this.onToJSON=onToJSON,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,!_this.onParse)throw new Error("CustomPropertyDefinition instances must have an onParse handler.");if(!_this.onToJSON)throw new Error("CustomPropertyDefinition instances must have an onToJSON handler.");return _this}return __extends(CustomProperty,_super),CustomProperty.prototype.parse=function(sender,source,context){return this.onParse(sender,this,source,context)},CustomProperty.prototype.toJSON=function(sender,target,value,context){this.onToJSON(sender,this,target,value,context)},CustomProperty}(PropertyDefinition);exports.CustomProperty=CustomProperty;var SerializableObjectSchema=function(){function SerializableObjectSchema(){this._properties=[]}return SerializableObjectSchema.prototype.indexOf=function(property){for(var i=0;i<this._properties.length;i++)if(this._properties[i]===property)return i;return-1},SerializableObjectSchema.prototype.add=function(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i]=arguments[_i];for(var i=0;i<properties.length;i++)-1===this.indexOf(properties[i])&&this._properties.push(properties[i])},SerializableObjectSchema.prototype.remove=function(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i]=arguments[_i];for(var _a=0,properties_1=properties;_a<properties_1.length;_a++)for(var property_1=properties_1[_a];;){var index=this.indexOf(property_1);if(!(index>=0))break;this._properties.splice(index,1)}},SerializableObjectSchema.prototype.getItemAt=function(index){return this._properties[index]},SerializableObjectSchema.prototype.getCount=function(){return this._properties.length},SerializableObjectSchema}();exports.SerializableObjectSchema=SerializableObjectSchema,exports.property=function(property){return function(target,propertyKey){var descriptor=Object.getOwnPropertyDescriptor(target,propertyKey)||{};descriptor.get||descriptor.set||(descriptor.get=function(){return this.getValue(property)},descriptor.set=function(value){this.setValue(property,value)},Object.defineProperty(target,propertyKey,descriptor))}};var SerializableObject=function(){function SerializableObject(){this._propertyBag={},this._rawProperties={},this.maxVersion=SerializableObject.defaultMaxVersion;for(var s=this.getSchema(),i=0;i<s.getCount();i++){var property_2=s.getItemAt(i);property_2.onGetInitialValue&&this.setValue(property_2,property_2.onGetInitialValue(this))}}return SerializableObject.prototype.getDefaultSerializationContext=function(){return new SimpleSerializationContext},SerializableObject.prototype.populateSchema=function(schema){var ctor=this.constructor,properties=[];for(var propertyName in ctor)try{var propertyValue=ctor[propertyName];propertyValue instanceof PropertyDefinition&&properties.push(propertyValue)}catch(_a){}if(properties.length>0){var sortedProperties=properties.sort((function(p1,p2){return p1.sequentialNumber>p2.sequentialNumber?1:p1.sequentialNumber<p2.sequentialNumber?-1:0}));schema.add.apply(schema,sortedProperties)}SerializableObject.onRegisterCustomProperties&&SerializableObject.onRegisterCustomProperties(this,schema)},SerializableObject.prototype.getValue=function(property){return this._propertyBag.hasOwnProperty(property.getInternalName())?this._propertyBag[property.getInternalName()]:property.defaultValue},SerializableObject.prototype.setValue=function(property,value){null==value?delete this._propertyBag[property.getInternalName()]:this._propertyBag[property.getInternalName()]=value},SerializableObject.prototype.internalParse=function(source,context){if(this._propertyBag={},this._rawProperties=shared_1.GlobalSettings.enableFullJsonRoundTrip&&source||{},source)for(var s=this.getSchema(),i=0;i<s.getCount();i++){var property_3=s.getItemAt(i);if(property_3.isSerializationEnabled){var propertyValue=property_3.onGetInitialValue?property_3.onGetInitialValue(this):void 0;source.hasOwnProperty(property_3.name)&&(property_3.targetVersion.compareTo(context.targetVersion)<=0?propertyValue=property_3.parse(this,source,context):context.logParseEvent(this,Enums.ValidationEvent.UnsupportedProperty,strings_1.Strings.errors.propertyNotSupported(property_3.name,property_3.targetVersion.toString(),context.targetVersion.toString()))),this.setValue(property_3,propertyValue)}}else this.resetDefaultValues()},SerializableObject.prototype.internalToJSON=function(target,context){for(var s=this.getSchema(),serializedProperties=[],i=0;i<s.getCount();i++){var property_4=s.getItemAt(i);property_4.isSerializationEnabled&&property_4.targetVersion.compareTo(context.targetVersion)<=0&&-1===serializedProperties.indexOf(property_4.name)&&(property_4.toJSON(this,target,this.getValue(property_4),context),serializedProperties.push(property_4.name))}},SerializableObject.prototype.shouldSerialize=function(context){return!0},SerializableObject.prototype.parse=function(source,context){this.internalParse(source,context||new SimpleSerializationContext)},SerializableObject.prototype.toJSON=function(context){var effectiveContext;if(context&&context instanceof BaseSerializationContext?effectiveContext=context:(effectiveContext=this.getDefaultSerializationContext()).toJSONOriginalParam=context,this.shouldSerialize(effectiveContext)){var result=void 0;return result=shared_1.GlobalSettings.enableFullJsonRoundTrip&&this._rawProperties&&"object"==typeof this._rawProperties?this._rawProperties:{},this.internalToJSON(result,effectiveContext),result}},SerializableObject.prototype.hasDefaultValue=function(property){return this.getValue(property)===property.defaultValue},SerializableObject.prototype.hasAllDefaultValues=function(){for(var s=this.getSchema(),i=0;i<s.getCount();i++){var property_5=s.getItemAt(i);if(!this.hasDefaultValue(property_5))return!1}return!0},SerializableObject.prototype.resetDefaultValues=function(){for(var s=this.getSchema(),i=0;i<s.getCount();i++){var property_6=s.getItemAt(i);this.setValue(property_6,property_6.defaultValue)}},SerializableObject.prototype.setCustomProperty=function(name,value){"string"==typeof value&&!value||null==value?delete this._rawProperties[name]:this._rawProperties[name]=value},SerializableObject.prototype.getCustomProperty=function(name){return this._rawProperties[name]},SerializableObject.prototype.getSchema=function(){var schema=SerializableObject._schemaCache[this.getSchemaKey()];return schema||(schema=new SerializableObjectSchema,this.populateSchema(schema),SerializableObject._schemaCache[this.getSchemaKey()]=schema),schema},SerializableObject.defaultMaxVersion=Versions.latest,SerializableObject._schemaCache={},SerializableObject}();exports.SerializableObject=SerializableObject},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),call_model_1=__webpack_require__(29),moment=__webpack_require__(1),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),event_service_1=__webpack_require__(11),webrtcP2P_service_1=__webpack_require__(35),telephony_service_1=__webpack_require__(57),errorHelper_service_1=__webpack_require__(12);var MPCallState;!function(MPCallState){MPCallState[MPCallState.Unknow=0]="Unknow",MPCallState[MPCallState.Free=1]="Free",MPCallState[MPCallState.WaitWebrtc=2]="WaitWebrtc",MPCallState[MPCallState.WaitTelephony=3]="WaitTelephony",MPCallState[MPCallState.CallOffer=4]="CallOffer",MPCallState[MPCallState.CallOnGoing=5]="CallOnGoing",MPCallState[MPCallState.CallActive=6]="CallActive",MPCallState[MPCallState.CallActiveNoWebMedia=7]="CallActiveNoWebMedia",MPCallState[MPCallState.TelCallReleasing=8]="TelCallReleasing",MPCallState[MPCallState.WebCallReleasing=9]="WebCallReleasing",MPCallState[MPCallState.RemoteControled=10]="RemoteControled",MPCallState[MPCallState.AnomalyCCS=11]="AnomalyCCS"}(MPCallState=exports.MPCallState||(exports.MPCallState={}));class WebrtcGatewayService{constructor(){this.started=!1,this.listeners=[],this.myContact=null,this.mediaPillarContact=null,this.mediaPillarConfigured=!1,this.mediaPillarAlive=!1,this.evtQueue=[],this.SEM=0,this.mediaPillarPollingSelected=!1,this.TO_transition=15e3,this.TO_transition_long=3e4,this.TO_NoWebMedia=6e4,this.TO_NoWebMediaNotel=5e3,this.TO_PILLAR_POLLING=3e5,this.TO_waitTelephony=600,this.mediaPillarKeepAliveSuspend=!1,this.keepAliveIterationCpt=0,this.mediaPillarCallContexts=[],this.mediaPillarCallContextId=1,this.isMixPstnWebRtcAllowed=!1,this.rxSubject=new rxjs_1.Subject,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webrtcGatewayService||(win.rainbow.webrtcGatewayService=new WebrtcGatewayService),win.rainbow.webrtcGatewayService}async start(){if(this.setMediaPillarConfigured(!1),this.mediaPillarAlive=!1,this.portalURL=config.restServerUrl+"/api/rainbow/mediapillar/v1.0/mediapillars",this.myContact=this.contactService.userContact,this.mediaPillarContact=null,this.mediaPillarPollingSelected=!1,this.mediaPillarConnection={keepAlive_TO:null,mediaPillarJidArray:[],rainbowPhoneNumber:"",remoteExtension:"",mediaPillarStatesPool:{}},this.mediaPillarCallContext={id:0,callState:MPCallState.Free,callState_TO:null,waitTelephony_TO:null,isOutgoingCall3PCC:!1,telephonyCallRefs:[],webrtcCallRef:null,previousCallConnectionId:null,previousCallStatus:null,updateContactFlag:!1,isIncomingCallPopupWithWebRtcCall:!1,onGoingCallMediaPillarJid:"",callOwnerForOxoMultiClientFlag:!1,getMediaPillarJid:()=>this.getOnGoingMediaPillarJid()},this.mediaPillarCallContexts=[],this.isMixPstnWebRtcAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MIX_WEBRTC_PSTN_CALLS)||config.mixwebrtcpstn,this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_WEBRTC_PSTN_CALLING)){this.logger.info("[WebrtcGatewayService] === STARTING ==="),this.started=!0,this.SEM=0,this.resetEvtAutomaton(),this.mediaPillarKeepAliveSuspend=!1;try{const mediaPillarJidArray=await this.getMediaPillarData();if(!mediaPillarJidArray){throw new Error("Anomaly getMediaPillarData")}const mediaPillarJid=mediaPillarJidArray[0];if(this.mediaPillarContact=this.createMediaPillarContact(mediaPillarJid),this.mediaPillarConnection.mediaPillarJidArray=mediaPillarJidArray,this.logger.info("[WebrtcGatewayService] Pillar remoteExtension used : "+this.mediaPillarConnection.remoteExtension),""!==this.mediaPillarConnection.remoteExtension?(this.mediaPillarConnection.mediaPillarJidArray.forEach(MPJid=>{this.logger.info("[WebrtcGatewayService] MPJid: "+MPJid),this.mediaPillarConnection.mediaPillarStatesPool[MPJid]={mediaPillarConfigured:!0,mediaPillarAlive:!1}}),this.setMediaPillarConfigured(this.isMediaPillarPoolConfigured(null)),this.telephonyService.started&&this.telephonyService.getNomadicStatus()):(this.logger.warn("[WebrtcGatewayService] no remoteExtention available "),this.setMediaPillarConfigured(!1)),this.mediaPillarConfigured)try{await this.registerMediaPillarPool()}finally{this.mediaPillarAlive?(this.logger.info("[WebrtcGatewayService] Pseudo media pillar register OK with extension "+this.mediaPillarConnection.remoteExtension),this.eventService.publish("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive)):(this.logger.info("[WebrtcGatewayService] Pseudo media pillar register KO"),this.logger.info("[WebrtcGatewayService] Initial polling activated on starting issue"),this.mediaPillarKeepAlivePolling("START",3e5),this.eventService.publish("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive))}this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{"ON_XMPP_DISCONNECTED"===event.name?(this.logger.info("[WebrtcGatewayService] onConnectionStateChangeEvent : disconnected then MP keepalive suspended"),this.mediaPillarKeepAliveSuspend=!0):"ON_XMPP_CONNECTED"===event.name&&(this.logger.info("[WebrtcGatewayService] onConnectionStateChangeEvent : connected then keepalive as necessary"),this.mediaPillarKeepAliveSuspend=!1,this.isMediaPillarUserSelected()&&(this.TO_PILLAR_POLLING=15e3,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING)))}),this.listeners.push(this.eventService.subscribe("ON_CALL_UPDATED_EVENT",(event,call,infoEvt)=>{this.onCallEvent(event,call,infoEvt)})),this.listeners.push(this.eventService.subscribe("ON_MEDIAPILLAR_CALL_REMOTE_CTRL_EVENT",(event,call)=>{this.onRemoteCtrlCall(event,call)})),this.listeners.push(this.eventService.subscribe("ON_MEDIAPILLAR_CALL_REJECT_EVENT",(__event,__webrtcCall)=>{let call=null;for(const key in this.telephonyService.calls)if(this.telephonyService.calls.hasOwnProperty(key)&&this.telephonyService.calls[key].status===call_model_1.Call.Status.RINGING_INCOMMING){call=this.telephonyService.calls[key];break}this.logger.info("[WebrtcGatewayService] on_mediapillar_call_reject_event"),call&&(this.telephonyService.releaseCall(call),call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call))})),this.listeners.push(this.eventService.subscribe("ON_REPLACE_CALLREFS_REQUEST",(__event,newCall,call)=>{this.logger.info(`[WebrtcGatewayService] ON_REPLACE_CALLREFS_REQUEST newCall ${newCall} call ${call}`),this.replaceCallRefs(newCall,call)})),this.listeners.push(this.eventService.subscribe("ON_ANSWER_CALL_REQUEST",(__event,call)=>{this.logger.info("[WebrtcGatewayService] ON_ANSWER_CALL_REQUEST call "+call),this.answerCall(call)})),this.logger.info("[WebrtcGatewayService] === STARTED ===")}catch(error){this.started=!1,this.mediaPillarConnection.mediaPillarJidArray=[],this.mediaPillarConnection.rainbowPhoneNumber="",this.mediaPillarConnection.remoteExtension="",this.setMediaPillarConfigured(!1),this.mediaPillarAlive=!1,this.mediaPillarConnection.mediaPillarStatesPool={},this.logger.info("[WebrtcGatewayService] === STARTING FAILURE === "+error.message)}}else this.logger.info("[WebrtcGatewayService] === NO WEBRTCGATEWAY ENVOLVED === ")}async stop(){this.logger.info("[WebrtcGatewayService] === STOPPING ==="),this.started=!1,this.setMediaPillarConfigured(!1),this.mediaPillarAlive=!1,this.mediaPillarKeepAlivePolling("STOP",0),this.mediaPillarConnection&&(this.mediaPillarConnection.mediaPillarJidArray=[],this.mediaPillarConnection.rainbowPhoneNumber="",this.mediaPillarConnection.remoteExtension="",this.mediaPillarConnection.mediaPillarStatesPool={}),this.mediaPillarCallContext&&(this.releaseMediaPillarCallContext(),this.mediaPillarCallContext.callState=MPCallState.Unknow),this.mediaPillarCallContexts.forEach(context=>{this.releaseMediaPillarCallContext(context),context.callState=MPCallState.Unknow}),this.mediaPillarCallContexts=[],this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.listeners&&this.listeners.forEach(unregisterListener=>{unregisterListener()}),this.logger.info("[WebrtcGatewayService] === STOPPED ===")}setMediaPillarConfigured(isConfigured){this.mediaPillarConfigured=isConfigured,this.eventService.publish("ON_WEBRTCGATEWAY_CONFIG_CHANGE",this.mediaPillarConfigured,isConfigured&&this.mediaPillarConnection?this.mediaPillarConnection.remoteExtension:"")}onCallEvent(__event,call,infoEvt){if(this.isMediaPillarCallCase()||call&&call.getMixtWebTelSingleStepTrans()){const mediaPillarCallEventContext=this.getOrCreateMediaPIllarCallContext(call);if(!mediaPillarCallEventContext)return void this.logger.warn("[WebrtcGatewayService] onCallEvent : no mediaPillar Call Context found : Evt IGNORED");if(this.SEM++,this.logger.info("[WebrtcGatewayService] onCallEvent IN("+this.SEM+") state = "+mediaPillarCallEventContext.callState),this.logger.info("[WebrtcGatewayService] onCallEvent "+mediaPillarCallEventContext.callState+" --- "+call.type.value+"("+call.id+","+call.status.value+")"),infoEvt&&null!==infoEvt&&(this.logger.info("[WebrtcGatewayService] onCallEvent tel infoEvt : Evt = "+infoEvt.actionElemName+" / cause = "+infoEvt.cause),"updatecall"!==infoEvt.actionElemName&&"updateparty"!==infoEvt.actionElemName||(mediaPillarCallEventContext.updateContactFlag=!0,this.logger.info("[WebrtcGatewayService] updateContactFlag = true"))),call.connectionId===mediaPillarCallEventContext.previousCallConnectionId&&call.status===mediaPillarCallEventContext.previousCallStatus&&!this.mediaPillarCallContext.updateContactFlag)return mediaPillarCallEventContext.previousCallConnectionId=call.connectionId,mediaPillarCallEventContext.previousCallStatus=call.status,this.logger.info("[WebrtcGatewayService] onCallEvent | DEBOUNCE EVT"),this.SEM--,void this.logger.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+")");if(call.type.value===call_model_1.Call.Type.PHONE.value&&null===call.id)return mediaPillarCallEventContext.previousCallConnectionId=call.connectionId,mediaPillarCallEventContext.previousCallStatus=call.status,this.logger.info("[WebrtcGatewayService] onCallEvent | FILTER EVT null/error"),this.SEM--,void this.logger.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+")");if(mediaPillarCallEventContext.previousCallConnectionId=call.connectionId,mediaPillarCallEventContext.previousCallStatus=call.status,this.evtQueue.push({call:call,mediaPillarCallContext:mediaPillarCallEventContext}),this.evtQueue.length>1)return this.SEM--,void this.logger.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+") evt pushed = "+call.status.value);for(;this.evtQueue.length;){try{this.processEvt(this.evtQueue[0])}catch(error){this.logger.error("[WebrtcGatewayService] onCallEvent queue processing | call : "+this.evtQueue[0].status.value+" Error : "+error)}this.evtQueue.splice(0,1)}this.SEM--,this.logger.info("[WebrtcGatewayService] onCallEvent OUT("+this.SEM+") state = "+this.mediaPillarCallContext.callState),0!==this.SEM&&(this.logger.error("[WebrtcGatewayService] onCallEvent OUT | Unmanaged Eventing Reentrancy Situation"),this.resetEvtAutomaton(),this.SEM=0)}else if(call&&call.type===call_model_1.Call.Type.WEBRTC&&call.fullJid&&this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(call.status){case call_model_1.Call.Status.ACTIVE:this.mediaPillarCallContext&&this.mediaPillarCallContext.callState===MPCallState.CallActiveNoWebMedia&&(this.logger.info("[WebrtcGatewayService] case when WebrtcCall goes to Active -- (but MP is not connected)"),this.mediaPillarCallContext.callState=MPCallState.CallActive,this.stopCallStateTimeOut())}}processEvt(callEvent){const call=callEvent.call;if(this.mediaPillarCallContext=callEvent.mediaPillarCallContext,this.logger.info("[WebrtcGatewayService] processEvt | process "+call.type.value+"("+call.id+","+call.status.value+") in MPcontextCallstate = "+this.mediaPillarCallContext.callState+" CTX id "+this.mediaPillarCallContext.id),call.type.value===call_model_1.Call.Type.PHONE.value){const telCallsNumber=this.telephonyService.getCalls().length;if((()=>{let ignoreEvt=!1;return(call.status===call_model_1.Call.Status.DIALING||this.telephonyService.isSipWise())&&(call.isSecondary=!0),call.isSecondary?call.status===call_model_1.Call.Status.UNKNOWN||call.status===call_model_1.Call.Status.RINGING_INCOMMING||call.status===call_model_1.Call.Status.QUEUED_INCOMMING||call.status===call_model_1.Call.Status.ACTIVE?(this.addTelCallRefs(call),call.setMediaPillarCall(this.getMediaPillarCallContext()),ignoreEvt=!1,ignoreEvt):this.mediaPillarCallContext.callState===MPCallState.RemoteControled?(this.logger.info("[WebrtcGatewayService] processEvt |  RemoteControled state for call : "+call.id+" then ignore"),ignoreEvt=!0,ignoreEvt):(this.addTelCallRefs(call),this.mediaPillarCallContext.telephonyCallRefs.length>1?(this.logger.info("[WebrtcGatewayService] processEvt |  nthCall : "+this.mediaPillarCallContext.telephonyCallRefs.length+" then ignore"),ignoreEvt=!0,ignoreEvt):ignoreEvt):(this.logger.info("[WebrtcGatewayService] processEvt | NOT SECONDARY then ignore"),ignoreEvt=!0,ignoreEvt)})())this.logger.info("[WebrtcGatewayService] processEvt |  call("+call.id+" / SEC "+call.isSecondary+", "+call.status.value+") -> EVT IGNORED"),this.logger.info("[WebrtcGatewayService] processEvt |  telephonyCallRefs.length = "+this.mediaPillarCallContext.telephonyCallRefs.length),this.logger.info("[WebrtcGatewayService] processEvt |  calls.length = "+telCallsNumber);else switch(this.logger.info("[WebrtcGatewayService] processEvt |  call("+call.id+" / SEC "+call.isSecondary+", "+call.status.value+") -> EVT PROCESSED"),this.logger.info("[WebrtcGatewayService] processEvt |  telephonyCallRefs.length = "+this.mediaPillarCallContext.telephonyCallRefs.length),this.logger.info("[WebrtcGatewayService] processEvt |  calls.length = "+telCallsNumber),call.status){case call_model_1.Call.Status.RINGING_INCOMMING:this.onTelCallIncomming(call);break;case call_model_1.Call.Status.DIALING:this.onTelCallDialling(call);break;case call_model_1.Call.Status.RINGING_OUTGOING:this.onTelCallOutgoing(call);break;case call_model_1.Call.Status.ACTIVE:this.onTelCallActive(call);break;case call_model_1.Call.Status.UNKNOWN:this.onTelCallReleasing(call)}}else if(this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:this.onWebrtcCallIncomming(call);break;case call_model_1.Call.Status.CONNECTING:this.onWebrtcCallConnecting(call);break;case call_model_1.Call.Status.ACTIVE:this.onWebrtcCallActive(call);break;case call_model_1.Call.Status.ANSWERING:this.onWebrtcCallAnswering(call);break;case call_model_1.Call.Status.UNKNOWN:this.onWebrtcCallReleasing(call)}else this.logger.info("[WebrtcGatewayService] processEvt | process call("+call.id+","+call.status.value+") -> Not a webrtcgateway case")}getOrCreateMediaPIllarCallContext(call){if(!this.telephonyService.isSipWise())return this.mediaPillarCallContext;if(call.type===call_model_1.Call.Type.WEBRTC){if(this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:return this.getOrCreateContextForWebrtcCallIncoming(call);default:return this.getContextForWebrtcCallExisting(call)}}else if(call.type===call_model_1.Call.Type.PHONE)return this.getOrCreateContextForTelCall(call);return null}getOrCreateContextForTelCall(call){this.logger.info("[WebrtcGatewayService] CTX getOrCreateContextForTelCall "+call);let foundContext=this.mediaPillarCallContexts.find(mediaPillarCallContext=>mediaPillarCallContext.telephonyCallRefs&&mediaPillarCallContext.telephonyCallRefs.length&&mediaPillarCallContext.telephonyCallRefs[0].id===call.id);return foundContext?(this.logger.info("[WebrtcGatewayService] CTX getOrCreateContextForTelCall "+call+" returns context id "+foundContext.id),foundContext):(foundContext=this.mediaPillarCallContexts.find(mediaPillarCallContext=>mediaPillarCallContext.callState===MPCallState.WaitTelephony&&(!mediaPillarCallContext.webrtcCallRef.getAssocPhoneCallId()||mediaPillarCallContext.webrtcCallRef.getAssocPhoneCallId().includes(call.id))),foundContext?(this.logger.info("[WebrtcGatewayService] CTX getOrCreateContextForTelCall "+call+" returns context id "+foundContext.id),foundContext):call.status===call_model_1.Call.Status.UNKNOWN?null:this.createMediaPIllarCallContext())}getOrCreateContextForWebrtcCallIncoming(call){this.logger.info("[WebrtcGatewayService] CTX getOrCreateContextForWebrtcCallIncoming "+call);const foundContext=this.mediaPillarCallContexts.find(mediaPillarCallContext=>mediaPillarCallContext.callState===MPCallState.WaitWebrtc&&(!call.getAssocPhoneCallId()||mediaPillarCallContext.telephonyCallRefs&&mediaPillarCallContext.telephonyCallRefs.length&&call.getAssocPhoneCallId().includes(mediaPillarCallContext.telephonyCallRefs[0].id)));return foundContext?(this.logger.info("[WebrtcGatewayService] CTX getOrCreateContextForWebrtcCallIncoming "+call+" returns context id "+foundContext.id),foundContext):this.createMediaPIllarCallContext()}getContextForWebrtcCallExisting(call){this.logger.info("[WebrtcGatewayService] CTX getContextForWebrtcCallExisting "+call);const foundContext=this.mediaPillarCallContexts.find(mediaPillarCallContext=>mediaPillarCallContext.webrtcCallRef&&mediaPillarCallContext.webrtcCallRef.id===call.id);return this.logger.info("[WebrtcGatewayService] CTX getContextForWebrtcCallExisting "+call+" returns context id "+(foundContext?foundContext.id:" not found")),foundContext}createMediaPIllarCallContext(){const newContext={id:this.mediaPillarCallContextId++,callState:MPCallState.Free,callState_TO:null,waitTelephony_TO:null,isOutgoingCall3PCC:!1,telephonyCallRefs:[],webrtcCallRef:null,previousCallConnectionId:null,previousCallStatus:null,updateContactFlag:!1,isIncomingCallPopupWithWebRtcCall:!1,onGoingCallMediaPillarJid:"",callOwnerForOxoMultiClientFlag:!1,getMediaPillarJid:()=>this.getOnGoingMediaPillarJid()};return this.mediaPillarCallContexts.push(newContext),this.logger.info("[WebrtcGatewayService] CTX createMediaPIllarCallContext id "+newContext.id+" => nb contexts "+this.mediaPillarCallContexts.length),newContext}releaseMediaPillarCallContext(mediaPillarCallContext=null){mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext),mediaPillarCallContext.callState=MPCallState.Free,this.stopCallStateTimeOut(mediaPillarCallContext),this.stopWaitTelephonyTimeOut(mediaPillarCallContext),mediaPillarCallContext.isOutgoingCall3PCC=!1,mediaPillarCallContext.updateContactFlag=!1,mediaPillarCallContext.telephonyCallRefs.length>0&&this.logger.warn("[WebrtcGatewayService] releaseMediaPillarCallContext | reset context but telephonyCallRefs not empty !"),null!==mediaPillarCallContext.webrtcCallRef&&this.logger.warn("[WebrtcGatewayService] releaseMediaPillarCallContext | reset context but webrtcCallRef not null !"),mediaPillarCallContext.telephonyCallRefs=[],mediaPillarCallContext.webrtcCallRef=null,mediaPillarCallContext.previousCallConnectionId=null,mediaPillarCallContext.previousCallStatus="",mediaPillarCallContext.isIncomingCallPopupWithWebRtcCall=!1,mediaPillarCallContext.onGoingCallMediaPillarJid="",mediaPillarCallContext.callOwnerForOxoMultiClientFlag=!1;const index=this.mediaPillarCallContexts.indexOf(mediaPillarCallContext);this.mediaPillarCallContexts.splice(index,1),this.logger.info("[WebrtcGatewayService] releaseMediaPillarCallContext id "+mediaPillarCallContext.id+" => nb contexts "+this.mediaPillarCallContexts.length),this.logger.log("[WebrtcGatewayService] releaseMediaPillarCallContext | =====  mediaPillarCallContext RELEASED  ===== ")}resetEvtAutomaton(){this.evtQueue=[]}stopCallStateTimeOut(mediaPillarCallContext=null){mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext),mediaPillarCallContext.callState_TO&&clearTimeout(mediaPillarCallContext.callState_TO),mediaPillarCallContext.callState_TO=null}stopWaitTelephonyTimeOut(mediaPillarCallContext=null){mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext),mediaPillarCallContext.waitTelephony_TO&&clearTimeout(mediaPillarCallContext.waitTelephony_TO),mediaPillarCallContext.waitTelephony_TO=null}onRemoteCtrlCall(__event,call){this.logger.info("[WebrtcGatewayService] onRemoteCtrlCall for call "+call.id+" in previous state: "+this.mediaPillarCallContext.callState+": => Becomes REMOTECONTROLED");let mediaPillarCallContext=call.getMediaPillarCall();mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext),mediaPillarCallContext.callState=MPCallState.RemoteControled,this.stopCallStateTimeOut(mediaPillarCallContext)}addTelCallRefs(callRef){if(null==callRef)return void this.logger.warn("[WebrtcGatewayService] addTelCallRefs | ANOMALY callRef not valid");let alreadyIn=!1;for(let i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[i].id===callRef.id&&(alreadyIn=!0);alreadyIn||this.mediaPillarCallContext.telephonyCallRefs.push(callRef)}removeTelCallRefs(callRef){if(null==callRef)return void this.logger.warn("[WebrtcGatewayService] removeTelCallRefs | ANOMALY callRef not valid");let i=0;for(;i<this.mediaPillarCallContext.telephonyCallRefs.length;)this.mediaPillarCallContext.telephonyCallRefs[i].id===callRef.id?(this.mediaPillarCallContext.telephonyCallRefs.splice(i,1),0===i&&this.mediaPillarCallContext.telephonyCallRefs.length&&(this.mediaPillarCallContext.telephonyCallRefs[0].setMediaPillarCall(this.getMediaPillarCallContext()),this.logger.log("[WebrtcGatewayService] removeTelCallRefs | master MP call becomes : "+this.mediaPillarCallContext.telephonyCallRefs[0].id))):i++}putAsMasterTelCallRefs(callRef){if(null==callRef)return void this.logger.warn("[WebrtcGatewayService] putAsMasterTelCallRefs | ANOMALY callRef not valid");let i=-1;for(let j=0;j<this.mediaPillarCallContext.telephonyCallRefs.length;j++)this.mediaPillarCallContext.telephonyCallRefs[j].id===callRef.id&&(i=j);if(this.logger.log("[WebrtcGatewayService] putAsMasterTelCallRefs | master MP call is : "+callRef.id),0!==i)if(-1!==i){const replace=this.mediaPillarCallContext.telephonyCallRefs[0];this.mediaPillarCallContext.telephonyCallRefs[0]=callRef,this.mediaPillarCallContext.telephonyCallRefs[i]=replace,callRef.setMediaPillarCall(this.getMediaPillarCallContext())}else this.logger.warn("[WebrtcGatewayService] putAsMasterTelCallRefs | Anomaly call not in telephonyCallRefs")}isMasterTelCallRefs(callRef){return null==callRef?(this.logger.warn("[WebrtcGatewayService] isMasterTelCallRefs | ANOMALY callRef not valid"),!1):0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[0].id===callRef.id}isInTelCallRefs(callRef){if(null==callRef)return this.logger.warn("[WebrtcGatewayService] isInTelCallRefs | ANOMALY callRef not valid"),!1;if(callRef.type!==call_model_1.Call.Type.PHONE)return this.logger.warn("[WebrtcGatewayService] isInTelCallRefs | ANOMALY callRef not Tel PHONE"),!1;const mediaPillarCallContext=this.getMediaPillarCallContext(callRef);if(!mediaPillarCallContext)return this.logger.warn("[WebrtcGatewayService] isInTelCallRefs | ANOMALY mediaPillarCallContext not found"),!1;let i=-1;for(let j=0;j<mediaPillarCallContext.telephonyCallRefs.length;j++)if(mediaPillarCallContext.telephonyCallRefs[j].id===callRef.id){i=j;break}return-1!==i}replaceCallRefs(newCallRef,oldCallRef){if(null==newCallRef||null==oldCallRef)return void this.logger.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY callRef not valid");let flagNewAlreadyExist=!1;const flagNewLinked=newCallRef.isMediaPillarCall(),flagOldLinked=oldCallRef.isMediaPillarCall();this.isInTelCallRefs(newCallRef)&&(flagNewAlreadyExist=!0,this.logger.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY newcallRef already existing"),this.removeTelCallRefs(newCallRef));let i=-1;for(let j=0;j<this.mediaPillarCallContext.telephonyCallRefs.length;j++)this.mediaPillarCallContext.telephonyCallRefs[j].id===oldCallRef.id&&(i=j);-1!==i?(this.mediaPillarCallContext.telephonyCallRefs[i]=newCallRef,flagOldLinked&&newCallRef.setMediaPillarCall(this.getMediaPillarCallContext()),oldCallRef.setMediaPillarCall(null),0===i&&this.logger.log("[WebrtcGatewayService] replaceCallRefs | master MP call becomes : "+this.mediaPillarCallContext.telephonyCallRefs[0].id)):(this.logger.warn("[WebrtcGatewayService] replaceCallRefs | ANOMALY oldCallRef not found"),flagNewAlreadyExist&&(this.addTelCallRefs(newCallRef),flagNewLinked&&newCallRef.setMediaPillarCall(this.getMediaPillarCallContext())))}automatonDefenseTimout(call,mediaPillarCallContext=null){mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext);let actionLevel=0;if(null!=call)if(call.type.value===call_model_1.Call.Type.PHONE.value)switch(this.logger.log("[WebrtcGatewayService] automatonDefenseTimout | transition telcall call="+call.id+" evt="+call.status.value+" then timout"),call.status){case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.RINGING_INCOMMING:break;default:mediaPillarCallContext.callState!==MPCallState.CallActive&&mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&mediaPillarCallContext.callState!==MPCallState.CallOffer&&mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(actionLevel=2)}else if(this.isMediaPillarJid(this.xmppService.getBareJidFromJid(call.fullJid)))switch(this.logger.log("[WebrtcGatewayService] automatonDefenseTimout | transition webrtc "+call.status.value+" then timout"),call.status){case call_model_1.Call.Status.ACTIVE:break;default:mediaPillarCallContext.callState!==MPCallState.CallActive&&mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&mediaPillarCallContext.callState!==MPCallState.CallOffer&&mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(actionLevel=3)}else this.logger.warn("[WebrtcGatewayService] automatonDefenseTimout | anomaly transition webrtc call but Not a webrtcgateway case"),actionLevel=2;else mediaPillarCallContext.callState!==MPCallState.CallActive&&mediaPillarCallContext.callState!==MPCallState.CallActiveNoWebMedia&&mediaPillarCallContext.callState!==MPCallState.RemoteControled&&mediaPillarCallContext.callState!==MPCallState.CallOffer&&mediaPillarCallContext.callState!==MPCallState.CallOnGoing&&(this.logger.log("[WebrtcGatewayService] automatonDefenseTimout | anomaly timout in unexpected state"),actionLevel=2);switch(0!==actionLevel&&this.logger.warn("[WebrtcGatewayService] automatonDefenseTimout | actionlevel "+actionLevel),actionLevel){case 0:break;case 1:this.TO_PILLAR_POLLING=3e5,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING);break;case 2:this.TO_PILLAR_POLLING=3e5,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.releaseMediaPillarCallContext(mediaPillarCallContext);break;case 3:this.TO_PILLAR_POLLING=3e5,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.mediaPillarReleaseWebrtcCall(mediaPillarCallContext),this.releaseMediaPillarCallContext(mediaPillarCallContext);break;default:this.TO_PILLAR_POLLING=3e5,this.mediaPillarAlive||this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.mediaPillarCallTerminator(mediaPillarCallContext)}mediaPillarCallContext.callState!==MPCallState.Free&&(mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(null,mediaPillarCallContext)},this.TO_transition))}onTelCallIncomming(call){if(this.mediaPillarCallContext.telephonyCallRefs.length>1&&this.mediaPillarCallContext.callState!==MPCallState.Free&&this.mediaPillarCallContext.callState!==MPCallState.WaitTelephony&&this.mediaPillarCallContext.callState!==MPCallState.WaitWebrtc)return this.logger.info("[WebrtcGatewayService] onTelCallIncomming | nth calls BUT trig the GUI & link the call"),call.setMediaPillarCall(this.getMediaPillarCallContext()),this.logger.info("[WebrtcGatewayService] onTelCallIncomming | ON_WEBRTC_GW_CALL_UPDATED_EVENT for call = "+call.id),this.mediaPillarCallContext.updateContactFlag=!0,void this.eventService.publish("ON_WEBRTC_GW_CALL_UPDATED_EVENT",call);switch(this.logger.info("[WebrtcGatewayService] onTelCallIncomming | mediapilaryse as necessary for call "+call.id+" date "+moment().format("HH:mm:ss:SSS")),this.mediaPillaryseTheCall(call,null)){case"Ok":if(this.stopWaitTelephonyTimeOut(),this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition),!this.isMediaPillarOutgoingCall()&&this.mediaPillarCallContext.callState===MPCallState.CallOffer&&this.mediaPillarCallContext.webrtcCallRef||call.getMixtWebTelSingleStepTrans()){const isPopupWithWebrtcCall=this.mediaPillarCallContext.isIncomingCallPopupWithWebRtcCall;if(isPopupWithWebrtcCall&&(this.logger.info("[WebrtcGatewayService] onTelCallIncomming | Incoming tel phone while Popup displayed with Webrtc Call should happen in rare cases when csta event is very slow: use phone call info anyway for call "+call.id),this.mediaPillarCallContext.webrtcCallRef.contact!==call.contact&&(this.mediaPillarCallContext.webrtcCallRef.contact=call.contact,this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:this.mediaPillarCallContext.webrtcCallRef}))),call.autoOffHookResource)if(call.autoOffHookResource===this.xmppService.getResourceFromJid(this.contactService.userContact.fullJid))if(this.logger.info("[WebrtcGatewayService] onTelCallIncomming | blindPickup in progress : let's answer to call "+call.id),"singleStepTransfer"===call.getInitCauseSipWiseData()){this.logger.info("[WebrtcGatewayService] onTelCallIncomming | case of singleStepTransfer, release active webrtc call ");const activeCall=this.webrtcP2PService.getWebrtcAudioCall();if(activeCall&&this.webrtcP2PService.releaseCall(activeCall),this.mediaPillarCallContext.callState===MPCallState.WaitWebrtc&&!this.mediaPillarCallContext.webrtcCallRef&&this.telephonyService.isSipWise()){this.logger.info("[WebrtcGatewayService] onTelCallIncomming | case of singleStepTransfer, retrieve incoming MP webrtc media call ");const isAWebrtcCallOffer=this.specialCaseNotComputerModeButMPCall(call);isAWebrtcCallOffer?(this.logger.debug("[WebrtcGatewayService] onTelCallIncomming | blindPickup in progress for telcall:"+call.id+" and webCall: "+isAWebrtcCallOffer.id),this.answerCall(call)):this.logger.debug("[WebrtcGatewayService] onTelCallIncomming | blindPickup in progress for telcall:"+call.id+" but not yet webrtcCall")}else this.answerCall(call)}else this.answerCall(call);else this.logger.debug("[WebrtcGatewayService] onTelCallIncomming | blindPickup in progress on another client of our user: do nothing for call "+call.id);else for(let i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)(!isPopupWithWebrtcCall&&(this.mediaPillarCallContext.telephonyCallRefs[i].status===call_model_1.Call.Status.RINGING_INCOMMING||this.mediaPillarCallContext.telephonyCallRefs[i].status===call_model_1.Call.Status.QUEUED_INCOMMING)||isPopupWithWebrtcCall&&this.mediaPillarCallContext.telephonyCallRefs[i].status===call_model_1.Call.Status.QUEUED_INCOMMING)&&(this.logger.info("[WebrtcGatewayService] onTelCallIncomming | ON_WEBRTC_GW_CALL_UPDATED_EVENT for call = "+call.id),this.eventService.publish("ON_WEBRTC_GW_CALL_UPDATED_EVENT",this.mediaPillarCallContext.telephonyCallRefs[i]))}break;case"Update":this.stopCallStateTimeOut(),this.isMediaPillarOutgoingCall()||!this.mediaPillarCallContext.webrtcCallRef||call.status!==call_model_1.Call.Status.RINGING_INCOMMING&&call.status!==call_model_1.Call.Status.QUEUED_INCOMMING?this.logger.info("[WebrtcGatewayService] onTelCallIncomming | ignore update call"):(this.eventService.publish("ON_WEBRTC_GW_CALL_UPDATED_EVENT",call),this.logger.info("[WebrtcGatewayService] onTelCallIncomming | update call"));break;case"Ignore":this.logger.info("[WebrtcGatewayService] onTelCallIncomming | ignore evt");break;default:this.logger.error("[WebrtcGatewayService] onTelCallIncomming | media Pillar call anomaly "+status)}}onTelCallDialling(call){if(this.mediaPillarCallContext.isOutgoingCall3PCC=call.isOwner||call.isMPAudioOwner,this.logger.info("[WebrtcGatewayService] onTelCallDialling | isOwner "+call.isOwner+" isMPAudioOwner "+call.isMPAudioOwner+" => outgoing3PCC "+this.mediaPillarCallContext.isOutgoingCall3PCC),this.mediaPillarCallContext.isOutgoingCall3PCC)if(this.mediaPillarCallContext.callState===MPCallState.Free||this.mediaPillarCallContext.callState===MPCallState.WaitTelephony)switch(this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition),this.mediaPillaryseTheCall(call,null)){case"Ok":this.mediaPillarCallContext.webrtcCallRef&&this.mediaPillarCallContext.callState===MPCallState.CallOffer&&(this.webrtcP2PService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.logger.info("[WebrtcGatewayService] onTelCallDialling | outgoing3PCC then send webrtc proceed")),this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition);break;case"Ignore":case"Update":this.logger.info("[WebrtcGatewayService] onTelCallDialling | ignore evt");break;default:this.logger.error("[WebrtcGatewayService] onTelCallDialling | media Pillar call anomaly "+status),this.mediaPillarCallTerminator()}else this.mediaPillarCallContext.callState!==MPCallState.CallOffer&&this.mediaPillarCallContext.callState!==MPCallState.CallOnGoing||this.logger.warn("[WebrtcGatewayService] onTelCallDialling | media Pillar call anomaly, on state : "+this.mediaPillarCallContext.callState),this.logger.info("[WebrtcGatewayService] onTelCallDialling | ignored , on state : "+this.mediaPillarCallContext.callState);else this.stopCallStateTimeOut(),this.logger.info("[WebrtcGatewayService] onTelCallDialling but not call owner (=>other client) | ignore evt on state : "+this.mediaPillarCallContext.callState)}onTelCallOutgoing(call){this.isMediaPillarOutgoingCall()||this.mediaPillarCallContext.callState===MPCallState.CallActive?this.stopCallStateTimeOut():(this.logger.warn("[WebrtcGatewayService] onTelCallOutgoing | media Pillar, not a 1st 3PCC outgoing call then ignore & release MP CallContext"),this.releaseMediaPillarCallContext())}async onTelCallActive(call){switch(this.mediaPillarCallContext.callState){case MPCallState.CallOnGoing:this.stopCallStateTimeOut(),call.setMediaPillarCall(this.getMediaPillarCallContext()),this.mediaPillarCallContext.callState=MPCallState.CallActive;break;case MPCallState.TelCallReleasing:if(this.logger.warn("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state = "+this.mediaPillarCallContext.callState),this.logger.info("[WebrtcGatewayService] onTelCallActive | media Pillar , RE-ACTIVATION"),this.stopCallStateTimeOut(),call.setMediaPillarCall(this.getMediaPillarCallContext()),this.telephonyService.oxoMultiCallMode()){this.logger.info("[WebrtcGatewayService] onTelCallActive -- OXO specific mng for call when re-activation : "+call.id);const mediaPillarCall=call.getMediaPillarCall();mediaPillarCall&&mediaPillarCall.webrtcCallRef&&mediaPillarCall.webrtcCallRef.status===call_model_1.Call.Status.RINGING_INCOMMING&&this.mediaPillarCallContext.callOwnerForOxoMultiClientFlag?(call.noIncomingPopup=!0,await this.actionOnActiveCallIfNecessary(call),mediaPillarCall.webrtcCallRef&&mediaPillarCall.webrtcCallRef.status===call_model_1.Call.Status.RINGING_INCOMMING?(this.logger.info("[WebrtcGatewayService] onTelCallActive -- OXO specific mng | send webrtc proceed for call : "+call.id),mediaPillarCall.callState=MPCallState.CallOnGoing,this.webrtcP2PService.answerCall(mediaPillarCall.webrtcCallRef,"audio"),call.isMPAudioOwner=!0):this.logger.info("[WebrtcGatewayService] onTelCallActive | oxo case when re-activation ano webrtc state")):this.logger.info("[WebrtcGatewayService] onTelCallActive | oxo case when re-activation not possible to answer webrtc part"),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition)}else this.mediaPillarCallContext.callState=MPCallState.CallActive;break;case MPCallState.CallActive:this.logger.info("[WebrtcGatewayService] onTelCallActive | media Pillar , ignore tel active on state CallActive ");break;case MPCallState.WebCallReleasing:this.logger.info("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state WebCallReleasing then releaseMediaPillarCallContext"),this.releaseMediaPillarCallContext();break;case MPCallState.Free:this.logger.info("[WebrtcGatewayService] onTelCallActive | media Pillar recv tel active on state = 1 ; probably call taken on deskphone ; ignore active & release call context "),this.releaseMediaPillarCallContext();break;case MPCallState.CallOffer:if(this.telephonyService.oxoMultiCallMode()){this.logger.info("[WebrtcGatewayService] onTelCallActive -- OXO specific mng for call : "+call.id),this.stopCallStateTimeOut();const mediaPillarCall=call.getMediaPillarCall();mediaPillarCall&&mediaPillarCall.webrtcCallRef&&mediaPillarCall.webrtcCallRef.status===call_model_1.Call.Status.RINGING_INCOMMING&&this.mediaPillarCallContext.callOwnerForOxoMultiClientFlag?(call.noIncomingPopup=!0,await this.actionOnActiveCallIfNecessary(call),this.logger.info("[WebrtcGatewayService] onTelCallActive -- OXO specific mng | send webrtc proceed for call : "+call.id),mediaPillarCall.callState=MPCallState.CallOnGoing,this.webrtcP2PService.answerCall(mediaPillarCall.webrtcCallRef,"audio"),call.isMPAudioOwner=!0):this.logger.info("[WebrtcGatewayService] onTelCallActive | oxo case not possible to answer webrtc part"),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition);break}default:this.logger.info("[WebrtcGatewayService] onTelCallActive | Anomaly media Pillar recv tel active on state = "+this.mediaPillarCallContext.callState)}}onTelCallReleasing(call){this.telephonyService.getCalls().length;if(this.mediaPillarCallContext.telephonyCallRefs.length>1)return call.setMediaPillarCall(null),this.removeTelCallRefs(call),void this.logger.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- postpone mediaPillarCallContext release ;  remaining calls = "+this.mediaPillarCallContext.telephonyCallRefs.length);this.isMediaPillarReleasableCall()?(call.setMediaPillarCall(null),this.removeTelCallRefs(call),this.mediaPillarCallContext.webrtcCallRef&&this.mediaPillarCallContext.callState!==MPCallState.WebCallReleasing&&this.mediaPillarCallContext.callState!==MPCallState.RemoteControled?this.mediaPillarCallContext.callState!==MPCallState.TelCallReleasing?(this.mediaPillarCallContext.callState=MPCallState.TelCallReleasing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition),this.logger.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- wait web release: state = "+this.mediaPillarCallContext.callState)):this.logger.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- ignore telrelease on state = "+this.mediaPillarCallContext.callState):this.mediaPillarCallContext.callState!==MPCallState.Free&&(this.releaseMediaPillarCallContext(),this.logger.info("[WebrtcGatewayService] onTelCallReleasing -- "+call.id+" -- release MP context"))):(this.logger.warn("[WebrtcGatewayService] onTelCallReleasing | media Pillar call release anomaly on state = "+this.mediaPillarCallContext.callState),this.mediaPillarCallTerminator())}onWebrtcCallIncomming(call){if(this.mediaPillarCallContext.webrtcCallRef)this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming -- "+call.id+" --- ignored other incomming");else{if(this.mediaPillarCallContext.callState===MPCallState.WebCallReleasing&&0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.telephonyCallRefs[0].status!==call_model_1.Call.Status.UNKNOWN){if(this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming -- "+call.id+" --- re propose during ongoing tel call"),this.mediaPillarCallContext.telephonyCallRefs[0].status!==call_model_1.Call.Status.QUEUED_INCOMMING&&this.mediaPillarCallContext.telephonyCallRefs[0].status!==call_model_1.Call.Status.RINGING_INCOMMING)return this.mediaPillarCallContext.webrtcCallRef=call,this.mediaPillarCallContext.webrtcCallRef.setMediaPillarCall(this.getMediaPillarCallContext()),this.webrtcP2PService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),void(this.mediaPillarCallContext.callState=MPCallState.CallOnGoing);this.mediaPillarCallContext.callState=MPCallState.WaitWebrtc,this.mediaPillarCallContext.telephonyCallRefs[0].setMediaPillarCall(this.getMediaPillarCallContext())}switch(this.mediaPillarConnection.mediaPillarJidArray.includes(call.fullJid)&&(this.mediaPillarCallContext.onGoingCallMediaPillarJid=call.fullJid),this.mediaPillaryseTheCall(null,call)){case"Ok":if(this.stopCallStateTimeOut(),!this.isMediaPillarOutgoingCall()&&this.mediaPillarCallContext.callState===MPCallState.WaitTelephony&&this.telephonyService.isOxe||(this.logger.debug("[WebrtcGatewayService] onWebrtcCallIncomming: arm callState_TO"),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1)),this.isMediaPillarOutgoingCall())this.webrtcP2PService.answerCall(this.mediaPillarCallContext.webrtcCallRef,"audio"),this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming | outgoing3PCC then send webrtc proceed");else if(this.mediaPillarCallContext.callState===MPCallState.WaitTelephony&&this.telephonyService.isOxe)this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming | incoming webrtc WaitTelephony on Oxe : arm waitTelephony_TO "),this.stopWaitTelephonyTimeOut(),this.mediaPillarCallContext.waitTelephony_TO=setTimeout(()=>{this.waitTelephonyTimeout(call,this.mediaPillarCallContext)},this.TO_waitTelephony,1);else if(this.mediaPillarCallContext.callState===MPCallState.CallOffer){this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming | incoming webrtc + telephony"),this.stopCallStateTimeOut();for(let i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++){const telephonyCall=this.mediaPillarCallContext.telephonyCallRefs[i];telephonyCall.status!==call_model_1.Call.Status.RINGING_INCOMMING&&telephonyCall.status!==call_model_1.Call.Status.QUEUED_INCOMMING||(telephonyCall.autoOffHookResource?telephonyCall.autoOffHookResource===this.xmppService.getResourceFromJid(this.contactService.userContact.fullJid)?(this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming | blindPickup in progress : let's answer to call "+telephonyCall.id),this.answerCall(telephonyCall)):this.logger.debug("[WebrtcGatewayService] onWebrtcCallIncomming | blindPickup in progress on another client of our user: do nothing for call "+telephonyCall.id):(this.logger.info("[WebrtcGatewayService] onWebrtcCallIncomming | ON_CONVERSATION_CALL_UPDATED_EVENT for call = "+this.mediaPillarCallContext.telephonyCallRefs[i].id),this.eventService.publish("ON_WEBRTC_GW_CALL_UPDATED_EVENT",telephonyCall)))}}break;case"Ignore":break;default:this.logger.error("[WebrtcGatewayService] onWebrtcCallIncomming | media Pillar call anomaly "+status)}}}onWebrtcCallConnecting(call){return this.mediaPillarCallContext.callState===MPCallState.CallActive?(this.logger.info("[WebrtcGatewayService] onWebrtcCallConnecting -- media Pillar call reconnecting attempts for call : "+call),this.mediaPillarCallContext.callState=MPCallState.CallActiveNoWebMedia,this.stopCallStateTimeOut(),void(this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.timeOutCallActiveNoWebMedia(this.mediaPillarCallContext)},this.TO_NoWebMedia,1))):this.mediaPillarCallContext.callState===MPCallState.TelCallReleasing?(this.logger.info("[WebrtcGatewayService] onWebrtcCallConnecting -- media Pillar webrtc call reconnecting while TelCallReleasing"),this.mediaPillarCallContext.callState=MPCallState.CallActiveNoWebMedia,this.stopCallStateTimeOut(),void(this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.timeOutCallActiveNoWebMedia(this.mediaPillarCallContext)},this.TO_NoWebMediaNotel,1))):void 0}onWebrtcCallActive(call){this.mediaPillarCallContext.callState===MPCallState.CallActiveNoWebMedia?(this.logger.info("[WebrtcGatewayService] onWebrtcCallActive -- media Pillar call reconnected"),this.mediaPillarCallContext.callState=MPCallState.CallActive,this.stopCallStateTimeOut()):this.telephonyService.oxoMultiCallMode()&&this.mediaPillarCallContext.callState===MPCallState.CallOnGoing&&(this.mediaPillarCallContext.telephonyCallRefs[0].status===call_model_1.Call.Status.ACTIVE?(this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState=MPCallState.CallActive,this.logger.info("[WebrtcGatewayService] onWebrtcCallActive -- OXO specific mng | MP call becomes fully Active ")):this.logger.info("[WebrtcGatewayService] onWebrtcCallActive -- OXO specific mng call State Anomaly"))}onWebrtcCallAnswering(call){this.mediaPillarCallContext.callState=MPCallState.CallOnGoing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1)}onWebrtcCallReleasing(call){if(this.isMediaPillarReleasableCall())if(call.setMediaPillarCall(null),this.mediaPillarCallContext.webrtcCallRef=null,0!==this.mediaPillarCallContext.telephonyCallRefs.length&&this.mediaPillarCallContext.callState!==MPCallState.TelCallReleasing&&this.mediaPillarCallContext.callState!==MPCallState.RemoteControled)if(this.mediaPillarCallContext.callState!==MPCallState.WebCallReleasing){this.mediaPillarCallContext.callState=MPCallState.WebCallReleasing,this.stopCallStateTimeOut(),this.mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call)},this.TO_transition,1),this.releasePbxCallIfPbxConnectionDown();for(let i=0;i<this.mediaPillarCallContext.telephonyCallRefs.length;i++)this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.RINGING_INCOMMING&&this.mediaPillarCallContext.telephonyCallRefs[i].status!==call_model_1.Call.Status.QUEUED_INCOMMING||(this.logger.info("[WebrtcGatewayService] onWebrtcCallReleasing | ON_CONVERSATION_CALL_UPDATED_EVENT for call = "+this.mediaPillarCallContext.telephonyCallRefs[i].id),this.eventService.publish("ON_WEBRTC_GW_CALL_UPDATED_EVENT",this.mediaPillarCallContext.telephonyCallRefs[i]));this.logger.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- wait tel release: state = "+this.mediaPillarCallContext.callState)}else this.logger.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- ignore webrelease on state = "+this.mediaPillarCallContext.callState);else this.releaseMediaPillarCallContext(),this.logger.info("[WebrtcGatewayService] onWebrtcCallReleasing -- "+call.id+" -- release MP context");else this.logger.warn("[WebrtcGatewayService] onWebrtcCallReleasing | media Pillar call release anomaly on state = "+this.mediaPillarCallContext.callState),this.mediaPillarCallTerminator()}async waitTelephonyTimeout(call,mediaPillarCallContext){if(mediaPillarCallContext.callState===MPCallState.WaitTelephony){this.logger.info("[WebrtcGatewayService] waitTelephonyTimeout date "+moment().format("HH:mm:ss:SSS")+" -- "+call.id+" -- state = "+mediaPillarCallContext.callState+" : perform snpashot on secondary device to check remote extension's csta state");try{const result=await this.telephonyService.snapshotDevice(!0),connections=result?result.connections:null;mediaPillarCallContext.callState!==MPCallState.WaitTelephony||connections&&0!==connections.length?(this.logger.info("[WebrtcGatewayService] waitTelephonyTimeout date "+moment().format("HH:mm:ss:SSS")+" -- "+call.id+" -- state = "+mediaPillarCallContext.callState+" => no more waiting for phone call or existing csta call: don't display any incoming call popup"),this.stopCallStateTimeOut(mediaPillarCallContext),mediaPillarCallContext.callState_TO=setTimeout(()=>{this.automatonDefenseTimout(call,mediaPillarCallContext)},this.TO_transition,1)):(this.logger.info("[WebrtcGatewayService] waitTelephonyTimeout date "+moment().format("HH:mm:ss:SSS")+" -- "+call.id+" -- state = "+mediaPillarCallContext.callState+" => still waiting for phone call and no csta call: send event to open incoming call popup with webrtc call"),mediaPillarCallContext.isIncomingCallPopupWithWebRtcCall=!0,this.eventService.publish("ON_CONVERSATION_CALL_UPDATED_EVENT",{conversation:null,call:call}))}catch(error){this.logger.error("[WebrtcGatewayService] waitTelephonyTimeout date "+moment().format("HH:mm:ss:SSS")+" -- "+call.id+" -- state = "+mediaPillarCallContext.callState+" => snpashotdevice error "+error)}}else this.logger.info("[WebrtcGatewayService] waitTelephonyTimeout date "+moment().format("HH:mm:ss:SSS")+" -- "+call.id+" -- state = "+mediaPillarCallContext.callState+" => IGNORED");mediaPillarCallContext.waitTelephony_TO=null}releasePbxCallIfPbxConnectionDown(){const activePbxCall=this.getActivePbxCall();activePbxCall&&activePbxCall.pbxConnectionDown&&(this.logger.info("[WebrtcGatewayService] releasePbxCallIfPbxConnectionDown | release call"+activePbxCall),this.telephonyService.releaseCall(activePbxCall),activePbxCall.mediaPillarCall=null)}mediaPillarMakeCall1PCC(phoneNumber,contact){this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall1PCC");const mediaPillarJid=this.getDefaultMediaPillarJid();if(!this.mediaPillarConfigured||!this.mediaPillarAlive)return this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall1PCC ANOMALY webrtcgateway not available"),null;if(this.webrtcP2PService.makingCall=!0,""!==mediaPillarJid){const id="web_"+crypto.randomUUID();if(!contact||null===contact){const call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,this.mediaPillarContact);return call.fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid),call}const call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,contact);return call.fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid),call}return this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY no mediaPillarJid"),null}mediaPillarReleaseCall1PCC(call){if(this.logger.info("[WebrtcGatewayService] mediaPillarReleaseCall1PCC"),!this.mediaPillarConfigured)return void this.logger.info("[WebrtcGatewayService] mediaPillarReleaseCall1PCC ANOMALY webrtcgateway not available");const foundCall=this.webrtcP2PService.calls[call.id];foundCall&&foundCall.type===call_model_1.Call.Type.WEBRTC?this.webrtcP2PService.rejectCall(foundCall):this.logger.info("[WebrtcGatewayService] mediaPillarReleaseCall1PCC ANOMALY invalid call")}mediaPillarMakeCall(phoneNumber,contact){this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall");const mediaPillarJid=this.getDefaultMediaPillarJid();if(phoneNumber.length>6&&contact&&(phoneNumber=contact.phonePbx),this.webrtcP2PService.makingCall=!0,""!==mediaPillarJid){const id="web_"+crypto.randomUUID();if(contact&&null!==contact){const call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,contact);call.fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid)}else{const call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,this.mediaPillarContact);call.fullJid=mediaPillarJid,this.mediaPillarStartCall(call,phoneNumber,mediaPillarJid)}}else this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY no mediaPillarJid")}async mediaPillarStartCall(call,phoneNumber,mediaPillarJid){this.logger.info("[WebrtcGatewayService] mediaPillarStartCall for phone number "+phoneNumber);try{await this.initiateMediaPillarCall(call);try{await this.registerOneMediaPillar(mediaPillarJid),this.logger.info("[WebrtcGatewayService ] mediaPillarStartCall for number "+phoneNumber),this.webrtcP2PService.makeJingleCall(call,mediaPillarJid,phoneNumber)}catch(error){this.logger.info("[WebrtcGatewayService] mediaPillarStartCall ANOMALY registerOneMediaPillar then abort call"),this.abortCall(call)}}catch(error){this.logger.info("[WebrtcGatewayService] mediaPillarMakeCall ANOMALY initiateMediaPillarCall then abort call"),this.abortCall(call)}}abortCall(call){this.webrtcP2PService.makingCall=!1,call&&this.webrtcP2PService.removeCallObject(call),this.webrtcP2PService.resetToSafeState()}async initiateMediaPillarCall(call){const mediaToGet=["audio"];try{this.logger.info("[WebrtcGatewayService] initiateMediaPillarCall");const stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet);this.webrtcP2PService.calls[call.id]=call,call.isInitiator=!0,this.webrtcP2PService.pushInLocalStreams(stream,call.id),call.localMedia=call.localMedia|call_model_1.Call.Media.AUDIO,this.contactService.setBusyState("dnd",this.webrtcP2PService.calculatePresenceMessage(call)),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}catch(error){this.logger.info("[WebrtcGatewayService]   | initate call failure : "+JSON.stringify({error:error.message})),mediaToGet.indexOf("sharing")>=0||-1===error.toString().indexOf("getUserMedia")||this.webrtcP2PService.openErrorPopup()}}async registerOneMediaPillar(MPJid){if(!MPJid){this.logger.debug("[WebrtcGatewayService] registerOneMediaPillar -- missing MPJid --");throw new Error("registerOneMediaPillar -- missing MPJid --")}if(!this.mediaPillarConnection.mediaPillarJidArray.includes(MPJid)){this.logger.debug("[WebrtcGatewayService] registerOneMediaPillar -- unknow MPJid --"+MPJid);throw new Error("registerOneMediaPillar -- unknow MPJid --"+MPJid)}if(!this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarConfigured){this.logger.debug("[WebrtcGatewayService] registerOneMediaPillar -- MPJid not configured --"+MPJid),this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarAlive=!1;throw new Error("registerOneMediaPillar -- MPJid not configured --"+MPJid)}const xmppIq=$iq({from:this.myContact.fullJid,to:MPJid,type:"set"}).c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("register").c("jidIm").t(this.contactService.userContact.jid).up().c("jidTel").t(this.contactService.userContact.jidtel).up().c("number").t(this.mediaPillarConnection.rainbowPhoneNumber).up().c("displayName").t(this.myContact.displayName).up().c("secret").t(this.mediaPillarConnection.rainbowPhoneNumber).up();try{await this.xmppService.sendIQ(xmppIq),this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarAlive=!0}catch(error){throw this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarAlive=!1,this.logger.info("[WebrtcGatewayService] registerOneMediaPillar -- register failure -- for MPJid = "+MPJid+" // error : "+error.message),error}}async registerMediaPillarPool(){const registerPromises=[];this.mediaPillarConnection.mediaPillarJidArray.forEach(mediaPillarJid=>{registerPromises.push((async()=>{try{await this.registerOneMediaPillar(mediaPillarJid)}catch(error){}})())});try{await Promise.all(registerPromises)}finally{this.mediaPillarAlive=this.isMediaPillarPoolAlive(null)}}async getMediaPillarData(){if(!this.telephonyService.isSipWise())try{const url=this.portalURL+"/data",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;if(this.logger.log("[WebrtcGatewayService] getMediaPillarData success"),data){const prefix=data.prefix,rainbowPhoneNumber=data.rainbowPhoneNumber;prefix&&rainbowPhoneNumber&&(this.mediaPillarConnection.rainbowPhoneNumber=rainbowPhoneNumber,this.mediaPillarConnection.remoteExtension=prefix+rainbowPhoneNumber);let MediaPillarJidArray=[];if(data.jid_im&&Array.isArray(data.jid_im))MediaPillarJidArray=data.jid_im,MediaPillarJidArray=MediaPillarJidArray.map(eltJid=>(-1===eltJid.indexOf("/")&&(eltJid+="/mediapillar"),eltJid));else{let jid=data.jid_im;jid&&-1===jid.indexOf("/")&&(jid+="/mediapillar"),MediaPillarJidArray[0]=jid}return MediaPillarJidArray}throw this.logger.error("[WebrtcGatewayService] getMediaPillarData success -- missing data"),new Error("[WebrtcGatewayService] getMediaPillarData -- missing data in response")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getMediaPillarData");throw this.logger.error("[WebrtcGatewayService] "+errorInfo.message),errorInfo.error}try{const url=this.telephonyService.telephonyServiceSipWise.getPortalURL()+"devices",headers=this.authService.getRequestHeader();this.logger.info("[WebrtcGatewayService] getMediaPillarData sipwise device  GET "+url);const response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=await response.json();this.logger.log("[WebrtcGatewayService] getMediaPillarData sipwise success/ status : "+response.statusText);const MediaPillarJidArray=[];if(data){if(data.forEach(device=>{if("webrtc"===device.type){this.mediaPillarConnection.rainbowPhoneNumber=device.deviceId,this.mediaPillarConnection.remoteExtension=device.deviceId;let jid=device.jid_wrg;jid&&-1===jid.indexOf("/")&&(jid+="/mediapillar"),MediaPillarJidArray.push(jid)}}),""!==MediaPillarJidArray[0])return MediaPillarJidArray;throw this.logger.error("[WebrtcGatewayService] getMediaPillarData sipwise success but missing jid_wrg"),new Error("[WebrtcGatewayService] getMediaPillarData sipwise -- missing jid_wrg in response")}throw this.logger.error("[WebrtcGatewayService] getMediaPillarData sipwise success but missing data"),new Error("[WebrtcGatewayService] getMediaPillarData sipwise -- missing data in response")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getMediaPillarData");throw this.logger.error("[WebrtcGatewayService] getMediaPillarData sipwise error --  "+errorInfo.message),errorInfo.error}}mediaPillarKeepAlivePolling(cmd,timer){if(this.started)switch(cmd){case"START":this.mediaPillarConnection&&this.mediaPillarConnection.keepAlive_TO&&(clearTimeout(this.mediaPillarConnection.keepAlive_TO),this.mediaPillarConnection.keepAlive_TO=null),this.mediaPillarConnection.keepAlive_TO=setTimeout(()=>{this.mediaPillarKeepAlive()},timer,1);break;case"STOP":this.mediaPillarPollingSelected=!1,this.mediaPillarCallContext&&this.mediaPillarConnection.keepAlive_TO&&clearTimeout(this.mediaPillarConnection.keepAlive_TO),this.mediaPillarConnection.keepAlive_TO=null;break;default:this.logger.error("[WebrtcGatewayService] mediaPillarKeepAlivePolling cmd error : "+cmd)}}mediaPillarUserSelectAndPolling(selected){this.started&&(this.logger.log("[WebrtcGatewayService] mediaPillarUserSelectAndPolling : "+selected),selected?this.mediaPillarPollingSelected?this.logger.log("[WebrtcGatewayService] mediaPillarUserSelectAndPolling polling already started"):(this.mediaPillarPollingSelected=!0,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.mediaPillarKeepAlive()):this.mediaPillarAlive&&(this.mediaPillarKeepAlivePolling("STOP",0),this.mediaPillarPollingSelected=!1))}async mediaPillarKeepAlive(){if(this.mediaPillarKeepAliveSuspend)this.logger.info("[WebrtcGatewayService] KeepAlive suspended");else{const formerMediaPillarAliveState=this.mediaPillarAlive;try{await this.registerMediaPillarPool()}finally{this.mediaPillarAlive!==formerMediaPillarAliveState&&(this.mediaPillarAlive?this.logger.info("[WebrtcGatewayService] mediaPillarKeepAlive webrtcgateway is UP"):this.logger.info("[WebrtcGatewayService] mediaPillarKeepAlive webrtcgateway is DOWN"),this.eventService.publish("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive),this.logger.info("[WebrtcGatewayService] mediaPillarKeepAlive ON_WEBRTCGATEWAY_STATE_CHG"),this.keepAliveIterationCpt=0),this.mediaPillarAlive?(this.TO_PILLAR_POLLING<9e5?this.TO_PILLAR_POLLING+=1800:this.TO_PILLAR_POLLING=9e5,this.keepAliveIterationCpt=0):(++this.keepAliveIterationCpt<=2?this.TO_PILLAR_POLLING=15e3:this.TO_PILLAR_POLLING=3e5,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING)),this.isMediaPillarUserSelected()&&this.mediaPillarAlive&&this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING)}}}forceMPpooling(){this.started&&(this.logger.log("[WebrtcGatewayService] forceMPpolling "),this.TO_PILLAR_POLLING=3e5,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.eventService.publish("ON_WEBRTCGATEWAY_STATE_CHG",this.mediaPillarAlive))}isMediaPillarPoolConfigured(MPJid){let result=!1;if(MPJid&&this.mediaPillarConnection.mediaPillarStatesPool[MPJid])result=this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarConfigured;else{this.mediaPillarConnection.mediaPillarJidArray.find(mediaPillarJid=>this.mediaPillarConnection.mediaPillarStatesPool[mediaPillarJid]&&!0===this.mediaPillarConnection.mediaPillarStatesPool[mediaPillarJid].mediaPillarConfigured)&&(result=!0)}return result}isMediaPillarPoolAlive(MPJid){let result=!1;return result=MPJid&&this.mediaPillarConnection.mediaPillarStatesPool[MPJid]?this.mediaPillarConnection.mediaPillarStatesPool[MPJid].mediaPillarAlive:this.mediaPillarConnection.mediaPillarJidArray.some(mediaPillarJid=>this.mediaPillarConnection.mediaPillarStatesPool[mediaPillarJid]&&!0===this.mediaPillarConnection.mediaPillarStatesPool[mediaPillarJid].mediaPillarAlive),result}getAllMediaPillarJid(){return this.mediaPillarConnection.mediaPillarJidArray}getDefaultMediaPillarJid(){let MPDefaultJid=this.mediaPillarConnection.mediaPillarJidArray[0];return MPDefaultJid||(MPDefaultJid=""),MPDefaultJid}getOnGoingMediaPillarJid(){let onGoingMPJid=this.getDefaultMediaPillarJid();return this.mediaPillarCallContext&&this.mediaPillarCallContext.onGoingCallMediaPillarJid&&""!==this.mediaPillarCallContext.onGoingCallMediaPillarJid&&(onGoingMPJid=this.mediaPillarCallContext.onGoingCallMediaPillarJid),onGoingMPJid}getMyMediaPillarRemoteExtension(){if(!this.telephonyService.isSipWise())return this.mediaPillarConnection.remoteExtension;const webrtc=this.telephonyService.telephonyServiceSipWise.getDeviceIdWithType("webrtc");return webrtc||""}shouldUseMediaPillar(){return!1}isMediaPillarConfigured(){return this.mediaPillarConfigured&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_WEBRTC_PSTN_CALLING)}isMediaPillarAvailable(){let available=this.isMediaPillarConfigured();return available=available&&this.mediaPillarAlive,available}isMediaPillarUserSelected(){let selected;if(this.telephonyService.isSipWise()){const current=this.telephonyService.telephonyServiceSipWise.getCurrentDevice();selected=current&&"webrtc"===current.type}else selected=!this.telephonyService.nomadicObject.makeCallInitiatorIsMain&&this.telephonyService.getNomadicDestination()===this.getMyMediaPillarRemoteExtension();return selected}isMediaPillarJid(fromJid){let indexMPinJid=-1;return!!fromJid&&(indexMPinJid=fromJid.search("mp_"),0===indexMPinJid)}isMediaPillarCallCase(){return this.isMediaPillarAvailable()&&this.isMediaPillarUserSelected()}isMediaPillarCallSituation(call=null){let MP_situation=this.isMediaPillarCallCase();if(call)if(call.type===call_model_1.Call.Type.WEBRTC)MP_situation=MP_situation&&this.isMediaPillarJid(call.fullJid);else if(this.telephonyService.getCalls().length<=1&&this.mediaPillarCallContext.telephonyCallRefs.length<=1)switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.QUEUED_INCOMMING:case call_model_1.Call.Status.DIALING:case call_model_1.Call.Status.RELEASING:break;default:MP_situation=!!call.mediaPillarCall&&(MP_situation&&this.isInTelCallRefs(call))}else switch(call.status){case call_model_1.Call.Status.RINGING_INCOMMING:case call_model_1.Call.Status.RINGING_OUTGOING:case call_model_1.Call.Status.QUEUED_INCOMMING:case call_model_1.Call.Status.DIALING:case call_model_1.Call.Status.RELEASING:break;default:call.mediaPillarCall?(MP_situation=MP_situation&&call.mediaPillarCall.telephonyCallRefs.length>=1,MP_situation=MP_situation&&this.isInTelCallRefs(call)):MP_situation=!1}return MP_situation}mediaPillaryseTheCall(telephonyCall,webrtcCall){if(this.mediaPillarCallContext.callState!==MPCallState.Free){if(telephonyCall&&this.telephonyService.oxoMultiCallMode()&&this.mediaPillarCallContext.callState===MPCallState.TelCallReleasing&&telephonyCall.status===call_model_1.Call.Status.RINGING_INCOMMING)return this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall | special oxoMulticall situation with re nego of csta & web ref"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),this.mediaPillarCallContext.callState=MPCallState.CallOnGoing,"Update";if(telephonyCall&&this.mediaPillarCallContext.updateContactFlag)return this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall | only Update"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),"Update";if(telephonyCall&&this.mediaPillarCallContext.callState===MPCallState.TelCallReleasing&&telephonyCall.status===call_model_1.Call.Status.RINGING_INCOMMING)return this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall |  transfer managed as Update"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),this.mediaPillarCallContext.callState=MPCallState.CallOffer,"Update";if(webrtcCall&&this.mediaPillarCallContext.callState!==MPCallState.WaitWebrtc)return this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall | only Ignore"),"Ignore"}let status="";if(!telephonyCall&&!webrtcCall)return"NoCallRef";if(telephonyCall&&webrtcCall)return"toManyCallRef";if(telephonyCall){switch(this.mediaPillarCallContext.callState){case MPCallState.Free:this.mediaPillarCallContext.callState=MPCallState.WaitWebrtc,status="Ok";break;case MPCallState.WaitTelephony:this.mediaPillarCallContext.callState=MPCallState.CallOffer,status="Ok";break;case MPCallState.CallOffer:this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall | in callOffer received again incomingCall then ignore"),status="Ignore";break;case MPCallState.CallActive:case MPCallState.WebCallReleasing:telephonyCall.status===call_model_1.Call.Status.RINGING_INCOMMING&&(status="Ignore");break;case MPCallState.WaitWebrtc:this.mediaPillarCallContext.telephonyCallRefs.length>1?(this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall but 2nd incomming in WaitWebrtc| only Ignore"),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()),status="Ignore"):this.telephonyService.isSipWise()?this.logger.info("[WebrtcGatewayService] multiple mediaPillaryseTheCall but sipwise case | only Ignore"):(this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inTel_contextCallState_"+this.mediaPillarCallContext.callState,this.logger.info("[WebrtcGatewayService] mediaPillaryseTheCall again in WaitWebrtc"));break;default:this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inTel_contextCallState_"+this.mediaPillarCallContext.callState}"Ok"===status&&(this.putAsMasterTelCallRefs(telephonyCall),telephonyCall.setMediaPillarCall(this.getMediaPillarCallContext()))}else if(webrtcCall){switch(this.mediaPillarCallContext.webrtcCallRef=webrtcCall,this.mediaPillarCallContext.callState){case MPCallState.Free:this.mediaPillarCallContext.callState=MPCallState.WaitTelephony,status="Ok";break;case MPCallState.WaitWebrtc:this.mediaPillarCallContext.callState=MPCallState.CallOffer,status="Ok";break;default:this.mediaPillarCallContext.callState=MPCallState.AnomalyCCS,status="Ano_inWrtc_contextCallState_"+this.mediaPillarCallContext.callState}"Ok"===status&&webrtcCall.setMediaPillarCall(this.getMediaPillarCallContext())}return status}getMediaPillarCallContext(call=null){if(!call||!this.telephonyService.isSipWise())return this.mediaPillarCallContext;const foundContext=this.mediaPillarCallContexts.find(mediaPillarCallContext=>mediaPillarCallContext.telephonyCallRefs&&mediaPillarCallContext.telephonyCallRefs.length&&mediaPillarCallContext.telephonyCallRefs[0].id===call.id||mediaPillarCallContext.webrtcCallRef&&mediaPillarCallContext.webrtcCallRef.id===call.id);return foundContext?this.logger.debug("[WebrtcGatewayService] CTX getMediaPillarCallContext for "+call+" returns context id "+foundContext.id):this.logger.error("[WebrtcGatewayService] CTX getMediaPillarCallContext for "+call+" returns context not found"),foundContext}isMediaPillarOutgoingCall(){let compatibleCallState;switch(this.mediaPillarCallContext.callState){case MPCallState.WaitWebrtc:case MPCallState.WaitTelephony:case MPCallState.CallOffer:case MPCallState.CallOnGoing:case MPCallState.CallActive:case MPCallState.CallActiveNoWebMedia:case MPCallState.TelCallReleasing:case MPCallState.WebCallReleasing:compatibleCallState=!0;break;default:compatibleCallState=!1}return compatibleCallState&&this.mediaPillarCallContext.isOutgoingCall3PCC}isMediaPillarReleasableCall(){let compatibleCallState;switch(this.mediaPillarCallContext.callState){case MPCallState.AnomalyCCS:case MPCallState.Unknow:compatibleCallState=!1;break;default:compatibleCallState=!0}return compatibleCallState}mediaPillarReleaseWebrtcCall(mediaPillarCallContext){mediaPillarCallContext.webrtcCallRef&&(mediaPillarCallContext.webrtcCallRef.mediaPillarCall=null,this.webrtcP2PService.releaseCall(mediaPillarCallContext.webrtcCallRef))}timeOutCallActiveNoWebMedia(mediaPillarCallContext){this.logger.info("[WebrtcGatewayService] timeOutCallActiveNoWebMedia"),mediaPillarCallContext.callState===MPCallState.CallActiveNoWebMedia&&(this.mediaPillarCallTerminator(mediaPillarCallContext),this.mediaPillarKeepAlive(),this.logger.info("[WebrtcGatewayService] timeOutCallActiveNoWebMedia noWebMedia then release calls if existing & force keepalive"))}mediaPillarCallTerminator(mediaPillarCallContext=null){mediaPillarCallContext||(mediaPillarCallContext=this.mediaPillarCallContext),0!==mediaPillarCallContext.telephonyCallRefs.length&&mediaPillarCallContext.telephonyCallRefs.forEach(callRef=>{null!==callRef&&callRef.type.value===call_model_1.Call.Type.PHONE.value&&(callRef.mediaPillarCall=null,this.telephonyService.releaseCall(callRef),this.logger.info("[WebrtcGatewayService] mediaPillarCallTerminator | release call"+callRef))}),this.mediaPillarReleaseWebrtcCall(mediaPillarCallContext),this.releaseMediaPillarCallContext(mediaPillarCallContext),this.resetEvtAutomaton(),this.TO_PILLAR_POLLING+=3e5,this.mediaPillarKeepAlivePolling("START",this.TO_PILLAR_POLLING),this.logger.warn("[WebrtcGatewayService] mediaPillarCallTerminator | Full cleaning")}createMediaPillarContact(jid){this.logger.info("[webrtcGatewayService] createMediaPillarContact -- "+jid);const contact=this.contactService.createBasicContact(jid);return contact.displayName="mediaPillar",contact.avatar=new Image,this.authService.fromSDK?contact.avatar.src="":contact.avatar.src="/assets/skins/rainbow/images/conversations/unknownUser.jpeg",this.xmppService.getResourceFromJid(jid)&&this.contactService.createBasicContact(this.xmppService.getBareJidFromJid(jid)),contact}muteAudio(pbxCall,muted,conversation){if(pbxCall){if(this.getMediaPillarCallContext(pbxCall)){const webrtcCall=this.getMediaPillarCallContext(pbxCall).webrtcCallRef;if(webrtcCall){const session=this.xmppService.connection.jingle.sessions[webrtcCall.id];if(session){session.muteAudio(muted),webrtcCall.isMuted=muted,conversation&&(conversation.isMutedAudio=muted,conversation.rxSubject.next({name:"callUpdate",value:pbxCall})),pbxCall.isMuted=muted,this.logger.info("[webrtcGatewayService] muteAudio conversation: "+(conversation?conversation.id:"undefined")+" / pbxcall: "+pbxCall.id+"-- "+(muted?"mute":"unumute"));const eventData={call:pbxCall};conversation&&(eventData.conversation=conversation),this.eventService.publish("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",eventData),this.eventService.publish("ON_MPMEDIA_CONVERSATION_CALL_UPDATED_EVENT",{call:webrtcCall})}else this.logger.error("[webrtcGatewayService] muteAudio "+pbxCall.id+" -- failure: no session")}}}else this.logger.error("[webrtcGatewayService] muteAudio - trying to mute a non existing call !")}getActivePbxCall(){return this.isMediaPillarCallCase()&&this.mediaPillarCallContext?this.mediaPillarCallContext.telephonyCallRefs.find(pxbCall=>pxbCall.status===call_model_1.Call.Status.ACTIVE):null}async answerCall(call){const mediaPillarCall=call.getMediaPillarCall();if(this.logger.info("[WebrtcGatewayService] [TEL] -- answerCall call id "+call.id+" -- webrtcCallRef "+(mediaPillarCall&&mediaPillarCall.webrtcCallRef?mediaPillarCall.webrtcCallRef:"no context or no webrtc call")),this.isMixPstnWebRtcAllowed&&this.eventService.publish("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD"),this.telephonyService.oxoMultiCallMode()&&call.type.value===call_model_1.Call.Type.PHONE.value&&(this.logger.info("[WebrtcGatewayService] -- answerCall call id "+call.id+" -- OXO specific mng"),call.status===call_model_1.Call.Status.QUEUED_INCOMMING||call.status===call_model_1.Call.Status.RINGING_INCOMMING))return this.logger.info("[WebrtcGatewayService] -- answerCall -- by telephony service for call : "+call.id),this.putAsMasterTelCallRefs(call),this.mediaPillarCallContext.callOwnerForOxoMultiClientFlag=!0,this.mediaPillarCallContext.callState=MPCallState.CallOffer,void this.telephonyService.answerCall(call).catch(()=>{this.eventService.publish("ON_CALL_UPDATED_EVENT",call)});mediaPillarCall&&mediaPillarCall.webrtcCallRef&&mediaPillarCall.webrtcCallRef.status===call_model_1.Call.Status.RINGING_INCOMMING?(call.noIncomingPopup=!0,await this.actionOnActiveCallIfNecessary(call),this.logger.info("[WebrtcGatewayService] -- answerCall -- send webrtc proceed for call : "+call.id),this.webrtcP2PService.answerCall(mediaPillarCall.webrtcCallRef,"audio"),call.isMPAudioOwner=!0):call.status===call_model_1.Call.Status.QUEUED_INCOMMING||call.status===call_model_1.Call.Status.RINGING_INCOMMING?(this.logger.info("[WebrtcGatewayService] -- answerCall -- by telephony service for call : "+call.id),this.telephonyService.answerCall(call).catch(()=>{this.eventService.publish("ON_CALL_UPDATED_EVENT",call)})):this.logger.info("[WebrtcGatewayService] -- answerCall -- Anomaly media Pillar : answerAudioAction but no webrtcCallref & no 2nd call")}async actionOnActiveCallIfNecessary(incomingcall){this.isMixPstnWebRtcAllowed&&this.eventService.publish("PUT_ACTIVE_WEBRTC_CALL_ON_HOLD");const ongoingOutgoingCall=this.telephonyService.getOngoingOutgoingCall();if(ongoingOutgoingCall&&ongoingOutgoingCall.id!==incomingcall.id)return this.telephonyService.releaseCall(ongoingOutgoingCall);if(this.telephonyService.isSipWise()){const telActiveCall=this.telephonyService.getActiveCall();if(telActiveCall&&telActiveCall.id!==incomingcall.id)return this.telephonyService.holdCall(telActiveCall)}}releaseCall(call){const mediaPillarCall=call.getMediaPillarCall();mediaPillarCall&&mediaPillarCall.webrtcCallRef?call.type===call_model_1.Call.Type.PHONE?(this.logger.info("[WebrtcGatewayService] [TEL] -- releaseCall MP PHONE -- "+call.id),mediaPillarCall.telephonyCallRefs.length<=1&&(this.logger.info("[WebrtcGatewayService] -- rejectCall MP webrtc call -- "+mediaPillarCall.webrtcCallRef),this.webrtcP2PService.rejectCall(mediaPillarCall.webrtcCallRef)),this.telephonyService.releaseCall(call).catch(()=>{call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)})):(this.logger.info("[WebrtcGatewayService] [TEL] -- releaseCall MP WEBRTC -- "+call.id),this.webrtcP2PService.rejectCall(mediaPillarCall.webrtcCallRef)):(this.logger.info("[WebrtcGatewayService] [TEL] releaseCall | Anomaly media Pillar : declineAction but no webrtcCallref for call = "+call.id),this.telephonyService.releaseCall(call).catch(()=>{call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}))}async deflectCallToVm(call){this.logger.info("[WebrtcGatewayService] [TEL] -- deflectCallToVm -- "+call.id);try{await this.telephonyService.deflectCallToVM(call)}finally{if(call.type===call_model_1.Call.Type.PHONE){const mediaPillarCall=call.getMediaPillarCall();mediaPillarCall&&mediaPillarCall.webrtcCallRef&&mediaPillarCall.telephonyCallRefs.length<=1&&this.webrtcP2PService.rejectCall(mediaPillarCall.webrtcCallRef),call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)}}}specialCaseNotComputerModeButMPCall(telCall){if(!telCall)return void this.logger.info("[WebrtcGatewayService] specialCaseNotComputerModeButMPCall | Anomaly no tel call provided");const incomingMPWebrtcCall=this.webrtcP2PService.getMPWebrtcAudioCallByState(call_model_1.Call.Status.RINGING_INCOMMING);if(!incomingMPWebrtcCall)return this.logger.info("[WebrtcGatewayService] specialCaseNotComputerModeButMPCall | no valid MP webrtcCall found"),null;const MPContext=this.getMediaPillarCallContext();return MPContext.webrtcCallRef=incomingMPWebrtcCall,incomingMPWebrtcCall.setMediaPillarCall(MPContext),telCall.setMediaPillarCall(MPContext),MPContext.callState=MPCallState.CallOffer,incomingMPWebrtcCall.setMixtWebTelSingleStepTrans(!0),this.stopWaitTelephonyTimeOut(),this.stopCallStateTimeOut(),telCall.noIncomingPopup=!0,this.logger.debug("[WebrtcGatewayService] specialCaseNotComputerModeButMPCall | hack the telCall: "+telCall.id+" / webCall: "+incomingMPWebrtcCall.id),incomingMPWebrtcCall}}exports.WebrtcGatewayService=WebrtcGatewayService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return pipe})),__webpack_require__.d(__webpack_exports__,"b",(function(){return pipeFromArray}));var _identity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(30);function pipe(){for(var fns=[],_i=0;_i<arguments.length;_i++)fns[_i]=arguments[_i];return pipeFromArray(fns)}function pipeFromArray(fns){return 0===fns.length?_identity__WEBPACK_IMPORTED_MODULE_0__.a:1===fns.length?fns[0]:function(input){return fns.reduce((function(prev,fn){return fn(prev)}),input)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib_es6=__webpack_require__(0),nextHandle=1,RESOLVED=function(){return Promise.resolve()}(),activeHandles={};function findAndClearHandle(handle){return handle in activeHandles&&(delete activeHandles[handle],!0)}var Immediate_setImmediate=function(cb){var handle=nextHandle++;return activeHandles[handle]=!0,RESOLVED.then((function(){return findAndClearHandle(handle)&&cb()})),handle},Immediate_clearImmediate=function(handle){findAndClearHandle(handle)},AsapAction_AsapAction=function(_super){function AsapAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return tslib_es6.a(AsapAction,_super),AsapAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):(scheduler.actions.push(this),scheduler.scheduled||(scheduler.scheduled=Immediate_setImmediate(scheduler.flush.bind(scheduler,null))))},AsapAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0)return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);0===scheduler.actions.length&&(Immediate_clearImmediate(id),scheduler.scheduled=void 0)},AsapAction}(__webpack_require__(53).a),AsapScheduler_AsapScheduler=function(_super){function AsapScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return tslib_es6.a(AsapScheduler,_super),AsapScheduler.prototype.flush=function(action){this.active=!0,this.scheduled=void 0;var error,actions=this.actions,index=-1,count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay))break}while(++index<count&&(action=actions.shift()));if(this.active=!1,error){for(;++index<count&&(action=actions.shift());)action.unsubscribe();throw error}},AsapScheduler}(__webpack_require__(51).a);__webpack_require__.d(__webpack_exports__,"b",(function(){return asapScheduler})),__webpack_require__.d(__webpack_exports__,"a",(function(){return asap}));var asapScheduler=new AsapScheduler_AsapScheduler(AsapAction_AsapAction),asap=asapScheduler},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return rxSubscriber}));var rxSubscriber=function(){return"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return UnsubscriptionError}));var UnsubscriptionError=function(){function UnsubscriptionErrorImpl(errors){return Error.call(this),this.message=errors?errors.length+" errors occurred during unsubscription:\n"+errors.map((function(err,i){return i+1+") "+err.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=errors,this}return UnsubscriptionErrorImpl.prototype=Object.create(Error.prototype),UnsubscriptionErrorImpl}()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const BehaviorSubject_1=__webpack_require__(135),rxjs_1=__webpack_require__(7),lodash_escape_1=__webpack_require__(105);class FileState{}FileState.DELETED="deleted",FileState.UPLOADING="uploading",FileState.UPLOADED="uploaded",FileState.NOT_UPLOADED="not_uploaded",FileState.DOWNLOADING="downloading",FileState.UNKNOWN="unknown",exports.FileState=FileState;class ThumbnailPlaceholder{constructor(icon,style,type){this.icon=icon,this.style=style,this.type=type}}class Thumbnail{constructor(data){data?(this.availableThumbnail=data.availableThumbnail,this.md5sum=data.md5sum,this.size=data.size,this.wantThumbnailDate=data.wantThumbnailDate):this.availableThumbnail=!1}isThumbnailAvailable(){return this.availableThumbnail}}class FileDescriptor{constructor(id=null,url=null,ownerId=null,fileName=null,extension=null,typeMIME=null,size=null,registrationDate=null,uploadedDate=null,dateToSort=null,viewers=null,state=null,thumbnail=null,orientation=0,original_w=0,original_h=0,tags=null,virusScanState=null,voiceMessage=!1,recordingFile=!1,recordingConferenceId=""){this.viewersSubject=new BehaviorSubject_1.BehaviorSubject([]),this.abortXMLHttpRequestArray=[],this.id=id,this.url=url,this.ownerId=ownerId,this.fileName=lodash_escape_1.default(fileName),this.extension=extension,this.typeMIME=typeMIME,this.thumbnailPlaceholder=this.getThumbnailPlaceholderFromMimetype(typeMIME),this.size=size,this.registrationDate=registrationDate,this.uploadedDate=uploadedDate,this.dateToSort=dateToSort,this.viewers=viewers,this.state=state,this.stateSubject=new BehaviorSubject_1.BehaviorSubject(this.state),this.thumbnail=new Thumbnail(thumbnail),this.fileToSend=void 0,this.previewBlob=void 0,this.previewBlobSubject=new BehaviorSubject_1.BehaviorSubject(this.previewBlob),this.blobOrientation=void 0,this.blobOrientationSubject=new BehaviorSubject_1.BehaviorSubject(this.blobOrientation),this.previewDownloaded=!1,this.tags=tags,this.orientation=orientation||void 0,this.virusScanState=virusScanState,this.original_w=original_w||0,this.original_h=original_h||0,this.voiceMessage=voiceMessage,this.recordingFile=recordingFile,this.recordingConferenceId=recordingConferenceId,this.time=this.getDate().getTime(),this.progressSubject=new rxjs_1.Subject,this.loadingRef=0,this.abortTransferController=new AbortController}get viewers(){return this._viewers}set viewers(value){this._viewers=value,this.viewersSubject.next(this._viewers)}static create(id,url,ownerId,fileName,extension,typeMIME,size,registrationDate,uploadedDate,dateToSort,viewers,state,thumbnail,orientation,original_w,original_h,tags,virusScanState,voiceMessage,recordingFile,recordingConferenceId){return new FileDescriptor(id,url,ownerId,fileName,extension,typeMIME,size,registrationDate,uploadedDate,dateToSort,viewers,state,thumbnail,orientation,original_w,original_h,tags,virusScanState,voiceMessage,recordingFile,recordingConferenceId)}isMicrosoftFile(){return["docx","doc","ppt","pptx","xls","xlsx"].some(ext=>ext===this.extension)}isThumbnailPossible(){return this.isImage()||this.isPDF()}isPDF(){return"application/pdf"===this.typeMIME}isSVG(){return"svg"===this.extension}isImage(){return this.typeMIME&&this.typeMIME.length>="image/".length&&"image/"===this.typeMIME.slice(0,"image/".length)}isAudioVideo(){return["avi","mpg","wma","mp3","wmv","mkv","mov","wav","ogg","mp4","aac"].some(ext=>ext===this.extension)}isUploaded(){return this.state&&this.state===FileState.UPLOADED}isPublicUrlExpired(){if(!this.publicUrlExpirationDate)return!1;const nowDate=moment();return moment(this.publicUrlExpirationDate).isBefore(nowDate)}isAlreadyFileViewer(viewerId){return!!this.viewers&&this.viewers.some(viewer=>viewer.viewerId===viewerId)}getDisplayName(){return lodash_escape_1.default(this.fileName.replace(/\.[^/.]+$/,""))}getDisplayNameTruncated(){const str=this.fileName.replace(/\.[^/.]+$/,"");return[str.substring(0,str.length-4),str.slice(-4)]}getExtension(){return this.fileName.toUpperCase()===this.extension.toUpperCase()?"":"."+this.extension}getDuration(){return this.tags&&this.tags.duration?Math.floor(this.tags.duration):0}getThumbnailPlaceholderFromMimetype(mime){return mime?"image/vnd.adobe.photoshop"===mime||"image/photoshop"===mime||"image/x-photoshop"===mime||"image/psd"===mime||"application/photoshop"===mime||"application/psd"===mime?new ThumbnailPlaceholder("psd-type","psdStyle","psd"):0===mime.indexOf("image")?new ThumbnailPlaceholder("image-type","imageStyle","image"):"application/msword"===mime||/^application\/vnd.openxmlformats-officedocument.wordprocessingml.*$/.test(mime)||"application/vnd.oasis.opendocument.text"===mime?new ThumbnailPlaceholder("document-type","docStyle","doc"):/^application\/vnd.ms-powerpoint.*$/.test(mime)||/^application\/vnd.openxmlformats-officedocument.presentationml.*$/.test(mime)||"application/vnd.oasis.opendocument.presentation"===mime?new ThumbnailPlaceholder("powerpoint-type","pptStyle","ppt"):0===mime.indexOf("application/vnd.ms-excel")||/^application\/vnd.openxmlformats-officedocument.spreadsheetml.*$/.test(mime)?new ThumbnailPlaceholder("excel-type","xlsStyle","xls"):"application/pdf"===mime||"application/vnd.oasis.opendocument.spreadsheet"===mime?new ThumbnailPlaceholder("pdf-type","pdfStyle","pdf"):0===mime.indexOf("video/")?new ThumbnailPlaceholder("video-type","videoStyle","video"):0===mime.indexOf("audio/")?new ThumbnailPlaceholder("audio-type","audioStyle","audio"):"text/plain"===mime?new ThumbnailPlaceholder("txt-type","txtStyle","txt"):"application/zip"===mime||"application/x-rar-compressed"===mime||"application/x-7z-compressed"===mime||"application/x-tar"===mime?new ThumbnailPlaceholder("archive-type","archiveStyle","archive"):"application/illustrator"===mime||0===mime.indexOf("application/postscript")?new ThumbnailPlaceholder("ai-type","aiStyle","ai"):"text/css"===mime||"text/html"===mime||"application/javascript"===mime||"application/json"===mime||"application/typescript"===mime||"application/xml"===mime?new ThumbnailPlaceholder("code-type","codeStyle","code"):new ThumbnailPlaceholder("unknown-type","otherStyle","other"):new ThumbnailPlaceholder("unknown-type","otherStyle","other")}releaseURL(){this.localURL=void 0}setState(newState){this.state=newState,this.stateSubject.next(this.state)}setOriginalImageDimensions(width,height){this.original_w=width,this.original_h=height}update(fd){this.id=fd.id,this.url=fd.url,this.ownerId=fd.ownerId,this.fileName=lodash_escape_1.default(fd.fileName),this.extension=fd.extension,this.typeMIME=fd.typeMIME,this.size=fd.size,this.registrationDate=fd.registrationDate,this.uploadedDate=fd.uploadedDate,this.dateToSort=fd.dateToSort,this.viewers=fd.viewers,this.setState(fd.state),this.thumbnail=fd.thumbnail,this.orientation=fd.orientation,this.time=this.getDate().getTime()}getDate(){return this.uploadedDate?new Date(this.uploadedDate):this.registrationDate?new Date(this.registrationDate):new Date(this.dateToSort)}refreshFilePercent(){let chunkPercentTotal=0;this.chunkPercentArray.forEach(chunkPercent=>{chunkPercentTotal+=chunkPercent}),this.chunkPerformedPercent=Math.floor(chunkPercentTotal/this.chunkTotalNumber)}updateProgressInfo(){this.refreshFilePercent(),this.progressSubject.next({})}isInfected(){return"isInfected"===this.virusScanState}isSoleFileViewer(fileViewerId){return!!this.viewers&&(1===this.viewers.length&&this.viewers[0].viewerId===fileViewerId)}}exports.FileDescriptor=FileDescriptor},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=__webpack_require__(94),Subscriber_1=__webpack_require__(95),Subscription_1=__webpack_require__(78),ObjectUnsubscribedError_1=__webpack_require__(138),SubjectSubscription_1=__webpack_require__(160),rxSubscriber_1=__webpack_require__(137),SubjectSubscriber=function(_super){function SubjectSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this}return __extends(SubjectSubscriber,_super),SubjectSubscriber}(Subscriber_1.Subscriber);exports.SubjectSubscriber=SubjectSubscriber;var Subject=function(_super){function Subject(){var _this=_super.call(this)||this;return _this.observers=[],_this.closed=!1,_this.isStopped=!1,_this.hasError=!1,_this.thrownError=null,_this}return __extends(Subject,_super),Subject.prototype[rxSubscriber_1.rxSubscriber]=function(){return new SubjectSubscriber(this)},Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);return subject.operator=operator,subject},Subject.prototype.next=function(value){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;if(!this.isStopped)for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].next(value)},Subject.prototype.error=function(err){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;this.hasError=!0,this.thrownError=err,this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].error(err);this.observers.length=0},Subject.prototype.complete=function(){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;this.isStopped=!0;for(var observers=this.observers,len=observers.length,copy=observers.slice(),i=0;i<len;i++)copy[i].complete();this.observers.length=0},Subject.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},Subject.prototype._trySubscribe=function(subscriber){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return _super.prototype._trySubscribe.call(this,subscriber)},Subject.prototype._subscribe=function(subscriber){if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return this.hasError?(subscriber.error(this.thrownError),Subscription_1.Subscription.EMPTY):this.isStopped?(subscriber.complete(),Subscription_1.Subscription.EMPTY):(this.observers.push(subscriber),new SubjectSubscription_1.SubjectSubscription(this,subscriber))},Subject.prototype.asObservable=function(){var observable=new Observable_1.Observable;return observable.source=this,observable},Subject.create=function(destination,source){return new AnonymousSubject(destination,source)},Subject}(Observable_1.Observable);exports.Subject=Subject;var AnonymousSubject=function(_super){function AnonymousSubject(destination,source){var _this=_super.call(this)||this;return _this.destination=destination,_this.source=source,_this}return __extends(AnonymousSubject,_super),AnonymousSubject.prototype.next=function(value){var destination=this.destination;destination&&destination.next&&destination.next(value)},AnonymousSubject.prototype.error=function(err){var destination=this.destination;destination&&destination.error&&this.destination.error(err)},AnonymousSubject.prototype.complete=function(){var destination=this.destination;destination&&destination.complete&&this.destination.complete()},AnonymousSubject.prototype._subscribe=function(subscriber){return this.source?this.source.subscribe(subscriber):Subscription_1.Subscription.EMPTY},AnonymousSubject}(Subject);exports.AnonymousSubject=AnonymousSubject},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var isArray_1=__webpack_require__(373),isObject_1=__webpack_require__(374),isFunction_1=__webpack_require__(157),UnsubscriptionError_1=__webpack_require__(375),Subscription=function(){function Subscription(unsubscribe){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,unsubscribe&&(this._ctorUnsubscribe=!0,this._unsubscribe=unsubscribe)}var empty;return Subscription.prototype.unsubscribe=function(){var errors;if(!this.closed){var _parentOrParents=this._parentOrParents,_ctorUnsubscribe=this._ctorUnsubscribe,_unsubscribe=this._unsubscribe,_subscriptions=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,_parentOrParents instanceof Subscription)_parentOrParents.remove(this);else if(null!==_parentOrParents)for(var index=0;index<_parentOrParents.length;++index){_parentOrParents[index].remove(this)}if(isFunction_1.isFunction(_unsubscribe)){_ctorUnsubscribe&&(this._unsubscribe=void 0);try{_unsubscribe.call(this)}catch(e){errors=e instanceof UnsubscriptionError_1.UnsubscriptionError?flattenUnsubscriptionErrors(e.errors):[e]}}if(isArray_1.isArray(_subscriptions)){index=-1;for(var len=_subscriptions.length;++index<len;){var sub=_subscriptions[index];if(isObject_1.isObject(sub))try{sub.unsubscribe()}catch(e){errors=errors||[],e instanceof UnsubscriptionError_1.UnsubscriptionError?errors=errors.concat(flattenUnsubscriptionErrors(e.errors)):errors.push(e)}}}if(errors)throw new UnsubscriptionError_1.UnsubscriptionError(errors)}},Subscription.prototype.add=function(teardown){var subscription=teardown;if(!teardown)return Subscription.EMPTY;switch(typeof teardown){case"function":subscription=new Subscription(teardown);case"object":if(subscription===this||subscription.closed||"function"!=typeof subscription.unsubscribe)return subscription;if(this.closed)return subscription.unsubscribe(),subscription;if(!(subscription instanceof Subscription)){var tmp=subscription;(subscription=new Subscription)._subscriptions=[tmp]}break;default:throw new Error("unrecognized teardown "+teardown+" added to Subscription.")}var _parentOrParents=subscription._parentOrParents;if(null===_parentOrParents)subscription._parentOrParents=this;else if(_parentOrParents instanceof Subscription){if(_parentOrParents===this)return subscription;subscription._parentOrParents=[_parentOrParents,this]}else{if(-1!==_parentOrParents.indexOf(this))return subscription;_parentOrParents.push(this)}var subscriptions=this._subscriptions;return null===subscriptions?this._subscriptions=[subscription]:subscriptions.push(subscription),subscription},Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);-1!==subscriptionIndex&&subscriptions.splice(subscriptionIndex,1)}},Subscription.EMPTY=((empty=new Subscription).closed=!0,empty),Subscription}();function flattenUnsubscriptionErrors(errors){return errors.reduce((function(errs,err){return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError?err.errors:err)}),[])}exports.Subscription=Subscription},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class WebglHelper{static create(){return new WebglHelper}constructor(){}initShader(gl,shaderType,shaderSource){const shader=gl.createShader(shaderType);if(gl.shaderSource(shader,shaderSource),gl.compileShader(shader),!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){const info=gl.getShaderInfoLog(shader);throw new Error("Unable to compile the shader. \n\n "+info)}return shader}initProgram(gl,vertexShader,fragmentShader,positionBuffer,texCoordBuffer){const program=this.createProgram(gl,vertexShader,fragmentShader),positionAttributeLocation=gl.getAttribLocation(program,"a_position");gl.enableVertexAttribArray(positionAttributeLocation),gl.bindBuffer(gl.ARRAY_BUFFER,positionBuffer),gl.vertexAttribPointer(positionAttributeLocation,2,gl.FLOAT,!1,0,0);const texCoordAttributeLocation=gl.getAttribLocation(program,"a_texCoord");return gl.enableVertexAttribArray(texCoordAttributeLocation),gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuffer),gl.vertexAttribPointer(texCoordAttributeLocation,2,gl.FLOAT,!1,0,0),program}createProgram(gl,vertexShader,fragmentShader){const program=gl.createProgram();if(gl.attachShader(program,vertexShader),gl.attachShader(program,fragmentShader),gl.linkProgram(program),!gl.getProgramParameter(program,gl.LINK_STATUS)){const info=gl.getProgramInfoLog(program);throw new Error("Unable to compile the WebGL program. \n\n + "+info)}return program}createTexture(gl,internalFormat,width,height,minFilter=gl.NEAREST,magFilter=gl.NEAREST){const texture=gl.createTexture();return gl.bindTexture(gl.TEXTURE_2D,texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,minFilter),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,magFilter),gl.texStorage2D(gl.TEXTURE_2D,1,internalFormat,width,height),texture}}exports.WebglHelper=WebglHelper},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Strings=void 0;var Strings=function(){function Strings(){}return Strings.errors={unknownElementType:function(typeName){return'Unknown element type "'+typeName+'". Fallback will be used if present.'},unknownActionType:function(typeName){return'Unknown action type "'+typeName+'". Fallback will be used if present.'},elementTypeNotAllowed:function(typeName){return'Element type "'+typeName+'" is not allowed in this context.'},actionTypeNotAllowed:function(typeName){return'Action type "'+typeName+'" is not allowed in this context.'},invalidPropertyValue:function(value,propertyName){return'Invalid value "'+value+'" for property "'+propertyName+'".'},showCardMustHaveCard:function(){return'"An Action.ShowCard must have its "card" property set to a valid AdaptiveCard object.'},invalidColumnWidth:function(invalidWidth){return'Invalid column width "'+invalidWidth+'" - defaulting to "auto".'},invalidCardVersion:function(defaultingToVersion){return'Invalid card version. Defaulting to "'+defaultingToVersion+'".'},invalidVersionString:function(versionString){return'Invalid version string "'+versionString+'".'},propertyValueNotSupported:function(value,propertyName,supportedInVersion,versionUsed){return'Value "'+value+'" for property "'+propertyName+'" is supported in version '+supportedInVersion+", but you are using version "+versionUsed+"."},propertyNotSupported:function(propertyName,supportedInVersion,versionUsed){return'Property "'+propertyName+'" is supported in version '+supportedInVersion+", but you are using version "+versionUsed+"."},indexOutOfRange:function(index){return"Index out of range ("+index+")."},elementCannotBeUsedAsInline:function(){return"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline."},inlineAlreadyParented:function(){return"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock."},interactivityNotAllowed:function(){return"Interactivity is not allowed."},inputsMustHaveUniqueId:function(){return"All inputs must have a unique Id."},choiceSetMustHaveAtLeastOneChoice:function(){return"An Input.ChoiceSet must have at least one choice defined."},choiceSetChoicesMustHaveTitleAndValue:function(){return"All choices in an Input.ChoiceSet must have their title and value properties set."},propertyMustBeSet:function(propertyName){return'Property "'+propertyName+'" must be set.'},actionHttpHeadersMustHaveNameAndValue:function(){return"All headers of an Action.Http must have their name and value properties set."},tooManyActions:function(maximumActions){return"Maximum number of actions exceeded ("+maximumActions+")."},columnAlreadyBelongsToAnotherSet:function(){return"This column already belongs to another ColumnSet."},invalidCardType:function(){return'Invalid or missing card type. Make sure the card\'s type property is set to "AdaptiveCard".'},unsupportedCardVersion:function(version,maxSupportedVersion){return"The specified card version ("+version+") is not supported. The maximum supported card version is "+maxSupportedVersion+"."},duplicateId:function(id){return'Duplicate Id "'+id+'".'},markdownProcessingNotEnabled:function(){return"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown"},processMarkdownEventRemoved:function(){return"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead."},elementAlreadyParented:function(){return"The element already belongs to another container."},actionAlreadyParented:function(){return"The action already belongs to another element."},elementTypeNotStandalone:function(typeName){return"Elements of type "+typeName+" cannot be used as standalone elements."}},Strings.magicCodeInputCard={tryAgain:function(){return"That didn't work... let's try again."},pleaseLogin:function(){return'Please login in the popup. You will obtain a magic code. Paste that code below and select "Submit"'},enterMagicCode:function(){return"Enter magic code"},pleaseEnterMagicCodeYouReceived:function(){return"Please enter the magic code you received."},submit:function(){return"Submit"},cancel:function(){return"Cancel"},somethingWentWrong:function(){return"Something went wrong. This action can't be handled."},authenticationFailed:function(){return"Authentication failed."}},Strings.runtime={automaticRefreshPaused:function(){return"Automatic refresh paused."},clckToRestartAutomaticRefresh:function(){return"Click to restart."},refreshThisCard:function(){return"Refresh this card"}},Strings.hints={dontUseWeightedAndStrecthedColumnsInSameSet:function(){return"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space."}},Strings.defaults={inlineActionTitle:function(){return"Inline Action"},overflowButtonText:function(){return"..."},mediaPlayerAriaLabel:function(){return"Media content"},mediaPlayerPlayMedia:function(){return"Play media"}},Strings}();exports.Strings=Strings},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var int64_buffer_1=__webpack_require__(326),EBMLEncoder_1=__webpack_require__(327),_Buffer=__webpack_require__(98),_tools=__webpack_require__(480),_block=__webpack_require__(481);function WebPBlockFilter(elms){return elms.reduce((function(lst,elm){return"b"!==elm.type||"SimpleBlock"!==elm.name?lst:exports.ebmlBlock(elm.data).frames.some((function(frame){return"9d012a"===frame.slice(3,6).toString("hex")}))?lst.concat(elm):lst}),[])}function VP8BitStreamToRiffWebPBuffer(frame){var VP8Chunk=createRIFFChunk("VP8 ",frame);return createRIFFChunk("RIFF",concat([new exports.Buffer("WEBP","ascii"),VP8Chunk]))}function createRIFFChunk(FourCC,chunk){var chunkSize=new exports.Buffer(4);return chunkSize.writeUInt32LE(chunk.byteLength,0),concat([new exports.Buffer(FourCC.substr(0,4),"ascii"),chunkSize,chunk,new exports.Buffer(chunk.byteLength%2==0?0:1)])}function removeElement(idName,metadata){for(var start=-1,i=0;i<metadata.length;i++){var element=metadata[i];if(element.name===idName){if("m"!==element.type)return void metadata.splice(i,1);if(element.isEnd){if(-1==start)throw new Error("Detected "+idName+" closing element before finding the start");return void metadata.splice(start,i-start+1)}start=i}}}function extractElement(idName,metadata){for(var result=[],start=-1,i=0;i<metadata.length;i++){var element=metadata[i];if(element.name===idName){if("m"!==element.type){result.push(metadata[i]);break}if(element.isEnd){if(-1==start)throw new Error("Detected "+idName+" closing element before finding the start");result=metadata.slice(start,i+1);break}start=i}}return result}function encodedSizeOfEbml(refinedMetaData){var encorder=new EBMLEncoder_1.default;return refinedMetaData.reduce((function(lst,elm){return lst.concat(encorder.encode([elm]))}),[]).reduce((function(o,buf){return o+buf.byteLength}),0)}function refineMetadata(mesetadata,sizeDiff,info){var duration=info.duration,clusterPtrs=info.clusterPtrs,cues=info.cues,_metadata=mesetadata.slice(0);if("number"==typeof duration){var overwrited_1=!1;_metadata.forEach((function(elm){"f"===elm.type&&"Duration"===elm.name&&(overwrited_1=!0,elm.data=createFloatBuffer(duration,8))})),overwrited_1||insertTag(_metadata,"Info",[{name:"Duration",type:"f",data:createFloatBuffer(duration,8)}])}Array.isArray(cues)&&insertTag(_metadata,"Cues",function(cueInfos,sizeDiff){var cues=[];return cueInfos.forEach((function(_a){var CueTrack=_a.CueTrack,CueClusterPosition=_a.CueClusterPosition,CueTime=_a.CueTime;cues.push({name:"CuePoint",type:"m",isEnd:!1}),cues.push({name:"CueTime",type:"u",data:createUIntBuffer(CueTime)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!1}),cues.push({name:"CueTrack",type:"u",data:createUIntBuffer(CueTrack)}),cues.push({name:"CueClusterPosition",type:"u",data:createUIntBuffer(CueClusterPosition+sizeDiff)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!0}),cues.push({name:"CuePoint",type:"m",isEnd:!0})})),cues}(cues,sizeDiff));var seekhead_children=[];return Array.isArray(clusterPtrs)&&(console.warn("append cluster pointers to seekhead is deprecated. please use cues"),seekhead_children=function(clusterPtrs,sizeDiff){var seeks=[];return clusterPtrs.forEach((function(start){seeks.push({name:"Seek",type:"m",isEnd:!1}),seeks.push({name:"SeekID",type:"b",data:new exports.Buffer([31,67,182,117])}),seeks.push({name:"SeekPosition",type:"u",data:createUIntBuffer(start+sizeDiff)}),seeks.push({name:"Seek",type:"m",isEnd:!0})})),seeks}(clusterPtrs,sizeDiff)),insertTag(_metadata,"SeekHead",seekhead_children,!0),_metadata}function insertTag(_metadata,tagName,children,insertHead){void 0===insertHead&&(insertHead=!1);for(var idx=-1,i=0;i<_metadata.length;i++){var elm=_metadata[i];if("m"===elm.type&&elm.name===tagName&&!1===elm.isEnd){idx=i;break}}idx>=0?Array.prototype.splice.apply(_metadata,[idx+1,0].concat(children)):insertHead?[].concat([{name:tagName,type:"m",isEnd:!1}],children,[{name:tagName,type:"m",isEnd:!0}]).reverse().forEach((function(elm){_metadata.unshift(elm)})):(_metadata.push({name:tagName,type:"m",isEnd:!1}),children.forEach((function(elm){_metadata.push(elm)})),_metadata.push({name:tagName,type:"m",isEnd:!0}))}function concat(list){for(var i=0,length=0;i<list.length;++i)length+=list[i].length;var buffer=exports.Buffer.allocUnsafe(length),pos=0;for(i=0;i<list.length;++i){var buf=list[i];buf.copy(buffer,pos),pos+=buf.length}return buffer}function createUIntBuffer(value){for(var bytes=1;value>=Math.pow(2,8*bytes);bytes++);if(bytes>=7)return console.warn("7bit or more bigger uint not supported."),new int64_buffer_1.Uint64BE(value).toBuffer();var data=new exports.Buffer(bytes);return data.writeUIntBE(value,0,bytes),data}function createIntBuffer(value){for(var bytes=1;value>=Math.pow(2,8*bytes);bytes++);if(bytes>=7)return console.warn("7bit or more bigger uint not supported."),new int64_buffer_1.Int64BE(value).toBuffer();var data=new exports.Buffer(bytes);return data.writeIntBE(value,0,bytes),data}function createFloatBuffer(value,bytes){var data;if(void 0===bytes&&(bytes=8),8===bytes)return(data=new exports.Buffer(8)).writeDoubleBE(value,0),data;if(4===bytes)return(data=new exports.Buffer(4)).writeFloatBE(value,0),data;throw new Error("float type bits must 4bytes or 8bytes")}exports.Buffer=_Buffer.Buffer,exports.readVint=_tools.readVint,exports.writeVint=_tools.writeVint,exports.ebmlBlock=_block,exports.readBlock=function(buf){return exports.ebmlBlock(new exports.Buffer(buf))},exports.encodeTag=function(tagId,tagData,unknownSize){return void 0===unknownSize&&(unknownSize=!1),concat([tagId,unknownSize?new exports.Buffer("01ffffffffffffff","hex"):exports.writeVint(tagData.length),tagData])},exports.WebPFrameFilter=function(elms){return WebPBlockFilter(elms).reduce((function(lst,elm){return exports.ebmlBlock(elm.data).frames.reduce((function(lst,frame){var webpBuf=VP8BitStreamToRiffWebPBuffer(frame),webp=new Blob([webpBuf],{type:"image/webp"});return lst.concat(webp)}),lst)}),[])},exports.WebPBlockFilter=WebPBlockFilter,exports.VP8BitStreamToRiffWebPBuffer=VP8BitStreamToRiffWebPBuffer,exports.createRIFFChunk=createRIFFChunk,exports.makeMetadataSeekable=function(originalMetadata,duration,cuesInfo){var header=extractElement("EBML",originalMetadata),segmentContentStartPos=encodedSizeOfEbml(header)+12,originalMetadataSize=originalMetadata[originalMetadata.length-1].dataEnd-segmentContentStartPos,info=extractElement("Info",originalMetadata);removeElement("Duration",info),info.splice(1,0,{name:"Duration",type:"f",data:createFloatBuffer(duration,8)});for(var infoSize=encodedSizeOfEbml(info),tracks=extractElement("Tracks",originalMetadata),tracksSize=encodedSizeOfEbml(tracks),seekHeadSize=47,seekHead=[],cuesSize=5+15*cuesInfo.length,cues=[],lastSizeDifference=-1,_loop_1=function(i){var infoStart=seekHeadSize,tracksStart=infoStart+infoSize,cuesStart=tracksStart+tracksSize,sizeDifference=cuesStart+cuesSize-originalMetadataSize;if((seekHead=[]).push({name:"SeekHead",type:"m",isEnd:!1}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([21,73,169,102])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(infoStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([22,84,174,107])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(tracksStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"Seek",type:"m",isEnd:!1}),seekHead.push({name:"SeekID",type:"b",data:new exports.Buffer([28,83,187,107])}),seekHead.push({name:"SeekPosition",type:"u",data:createUIntBuffer(cuesStart)}),seekHead.push({name:"Seek",type:"m",isEnd:!0}),seekHead.push({name:"SeekHead",type:"m",isEnd:!0}),seekHeadSize=encodedSizeOfEbml(seekHead),(cues=[]).push({name:"Cues",type:"m",isEnd:!1}),cuesInfo.forEach((function(_a){var CueTrack=_a.CueTrack,CueClusterPosition=_a.CueClusterPosition,CueTime=_a.CueTime;cues.push({name:"CuePoint",type:"m",isEnd:!1}),cues.push({name:"CueTime",type:"u",data:createUIntBuffer(CueTime)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!1}),cues.push({name:"CueTrack",type:"u",data:createUIntBuffer(CueTrack)}),CueClusterPosition-=segmentContentStartPos,CueClusterPosition+=sizeDifference,cues.push({name:"CueClusterPosition",type:"u",data:createUIntBuffer(CueClusterPosition)}),cues.push({name:"CueTrackPositions",type:"m",isEnd:!0}),cues.push({name:"CuePoint",type:"m",isEnd:!0})})),cues.push({name:"Cues",type:"m",isEnd:!0}),cuesSize=encodedSizeOfEbml(cues),lastSizeDifference===sizeDifference)return"break";if(lastSizeDifference=sizeDifference,9===i)throw new Error("Failed to converge to a stable metadata size")},i=0;i<10;i++){if("break"===_loop_1(i))break}var finalMetadata=[].concat.apply([],[header,{name:"Segment",type:"m",isEnd:!1,unknownSize:!0},seekHead,info,tracks,cues]);return(new EBMLEncoder_1.default).encode(finalMetadata)},exports.removeElement=removeElement,exports.extractElement=extractElement,exports.putRefinedMetaData=function(metadata,info){Array.isArray(info.cueInfos)&&!Array.isArray(info.cues)&&(console.warn("putRefinedMetaData: info.cueInfos property is deprecated. please use info.cues"),info.cues=info.cueInfos);for(var ebml=[],payload=[],i_1=0;i_1<metadata.length;i_1++){var elm=metadata[i_1];if("m"===elm.type&&"Segment"===elm.name){if(ebml=metadata.slice(0,i_1),payload=metadata.slice(i_1),elm.unknownSize){payload.shift();break}throw new Error("this metadata is not streaming webm file")}}if(!(payload[payload.length-1].dataEnd>0))throw new Error("metadata dataEnd has wrong number");var i,originalPayloadOffsetEnd=payload[payload.length-1].dataEnd,ebmlSize=ebml[ebml.length-1].dataEnd,offsetDiff=(new EBMLEncoder_1.default).encode(ebml).byteLength-ebmlSize,payloadSize=originalPayloadOffsetEnd-payload[0].tagStart,segmentTagBuf=(payload[0].tagStart,payload[0].tagStart,new exports.Buffer([24,83,128,103])),segmentSizeBuf=new exports.Buffer("01ffffffffffffff","hex"),_segmentSize=segmentTagBuf.byteLength+segmentSizeBuf.byteLength,newPayloadSize=payloadSize;for(i=1;i<20;i++){var refined=refineMetadata(payload,offsetDiff+(ebmlSize+_segmentSize+newPayloadSize-originalPayloadOffsetEnd),info),newNewRefinedSize=(new EBMLEncoder_1.default).encode(refined).byteLength;if(newNewRefinedSize===newPayloadSize)return(new EBMLEncoder_1.default).encode([].concat(ebml,[{type:"m",name:"Segment",isEnd:!1,unknownSize:!0}],refined));newPayloadSize=newNewRefinedSize}throw new Error("unable to refine metadata, stable size could not be found in "+i+" iterations!")},exports.concat=concat,exports.encodeValueToBuffer=function(elm){var data=new exports.Buffer(0);if("m"===elm.type)return elm;switch(elm.type){case"u":data=createUIntBuffer(elm.value);break;case"i":data=createIntBuffer(elm.value);break;case"f":data=createFloatBuffer(elm.value);break;case"s":data=new exports.Buffer(elm.value,"ascii");break;case"8":data=new exports.Buffer(elm.value,"utf8");break;case"b":data=elm.value;break;case"d":data=new int64_buffer_1.Int64BE(elm.value.getTime().toString()).toBuffer()}return Object.assign({},elm,{data:data})},exports.createUIntBuffer=createUIntBuffer,exports.createIntBuffer=createIntBuffer,exports.createFloatBuffer=createFloatBuffer,exports.convertEBMLDateToJSDate=function(int64str){return int64str instanceof Date?int64str:new Date(new Date("2001-01-01T00:00:00.000Z").getTime()+Number(int64str)/1e3/1e3)}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return refCount}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2);function refCount(){return function(source){return source.lift(new RefCountOperator(source))}}var RefCountOperator=function(){function RefCountOperator(connectable){this.connectable=connectable}return RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable),subscription=source.subscribe(refCounter);return refCounter.closed||(refCounter.connection=connectable.connect()),subscription},RefCountOperator}(),RefCountSubscriber=function(_super){function RefCountSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;return _this.connectable=connectable,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(RefCountSubscriber,_super),RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var refCount=connectable._refCount;if(refCount<=0)this.connection=null;else if(connectable._refCount=refCount-1,refCount>1)this.connection=null;else{var connection=this.connection,sharedConnection=connectable._connection;this.connection=null,!sharedConnection||connection&&sharedConnection!==connection||sharedConnection.unsubscribe()}}else this.connection=null},RefCountSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ReplaySubject}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(14),_scheduler_queue__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(99),_Subscription__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(10),_operators_observeOn__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(116),_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(42),_SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(128),ReplaySubject=function(_super){function ReplaySubject(bufferSize,windowTime,scheduler){void 0===bufferSize&&(bufferSize=Number.POSITIVE_INFINITY),void 0===windowTime&&(windowTime=Number.POSITIVE_INFINITY);var _this=_super.call(this)||this;return _this.scheduler=scheduler,_this._events=[],_this._infiniteTimeWindow=!1,_this._bufferSize=bufferSize<1?1:bufferSize,_this._windowTime=windowTime<1?1:windowTime,windowTime===Number.POSITIVE_INFINITY?(_this._infiniteTimeWindow=!0,_this.next=_this.nextInfiniteTimeWindow):_this.next=_this.nextTimeWindow,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ReplaySubject,_super),ReplaySubject.prototype.nextInfiniteTimeWindow=function(value){var _events=this._events;_events.push(value),_events.length>this._bufferSize&&_events.shift(),_super.prototype.next.call(this,value)},ReplaySubject.prototype.nextTimeWindow=function(value){this._events.push(new ReplayEvent(this._getNow(),value)),this._trimBufferThenGetEvents(),_super.prototype.next.call(this,value)},ReplaySubject.prototype._subscribe=function(subscriber){var subscription,_infiniteTimeWindow=this._infiniteTimeWindow,_events=_infiniteTimeWindow?this._events:this._trimBufferThenGetEvents(),scheduler=this.scheduler,len=_events.length;if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__.a;if(this.isStopped||this.hasError?subscription=_Subscription__WEBPACK_IMPORTED_MODULE_3__.a.EMPTY:(this.observers.push(subscriber),subscription=new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__.a(this,subscriber)),scheduler&&subscriber.add(subscriber=new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__.a(subscriber,scheduler)),_infiniteTimeWindow)for(var i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i]);else for(i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i].value);return this.hasError?subscriber.error(this.thrownError):this.isStopped&&subscriber.complete(),subscription},ReplaySubject.prototype._getNow=function(){return(this.scheduler||_scheduler_queue__WEBPACK_IMPORTED_MODULE_2__.a).now()},ReplaySubject.prototype._trimBufferThenGetEvents=function(){for(var now=this._getNow(),_bufferSize=this._bufferSize,_windowTime=this._windowTime,_events=this._events,eventsCount=_events.length,spliceCount=0;spliceCount<eventsCount&&!(now-_events[spliceCount].time<_windowTime);)spliceCount++;return eventsCount>_bufferSize&&(spliceCount=Math.max(spliceCount,eventsCount-_bufferSize)),spliceCount>0&&_events.splice(0,spliceCount),_events},ReplaySubject}(_Subject__WEBPACK_IMPORTED_MODULE_1__.a),ReplayEvent=function(){return function(time,value){this.time=time,this.value=value}}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return throwError}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5);function throwError(error,scheduler){return scheduler?new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){return scheduler.schedule(dispatch,0,{error:error,subscriber:subscriber})})):new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){return subscriber.error(error)}))}function dispatch(_a){var error=_a.error;_a.subscriber.error(error)}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return combineLatest})),__webpack_require__.d(__webpack_exports__,"a",(function(){return CombineLatestOperator}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(21),_util_isArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(17),_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(31),_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(26),_fromArray__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(50),NONE={};function combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];var resultSelector=void 0,scheduler=void 0;return Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__.a)(observables[observables.length-1])&&(scheduler=observables.pop()),"function"==typeof observables[observables.length-1]&&(resultSelector=observables.pop()),1===observables.length&&Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__.a)(observables[0])&&(observables=observables[0]),Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__.a)(observables,scheduler).lift(new CombineLatestOperator(resultSelector))}var CombineLatestOperator=function(){function CombineLatestOperator(resultSelector){this.resultSelector=resultSelector}return CombineLatestOperator.prototype.call=function(subscriber,source){return source.subscribe(new CombineLatestSubscriber(subscriber,this.resultSelector))},CombineLatestOperator}(),CombineLatestSubscriber=function(_super){function CombineLatestSubscriber(destination,resultSelector){var _this=_super.call(this,destination)||this;return _this.resultSelector=resultSelector,_this.active=0,_this.values=[],_this.observables=[],_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(CombineLatestSubscriber,_super),CombineLatestSubscriber.prototype._next=function(observable){this.values.push(NONE),this.observables.push(observable)},CombineLatestSubscriber.prototype._complete=function(){var observables=this.observables,len=observables.length;if(0===len)this.destination.complete();else{this.active=len,this.toRespond=len;for(var i=0;i<len;i++){var observable=observables[i];this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__.a)(this,observable,void 0,i))}}},CombineLatestSubscriber.prototype.notifyComplete=function(unused){0==(this.active-=1)&&this.destination.complete()},CombineLatestSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){var values=this.values,oldVal=values[outerIndex],toRespond=this.toRespond?oldVal===NONE?--this.toRespond:this.toRespond:0;values[outerIndex]=innerValue,0===toRespond&&(this.resultSelector?this._tryResultSelector(values):this.destination.next(values.slice()))},CombineLatestSubscriber.prototype._tryResultSelector=function(values){var result;try{result=this.resultSelector.apply(this,values)}catch(err){return void this.destination.error(err)}this.destination.next(result)},CombineLatestSubscriber}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return mergeAll}));var _mergeMap__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(49),_util_identity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(30);function mergeAll(concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__.b)(_util_identity__WEBPACK_IMPORTED_MODULE_1__.a,concurrent)}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return defer}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_from__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23),_empty__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(22);function defer(observableFactory){return new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){var input;try{input=observableFactory()}catch(err){return void subscriber.error(err)}return(input?Object(_from__WEBPACK_IMPORTED_MODULE_1__.a)(input):Object(_empty__WEBPACK_IMPORTED_MODULE_2__.b)()).subscribe(subscriber)}))}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return zip})),__webpack_require__.d(__webpack_exports__,"a",(function(){return ZipOperator}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_fromArray__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(50),_util_isArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(17),_Subscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(2),_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(36),_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(3);function zip(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];var resultSelector=observables[observables.length-1];return"function"==typeof resultSelector&&observables.pop(),Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__.a)(observables,void 0).lift(new ZipOperator(resultSelector))}var ZipOperator=function(){function ZipOperator(resultSelector){this.resultSelector=resultSelector}return ZipOperator.prototype.call=function(subscriber,source){return source.subscribe(new ZipSubscriber(subscriber,this.resultSelector))},ZipOperator}(),ZipSubscriber=function(_super){function ZipSubscriber(destination,resultSelector,values){void 0===values&&(values=Object.create(null));var _this=_super.call(this,destination)||this;return _this.resultSelector=resultSelector,_this.iterators=[],_this.active=0,_this.resultSelector="function"==typeof resultSelector?resultSelector:void 0,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ZipSubscriber,_super),ZipSubscriber.prototype._next=function(value){var iterators=this.iterators;Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__.a)(value)?iterators.push(new StaticArrayIterator(value)):"function"==typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__.a]?iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__.a]())):iterators.push(new ZipBufferIterator(this.destination,this,value))},ZipSubscriber.prototype._complete=function(){var iterators=this.iterators,len=iterators.length;if(this.unsubscribe(),0!==len){this.active=len;for(var i=0;i<len;i++){var iterator=iterators[i];if(iterator.stillUnsubscribed)this.destination.add(iterator.subscribe());else this.active--}}else this.destination.complete()},ZipSubscriber.prototype.notifyInactive=function(){this.active--,0===this.active&&this.destination.complete()},ZipSubscriber.prototype.checkIterators=function(){for(var iterators=this.iterators,len=iterators.length,destination=this.destination,i=0;i<len;i++){if("function"==typeof(iterator=iterators[i]).hasValue&&!iterator.hasValue())return}var shouldComplete=!1,args=[];for(i=0;i<len;i++){var iterator,result=(iterator=iterators[i]).next();if(iterator.hasCompleted()&&(shouldComplete=!0),result.done)return void destination.complete();args.push(result.value)}this.resultSelector?this._tryresultSelector(args):destination.next(args),shouldComplete&&destination.complete()},ZipSubscriber.prototype._tryresultSelector=function(args){var result;try{result=this.resultSelector.apply(this,args)}catch(err){return void this.destination.error(err)}this.destination.next(result)},ZipSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__.a),StaticIterator=function(){function StaticIterator(iterator){this.iterator=iterator,this.nextResult=iterator.next()}return StaticIterator.prototype.hasValue=function(){return!0},StaticIterator.prototype.next=function(){var result=this.nextResult;return this.nextResult=this.iterator.next(),result},StaticIterator.prototype.hasCompleted=function(){var nextResult=this.nextResult;return Boolean(nextResult&&nextResult.done)},StaticIterator}(),StaticArrayIterator=function(){function StaticArrayIterator(array){this.array=array,this.index=0,this.length=0,this.length=array.length}return StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__.a]=function(){return this},StaticArrayIterator.prototype.next=function(value){var i=this.index++,array=this.array;return i<this.length?{value:array[i],done:!1}:{value:null,done:!0}},StaticArrayIterator.prototype.hasValue=function(){return this.array.length>this.index},StaticArrayIterator.prototype.hasCompleted=function(){return this.array.length===this.index},StaticArrayIterator}(),ZipBufferIterator=function(_super){function ZipBufferIterator(destination,parent,observable){var _this=_super.call(this,destination)||this;return _this.parent=parent,_this.observable=observable,_this.stillUnsubscribed=!0,_this.buffer=[],_this.isComplete=!1,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ZipBufferIterator,_super),ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__.a]=function(){return this},ZipBufferIterator.prototype.next=function(){var buffer=this.buffer;return 0===buffer.length&&this.isComplete?{value:null,done:!0}:{value:buffer.shift(),done:!1}},ZipBufferIterator.prototype.hasValue=function(){return this.buffer.length>0},ZipBufferIterator.prototype.hasCompleted=function(){return 0===this.buffer.length&&this.isComplete},ZipBufferIterator.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=!0,this.parent.notifyInactive()):this.destination.complete()},ZipBufferIterator.prototype.notifyNext=function(innerValue){this.buffer.push(innerValue),this.parent.checkIterators()},ZipBufferIterator.prototype.subscribe=function(){return Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__.c)(this.observable,new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__.a(this))},ZipBufferIterator}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__.b)},function(module,__webpack_exports__,__webpack_require__){"use strict";function isObject(x){return null!==x&&"object"==typeof x}__webpack_require__.d(__webpack_exports__,"a",(function(){return isObject}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return canReportError}));var _Subscriber__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);function canReportError(observer){for(;observer;){var _a=observer,closed_1=_a.closed,destination=_a.destination,isStopped=_a.isStopped;if(closed_1||isStopped)return!1;observer=destination&&destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__.a?destination:null}return!0}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return scheduleArray}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_Subscription__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(10);function scheduleArray(input,scheduler){return new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){var sub=new _Subscription__WEBPACK_IMPORTED_MODULE_1__.a,i=0;return sub.add(scheduler.schedule((function(){i!==input.length?(subscriber.next(input[i++]),subscriber.closed||sub.add(this.schedule())):subscriber.complete()}))),sub}))}},function(module,exports,__webpack_require__){"use strict";var SDPUtils={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};SDPUtils.localCName=SDPUtils.generateIdentifier(),SDPUtils.splitLines=function(blob){return blob.trim().split("\n").map((function(line){return line.trim()}))},SDPUtils.splitSections=function(blob){return blob.split("\nm=").map((function(part,index){return(index>0?"m="+part:part).trim()+"\r\n"}))},SDPUtils.getDescription=function(blob){var sections=SDPUtils.splitSections(blob);return sections&&sections[0]},SDPUtils.getMediaSections=function(blob){var sections=SDPUtils.splitSections(blob);return sections.shift(),sections},SDPUtils.matchPrefix=function(blob,prefix){return SDPUtils.splitLines(blob).filter((function(line){return 0===line.indexOf(prefix)}))},SDPUtils.parseCandidate=function(line){for(var parts,candidate={foundation:(parts=0===line.indexOf("a=candidate:")?line.substring(12).split(" "):line.substring(10).split(" "))[0],component:parseInt(parts[1],10),protocol:parts[2].toLowerCase(),priority:parseInt(parts[3],10),ip:parts[4],address:parts[4],port:parseInt(parts[5],10),type:parts[7]},i=8;i<parts.length;i+=2)switch(parts[i]){case"raddr":candidate.relatedAddress=parts[i+1];break;case"rport":candidate.relatedPort=parseInt(parts[i+1],10);break;case"tcptype":candidate.tcpType=parts[i+1];break;case"ufrag":candidate.ufrag=parts[i+1],candidate.usernameFragment=parts[i+1];break;default:candidate[parts[i]]=parts[i+1]}return candidate},SDPUtils.writeCandidate=function(candidate){var sdp=[];sdp.push(candidate.foundation),sdp.push(candidate.component),sdp.push(candidate.protocol.toUpperCase()),sdp.push(candidate.priority),sdp.push(candidate.address||candidate.ip),sdp.push(candidate.port);var type=candidate.type;return sdp.push("typ"),sdp.push(type),"host"!==type&&candidate.relatedAddress&&candidate.relatedPort&&(sdp.push("raddr"),sdp.push(candidate.relatedAddress),sdp.push("rport"),sdp.push(candidate.relatedPort)),candidate.tcpType&&"tcp"===candidate.protocol.toLowerCase()&&(sdp.push("tcptype"),sdp.push(candidate.tcpType)),(candidate.usernameFragment||candidate.ufrag)&&(sdp.push("ufrag"),sdp.push(candidate.usernameFragment||candidate.ufrag)),"candidate:"+sdp.join(" ")},SDPUtils.parseIceOptions=function(line){return line.substr(14).split(" ")},SDPUtils.parseRtpMap=function(line){var parts=line.substr(9).split(" "),parsed={payloadType:parseInt(parts.shift(),10)};return parts=parts[0].split("/"),parsed.name=parts[0],parsed.clockRate=parseInt(parts[1],10),parsed.channels=3===parts.length?parseInt(parts[2],10):1,parsed.numChannels=parsed.channels,parsed},SDPUtils.writeRtpMap=function(codec){var pt=codec.payloadType;void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType);var channels=codec.channels||codec.numChannels||1;return"a=rtpmap:"+pt+" "+codec.name+"/"+codec.clockRate+(1!==channels?"/"+channels:"")+"\r\n"},SDPUtils.parseExtmap=function(line){var parts=line.substr(9).split(" ");return{id:parseInt(parts[0],10),direction:parts[0].indexOf("/")>0?parts[0].split("/")[1]:"sendrecv",uri:parts[1]}},SDPUtils.writeExtmap=function(headerExtension){return"a=extmap:"+(headerExtension.id||headerExtension.preferredId)+(headerExtension.direction&&"sendrecv"!==headerExtension.direction?"/"+headerExtension.direction:"")+" "+headerExtension.uri+"\r\n"},SDPUtils.parseFmtp=function(line){for(var kv,parsed={},parts=line.substr(line.indexOf(" ")+1).split(";"),j=0;j<parts.length;j++)parsed[(kv=parts[j].trim().split("="))[0].trim()]=kv[1];return parsed},SDPUtils.writeFmtp=function(codec){var line="",pt=codec.payloadType;if(void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType),codec.parameters&&Object.keys(codec.parameters).length){var params=[];Object.keys(codec.parameters).forEach((function(param){codec.parameters[param]?params.push(param+"="+codec.parameters[param]):params.push(param)})),line+="a=fmtp:"+pt+" "+params.join(";")+"\r\n"}return line},SDPUtils.parseRtcpFb=function(line){var parts=line.substr(line.indexOf(" ")+1).split(" ");return{type:parts.shift(),parameter:parts.join(" ")}},SDPUtils.writeRtcpFb=function(codec){var lines="",pt=codec.payloadType;return void 0!==codec.preferredPayloadType&&(pt=codec.preferredPayloadType),codec.rtcpFeedback&&codec.rtcpFeedback.length&&codec.rtcpFeedback.forEach((function(fb){lines+="a=rtcp-fb:"+pt+" "+fb.type+(fb.parameter&&fb.parameter.length?" "+fb.parameter:"")+"\r\n"})),lines},SDPUtils.parseSsrcMedia=function(line){var sp=line.indexOf(" "),parts={ssrc:parseInt(line.substr(7,sp-7),10)},colon=line.indexOf(":",sp);return colon>-1?(parts.attribute=line.substr(sp+1,colon-sp-1),parts.value=line.substr(colon+1)):parts.attribute=line.substr(sp+1),parts},SDPUtils.parseSsrcGroup=function(line){var parts=line.substr(13).split(" ");return{semantics:parts.shift(),ssrcs:parts.map((function(ssrc){return parseInt(ssrc,10)}))}},SDPUtils.getMid=function(mediaSection){var mid=SDPUtils.matchPrefix(mediaSection,"a=mid:")[0];if(mid)return mid.substr(6)},SDPUtils.parseFingerprint=function(line){var parts=line.substr(14).split(" ");return{algorithm:parts[0].toLowerCase(),value:parts[1]}},SDPUtils.getDtlsParameters=function(mediaSection,sessionpart){return{role:"auto",fingerprints:SDPUtils.matchPrefix(mediaSection+sessionpart,"a=fingerprint:").map(SDPUtils.parseFingerprint)}},SDPUtils.writeDtlsParameters=function(params,setupType){var sdp="a=setup:"+setupType+"\r\n";return params.fingerprints.forEach((function(fp){sdp+="a=fingerprint:"+fp.algorithm+" "+fp.value+"\r\n"})),sdp},SDPUtils.parseCryptoLine=function(line){var parts=line.substr(9).split(" ");return{tag:parseInt(parts[0],10),cryptoSuite:parts[1],keyParams:parts[2],sessionParams:parts.slice(3)}},SDPUtils.writeCryptoLine=function(parameters){return"a=crypto:"+parameters.tag+" "+parameters.cryptoSuite+" "+("object"==typeof parameters.keyParams?SDPUtils.writeCryptoKeyParams(parameters.keyParams):parameters.keyParams)+(parameters.sessionParams?" "+parameters.sessionParams.join(" "):"")+"\r\n"},SDPUtils.parseCryptoKeyParams=function(keyParams){if(0!==keyParams.indexOf("inline:"))return null;var parts=keyParams.substr(7).split("|");return{keyMethod:"inline",keySalt:parts[0],lifeTime:parts[1],mkiValue:parts[2]?parts[2].split(":")[0]:void 0,mkiLength:parts[2]?parts[2].split(":")[1]:void 0}},SDPUtils.writeCryptoKeyParams=function(keyParams){return keyParams.keyMethod+":"+keyParams.keySalt+(keyParams.lifeTime?"|"+keyParams.lifeTime:"")+(keyParams.mkiValue&&keyParams.mkiLength?"|"+keyParams.mkiValue+":"+keyParams.mkiLength:"")},SDPUtils.getCryptoParameters=function(mediaSection,sessionpart){return SDPUtils.matchPrefix(mediaSection+sessionpart,"a=crypto:").map(SDPUtils.parseCryptoLine)},SDPUtils.getIceParameters=function(mediaSection,sessionpart){var ufrag=SDPUtils.matchPrefix(mediaSection+sessionpart,"a=ice-ufrag:")[0],pwd=SDPUtils.matchPrefix(mediaSection+sessionpart,"a=ice-pwd:")[0];return ufrag&&pwd?{usernameFragment:ufrag.substr(12),password:pwd.substr(10)}:null},SDPUtils.writeIceParameters=function(params){return"a=ice-ufrag:"+params.usernameFragment+"\r\na=ice-pwd:"+params.password+"\r\n"},SDPUtils.parseRtpParameters=function(mediaSection){for(var description={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},mline=SDPUtils.splitLines(mediaSection)[0].split(" "),i=3;i<mline.length;i++){var pt=mline[i],rtpmapline=SDPUtils.matchPrefix(mediaSection,"a=rtpmap:"+pt+" ")[0];if(rtpmapline){var codec=SDPUtils.parseRtpMap(rtpmapline),fmtps=SDPUtils.matchPrefix(mediaSection,"a=fmtp:"+pt+" ");switch(codec.parameters=fmtps.length?SDPUtils.parseFmtp(fmtps[0]):{},codec.rtcpFeedback=SDPUtils.matchPrefix(mediaSection,"a=rtcp-fb:"+pt+" ").map(SDPUtils.parseRtcpFb),description.codecs.push(codec),codec.name.toUpperCase()){case"RED":case"ULPFEC":description.fecMechanisms.push(codec.name.toUpperCase())}}}return SDPUtils.matchPrefix(mediaSection,"a=extmap:").forEach((function(line){description.headerExtensions.push(SDPUtils.parseExtmap(line))})),description},SDPUtils.writeRtpDescription=function(kind,caps){var sdp="";sdp+="m="+kind+" ",sdp+=caps.codecs.length>0?"9":"0",sdp+=" UDP/TLS/RTP/SAVPF ",sdp+=caps.codecs.map((function(codec){return void 0!==codec.preferredPayloadType?codec.preferredPayloadType:codec.payloadType})).join(" ")+"\r\n",sdp+="c=IN IP4 0.0.0.0\r\n",sdp+="a=rtcp:9 IN IP4 0.0.0.0\r\n",caps.codecs.forEach((function(codec){sdp+=SDPUtils.writeRtpMap(codec),sdp+=SDPUtils.writeFmtp(codec),sdp+=SDPUtils.writeRtcpFb(codec)}));var maxptime=0;return caps.codecs.forEach((function(codec){codec.maxptime>maxptime&&(maxptime=codec.maxptime)})),maxptime>0&&(sdp+="a=maxptime:"+maxptime+"\r\n"),sdp+="a=rtcp-mux\r\n",caps.headerExtensions&&caps.headerExtensions.forEach((function(extension){sdp+=SDPUtils.writeExtmap(extension)})),sdp},SDPUtils.parseRtpEncodingParameters=function(mediaSection){var secondarySsrc,encodingParameters=[],description=SDPUtils.parseRtpParameters(mediaSection),hasRed=-1!==description.fecMechanisms.indexOf("RED"),hasUlpfec=-1!==description.fecMechanisms.indexOf("ULPFEC"),ssrcs=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(parts){return"cname"===parts.attribute})),primarySsrc=ssrcs.length>0&&ssrcs[0].ssrc,flows=SDPUtils.matchPrefix(mediaSection,"a=ssrc-group:FID").map((function(line){return line.substr(17).split(" ").map((function(part){return parseInt(part,10)}))}));flows.length>0&&flows[0].length>1&&flows[0][0]===primarySsrc&&(secondarySsrc=flows[0][1]),description.codecs.forEach((function(codec){if("RTX"===codec.name.toUpperCase()&&codec.parameters.apt){var encParam={ssrc:primarySsrc,codecPayloadType:parseInt(codec.parameters.apt,10)};primarySsrc&&secondarySsrc&&(encParam.rtx={ssrc:secondarySsrc}),encodingParameters.push(encParam),hasRed&&((encParam=JSON.parse(JSON.stringify(encParam))).fec={ssrc:primarySsrc,mechanism:hasUlpfec?"red+ulpfec":"red"},encodingParameters.push(encParam))}})),0===encodingParameters.length&&primarySsrc&&encodingParameters.push({ssrc:primarySsrc});var bandwidth=SDPUtils.matchPrefix(mediaSection,"b=");return bandwidth.length&&(bandwidth=0===bandwidth[0].indexOf("b=TIAS:")?parseInt(bandwidth[0].substr(7),10):0===bandwidth[0].indexOf("b=AS:")?1e3*parseInt(bandwidth[0].substr(5),10)*.95-16e3:void 0,encodingParameters.forEach((function(params){params.maxBitrate=bandwidth}))),encodingParameters},SDPUtils.parseRtcpParameters=function(mediaSection){var rtcpParameters={},remoteSsrc=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(obj){return"cname"===obj.attribute}))[0];remoteSsrc&&(rtcpParameters.cname=remoteSsrc.value,rtcpParameters.ssrc=remoteSsrc.ssrc);var rsize=SDPUtils.matchPrefix(mediaSection,"a=rtcp-rsize");rtcpParameters.reducedSize=rsize.length>0,rtcpParameters.compound=0===rsize.length;var mux=SDPUtils.matchPrefix(mediaSection,"a=rtcp-mux");return rtcpParameters.mux=mux.length>0,rtcpParameters},SDPUtils.parseMsid=function(mediaSection){var parts,spec=SDPUtils.matchPrefix(mediaSection,"a=msid:");if(1===spec.length)return{stream:(parts=spec[0].substr(7).split(" "))[0],track:parts[1]};var planB=SDPUtils.matchPrefix(mediaSection,"a=ssrc:").map((function(line){return SDPUtils.parseSsrcMedia(line)})).filter((function(msidParts){return"msid"===msidParts.attribute}));return planB.length>0?{stream:(parts=planB[0].value.split(" "))[0],track:parts[1]}:void 0},SDPUtils.parseSctpDescription=function(mediaSection){var maxMessageSize,mline=SDPUtils.parseMLine(mediaSection),maxSizeLine=SDPUtils.matchPrefix(mediaSection,"a=max-message-size:");maxSizeLine.length>0&&(maxMessageSize=parseInt(maxSizeLine[0].substr(19),10)),isNaN(maxMessageSize)&&(maxMessageSize=65536);var sctpPort=SDPUtils.matchPrefix(mediaSection,"a=sctp-port:");if(sctpPort.length>0)return{port:parseInt(sctpPort[0].substr(12),10),protocol:mline.fmt,maxMessageSize:maxMessageSize};if(SDPUtils.matchPrefix(mediaSection,"a=sctpmap:").length>0){var parts=SDPUtils.matchPrefix(mediaSection,"a=sctpmap:")[0].substr(10).split(" ");return{port:parseInt(parts[0],10),protocol:parts[1],maxMessageSize:maxMessageSize}}},SDPUtils.writeSctpDescription=function(media,sctp){var output=[];return output="DTLS/SCTP"!==media.protocol?["m="+media.kind+" 9 "+media.protocol+" "+sctp.protocol+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctp-port:"+sctp.port+"\r\n"]:["m="+media.kind+" 9 "+media.protocol+" "+sctp.port+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctpmap:"+sctp.port+" "+sctp.protocol+" 65535\r\n"],void 0!==sctp.maxMessageSize&&output.push("a=max-message-size:"+sctp.maxMessageSize+"\r\n"),output.join("")},SDPUtils.generateSessionId=function(){return Math.random().toString().substr(2,21)},SDPUtils.writeSessionBoilerplate=function(sessId,sessVer,sessUser){var version=void 0!==sessVer?sessVer:2;return"v=0\r\no="+(sessUser||"thisisadapterortc")+" "+(sessId||SDPUtils.generateSessionId())+" "+version+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},SDPUtils.writeMediaSection=function(transceiver,caps,type,stream){var sdp=SDPUtils.writeRtpDescription(transceiver.kind,caps);if(sdp+=SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()),sdp+=SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(),"offer"===type?"actpass":"active"),sdp+="a=mid:"+transceiver.mid+"\r\n",transceiver.direction?sdp+="a="+transceiver.direction+"\r\n":transceiver.rtpSender&&transceiver.rtpReceiver?sdp+="a=sendrecv\r\n":transceiver.rtpSender?sdp+="a=sendonly\r\n":transceiver.rtpReceiver?sdp+="a=recvonly\r\n":sdp+="a=inactive\r\n",transceiver.rtpSender){var msid="msid:"+stream.id+" "+transceiver.rtpSender.track.id+"\r\n";sdp+="a="+msid,sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" "+msid,transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" "+msid,sdp+="a=ssrc-group:FID "+transceiver.sendEncodingParameters[0].ssrc+" "+transceiver.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" cname:"+SDPUtils.localCName+"\r\n",transceiver.rtpSender&&transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" cname:"+SDPUtils.localCName+"\r\n"),sdp},SDPUtils.getDirection=function(mediaSection,sessionpart){for(var lines=SDPUtils.splitLines(mediaSection),i=0;i<lines.length;i++)switch(lines[i]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return lines[i].substr(2)}return sessionpart?SDPUtils.getDirection(sessionpart):"sendrecv"},SDPUtils.getKind=function(mediaSection){return SDPUtils.splitLines(mediaSection)[0].split(" ")[0].substr(2)},SDPUtils.isRejected=function(mediaSection){return"0"===mediaSection.split(" ",2)[1]},SDPUtils.parseMLine=function(mediaSection){var parts=SDPUtils.splitLines(mediaSection)[0].substr(2).split(" ");return{kind:parts[0],port:parseInt(parts[1],10),protocol:parts[2],fmt:parts.slice(3).join(" ")}},SDPUtils.parseOLine=function(mediaSection){var parts=SDPUtils.matchPrefix(mediaSection,"o=")[0].substr(2).split(" ");return{username:parts[0],sessionId:parts[1],sessionVersion:parseInt(parts[2],10),netType:parts[3],addressType:parts[4],address:parts[5]}},SDPUtils.isValidSDP=function(blob){if("string"!=typeof blob||0===blob.length)return!1;for(var lines=SDPUtils.splitLines(blob),i=0;i<lines.length;i++)if(lines[i].length<2||"="!==lines[i].charAt(1))return!1;return!0},module.exports=SDPUtils},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return empty}));var _config__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(27),_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(61),empty={closed:!0,next:function(value){},error:function(err){if(_config__WEBPACK_IMPORTED_MODULE_0__.a.useDeprecatedSynchronousErrorHandling)throw err;Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__.a)(err)},complete:function(){}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var canReportError_1=__webpack_require__(372),toSubscriber_1=__webpack_require__(376),observable_1=__webpack_require__(377),pipe_1=__webpack_require__(378),config_1=__webpack_require__(136),Observable=function(){function Observable(subscribe){this._isScalar=!1,subscribe&&(this._subscribe=subscribe)}return Observable.prototype.lift=function(operator){var observable=new Observable;return observable.source=this,observable.operator=operator,observable},Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator,sink=toSubscriber_1.toSubscriber(observerOrNext,error,complete);if(operator?sink.add(operator.call(sink,this.source)):sink.add(this.source||config_1.config.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink)),config_1.config.useDeprecatedSynchronousErrorHandling&&sink.syncErrorThrowable&&(sink.syncErrorThrowable=!1,sink.syncErrorThrown))throw sink.syncErrorValue;return sink},Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){config_1.config.useDeprecatedSynchronousErrorHandling&&(sink.syncErrorThrown=!0,sink.syncErrorValue=err),canReportError_1.canReportError(sink)?sink.error(err):console.warn(err)}},Observable.prototype.forEach=function(next,promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var subscription;subscription=_this.subscribe((function(value){try{next(value)}catch(err){reject(err),subscription&&subscription.unsubscribe()}}),reject,resolve)}))},Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber)},Observable.prototype[observable_1.observable]=function(){return this},Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++)operations[_i]=arguments[_i];return 0===operations.length?this:pipe_1.pipeFromArray(operations)(this)},Observable.prototype.toPromise=function(promiseCtor){var _this=this;return new(promiseCtor=getPromiseCtor(promiseCtor))((function(resolve,reject){var value;_this.subscribe((function(x){return value=x}),(function(err){return reject(err)}),(function(){return resolve(value)}))}))},Observable.create=function(subscribe){return new Observable(subscribe)},Observable}();function getPromiseCtor(promiseCtor){if(promiseCtor||(promiseCtor=config_1.config.Promise||Promise),!promiseCtor)throw new Error("no Promise impl found");return promiseCtor}exports.Observable=Observable},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var isFunction_1=__webpack_require__(157),Observer_1=__webpack_require__(158),Subscription_1=__webpack_require__(78),rxSubscriber_1=__webpack_require__(137),config_1=__webpack_require__(136),hostReportError_1=__webpack_require__(159),Subscriber=function(_super){function Subscriber(destinationOrNext,error,complete){var _this=_super.call(this)||this;switch(_this.syncErrorValue=null,_this.syncErrorThrown=!1,_this.syncErrorThrowable=!1,_this.isStopped=!1,arguments.length){case 0:_this.destination=Observer_1.empty;break;case 1:if(!destinationOrNext){_this.destination=Observer_1.empty;break}if("object"==typeof destinationOrNext){destinationOrNext instanceof Subscriber?(_this.syncErrorThrowable=destinationOrNext.syncErrorThrowable,_this.destination=destinationOrNext,destinationOrNext.add(_this)):(_this.syncErrorThrowable=!0,_this.destination=new SafeSubscriber(_this,destinationOrNext));break}default:_this.syncErrorThrowable=!0,_this.destination=new SafeSubscriber(_this,destinationOrNext,error,complete)}return _this}return __extends(Subscriber,_super),Subscriber.prototype[rxSubscriber_1.rxSubscriber]=function(){return this},Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);return subscriber.syncErrorThrowable=!1,subscriber},Subscriber.prototype.next=function(value){this.isStopped||this._next(value)},Subscriber.prototype.error=function(err){this.isStopped||(this.isStopped=!0,this._error(err))},Subscriber.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},Subscriber.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,_super.prototype.unsubscribe.call(this))},Subscriber.prototype._next=function(value){this.destination.next(value)},Subscriber.prototype._error=function(err){this.destination.error(err),this.unsubscribe()},Subscriber.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},Subscriber.prototype._unsubscribeAndRecycle=function(){var _parentOrParents=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=_parentOrParents,this},Subscriber}(Subscription_1.Subscription);exports.Subscriber=Subscriber;var SafeSubscriber=function(_super){function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){var next,_this=_super.call(this)||this;_this._parentSubscriber=_parentSubscriber;var context=_this;return isFunction_1.isFunction(observerOrNext)?next=observerOrNext:observerOrNext&&(next=observerOrNext.next,error=observerOrNext.error,complete=observerOrNext.complete,observerOrNext!==Observer_1.empty&&(context=Object.create(observerOrNext),isFunction_1.isFunction(context.unsubscribe)&&_this.add(context.unsubscribe.bind(context)),context.unsubscribe=_this.unsubscribe.bind(_this))),_this._context=context,_this._next=next,_this._error=error,_this._complete=complete,_this}return __extends(SafeSubscriber,_super),SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;config_1.config.useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?this.__tryOrSetError(_parentSubscriber,this._next,value)&&this.unsubscribe():this.__tryOrUnsub(this._next,value)}},SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber,useDeprecatedSynchronousErrorHandling=config_1.config.useDeprecatedSynchronousErrorHandling;if(this._error)useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,this._error,err),this.unsubscribe()):(this.__tryOrUnsub(this._error,err),this.unsubscribe());else if(_parentSubscriber.syncErrorThrowable)useDeprecatedSynchronousErrorHandling?(_parentSubscriber.syncErrorValue=err,_parentSubscriber.syncErrorThrown=!0):hostReportError_1.hostReportError(err),this.unsubscribe();else{if(this.unsubscribe(),useDeprecatedSynchronousErrorHandling)throw err;hostReportError_1.hostReportError(err)}}},SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function(){return _this._complete.call(_this._context)};config_1.config.useDeprecatedSynchronousErrorHandling&&_parentSubscriber.syncErrorThrowable?(this.__tryOrSetError(_parentSubscriber,wrappedComplete),this.unsubscribe()):(this.__tryOrUnsub(wrappedComplete),this.unsubscribe())}else this.unsubscribe()}},SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value)}catch(err){if(this.unsubscribe(),config_1.config.useDeprecatedSynchronousErrorHandling)throw err;hostReportError_1.hostReportError(err)}},SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){if(!config_1.config.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{fn.call(this._context,value)}catch(err){return config_1.config.useDeprecatedSynchronousErrorHandling?(parent.syncErrorValue=err,parent.syncErrorThrown=!0,!0):(hostReportError_1.hostReportError(err),!0)}return!1},SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null,this._parentSubscriber=null,_parentSubscriber.unsubscribe()},SafeSubscriber}(Subscriber);exports.SafeSubscriber=SafeSubscriber},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const call_model_1=__webpack_require__(29),rxjs_1=__webpack_require__(7),message_1=__webpack_require__(67);exports.ConversationCapabilities=class{constructor(){this.telephony=!1,this.webRTC=!1,this.sharedDesktop=!1,this.fileTransfert=!1,this.mediaAvailable=!1,this.addMedia=!1}};class ConversationMissedInfoCounters{constructor(){this.missedIMCounter=0,this.missedIMDetails=[]}static create(){return new ConversationMissedInfoCounters}}exports.ConversationMissedInfoCounters=ConversationMissedInfoCounters;exports.ConversationBookmark=class{constructor(){this.messageId="",this.timestamp=-1}};class Conversation{constructor(conversationId){this.id=null,this.dbId=null,this.type=null,this.name="",this.filterName="",this.contact=null,this.room=null,this.avatar="",this.infoVisible=!0,this.owner=null,this.capabilities=null,this.presenceStatus=null,this.missedCounter=0,this.missedCalls=0,this.messages=[],this.participantStatuses={},this.status=Conversation.Status.INACTIVE,this.historyIndex=-1,this.number=-1,this.historyMessages=[],this.historyDefered=null,this.historyAboveComplete=!1,this.historyBelowComplete=!1,this.currentHistoryId=null,this.lastModification=void 0,this.creationDate=void 0,this.lastMessageText="",this.lastMessageSender="",this.lastMessageSide="",this.lastMessageContentType="",this.forwardFrom=null,this.forwardedMessage=null,this.replaceLastMsgId="",this.pip=!0,this.showVideoGallery=!0,this.videoCall=null,this.audioCall=null,this.pstnConferenceSession=null,this.webConferenceSession=null,this.muted=!1,this.isMutedAudio=!1,this.isMutedVideo=!1,this.largeInfoVisible=!0,this.selectedTabName="chat",this.isFavorite=!1,this.lastEditableMsg=null,this.cacheMessages=[],this.rxSubject=new rxjs_1.Subject,this.msgLevelDraft="standard",this.innerHtml="",this.mentionedMembersArray=[],this.telephonyContacts=null,this.isFullScreenNoChat=!1,this.isWebinarConversation=!1,this.webinar=null,this.preload=!1,this.lastCallInfo=null,this.chatRenderer=null,this.isForwardedMessageFile=!1,this.isGeoLoc=!1,this._bookmark=null,this._shouldRemoveBookMark=!1,this.ackReadAllSentMessages=function(){this.messages.forEach(message=>{"R"!==message.side||message.receiptStatus!==message_1.Message.ReceiptStatus.SENT&&message.receiptStatus!==message_1.Message.ReceiptStatus.UNREAD||(message.setReceiptStatus(message_1.Message.ReceiptStatus.READ),message.sendUpdateEvent())})},this.id=conversationId,this.dbId=null,this.type=null,this.owner=null,this.contact=null,this.room=null,this.capabilities=null,this.avatar=null,this.presenceStatus=null,this.filterName="",this.missedCounter=0,this.missedCalls=0,this.messages=[],this.participantStatuses={},this.status=Conversation.Status.INACTIVE,this.historyIndex=-1,this.historyLastIndex=-1,this.historyMessages=[],this.historyDefered=null,this.historyAboveComplete=!1,this.historyBelowComplete=!1,this.lastModification=void 0,this.creationDate=new Date,this.lastMessageText="",this.lastMessageContentType="",this.isForwardedMessageFile=!1,this.lastMessageSender="",this.lastMessageSide="",this.forwardFrom=null,this.forwardedMessage=null,this.replaceLastMsgId="",this.pip=!0,this.showVideoGallery=!0,this.videoCall={status:call_model_1.Call.Status.UNKNOWN},this.audioCall=null,this.pstnConferenceSession=null,this.webConferenceSession=null,this.muted=!1,this.isMutedAudio=!1,this.isMutedVideo=!1,this.infoVisible=!1,this.largeInfoVisible=!0,this.selectedTabName="chat",this.isFavorite=!1,this.lastEditableMsg=null,this.cacheMessages=[],this.rxSubject=new rxjs_1.Subject,this.msgLevelDraft="standard",this.innerHtml="",this.mentionedMembersArray=[],this.telephonyContacts=null,this.isFullScreenNoChat=!1,this.isWebinarConversation=!1,this.webinar=null,this.bookmark=null,this.shouldRemoveBookMark=!1}static createOneToOneConversation(contact){const conversation=new Conversation(contact.id);return conversation.contact=contact,conversation.name=contact.name,conversation.type=contact.isBot?Conversation.Type.BOT:Conversation.Type.ONE_TO_ONE,conversation.infoVisible=contact.isBot,conversation.avatar=contact.avatar&&!contact.isBot?contact.avatar.src:null,conversation.filterName=contact.displayName?contact.displayName.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,""):null,contact.conversation=conversation,conversation}static createRoomConversation(room){const conversation=new Conversation(room.jid);return conversation.type=Conversation.Type.ROOM,conversation.room=room,conversation.filterName=room.name.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,""),conversation.infoVisible=!0,conversation}static getUniqueMessageId(){return"web_"+Conversation.randomBase+Conversation.messageId++}static stringToStatus(status){switch(status){case"composing":return Conversation.Status.COMPOSING;case"paused":return Conversation.Status.PAUSED;default:return Conversation.Status.ACTIVE}}get bookmark(){return this._bookmark}set bookmark(value){this._bookmark=value,this.rxSubject.next({name:"bookmark"})}get shouldRemoveBookMark(){return this._shouldRemoveBookMark}set shouldRemoveBookMark(value){this._shouldRemoveBookMark=value,this.rxSubject.next({name:"bookmark"})}getMessageInCacheById(messId){return this.cacheMessages.find(item=>item.id===messId)}getMessageById(messId,searchInCache=!1){if(searchInCache){const foundMsg=this.getMessageInCacheById(messId);if(foundMsg)return foundMsg}return this.messages.find(item=>item.id===messId)}getMessageByIdInHistory(messId){return this.historyMessages.find(item=>item.id===messId)}getReplacedMessageById(messId){let message=null;return this.messages.forEach(msg=>{message=msg.replaceMsgs.find(replaceMsg=>replaceMsg.id===messId)}),message}reset(){this.messages=[],this.historyIndex=-1,this.historyLastIndex=-1,this.historyMessages=[],this.historyAboveComplete=!1,this.historyBelowComplete=!1,this.currentHistoryId=null,this.lastMessageText=null,this.lastMessageContentType=null,this.rxSubject.next({name:"appendMessage"})}subscribe(callback){return this.rxSubject.subscribe(callback)}setMissedCounter(missedCounter){this.missedCounter=missedCounter,this.rxSubject.next({name:"missedCounter",value:missedCounter})}shortnameToUnicode(data){return emojione?emojione.shortnameToUnicode(data):data}isActive(){return this.videoCall&&this.videoCall.status&&"active"===this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"active"===this.audioCall.status.value}isHeld(){return this.videoCall&&this.videoCall.status&&"held"===this.videoCall.status.value||this.audioCall&&this.audioCall.status&&"held"===this.audioCall.status.value}isAudioCallIncomming(){return this.audioCall&&this.audioCall.status&&("queuedIncomming"===this.audioCall.status.value||"incommingCall"===this.audioCall.status.value)}addMessageInHistoryMessages(message){if(message&&(this.historyMessages.push(message),message.side===message_1.Message.Side.RIGHT&&message.type===message_1.Message.Type.CHAT))if(this.lastEditableMsg){if(message.date.getTime()>this.lastEditableMsg.date.getTime()){const oldEditableMsg=this.lastEditableMsg;this.lastEditableMsg=message,oldEditableMsg&&oldEditableMsg.sendUpdateEvent()}}else this.lastEditableMsg=message}addMessageInCacheMessages(message){if(!message)return;this.getMessageInCacheById(message.id)||(this.cacheMessages.push(message),this.rxSubject.next({name:"cachedMessage",message:message}))}removeMessage(message){const index=this.messages.lastIndexOf(message);-1!==index&&this.messages.splice(index,1)}ackReceivedAllSentMessages(){this.messages.forEach(message=>{"R"===message.side&&message.receiptStatus===message_1.Message.ReceiptStatus.SENT&&(message.setReceiptStatus(message_1.Message.ReceiptStatus.UNREAD),message.sendUpdateEvent())})}ackReadAllReceivedMessages(){let result=!1;return this.messages.forEach(message=>{"R"===message.side||message.receiptStatus!==message_1.Message.ReceiptStatus.SENT&&message.receiptStatus!==message_1.Message.ReceiptStatus.UNREAD||(message.setReceiptStatus(message_1.Message.ReceiptStatus.READ),message.sendUpdateEvent(),result=!0)}),result}updateAfterReplaceEvent(message){const lastMsg=this.messages[this.messages.length-1];lastMsg&&lastMsg.id===message.id&&(this.lastModification=new Date,this.lastMessageText=message.getLastTextModified(),this.lastMessageSender=message.from.id,this.replaceLastMsgId=lastMsg.id),this.rxSubject.next({name:"replaceMessage",message:message})}}Conversation.randomBase=crypto.randomUUID(),Conversation.messageId=0,Conversation.ChatstatesNS="http://jabber.org/protocol/chatstates",Conversation.ReceiptNS="urn:xmpp:receipts",Conversation.contentNS="urn:xmpp:content",Conversation.AttentionNS="urn:xmpp:attention:0",Conversation.FORWARDNS="urn:xmpp:forward:0",Conversation.Type={ONE_TO_ONE:0,ROOM:1,BOT:2},Conversation.EventType={NEW:0,IM:1,CAPABILITIES:2,FILE:3},Conversation.Status={ACTIVE:{key:0,value:"active"},INACTIVE:{key:1,value:"inactive"},COMPOSING:{key:2,value:"composing"},PAUSED:{key:3,value:"paused"}},exports.Conversation=Conversation},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),webConferenceSession_model_1=__webpack_require__(423),auth_service_1=__webpack_require__(8),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),errorHelper_service_1=__webpack_require__(12),uuid4=__webpack_require__(171),main_service_1=__webpack_require__(15),webConferenceParticipant_model_1=__webpack_require__(426),event_service_1=__webpack_require__(11),webConferenceHelper_1=__webpack_require__(427),virtualBackground_service_1=__webpack_require__(68),webrtcConfigAndUtils_1=__webpack_require__(44),settings_service_1=__webpack_require__(18),webrtcP2P_service_1=__webpack_require__(35),deviceManagement_service_1=__webpack_require__(56);class SdkApis{constructor(start=null,stop=null,reconnect=null){this.start=start,this.stop=stop,this.reconnect=reconnect}}exports.SdkApis=SdkApis;class WebConferenceServiceV2{constructor(){this._sdkApis=Object.keys(new SdkApis),this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED="rainbowonwebconferencestatusupdated",this.RAINBOW_ONWEBCONFERENCEPARTICIPANTLISTUPDATED="rainbowonwebconferenceparticipantlistupdated",this.RAINBOW_ONWEBCONFERENCEPARTICIPANTADDED="rainbowonwebconferenceparticipantadded",this.RAINBOW_ONWEBCONFERENCEPUBLISHERSADDED="rainbowonwebconferencepublishersadded",this.RAINBOW_ONWEBCONFERENCEPUBLISHERSREMOVED="rainbowonwebconferencepublishersremoved",this.RAINBOW_ONWEBCONFERENCELOCKSTATEUPDATED="rainbowonwebconferencelockstateupdated",this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE="rainbowonwebconferencelocalmediaupdate",this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE="rainbowonwebconferenceremotemediaupdate",this.RAINBOW_ONWEBCONFERENCEREPARTICIPANTAUPDATE="rainbowonwebconferenceparticipantupdate",this.RAINBOW_ONWEBCONFERENCERETALKERAUPDATE="rainbowonwebconferencetalkerupdate",this.RAINBOW_ONWEBCONFERENCEDELEGATED="rainbowonwebconferencedelegated",this.RAINBOW_ONWEBCONFERENCESTARTEDEVENT="RAINBOW_ONWEBCONFERENCESTARTEDEVENT",this.RAINBOW_ONWEBCONFERENCESERVICEUPDATE="rainbowonwebconferenceserviceupdate",this.webConferenceSessions={},this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.virtualBackgroundService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.rxSubject=new rxjs_1.Subject,this.conferenceRef=null,this.makingCall=!1,this.addingMedia=!1,this.connected=!1,this.xmppServiceSubscription=null,this.xmppConnectionSubscription=null,this.subscriptions=[],this.eventServiceSubscriptions=[],this.statsIntervals=[],this.reconnectionsInProgress={},this.audioProfileChanging=!1,this.promiseInProgress=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webConferenceServiceV2||(win.rainbow.webConferenceServiceV2=new WebConferenceServiceV2),win.rainbow.webConferenceServiceV2}async start(){!this.contactService.userContact||this.contactService.userContact.roomsEnabled?(this.attachHandlers(),this.webConferenceHelper=new webConferenceHelper_1.WebConferenceHelper(this),this.webConferenceHelper.start(),this.connected=!0):this.logger.info("[WebConferenceServiceV2] === start skipped - rooms are disabled for this contact")}async stop(){for(;this.statsIntervals.length;){let statsInterval=this.statsIntervals.pop();statsInterval&&(clearInterval(statsInterval),statsInterval=null)}this.eventServiceSubscriptions.forEach(listener=>{listener()}),this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.eventServiceSubscriptions=[],this.subscriptions=[],this.conferenceRef&&(this.xmppService.connection.deleteHandler(this.conferenceRef),this.conferenceRef=null),this.xmppServiceSubscription&&(this.xmppServiceSubscription.unsubscribe(),this.xmppServiceSubscription=null),this.xmppConnectionSubscription&&(this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=null),this.webConferenceHelper&&(this.webConferenceHelper.stop(),this.webConferenceHelper=null)}async reconnect(){}attachXmppHandlers(){this.conferenceRef&&(this.xmppService.connection.deleteHandler(this.conferenceRef),this.conferenceRef=null),this.conferenceRef=this.xmppService.connection.addHandler(stanza=>(this.onConferenceMessage(stanza),!0),"jabber:iq:conference:2","message",null),this.xmppServiceSubscription&&(this.xmppServiceSubscription.unsubscribe(),this.xmppServiceSubscription=null),this.xmppServiceSubscription=this.xmppService.connection.jingle.rxSubject.subscribe(event=>{try{this.onJingleMessage(event)}catch(error){this.logger.error("[WebConferenceServiceV2] onJingleMessage error -- "+error)}})}subscribe(handler){return this.rxSubject.subscribe(handler)}sendCustomEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}attachVideoSessionToHtmlElement(elementId,videoSession){if(!elementId||!videoSession)throw Error("attachVideoSessionToHtmlElement -- missing or wrong paramerets");this.webrtcConfigAndUtils.RTC.attachSessionMediaToElement(elementId,videoSession)}getConferenceLeaderContact(webConferenceSession){if(!webConferenceSession||!webConferenceSession.room)throw Error("getConferenceLeaderContact -- missing or wrong parameters");const dbId=webConferenceSession.room.getWebConferenceOwnerId();let contact;return dbId&&(contact=this.contactService.getContactById(dbId)),contact}setHelperServiceConfiguration(disableDynamicFeed=!1,disableAutoSubscriptions=!1){this.webConferenceHelper.setConfiguration(disableDynamicFeed,disableAutoSubscriptions)}attachHandlers(){this.logger.info("[WebConferenceServiceV2] attachHandlers"),this.attachXmppHandlers(),this.xmppConnectionSubscription&&(this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=null),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{try{"ON_XMPP_DISCONNECTED"===event.name?(this.logger.info("[WebConferenceServiceV2] onConnectionStateChangeEvent : disconnected"),this.connected=!1):"ON_XMPP_CONNECTED"===event.name&&"RECONNECTION"===event.data.reason&&(this.logger.info("[WebConferenceServiceV2] onConnectionStateChangeEvent : reconnected"),this.attachXmppHandlers(),this.connected=!0,this.reconnectActiveConferenceSession())}catch(error){this.logger.error("[WebConferenceServiceV2] onConnectionStateChangeEvent error : "+error)}}),this.eventServiceSubscriptions.push(this.eventService.subscribe("ROOM_CONFERENCE_DELEGATE_EVENT",(__event,roomId,userId)=>{this.onConferenceDelegated(roomId,userId)})),this.eventServiceSubscriptions.push(this.eventService.subscribe("ON_WEBCONFERENCE_STARTED_INVITATION",(__event,room)=>{this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTARTEDEVENT,{room:room})})),this.eventServiceSubscriptions.push(this.eventService.subscribe("ON_AUDIO_STREAM_TRACK_ENDED",async()=>{setTimeout(()=>{this.logger.info("[WebConferenceService] ON_AUDIO_STREAM_TRACK_ENDED"),this.onAudioInputDeviceChange()},1e4)})),this.subscriptions.push(this.virtualBackgroundService.rxSubject.subscribe(event=>{"UPDATE_STREAM"===event.name&&this.onReplaceBackgroundChangeEvent(event)})),this.subscriptions.push(this.webrtcP2PService.subscribe(event=>{this.onWebrtcP2PService(event)})),this.subscriptions.push(this.deviceManagementService.subscribe(event=>{try{event.name===this.deviceManagementService.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED&&("audioinput"===event.data.kind?this.onAudioInputDeviceChange():"videoinput"===event.data.kind&&this.onVideoInputDeviceChange())}catch{}}))}getWebConferenceSessionById(id=null){return this.webConferenceSessions[id]}hasActiveWebConferenceSession(){let result=!1;return this.webConferenceSessions&&Object.keys(this.webConferenceSessions).forEach(key=>{this.webConferenceSessions[key]&&this.webConferenceSessions[key].haveJoined&&(result=!0)}),result}getActiveWebConferenceSession(){let webConferenceSession=null;return this.webConferenceSessions&&Object.keys(this.webConferenceSessions).forEach(key=>{this.webConferenceSessions[key]&&this.webConferenceSessions[key].haveJoined&&(webConferenceSession=this.webConferenceSessions[key])}),webConferenceSession}async stopWebConference(room){try{if(this.logger.debug("[WebConferenceServiceV2] stopWebConference"),!room)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/stop`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] stopWebConference -- successfully"),this.webConferenceSessions[room.dbId]&&this.removeActiveConferenceSession(this.webConferenceSessions[room.dbId])}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopWebConference");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async startOrJoinWebConference(room){if(!room)throw Error("Wrong or missing parameters");return room.isWebConferenceV2Room()?this.joinWebConference(room):this.startWebConference(room)}async startWebConference(room){try{if(!room)throw Error("Wrong or missing parameters");if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED))throw Error("[WebConferenceServiceV2] startWebConference -- User does not have the profile feature WEBRTC_CONFERENCE_ALLOWED");this.logger.debug("[WebConferenceServiceV2] startWebConference -- "+room.dbId);const params={};(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_GRID49)||this.settingsService.getBooleanSetting("grid49"))&&(this.logger.info("[WebConferenceServiceV2] startWebConference -- activate grid 49"),params.services=["video-compositor"]);const body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/start`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;if(this.logger.info("[WebConferenceServiceV2] startWebConference -- successfully"),!this.webConferenceSessions[room.dbId]){const webConferenceSession=new webConferenceSession_model_1.WebConferenceSession(room.dbId,room);this.webConferenceSessions[room.dbId]=webConferenceSession}return this.webConferenceSessions[room.dbId].isMyConference=!0,"connecting"!==this.webConferenceSessions[room.dbId].status&&(this.webConferenceSessions[room.dbId].status="connecting",this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"connecting"})),this.joinWebConference(room)}catch(error){this.resetBusyStateIfNeeded();const errorInfo=await this.errorHelperService.getErrorInfo(error,"startWebConference");this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message);const data={popupTitle:"unableToJoin",popupBody:"joinMeetingFailure",okLabel:"ok"};throw this.mainService.showGlobalPopupMessage(data),errorInfo.error}}async joinWebConferenceWithoutAudio(room){try{if(this.makingCall)throw this.logger.warn("[WebConferenceServiceV2] joinWebConferenceWithoutAudio -- already joining a conference"),Error("Joining web conference in progress");if(!room)throw Error("Wrong or missing parameters");if(this.logger.debug("[WebConferenceServiceV2] joinWebConferenceWithoutAudio -- "+room.dbId),this.makingCall=!0,this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",room.dbId),this.contactService.setBusyState("dnd","audio"),!this.webConferenceSessions[room.dbId]){const webConferenceSession=new webConferenceSession_model_1.WebConferenceSession(room.dbId,room);this.webConferenceSessions[room.dbId]=webConferenceSession}"connecting"!==this.webConferenceSessions[room.dbId].status&&(this.webConferenceSessions[room.dbId].status="connecting",this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"connecting"}));const params={mute:!1,media:["video"],resourceId:this.xmppService.getResourceFromJid(this.xmppService.fullJid)};this.webrtcConfigAndUtils&&this.webrtcConfigAndUtils.webrtcConfig&&this.webrtcConfigAndUtils.webrtcConfig.dc&&(params.dc=this.webrtcConfigAndUtils.webrtcConfig.dc),this.webConferenceSessions[room.dbId].localStreams=[],this.webConferenceSessions[room.dbId].noAudio=!0,this.webConferenceSessions[room.dbId].haveJoined=!0;const body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/join`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;this.logger.info("[WebConferenceServiceV2] joinWebConferenceWithoutAudio -- successfully"),this.makingCall=!1;const jingleJid=data.jingleJid;this.webConferenceSessions[room.dbId].jingleJid=jingleJid;const confOnwerId=room.getWebConferenceOwnerId();return!this.webConferenceSessions[room.dbId].isMyConference&&confOnwerId&&confOnwerId===this.contactService.userContact.dbId&&(this.webConferenceSessions[room.dbId].isMyConference=!0),this.webConferenceSessions[room.dbId].status="connected",this.webConferenceSessions[room.dbId].startDuration(),this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"connected"}),this.webConferenceSessions[room.dbId]}catch(error){this.makingCall=!1,this.webConferenceSessions[room.dbId].haveJoined=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinWebConferenceWithoutAudio");this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),this.removeActiveConferenceSession(this.webConferenceSessions[room.dbId]),this.resetBusyStateIfNeeded();const data={popupTitle:"unableToJoin",popupBody:"joinMeetingFailure",okLabel:"ok"};throw errorInfo&&errorInfo.error&&403615===errorInfo.error.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),errorInfo&&errorInfo.error&&403060===errorInfo.error.errorDetailsCode&&(data.popupBody="lockedConferenceError"),this.mainService.showGlobalPopupMessage(data),delete this.webConferenceSessions[room.dbId],this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"ended"}),errorInfo&&errorInfo.error&&403068===errorInfo.error.errorDetailsCode&&(room.isWebConferenceV2Room()&&(room.conference.sessions=[],room.confEndpoints=[]),room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_STOP_EVENT"))),errorInfo.error}}async joinWebConference(room,noAudio=!1){try{if(this.makingCall)throw this.logger.warn("[WebConferenceServiceV2] joinWebConference -- already joining a conference"),Error("Joining web conference in progress");if(!room)throw Error("Wrong or missing parameters");if(noAudio)return await this.joinWebConferenceWithoutAudio(room),this.webConferenceSessions[room.dbId];if(this.logger.debug("[WebConferenceServiceV2] joinWebConference -- "+room.dbId),this.makingCall=!0,this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",room.dbId),this.contactService.setBusyState("dnd","audio"),!this.webConferenceSessions[room.dbId]){const webConferenceSession=new webConferenceSession_model_1.WebConferenceSession(room.dbId,room);this.webConferenceSessions[room.dbId]=webConferenceSession}"connecting"!==this.webConferenceSessions[room.dbId].status&&(this.webConferenceSessions[room.dbId].status="connecting",this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"connecting"}));const id="web_"+uuid4(),params={mute:!1,resourceId:this.xmppService.getResourceFromJid(this.xmppService.fullJid)};this.webrtcConfigAndUtils&&this.webrtcConfigAndUtils.webrtcConfig&&this.webrtcConfigAndUtils.webrtcConfig.dc&&(params.dc=this.webrtcConfigAndUtils.webrtcConfig.dc);const stream=await this.getUserMediaForSession(room.dbId);if(!this.webConferenceSessions[room.dbId]||"ended"===this.webConferenceSessions[room.dbId].status||!this.makingCall)throw"noMic"!==stream&&this.disableMediaStream(stream),Error("Web conference is no longer active");"noMic"===stream?(params.microphone=!1,this.webConferenceSessions[room.dbId].localStreams=[]):this.webConferenceSessions[room.dbId].localStreams.push(stream),this.webConferenceSessions[room.dbId].haveJoined=!0;const body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/join`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;this.logger.info("[WebConferenceServiceV2] joinWebConference -- successfully"),this.makingCall=!1;const jingleJid=data.jingleJid,forceTurn=data.transportTurn;this.webConferenceSessions[room.dbId].jingleJid=jingleJid,await this.initJingleCall(jingleJid,room.dbId,id,forceTurn);const confOnwerId=room.getWebConferenceOwnerId();return!this.webConferenceSessions[room.dbId].isMyConference&&confOnwerId&&confOnwerId===this.contactService.userContact.dbId&&(this.webConferenceSessions[room.dbId].isMyConference=!0),this.webConferenceSessions[room.dbId]}catch(error){this.makingCall=!1,this.webConferenceSessions[room.dbId].haveJoined=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinWebConference");this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),this.removeActiveConferenceSession(this.webConferenceSessions[room.dbId]),this.resetBusyStateIfNeeded();const data={popupTitle:"unableToJoin",popupBody:"joinMeetingFailure",okLabel:"ok"};throw errorInfo&&errorInfo.error&&403615===errorInfo.error.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),errorInfo&&errorInfo.error&&403060===errorInfo.error.errorDetailsCode&&(data.popupBody="lockedConferenceError"),this.mainService.showGlobalPopupMessage(data),delete this.webConferenceSessions[room.dbId],this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"ended"}),errorInfo&&errorInfo.error&&403068===errorInfo.error.errorDetailsCode&&(room.isWebConferenceV2Room()&&(room.conference.sessions=[],room.confEndpoints=[]),room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_STOP_EVENT"))),errorInfo.error}}async joinWebConferenceByPhone(room){try{if(this.makingCall)throw this.logger.warn("[WebConferenceServiceV2] joinWebConferenceByPhone -- already joining a conference"),Error("Joining web conference in progress");if(!room)throw Error("Wrong or missing parameters");this.logger.debug("[WebConferenceServiceV2] joinWebConferenceByPhone -- "+room.dbId),this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",room.dbId);const params={deskphone:!0},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/join`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;this.logger.info("[WebConferenceServiceV2] joinWebConferenceByPhone -- successfully");const numberToCall=String(data.gatewayPrefix)+String(data.gatewaySessionId);this.eventService.publish("TELEPHONY_MAKE_SIMPLE_CALL_TO_NUMBER",numberToCall)}catch(error){this.makingCall=!1,this.webConferenceSessions[room.dbId].haveJoined=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinWebConference");this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),this.removeActiveConferenceSession(this.webConferenceSessions[room.dbId]),this.resetBusyStateIfNeeded();const data={popupTitle:"unableToJoin",popupBody:"joinMeetingFailure",okLabel:"ok"};throw errorInfo&&errorInfo.error&&403615===errorInfo.error.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),errorInfo&&errorInfo.error&&403060===errorInfo.error.errorDetailsCode&&(data.popupBody="lockedConferenceError"),this.mainService.showGlobalPopupMessage(data),delete this.webConferenceSessions[room.dbId],this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"ended"}),errorInfo.error}}async addPSTNParticipantToWebConference(webConferenceSession,participantPhoneNumber){try{if(!webConferenceSession||!participantPhoneNumber)throw new Error("[WebConferenceServiceV2] addPSTNParticipantToWebConference -- missing session or parameters");if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.USE_CLOUD_PBX))throw new Error("[WebConferenceServiceV2] addPSTNParticipantToWebConference -- user does not have the right feature to use this function");this.logger.debug("[WebConferenceServiceV2] addPSTNParticipantToWebConference for wb conference: "+webConferenceSession.id+" - phoneNumber: "+participantPhoneNumber);const params={participantPhoneNumber:participantPhoneNumber},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/add`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return void this.logger.info("[ConferenceService] addPSTNParticipantToWebConference success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addPSTNParticipantToWebConference");throw this.logger.error("[ConferenceService] "+errorInfo.message),errorInfo.error}}async declineInvitationToJoinConference(room){try{if(this.logger.debug("[WebConferenceServiceV2] declineInvitationToJoinConference"),!room)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${room.dbId}/reject`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] declineInvitationToJoinConference -- successfully")}catch(error){this.makingCall=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"declineInvitationToJoinConference");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async addAudioToWebConferenceSession(webConferenceSession){if(webConferenceSession&&webConferenceSession.localParticipant&&webConferenceSession.haveJoined&&webConferenceSession.noAudio){this.logger.info("[WebConferenceServiceV2] addAudioToWebConferenceSession");const mediaToGet=["audio"];try{const stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet);if(webConferenceSession.localStreams.push(stream),webConferenceSession.audioSession)webConferenceSession.audioSession.addStream(webConferenceSession.localStreams[0]),webConferenceSession.audioSession.sendTransportReplace(),webConferenceSession.localParticipant.noMicrophone&&(webConferenceSession.noAudio=!1,this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"plug"));else{await this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"addAudio");const callId="web_"+uuid4();await this.initJingleCall(webConferenceSession.jingleJid,webConferenceSession.id,callId),webConferenceSession.noAudio=!1}}catch{this.logger.info("[WebConferenceServiceV2] onAudioInputDeviceChange -- audio device unplugged"),webConferenceSession.audioSession.removeStream(webConferenceSession.localStreams[0]),this.webrtcP2PService.stopActiveAudioVideoStreams(webConferenceSession.audioSession),webConferenceSession.audioSession.sendTransportReplace(),webConferenceSession.localParticipant.noMicrophone||this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"unplug")}}}async addMediaToWebConferenceSession(webConferenceSession,mediaType,existingStream=null){try{if(!webConferenceSession)throw Error("Wrong or missing parameters");if(this.addingMedia)throw Error("Already adding media");this.addingMedia=!0;const mediaToGet=[mediaType];"sharing"===mediaType&&this.contactService.setBusyState("dnd","sharing"),this.logger.info("[WebConferenceServiceV2] addMediaToWebConferenceSession to session "+webConferenceSession.id+" with media "+mediaType);const stream=existingStream||await this.webrtcP2PService.getBrowserMedia(mediaToGet);let modifiedStream=stream;"video"===mediaType&&(webConferenceSession.originalVideoStream=stream,modifiedStream=await this.virtualBackgroundService.startProcessStream(stream)),this.addingMedia=!1;const streams=[modifiedStream],session=this.xmppService.connection.jingle.initiate(webConferenceSession.jingleJid,this.xmppService.connection.jid,mediaType,streams,null,webConferenceSession.id,null);if("video"===mediaType)webConferenceSession.localParticipant.isVideoAvailable=!0,webConferenceSession.localParticipant.videoSession=session;else{const sharingParticipant=new webConferenceParticipant_model_1.WebConferenceParticipant(webConferenceSession.localParticipant.id);sharingParticipant.contact=webConferenceSession.localParticipant.contact,sharingParticipant.isSharingParticipant=!0,sharingParticipant.videoSession=session,webConferenceSession.setSharingParticipant(sharingParticipant),webConferenceSession.hasLocalSharing=!0,webConferenceSession.localSharingSession=session,webConferenceSession.updatePinnedParticipant(webConferenceSession.getSharingParticipant(),"sharing"),this.sendEvent("startHighlighting")}this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:mediaType,action:"added"}),this.webrtcConfigAndUtils.callsStats[session.sid]={},this.updateStatisticsForSession(webConferenceSession,session.sid),this.statsIntervals.push(session.getStats(8e3))}catch(error){this.addingMedia=!1}}removeMediaFromWebConferenceSession(webConferenceSession,mediaType){if(!webConferenceSession)throw Error("Wrong or missing parameters");this.logger.info("[WebConferenceServiceV2] removeMediaFromConferenceSession from session "+webConferenceSession.id);const session="video"===mediaType?webConferenceSession.localParticipant.videoSession:webConferenceSession.getLocalSharingSession();if(session){const sessionId=session.sid;this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.xmppService.connection.jingle.terminate(sessionId),this.updateStatisticsForSession(webConferenceSession,sessionId),delete this.webrtcConfigAndUtils.callsStats[sessionId]}"video"===mediaType?(webConferenceSession.localParticipant.videoSession=null,webConferenceSession.localParticipant.isVideoAvailable=!1,webConferenceSession.originalVideoStream&&this.disableMediaStream(webConferenceSession.originalVideoStream),webConferenceSession.originalVideoStream=null,this.virtualBackgroundService.stopProcessStream()):"sharing"===mediaType&&(webConferenceSession.localSharingSession=null,webConferenceSession.hasLocalSharing=!1,webConferenceSession.setSharingParticipant(null),this.contactService.setBusyState("dnd","audio"),this.sendEvent("stopHighlighting")),this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:mediaType,action:"removed"})}async leaveWebConference(webConferenceSession){try{if(!webConferenceSession)throw Error(" Wrong or missing parameters");if(webConferenceSession&&!webConferenceSession.localParticipant)return void this.removeActiveConferenceSession(this.webConferenceSessions[webConferenceSession.id]);await this.disconnectUserFromWebConference(webConferenceSession,webConferenceSession.localParticipant.id)}catch(error){throw Error("[WebConferenceServiceV2] leaveWebConference error -- "+error)}}async disconnectPstnParticipantFromWebConference(webConferenceSession,participantId){try{if(this.logger.debug("[WebConferenceServiceV2] disconnectPstnParticipantFromWebConference"),!webConferenceSession||!participantId)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/phone-numbers/${participantId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] disconnectPstnParticipantFromWebConference -- successfully")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"disconnectPstnParticipantFromWebConference");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async innerDisconnectUserFromWebConference(webConferenceSession,participantId){try{let participant=webConferenceSession.getParticipantById(participantId);if(participant||(participant=webConferenceSession.findParticipantByContactDbId(participantId)),participant&&participant.isPstnParticipant)return void await this.disconnectPstnParticipantFromWebConference(webConferenceSession,participant.id);const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${participantId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] disconnectUserFromWebConference -- successfully"),participantId===this.contactService.userContact.dbId&&this.webConferenceSessions[webConferenceSession.id]&&this.removeActiveConferenceSession(this.webConferenceSessions[webConferenceSession.id])}catch(error){participantId===this.contactService.userContact.dbId&&this.webConferenceSessions[webConferenceSession.id]&&this.removeActiveConferenceSession(this.webConferenceSessions[webConferenceSession.id]);const errorInfo=await this.errorHelperService.getErrorInfo(error,"disconnectUserFromWebConference");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async disconnectUserFromWebConference(webConferenceSession,participantId){if(!webConferenceSession||!participantId)throw Error("[WebConferenceServiceV2] disconnectUserFromWebConference -- Wrong or missing parameters");return this.logger.debug(`[WebConferenceServiceV2] disconnectUserFromWebConference ${webConferenceSession.id} -- ${participantId}`),this.promiseInProgress[webConferenceSession.id]||(this.promiseInProgress[webConferenceSession.id]=new Promise((resolve,reject)=>{this.innerDisconnectUserFromWebConference(webConferenceSession,participantId).then(()=>{resolve(),delete this.promiseInProgress[webConferenceSession.id]}).catch(error=>{reject(error),delete this.promiseInProgress[webConferenceSession.id]})})),this.promiseInProgress[webConferenceSession.id]}async subscribeToDynamicFeed(webConferenceSession){try{if(webConferenceSession.dynamicFeedSession)return void this.logger.warn(`[WebConferenceServiceV2] subscribeToDynamicFeed -- ${webConferenceSession.id} -- already subscribed`);if(webConferenceSession.dynamicFeedSubscriptionInProgress)return void this.logger.warn(`[WebConferenceServiceV2] subscribeToDynamicFeed -- ${webConferenceSession.id} -- subscription in progress`);this.logger.info("[WebConferenceServiceV2] subscribeToDynamicFeed -- "+webConferenceSession.id);const publisher=webConferenceSession.participants.find(participant=>participant.isVideoAvailable);if(!publisher)return void this.logger.warn(`[WebConferenceServiceV2] subscribeToDynamicFeed -- ${webConferenceSession.id} -- dynamic feed is not available`);webConferenceSession.dynamicFeedSubscriptionInProgress=!0;const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${publisher.id}/subscribe`,headers=this.authService.getPostHeader(),params={media:"video",dynamicFeed:!0,subStreamLevel:0},body=JSON.stringify(params),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;webConferenceSession.dynamicFeedSubscriptionInProgress=!1,this.logger.info(`[WebConferenceServiceV2] subscribeToDynamicFeed -- ${webConferenceSession.id} -- success`)}catch(error){this.logger.error(`[WebConferenceServiceV2] subscribeToDynamicFeed -- ${webConferenceSession.id} -- error`);const errorInfo=await this.errorHelperService.getErrorInfo(error,"subscribeToParticipantVideo");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),webConferenceSession.dynamicFeedSubscriptionInProgress=!1,errorInfo.error}}async subscribeToService(webConferenceSession,serviceId){try{webConferenceSession.subscribedToGridService=!0;const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/services/${serviceId}/subscribe`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const sid=(await response.json()).data.sid;this.logger.info(`[WebConferenceServiceV2] subscribeToService -- ${webConferenceSession.id} -- ${serviceId} -- ${sid} -- success `),webConferenceSession.gridServiceSubscription={id:serviceId,sessionId:sid,videoSession:this.xmppService.connection.jingle.sessions[sid]},webConferenceSession.gridServiceSubscription.videoSession&&webConferenceSession.gridServiceSubscription.videoSession.peerconnection&&"connected"===webConferenceSession.gridServiceSubscription.videoSession.peerconnection.iceConnectionState&&(this.logger.info("[WebConferenceServiceV2] video sessionEstablished -- grid/mozaic service -- "+webConferenceSession.id),this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"mozaic",action:"added"}))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"subscribeToService");throw this.logger.error(errorInfo.message),webConferenceSession.subscribedToGridService=!1,webConferenceSession.gridServiceSubscription=null,errorInfo.error}}async subscribeToParticipantVideo(webConferenceSession,participant){try{this.logger.info(`[WebConferenceServiceV2] subscribeToParticipantVideo -- ${webConferenceSession.id} -- ${participant.id}`),participant.subscriptionInProgress=!0;const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${participant.id}/subscribe`,headers=this.authService.getPostHeader(),params={media:"video"};participant.simulcast&&(params.subStreamLevel="0",participant.subStreamLevel=0,participant.temporalLevel=2);const body=JSON.stringify(params),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;participant.subscriptionInProgress=!1,this.logger.info(`[WebConferenceServiceV2] subscribeToParticipantVideo -- ${webConferenceSession.id} -- ${participant.id} -- success`)}catch(error){this.logger.error(`[WebConferenceServiceV2] subscribeToParticipantVideo -- ${webConferenceSession.id} -- ${participant.id} -- error`);const errorInfo=await this.errorHelperService.getErrorInfo(error,"subscribeToParticipantVideo");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error&&404032===errorInfo.error.errorDetailsCode&&(participant.isVideoAvailable=!1),participant.subscriptionInProgress=!1,errorInfo.error}}async updatePstnParticipant(webConferenceSession,participantId,option){try{this.logger.info("[WebConferenceServiceV2] updatePstnParticipant( webConfId="+webConferenceSession.id+"participantId="+participantId+" option="+option+")");const params={option:option},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/phone-numbers/${participantId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] updatePstnParticipant -- successfully ( webConfId="+webConferenceSession.id+"participantId="+participantId+" option="+option+")")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updatePstnParticipant");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async updateParticipant(webConferenceSession,participantId,option,media=null,bitRate=null,subStreamLevel=null,publisherId=null){try{if(this.logger.info("[WebConferenceServiceV2] updateParticipant( webConfId="+webConferenceSession.id+"participantId="+participantId+" option="+option+" subStreamLevel "+subStreamLevel+" publisherId "+publisherId+")"),!webConferenceSession||!participantId||!option)throw new Error("[WebConferenceServiceV2] updateParticipant - missing a parameter");let participant=webConferenceSession.getParticipantById(participantId);if(participant||(participant=webConferenceSession.findParticipantByContactDbId(participantId)),participant&&participant.isPstnParticipant)return void await this.updatePstnParticipant(webConferenceSession,participant.id,option);const params={option:option};media&&(params.media=media),bitRate&&(params.bitRate=bitRate),publisherId&&(params.publisherId=publisherId),subStreamLevel&&(params.subStreamLevel=subStreamLevel);const body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${participant.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] updateParticipant -- successfully ( webConfId="+webConferenceSession.id+"participantId="+participant.id+" option="+option+" subStreamLevel "+subStreamLevel+" publisherId "+publisherId+")")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateParticipant");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async updateConferenceParameters(webConferenceSession,option){try{if(!webConferenceSession||!option)throw new Error("[WebConferenceServiceV2] updateConferenceParameters - missing a parameter");this.logger.info("[WebConferenceServiceV2] updateConferenceParameters( webConfId= "+webConferenceSession.id+", option= "+option+")");const params={option:option},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/update`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] updateConferenceParameters( webConfId= "+webConferenceSession.id+", option= "+option+") -- successfully")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateConferenceParameters");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async delegateConferenceToParticipant(webConferenceSession,participantId){try{if(this.logger.info("[WebConferenceServiceV2] delegateConferenceToParticipant for webConfId="+webConferenceSession.id+"participantId="+participantId),!webConferenceSession||!participantId)throw new Error("[WebConferenceServiceV2] delegateConferenceToParticipant - missing a parameter");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${participantId}/delegate`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] delegateConferenceToParticipant -- successfully -- webConfId="+webConferenceSession.id+"participantId="+participantId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"delegateConferenceToParticipant");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async getConferenceTalkingTimeStats(roomDbId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${roomDbId}/talking-time`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[WebConferenceServiceV2] startMediaEchoTest success -- "+responseData.data.participants.length),responseData.data.participants}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getConferenceTalkingTimeStats");throw this.logger.error("[WebConferenceServiceV2] "+errorInfo.message),errorInfo.error}}async startMediaEchoTest(){this.logger.info("[WebConferenceServiceV2] startMediaEchoTest");try{const url=config.restServerUrl+"/api/rainbow/conference/v1.0/echotest",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] startMediaEchoTest success");const containerdata=(await response.json()).data;if(containerdata.jingleJid)return containerdata.jingleJid;throw new Error("Something went wrong")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startMediaEchoTest");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async stopMediaEchoTest(){this.logger.info("[WebConferenceServiceV2] stopMediaEchoTest");try{const url=config.restServerUrl+"/api/rainbow/conference/v1.0/stop-echotest",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[WebConferenceServiceV2] stopMediaEchoTest success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopMediaEchoTest");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async transferP2pCallToConference(oldSession,jingleJid,room,myConference=!1,shouldMute=!1){try{if(this.logger.info("[WebConferenceServiceV2] transferP2pCallToConference to "+room.dbId),this.webConferenceSessions[room.dbId]&&this.webConferenceSessions[room.dbId].haveJoined)throw this.logger.info("[WebConferenceServiceV2] transferP2pCallToConference to "+room.dbId+" -- already in progress or done"),new Error("Already making transfer call");if(this.makingCall=!0,this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",room.dbId),this.contactService.setBusyState("dnd","audio"),!this.webConferenceSessions[room.dbId]){const webConferenceSession=new webConferenceSession_model_1.WebConferenceSession(room.dbId,room);this.webConferenceSessions[room.dbId]=webConferenceSession}"connecting"!==this.webConferenceSessions[room.dbId].status&&(this.webConferenceSessions[room.dbId].status="connecting",this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:room.dbId,status:"connecting"}));const confData=await this.makeSnapshotByRoomDbId(room.dbId);await this.updateWebConferenceFromSnapshotData(room.dbId,confData);const stream=await this.getUserMediaForSession(room.dbId);this.webConferenceSessions[room.dbId].localStreams.push(stream),this.webConferenceSessions[room.dbId].jingleJid=jingleJid;const callId="web_"+uuid4();await this.initJingleCall(jingleJid,room.dbId,callId,!1),this.webConferenceSessions[room.dbId].haveJoined=!0,this.webConferenceSessions[room.dbId].isMyConference=myConference,this.makingCall=!1;try{if(oldSession&&-1!==oldSession.localType.indexOf("sharing")&&(-1===oldSession.remoteType.indexOf("sharing")||myConference)){let index=oldSession.localStreams.length-1;oldSession.localStreams[oldSession.localStreams.length-1].getAudioTracks().length&&(index=0);const sharingStream=oldSession.localStreams[index].clone();setTimeout(()=>{this.addMediaToWebConferenceSession(this.webConferenceSessions[room.dbId],"sharing",sharingStream)},1500)}oldSession&&-1!==oldSession.localType.indexOf("video")&&setTimeout(()=>{this.addMediaToWebConferenceSession(this.webConferenceSessions[room.dbId],"video")},1500),shouldMute&&setTimeout(()=>{this.updateParticipant(this.webConferenceSessions[room.dbId],this.webConferenceSessions[room.dbId].localParticipant.id,"mute")},1e3)}catch(err){return void this.logger.error("[WebConferenceServiceV2] transferP2pCallToConference error on duplicate stream -- "+err)}}catch(error){this.makingCall=!1,this.logger.error("[WebConferenceServiceV2] transferP2pCallToConference error -- "+error)}}putAllRemoteVideoSessionsOnHold(webConferenceSession){if(this.logger.info("[WebConferenceServiceV2] putAllRemoteVideoSessionsOnHold for webConfId="+webConferenceSession.id),!webConferenceSession)throw new Error("[WebConferenceServiceV2] putAllRemoteVideoSessionsOnHold - missing a parameter");webConferenceSession.participants.forEach(participant=>{!participant.videoSession||participant.isSharingParticipant||participant.videoSession.onHold||participant.videoSession.sendHold(!0)}),webConferenceSession.dynamicFeedSession&&!webConferenceSession.dynamicFeedSession.onHold&&webConferenceSession.dynamicFeedSession.sendHold(!0),webConferenceSession.gridServiceSubscription&&webConferenceSession.gridServiceSubscription.videoSession&&!webConferenceSession.gridServiceSubscription.videoSession.onHold&&webConferenceSession.gridServiceSubscription.videoSession.sendHold(!0),this.logger.info("[WebConferenceServiceV2] putAllRemoteVideoSessionsOnHold -- successfully -- webConfId="+webConferenceSession.id)}putRemoteVideoSessionOnHold(participant){participant&&(this.logger.info("[WebConferenceServiceV2] putRemoteVideoSessionOnHold for webConfId="+participant.id),participant&&participant.videoSession&&!participant.isSharingParticipant&&!participant.videoSession.onHold&&participant.videoSession.sendHold(!0))}putRemoteVideoSessionOnUnhold(participant){participant&&(this.logger.info("[WebConferenceServiceV2] putRemoteVideoSessionOnUnhold for webConfId="+participant.id),participant&&participant.videoSession&&!participant.isSharingParticipant&&participant.videoSession.onHold&&participant.videoSession.sendHold(!1))}async onVideoInputDeviceChange(){const webConferenceSession=this.getActiveWebConferenceSession();webConferenceSession&&webConferenceSession.localParticipant&&webConferenceSession.localParticipant.videoSession&&webConferenceSession.haveJoined&&(this.logger.info("[WebConferenceServiceV2] onVideoInputDeviceChange"),setTimeout(async()=>{const mediaToGet=["video"];try{webConferenceSession.originalVideoStream&&(webConferenceSession.originalVideoStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),webConferenceSession.originalVideoStream.stop&&webConferenceSession.originalVideoStream.stop(),webConferenceSession.originalVideoStream=null),this.webrtcConfigAndUtils.disableMediaStreams(webConferenceSession.localParticipant.videoSession.localStreams);const stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet);webConferenceSession.originalVideoStream=stream;const modifiedStream=await this.virtualBackgroundService.startProcessStream(stream);try{await webConferenceSession.localParticipant.videoSession.replaceTransceiverTrack(modifiedStream.getVideoTracks()[0]),webConferenceSession.localParticipant.videoSession.localStreams=[],webConferenceSession.localParticipant.videoSession.localStreams.push(modifiedStream),this.logger.info("[WebConferenceServiceV2] onVideoInputDeviceChange -- success 'on the fly'"),this.sendEvent("peerConnectionEstablished",{sessionId:webConferenceSession.localParticipant.videoSession.sid}),this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"added"})}catch{webConferenceSession.localParticipant.videoSession.removeStream(),webConferenceSession.localParticipant.videoSession.localStreams=[],webConferenceSession.localParticipant.videoSession.localStreams.push(modifiedStream),webConferenceSession.audioSession.addStream(webConferenceSession.localParticipant.videoSession.localStreams[0]),webConferenceSession.audioSession.sendTransportReplace(),this.logger.info("[WebConferenceServiceV2] onVideoInputDeviceChange -- success 'via transport-replace'"),this.sendEvent("peerConnectionEstablished",{sessionId:webConferenceSession.localParticipant.videoSession.sid}),this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"added"})}}catch{this.logger.info("[WebConferenceServiceV2] onVideoInputDeviceChange -- video device unplugged or not working -- remove media from conference and re-add it again"),this.removeMediaFromWebConferenceSession(webConferenceSession,"video"),this.addMediaToWebConferenceSession(webConferenceSession,"video")}},500))}async onAudioInputDeviceChange(){const webConferenceSession=this.getActiveWebConferenceSession();webConferenceSession&&webConferenceSession.localParticipant&&webConferenceSession.haveJoined&&!webConferenceSession.noAudio&&!this.audioProfileChanging&&(this.logger.info("[WebConferenceServiceV2] onAudioInputDeviceChange"),this.audioProfileChanging=!0,setTimeout(async()=>{this.audioProfileChanging=!1;const mediaToGet=["audio"];try{this.webrtcConfigAndUtils.disableMediaStreams(webConferenceSession.localStreams),webConferenceSession.localStreams=[];const stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet);try{await webConferenceSession.audioSession.replaceTransceiverTrack(stream.getAudioTracks()[0]),webConferenceSession.localStreams.push(stream),webConferenceSession.localParticipant.noMicrophone&&this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"plug"),this.logger.info("[WebConferenceServiceV2] onAudioInputDeviceChange -- success 'on the fly'")}catch{webConferenceSession.audioSession.removeStream(webConferenceSession.localStreams[0]),this.webrtcP2PService.stopActiveAudioVideoStreams(webConferenceSession.audioSession),webConferenceSession.localStreams=[],webConferenceSession.localStreams.push(stream),webConferenceSession.audioSession.addStream(webConferenceSession.localStreams[0]),webConferenceSession.audioSession.sendTransportReplace(),webConferenceSession.localParticipant.noMicrophone&&this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"plug"),this.logger.info("[WebConferenceServiceV2] onAudioInputDeviceChange -- success 'via transport-replace'")}}catch{this.logger.info("[WebConferenceServiceV2] onAudioInputDeviceChange -- audio device unplugged"),webConferenceSession.audioSession.removeStream(webConferenceSession.localStreams[0]),this.webrtcP2PService.stopActiveAudioVideoStreams(webConferenceSession.audioSession),webConferenceSession.audioSession.sendTransportReplace(),webConferenceSession.localParticipant.noMicrophone||this.updateParticipant(webConferenceSession,webConferenceSession.localParticipant.id,"unplug")}},500))}async onReplaceBackgroundChangeEvent(event){const webConferenceSession=this.getActiveWebConferenceSession();if(webConferenceSession&&webConferenceSession.localParticipant&&webConferenceSession.localParticipant.videoSession){this.logger.info("[WebConferenceServiceV2] onReplaceBackgroundChangeEvent");const session=webConferenceSession.localParticipant.videoSession;let sessionStream=session.localStreams.pop();event.data.type===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.NONE&&(sessionStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),sessionStream.stop&&sessionStream.stop(),sessionStream=null);const stream=event.data.stream;session.localStreams.push(stream);try{await session.replaceTransceiverTrack(stream.getVideoTracks()[0]),this.sendEvent("peerConnectionEstablished",{sessionId:session.sid}),this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"added"})}catch{session.addStream(stream),session.sendTransportReplace(),this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCALMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"added"})}}}askToAddSharingToWebConferenceSession(conversation,conferenceSession){!this.webrtcP2PService.askToAddSharing(conversation.id)&&this.addMediaToWebConferenceSession(conferenceSession,"sharing")}async getUserMediaForSession(dbId){if(!this.webConferenceSessions[dbId])throw Error("Web conference is no longer active");try{return await this.webrtcP2PService.getBrowserMedia(["audio"])}catch(error){return this.logger.error("[WebConferenceServiceV2] getUserMediaForSession error -- getUserMedia failed -- "+error),this.sendEvent("joinWithoutAudio"),"noMic"}}disableMediaStream(stream){stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream=null}async initJingleCall(jid,dbId,callId,forceTurn=!1){try{await this.webrtcConfigAndUtils.setWebrtcConfiguration()}catch{this.logger.error("[WebConferenceServiceV2] initCall - setWebrtcConfiguration failed")}const session=this.xmppService.connection.jingle.initiate(jid,this.xmppService.connection.jid,"audio",this.webConferenceSessions[dbId].localStreams,callId,dbId,null,forceTurn);this.webConferenceSessions[dbId].audioSession=session,this.createStatisticsForSession(dbId,session.sid),this.statsIntervals.push(session.getStats(3e3))}async createStatisticsForSession(webConfId,sessionId){if(this.logger.info("[WebConferenceServiceV2] createStatisticsForSession for conf "+webConfId+" and session "+sessionId),webConfId&&sessionId)try{this.webrtcConfigAndUtils.callsStats[sessionId]={};[].push({connectionId:sessionId,stats:this.webrtcConfigAndUtils.callsStats[sessionId]});const id=await this.webrtcConfigAndUtils.createStatisticsForSession(webConfId,webConfId,"pending");this.logger.info("[WebConferenceServiceV2] createStatisticsForSession success "+id),this.webrtcConfigAndUtils.callsStats[sessionId].id=id,this.webConferenceSessions[webConfId].metricsId=id,this.webConferenceSessions[webConfId].metricsState="pending"}catch(error){this.logger.error("[WebConferenceServiceV2] createStatisticsForSession error for conf "+webConfId)}else this.logger.warn("[WebConferenceServiceV2] createStatisticsForSession -- missing parameters")}updateStatisticsForSession(webConferenceSession,sessionId){if(!webConferenceSession||!sessionId)return void this.logger.warn("[WebConferenceServiceV2] updateStatisticsForSession -- missing parameters");if(!webConferenceSession||!webConferenceSession.metricsId)return void this.logger.warn("[WebConferenceServiceV2] updateStatisticsForSession -- missing webConference or no metricsId");webConferenceSession.metricsState||(webConferenceSession.metricsState="pending");const metrics=[];this.webrtcConfigAndUtils.callsStats[sessionId]&&Object.keys(this.webrtcConfigAndUtils.callsStats[sessionId]).length&&(this.webrtcConfigAndUtils.callsStats[sessionId].RainMetrics&&this.webrtcConfigAndUtils.callsStats[sessionId].push(this.webrtcConfigAndUtils.callsStats[sessionId].RainMetrics),metrics.push({connectionId:sessionId,stats:this.webrtcConfigAndUtils.callsStats[sessionId]}),this.webrtcConfigAndUtils.updateStatisticsForCall(webConferenceSession.metricsId,webConferenceSession.id,webConferenceSession.metricsState,metrics))}onConferenceDelegated(webConfId,userId){const webConferenceSession=this.getWebConferenceSessionById(webConfId);if(!webConferenceSession||!userId)return void this.logger.warn("[WebConferenceServiceV2] onConferenceDelegated -- missing parameters or no existing conference");let gaveOwnership=!1;userId!==this.contactService.userContact.dbId||webConferenceSession.isMyConference?userId!==this.contactService.userContact.dbId&&webConferenceSession.isMyConference&&(webConferenceSession.isMyConference=!1,gaveOwnership=!0):webConferenceSession.isMyConference=!0,this.sendEvent(this.RAINBOW_ONWEBCONFERENCEDELEGATED,{roomDbId:webConferenceSession.id,userDbId:userId,gaveOwnership:gaveOwnership})}async makeSnapshotByRoomDbId(roomDbId){try{if(!roomDbId)throw new Error("[WebConferenceServiceV2] makeSnapshotByRoomDbId - missing a parameter");this.logger.info("[WebConferenceServiceV2] makeSnapshotByRoomDbId for roomDbId "+roomDbId);const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${roomDbId}/snapshot`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.logger.info("[WebConferenceServiceV2] makeSnapshotByRoomDbId -- successfully -- roomDbId "+roomDbId),data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"makeSnapshotByRoomDbId");throw this.logger.error("[WebConferenceServiceV2] -- "+errorInfo.message),errorInfo.error}}async createSessionParticipantFromSnapshotData(snapshotDataParticipant){let contactId=snapshotDataParticipant.userId;const phoneNumber=snapshotDataParticipant.phoneNumber,associatedContactId=snapshotDataParticipant.associatedUserId,associatedGroupName=snapshotDataParticipant.associatedGroupName;let contact;if(!contactId&&associatedContactId?(contact=await this.contactService.getContactByDBId(associatedContactId),contactId=phoneNumber):contactId?contact=await this.contactService.getContactByDBId(contactId):(contact=this.contactService.createBasicContact(null,phoneNumber),contactId=phoneNumber,associatedGroupName&&(contact.displayName=associatedGroupName)),contact){const sessionParticipant=webConferenceParticipant_model_1.WebConferenceParticipant.create(contactId);return sessionParticipant.contact=contact,sessionParticipant.mute=!1,sessionParticipant.delegateCapability="moderator"===snapshotDataParticipant.participantRole,sessionParticipant.role=snapshotDataParticipant.participantRole,sessionParticipant.noMicrophone=!1,phoneNumber&&(sessionParticipant.isPstnParticipant=!0),sessionParticipant}return null}async updateWebConferenceFromSnapshotData(roomDbId,confData){if(!roomDbId||!this.webConferenceSessions[roomDbId]||!confData)throw new Error("[WebConferenceServiceV2] updateWebConferenceFromSnapshotData - missing a parameter or conf session");if(confData.active){const participantsPromise=[];confData.participants.forEach(participant=>{participantsPromise.push(this.createSessionParticipantFromSnapshotData(participant))});(await Promise.all(participantsPromise)).forEach(participant=>{participant&&(this.contactService.isUserContact(participant.contact)&&!this.webConferenceSessions[roomDbId].localParticipant?this.webConferenceSessions[roomDbId].localParticipant=participant:this.webConferenceSessions[roomDbId].addOrUpdateParticipant(participant),this.logger.info(`[WebConferenceServiceV2] updateWebConferenceFromSnapshotData participant added -- ${participant.id} -- ${roomDbId}`))})}}disableAllLocalStreamsForSession(webConferenceSession){this.webrtcConfigAndUtils.disableMediaStreams(webConferenceSession.localStreams),webConferenceSession.originalVideoStream&&this.webrtcConfigAndUtils.disableMediaStream(webConferenceSession.originalVideoStream),webConferenceSession.audioSession&&(this.updateStatisticsForSession(webConferenceSession,webConferenceSession.audioSession.sid),this.webrtcConfigAndUtils.disableAllStreamsForSession(webConferenceSession.audioSession),this.xmppService.connection.jingle.terminate(webConferenceSession.audioSession.sid),delete this.webrtcConfigAndUtils.callsStats[webConferenceSession.audioSession.sid]),webConferenceSession.localParticipant&&webConferenceSession.localParticipant.videoSession&&(this.updateStatisticsForSession(webConferenceSession,webConferenceSession.localParticipant.videoSession.sid),webConferenceSession.localParticipant.videoSession.terminate(),this.webrtcConfigAndUtils.disableAllStreamsForSession(webConferenceSession.localParticipant.videoSession),delete this.webrtcConfigAndUtils.callsStats[webConferenceSession.localParticipant.videoSession.sid]),webConferenceSession.localSharingSession&&(this.updateStatisticsForSession(webConferenceSession,webConferenceSession.localSharingSession.sid),webConferenceSession.localSharingSession.terminate(),this.webrtcConfigAndUtils.disableAllStreamsForSession(webConferenceSession.localSharingSession),delete this.webrtcConfigAndUtils.callsStats[webConferenceSession.localSharingSession.sid]),webConferenceSession.gridServiceSubscription&&webConferenceSession.gridServiceSubscription.videoSession&&(this.updateStatisticsForSession(webConferenceSession,webConferenceSession.gridServiceSubscription.videoSession.sid),webConferenceSession.gridServiceSubscription.videoSession.terminate(),this.webrtcConfigAndUtils.disableAllStreamsForSession(webConferenceSession.gridServiceSubscription.videoSession),webConferenceSession.gridServiceSubscription.videoSession=null,delete this.webrtcConfigAndUtils.callsStats[webConferenceSession.gridServiceSubscription.videoSession.sid])}removeActiveConferenceSession(webConferenceSession){if(webConferenceSession){let statsInterval;for(webConferenceSession.status="ended",webConferenceSession.metricsState="ended",webConferenceSession.haveJoined=!1,this.disableAllLocalStreamsForSession(webConferenceSession),webConferenceSession.audioSession=null,webConferenceSession.localParticipant=null,this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:webConferenceSession.id,status:"ended"}),delete this.webConferenceSessions[webConferenceSession.id],webConferenceSession=null,this.resetBusyStateIfNeeded();this.statsIntervals.length;)statsInterval=this.statsIntervals.pop(),statsInterval&&(window.clearInterval(statsInterval),statsInterval=null);this.sendEvent("stopHighlighting"),this.contactService.userContact.guestMode&&this.eventService.publish("ON_OPEN_POPUP","concludeInvitation")}}resetBusyStateIfNeeded(){this.eventService.publish("CHECK_AND_RESET_BUSY_STATE")}async createSessionParticipantFromElem(participantElem,webConferenceSession){try{let contactId=participantElem.find("user-id").text();const role=participantElem.find("role").text(),phoneNumber=participantElem.find("phone-number").text(),associatedContactId=participantElem.find("associated-user-id").text(),associatedGroupName=participantElem.find("associated-group-name").text();let contact;!contactId&&associatedContactId?(contact=await this.contactService.getContactByDBId(associatedContactId),contactId=phoneNumber):contactId?contact=await this.contactService.getContactByDBId(contactId):(contact=this.contactService.createBasicContact(null,phoneNumber),contactId=phoneNumber,associatedGroupName&&(contact.displayName=associatedGroupName));let microphone=participantElem.find("microphone").text();microphone&&"true"!==microphone?"false"===microphone&&(microphone=!1):microphone=!0;const talkingTime=$(participantElem).find("talking-time").text(),talking="true"===$(participantElem).find("talking").text();if(contact){const sessionParticipant=webConferenceParticipant_model_1.WebConferenceParticipant.create(contactId);sessionParticipant.contact=contact,sessionParticipant.mute="true"===participantElem.find("mute").text(),sessionParticipant.delegateCapability="true"===participantElem.find("delegate-capability").text(),sessionParticipant.role=role,sessionParticipant.noMicrophone=!microphone,phoneNumber&&(sessionParticipant.isPstnParticipant=!0);const talkingTimeValue=talkingTime?parseInt(talkingTime,10):0;return webConferenceSession.updateTalkingTimeForParticipant(contactId,talkingTimeValue),talking&&(webConferenceSession.talker=contactId),sessionParticipant}return null}catch(error){return this.logger.error("[WebinarConferenceService] createSessionParticipantFromParticipantElem -- Failure"),null}}async onConferenceMessage(stanza){try{const stanzaElem=$(stanza),roomId=stanzaElem.find("room-id").text(),webConferenceSession=this.webConferenceSessions[roomId];if(!webConferenceSession){this.logger.debug(`[WebConferenceServiceV2] onConferenceMessage -- roomId ${roomId} -- no web conference session`);const conferenceInfoElems=stanzaElem.find("conference-info");if(conferenceInfoElems.length){if("reject"===conferenceInfoElems.attr("action"))return this.logger.debug(`[WebConferenceServiceV2] onConferenceMessage -- roomId ${roomId} -- action reject received`),this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",roomId),!0;const participantElems=stanzaElem.find("participants").find("participant");participantElems.length&&participantElems.each((__i,participantElem)=>{const contactId=$(participantElem).find("user-id").text();contactId&&this.contactService.userContact.dbId===contactId&&(this.logger.debug(`[WebConferenceServiceV2] onConferenceMessage -- roomId ${roomId} -- user has joined from another device`),this.eventService.publish("ON_WEBCONFERENCE_ENDED_INVITATION",roomId))})}return!0}const conferenceInfoElems=stanzaElem.find("conference-info");if(conferenceInfoElems.length){const conferenceStateElems=stanzaElem.find("conference-state");if(conferenceStateElems.length){if(!("true"===$(conferenceStateElems).find("active").text())){this.logger.info(`[WebConferenceServiceV2] onConferenceMessage -- ${webConferenceSession.id} -- has ended`);const room=webConferenceSession.room;return this.removeActiveConferenceSession(webConferenceSession),room&&room.isWebConferenceV2Room()&&(room.conference.sessions=[],room.confEndpoints=[],room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_STOP_EVENT"))),!0}const isLock="true"===conferenceStateElems.find("lock").text();let lockedBy=conferenceStateElems.find("locked-by").text();lockedBy||(lockedBy=conferenceStateElems.find("unlocked-by").text()),webConferenceSession.isLocked()!==isLock&&(webConferenceSession.setLocked(isLock),lockedBy&&this.sendEvent(this.RAINBOW_ONWEBCONFERENCELOCKSTATEUPDATED,{roomDbId:webConferenceSession.id,isLock:isLock,lockedBy:lockedBy}));const recordingUserIdElem=conferenceInfoElems.find("recording-user-id");recordingUserIdElem.length&&(webConferenceSession.recordingUserId=recordingUserIdElem.text());const recordingElem=conferenceInfoElems.find("recording-state");if(recordingElem.length){const recordingText=recordingElem.text();"on"!==recordingText&&"pause"!==recordingText||(webConferenceSession.recordingStarted=!0,webConferenceSession.currentRecordingState=recordingText,this.eventService.publish("on"===recordingText?"ON_CONFERENCE_RECORDING_STARTED":"ON_CONFERENCE_RECORDING_PAUSED",webConferenceSession))}}const recordingUserIdElem=conferenceInfoElems.find("recording-user-id");recordingUserIdElem.length&&(webConferenceSession.recordingUserId=recordingUserIdElem.text());const recordingElem=conferenceInfoElems.find("record");if(recordingElem.length){const recordingText=recordingElem.text();"on"===recordingText||"pause"===recordingText?(webConferenceSession.recordingStarted=!0,webConferenceSession.currentRecordingState=recordingText,this.eventService.publish("on"===recordingText?"ON_CONFERENCE_RECORDING_STARTED":"ON_CONFERENCE_RECORDING_PAUSED",webConferenceSession)):"off"===recordingText?(webConferenceSession.recordingStarted=!1,webConferenceSession.currentRecordingState="",this.eventService.publish("ON_CONFERENCE_RECORDING_STOPPED",webConferenceSession)):"recordingEnding"===recordingText&&webConferenceSession.record&&webConferenceSession.record.isRecording&&(this.logger.info(`[WebConferenceServiceV2] onConferenceMessage ${recordingText} -- Warning -- ${webConferenceSession.id}`),this.eventService.publish("ON_CONFERENCE_RECORDING_WILL_STOP"))}}let participantAction="newParticipant",participantElems=stanzaElem.find("participants").find("participant");if(0===participantElems.length&&(participantElems=stanzaElem.find("added-participants").find("participant"),participantAction="addParticipant"),0===participantElems.length&&(participantElems=stanzaElem.find("updated-participants").find("participant"),participantAction="updateParticipant"),participantElems.length){const participantsPromise=[];participantElems.each((__i,participantElem)=>{participantsPromise.push(this.createSessionParticipantFromElem($(participantElem),webConferenceSession))});(await Promise.all(participantsPromise)).forEach(participant=>{if(participant){this.contactService.isUserContact(participant.contact)&&!webConferenceSession.localParticipant?webConferenceSession.localParticipant=participant:webConferenceSession.addOrUpdateParticipant(participant);const participantId=participant.id===webConferenceSession.localParticipant.id?"local":participant.id;this.logger.info(`[WebConferenceServiceV2] onConferenceMessage ${participantAction} -- ${participantId} -- ${webConferenceSession.id}`),"addParticipant"===participantAction&&this.sendEvent(this.RAINBOW_ONWEBCONFERENCEPARTICIPANTADDED,{roomDbId:webConferenceSession.id,participantId:participant.id})}}),"newParticipant"===participantAction||"addParticipant"===participantAction?this.sendEvent(this.RAINBOW_ONWEBCONFERENCEPARTICIPANTLISTUPDATED,{roomDbId:webConferenceSession.id}):"updateParticipant"===participantAction&&this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREPARTICIPANTAUPDATE,{roomDbId:webConferenceSession.id})}const removedParticipantElems=stanzaElem.find("removed-participants");if(removedParticipantElems.length){let shouldRemoveLocalParticipant=!1;$(removedParticipantElems).find("user-id").each((__i,participantIdElem)=>{const participantId=$(participantIdElem).text(),participantIndex=webConferenceSession.participants.findIndex(participant=>participant.id===participantId);-1!==participantIndex&&webConferenceSession.participants.splice(participantIndex,1),webConferenceSession.localParticipant&&participantId===webConferenceSession.localParticipant.id&&(shouldRemoveLocalParticipant=!0),this.logger.info(`[WebConferenceServiceV2] onConferenceMessage removedParticipant -- ${participantId} -- ${webConferenceSession.id}`)});$(removedParticipantElems).find("phone-number").each((__i,participantIdElem)=>{const participantId=$(participantIdElem).text(),participantIndex=webConferenceSession.participants.findIndex(participant=>participant.id===participantId);-1!==participantIndex&&webConferenceSession.participants.splice(participantIndex,1),this.logger.info(`[WebConferenceServiceV2] onConferenceMessage removedParticipant PSTN -- ${participantId} -- ${webConferenceSession.id}`)}),shouldRemoveLocalParticipant?this.removeActiveConferenceSession(webConferenceSession):this.sendEvent(this.RAINBOW_ONWEBCONFERENCEPARTICIPANTLISTUPDATED,{roomDbId:webConferenceSession.id})}let publisherMode="publishers",publisherElems=stanzaElem.find("publishers");0===publisherElems.length&&(publisherElems=stanzaElem.find("added-publishers"),publisherMode="addPublisher"),publisherElems.length&&(publisherElems.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("user-id").text(),mediaType=publisherElem.find("media-type").text(),simulcast="true"===publisherElem.find("simulcast").text();if(publisherId===webConferenceSession.localParticipant.id)"video"===mediaType?webConferenceSession.localParticipant.isVideoAvailable=!0:"sharing"===mediaType&&(webConferenceSession.hasLocalSharing=!0);else{const participant=webConferenceSession.getParticipantById(publisherId);if("video"===mediaType)participant.isVideoAvailable=!0,participant.simulcast=simulcast;else if("sharing"===mediaType){const sharingParticipant=new webConferenceParticipant_model_1.WebConferenceParticipant(participant.id);sharingParticipant.contact=participant.contact,sharingParticipant.isSharingParticipant=!0,webConferenceSession.setSharingParticipant(sharingParticipant)}}this.logger.info(`[WebConferenceServiceV2] onConferenceMessage -- ${webConferenceSession.id} -- ${publisherMode} -- ${publisherId} -- ${mediaType}`)}),publisherElems.find("publisher").length&&this.sendEvent(this.RAINBOW_ONWEBCONFERENCEPUBLISHERSADDED,{roomDbId:webConferenceSession.id}));const removedPublisherElems=stanzaElem.find("removed-publishers");removedPublisherElems.length&&(removedPublisherElems.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("user-id").text(),mediaType=publisherElem.find("media-type").text();if(publisherId===webConferenceSession.localParticipant.id){if("video"===mediaType)webConferenceSession.localParticipant.isVideoAvailable=!1,webConferenceSession.localParticipant.videoSession&&(this.webrtcConfigAndUtils.disableAllStreamsForSession(webConferenceSession.localParticipant.videoSession),webConferenceSession.localParticipant.videoSession.terminate(),webConferenceSession.localParticipant.videoSession=null);else if("sharing"===mediaType){webConferenceSession.hasLocalSharing=!1;let sharingSession=webConferenceSession.getLocalSharingSession();sharingSession&&(this.webrtcConfigAndUtils.disableAllStreamsForSession(sharingSession),sharingSession.terminate(),sharingSession=null)}}else{const participant=webConferenceSession.getParticipantById(publisherId);if("video"===mediaType)participant.isVideoAvailable=!1,participant.simulcast=!1,participant.videoSession&&(participant.videoSession.terminate(),participant.videoSession=null);else if("sharing"===mediaType){const sharingParticipant=webConferenceSession.getSharingParticipant();sharingParticipant&&sharingParticipant.id===participant.id&&webConferenceSession.setSharingParticipant(null)}}this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webConferenceSession.id} -- removePublisher -- ${publisherId} -- ${mediaType}`)}),this.sendEvent(this.RAINBOW_ONWEBCONFERENCEPUBLISHERSREMOVED,{roomDbId:webConferenceSession.id}));const silentsElems=stanzaElem.find("silents");if(silentsElems.length){const silent=silentsElems.find("user-id").text(),silentTime=silentsElems.find("talking-time").text();if(silent&&(webConferenceSession.talker=null,silentTime)){const silentTimeValue=silentTime?parseInt(silentTime,10):0;webConferenceSession.updateTalkingTimeForParticipant(silent,silentTimeValue)}}const talkerElems=stanzaElem.find("talkers");if(talkerElems.length){const talker=talkerElems.find("user-id").text(),talkingTime=talkerElems.find("talking-time").text();if(talker&&(webConferenceSession.lastTalker=talker,webConferenceSession.talker=talker,talkingTime)){const talkingTimeValue=talkingTime?parseInt(talkingTime,10):0;webConferenceSession.updateTalkingTimeForParticipant(talker,talkingTimeValue)}}const substreamElems=stanzaElem.find("substream");if(substreamElems.length){const publisherId=stanzaElem.find("user-id").text(),participant=webConferenceSession.getParticipantById(publisherId);participant&&participant.videoSession&&(participant.subStreamLevel=parseInt($(substreamElems[0]).text(),10))}(silentsElems.length||talkerElems.length)&&this.sendEvent(this.RAINBOW_ONWEBCONFERENCERETALKERAUPDATE,{roomDbId:webConferenceSession.id});if(stanzaElem.find("session-info").length){const phoneNumber=stanzaElem.find("phone-number").text(),state=stanzaElem.find("session-info").text();if(phoneNumber&&state){const participant=webConferenceSession.getParticipantById(phoneNumber);participant&&(participant.currentPstnState=state,"ringing"===state||"in_progress"===state?participant.noMicrophone=!0:"active"===state&&(participant.noMicrophone=!1)),this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREPARTICIPANTAUPDATE,{roomDbId:webConferenceSession.id})}}const services=stanzaElem.find("services");return services.length&&(services.find("service").each((__index,service)=>{const serviceElem=$(service),serviceId=serviceElem.find("service-id").text(),serviceType=serviceElem.find("service-type").text();webConferenceSession.addOrUpdateService(serviceId,serviceType),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webConferenceSession.id} -- services`)}),this.sendEvent(this.RAINBOW_ONWEBCONFERENCESERVICEUPDATE,{roomDbId:webConferenceSession.id})),!0}catch(error){return this.logger.error("[WebinarConferenceService] onConferenceMessage -- "+error.message),!0}}attachRemoteAudioStream(webConferenceSession){if(webConferenceSession.noAudio)return;const audioSession=webConferenceSession.getAudioSession();audioSession&&audioSession.remoteStreams&&audioSession.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&this.webrtcConfigAndUtils.RTC.attachMediaStreamIfNeeded([document.getElementById("globalAudioTag")],track,audioSession.sid)}),audioSession&&audioSession.remoteStreamsObject[0]&&this.webrtcConfigAndUtils.RTC.attachMediaStreamIfNeeded([document.getElementById("globalAudioTag")],audioSession.remoteStreamsObject[0],audioSession.sid);const sharingSession=webConferenceSession.getRemoteSharingSession();sharingSession&&sharingSession.remoteStreamsObject[0]&&sharingSession.remoteStreamsObject[0].getAudioTracks().length&&this.webrtcConfigAndUtils.RTC.attachMediaStreamIfNeeded([document.getElementById("globalVideoTag")],sharingSession.remoteStreamsObject[0],sharingSession.sid)}getWebConferenceByJingleSessionId(sessionId,confId=null){let conferenceId=confId;if(!conferenceId){const session=this.xmppService.connection.jingle.sessions[sessionId];if(!session)return null;conferenceId=session.conference_id}return this.webConferenceSessions[conferenceId]}onJingleUpdateStream(webConferenceSession,medias){medias&&medias.audio&&this.attachRemoteAudioStream(webConferenceSession)}onWebrtcP2PService(event){try{if("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED"===event.name){const webConferenceSession=this.getActiveWebConferenceSession();webConferenceSession&&webConferenceSession.localSharingSession&&this.removeMediaFromWebConferenceSession(webConferenceSession,"sharing")}}catch(error){this.logger.debug(`[WebConferenceServiceV2] onWebrtcP2PService error -- ${event.name} -- ${error}`)}}onJingleMessage(event){try{const conferenceSession=this.getWebConferenceByJingleSessionId(event.data.sid,event.data.confId);if(conferenceSession)switch(event.name){case"jingleSessionInvitation":this.onJingleSessionInvite(conferenceSession,event.data.sid);break;case"iceconnectionstatechange.jingle":this.onJingleConnectionStateChange(conferenceSession,event.data.session);break;case"callterminated.jingle":this.onSessionTerminated(conferenceSession,event.data.sid,event.data.reason);break;case"jingleUpdateStream":this.onJingleUpdateStream(conferenceSession,event.data.medias);break;case"error.jingle":this.onJingleErrorEvent(conferenceSession,event.data.sid,event.data.error);break;case"resubscriptionNeeded":this.onJingleResubscriptionNeededEvent(conferenceSession,event.data.sid);break;case"webrtcSessionStatsSimplyfied.jingle":this.onJingleSessionStats(conferenceSession,event.data.sid,event.data.data);break;case"packetLostQualityImpactEvent":this.onJinglePacketLostEvent(conferenceSession,event.data.sid,event.data.decreaseQuality);break;case"ack.jingle":break;default:this.logger.debug(`[WebConferenceServiceV2] onJingleMessage ignored -- ${event.name} -- ${conferenceSession.id}`)}}catch(error){this.logger.info("[WebConferenceServiceV2] onJingleMessage -- failure -- "+event.name)}}onJingleSessionInvite(webConferenceSession,sessionId){this.logger.info(`[WebConferenceServiceV2] onJingleSessionInvite -- ${webConferenceSession.id} -- ${sessionId}`);const session=this.xmppService.connection.jingle.sessions[sessionId];session.localType=session.remoteType,session.sendAnswer(),session.accept(),this.statsIntervals.push(session.getStats(8e3)),"video"!==session.localType||session.isInitiator||session.publisherId||(this.logger.info(`[WebConferenceServiceV2] onJingleSessionInvite -- ${webConferenceSession.id} -- ${sessionId} -- marked as dynamic feed`),webConferenceSession.dynamicFeedSession=session),this.logger.info(`[WebConferenceServiceV2] onJingleSessionInvite -- accept -- ${webConferenceSession.id} -- ${sessionId}`)}onSessionTerminated(webConferenceSession,sessionId,reason=""){if(this.logger.info(`[WebinarConferenceService] onJingleMessage -- onSessionTerminated -- ${webConferenceSession.id} -- ${sessionId} -- with reason ${reason}`),"multi-device"===reason)this.removeActiveConferenceSession(webConferenceSession);else if(webConferenceSession.audioSession&&webConferenceSession.audioSession.sid===sessionId)this.removeActiveConferenceSession(webConferenceSession);else{const session=this.xmppService.connection.jingle.sessions[sessionId];session&&"video"===session.remoteType&&!session.isInitiator?this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"removed"}):session||webConferenceSession.participants.forEach(webConferenceParticipant=>{webConferenceParticipant&&webConferenceParticipant.videoSession&&webConferenceParticipant.videoSession.sid===sessionId&&(webConferenceParticipant.videoSession.terminate(),webConferenceParticipant.videoSession=null,this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"removed"}))})}}onJingleSessionStats(webConferenceSession,sessionId,data){webConferenceSession.audioSession&&webConferenceSession.audioSession.sid===sessionId&&(webConferenceSession.networkQuality=data.networkQualityFlag,this.eventService.publish("ON_CONFERENCE_NETWORK_UPDATE_EVENT",webConferenceSession,"networkQuality",webConferenceSession.networkQuality))}onJinglePacketLostEvent(webConferenceSession,sessionId,decreaseQuality){if(this.logger.info(`[WebConferenceServiceV2] onJinglePacketLostEvent -- ${webConferenceSession.id} -- session sid ${sessionId} -- decreaseQuality ${decreaseQuality}`),!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_MODULATE_VIDEO_QUALITY))return void this.logger.info("[WebConferenceServiceV2] onJinglePacketLostEvent -- ignored -- profile not enabled");const session=this.xmppService.connection.jingle.sessions[sessionId];if(session){if(!session.isInitiator&&"video"===session.remoteType){const participant=webConferenceSession.getParticipantById(session.publisherId);participant&&this.webConferenceHelper.updateParticipantBasedOnPacketLostQualityLimitation(webConferenceSession,participant,decreaseQuality,session)}}else this.logger.info("[WebConferenceServiceV2] onJinglePacketLostEvent -- ignored -- session not found")}onJingleResubscriptionNeededEvent(webConferenceSession,sessionId){this.logger.warn(`[WebConferenceServiceV2] onJingleResubscriptionNeededEvent -- ${webConferenceSession.id} -- session sid ${sessionId}`);const session=this.xmppService.connection.jingle.sessions[sessionId];if(session&&!session.isInitiator){if("video"===session.remoteType){this.logger.info("[WebConferenceServiceV2] -- onJingleResubscriptionNeededEvent -- try to reconnect the remote video session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid);const participant=webConferenceSession.getParticipantById(session.publisherId);participant.videoSession&&(participant.videoSession=null,this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"removed"}),this.subscribeToParticipantVideo(webConferenceSession,participant))}if("sharing"===session.remoteType){this.logger.info("[WebConferenceServiceV2] -- onJingleResubscriptionNeededEvent -- try to reconnect the remote sharing session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid,"icefailed");const sharingParticipant=webConferenceSession.getRemoteSharingParticipant();sharingParticipant&&sharingParticipant.videoSession&&(sharingParticipant.videoSession=null,this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"sharing",action:"removed"}))}}}onJingleErrorEvent(webConferenceSession,sessionId,error){if(this.logger.error(`[WebConferenceServiceV2] onJingleErrorEvent -- ${webConferenceSession.id} -- ${JSON.stringify(error)}`),webConferenceSession.audioSession.sid===sessionId)this.leaveWebConference(webConferenceSession);else if(webConferenceSession.localParticipant.videoSession&&webConferenceSession.localParticipant.videoSession.sid===sessionId)this.removeMediaFromWebConferenceSession(webConferenceSession,"video");else if(webConferenceSession.localSharingSession&&webConferenceSession.localSharingSession.sid===sessionId)this.removeMediaFromWebConferenceSession(webConferenceSession,"sharing");else{const session=this.xmppService.connection.jingle.sessions[sessionId];if(session&&!session.isInitiator){if("video"===session.remoteType){this.logger.info("[WebConferenceServiceV2] -- onJingleErrorEvent -- try to reconnect the remote video session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid);const participant=webConferenceSession.getParticipantById(session.publisherId);participant.videoSession&&(participant.videoSession=null,this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"removed"}),this.subscribeToParticipantVideo(webConferenceSession,participant))}if("sharing"===session.remoteType){this.logger.info("[WebConferenceServiceV2] -- onJingleErrorEvent -- try to reconnect the remote sharing session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid,"icefailed");const sharingParticipant=webConferenceSession.getRemoteSharingParticipant();sharingParticipant&&sharingParticipant.videoSession&&(sharingParticipant.videoSession=null,this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"sharing",action:"removed"}))}}}}async onJingleConnectionStateChange(webConferenceSession,session){try{if(session&&session.peerconnection&&"stable"===session.peerconnection.signalingState){const state=session.peerconnection.connectionState?session.peerconnection.connectionState:session.peerconnection.iceConnectionState;switch(this.logger.info(`[WebConferenceServiceV2] onJingleConnectionStateChange -- ${webConferenceSession.id} -- ${session.sid} -- ${state}`),state){case"connecting":setTimeout(()=>{if(webConferenceSession&&session&&session.peerconnection){const newState=session.peerconnection.connectionState?session.peerconnection.connectionState:session.peerconnection.iceConnectionState;"connecting"===newState&&(this.logger.info(`[WebConferenceService] onJingleConnectionStateChange -- session remains blocked in connecting state -- ${webConferenceSession.id} -- ${session.sid} -- ${newState} -- ${session.peerconnection.signalingState}`),"audio"===session.localType||("video"===session.localType||"sharing"===session.localType)&&session.isInitiator?(session.connection=this.xmppService.connection,session.sendTransportReplace()):this.onIceConnectionFailedForSession(webConferenceSession,session))}},2e4);break;case"connected":case"completed":if("audio"===session.localType&&(webConferenceSession.status="connected",webConferenceSession.startDuration(),this.attachRemoteAudioStream(webConferenceSession),this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:webConferenceSession.id,status:"connected"})),"sharing"===session.localType)if(session.publisherId&&session.publisherId!==webConferenceSession.localParticipant.id){let sharingParticipant=webConferenceSession.getSharingParticipant();if(!sharingParticipant){const participant=webConferenceSession.getParticipantById(session.publisherId);sharingParticipant=new webConferenceParticipant_model_1.WebConferenceParticipant(participant.id),sharingParticipant.contact=participant.contact,sharingParticipant.isSharingParticipant=!0,webConferenceSession.setSharingParticipant(sharingParticipant)}sharingParticipant.videoSession=session,webConferenceSession.updatePinnedParticipant(webConferenceSession.getSharingParticipant(),"sharing"),this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"sharing",action:"added"}),this.logger.info(`[WebConferenceServiceV2] sharing sessionEstablished -- ${sharingParticipant.id} -- ${webConferenceSession.id}`)}else this.logger.info("[WebConferenceServiceV2] sharing sessionEstablished -- local -- "+webConferenceSession.id);else if("video"===session.localType)if(session.publisherId===webConferenceSession.localParticipant.id)this.logger.info("[WebConferenceServiceV2] video sessionEstablished -- local -- "+webConferenceSession.id);else if(session.publisherId){const participant=webConferenceSession.getParticipantById(session.publisherId);participant&&(participant.isVideoAvailable=!0,participant.videoSession=session,participant.subscriptionInProgress=!1),webConferenceSession&&webConferenceSession.gridServiceSubscription&&webConferenceSession.gridServiceSubscription.sessionId===session.sid?(this.logger.info("[WebConferenceServiceV2] video sessionEstablished -- grid/mozaic service -- "+webConferenceSession.id),webConferenceSession.gridServiceSubscription.videoSession=session,this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"mozaic",action:"added"})):this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"video",action:"added"})}else this.logger.info("[WebConferenceServiceV2] video sessionEstablished -- dynamicFeed -- "+webConferenceSession.id),this.sendEvent(this.RAINBOW_ONWEBCONFERENCEREMOTEMEDIAUPDATE,{roomDbId:webConferenceSession.id,mediaType:"dynamicFeed",action:"added"});this.sendEvent("peerConnectionEstablished",{sessionId:session.sid});break;case"disconnected":this.logger.info(`[WebConferenceServiceV2] session ICE Disconnected -- ${webConferenceSession.id} -- ${session.sid}`),this.onIceConnectionDisconnectedForSession(webConferenceSession,session);break;case"failed":this.logger.info(`[WebConferenceServiceV2] session ICE Failed -- ${webConferenceSession.id} -- ${session.sid}`),this.onIceConnectionFailedForSession(webConferenceSession,session)}}else session&&session.peerconnection&&"stable"!==session.peerconnection.signalingState&&this.logger.info(`[WebConferenceService] onJingleConnectionStateChange signaling state change -- ${webConferenceSession.id} -- ${session.sid} -- ${session.peerconnection.signalingState}`)}catch(error){this.logger.error("[WebConferenceServiceV2] onIceConnectionStateChange error -- "+error)}}reconnectActiveConferenceSession(){const webConferenceSession=this.getActiveWebConferenceSession();webConferenceSession&&(webConferenceSession.localParticipant?(this.logger.info("[WebConferenceServiceV2] -- reconnectAllActiveConferenceSessions -- try to reconnect the audio session"),this.sendTransportReplaceForSession(webConferenceSession,webConferenceSession.audioSession,1e3),webConferenceSession.localParticipant.videoSession&&(this.logger.info("[WebConferenceServiceV2] -- reconnectAllActiveConferenceSessions -- try to reconnect the video session"),this.sendTransportReplaceForSession(webConferenceSession,webConferenceSession.localParticipant.videoSession,2e3)),webConferenceSession.localSharingSession&&(this.logger.info("[WebConferenceServiceV2] -- reconnectAllActiveConferenceSessions -- try to reconnect the sharing session"),this.sendTransportReplaceForSession(webConferenceSession,webConferenceSession.localSharingSession,3e3)),setTimeout(()=>{const sharingParticipant=webConferenceSession.getRemoteSharingParticipant();if(sharingParticipant&&sharingParticipant.videoSession&&sharingParticipant.videoSession.peerconnection){const state=sharingParticipant.videoSession.peerconnection.connectionState?sharingParticipant.videoSession.peerconnection.connectionState:sharingParticipant.videoSession.peerconnection.iceConnectionState;"stable"!==sharingParticipant.videoSession.peerconnection.signalingState||"failed"!==state&&"disconnected"!==state||this.onIceConnectionFailedForSession(webConferenceSession,sharingParticipant.videoSession)}if(webConferenceSession.dynamicFeedSession&&webConferenceSession.dynamicFeedSession.peerconnection){const state=webConferenceSession.dynamicFeedSession.peerconnection.connectionState?webConferenceSession.dynamicFeedSession.peerconnection.connectionState:webConferenceSession.dynamicFeedSession.peerconnection.iceConnectionState;"stable"!==webConferenceSession.dynamicFeedSession.peerconnection.signalingState||"failed"!==state&&"disconnected"!==state||this.onIceConnectionFailedForSession(webConferenceSession,webConferenceSession.dynamicFeedSession)}if(webConferenceSession.gridServiceSubscription&&webConferenceSession.gridServiceSubscription.videoSession&&webConferenceSession.gridServiceSubscription.videoSession.peerconnection){const state=webConferenceSession.gridServiceSubscription.videoSession.peerconnection.connectionState?webConferenceSession.gridServiceSubscription.videoSession.peerconnection.connectionState:webConferenceSession.gridServiceSubscription.videoSession.peerconnection.iceConnectionState;"stable"!==webConferenceSession.gridServiceSubscription.videoSession.peerconnection.signalingState||"failed"!==state&&"disconnected"!==state||this.onIceConnectionFailedForSession(webConferenceSession,webConferenceSession.gridServiceSubscription.videoSession)}webConferenceSession.participants.forEach(participant=>{if(participant.videoSession&&participant.videoSession.peerconnection){const state=participant.videoSession.peerconnection.connectionState?participant.videoSession.peerconnection.connectionState:participant.videoSession.peerconnection.iceConnectionState;"stable"!==participant.videoSession.peerconnection.signalingState||"failed"!==state&&"disconnected"!==state||this.onIceConnectionFailedForSession(webConferenceSession,participant.videoSession)}})},4e3)):this.removeActiveConferenceSession(webConferenceSession))}onIceConnectionFailedForSession(webConferenceSession,session){if("audio"===session.localType||("video"===session.localType||"sharing"===session.localType)&&session.isInitiator)this.onIceConnectionDisconnectedForSession(webConferenceSession,session);else if(this.connected&&!session.isInitiator){if("video"===session.remoteType)if(this.logger.info("[WebConferenceServiceV2] -- onIceConnectionFailedForSession -- reconnect the remote video session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid),this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],webConferenceSession.gridServiceSubscription&&webConferenceSession.gridServiceSubscription.videoSession&&webConferenceSession.gridServiceSubscription.videoSession.sid===session.sid)this.logger.info("[WebConferenceServiceV2] -- onIceConnectionFailedForSession -- reconnect the grid / mozaic service session -- "+session.sid),webConferenceSession.gridServiceSubscription=null,webConferenceSession.services.forEach(service=>{"video-compositor"===service.name&&this.subscribeToService(webConferenceSession,service.id)});else if(session.publisherId){const participant=webConferenceSession.getParticipantById(session.publisherId);participant.videoSession=null,this.subscribeToParticipantVideo(webConferenceSession,participant)}else this.logger.info("[WebConferenceServiceV2] -- onIceConnectionFailedForSession -- reconnect the dynamic feed session -- "+session.sid),webConferenceSession.dynamicFeedSession=null,this.subscribeToDynamicFeed(webConferenceSession);if("sharing"===session.remoteType){this.logger.info("[WebConferenceServiceV2] -- onIceConnectionFailedForSession -- reconnect the remote sharing session -- "+session.sid),this.xmppService.connection.jingle.terminate(session.sid,"icefailed");const sharingParticipant=webConferenceSession.getRemoteSharingParticipant();sharingParticipant&&sharingParticipant.videoSession&&(sharingParticipant.videoSession=null),this.updateStatisticsForSession(webConferenceSession,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid]}}}onIceConnectionDisconnectedForSession(webConferenceSession,session){"audio"===session.localType?(webConferenceSession.status="reconnecting",this.sendEvent(this.RAINBOW_ONWEBCONFERENCESTATUSUPDATED,{roomDbId:webConferenceSession.id,status:"reconnecting"}),this.connected&&this.sendTransportReplaceForSession(webConferenceSession,session,5e3)):"video"!==session.localType&&"sharing"!==session.localType||!session.isInitiator||this.connected&&this.sendTransportReplaceForSession(webConferenceSession,session,8e3)}sendTransportReplaceForSession(webConferenceSession,session,timeout=1e3){if(!session||!session.sid)return void this.logger.warn("[WebConferenceServiceV2] sendTransportReplaceForSession missing session !");if(!session.peerconnection)return void this.logger.warn("[WebConferenceServiceV2] sendTransportReplaceForSession missing peerconnection for session !");const connectionState=session.peerconnection.connectionState?session.peerconnection.connectionState:session.peerconnection.iceConnectionState;session.peerconnection&&"stable"===session.peerconnection.signalingState&&"failed"!==connectionState&&"disconnected"!==connectionState?this.logger.info("[WebConferenceServiceV2] sendTransportReplaceForSession not needed for "+session.sid):this.reconnectionsInProgress[session.sid]?this.logger.info("[WebConferenceServiceV2] sendTransportReplaceForSession already reconnecting for session "+session.sid):(this.reconnectionsInProgress[session.sid]=!0,setTimeout(()=>{if(this.reconnectionsInProgress[session.sid]=!1,delete this.reconnectionsInProgress[session.sid],this.connected&&session&&session.peerconnection&&"stable"===session.peerconnection.signalingState&&("failed"===session.peerconnection.iceConnectionState||"disconnected"===session.peerconnection.iceConnectionState)){this.logger.info("[WebConferenceServiceV2] sendTransportReplaceForSession for session "+session.sid),session.connection=this.xmppService.connection,session.sendTransportReplace();const state=webConferenceSession&&webConferenceSession.localSharingSession?"sharing":"audio";this.contactService.setBusyState("dnd",state)}else this.connected&&session&&session.peerconnection&&"closed"===session.peerconnection.iceConnectionState?"audio"===session.localType?this.leaveWebConference(webConferenceSession):"video"!==session.localType&&"sharing"!==session.localType||!session.isInitiator||this.removeMediaFromWebConferenceSession(webConferenceSession,session.localType):this.logger.info("[WebConferenceServiceV2] sendTransportReplaceForSession for session "+session.sid+" is not send ...")},timeout))}}exports.WebConferenceServiceV2=WebConferenceServiceV2},function(module,exports,__webpack_require__){"use strict";(function(global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var base64=__webpack_require__(431),ieee754=__webpack_require__(432),isArray=__webpack_require__(433);function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(that,length){if(kMaxLength()<length)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(that=new Uint8Array(length)).__proto__=Buffer.prototype:(null===that&&(that=new Buffer(length)),that.length=length),that}function Buffer(arg,encodingOrOffset,length){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(arg,encodingOrOffset,length);if("number"==typeof arg){if("string"==typeof encodingOrOffset)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,arg)}return from(this,arg,encodingOrOffset,length)}function from(that,value,encodingOrOffset,length){if("number"==typeof value)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&value instanceof ArrayBuffer?function(that,array,byteOffset,length){if(array.byteLength,byteOffset<0||array.byteLength<byteOffset)throw new RangeError("'offset' is out of bounds");if(array.byteLength<byteOffset+(length||0))throw new RangeError("'length' is out of bounds");array=void 0===byteOffset&&void 0===length?new Uint8Array(array):void 0===length?new Uint8Array(array,byteOffset):new Uint8Array(array,byteOffset,length);Buffer.TYPED_ARRAY_SUPPORT?(that=array).__proto__=Buffer.prototype:that=fromArrayLike(that,array);return that}(that,value,encodingOrOffset,length):"string"==typeof value?function(that,string,encoding){"string"==typeof encoding&&""!==encoding||(encoding="utf8");if(!Buffer.isEncoding(encoding))throw new TypeError('"encoding" must be a valid string encoding');var length=0|byteLength(string,encoding),actual=(that=createBuffer(that,length)).write(string,encoding);actual!==length&&(that=that.slice(0,actual));return that}(that,value,encodingOrOffset):function(that,obj){if(Buffer.isBuffer(obj)){var len=0|checked(obj.length);return 0===(that=createBuffer(that,len)).length||obj.copy(that,0,0,len),that}if(obj){if("undefined"!=typeof ArrayBuffer&&obj.buffer instanceof ArrayBuffer||"length"in obj)return"number"!=typeof obj.length||(val=obj.length)!=val?createBuffer(that,0):fromArrayLike(that,obj);if("Buffer"===obj.type&&isArray(obj.data))return fromArrayLike(that,obj.data)}var val;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(that,value)}function assertSize(size){if("number"!=typeof size)throw new TypeError('"size" argument must be a number');if(size<0)throw new RangeError('"size" argument must not be negative')}function allocUnsafe(that,size){if(assertSize(size),that=createBuffer(that,size<0?0:0|checked(size)),!Buffer.TYPED_ARRAY_SUPPORT)for(var i=0;i<size;++i)that[i]=0;return that}function fromArrayLike(that,array){var length=array.length<0?0:0|checked(array.length);that=createBuffer(that,length);for(var i=0;i<length;i+=1)that[i]=255&array[i];return that}function checked(length){if(length>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|length}function byteLength(string,encoding){if(Buffer.isBuffer(string))return string.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer))return string.byteLength;"string"!=typeof string&&(string=""+string);var len=string.length;if(0===len)return 0;for(var loweredCase=!1;;)switch(encoding){case"ascii":case"latin1":case"binary":return len;case"utf8":case"utf-8":case void 0:return utf8ToBytes(string).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*len;case"hex":return len>>>1;case"base64":return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;encoding=(""+encoding).toLowerCase(),loweredCase=!0}}function slowToString(encoding,start,end){var loweredCase=!1;if((void 0===start||start<0)&&(start=0),start>this.length)return"";if((void 0===end||end>this.length)&&(end=this.length),end<=0)return"";if((end>>>=0)<=(start>>>=0))return"";for(encoding||(encoding="utf8");;)switch(encoding){case"hex":return hexSlice(this,start,end);case"utf8":case"utf-8":return utf8Slice(this,start,end);case"ascii":return asciiSlice(this,start,end);case"latin1":case"binary":return latin1Slice(this,start,end);case"base64":return base64Slice(this,start,end);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(encoding+"").toLowerCase(),loweredCase=!0}}function swap(b,n,m){var i=b[n];b[n]=b[m],b[m]=i}function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){if(0===buffer.length)return-1;if("string"==typeof byteOffset?(encoding=byteOffset,byteOffset=0):byteOffset>2147483647?byteOffset=2147483647:byteOffset<-2147483648&&(byteOffset=-2147483648),byteOffset=+byteOffset,isNaN(byteOffset)&&(byteOffset=dir?0:buffer.length-1),byteOffset<0&&(byteOffset=buffer.length+byteOffset),byteOffset>=buffer.length){if(dir)return-1;byteOffset=buffer.length-1}else if(byteOffset<0){if(!dir)return-1;byteOffset=0}if("string"==typeof val&&(val=Buffer.from(val,encoding)),Buffer.isBuffer(val))return 0===val.length?-1:arrayIndexOf(buffer,val,byteOffset,encoding,dir);if("number"==typeof val)return val&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?dir?Uint8Array.prototype.indexOf.call(buffer,val,byteOffset):Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset):arrayIndexOf(buffer,[val],byteOffset,encoding,dir);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var i,indexSize=1,arrLength=arr.length,valLength=val.length;if(void 0!==encoding&&("ucs2"===(encoding=String(encoding).toLowerCase())||"ucs-2"===encoding||"utf16le"===encoding||"utf-16le"===encoding)){if(arr.length<2||val.length<2)return-1;indexSize=2,arrLength/=2,valLength/=2,byteOffset/=2}function read(buf,i){return 1===indexSize?buf[i]:buf.readUInt16BE(i*indexSize)}if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++)if(read(arr,i)===read(val,-1===foundIndex?0:i-foundIndex)){if(-1===foundIndex&&(foundIndex=i),i-foundIndex+1===valLength)return foundIndex*indexSize}else-1!==foundIndex&&(i-=i-foundIndex),foundIndex=-1}else for(byteOffset+valLength>arrLength&&(byteOffset=arrLength-valLength),i=byteOffset;i>=0;i--){for(var found=!0,j=0;j<valLength;j++)if(read(arr,i+j)!==read(val,j)){found=!1;break}if(found)return i}return-1}function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;length?(length=Number(length))>remaining&&(length=remaining):length=remaining;var strLen=string.length;if(strLen%2!=0)throw new TypeError("Invalid hex string");length>strLen/2&&(length=strLen/2);for(var i=0;i<length;++i){var parsed=parseInt(string.substr(2*i,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed}return i}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length)}function asciiWrite(buf,string,offset,length){return blitBuffer(function(str){for(var byteArray=[],i=0;i<str.length;++i)byteArray.push(255&str.charCodeAt(i));return byteArray}(string),buf,offset,length)}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length)}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length)}function ucs2Write(buf,string,offset,length){return blitBuffer(function(str,units){for(var c,hi,lo,byteArray=[],i=0;i<str.length&&!((units-=2)<0);++i)c=str.charCodeAt(i),hi=c>>8,lo=c%256,byteArray.push(lo),byteArray.push(hi);return byteArray}(string,buf.length-offset),buf,offset,length)}function base64Slice(buf,start,end){return 0===start&&end===buf.length?base64.fromByteArray(buf):base64.fromByteArray(buf.slice(start,end))}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);for(var res=[],i=start;i<end;){var secondByte,thirdByte,fourthByte,tempCodePoint,firstByte=buf[i],codePoint=null,bytesPerSequence=firstByte>239?4:firstByte>223?3:firstByte>191?2:1;if(i+bytesPerSequence<=end)switch(bytesPerSequence){case 1:firstByte<128&&(codePoint=firstByte);break;case 2:128==(192&(secondByte=buf[i+1]))&&(tempCodePoint=(31&firstByte)<<6|63&secondByte)>127&&(codePoint=tempCodePoint);break;case 3:secondByte=buf[i+1],thirdByte=buf[i+2],128==(192&secondByte)&&128==(192&thirdByte)&&(tempCodePoint=(15&firstByte)<<12|(63&secondByte)<<6|63&thirdByte)>2047&&(tempCodePoint<55296||tempCodePoint>57343)&&(codePoint=tempCodePoint);break;case 4:secondByte=buf[i+1],thirdByte=buf[i+2],fourthByte=buf[i+3],128==(192&secondByte)&&128==(192&thirdByte)&&128==(192&fourthByte)&&(tempCodePoint=(15&firstByte)<<18|(63&secondByte)<<12|(63&thirdByte)<<6|63&fourthByte)>65535&&tempCodePoint<1114112&&(codePoint=tempCodePoint)}null===codePoint?(codePoint=65533,bytesPerSequence=1):codePoint>65535&&(codePoint-=65536,res.push(codePoint>>>10&1023|55296),codePoint=56320|1023&codePoint),res.push(codePoint),i+=bytesPerSequence}return function(codePoints){var len=codePoints.length;if(len<=4096)return String.fromCharCode.apply(String,codePoints);var res="",i=0;for(;i<len;)res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=4096));return res}(res)}exports.Buffer=Buffer,exports.SlowBuffer=function(length){+length!=length&&(length=0);return Buffer.alloc(+length)},exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:function(){try{var arr=new Uint8Array(1);return arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===arr.foo()&&"function"==typeof arr.subarray&&0===arr.subarray(1,1).byteLength}catch(e){return!1}}(),exports.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(arr){return arr.__proto__=Buffer.prototype,arr},Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(size,fill,encoding){return function(that,size,fill,encoding){return assertSize(size),size<=0?createBuffer(that,size):void 0!==fill?"string"==typeof encoding?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill):createBuffer(that,size)}(null,size,fill,encoding)},Buffer.allocUnsafe=function(size){return allocUnsafe(null,size)},Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size)},Buffer.isBuffer=function(b){return!(null==b||!b._isBuffer)},Buffer.compare=function(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var x=a.length,y=b.length,i=0,len=Math.min(x,y);i<len;++i)if(a[i]!==b[i]){x=a[i],y=b[i];break}return x<y?-1:y<x?1:0},Buffer.isEncoding=function(encoding){switch(String(encoding).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(list,length){if(!isArray(list))throw new TypeError('"list" argument must be an Array of Buffers');if(0===list.length)return Buffer.alloc(0);var i;if(void 0===length)for(length=0,i=0;i<list.length;++i)length+=list[i].length;var buffer=Buffer.allocUnsafe(length),pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer.isBuffer(buf))throw new TypeError('"list" argument must be an Array of Buffers');buf.copy(buffer,pos),pos+=buf.length}return buffer},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var len=this.length;if(len%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<len;i+=2)swap(this,i,i+1);return this},Buffer.prototype.swap32=function(){var len=this.length;if(len%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<len;i+=4)swap(this,i,i+3),swap(this,i+1,i+2);return this},Buffer.prototype.swap64=function(){var len=this.length;if(len%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<len;i+=8)swap(this,i,i+7),swap(this,i+1,i+6),swap(this,i+2,i+5),swap(this,i+3,i+4);return this},Buffer.prototype.toString=function(){var length=0|this.length;return 0===length?"":0===arguments.length?utf8Slice(this,0,length):slowToString.apply(this,arguments)},Buffer.prototype.equals=function(b){if(!Buffer.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===Buffer.compare(this,b)},Buffer.prototype.inspect=function(){var str="",max=exports.INSPECT_MAX_BYTES;return this.length>0&&(str=this.toString("hex",0,max).match(/.{2}/g).join(" "),this.length>max&&(str+=" ... ")),"<Buffer "+str+">"},Buffer.prototype.compare=function(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target))throw new TypeError("Argument must be a Buffer");if(void 0===start&&(start=0),void 0===end&&(end=target?target.length:0),void 0===thisStart&&(thisStart=0),void 0===thisEnd&&(thisEnd=this.length),start<0||end>target.length||thisStart<0||thisEnd>this.length)throw new RangeError("out of range index");if(thisStart>=thisEnd&&start>=end)return 0;if(thisStart>=thisEnd)return-1;if(start>=end)return 1;if(this===target)return 0;for(var x=(thisEnd>>>=0)-(thisStart>>>=0),y=(end>>>=0)-(start>>>=0),len=Math.min(x,y),thisCopy=this.slice(thisStart,thisEnd),targetCopy=target.slice(start,end),i=0;i<len;++i)if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i],y=targetCopy[i];break}return x<y?-1:y<x?1:0},Buffer.prototype.includes=function(val,byteOffset,encoding){return-1!==this.indexOf(val,byteOffset,encoding)},Buffer.prototype.indexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!0)},Buffer.prototype.lastIndexOf=function(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,!1)},Buffer.prototype.write=function(string,offset,length,encoding){if(void 0===offset)encoding="utf8",length=this.length,offset=0;else if(void 0===length&&"string"==typeof offset)encoding=offset,length=this.length,offset=0;else{if(!isFinite(offset))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");offset|=0,isFinite(length)?(length|=0,void 0===encoding&&(encoding="utf8")):(encoding=length,length=void 0)}var remaining=this.length-offset;if((void 0===length||length>remaining)&&(length=remaining),string.length>0&&(length<0||offset<0)||offset>this.length)throw new RangeError("Attempt to write outside buffer bounds");encoding||(encoding="utf8");for(var loweredCase=!1;;)switch(encoding){case"hex":return hexWrite(this,string,offset,length);case"utf8":case"utf-8":return utf8Write(this,string,offset,length);case"ascii":return asciiWrite(this,string,offset,length);case"latin1":case"binary":return latin1Write(this,string,offset,length);case"base64":return base64Write(this,string,offset,length);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError("Unknown encoding: "+encoding);encoding=(""+encoding).toLowerCase(),loweredCase=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function asciiSlice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(127&buf[i]);return ret}function latin1Slice(buf,start,end){var ret="";end=Math.min(buf.length,end);for(var i=start;i<end;++i)ret+=String.fromCharCode(buf[i]);return ret}function hexSlice(buf,start,end){var len=buf.length;(!start||start<0)&&(start=0),(!end||end<0||end>len)&&(end=len);for(var out="",i=start;i<end;++i)out+=toHex(buf[i]);return out}function utf16leSlice(buf,start,end){for(var bytes=buf.slice(start,end),res="",i=0;i<bytes.length;i+=2)res+=String.fromCharCode(bytes[i]+256*bytes[i+1]);return res}function checkOffset(offset,ext,length){if(offset%1!=0||offset<0)throw new RangeError("offset is not uint");if(offset+ext>length)throw new RangeError("Trying to access beyond buffer length")}function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError("Index out of range")}function objectWriteUInt16(buf,value,offset,littleEndian){value<0&&(value=65535+value+1);for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i)buf[offset+i]=(value&255<<8*(littleEndian?i:1-i))>>>8*(littleEndian?i:1-i)}function objectWriteUInt32(buf,value,offset,littleEndian){value<0&&(value=4294967295+value+1);for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i)buf[offset+i]=value>>>8*(littleEndian?i:3-i)&255}function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError("Index out of range");if(offset<0)throw new RangeError("Index out of range")}function writeFloat(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,4),ieee754.write(buf,value,offset,littleEndian,23,4),offset+4}function writeDouble(buf,value,offset,littleEndian,noAssert){return noAssert||checkIEEE754(buf,0,offset,8),ieee754.write(buf,value,offset,littleEndian,52,8),offset+8}Buffer.prototype.slice=function(start,end){var newBuf,len=this.length;if((start=~~start)<0?(start+=len)<0&&(start=0):start>len&&(start=len),(end=void 0===end?len:~~end)<0?(end+=len)<0&&(end=0):end>len&&(end=len),end<start&&(end=start),Buffer.TYPED_ARRAY_SUPPORT)(newBuf=this.subarray(start,end)).__proto__=Buffer.prototype;else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,void 0);for(var i=0;i<sliceLen;++i)newBuf[i]=this[i+start]}return newBuf},Buffer.prototype.readUIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val},Buffer.prototype.readUIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset+--byteLength],mul=1;byteLength>0&&(mul*=256);)val+=this[offset+--byteLength]*mul;return val},Buffer.prototype.readUInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),this[offset]},Buffer.prototype.readUInt16LE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]|this[offset+1]<<8},Buffer.prototype.readUInt16BE=function(offset,noAssert){return noAssert||checkOffset(offset,2,this.length),this[offset]<<8|this[offset+1]},Buffer.prototype.readUInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+16777216*this[offset+3]},Buffer.prototype.readUInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),16777216*this[offset]+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3])},Buffer.prototype.readIntLE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var val=this[offset],mul=1,i=0;++i<byteLength&&(mul*=256);)val+=this[offset+i]*mul;return val>=(mul*=128)&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readIntBE=function(offset,byteLength,noAssert){offset|=0,byteLength|=0,noAssert||checkOffset(offset,byteLength,this.length);for(var i=byteLength,mul=1,val=this[offset+--i];i>0&&(mul*=256);)val+=this[offset+--i]*mul;return val>=(mul*=128)&&(val-=Math.pow(2,8*byteLength)),val},Buffer.prototype.readInt8=function(offset,noAssert){return noAssert||checkOffset(offset,1,this.length),128&this[offset]?-1*(255-this[offset]+1):this[offset]},Buffer.prototype.readInt16LE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt16BE=function(offset,noAssert){noAssert||checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return 32768&val?4294901760|val:val},Buffer.prototype.readInt32LE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24},Buffer.prototype.readInt32BE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3]},Buffer.prototype.readFloatLE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!0,23,4)},Buffer.prototype.readFloatBE=function(offset,noAssert){return noAssert||checkOffset(offset,4,this.length),ieee754.read(this,offset,!1,23,4)},Buffer.prototype.readDoubleLE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!0,52,8)},Buffer.prototype.readDoubleBE=function(offset,noAssert){return noAssert||checkOffset(offset,8,this.length),ieee754.read(this,offset,!1,52,8)},Buffer.prototype.writeUIntLE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var mul=1,i=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUIntBE=function(value,offset,byteLength,noAssert){(value=+value,offset|=0,byteLength|=0,noAssert)||checkInt(this,value,offset,byteLength,Math.pow(2,8*byteLength)-1,0);var i=byteLength-1,mul=1;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)this[offset+i]=value/mul&255;return offset+byteLength},Buffer.prototype.writeUInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),this[offset]=255&value,offset+1},Buffer.prototype.writeUInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeUInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeUInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset+3]=value>>>24,this[offset+2]=value>>>16,this[offset+1]=value>>>8,this[offset]=255&value):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeUInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeIntLE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=0,mul=1,sub=0;for(this[offset]=255&value;++i<byteLength&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i-1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeIntBE=function(value,offset,byteLength,noAssert){if(value=+value,offset|=0,!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit)}var i=byteLength-1,mul=1,sub=0;for(this[offset+i]=255&value;--i>=0&&(mul*=256);)value<0&&0===sub&&0!==this[offset+i+1]&&(sub=1),this[offset+i]=(value/mul>>0)-sub&255;return offset+byteLength},Buffer.prototype.writeInt8=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(value=Math.floor(value)),value<0&&(value=255+value+1),this[offset]=255&value,offset+1},Buffer.prototype.writeInt16LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8):objectWriteUInt16(this,value,offset,!0),offset+2},Buffer.prototype.writeInt16BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>8,this[offset+1]=255&value):objectWriteUInt16(this,value,offset,!1),offset+2},Buffer.prototype.writeInt32LE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=255&value,this[offset+1]=value>>>8,this[offset+2]=value>>>16,this[offset+3]=value>>>24):objectWriteUInt32(this,value,offset,!0),offset+4},Buffer.prototype.writeInt32BE=function(value,offset,noAssert){return value=+value,offset|=0,noAssert||checkInt(this,value,offset,4,2147483647,-2147483648),value<0&&(value=4294967295+value+1),Buffer.TYPED_ARRAY_SUPPORT?(this[offset]=value>>>24,this[offset+1]=value>>>16,this[offset+2]=value>>>8,this[offset+3]=255&value):objectWriteUInt32(this,value,offset,!1),offset+4},Buffer.prototype.writeFloatLE=function(value,offset,noAssert){return writeFloat(this,value,offset,!0,noAssert)},Buffer.prototype.writeFloatBE=function(value,offset,noAssert){return writeFloat(this,value,offset,!1,noAssert)},Buffer.prototype.writeDoubleLE=function(value,offset,noAssert){return writeDouble(this,value,offset,!0,noAssert)},Buffer.prototype.writeDoubleBE=function(value,offset,noAssert){return writeDouble(this,value,offset,!1,noAssert)},Buffer.prototype.copy=function(target,targetStart,start,end){if(start||(start=0),end||0===end||(end=this.length),targetStart>=target.length&&(targetStart=target.length),targetStart||(targetStart=0),end>0&&end<start&&(end=start),end===start)return 0;if(0===target.length||0===this.length)return 0;if(targetStart<0)throw new RangeError("targetStart out of bounds");if(start<0||start>=this.length)throw new RangeError("sourceStart out of bounds");if(end<0)throw new RangeError("sourceEnd out of bounds");end>this.length&&(end=this.length),target.length-targetStart<end-start&&(end=target.length-targetStart+start);var i,len=end-start;if(this===target&&start<targetStart&&targetStart<end)for(i=len-1;i>=0;--i)target[i+targetStart]=this[i+start];else if(len<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(i=0;i<len;++i)target[i+targetStart]=this[i+start];else Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);return len},Buffer.prototype.fill=function(val,start,end,encoding){if("string"==typeof val){if("string"==typeof start?(encoding=start,start=0,end=this.length):"string"==typeof end&&(encoding=end,end=this.length),1===val.length){var code=val.charCodeAt(0);code<256&&(val=code)}if(void 0!==encoding&&"string"!=typeof encoding)throw new TypeError("encoding must be a string");if("string"==typeof encoding&&!Buffer.isEncoding(encoding))throw new TypeError("Unknown encoding: "+encoding)}else"number"==typeof val&&(val&=255);if(start<0||this.length<start||this.length<end)throw new RangeError("Out of range index");if(end<=start)return this;var i;if(start>>>=0,end=void 0===end?this.length:end>>>0,val||(val=0),"number"==typeof val)for(i=start;i<end;++i)this[i]=val;else{var bytes=Buffer.isBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString()),len=bytes.length;for(i=0;i<end-start;++i)this[i+start]=bytes[i%len]}return this};var INVALID_BASE64_RE=/[^+\/0-9A-Za-z-_]/g;function toHex(n){return n<16?"0"+n.toString(16):n.toString(16)}function utf8ToBytes(string,units){var codePoint;units=units||1/0;for(var length=string.length,leadSurrogate=null,bytes=[],i=0;i<length;++i){if((codePoint=string.charCodeAt(i))>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){(units-=3)>-1&&bytes.push(239,191,189);continue}if(i+1===length){(units-=3)>-1&&bytes.push(239,191,189);continue}leadSurrogate=codePoint;continue}if(codePoint<56320){(units-=3)>-1&&bytes.push(239,191,189),leadSurrogate=codePoint;continue}codePoint=65536+(leadSurrogate-55296<<10|codePoint-56320)}else leadSurrogate&&(units-=3)>-1&&bytes.push(239,191,189);if(leadSurrogate=null,codePoint<128){if((units-=1)<0)break;bytes.push(codePoint)}else if(codePoint<2048){if((units-=2)<0)break;bytes.push(codePoint>>6|192,63&codePoint|128)}else if(codePoint<65536){if((units-=3)<0)break;bytes.push(codePoint>>12|224,codePoint>>6&63|128,63&codePoint|128)}else{if(!(codePoint<1114112))throw new Error("Invalid code point");if((units-=4)<0)break;bytes.push(codePoint>>18|240,codePoint>>12&63|128,codePoint>>6&63|128,63&codePoint|128)}}return bytes}function base64ToBytes(str){return base64.toByteArray(function(str){if((str=function(str){return str.trim?str.trim():str.replace(/^\s+|\s+$/g,"")}(str).replace(INVALID_BASE64_RE,"")).length<2)return"";for(;str.length%4!=0;)str+="=";return str}(str))}function blitBuffer(src,dst,offset,length){for(var i=0;i<length&&!(i+offset>=dst.length||i>=src.length);++i)dst[i+offset]=src[i];return i}}).call(this,__webpack_require__(134))},function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib_es6=__webpack_require__(0),QueueAction_QueueAction=function(_super){function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return tslib_es6.a(QueueAction,_super),QueueAction.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),delay>0?_super.prototype.schedule.call(this,state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)},QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay)},QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):scheduler.flush(this)},QueueAction}(__webpack_require__(53).a),QueueScheduler_QueueScheduler=function(_super){function QueueScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return tslib_es6.a(QueueScheduler,_super),QueueScheduler}(__webpack_require__(51).a);__webpack_require__.d(__webpack_exports__,"b",(function(){return queueScheduler})),__webpack_require__.d(__webpack_exports__,"a",(function(){return queue}));var queueScheduler=new QueueScheduler_QueueScheduler(QueueAction_QueueAction),queue=queueScheduler},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BehaviorSubject}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(14),_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(42),BehaviorSubject=function(_super){function BehaviorSubject(_value){var _this=_super.call(this)||this;return _this._value=_value,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(BehaviorSubject,_super),Object.defineProperty(BehaviorSubject.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);return subscription&&!subscription.closed&&subscriber.next(this._value),subscription},BehaviorSubject.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__.a;return this._value},BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value)},BehaviorSubject}(_Subject__WEBPACK_IMPORTED_MODULE_1__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Scheduler}));var Scheduler=function(){function Scheduler(SchedulerAction,now){void 0===now&&(now=Scheduler.now),this.SchedulerAction=SchedulerAction,this.now=now}return Scheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),new this.SchedulerAction(this,work).schedule(state,delay)},Scheduler.now=function(){return Date.now()},Scheduler}()},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class CompanyInvitation{static createFromData(data){return new CompanyInvitation(data.id,data.companyId,data.companyName,data.invitedUserId,data.invitedUserEmail,data.invitingAdminId,data.invitingAdminLoginEmail,data.invitationDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.declinationDate,data.invitedToBeCompanyAdmin)}constructor(id,companyId,companyName,invitedUserId,invitedUserEmail,invitingAdminId,invitingAdminLoginEmail,invitationDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,declinationDate,invitedToBeCompanyAdmin){this.id=id,this.companyId=companyId,this.companyName=companyName,this.invitedUserId=invitedUserId,this.invitedUserEmail=invitedUserEmail,this.invitingAdminId=invitingAdminId,this.invitingAdminLoginEmail=invitingAdminLoginEmail,this.invitationDate=invitationDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.declinationDate=declinationDate,this.invitedToBeCompanyAdmin=invitedToBeCompanyAdmin}}exports.CompanyInvitation=CompanyInvitation},function(module,exports,__webpack_require__){var factory;window,factory=function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="./src/strophe.js")}({"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){var g;g=function(){return this}();try{g=g||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(g=window)}module.exports=g},"./src/bosh.js":
/*!*********************!*\
  !*** ./src/bosh.js ***!
  \*********************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*! core */"./src/core.js"),Strophe=core__WEBPACK_IMPORTED_MODULE_0__.default.Strophe,$build=core__WEBPACK_IMPORTED_MODULE_0__.default.$build;Strophe.Request=function(elem,func,rid,sends){this.id=++Strophe._requestId,this.xmlData=elem,this.data=Strophe.serialize(elem),this.origFunc=func,this.func=func,this.rid=rid,this.date=NaN,this.sends=sends||0,this.abort=!1,this.dead=null,this.age=function(){return this.date?(new Date-this.date)/1e3:0},this.timeDead=function(){return this.dead?(new Date-this.dead)/1e3:0},this.xhr=this._newXHR()},Strophe.Request.prototype={getResponse:function(){var node=null;if(this.xhr.responseXML&&this.xhr.responseXML.documentElement){if("parsererror"===(node=this.xhr.responseXML.documentElement).tagName)throw Strophe.error("invalid response received"),Strophe.error("responseText: "+this.xhr.responseText),Strophe.error("responseXML: "+Strophe.serialize(this.xhr.responseXML)),new Error("parsererror")}else if(this.xhr.responseText){if(Strophe.debug("Got responseText but no responseXML; attempting to parse it with DOMParser..."),!(node=(new DOMParser).parseFromString(this.xhr.responseText,"application/xml").documentElement))throw new Error("Parsing produced null node");if(node.querySelector("parsererror")){Strophe.error("invalid response received: "+node.querySelector("parsererror").textContent),Strophe.error("responseText: "+this.xhr.responseText);var error=new Error;throw error.name=Strophe.ErrorCondition.BAD_FORMAT,error}}return node},_newXHR:function(){var xhr=null;return window.XMLHttpRequest?(xhr=new XMLHttpRequest).overrideMimeType&&xhr.overrideMimeType("text/xml; charset=utf-8"):window.ActiveXObject&&(xhr=new ActiveXObject("Microsoft.XMLHTTP")),xhr.onreadystatechange=this.func.bind(null,this),xhr}},Strophe.Bosh=function(connection){this._conn=connection,this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.hold=1,this.wait=60,this.window=5,this.errors=0,this.inactivity=null,this.lastResponseHeaders=null,this._requests=[]},Strophe.Bosh.prototype={strip:null,_buildBody:function(){var bodyWrap=$build("body",{rid:this.rid++,xmlns:Strophe.NS.HTTPBIND});return null!==this.sid&&bodyWrap.attrs({sid:this.sid}),this._conn.options.keepalive&&this._conn._sessionCachingSupported()&&this._cacheSession(),bodyWrap},_reset:function(){this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.errors=0,this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem("strophe-bosh-session"),this._conn.nextValidRid(this.rid)},_connect:function(wait,hold,route){this.wait=wait||this.wait,this.hold=hold||this.hold,this.errors=0;var body=this._buildBody().attrs({to:this._conn.domain,"xml:lang":"en",wait:this.wait,hold:this.hold,content:"text/xml; charset=utf-8",ver:"1.6","xmpp:version":"1.0","xmlns:xmpp":Strophe.NS.BOSH});route&&body.attrs({route:route});var _connect_cb=this._conn._connect_cb;this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this,_connect_cb.bind(this._conn)),body.tree().getAttribute("rid"))),this._throttledRequestHandler()},_attach:function(jid,sid,rid,callback,wait,hold,wind){this._conn.jid=jid,this.sid=sid,this.rid=rid,this._conn.connect_callback=callback,this._conn.domain=Strophe.getDomainFromJid(this._conn.jid),this._conn.authenticated=!0,this._conn.connected=!0,this.wait=wait||this.wait,this.hold=hold||this.hold,this.window=wind||this.window,this._conn._changeConnectStatus(Strophe.Status.ATTACHED,null)},_restore:function(jid,callback,wait,hold,wind){var session=JSON.parse(window.sessionStorage.getItem("strophe-bosh-session"));if(!(null!=session&&session.rid&&session.sid&&session.jid&&(null==jid||Strophe.getBareJidFromJid(session.jid)===Strophe.getBareJidFromJid(jid)||null===Strophe.getNodeFromJid(jid)&&Strophe.getDomainFromJid(session.jid)===jid))){var error=new Error("_restore: no restoreable session.");throw error.name="StropheSessionError",error}this._conn.restored=!0,this._attach(session.jid,session.sid,session.rid,callback,wait,hold,wind)},_cacheSession:function(){this._conn.authenticated?this._conn.jid&&this.rid&&this.sid&&window.sessionStorage.setItem("strophe-bosh-session",JSON.stringify({jid:this._conn.jid,rid:this.rid,sid:this.sid})):window.sessionStorage.removeItem("strophe-bosh-session")},_connect_cb:function(bodyWrap){var typ=bodyWrap.getAttribute("type");if(null!==typ&&"terminate"===typ){var cond=bodyWrap.getAttribute("condition");Strophe.error("BOSH-Connection failed: "+cond);var conflict=bodyWrap.getElementsByTagName("conflict");return null!==cond?("remote-stream-error"===cond&&conflict.length>0&&(cond="conflict"),this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,cond)):this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"unknown"),this._conn._doDisconnect(cond),Strophe.Status.CONNFAIL}this.sid||(this.sid=bodyWrap.getAttribute("sid"));var wind=bodyWrap.getAttribute("requests");wind&&(this.window=parseInt(wind,10));var hold=bodyWrap.getAttribute("hold");hold&&(this.hold=parseInt(hold,10));var wait=bodyWrap.getAttribute("wait");wait&&(this.wait=parseInt(wait,10));var inactivity=bodyWrap.getAttribute("inactivity");inactivity&&(this.inactivity=parseInt(inactivity,10))},_disconnect:function(pres){this._sendTerminate(pres)},_doDisconnect:function(){this.sid=null,this.rid=Math.floor(4294967295*Math.random()),this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem("strophe-bosh-session"),this._conn.nextValidRid(this.rid)},_emptyQueue:function(){return 0===this._requests.length},_callProtocolErrorHandlers:function(req){var reqStatus=this._getRequestStatus(req),err_callback=this._conn.protocolErrorHandlers.HTTP[reqStatus];err_callback&&err_callback.call(this,reqStatus)},_hitError:function(reqStatus){this.errors++,Strophe.warn("request errored, status: "+reqStatus+", number of errors: "+this.errors),this.errors>4&&this._conn._onDisconnectTimeout()},_no_auth_received:function(callback){Strophe.warn("Server did not yet offer a supported authentication mechanism. Sending a blank poll request."),callback=callback?callback.bind(this._conn):this._conn._connect_cb.bind(this._conn);var body=this._buildBody();this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this,callback),body.tree().getAttribute("rid"))),this._throttledRequestHandler()},_onDisconnectTimeout:function(){this._abortAllRequests()},_abortAllRequests:function(){for(;this._requests.length>0;){var req=this._requests.pop();req.abort=!0,req.xhr.abort(),req.xhr.onreadystatechange=function(){}}},_onIdle:function(){var data=this._conn._data;if(this._conn.authenticated&&0===this._requests.length&&0===data.length&&!this._conn.disconnecting&&(Strophe.info("no requests during idle cycle, sending blank request"),data.push(null)),!this._conn.paused){if(this._requests.length<2&&data.length>0){for(var body=this._buildBody(),i=0;i<data.length;i++)null!==data[i]&&("restart"===data[i]?body.attrs({to:this._conn.domain,"xml:lang":"en","xmpp:restart":"true","xmlns:xmpp":Strophe.NS.BOSH}):body.cnode(data[i]).up());delete this._conn._data,this._conn._data=[],this._requests.push(new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),body.tree().getAttribute("rid"))),this._throttledRequestHandler()}if(this._requests.length>0){var time_elapsed=this._requests[0].age();null!==this._requests[0].dead&&this._requests[0].timeDead()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait)&&this._throttledRequestHandler(),time_elapsed>Math.floor(Strophe.TIMEOUT*this.wait)&&(Strophe.warn("Request "+this._requests[0].id+" timed out, over "+Math.floor(Strophe.TIMEOUT*this.wait)+" seconds since last activity"),this._throttledRequestHandler())}}},_getRequestStatus:function(req,def){var reqStatus;if(4===req.xhr.readyState)try{reqStatus=req.xhr.status}catch(e){Strophe.error("Caught an error while retrieving a request's status, reqStatus: "+reqStatus)}return void 0===reqStatus&&(reqStatus="number"==typeof def?def:0),reqStatus},_onRequestStateChange:function(func,req){if(Strophe.debug("request id "+req.id+"."+req.sends+" state changed to "+req.xhr.readyState),req.abort)req.abort=!1;else if(4===req.xhr.readyState){var reqStatus=this._getRequestStatus(req);if(this.lastResponseHeaders=req.xhr.getAllResponseHeaders(),this.disconnecting&&reqStatus>=400)return this._hitError(reqStatus),void this._callProtocolErrorHandlers(req);var valid_request=reqStatus>0&&reqStatus<500,too_many_retries=req.sends>this._conn.maxRetries;if((valid_request||too_many_retries)&&(this._removeRequest(req),Strophe.debug("request id "+req.id+" should now be removed")),200===reqStatus){var reqIs0=this._requests[0]===req;(this._requests[1]===req||reqIs0&&this._requests.length>0&&this._requests[0].age()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait))&&this._restartRequest(0),this._conn.nextValidRid(Number(req.rid)+1),Strophe.debug("request id "+req.id+"."+req.sends+" got 200"),func(req),this.errors=0}else 0===reqStatus||reqStatus>=400&&reqStatus<600||reqStatus>=12e3?(Strophe.error("request id "+req.id+"."+req.sends+" error "+reqStatus+" happened"),this._hitError(reqStatus),this._callProtocolErrorHandlers(req),reqStatus>=400&&reqStatus<500&&(this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING,null),this._conn._doDisconnect())):Strophe.error("request id "+req.id+"."+req.sends+" error "+reqStatus+" happened");valid_request||too_many_retries?too_many_retries&&!this._conn.connected&&this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"giving-up"):this._throttledRequestHandler()}},_processRequest:function(i){var _this=this,req=this._requests[i],reqStatus=this._getRequestStatus(req,-1);if(req.sends>this._conn.maxRetries)this._conn._onDisconnectTimeout();else{var time_elapsed=req.age(),primary_timeout=!isNaN(time_elapsed)&&time_elapsed>Math.floor(Strophe.TIMEOUT*this.wait),secondary_timeout=null!==req.dead&&req.timeDead()>Math.floor(Strophe.SECONDARY_TIMEOUT*this.wait),server_error=4===req.xhr.readyState&&(reqStatus<1||reqStatus>=500);if((primary_timeout||secondary_timeout||server_error)&&(secondary_timeout&&Strophe.error("Request ".concat(this._requests[i].id," timed out (secondary), restarting")),req.abort=!0,req.xhr.abort(),req.xhr.onreadystatechange=function(){},this._requests[i]=new Strophe.Request(req.xmlData,req.origFunc,req.rid,req.sends),req=this._requests[i]),0===req.xhr.readyState){Strophe.debug("request id "+req.id+"."+req.sends+" posting");try{var content_type=this._conn.options.contentType||"text/xml; charset=utf-8";req.xhr.open("POST",this._conn.service,!this._conn.options.sync),void 0!==req.xhr.setRequestHeader&&req.xhr.setRequestHeader("Content-Type",content_type),this._conn.options.withCredentials&&(req.xhr.withCredentials=!0)}catch(e2){return Strophe.error("XHR open failed: "+e2.toString()),this._conn.connected||this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"bad-service"),void this._conn.disconnect()}var sendFunc=function(){if(req.date=new Date,_this._conn.options.customHeaders){var headers=_this._conn.options.customHeaders;for(var header in headers)Object.prototype.hasOwnProperty.call(headers,header)&&req.xhr.setRequestHeader(header,headers[header])}req.xhr.send(req.data)};if(req.sends>1){var backoff=1e3*Math.min(Math.floor(Strophe.TIMEOUT*this.wait),Math.pow(req.sends,3));setTimeout((function(){sendFunc()}),backoff)}else sendFunc();req.sends++,this._conn.xmlOutput!==Strophe.Connection.prototype.xmlOutput&&(req.xmlData.nodeName===this.strip&&req.xmlData.childNodes.length?this._conn.xmlOutput(req.xmlData.childNodes[0]):this._conn.xmlOutput(req.xmlData)),this._conn.rawOutput!==Strophe.Connection.prototype.rawOutput&&this._conn.rawOutput(req.data)}else Strophe.debug("_processRequest: "+(0===i?"first":"second")+" request has readyState of "+req.xhr.readyState)}},_removeRequest:function(req){Strophe.debug("removing request");for(var i=this._requests.length-1;i>=0;i--)req===this._requests[i]&&this._requests.splice(i,1);req.xhr.onreadystatechange=function(){},this._throttledRequestHandler()},_restartRequest:function(i){var req=this._requests[i];null===req.dead&&(req.dead=new Date),this._processRequest(i)},_reqToData:function(req){try{return req.getResponse()}catch(e){if("parsererror"!==e.message)throw e;this._conn.disconnect("strophe-parsererror")}},_sendTerminate:function(pres){Strophe.info("_sendTerminate was called");var body=this._buildBody().attrs({type:"terminate"});pres&&body.cnode(pres.tree());var req=new Strophe.Request(body.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),body.tree().getAttribute("rid"));this._requests.push(req),this._throttledRequestHandler()},_send:function(){var _this2=this;clearTimeout(this._conn._idleTimeout),this._throttledRequestHandler(),this._conn._idleTimeout=setTimeout((function(){return _this2._conn._onIdle()}),100)},_sendRestart:function(){this._throttledRequestHandler(),clearTimeout(this._conn._idleTimeout)},_throttledRequestHandler:function(){this._requests?Strophe.debug("_throttledRequestHandler called with "+this._requests.length+" requests"):Strophe.debug("_throttledRequestHandler called with undefined requests"),this._requests&&0!==this._requests.length&&(this._requests.length>0&&this._processRequest(0),this._requests.length>1&&Math.abs(this._requests[0].rid-this._requests[1].rid)<this.window&&this._processRequest(1))}}},"./src/core.js":
/*!*********************!*\
  !*** ./src/core.js ***!
  \*********************/
/*! exports provided: Strophe, $build, $iq, $msg, $pres, SHA1, MD5, default */function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Strophe",(function(){return Strophe})),__webpack_require__.d(__webpack_exports__,"$build",(function(){return $build})),__webpack_require__.d(__webpack_exports__,"$iq",(function(){return $iq})),__webpack_require__.d(__webpack_exports__,"$msg",(function(){return $msg})),__webpack_require__.d(__webpack_exports__,"$pres",(function(){return $pres}));var md5__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*! md5 */"./src/md5.js");__webpack_require__.d(__webpack_exports__,"MD5",(function(){return md5__WEBPACK_IMPORTED_MODULE_0__.default}));var sha1__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*! sha1 */"./src/sha1.js");__webpack_require__.d(__webpack_exports__,"SHA1",(function(){return sha1__WEBPACK_IMPORTED_MODULE_1__.default}));var utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(/*! utils */"./src/utils.js");function _toConsumableArray(arr){return function(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}}(arr)||function(iter){if(Symbol.iterator in Object(iter)||"[object Arguments]"===Object.prototype.toString.call(iter))return Array.from(iter)}(arr)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function $build(name,attrs){return new Strophe.Builder(name,attrs)}function $msg(attrs){return new Strophe.Builder("message",attrs)}function $iq(attrs){return new Strophe.Builder("iq",attrs)}function $pres(attrs){return new Strophe.Builder("presence",attrs)}var Strophe={VERSION:"1.3.1",NS:{HTTPBIND:"http://jabber.org/protocol/httpbind",BOSH:"urn:xmpp:xbosh",CLIENT:"jabber:client",AUTH:"jabber:iq:auth",ROSTER:"jabber:iq:roster",PROFILE:"jabber:iq:profile",DISCO_INFO:"http://jabber.org/protocol/disco#info",DISCO_ITEMS:"http://jabber.org/protocol/disco#items",MUC:"http://jabber.org/protocol/muc",SASL:"urn:ietf:params:xml:ns:xmpp-sasl",STREAM:"http://etherx.jabber.org/streams",FRAMING:"urn:ietf:params:xml:ns:xmpp-framing",BIND:"urn:ietf:params:xml:ns:xmpp-bind",SESSION:"urn:ietf:params:xml:ns:xmpp-session",VERSION:"jabber:iq:version",STANZAS:"urn:ietf:params:xml:ns:xmpp-stanzas",XHTML_IM:"http://jabber.org/protocol/xhtml-im",XHTML:"http://www.w3.org/1999/xhtml"},XHTML:{tags:["a","blockquote","br","cite","em","img","li","ol","p","span","strong","ul","body"],attributes:{a:["href"],blockquote:["style"],br:[],cite:["style"],em:[],img:["src","alt","style","height","width"],li:["style"],ol:["style"],p:["style"],span:["style"],strong:[],ul:["style"],body:[]},css:["background-color","color","font-family","font-size","font-style","font-weight","margin-left","margin-right","text-align","text-decoration"],validTag:function(tag){for(var i=0;i<Strophe.XHTML.tags.length;i++)if(tag===Strophe.XHTML.tags[i])return!0;return!1},validAttribute:function(tag,attribute){if(void 0!==Strophe.XHTML.attributes[tag]&&Strophe.XHTML.attributes[tag].length>0)for(var i=0;i<Strophe.XHTML.attributes[tag].length;i++)if(attribute===Strophe.XHTML.attributes[tag][i])return!0;return!1},validCSS:function(style){for(var i=0;i<Strophe.XHTML.css.length;i++)if(style===Strophe.XHTML.css[i])return!0;return!1}},Status:{ERROR:0,CONNECTING:1,CONNFAIL:2,AUTHENTICATING:3,AUTHFAIL:4,CONNECTED:5,DISCONNECTED:6,DISCONNECTING:7,ATTACHED:8,REDIRECT:9,CONNTIMEOUT:10},ErrorCondition:{BAD_FORMAT:"bad-format",CONFLICT:"conflict",MISSING_JID_NODE:"x-strophe-bad-non-anon-jid",NO_AUTH_MECH:"no-auth-mech",UNKNOWN_REASON:"unknown"},LogLevel:{DEBUG:0,INFO:1,WARN:2,ERROR:3,FATAL:4},ElementType:{NORMAL:1,TEXT:3,CDATA:4,FRAGMENT:11},TIMEOUT:1.1,SECONDARY_TIMEOUT:.1,addNamespace:function(name,value){Strophe.NS[name]=value},forEachChild:function(elem,elemName,func){for(var i=0;i<elem.childNodes.length;i++){var childNode=elem.childNodes[i];childNode.nodeType!==Strophe.ElementType.NORMAL||elemName&&!this.isTagEqual(childNode,elemName)||func(childNode)}},isTagEqual:function(el,name){return el.tagName===name},_xmlGenerator:null,_makeGenerator:function(){var doc;return void 0===document.implementation.createDocument||document.implementation.createDocument&&document.documentMode&&document.documentMode<10?(doc=this._getIEXmlDom()).appendChild(doc.createElement("strophe")):doc=document.implementation.createDocument("jabber:client","strophe",null),doc},xmlGenerator:function(){return Strophe._xmlGenerator||(Strophe._xmlGenerator=Strophe._makeGenerator()),Strophe._xmlGenerator},_getIEXmlDom:function(){for(var doc=null,docStrings=["Msxml2.DOMDocument.6.0","Msxml2.DOMDocument.5.0","Msxml2.DOMDocument.4.0","MSXML2.DOMDocument.3.0","MSXML2.DOMDocument","MSXML.DOMDocument","Microsoft.XMLDOM"],d=0;d<docStrings.length&&null===doc;d++)try{doc=new ActiveXObject(docStrings[d])}catch(e){doc=null}return doc},xmlElement:function(name){if(!name)return null;for(var node=Strophe.xmlGenerator().createElement(name),a=1;a<arguments.length;a++){var arg=arguments[a];if(arg)if("string"==typeof arg||"number"==typeof arg)node.appendChild(Strophe.xmlTextNode(arg));else if("object"===_typeof(arg)&&"function"==typeof arg.sort)for(var i=0;i<arg.length;i++){var attr=arg[i];"object"===_typeof(attr)&&"function"==typeof attr.sort&&void 0!==attr[1]&&null!==attr[1]&&node.setAttribute(attr[0],attr[1])}else if("object"===_typeof(arg))for(var k in arg)Object.prototype.hasOwnProperty.call(arg,k)&&void 0!==arg[k]&&null!==arg[k]&&node.setAttribute(k,arg[k])}return node},xmlescape:function(text){return text=(text=(text=(text=(text=text.replace(/\&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/'/g,"&apos;")).replace(/"/g,"&quot;")},xmlunescape:function(text){return text=(text=(text=(text=(text=text.replace(/\&amp;/g,"&")).replace(/&lt;/g,"<")).replace(/&gt;/g,">")).replace(/&apos;/g,"'")).replace(/&quot;/g,'"')},xmlTextNode:function(text){return Strophe.xmlGenerator().createTextNode(text)},xmlHtmlNode:function(html){var node;return DOMParser?node=(new DOMParser).parseFromString(html,"text/xml"):((node=new ActiveXObject("Microsoft.XMLDOM")).async="false",node.loadXML(html)),node},getText:function(elem){if(!elem)return null;var str="";0===elem.childNodes.length&&elem.nodeType===Strophe.ElementType.TEXT&&(str+=elem.nodeValue);for(var i=0;i<elem.childNodes.length;i++)elem.childNodes[i].nodeType===Strophe.ElementType.TEXT&&(str+=elem.childNodes[i].nodeValue);return Strophe.xmlescape(str)},copyElement:function(elem){var el;if(elem.nodeType===Strophe.ElementType.NORMAL){el=Strophe.xmlElement(elem.tagName);for(var i=0;i<elem.attributes.length;i++)el.setAttribute(elem.attributes[i].nodeName,elem.attributes[i].value);for(var _i=0;_i<elem.childNodes.length;_i++)el.appendChild(Strophe.copyElement(elem.childNodes[_i]))}else elem.nodeType===Strophe.ElementType.TEXT&&(el=Strophe.xmlGenerator().createTextNode(elem.nodeValue));return el},createHtml:function(elem){var el;if(elem.nodeType===Strophe.ElementType.NORMAL){var tag=elem.nodeName.toLowerCase();if(Strophe.XHTML.validTag(tag))try{el=Strophe.xmlElement(tag);for(var i=0;i<Strophe.XHTML.attributes[tag].length;i++){var attribute=Strophe.XHTML.attributes[tag][i],value=elem.getAttribute(attribute);if(null!=value&&""!==value&&!1!==value&&0!==value)if("style"===attribute&&"object"===_typeof(value)&&void 0!==value.cssText&&(value=value.cssText),"style"===attribute){for(var css=[],cssAttrs=value.split(";"),j=0;j<cssAttrs.length;j++){var attr=cssAttrs[j].split(":"),cssName=attr[0].replace(/^\s*/,"").replace(/\s*$/,"").toLowerCase();if(Strophe.XHTML.validCSS(cssName)){var cssValue=attr[1].replace(/^\s*/,"").replace(/\s*$/,"");css.push(cssName+": "+cssValue)}}css.length>0&&(value=css.join("; "),el.setAttribute(attribute,value))}else el.setAttribute(attribute,value)}for(var _i2=0;_i2<elem.childNodes.length;_i2++)el.appendChild(Strophe.createHtml(elem.childNodes[_i2]))}catch(e){el=Strophe.xmlTextNode("")}else{el=Strophe.xmlGenerator().createDocumentFragment();for(var _i3=0;_i3<elem.childNodes.length;_i3++)el.appendChild(Strophe.createHtml(elem.childNodes[_i3]))}}else if(elem.nodeType===Strophe.ElementType.FRAGMENT){el=Strophe.xmlGenerator().createDocumentFragment();for(var _i4=0;_i4<elem.childNodes.length;_i4++)el.appendChild(Strophe.createHtml(elem.childNodes[_i4]))}else elem.nodeType===Strophe.ElementType.TEXT&&(el=Strophe.xmlTextNode(elem.nodeValue));return el},escapeNode:function(node){return"string"!=typeof node?node:node.replace(/^\s+|\s+$/g,"").replace(/\\/g,"\\5c").replace(/ /g,"\\20").replace(/\"/g,"\\22").replace(/\&/g,"\\26").replace(/\'/g,"\\27").replace(/\//g,"\\2f").replace(/:/g,"\\3a").replace(/</g,"\\3c").replace(/>/g,"\\3e").replace(/@/g,"\\40")},unescapeNode:function(node){return"string"!=typeof node?node:node.replace(/\\20/g," ").replace(/\\22/g,'"').replace(/\\26/g,"&").replace(/\\27/g,"'").replace(/\\2f/g,"/").replace(/\\3a/g,":").replace(/\\3c/g,"<").replace(/\\3e/g,">").replace(/\\40/g,"@").replace(/\\5c/g,"\\")},getNodeFromJid:function(jid){return jid.indexOf("@")<0?null:jid.split("@")[0]},getDomainFromJid:function(jid){var bare=Strophe.getBareJidFromJid(jid);if(bare.indexOf("@")<0)return bare;var parts=bare.split("@");return parts.splice(0,1),parts.join("@")},getResourceFromJid:function(jid){var s=jid.split("/");return s.length<2?null:(s.splice(0,1),s.join("/"))},getBareJidFromJid:function(jid){return jid?jid.split("/")[0]:null},_handleError:function(e){void 0!==e.stack&&Strophe.fatal(e.stack),e.sourceURL?Strophe.fatal("error: "+this.handler+" "+e.sourceURL+":"+e.line+" - "+e.name+": "+e.message):e.fileName?Strophe.fatal("error: "+this.handler+" "+e.fileName+":"+e.lineNumber+" - "+e.name+": "+e.message):Strophe.fatal("error: "+e.message)},log:function(level,msg){level===this.LogLevel.FATAL&&"object"===_typeof(window.console)&&"function"==typeof window.console.error&&window.console.error(msg)},debug:function(msg){this.log(this.LogLevel.DEBUG,msg)},info:function(msg){this.log(this.LogLevel.INFO,msg)},warn:function(msg){this.log(this.LogLevel.WARN,msg)},error:function(msg){this.log(this.LogLevel.ERROR,msg)},fatal:function(msg){this.log(this.LogLevel.FATAL,msg)},serialize:function(elem){if(!elem)return null;"function"==typeof elem.tree&&(elem=elem.tree());var names=_toConsumableArray(Array(elem.attributes.length).keys()).map((function(i){return elem.attributes[i].nodeName}));names.sort();var result=names.reduce((function(a,n){return"".concat(a," ").concat(n,'="').concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value),'"')}),"<".concat(elem.nodeName));if(elem.childNodes.length>0){result+=">";for(var i=0;i<elem.childNodes.length;i++){var child=elem.childNodes[i];switch(child.nodeType){case Strophe.ElementType.NORMAL:result+=Strophe.serialize(child);break;case Strophe.ElementType.TEXT:result+=Strophe.xmlescape(child.nodeValue);break;case Strophe.ElementType.CDATA:result+="<![CDATA["+child.nodeValue+"]]>"}}result+="</"+elem.nodeName+">"}else result+="/>";return result},_requestId:0,_connectionPlugins:{},addConnectionPlugin:function(name,ptype){Strophe._connectionPlugins[name]=ptype},Builder:function(name,attrs){"presence"!==name&&"message"!==name&&"iq"!==name||(attrs&&!attrs.xmlns?attrs.xmlns=Strophe.NS.CLIENT:attrs||(attrs={xmlns:Strophe.NS.CLIENT})),this.nodeTree=Strophe.xmlElement(name,attrs),this.node=this.nodeTree}};Strophe.Builder.prototype={tree:function(){return this.nodeTree},toString:function(){return Strophe.serialize(this.nodeTree)},up:function(){return this.node=this.node.parentNode,this},root:function(){return this.node=this.nodeTree,this},attrs:function(moreattrs){for(var k in moreattrs)Object.prototype.hasOwnProperty.call(moreattrs,k)&&(void 0===moreattrs[k]?this.node.removeAttribute(k):this.node.setAttribute(k,moreattrs[k]));return this},c:function(name,attrs,text){var child=Strophe.xmlElement(name,attrs,text);return this.node.appendChild(child),"string"!=typeof text&&"number"!=typeof text&&(this.node=child),this},cnode:function(elem){var impNode,xmlGen=Strophe.xmlGenerator();try{impNode=void 0!==xmlGen.importNode}catch(e){impNode=!1}var newElem=impNode?xmlGen.importNode(elem,!0):Strophe.copyElement(elem);return this.node.appendChild(newElem),this.node=newElem,this},t:function(text){var child=Strophe.xmlTextNode(text);return this.node.appendChild(child),this},h:function(html){var fragment=document.createElement("body");fragment.innerHTML=html;for(var xhtml=Strophe.createHtml(fragment);xhtml.childNodes.length>0;)this.node.appendChild(xhtml.childNodes[0]);return this}},Strophe.Handler=function(handler,ns,name,type,id,from,options){this.handler=handler,this.ns=ns,this.name=name,this.type=type,this.id=id,this.options=options||{matchBareFromJid:!1,ignoreNamespaceFragment:!1},this.options.matchBare&&(Strophe.warn('The "matchBare" option is deprecated, use "matchBareFromJid" instead.'),this.options.matchBareFromJid=this.options.matchBare,delete this.options.matchBare),this.options.matchBareFromJid?this.from=from?Strophe.getBareJidFromJid(from):null:this.from=from,this.user=!0},Strophe.Handler.prototype={getNamespace:function(elem){var elNamespace=elem.getAttribute("xmlns");return elNamespace&&this.options.ignoreNamespaceFragment&&(elNamespace=elNamespace.split("#")[0]),elNamespace},namespaceMatch:function(elem){var _this=this,nsMatch=!1;return!this.ns||(Strophe.forEachChild(elem,null,(function(elem){_this.getNamespace(elem)===_this.ns&&(nsMatch=!0)})),nsMatch||this.getNamespace(elem)===this.ns)},isMatch:function(elem){var from=elem.getAttribute("from");this.options.matchBareFromJid&&(from=Strophe.getBareJidFromJid(from));var elem_type=elem.getAttribute("type");return!(!this.namespaceMatch(elem)||this.name&&!Strophe.isTagEqual(elem,this.name)||this.type&&(Array.isArray(this.type)?-1===this.type.indexOf(elem_type):elem_type!==this.type)||this.id&&elem.getAttribute("id")!==this.id||this.from&&from!==this.from)},run:function(elem){var result=null;try{result=this.handler(elem)}catch(e){throw Strophe._handleError(e),e}return result},toString:function(){return"{Handler: "+this.handler+"("+this.name+","+this.id+","+this.ns+")}"}},Strophe.TimedHandler=function(period,handler){this.period=period,this.handler=handler,this.lastCalled=(new Date).getTime(),this.user=!0},Strophe.TimedHandler.prototype={run:function(){return this.lastCalled=(new Date).getTime(),this.handler()},reset:function(){this.lastCalled=(new Date).getTime()},toString:function(){return"{TimedHandler: "+this.handler+"("+this.period+")}"}},Strophe.Connection=function(service,options){var _this2=this;this.service=service,this.options=options||{};var proto=this.options.protocol||"";for(var k in 0===service.indexOf("ws:")||0===service.indexOf("wss:")||0===proto.indexOf("ws")?this._proto=new Strophe.Websocket(this):this._proto=new Strophe.Bosh(this),this.jid="",this.domain=null,this.features=null,this._sasl_data={},this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.protocolErrorHandlers={HTTP:{},websocket:{}},this._idleTimeout=null,this._disconnectTimeout=null,this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.do_authentication=!0,this.paused=!1,this.restored=!1,this._data=[],this._uniqueId=0,this._sasl_success_handler=null,this._sasl_failure_handler=null,this._sasl_challenge_handler=null,this.maxRetries=5,this._idleTimeout=setTimeout((function(){return _this2._onIdle()}),100),utils__WEBPACK_IMPORTED_MODULE_2__.default.addCookies(this.options.cookies),this.registerSASLMechanisms(this.options.mechanisms),Strophe._connectionPlugins)if(Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins,k)){var F=function(){};F.prototype=Strophe._connectionPlugins[k],this[k]=new F,this[k].init(this)}},Strophe.Connection.prototype={reset:function(){this._proto._reset(),this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.restored=!1,this._data=[],this._requests=[],this._uniqueId=0},pause:function(){this.paused=!0},resume:function(){this.paused=!1},getUniqueId:function(suffix){var uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){var r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)}));return"string"==typeof suffix||"number"==typeof suffix?uuid+":"+suffix:uuid+""},addProtocolErrorHandler:function(protocol,status_code,callback){this.protocolErrorHandlers[protocol][status_code]=callback},connect:function(jid,pass,callback,wait,hold,route,authcid){this.jid=jid,this.authzid=Strophe.getBareJidFromJid(this.jid),this.authcid=authcid||Strophe.getNodeFromJid(this.jid),this.pass=pass,this.servtype="xmpp",this.connect_callback=callback,this.disconnecting=!1,this.connected=!1,this.authenticated=!1,this.restored=!1,this.domain=Strophe.getDomainFromJid(this.jid),this._changeConnectStatus(Strophe.Status.CONNECTING,null),this._proto._connect(wait,hold,route)},attach:function(jid,sid,rid,callback,wait,hold,wind){if(!(this._proto instanceof Strophe.Bosh)){var error=new Error('The "attach" method can only be used with a BOSH connection.');throw error.name="StropheSessionError",error}this._proto._attach(jid,sid,rid,callback,wait,hold,wind)},restore:function(jid,callback,wait,hold,wind){if(!this._sessionCachingSupported()){var error=new Error('The "restore" method can only be used with a BOSH connection.');throw error.name="StropheSessionError",error}this._proto._restore(jid,callback,wait,hold,wind)},_sessionCachingSupported:function(){if(this._proto instanceof Strophe.Bosh){if(!JSON)return!1;try{sessionStorage.setItem("_strophe_","_strophe_"),sessionStorage.removeItem("_strophe_")}catch(e){return!1}return!0}return!1},xmlInput:function(elem){},xmlOutput:function(elem){},rawInput:function(data){},rawOutput:function(data){},nextValidRid:function(rid){},send:function(elem){if(null!==elem){if("function"==typeof elem.sort)for(var i=0;i<elem.length;i++)this._queueData(elem[i]);else"function"==typeof elem.tree?this._queueData(elem.tree()):this._queueData(elem);this._proto._send()}},flush:function(){clearTimeout(this._idleTimeout),this._onIdle()},sendPresence:function(elem,callback,errback,timeout){var _this3=this,timeoutHandler=null;"function"==typeof elem.tree&&(elem=elem.tree());var id=elem.getAttribute("id");if(id||(id=this.getUniqueId("sendPresence"),elem.setAttribute("id",id)),"function"==typeof callback||"function"==typeof errback){var handler=this.addHandler((function(stanza){timeoutHandler&&_this3.deleteTimedHandler(timeoutHandler),"error"===stanza.getAttribute("type")?errback&&errback(stanza):callback&&callback(stanza)}),null,"presence",null,id);timeout&&(timeoutHandler=this.addTimedHandler(timeout,(function(){return _this3.deleteHandler(handler),errback&&errback(null),!1})))}return this.send(elem),id},sendIQ:function(elem,callback,errback,timeout){var _this4=this,timeoutHandler=null;"function"==typeof elem.tree&&(elem=elem.tree());var id=elem.getAttribute("id");if(id||(id=this.getUniqueId("sendIQ"),elem.setAttribute("id",id)),"function"==typeof callback||"function"==typeof errback){var handler=this.addHandler((function(stanza){timeoutHandler&&_this4.deleteTimedHandler(timeoutHandler);var iqtype=stanza.getAttribute("type");if("result"===iqtype)callback&&callback(stanza);else{if("error"!==iqtype){var error=new Error("Got bad IQ type of ".concat(iqtype));throw error.name="StropheError",error}errback&&errback(stanza)}}),null,"iq",["error","result"],id);timeout&&(timeoutHandler=this.addTimedHandler(timeout,(function(){return _this4.deleteHandler(handler),errback&&errback(null),!1})))}return this.send(elem),id},_queueData:function(element){if(null===element||!element.tagName||!element.childNodes){var error=new Error("Cannot queue non-DOMElement.");throw error.name="StropheError",error}this._data.push(element)},_sendRestart:function(){var _this5=this;this._data.push("restart"),this._proto._sendRestart(),this._idleTimeout=setTimeout((function(){return _this5._onIdle()}),100)},addTimedHandler:function(period,handler){var thand=new Strophe.TimedHandler(period,handler);return this.addTimeds.push(thand),thand},deleteTimedHandler:function(handRef){this.removeTimeds.push(handRef)},addHandler:function(handler,ns,name,type,id,from,options){var hand=new Strophe.Handler(handler,ns,name,type,id,from,options);return this.addHandlers.push(hand),hand},deleteHandler:function(handRef){this.removeHandlers.push(handRef);var i=this.addHandlers.indexOf(handRef);i>=0&&this.addHandlers.splice(i,1)},registerSASLMechanisms:function(mechanisms){this.mechanisms={},(mechanisms=mechanisms||[Strophe.SASLAnonymous,Strophe.SASLExternal,Strophe.SASLMD5,Strophe.SASLOAuthBearer,Strophe.SASLXOAuth2,Strophe.SASLPlain,Strophe.SASLSHA1]).forEach(this.registerSASLMechanism.bind(this))},registerSASLMechanism:function(mechanism){this.mechanisms[mechanism.prototype.name]=mechanism},disconnect:function(reason){if(this._changeConnectStatus(Strophe.Status.DISCONNECTING,reason),Strophe.info("Disconnect was called because: "+reason),this.connected){var pres=!1;this.disconnecting=!0,this.authenticated&&(pres=$pres({xmlns:Strophe.NS.CLIENT,type:"unavailable"})),this._disconnectTimeout=this._addSysTimedHandler(3e3,this._onDisconnectTimeout.bind(this)),this._proto._disconnect(pres)}else Strophe.info("Disconnect was called before Strophe connected to the server"),this._proto._abortAllRequests(),this._doDisconnect()},_changeConnectStatus:function(status,condition,elem){for(var k in Strophe._connectionPlugins)if(Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins,k)){var plugin=this[k];if(plugin.statusChanged)try{plugin.statusChanged(status,condition)}catch(err){Strophe.error("".concat(k," plugin caused an exception changing status: ").concat(err))}}if(this.connect_callback)try{this.connect_callback(status,condition,elem)}catch(e){Strophe._handleError(e),Strophe.error("User connection callback caused an exception: ".concat(e))}},_doDisconnect:function(condition){"number"==typeof this._idleTimeout&&clearTimeout(this._idleTimeout),null!==this._disconnectTimeout&&(this.deleteTimedHandler(this._disconnectTimeout),this._disconnectTimeout=null),Strophe.info("_doDisconnect was called"),this._proto._doDisconnect(),this.authenticated=!1,this.disconnecting=!1,this.restored=!1,this.handlers=[],this.timedHandlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this._changeConnectStatus(Strophe.Status.DISCONNECTED,condition),this.connected=!1},_dataRecv:function(req,raw){var _this6=this;Strophe.info("_dataRecv called");var elem=this._proto._reqToData(req);if(null!==elem){for(this.xmlInput!==Strophe.Connection.prototype.xmlInput&&(elem.nodeName===this._proto.strip&&elem.childNodes.length?this.xmlInput(elem.childNodes[0]):this.xmlInput(elem)),this.rawInput!==Strophe.Connection.prototype.rawInput&&(raw?this.rawInput(raw):this.rawInput(Strophe.serialize(elem)));this.removeHandlers.length>0;){var hand=this.removeHandlers.pop(),i=this.handlers.indexOf(hand);i>=0&&this.handlers.splice(i,1)}for(;this.addHandlers.length>0;)this.handlers.push(this.addHandlers.pop());if(this.disconnecting&&this._proto._emptyQueue())this._doDisconnect();else{var type=elem.getAttribute("type");if(null!==type&&"terminate"===type){if(this.disconnecting)return;var cond=elem.getAttribute("condition"),conflict=elem.getElementsByTagName("conflict");return null!==cond?("remote-stream-error"===cond&&conflict.length>0&&(cond="conflict"),this._changeConnectStatus(Strophe.Status.CONNFAIL,cond)):this._changeConnectStatus(Strophe.Status.CONNFAIL,Strophe.ErrorCondition.UNKOWN_REASON),void this._doDisconnect(cond)}Strophe.forEachChild(elem,null,(function(child){var newList=_this6.handlers;_this6.handlers=[];for(var _i5=0;_i5<newList.length;_i5++){var _hand=newList[_i5];try{(!_hand.isMatch(child)||!_this6.authenticated&&_hand.user||_hand.run(child))&&_this6.handlers.push(_hand)}catch(e){Strophe.warn("Removing Strophe handlers due to uncaught exception: "+e.message)}}}))}}},mechanisms:{},_connect_cb:function(req,_callback,raw){var bodyWrap;Strophe.info("_connect_cb was called"),this.connected=!0;try{bodyWrap=this._proto._reqToData(req)}catch(e){if(e.name!==Strophe.ErrorCondition.BAD_FORMAT)throw e;this._changeConnectStatus(Strophe.Status.CONNFAIL,Strophe.ErrorCondition.BAD_FORMAT),this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT)}if(bodyWrap&&(this.xmlInput!==Strophe.Connection.prototype.xmlInput&&(bodyWrap.nodeName===this._proto.strip&&bodyWrap.childNodes.length?this.xmlInput(bodyWrap.childNodes[0]):this.xmlInput(bodyWrap)),this.rawInput!==Strophe.Connection.prototype.rawInput&&(raw?this.rawInput(raw):this.rawInput(Strophe.serialize(bodyWrap))),this._proto._connect_cb(bodyWrap)!==Strophe.Status.CONNFAIL))if(bodyWrap.getElementsByTagNameNS?bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM,"features").length>0:bodyWrap.getElementsByTagName("stream:features").length>0||bodyWrap.getElementsByTagName("features").length>0){var matched=[],mechanisms=bodyWrap.getElementsByTagName("mechanism");if(mechanisms.length>0)for(var i=0;i<mechanisms.length;i++){var mech=Strophe.getText(mechanisms[i]);this.mechanisms[mech]&&matched.push(this.mechanisms[mech])}0!==matched.length||0!==bodyWrap.getElementsByTagName("auth").length?!1!==this.do_authentication&&this.authenticate(matched):this._proto._no_auth_received(_callback)}else this._proto._no_auth_received(_callback)},sortMechanismsByPriority:function(mechanisms){for(var i=0;i<mechanisms.length-1;++i){for(var higher=i,j=i+1;j<mechanisms.length;++j)mechanisms[j].prototype.priority>mechanisms[higher].prototype.priority&&(higher=j);if(higher!==i){var swap=mechanisms[i];mechanisms[i]=mechanisms[higher],mechanisms[higher]=swap}}return mechanisms},_attemptSASLAuth:function(mechanisms){mechanisms=this.sortMechanismsByPriority(mechanisms||[]);for(var mechanism_found=!1,i=0;i<mechanisms.length;++i)if(mechanisms[i].prototype.test(this)){this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,"success",null,null),this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,"failure",null,null),this._sasl_challenge_handler=this._addSysHandler(this._sasl_challenge_cb.bind(this),null,"challenge",null,null),this._sasl_mechanism=new mechanisms[i],this._sasl_mechanism.onStart(this);var request_auth_exchange=$build("auth",{xmlns:Strophe.NS.SASL,mechanism:this._sasl_mechanism.name});if(this._sasl_mechanism.isClientFirst){var response=this._sasl_mechanism.onChallenge(this,null);request_auth_exchange.t(btoa(response))}this.send(request_auth_exchange.tree()),mechanism_found=!0;break}return mechanism_found},_attemptLegacyAuth:function(){null===Strophe.getNodeFromJid(this.jid)?(this._changeConnectStatus(Strophe.Status.CONNFAIL,Strophe.ErrorCondition.MISSING_JID_NODE),this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE)):(this._changeConnectStatus(Strophe.Status.AUTHENTICATING,null),this._addSysHandler(this._auth1_cb.bind(this),null,null,null,"_auth_1"),this.send($iq({type:"get",to:this.domain,id:"_auth_1"}).c("query",{xmlns:Strophe.NS.AUTH}).c("username",{}).t(Strophe.getNodeFromJid(this.jid)).tree()))},authenticate:function(matched){this._attemptSASLAuth(matched)||this._attemptLegacyAuth()},_sasl_challenge_cb:function(elem){var challenge=atob(Strophe.getText(elem)),response=this._sasl_mechanism.onChallenge(this,challenge),stanza=$build("response",{xmlns:Strophe.NS.SASL});return""!==response&&stanza.t(btoa(response)),this.send(stanza.tree()),!0},_auth1_cb:function(elem){var iq=$iq({type:"set",id:"_auth_2"}).c("query",{xmlns:Strophe.NS.AUTH}).c("username",{}).t(Strophe.getNodeFromJid(this.jid)).up().c("password").t(this.pass);return Strophe.getResourceFromJid(this.jid)||(this.jid=Strophe.getBareJidFromJid(this.jid)+"/strophe"),iq.up().c("resource",{}).t(Strophe.getResourceFromJid(this.jid)),this._addSysHandler(this._auth2_cb.bind(this),null,null,null,"_auth_2"),this.send(iq.tree()),!1},_sasl_success_cb:function(elem){var _this7=this;if(this._sasl_data["server-signature"]){var serverSignature,matches=atob(Strophe.getText(elem)).match(/([a-z]+)=([^,]+)(,|$)/);if("v"===matches[1]&&(serverSignature=matches[2]),serverSignature!==this._sasl_data["server-signature"])return this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_data={},this._sasl_failure_cb(null)}Strophe.info("SASL authentication succeeded."),this._sasl_mechanism&&this._sasl_mechanism.onSuccess(),this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null);var streamfeature_handlers=[],wrapper=function(handlers,elem){for(;handlers.length;)_this7.deleteHandler(handlers.pop());return _this7._sasl_auth1_cb(elem),!1};return streamfeature_handlers.push(this._addSysHandler((function(elem){return wrapper(streamfeature_handlers,elem)}),null,"stream:features",null,null)),streamfeature_handlers.push(this._addSysHandler((function(elem){return wrapper(streamfeature_handlers,elem)}),Strophe.NS.STREAM,"features",null,null)),this._sendRestart(),!1},_sasl_auth1_cb:function(elem){this.features=elem;for(var i=0;i<elem.childNodes.length;i++){var child=elem.childNodes[i];"bind"===child.nodeName&&(this.do_bind=!0),"session"===child.nodeName&&(this.do_session=!0)}if(!this.do_bind)return this._changeConnectStatus(Strophe.Status.AUTHFAIL,null),!1;this._addSysHandler(this._sasl_bind_cb.bind(this),null,null,null,"_bind_auth_2");var resource=Strophe.getResourceFromJid(this.jid);return resource?this.send($iq({type:"set",id:"_bind_auth_2"}).c("bind",{xmlns:Strophe.NS.BIND}).c("resource",{}).t(resource).tree()):this.send($iq({type:"set",id:"_bind_auth_2"}).c("bind",{xmlns:Strophe.NS.BIND}).tree()),!1},_sasl_bind_cb:function(elem){var condition;if("error"===elem.getAttribute("type"))return Strophe.info("SASL binding failed."),elem.getElementsByTagName("conflict").length>0&&(condition=Strophe.ErrorCondition.CONFLICT),this._changeConnectStatus(Strophe.Status.AUTHFAIL,condition,elem),!1;var bind=elem.getElementsByTagName("bind");if(!(bind.length>0))return Strophe.info("SASL binding failed."),this._changeConnectStatus(Strophe.Status.AUTHFAIL,null,elem),!1;var jidNode=bind[0].getElementsByTagName("jid");jidNode.length>0&&(this.jid=Strophe.getText(jidNode[0]),this.do_session?(this._addSysHandler(this._sasl_session_cb.bind(this),null,null,null,"_session_auth_2"),this.send($iq({type:"set",id:"_session_auth_2"}).c("session",{xmlns:Strophe.NS.SESSION}).tree())):(this.authenticated=!0,this._changeConnectStatus(Strophe.Status.CONNECTED,null)))},_sasl_session_cb:function(elem){if("result"===elem.getAttribute("type"))this.authenticated=!0,this._changeConnectStatus(Strophe.Status.CONNECTED,null);else if("error"===elem.getAttribute("type"))return Strophe.info("Session creation failed."),this._changeConnectStatus(Strophe.Status.AUTHFAIL,null,elem),!1;return!1},_sasl_failure_cb:function(elem){return this._sasl_success_handler&&(this.deleteHandler(this._sasl_success_handler),this._sasl_success_handler=null),this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_mechanism&&this._sasl_mechanism.onFailure(),this._changeConnectStatus(Strophe.Status.AUTHFAIL,null,elem),!1},_auth2_cb:function(elem){return"result"===elem.getAttribute("type")?(this.authenticated=!0,this._changeConnectStatus(Strophe.Status.CONNECTED,null)):"error"===elem.getAttribute("type")&&(this._changeConnectStatus(Strophe.Status.AUTHFAIL,null,elem),this.disconnect("authentication failed")),!1},_addSysTimedHandler:function(period,handler){var thand=new Strophe.TimedHandler(period,handler);return thand.user=!1,this.addTimeds.push(thand),thand},_addSysHandler:function(handler,ns,name,type,id){var hand=new Strophe.Handler(handler,ns,name,type,id);return hand.user=!1,this.addHandlers.push(hand),hand},_onDisconnectTimeout:function(){return Strophe.info("_onDisconnectTimeout was called"),this._changeConnectStatus(Strophe.Status.CONNTIMEOUT,null),this._proto._onDisconnectTimeout(),this._doDisconnect(),!1},_onIdle:function(){for(var _this8=this;this.addTimeds.length>0;)this.timedHandlers.push(this.addTimeds.pop());for(;this.removeTimeds.length>0;){var thand=this.removeTimeds.pop(),i=this.timedHandlers.indexOf(thand);i>=0&&this.timedHandlers.splice(i,1)}for(var now=(new Date).getTime(),newList=[],_i6=0;_i6<this.timedHandlers.length;_i6++){var _thand=this.timedHandlers[_i6];!this.authenticated&&_thand.user||(_thand.lastCalled+_thand.period-now<=0?_thand.run()&&newList.push(_thand):newList.push(_thand))}this.timedHandlers=newList,clearTimeout(this._idleTimeout),this._proto._onIdle(),this.connected&&(this._idleTimeout=setTimeout((function(){return _this8._onIdle()}),100))}},Strophe.SASLMechanism=function(name,isClientFirst,priority){this.name=name,this.isClientFirst=isClientFirst,this.priority=priority},Strophe.SASLMechanism.prototype={test:function(connection){return!0},onStart:function(connection){this._connection=connection},onChallenge:function(connection,challenge){throw new Error("You should implement challenge handling!")},onFailure:function(){this._connection=null},onSuccess:function(){this._connection=null}},Strophe.SASLAnonymous=function(){},Strophe.SASLAnonymous.prototype=new Strophe.SASLMechanism("ANONYMOUS",!1,20),Strophe.SASLAnonymous.prototype.test=function(connection){return null===connection.authcid},Strophe.SASLPlain=function(){},Strophe.SASLPlain.prototype=new Strophe.SASLMechanism("PLAIN",!0,50),Strophe.SASLPlain.prototype.test=function(connection){return null!==connection.authcid},Strophe.SASLPlain.prototype.onChallenge=function(connection){var auth_str=connection.authzid;return auth_str+="\0",auth_str+=connection.authcid,auth_str+="\0",auth_str+=connection.pass,utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(auth_str)},Strophe.SASLSHA1=function(){},Strophe.SASLSHA1.prototype=new Strophe.SASLMechanism("SCRAM-SHA-1",!0,70),Strophe.SASLSHA1.prototype.test=function(connection){return null!==connection.authcid},Strophe.SASLSHA1.prototype.onChallenge=function(connection,challenge,test_cnonce){var cnonce=test_cnonce||md5__WEBPACK_IMPORTED_MODULE_0__.default.hexdigest(1234567890*Math.random()),auth_str="n="+utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(connection.authcid);return auth_str+=",r=",auth_str+=cnonce,connection._sasl_data.cnonce=cnonce,connection._sasl_data["client-first-message-bare"]=auth_str,auth_str="n,,"+auth_str,this.onChallenge=function(connection,challenge){for(var nonce,salt,iter,Hi,U,U_old,i,k,responseText="c=biws,",authMessage="".concat(connection._sasl_data["client-first-message-bare"],",").concat(challenge,","),cnonce=connection._sasl_data.cnonce,attribMatch=/([a-z]+)=([^,]+)(,|$)/;challenge.match(attribMatch);){var matches=challenge.match(attribMatch);switch(challenge=challenge.replace(matches[0],""),matches[1]){case"r":nonce=matches[2];break;case"s":salt=matches[2];break;case"i":iter=matches[2]}}if(nonce.substr(0,cnonce.length)!==cnonce)return connection._sasl_data={},connection._sasl_failure_cb();authMessage+=responseText+="r="+nonce,salt=atob(salt),salt+="\0\0\0";var pass=utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(connection.pass);for(Hi=U_old=sha1__WEBPACK_IMPORTED_MODULE_1__.default.core_hmac_sha1(pass,salt),i=1;i<iter;i++){for(U=sha1__WEBPACK_IMPORTED_MODULE_1__.default.core_hmac_sha1(pass,sha1__WEBPACK_IMPORTED_MODULE_1__.default.binb2str(U_old)),k=0;k<5;k++)Hi[k]^=U[k];U_old=U}Hi=sha1__WEBPACK_IMPORTED_MODULE_1__.default.binb2str(Hi);var clientKey=sha1__WEBPACK_IMPORTED_MODULE_1__.default.core_hmac_sha1(Hi,"Client Key"),serverKey=sha1__WEBPACK_IMPORTED_MODULE_1__.default.str_hmac_sha1(Hi,"Server Key"),clientSignature=sha1__WEBPACK_IMPORTED_MODULE_1__.default.core_hmac_sha1(sha1__WEBPACK_IMPORTED_MODULE_1__.default.str_sha1(sha1__WEBPACK_IMPORTED_MODULE_1__.default.binb2str(clientKey)),authMessage);for(connection._sasl_data["server-signature"]=sha1__WEBPACK_IMPORTED_MODULE_1__.default.b64_hmac_sha1(serverKey,authMessage),k=0;k<5;k++)clientKey[k]^=clientSignature[k];return responseText+=",p="+btoa(sha1__WEBPACK_IMPORTED_MODULE_1__.default.binb2str(clientKey))},auth_str},Strophe.SASLMD5=function(){},Strophe.SASLMD5.prototype=new Strophe.SASLMechanism("DIGEST-MD5",!1,60),Strophe.SASLMD5.prototype.test=function(connection){return null!==connection.authcid},Strophe.SASLMD5.prototype._quote=function(str){return'"'+str.replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"'},Strophe.SASLMD5.prototype.onChallenge=function(connection,challenge,test_cnonce){for(var attribMatch=/([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/,cnonce=test_cnonce||md5__WEBPACK_IMPORTED_MODULE_0__.default.hexdigest(""+1234567890*Math.random()),realm="",host=null,nonce="";challenge.match(attribMatch);){var matches=challenge.match(attribMatch);switch(challenge=challenge.replace(matches[0],""),matches[2]=matches[2].replace(/^"(.+)"$/,"$1"),matches[1]){case"realm":realm=matches[2];break;case"nonce":nonce=matches[2];break;case"qop":matches[2];break;case"host":host=matches[2]}}var digest_uri=connection.servtype+"/"+connection.domain;null!==host&&(digest_uri=digest_uri+"/"+host);var cred=utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(connection.authcid+":"+realm+":"+this._connection.pass),A1=md5__WEBPACK_IMPORTED_MODULE_0__.default.hash(cred)+":"+nonce+":"+cnonce,A2="AUTHENTICATE:"+digest_uri,responseText="";return responseText+="charset=utf-8,",responseText+="username="+this._quote(utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(connection.authcid))+",",responseText+="realm="+this._quote(realm)+",",responseText+="nonce="+this._quote(nonce)+",",responseText+="nc=00000001,",responseText+="cnonce="+this._quote(cnonce)+",",responseText+="digest-uri="+this._quote(digest_uri)+",",responseText+="response="+md5__WEBPACK_IMPORTED_MODULE_0__.default.hexdigest(md5__WEBPACK_IMPORTED_MODULE_0__.default.hexdigest(A1)+":"+nonce+":00000001:"+cnonce+":auth:"+md5__WEBPACK_IMPORTED_MODULE_0__.default.hexdigest(A2))+",",responseText+="qop=auth",this.onChallenge=function(){return""},responseText},Strophe.SASLOAuthBearer=function(){},Strophe.SASLOAuthBearer.prototype=new Strophe.SASLMechanism("OAUTHBEARER",!0,40),Strophe.SASLOAuthBearer.prototype.test=function(connection){return null!==connection.pass},Strophe.SASLOAuthBearer.prototype.onChallenge=function(connection){var auth_str="n,";return null!==connection.authcid&&(auth_str=auth_str+"a="+connection.authzid),auth_str+=",",auth_str+="",auth_str+="auth=Bearer ",auth_str+=connection.pass,auth_str+="",auth_str+="",utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(auth_str)},Strophe.SASLExternal=function(){},Strophe.SASLExternal.prototype=new Strophe.SASLMechanism("EXTERNAL",!0,10),Strophe.SASLExternal.prototype.onChallenge=function(connection){return connection.authcid===connection.authzid?"":connection.authzid},Strophe.SASLXOAuth2=function(){},Strophe.SASLXOAuth2.prototype=new Strophe.SASLMechanism("X-OAUTH2",!0,30),Strophe.SASLXOAuth2.prototype.test=function(connection){return null!==connection.pass},Strophe.SASLXOAuth2.prototype.onChallenge=function(connection){var auth_str="\0";return null!==connection.authcid&&(auth_str+=connection.authzid),auth_str+="\0",auth_str+=connection.pass,utils__WEBPACK_IMPORTED_MODULE_2__.default.utf16to8(auth_str)},__webpack_exports__.default={Strophe:Strophe,$build:$build,$iq:$iq,$msg:$msg,$pres:$pres,SHA1:sha1__WEBPACK_IMPORTED_MODULE_1__.default,MD5:md5__WEBPACK_IMPORTED_MODULE_0__.default,b64_hmac_sha1:sha1__WEBPACK_IMPORTED_MODULE_1__.default.b64_hmac_sha1,b64_sha1:sha1__WEBPACK_IMPORTED_MODULE_1__.default.b64_sha1,str_hmac_sha1:sha1__WEBPACK_IMPORTED_MODULE_1__.default.str_hmac_sha1,str_sha1:sha1__WEBPACK_IMPORTED_MODULE_1__.default.str_sha1}},"./src/md5.js":
/*!********************!*\
  !*** ./src/md5.js ***!
  \********************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"default",(function(){return MD5}));var safe_add=function(x,y){var lsw=(65535&x)+(65535&y);return(x>>16)+(y>>16)+(lsw>>16)<<16|65535&lsw},str2binl=function(str){for(var bin=[],i=0;i<8*str.length;i+=8)bin[i>>5]|=(255&str.charCodeAt(i/8))<<i%32;return bin},md5_cmn=function(q,a,b,x,s,t){return safe_add((num=safe_add(safe_add(a,q),safe_add(x,t)))<<(cnt=s)|num>>>32-cnt,b);var num,cnt},md5_ff=function(a,b,c,d,x,s,t){return md5_cmn(b&c|~b&d,a,b,x,s,t)},md5_gg=function(a,b,c,d,x,s,t){return md5_cmn(b&d|c&~d,a,b,x,s,t)},md5_hh=function(a,b,c,d,x,s,t){return md5_cmn(b^c^d,a,b,x,s,t)},md5_ii=function(a,b,c,d,x,s,t){return md5_cmn(c^(b|~d),a,b,x,s,t)},core_md5=function(x,len){x[len>>5]|=128<<len%32,x[14+(len+64>>>9<<4)]=len;for(var olda,oldb,oldc,oldd,a=1732584193,b=-271733879,c=-1732584194,d=271733878,i=0;i<x.length;i+=16)olda=a,oldb=b,oldc=c,oldd=d,a=md5_ff(a,b,c,d,x[i+0],7,-680876936),d=md5_ff(d,a,b,c,x[i+1],12,-389564586),c=md5_ff(c,d,a,b,x[i+2],17,606105819),b=md5_ff(b,c,d,a,x[i+3],22,-1044525330),a=md5_ff(a,b,c,d,x[i+4],7,-176418897),d=md5_ff(d,a,b,c,x[i+5],12,1200080426),c=md5_ff(c,d,a,b,x[i+6],17,-1473231341),b=md5_ff(b,c,d,a,x[i+7],22,-45705983),a=md5_ff(a,b,c,d,x[i+8],7,1770035416),d=md5_ff(d,a,b,c,x[i+9],12,-1958414417),c=md5_ff(c,d,a,b,x[i+10],17,-42063),b=md5_ff(b,c,d,a,x[i+11],22,-1990404162),a=md5_ff(a,b,c,d,x[i+12],7,1804603682),d=md5_ff(d,a,b,c,x[i+13],12,-40341101),c=md5_ff(c,d,a,b,x[i+14],17,-1502002290),b=md5_ff(b,c,d,a,x[i+15],22,1236535329),a=md5_gg(a,b,c,d,x[i+1],5,-165796510),d=md5_gg(d,a,b,c,x[i+6],9,-1069501632),c=md5_gg(c,d,a,b,x[i+11],14,643717713),b=md5_gg(b,c,d,a,x[i+0],20,-373897302),a=md5_gg(a,b,c,d,x[i+5],5,-701558691),d=md5_gg(d,a,b,c,x[i+10],9,38016083),c=md5_gg(c,d,a,b,x[i+15],14,-660478335),b=md5_gg(b,c,d,a,x[i+4],20,-405537848),a=md5_gg(a,b,c,d,x[i+9],5,568446438),d=md5_gg(d,a,b,c,x[i+14],9,-1019803690),c=md5_gg(c,d,a,b,x[i+3],14,-187363961),b=md5_gg(b,c,d,a,x[i+8],20,1163531501),a=md5_gg(a,b,c,d,x[i+13],5,-1444681467),d=md5_gg(d,a,b,c,x[i+2],9,-51403784),c=md5_gg(c,d,a,b,x[i+7],14,1735328473),b=md5_gg(b,c,d,a,x[i+12],20,-1926607734),a=md5_hh(a,b,c,d,x[i+5],4,-378558),d=md5_hh(d,a,b,c,x[i+8],11,-2022574463),c=md5_hh(c,d,a,b,x[i+11],16,1839030562),b=md5_hh(b,c,d,a,x[i+14],23,-35309556),a=md5_hh(a,b,c,d,x[i+1],4,-1530992060),d=md5_hh(d,a,b,c,x[i+4],11,1272893353),c=md5_hh(c,d,a,b,x[i+7],16,-155497632),b=md5_hh(b,c,d,a,x[i+10],23,-1094730640),a=md5_hh(a,b,c,d,x[i+13],4,681279174),d=md5_hh(d,a,b,c,x[i+0],11,-358537222),c=md5_hh(c,d,a,b,x[i+3],16,-722521979),b=md5_hh(b,c,d,a,x[i+6],23,76029189),a=md5_hh(a,b,c,d,x[i+9],4,-640364487),d=md5_hh(d,a,b,c,x[i+12],11,-421815835),c=md5_hh(c,d,a,b,x[i+15],16,530742520),b=md5_hh(b,c,d,a,x[i+2],23,-995338651),a=md5_ii(a,b,c,d,x[i+0],6,-198630844),d=md5_ii(d,a,b,c,x[i+7],10,1126891415),c=md5_ii(c,d,a,b,x[i+14],15,-1416354905),b=md5_ii(b,c,d,a,x[i+5],21,-57434055),a=md5_ii(a,b,c,d,x[i+12],6,1700485571),d=md5_ii(d,a,b,c,x[i+3],10,-1894986606),c=md5_ii(c,d,a,b,x[i+10],15,-1051523),b=md5_ii(b,c,d,a,x[i+1],21,-2054922799),a=md5_ii(a,b,c,d,x[i+8],6,1873313359),d=md5_ii(d,a,b,c,x[i+15],10,-30611744),c=md5_ii(c,d,a,b,x[i+6],15,-1560198380),b=md5_ii(b,c,d,a,x[i+13],21,1309151649),a=md5_ii(a,b,c,d,x[i+4],6,-145523070),d=md5_ii(d,a,b,c,x[i+11],10,-1120210379),c=md5_ii(c,d,a,b,x[i+2],15,718787259),b=md5_ii(b,c,d,a,x[i+9],21,-343485551),a=safe_add(a,olda),b=safe_add(b,oldb),c=safe_add(c,oldc),d=safe_add(d,oldd);return[a,b,c,d]},MD5={hexdigest:function(s){return function(binarray){for(var str="",i=0;i<4*binarray.length;i++)str+="0123456789abcdef".charAt(binarray[i>>2]>>i%4*8+4&15)+"0123456789abcdef".charAt(binarray[i>>2]>>i%4*8&15);return str}(core_md5(str2binl(s),8*s.length))},hash:function(s){return function(bin){for(var str="",i=0;i<32*bin.length;i+=8)str+=String.fromCharCode(bin[i>>5]>>>i%32&255);return str}(core_md5(str2binl(s),8*s.length))}}},"./src/sha1.js":
/*!*********************!*\
  !*** ./src/sha1.js ***!
  \*********************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";function core_sha1(x,len){x[len>>5]|=128<<24-len%32,x[15+(len+64>>9<<4)]=len;var i,j,t,olda,oldb,oldc,oldd,olde,w=new Array(80),a=1732584193,b=-271733879,c=-1732584194,d=271733878,e=-1009589776;for(i=0;i<x.length;i+=16){for(olda=a,oldb=b,oldc=c,oldd=d,olde=e,j=0;j<80;j++)w[j]=j<16?x[i+j]:rol(w[j-3]^w[j-8]^w[j-14]^w[j-16],1),t=safe_add(safe_add(rol(a,5),sha1_ft(j,b,c,d)),safe_add(safe_add(e,w[j]),sha1_kt(j))),e=d,d=c,c=rol(b,30),b=a,a=t;a=safe_add(a,olda),b=safe_add(b,oldb),c=safe_add(c,oldc),d=safe_add(d,oldd),e=safe_add(e,olde)}return[a,b,c,d,e]}function sha1_ft(t,b,c,d){return t<20?b&c|~b&d:t<40?b^c^d:t<60?b&c|b&d|c&d:b^c^d}function sha1_kt(t){return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514}function core_hmac_sha1(key,data){var bkey=str2binb(key);bkey.length>16&&(bkey=core_sha1(bkey,8*key.length));for(var ipad=new Array(16),opad=new Array(16),i=0;i<16;i++)ipad[i]=909522486^bkey[i],opad[i]=1549556828^bkey[i];var hash=core_sha1(ipad.concat(str2binb(data)),512+8*data.length);return core_sha1(opad.concat(hash),672)}function safe_add(x,y){var lsw=(65535&x)+(65535&y);return(x>>16)+(y>>16)+(lsw>>16)<<16|65535&lsw}function rol(num,cnt){return num<<cnt|num>>>32-cnt}function str2binb(str){for(var bin=[],i=0;i<8*str.length;i+=8)bin[i>>5]|=(255&str.charCodeAt(i/8))<<24-i%32;return bin}function binb2b64(binarray){for(var triplet,j,str="",i=0;i<4*binarray.length;i+=3)for(triplet=(binarray[i>>2]>>8*(3-i%4)&255)<<16|(binarray[i+1>>2]>>8*(3-(i+1)%4)&255)<<8|binarray[i+2>>2]>>8*(3-(i+2)%4)&255,j=0;j<4;j++)8*i+6*j>32*binarray.length?str+="=":str+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(triplet>>6*(3-j)&63);return str}function binb2str(bin){for(var str="",i=0;i<32*bin.length;i+=8)str+=String.fromCharCode(bin[i>>5]>>>24-i%32&255);return str}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"default",(function(){return SHA1}));var SHA1={b64_hmac_sha1:function(key,data){return binb2b64(core_hmac_sha1(key,data))},b64_sha1:function(s){return binb2b64(core_sha1(str2binb(s),8*s.length))},binb2str:binb2str,core_hmac_sha1:core_hmac_sha1,str_hmac_sha1:function(key,data){return binb2str(core_hmac_sha1(key,data))},str_sha1:function(s){return binb2str(core_sha1(str2binb(s),8*s.length))}}},"./src/strophe.js":
/*!************************!*\
  !*** ./src/strophe.js ***!
  \************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(global){var core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*! core */"./src/core.js");__webpack_require__(/*! bosh */"./src/bosh.js"),__webpack_require__(/*! websocket */"./src/websocket.js"),__webpack_require__.d(__webpack_exports__,"default",(function(){return core__WEBPACK_IMPORTED_MODULE_0__.default})),global.Strophe=core__WEBPACK_IMPORTED_MODULE_0__.default.Strophe,global.$build=core__WEBPACK_IMPORTED_MODULE_0__.default.$build,global.$iq=core__WEBPACK_IMPORTED_MODULE_0__.default.$iq,global.$msg=core__WEBPACK_IMPORTED_MODULE_0__.default.$msg,global.$pres=core__WEBPACK_IMPORTED_MODULE_0__.default.$pres}.call(this,__webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */"./node_modules/webpack/buildin/global.js"))},"./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"default",(function(){return utils}));var utils={utf16to8:function(str){var i,c,out="",len=str.length;for(i=0;i<len;i++)(c=str.charCodeAt(i))>=0&&c<=127?out+=str.charAt(i):c>2047?(out+=String.fromCharCode(224|c>>12&15),out+=String.fromCharCode(128|c>>6&63),out+=String.fromCharCode(128|c>>0&63)):(out+=String.fromCharCode(192|c>>6&31),out+=String.fromCharCode(128|c>>0&63));return out},addCookies:function(cookies){for(var cookieName in cookies=cookies||{})if(Object.prototype.hasOwnProperty.call(cookies,cookieName)){var expires="",domain="",path="",cookieObj=cookies[cookieName],isObj="object"===_typeof(cookieObj),cookieValue=escape(unescape(isObj?cookieObj.value:cookieObj));isObj&&(expires=cookieObj.expires?";expires="+cookieObj.expires:"",domain=cookieObj.domain?";domain="+cookieObj.domain:"",path=cookieObj.path?";path="+cookieObj.path:""),document.cookie=cookieName+"="+cookieValue+expires+domain+path}}}},"./src/websocket.js":
/*!**************************!*\
  !*** ./src/websocket.js ***!
  \**************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*! core */"./src/core.js"),Strophe=core__WEBPACK_IMPORTED_MODULE_0__.default.Strophe,$build=core__WEBPACK_IMPORTED_MODULE_0__.default.$build;Strophe.Websocket=function(connection){this._conn=connection,this.strip="wrapper";var service=connection.service;if(0!==service.indexOf("ws:")&&0!==service.indexOf("wss:")){var new_service="";"ws"===connection.options.protocol&&"https:"!==window.location.protocol?new_service+="ws":new_service+="wss",new_service+="://"+window.location.host,0!==service.indexOf("/")?new_service+=window.location.pathname+service:new_service+=service,connection.service=new_service}},Strophe.Websocket.prototype={_buildStream:function(){return $build("open",{xmlns:Strophe.NS.FRAMING,to:this._conn.domain,version:"1.0"})},_check_streamerror:function(bodyWrap,connectstatus){var errors;if(0===(errors=bodyWrap.getElementsByTagNameNS?bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM,"error"):bodyWrap.getElementsByTagName("stream:error")).length)return!1;for(var error=errors[0],condition="",text="",i=0;i<error.childNodes.length;i++){var e=error.childNodes[i];if("urn:ietf:params:xml:ns:xmpp-streams"!==e.getAttribute("xmlns"))break;"text"===e.nodeName?text=e.textContent:condition=e.nodeName}var errorString="WebSocket stream error: ";return errorString+=condition||"unknown",text&&(errorString+=" - "+text),Strophe.error(errorString),this._conn._changeConnectStatus(connectstatus,condition),this._conn._doDisconnect(),!0},_reset:function(){},_connect:function(){this._closeSocket(),this.socket=new WebSocket(this._conn.service,"xmpp"),this.socket.onopen=this._onOpen.bind(this),this.socket.onerror=this._onError.bind(this),this.socket.onclose=this._onClose.bind(this),this.socket.onmessage=this._connect_cb_wrapper.bind(this)},_connect_cb:function(bodyWrap){if(this._check_streamerror(bodyWrap,Strophe.Status.CONNFAIL))return Strophe.Status.CONNFAIL},_handleStreamStart:function(message){var error=!1,ns=message.getAttribute("xmlns");"string"!=typeof ns?error="Missing xmlns in <open />":ns!==Strophe.NS.FRAMING&&(error="Wrong xmlns in <open />: "+ns);var ver=message.getAttribute("version");return"string"!=typeof ver?error="Missing version in <open />":"1.0"!==ver&&(error="Wrong version in <open />: "+ver),!error||(this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,error),this._conn._doDisconnect(),!1)},_connect_cb_wrapper:function(message){if(0===message.data.indexOf("<open ")||0===message.data.indexOf("<?xml")){var data=message.data.replace(/^(<\?.*?\?>\s*)*/,"");if(""===data)return;var streamStart=(new DOMParser).parseFromString(data,"text/xml").documentElement;this._conn.xmlInput(streamStart),this._conn.rawInput(message.data),this._handleStreamStart(streamStart)&&this._connect_cb(streamStart)}else if(0===message.data.indexOf("<close ")){var parsedMessage=(new DOMParser).parseFromString(message.data,"text/xml").documentElement;this._conn.xmlInput(parsedMessage),this._conn.rawInput(message.data);var see_uri=parsedMessage.getAttribute("see-other-uri");if(see_uri){var service=this._conn.service;(service.indexOf("wss:")>=0&&see_uri.indexOf("wss:")>=0||service.indexOf("ws:")>=0)&&(this._conn._changeConnectStatus(Strophe.Status.REDIRECT,"Received see-other-uri, resetting connection"),this._conn.reset(),this._conn.service=see_uri,this._connect())}else this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"Received closing stream"),this._conn._doDisconnect()}else{var string=this._streamWrap(message.data),elem=(new DOMParser).parseFromString(string,"text/xml").documentElement;this.socket.onmessage=this._onMessage.bind(this),this._conn._connect_cb(elem,null,message.data)}},_disconnect:function(pres){if(this.socket&&this.socket.readyState!==WebSocket.CLOSED){pres&&this._conn.send(pres);var close=$build("close",{xmlns:Strophe.NS.FRAMING});this._conn.xmlOutput(close.tree());var closeString=Strophe.serialize(close);this._conn.rawOutput(closeString);try{this.socket.send(closeString)}catch(e){Strophe.info("Couldn't send <close /> tag.")}}this._conn._doDisconnect()},_doDisconnect:function(){Strophe.info("WebSockets _doDisconnect was called"),this._closeSocket()},_streamWrap:function(stanza){return"<wrapper>"+stanza+"</wrapper>"},_closeSocket:function(){if(this.socket)try{this.socket.onerror=null,this.socket.close()}catch(e){Strophe.debug(e.message)}this.socket=null},_emptyQueue:function(){return!0},_onClose:function(e){this._conn.connected&&!this._conn.disconnecting?(Strophe.error("Websocket closed unexpectedly"),this._conn._doDisconnect()):e&&1006===e.code&&!this._conn.connected&&this.socket?(Strophe.error("Websocket closed unexcectedly"),this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"The WebSocket connection could not be established or was disconnected."),this._conn._doDisconnect()):Strophe.info("Websocket closed")},_no_auth_received:function(callback){Strophe.error("Server did not offer a supported authentication mechanism"),this._changeConnectStatus(Strophe.Status.CONNFAIL,Strophe.ErrorCondition.NO_AUTH_MECH),callback&&callback.call(this._conn),this._conn._doDisconnect()},_onDisconnectTimeout:function(){},_abortAllRequests:function(){},_onError:function(error){Strophe.error("Websocket error "+error),this._conn._changeConnectStatus(Strophe.Status.CONNFAIL,"The WebSocket connection could not be established or was disconnected."),this._disconnect()},_onIdle:function(){var data=this._conn._data;if(data.length>0&&!this._conn.paused){for(var i=0;i<data.length;i++)if(null!==data[i]){var stanza=void 0;stanza="restart"===data[i]?this._buildStream().tree():data[i];var rawStanza=Strophe.serialize(stanza);this._conn.xmlOutput(stanza),this._conn.rawOutput(rawStanza),this.socket.send(rawStanza)}this._conn._data=[]}},_onMessage:function(message){var elem,close='<close xmlns="urn:ietf:params:xml:ns:xmpp-framing" />';if(message.data===close)return this._conn.rawInput(close),this._conn.xmlInput(message),void(this._conn.disconnecting||this._conn._doDisconnect());if(0===message.data.search("<open ")){if(elem=(new DOMParser).parseFromString(message.data,"text/xml").documentElement,!this._handleStreamStart(elem))return}else{var data=this._streamWrap(message.data);elem=(new DOMParser).parseFromString(data,"text/xml").documentElement}return this._check_streamerror(elem,Strophe.Status.ERROR)?void 0:this._conn.disconnecting&&"presence"===elem.firstChild.nodeName&&"unavailable"===elem.firstChild.getAttribute("type")?(this._conn.xmlInput(elem),void this._conn.rawInput(Strophe.serialize(elem))):void this._conn._dataRecv(elem,message.data)},_onOpen:function(){Strophe.info("Websocket open");var start=this._buildStream();this._conn.xmlOutput(start.tree());var startString=Strophe.serialize(start);this._conn.rawOutput(startString),this.socket.send(startString)},_reqToData:function(stanza){return stanza},_send:function(){this._conn.flush()},_sendRestart:function(){clearTimeout(this._conn._idleTimeout),this._conn._onIdle.bind(this._conn)()}}}}).default},module.exports=factory()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return groupBy})),__webpack_require__.d(__webpack_exports__,"a",(function(){return GroupedObservable}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2),_Subscription__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(10),_Observable__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(5),_Subject__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(14);function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return function(source){return source.lift(new GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector))}}var GroupByOperator=function(){function GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector){this.keySelector=keySelector,this.elementSelector=elementSelector,this.durationSelector=durationSelector,this.subjectSelector=subjectSelector}return GroupByOperator.prototype.call=function(subscriber,source){return source.subscribe(new GroupBySubscriber(subscriber,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector))},GroupByOperator}(),GroupBySubscriber=function(_super){function GroupBySubscriber(destination,keySelector,elementSelector,durationSelector,subjectSelector){var _this=_super.call(this,destination)||this;return _this.keySelector=keySelector,_this.elementSelector=elementSelector,_this.durationSelector=durationSelector,_this.subjectSelector=subjectSelector,_this.groups=null,_this.attemptedToUnsubscribe=!1,_this.count=0,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(GroupBySubscriber,_super),GroupBySubscriber.prototype._next=function(value){var key;try{key=this.keySelector(value)}catch(err){return void this.error(err)}this._group(value,key)},GroupBySubscriber.prototype._group=function(value,key){var groups=this.groups;groups||(groups=this.groups=new Map);var element,group=groups.get(key);if(this.elementSelector)try{element=this.elementSelector(value)}catch(err){this.error(err)}else element=value;if(!group){group=this.subjectSelector?this.subjectSelector():new _Subject__WEBPACK_IMPORTED_MODULE_4__.a,groups.set(key,group);var groupedObservable=new GroupedObservable(key,group,this);if(this.destination.next(groupedObservable),this.durationSelector){var duration=void 0;try{duration=this.durationSelector(new GroupedObservable(key,group))}catch(err){return void this.error(err)}this.add(duration.subscribe(new GroupDurationSubscriber(key,group,this)))}}group.closed||group.next(element)},GroupBySubscriber.prototype._error=function(err){var groups=this.groups;groups&&(groups.forEach((function(group,key){group.error(err)})),groups.clear()),this.destination.error(err)},GroupBySubscriber.prototype._complete=function(){var groups=this.groups;groups&&(groups.forEach((function(group,key){group.complete()})),groups.clear()),this.destination.complete()},GroupBySubscriber.prototype.removeGroup=function(key){this.groups.delete(key)},GroupBySubscriber.prototype.unsubscribe=function(){this.closed||(this.attemptedToUnsubscribe=!0,0===this.count&&_super.prototype.unsubscribe.call(this))},GroupBySubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a),GroupDurationSubscriber=function(_super){function GroupDurationSubscriber(key,group,parent){var _this=_super.call(this,group)||this;return _this.key=key,_this.group=group,_this.parent=parent,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(GroupDurationSubscriber,_super),GroupDurationSubscriber.prototype._next=function(value){this.complete()},GroupDurationSubscriber.prototype._unsubscribe=function(){var parent=this.parent,key=this.key;this.key=this.parent=null,parent&&parent.removeGroup(key)},GroupDurationSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a),GroupedObservable=function(_super){function GroupedObservable(key,groupSubject,refCountSubscription){var _this=_super.call(this)||this;return _this.key=key,_this.groupSubject=groupSubject,_this.refCountSubscription=refCountSubscription,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(GroupedObservable,_super),GroupedObservable.prototype._subscribe=function(subscriber){var subscription=new _Subscription__WEBPACK_IMPORTED_MODULE_2__.a,refCountSubscription=this.refCountSubscription,groupSubject=this.groupSubject;return refCountSubscription&&!refCountSubscription.closed&&subscription.add(new InnerRefCountSubscription(refCountSubscription)),subscription.add(groupSubject.subscribe(subscriber)),subscription},GroupedObservable}(_Observable__WEBPACK_IMPORTED_MODULE_3__.a),InnerRefCountSubscription=function(_super){function InnerRefCountSubscription(parent){var _this=_super.call(this)||this;return _this.parent=parent,parent.count++,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(InnerRefCountSubscription,_super),InnerRefCountSubscription.prototype.unsubscribe=function(){var parent=this.parent;parent.closed||this.closed||(_super.prototype.unsubscribe.call(this),parent.count-=1,0===parent.count&&parent.attemptedToUnsubscribe&&parent.unsubscribe())},InnerRefCountSubscription}(_Subscription__WEBPACK_IMPORTED_MODULE_2__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(global){const reUnescapedHtml=/[&<>"'`]/g,reHasUnescapedHtml=RegExp(reUnescapedHtml.source),freeGlobal="object"==typeof global&&global&&global.Object===Object&&global,freeSelf="object"==typeof self&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")();const escapeHtmlChar=(object={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},function(key){return null==object?void 0:object[key]});var object;const objectToString=Object.prototype.toString,Symbol=root.Symbol,symbolProto=Symbol?Symbol.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;function baseToString(value){if("string"==typeof value)return value;if(function(value){return"symbol"==typeof value||function(value){return Boolean(value)&&"object"==typeof value}(value)&&"[object Symbol]"==objectToString.call(value)}(value))return symbolToString?symbolToString.call(value):"";const result=String(value);return"0"==result&&1/value==-1/0?"-0":result}__webpack_exports__.default=function(string){var value;return(string=null==(value=string)?"":baseToString(value))&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string}}.call(this,__webpack_require__(134))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class FileViewerType{}FileViewerType.USER="user",FileViewerType.ROOM="room";class FileViewer{constructor(viewerId,type){this.viewerId=null,this.type=null,this.contact=null,this.room=null,this.channel=null,this.viewerId=viewerId,this.type=type}static createFromData(data){return data.map(viewerData=>new FileViewer(viewerData.viewerId,viewerData.type))}}exports.FileViewer=FileViewer},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4);class PromiseQueue{constructor(){this.queue=[],this.started=!1,this.logger=logger_service_1.LoggerService.getInstance()}static create(){return new PromiseQueue}add(promise){this.queue.push(promise),this.started||(this.started=!0,this.execute())}execute(){const promise=this.queue.shift();if(promise)try{this.timeoutPromise(2e4,promise).then(()=>{this.execute()}).catch(error=>{const errorMessage=error&&error.message?error.message:"Unknown error";this.logger.error("[PromiseQueue] execute failure -- "+errorMessage),this.execute()})}catch(error){const errorMessage=error&&error.message?error.message:"Unknown error",errorStack=error&&error.stack?error.stack:"Unknown stack";this.logger.error(`[PromiseQueue] execution exception  -- ${errorMessage} : ${errorStack}`),this.execute()}else this.started=!1}timeoutPromise(ms,promise){let timeoutId=null;const timeout=new Promise((__resolve,reject)=>{timeoutId=setTimeout(()=>{reject(new Error("Timed out in "+ms+"ms."))},ms)});return Promise.race([promise(),timeout]).then(value=>(clearTimeout(timeoutId),value))}}exports.PromiseQueue=PromiseQueue},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),company_model_1=__webpack_require__(24),personalRoutine_model_1=__webpack_require__(109),telephonyForward_model_1=__webpack_require__(140);class Contact{constructor(jid=null,name=null,company=null){this.id=null,this.dbId=null,this.jid=null,this.fullJid=null,this.jidtel=null,this.login=null,this.temp=!1,this.roster=!1,this.initialized=!1,this.isTerminated=!1,this.ask=null,this.subscription=null,this.guest=!1,this.confId=null,this.conversation=null,this.personalAudioRoomOpenInviteId=null,this.personalAudioRoomOpenInviteIdSubject=null,this.capabilities=null,this.groups=null,this.nameUpdatePrio=null,this.rxSubject=new rxjs_1.Subject,this.isBot=!1,this.isBotSharing=!1,this.isConfiguringSettings=!1,this.status=null,this.telStatus=null,this.imStatus=null,this.oldImStatus=null,this.imStatusStamp=null,this.resources=null,this.lastActivityDate=null,this.lastActivityMessage=null,this.statusMessage=null,this.message=null,this.loginEmail=null,this.lastname=null,this.firstname=null,this.initials=null,this.name=null,this.nickname=null,this.title=null,this.jobTitle=null,this.company=null,this.companyFeatures=null,this.isInDefaultCompany=!1,this.language=null,this.country=null,this.timezone=null,this.tags=null,this._displayName=null,this.nameForLogs=null,this.displayShortName=null,this.displayOrder="FL",this.o365Flag=!1,this.outlookFlag=!1,this.invitation=null,this.botDetails="",this._avatar=null,this.defaultAvatar=null,this.avatarSrc=null,this.calendarState=null,this.calendarStateRaw=null,this.phoneProCan=null,this.pbxId=null,this.organisationId=null,this.siteId=null,this.systemId=null,this.phoneNumberId=null,this.phonePbx=null,this.phoneInternalNumber=null,this.mobilePro=null,this.mobileProCan=null,this.isMobileProShared=!1,this.phonePerso=null,this.phonePersoCan=null,this.isPhonePersoShared=!1,this.mobilePerso=null,this.mobilePersoCan=null,this.isMobilePersoShared=!1,this.isVirtualTerm=!1,this.systDeviceName=null,this.voicemailNumber=null,this.hasPhoneNumber=!1,this.hasPhoneProDdiNumber=!1,this.phoneNumbersInitialized=!1,this.isCCDAgentEnabled=!1,this.mobilePhones=[],this.businessPhones=[],this.email="",this.companyDirectoryFlag=!1,this.userId=null,this.personalDirectoryFlag=!1,this.directoryObsolete=!1,this.emailPro=null,this.emailPerso=null,this.note1=null,this.note2=null,this.department=null,this.otherPhoneNumbers=null,this.postalCode=null,this.state=null,this.street=null,this.city=null,this.companyName=null,this.businessCompanyId=null,this.isTv=!1,this.rainbowTvData=null,this.roles=null,this.adminType=null,this.customData=null,this.userInfo1=null,this.userInfo2=null,this.userTitleNameEnabled=!1,this.alertNotificationEnabledForMyCompany=!1,this.msTeamsPresence="",this._guestMode=!1,this.guestModeSubject=new rxjs_1.BehaviorSubject(this._guestMode),this._outOfOffice={active:!1,message:""},this.giphyEnabled=!0,this.telephonySettingsEnabled=!0,this.recordConversationEnabled=!0,this.changeSettingsEnabled=!0,this.newUiEnabled=!1,this.denySelfRegister=!1,this.webinarEnabled=!0,this.attendantConsoleEnabled=!1,this.supervisorConsoleEnabled=!1,this.isAlertNotificationEnabled=!1,this.eLearningCustomisation=!1,this.eLearningGamificationCustomisation=!1,this._fileSharingEnabled=!1,this._fileStorageEnabled=!1,this._instantMessagesEnabled=!1,this._changePresenceEnabled=!1,this._phoneMeetingsEnabled=!1,this._channelsEnabled=!1,this._roomsEnabled=!1,this._webrtcAudioEnabled=!1,this._webrtcVideoEnabled=!1,this._webrtcSharingEnabled=!1,this._modifyProfileEnabled=!1,this._useDialOutEnabled=!1,this._useSpeakingTimeStatistics=!1,this._readReceiptsCustomisation=!1,this._telCapabilities=null,this._supervisionCapabilities=null,this._supervisionState=null,this._forwards=null,this._personalRoutines=null,this.id=jid,this.dbId=null,this.jid=jid,this.fullJid=null,this.jidtel=null,this.login=null,this.temp=!1,this.roster=!1,this.initialized=!1,this.ask="none",this.subscription="none",this.guest=!1,this.confId="",this.conversation=null,this.personalAudioRoomOpenInviteId=null,this.personalAudioRoomOpenInviteIdSubject=new rxjs_1.BehaviorSubject(this.personalAudioRoomOpenInviteId),this.capabilities=null,this.groups=null,this.nameUpdatePrio=Contact.NameUpdatePrio.MAX_UPDATE_PRIO,this.status="unknown",this.telStatus="",this.imStatus="offline",this.oldImStatus=null,this.imStatusStamp=[],this.resources={},this.mobileResource=null,this.lastActivityDate=null,this.lastActivityMessage=null,this.statusMessage=null,this.message="",this.loginEmail="",this.lastname="",this.firstname="",this.initials="",this.name={value:this._displayName},this.nameForLogs="",this._displayName=name||jid,this.nickname="",this.title="",this.jobTitle="",this.company=company,this.isInDefaultCompany=!1,this.language=null,this.country="",this.timezone="",this.tags=null,this.defaultAvatar=null,this._avatar=null,this.avatarSrc=null,this.calendarState={},this.calendarStateRaw={},this.phonePro="",this.phoneProCan="",this.pbxId="",this.phonePbx="",this.phoneInternalNumber="",this.mobilePro="",this.mobileProCan="",this.isMobileProShared=!1,this.phonePerso="",this.phonePersoCan="",this.isPhonePersoShared=!1,this.mobilePerso="",this.mobilePersoCan="",this.isMobilePersoShared=!1,this.isVirtualTerm=!1,this.systDeviceName=null,this.emailPro="",this.emailPerso="",this.note1="",this.note2="",this.department="",this.otherPhoneNumbers=[],this.postalCode="",this.state="",this.street="",this.city="",this.businessCompanyId="",this.userId="",this.companyName="",this.isTv=!1,this.rainbowTvData={},this.roles=[],this.adminType=null,this.newUiEnabled=!1,this._fileSharingEnabled=!0,this._fileStorageEnabled=!0,this.fileStorageEnabledSubject=new rxjs_1.BehaviorSubject(!0),this._instantMessagesEnabled=!0,this._changePresenceEnabled=!0,this._phoneMeetingsEnabled=!0,this.phoneMeetingsEnabledSubject=new rxjs_1.BehaviorSubject(!0),this._channelsEnabled=!0,this.webinarEnabled=!0,this._roomsEnabled=!0,this._webrtcAudioEnabled=!0,this._webrtcVideoEnabled=!0,this._webrtcSharingEnabled=!0,this._modifyProfileEnabled=!0,this._useDialOutEnabled=!0,this._useSpeakingTimeStatistics=!0,this._readReceiptsCustomisation=!0,this.attendantConsoleEnabled=!1,this.supervisorConsoleEnabled=!1,this.isAlertNotificationEnabled=!1,this.userTitleNameEnabled=!0,this.giphyEnabled=!0,this.isCCDAgentEnabled=!1,this.msTeamsPresence="",this.denySelfRegister=!1,this.eLearningCustomisation=!1,this.eLearningGamificationCustomisation=!1}get guestMode(){return this._guestMode}set guestMode(value){this._guestMode=value,this.guestModeSubject.next(this._guestMode)}get outOfOffice(){return this._outOfOffice}set outOfOffice(value){this._outOfOffice=value,this.rxSubject.next({name:"outOfOffice"})}updateFromUserData(userData){this.isBot=!1,this.isBotSharing=!1,void 0!==userData.id&&(this.dbId=userData.id),void 0!==userData.loginEmail&&(this.loginEmail=userData.loginEmail),void 0!==userData.firstName&&(this.firstname=userData.firstName),void 0!==userData.lastName&&(this.lastname=userData.lastName),void 0!==userData.nickName&&(this.nickname=userData.nickName),void 0!==userData.title&&(this.title=userData.title),void 0!==userData.jobTitle&&(this.jobTitle=userData.jobTitle),void 0!==userData.organisationId&&(this.organisationId=userData.organisationId),void 0!==userData.siteId&&(this.siteId=userData.siteId),void 0!==userData.country&&(this.country=userData.country),void 0!==userData.timezone&&(this.timezone=userData.timezone),void 0!==userData.roles&&(this.roles=userData.roles),void 0!==userData.adminType&&(this.adminType=userData.adminType),void 0!==userData.isTerminated&&(this.isTerminated=userData.isTerminated),void 0!==userData.isInDefaultCompany&&(this.isInDefaultCompany=userData.isInDefaultCompany),void 0!==userData.lastAvatarUpdateDate&&(this.lastAvatarUpdateDate=userData.lastAvatarUpdateDate),void 0!==userData.isInitialized&&(this.initialized=userData.isInitialized),void 0!==userData.guestMode&&(this.guestMode=userData.guestMode),void 0!==userData.personalAudioRoomOpenInviteId&&(this.personalAudioRoomOpenInviteId=userData.personalAudioRoomOpenInviteId,this.personalAudioRoomOpenInviteIdSubject.next(this.personalAudioRoomOpenInviteId)),void 0!==userData.isTv&&(this.isTv=userData.isTv),void 0!==userData.tags&&(this.tags=userData.tags),void 0!==userData.department&&(this.department=userData.department),void 0!==userData.customData&&(this.customData=userData.customData),void 0!==userData.denySelfRegister&&(this.denySelfRegister=userData.denySelfRegister),void 0!==userData.userInfo1&&(this.userInfo1=userData.userInfo1),void 0!==userData.userInfo2&&(this.userInfo2=userData.userInfo2),void 0!==userData.jid_im&&(this.id=userData.jid_im,this.jid=userData.jid_im,this.jidtel=userData.jid_tel),this.company&&this.company.id===userData.companyId||(this.company=company_model_1.Company.create(userData.companyId,userData.companyName)),void 0!==userData.fileSharingCustomisation&&(this._fileSharingEnabled="enabled"===userData.fileSharingCustomisation),void 0!==userData.fileStorageCustomisation&&(this.fileStorageEnabled="enabled"===userData.fileStorageCustomisation),void 0!==userData.userTitleNameCustomisation&&(this.userTitleNameEnabled="enabled"===userData.userTitleNameCustomisation),void 0!==userData.instantMessagesCustomisation&&(this._instantMessagesEnabled="enabled"===userData.instantMessagesCustomisation),void 0!==userData.overridePresenceCustomisation&&(this._changePresenceEnabled="enabled"===userData.overridePresenceCustomisation),void 0!==userData.phoneMeetingCustomisation&&(this.phoneMeetingsEnabled="enabled"===userData.phoneMeetingCustomisation),void 0!==userData.useChannelCustomisation&&(this._channelsEnabled="enabled"===userData.useChannelCustomisation),void 0!==userData.useRoomCustomisation&&(this._roomsEnabled="enabled"===userData.useRoomCustomisation),void 0!==userData.useWebRTCAudioCustomisation&&(this._webrtcAudioEnabled="enabled"===userData.useWebRTCAudioCustomisation),void 0!==userData.useWebRTCVideoCustomisation&&(this._webrtcVideoEnabled="enabled"===userData.useWebRTCVideoCustomisation),void 0!==userData.useScreenSharingCustomisation&&(this._webrtcSharingEnabled="enabled"===userData.useScreenSharingCustomisation),void 0!==userData.userProfileCustomisation&&(this._modifyProfileEnabled="enabled"===userData.userProfileCustomisation),void 0!==userData.useGifCustomisation&&(this.giphyEnabled="enabled"===userData.useGifCustomisation),void 0!==userData.changeTelephonyCustomisation&&(this.telephonySettingsEnabled="enabled"===userData.changeTelephonyCustomisation),void 0!==userData.recordingConversationCustomisation&&(this.recordConversationEnabled="enabled"===userData.recordingConversationCustomisation),void 0!==userData.changeSettingsCustomisation&&(this.changeSettingsEnabled="enabled"===userData.changeSettingsCustomisation),void 0!==userData.useDialOutCustomisation&&(this.useDialOutEnabled="enabled"===userData.useDialOutCustomisation),void 0!==userData.useSpeakingTimeStatistics&&(this.useSpeakingTimeStatistics="enabled"===userData.useSpeakingTimeStatistics),void 0!==userData.readReceiptsCustomisation&&(this.readReceiptsCustomisation="enabled"===userData.readReceiptsCustomisation),void 0!==userData.tryNewUiCustomisation&&(this.newUiEnabled="enabled"===userData.tryNewUiCustomisation),void 0!==userData.eLearningCustomisation&&(this.eLearningCustomisation="enabled"===userData.eLearningCustomisation,this.eLearningCustomisation&&void 0!==userData.eLearningGamificationCustomisation&&(this.eLearningGamificationCustomisation="enabled"===userData.eLearningGamificationCustomisation)),this.attendantConsoleEnabled=config.attendantConsole||this.isAttendantConsole(),this.supervisorConsoleEnabled=(config.supervisorConsole||this.isSupervisor())&&"RVCP Subscriber"===this.systDeviceName,void 0!==userData.isAlertNotificationEnabled&&(this.isAlertNotificationEnabled=userData.isAlertNotificationEnabled),void 0!==userData.forwards&&(this._forwards=userData.forwards.map(userDataForward=>telephonyForward_model_1.TelephonyForward.createForwardFromUserData(userDataForward))),void 0!==userData.personalRoutines&&(this._personalRoutines=userData.personalRoutines.map(userDataRoutine=>personalRoutine_model_1.PersonalRoutine.createRoutineFromData(userDataRoutine))),void 0!==userData.emails&&(this.emailPerso="",userData.emails.forEach(email=>{switch(email.type){case"work":this.emailPro=email.email;break;case"home":this.emailPerso=email.email}})),this.customData||(this.customData={}),void 0!==userData.phoneNumbers&&(this.phonePro=this.phoneProCan="",this.phonePbx="",this.phoneInternalNumber="",this.pbxId="",this.mobilePro=this.mobileProCan="",this.phonePerso=this.phonePersoCan="",this.mobilePerso=this.mobilePersoCan="",this.voicemailNumber="",this.systemId="",this.phoneNumberId="",this.hasPhoneNumber=!1,this.hasPhoneProDdiNumber=!1,this.isCCDAgentEnabled=!1,userData.phoneNumbers.forEach(phoneNumber=>{const number=phoneNumber.number,numberCan=phoneNumber.numberE164,deviceType=phoneNumber.deviceType;switch(this.hasPhoneNumber=!0,phoneNumber.type){case"work":"landline"===deviceType&&(phoneNumber.isCloudPbxDDI?(this.phonePro=phoneNumber.number,this.phoneProCan=phoneNumber.numberE164,this.hasPhoneProDdiNumber=!0):this.hasPhoneProDdiNumber||(this.phonePro=number,this.phoneProCan=numberCan),phoneNumber.isFromSystem&&(this.phonePbx=phoneNumber.shortNumber,this.isCCDAgentEnabled="CCD agent"===phoneNumber.userType,phoneNumber.internalNumber&&(this.phoneInternalNumber=phoneNumber.internalNumber,"Remote Extension"===phoneNumber.deviceName||"Any Device"===phoneNumber.deviceName||0===phoneNumber.deviceName.search("UA VIRTUAL")?this.isVirtualTerm=!0:this.isVirtualTerm=!1),this.systDeviceName=phoneNumber.deviceName?phoneNumber.deviceName:null,this.pbxId=phoneNumber.pbxId,this.voicemailNumber=phoneNumber.voiceMailNumber,this.systemId=phoneNumber.systemId,this.phoneNumberId=phoneNumber.phoneNumberId,phoneNumber.number&&(this.hasPhoneProDdiNumber=!0))),"mobile"===deviceType&&(this.mobilePro=number,this.isMobileProShared=phoneNumber.isVisibleByOthers,this.mobileProCan=numberCan);break;case"home":"landline"===deviceType&&(this.phonePerso=number,this.isPhonePersoShared=phoneNumber.isVisibleByOthers,this.phonePersoCan=numberCan),"mobile"===deviceType&&(this.mobilePerso=number,this.isMobilePersoShared=phoneNumber.isVisibleByOthers,this.mobilePersoCan=numberCan)}}),this.phoneNumbersInitialized=!0),void 0!==userData.outOfOffice&&(this.outOfOffice=userData.outOfOffice),this.computeDisplayName()}containsEmail(email){const lowerCaseEmail=email.toLowerCase();return!(!this.loginEmail||this.loginEmail.toLowerCase()!==lowerCaseEmail)||(!(!this.emailPro||this.emailPro.toLowerCase()!==lowerCaseEmail)||!(!this.emailPerso||this.emailPerso.toLowerCase()!==lowerCaseEmail))}containsPhoneNumber(phoneNumber){return!!phoneNumber&&[this.phonePbx,this.phoneInternalNumber,this.phonePro,this.phoneProCan,this.mobilePro,this.mobileProCan,this.phonePerso,this.phonePersoCan,this.mobilePerso,this.mobilePersoCan].includes(phoneNumber)}containsDirectoryPhoneNumber(phoneNumber){if(!phoneNumber)return!1;const mobilePhones=this.mobilePhones||[],businessPhones=this.businessPhones||[],otherPhoneNumbers=this.otherPhoneNumbers||[];return!!mobilePhones.includes(phoneNumber)||(!!businessPhones.includes(phoneNumber)||!!otherPhoneNumbers.includes(phoneNumber))}getGroups(){return this.groups}setGroups(groups){this.groups=groups}getPersonalAudioRoomOpenInviteId(){return this.personalAudioRoomOpenInviteId}setPersonalAudioRoomOpenInviteId(openInviteId){this.personalAudioRoomOpenInviteId=openInviteId,this.personalAudioRoomOpenInviteIdSubject.next(this.personalAudioRoomOpenInviteId)}set avatar(avatar){this._avatar=avatar}get avatar(){return this._avatar?this._avatar:this.avatarSrc?(this._avatar={src:this.avatarSrc},this.defaultAvatar=null,this.rxSubject.next({name:"avatar"}),this._avatar):this.defaultAvatar}getAvatarInBase64(){return new Promise(resolve=>{try{if(this.avatar&&this.avatar.src||resolve(void 0),this.avatar.src&&!this.avatar.src.startsWith("data:image/png")){const img=new Image,canvas=document.createElement("canvas");canvas.width=120,canvas.height=120;const ctx=canvas.getContext("2d");ctx.rect(0,0,120,120),ctx.fillStyle=this.color,ctx.fill(),img.onload=()=>{ctx.drawImage(img,0,0,120,120),resolve(canvas.toDataURL("image/png"))},img.src=this.avatar.src}else resolve(this.avatar.src)}catch(error){resolve(void 0)}})}dateEncode(date){return Array.from(date).reduce((buf,char)=>buf+=char.charCodeAt(0).toString(16),"")}getAvatar(size=256,forced=!1){this.dbId&&this.lastAvatarUpdateDate&&(this.avatarSrc=`${this.avatarServerURL}/api/avatar/${this.dbId}?size=${size}&update=${this.dateEncode(this.lastAvatarUpdateDate)}`),this.createTextAvatarImage(),this.isTv&&(this.defaultAvatar={src:"/assets/skins/rainbow/images/misc/androidtv.svg"}),!forced&&this.lastAvatarUpdateDate||(this.avatar=null)}createTextAvatarImage(){const image=new Image,canvas=document.createElement("canvas");canvas.width=image.width=225,canvas.height=image.height=225;const ctx=canvas.getContext("2d");ctx.rect(0,0,225,225),ctx.fillStyle=this.color,ctx.fill(),ctx.font="bold 100px Helvetica",ctx.textAlign="center",ctx.fillStyle="white",ctx.fillText(this.initials,110,150),image.src=canvas.toDataURL("image/png"),this.defaultAvatar=image}get displayName(){return this._displayName}set displayName(displayName){this._displayName=displayName,this.nameForLogs=config&&config.debug?displayName:displayName.charAt(0)+displayName.replace(/[^\s](?=.{1,}$)/g,"*").substr(1),this.name.value=displayName,this.rxSubject.next({name:"displayName"})}updateName(firstName,lastName){this.firstname=firstName,this.lastname=lastName,this.computeDisplayName(),this.getAvatar()}computeDisplayName(){const firstName=this.firstname?this.firstname.charAt(0).toUpperCase()+this.firstname.slice(1):null,lastName=this.lastname?this.lastname.charAt(0).toUpperCase()+this.lastname.slice(1):null,nickName=this.nickname?this.nickname.charAt(0).toUpperCase()+this.nickname.slice(1):null;this.isTv?(this.displayName=lastName,this.initials=this.displayName.charAt(0)):lastName||firstName||!this.personalDirectoryFlag&&!this.companyDirectoryFlag?lastName&&firstName?"FL"===this.displayOrder?(this.displayName=firstName+" "+lastName,this.displayShortName=firstName+" "+lastName.charAt(0),this.initials=firstName.charAt(0)+lastName.charAt(0)):(this.displayName=lastName+" "+firstName,this.displayShortName=lastName+" "+firstName.charAt(0),this.initials=lastName.charAt(0)+firstName.charAt(0)):lastName&&!firstName?(this.displayName=this.displayShortName=lastName,this.initials=lastName.charAt(0)):nickName?(this.displayName=nickName,this.displayShortName=nickName,this.initials=nickName.charAt(0)):this.loginEmail?(this.displayName=this.loginEmail,this.displayShortName=this.loginEmail,this.initials=this.loginEmail.substring(0,2).toUpperCase()):firstName?(this.displayName=firstName,this.initials=firstName.charAt(0)):(this.displayName="Anonymous",this.displayShortName="Anonymous",this.initials="A"):(this.displayName=this.companyName,this.initials=this.displayName.charAt(0));const upperCaseDisplayName=this.displayName.toUpperCase();let sum=0;for(let i=0;i<upperCaseDisplayName.length;i++)sum+=upperCaseDisplayName.charCodeAt(i);this.colorIndex=sum%12,this.color=Contact.textAvatarColor[this.colorIndex],this.colorName=Contact.textAvatarName[this.colorIndex]}isCPaaSGuest(){return this.roles.indexOf("guest")>=0}isGuest(){return this.guestMode}isAnonymousGuest(){return!this.isTv&&("A"===this.initials||"Anonymous"===this.displayName)}isBadGuest(){return this.displayName.startsWith("__guest__")||this.displayName.startsWith("__##__guest__##__")}isGuestInitialized(){return null!==this.firstname&&this.firstname.length>0&&null!==this.lastname&&this.lastname.length>0&&"__##__guest__##__"!==this.firstname}hasAdminRights(){return this.isSuperadmin()||this.isBusinessAdmin()||this.isCustomerSuccessAdmin()||this.isAdmin()||this.isBPAdmin()}isSuperadmin(){return this.roles.indexOf("superadmin")>=0}isBusinessAdmin(){return this.roles.indexOf("business_admin")>=0}isCustomerSuccessAdmin(){return this.roles.indexOf("customer_success_admin")>=0}isOrganizationAdmin(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.ORGANIZATION_ADMIN}isCompanyAdmin(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.COMPANY_ADMIN}isSiteAdmin(){return this.roles.indexOf("admin")>=0&&this.adminType===Contact.AdminType.SITE_ADMIN}isAdmin(){return this.roles.indexOf("admin")>=0&&(!this.isOrganizationAdmin()||!this.isBPAdmin())}isECAdmin(){return this.company&&!this.company.isBP&&this.isAdmin()}isBPAdmin(){return this.isBPAdminOperations()||this.isBPAdminFinance()}isBPAdminOperations(){return this.company&&this.company.isBP&&this.roles.indexOf("bp_admin")>=0}isBPAdminFinance(){return this.company&&this.company.isBP&&this.roles.indexOf("bp_finance")>=0}isBPAdminDR(){return this.isBPAdmin()&&this.company.isDR()}isBPAdminVAD(){return this.isBPAdmin()&&this.company.isVAD()}isBPAdminIR(){return this.isBPAdmin()&&this.company.isIR()}isDirectoryAdmin(){return this.roles.indexOf("directory_admin")>=0}isWebinarHost(){return this.roles.indexOf("webinar_host")>=0}isAttendantConsole(){return this.roles&&this.roles.indexOf("attendant")>=0}isSupervisor(){return this.roles&&this.roles.indexOf("supervisor")>=0}getAdminType(){return this.roles.indexOf("admin")>=0?this.adminType:Contact.AdminType.UNDEFINED}isVoiceSubscriber(){return"RVCP Subscriber"===this.systDeviceName}set fileSharingEnabled(fileSharingEnabled){this._fileSharingEnabled=fileSharingEnabled,this.rxSubject.next({name:"fileSharingEnabled"})}get fileSharingEnabled(){return this._fileSharingEnabled}set fileStorageEnabled(fileStorageEnabled){this._fileStorageEnabled=fileStorageEnabled,this.fileStorageEnabledSubject.next(this._fileStorageEnabled),this.rxSubject.next({name:"fileStorageEnabled"})}get fileStorageEnabled(){return this._fileStorageEnabled}set instantMessagesEnabled(instantMessagesEnabled){this._instantMessagesEnabled=instantMessagesEnabled,this.rxSubject.next({name:"instantMessagesEnabled"})}get instantMessagesEnabled(){return this._instantMessagesEnabled}set changePresenceEnabled(changePresenceEnabled){this._changePresenceEnabled=changePresenceEnabled,this.rxSubject.next({name:"changePresenceEnabled"})}get changePresenceEnabled(){return this._changePresenceEnabled}set phoneMeetingsEnabled(phoneMeetingsEnabled){this._phoneMeetingsEnabled=phoneMeetingsEnabled,this.phoneMeetingsEnabledSubject.next(this._phoneMeetingsEnabled),this.rxSubject.next({name:"phoneMeetingsEnabled"})}get phoneMeetingsEnabled(){return this._phoneMeetingsEnabled}set channelsEnabled(channelsEnabled){this._channelsEnabled=channelsEnabled,this.rxSubject.next({name:"channelsEnabled"})}get channelsEnabled(){return this._channelsEnabled}set roomsEnabled(roomsEnabled){this._roomsEnabled=roomsEnabled,this.rxSubject.next({name:"roomsEnabled"})}get roomsEnabled(){return this._roomsEnabled}set webrtcAudioEnabled(webrtcAudioEnabled){this._webrtcAudioEnabled=webrtcAudioEnabled,this.rxSubject.next({name:"webrtcAudioEnabled"})}get webrtcAudioEnabled(){return this._webrtcAudioEnabled}set webrtcVideoEnabled(webrtcVideoEnabled){this._webrtcVideoEnabled=webrtcVideoEnabled,this.rxSubject.next({name:"webrtcVideoEnabled"})}get webrtcVideoEnabled(){return this._webrtcVideoEnabled}set webrtcSharingEnabled(webrtcSharingEnabled){this._webrtcSharingEnabled=webrtcSharingEnabled,this.rxSubject.next({name:"webrtcSharingEnabled"})}get webrtcSharingEnabled(){return this._webrtcSharingEnabled}set modifyProfileEnabled(modifyProfileEnabled){this._modifyProfileEnabled=modifyProfileEnabled,this.rxSubject.next({name:"modifyProfileEnabled"})}get modifyProfileEnabled(){return this._modifyProfileEnabled}set useDialOutEnabled(useDialOutEnabled){this._useDialOutEnabled=useDialOutEnabled,this.rxSubject.next({name:"useDialOutEnabled"})}get useDialOutEnabled(){return this._useDialOutEnabled}set useSpeakingTimeStatistics(useSpeakingTimeStatistics){this._useSpeakingTimeStatistics=useSpeakingTimeStatistics,this.rxSubject.next({name:"useSpeakingTimeStatistics"})}get useSpeakingTimeStatistics(){return this._useSpeakingTimeStatistics}set readReceiptsCustomisation(readReceiptsCustomisation){this._readReceiptsCustomisation=readReceiptsCustomisation,this.rxSubject.next({name:"readReceiptsCustomisation"})}get readReceiptsCustomisation(){return this._readReceiptsCustomisation}set telCapabilities(telCapabilities){this._telCapabilities=telCapabilities,this.rxSubject.next({name:"telCapabilities"})}get telCapabilities(){return this._telCapabilities}set supervisionCapabilities(supervisionCapabilities){this._supervisionCapabilities=supervisionCapabilities,this.rxSubject.next({name:"supervisionCapabilities"})}get supervisionCapabilities(){return this._supervisionCapabilities}set supervisionState(supervisionState){this._supervisionState=supervisionState,this.rxSubject.next({name:"supervisionState"})}get supervisionState(){return this._supervisionState}set forwards(forwards){this._forwards=forwards,this.rxSubject.next({name:"forwards"})}get forwards(){return this._forwards}set personalRoutines(personalRoutines){this._personalRoutines=personalRoutines,this.rxSubject.next({name:"personalRoutines"})}get personalRoutines(){return this._personalRoutines}toString(){return this.nameForLogs}}Contact.AdminType={ORGANIZATION_ADMIN:"organization_admin",COMPANY_ADMIN:"company_admin",SITE_ADMIN:"site_admin",UNDEFINED:"undefined"},Contact.NameUpdatePrio={NO_UPDATE_PRIO:0,OUTLOOK_UPDATE_PRIO:1,SERVER_UPDATE_PRIO:2,MAX_UPDATE_PRIO:99},Contact.textAvatarColor=["#ca8741","#e44647","#c62582","#9b4ce7","#6573ee","#1b70e0","#6ec7d9","#98d1b1","#7fbd40","#b2d334","#dcd232","#f1be00"],Contact.textAvatarName=["purple-lavender","purple-violet","red-coral","blue-jeanlouisdavid","green-mint","green-yellow","orange-jade","pink-lady","yellow-submarine","blue-teal"],exports.Contact=Contact},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),function(PersonalRoutineType){PersonalRoutineType.PERSONALROUTINE_ATWORK="At work",PersonalRoutineType.PERSONALROUTINE_ONBREAK="On break",PersonalRoutineType.PERSONALROUTINE_OUTOFOFFICE="Out of office",PersonalRoutineType.PERSONALROUTINE_DND="Do not disturb",PersonalRoutineType.PERSONALROUTINE_CUSTOM="Custom"}(exports.PersonalRoutineType||(exports.PersonalRoutineType={}));class PersonalRoutine{constructor(id,name,type,active,presence,deviceMode,immediateCallForward,busyCallForward,noreplyCallForward,huntingGroups,cliOptions,outOfOffice){this.active=!1,this.presence={manage:!1,value:"online"},this.cliOptions={manage:!1,policy:"company_policy",phoneNumberId:"",anonymous:!1},this.deviceMode={manage:!1,mode:"computer"},this.immediateCallForward={manage:!1,callForwardType:"immediate",activate:!1,number:null,name:"",destinationType:"doNotForward"},this.busyCallForward={manage:!1,callForwardType:"busy",activate:!1,number:null,name:"",destinationType:"doNotForward"},this.noreplyCallForward={manage:!1,callForwardType:"noreply",activate:!1,number:null,name:"",destinationType:"doNotForward"},this.huntingGroups={manage:!1},this.outOfOffice={manage:!1,active:!1,message:""},this.id=id,this.name=name,this.type=type,this.active=active,this.presence=presence,this.deviceMode=deviceMode,this.immediateCallForward=immediateCallForward,immediateCallForward&&null===immediateCallForward.destinationType&&(this.immediateCallForward.destinationType="doNotForward"),this.busyCallForward=busyCallForward,busyCallForward&&null===busyCallForward.destinationType&&(this.busyCallForward.destinationType="doNotForward"),this.noreplyCallForward=noreplyCallForward,noreplyCallForward&&null===noreplyCallForward.destinationType&&(this.noreplyCallForward.destinationType="doNotForward"),this.huntingGroups=huntingGroups,this.cliOptions=cliOptions,this.outOfOffice=outOfOffice}static createRoutineFromData(data){return new PersonalRoutine(data.id,data.name,data.type,data.active,data.presence,data.deviceMode,data.immediateCallForward,data.busyCallForward,data.noreplyCallForward,data.huntingGroups,data.cliOptions,data.outOfOffice)}updateRoutineFromData(data){data.active&&(this.active=data.active),data.presence&&(this.presence=data.presence),data.deviceMode&&(this.deviceMode=data.deviceMode),data.huntingGroups&&(this.huntingGroups=data.huntingGroups),data.name&&(this.name=data.name),data.type&&(this.type=data.type),data.immediateCallForward&&(this.immediateCallForward=data.immediateCallForward,null===data.immediateCallForward.destinationType&&(this.immediateCallForward.destinationType="doNotForward")),data.noreplyCallForward&&(this.noreplyCallForward=data.noreplyCallForward,null===data.noreplyCallForward.destinationType&&(this.noreplyCallForward.destinationType="doNotForward")),data.busyCallForward&&(this.busyCallForward=data.busyCallForward,null===data.busyCallForward.destinationType&&(this.busyCallForward.destinationType="doNotForward")),data.cliOptions&&(this.cliOptions=data.cliOptions),data.outOfOffice&&(this.outOfOffice=data.outOfOffice)}}exports.PersonalRoutine=PersonalRoutine},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class SearchTextMsgResult{constructor(){this.body=void 0,this.date=void 0,this.isRoom=!1,this.isSent=!1,this.messageId=void 0,this.otherJid=null,this.historyIndex=null}static createSearchTextMsgResult(){return new SearchTextMsgResult}}exports.SearchTextMsgResult=SearchTextMsgResult;exports.SearchTextResult=class{constructor(convId){this.room=null,this.contact=null,this.totalCount=0,this.convRes=[],this.otherJid=convId}addMsgItem(msgItem){this.convRes.push(msgItem)}isRoom(){return this.conversation?null!==this.conversation.room:null!==this.room}};exports.SearchTextConvResults=class{constructor(){this._searchedText=null,this.normalizedSearchText=null,this.queryIds=[],this.results=[],this.totalCount=0,this.currentMessageId=null,this.isSearching=!1}get searchedText(){return this._searchedText}set searchedText(searchText){this._searchedText=searchText,this.normalizedSearchText=searchText?searchText.toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,""):null}isEmpty(){return 0===this.queryIds.length||0===Object.keys(this.results).length}clearAll(){this.searchedText=null,this.queryIds=[],this.partResults=[],this.totalCount=0,this.currentMessageId=null,this.results.splice(0,this.results.length)}isCurrentQuery(queryId){return this.queryIds.indexOf(queryId)>-1}getResultByJid(convJid){return this.results.find(result=>result.otherJid===convJid)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19);class WebinarSessionParticipant{constructor(id){this.contact=null,this.activeSpeaker=!1,this.mute=!1,this.onStage=!1,this.sharingOnStage=!1,this.searchString=null,this.role=null,this.raiseHand=!1,this.allowedToTalk=!1,this.invitedToTalk=!1,this.audioVideoSession=null,this.originalAudioVideoStream=null,this.audioVideoStream=null,this.audioVideoSubStreamLevel=-1,this.audioVideoTemporalLevel=-1,this.audioVideoAudioElement=null,this.sharingSession=null,this.sharingStream=null,this.sharingAudioElement=null,this.medias={audio:!1,video:!1,sharing:!1},this.rxSubject=new rxjs_1.Subject,this.subStreamLevel=-1,this.temporalLevel=-1,this.id=id}static create(id){return new WebinarSessionParticipant(id)}}exports.WebinarSessionParticipant=WebinarSessionParticipant;class WebinarSession{constructor(){this.activeSpeakerId=null,this.localParticipant=null,this.speakerParticipants=[],this.attendeeParticipants=[],this.raiseHandAttendeeParticipants=[],this.masterMedia=null,this.showMySharing=!0}static create(){return new WebinarSession}getParticipantById(participantId){if(this.localParticipant&&this.localParticipant.id===participantId)return this.localParticipant;const speakerParticipant=this.speakerParticipants.find(part=>part.id===participantId);if(speakerParticipant)return speakerParticipant;const attendeeParticipant=this.attendeeParticipants.find(part=>part.id===participantId);return attendeeParticipant||null}addOrUpdateParticipant(participant,action){if(this.localParticipant&&this.localParticipant.id===participant.id)return this.localParticipant.mute=participant.mute,void this.localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateParticipant"));const participants="attendee"===participant.role?this.attendeeParticipants:this.speakerParticipants,participantIndex=participants.findIndex(part=>part.id===participant.id);if(-1!==participantIndex){const existingParticipant=participants[participantIndex];existingParticipant.mute=participant.mute,existingParticipant.rxSubject.next(event_model_1.RBEvent.create("updateParticipant"))}else action&&"updateParticipant"===action||participants.push(participant)}removeParticipant(participantId){const participantIndex=this.speakerParticipants.findIndex(part=>part.id===participantId);-1!==participantIndex&&this.speakerParticipants.splice(participantIndex,1),this.localParticipant&&this.localParticipant.id===participantId&&(this.localParticipant=null)}}exports.WebinarSession=WebinarSession;class WebinarParticipant{static create(){return new WebinarParticipant}getData(){return JSON.stringify({email:this.email,userId:this.userId,lastName:this.lastName,firstName:this.firstName,company:this.company,jobTitle:this.jobTitle})}}exports.WebinarParticipant=WebinarParticipant;class WebinarCSVStatus{constructor(){this.okCount=0,this.errorCount=0,this.errorReport=[]}static create(){return new WebinarCSVStatus}}exports.WebinarCSVStatus=WebinarCSVStatus;class Webinar{constructor(){this.id=null,this.name="",this.subject="",this.webinarStartDate=null,this.webinarEndDate=null,this.webinarDuration=null,this.waitingRoomStartDate=null,this.timeZone=null,this.roomId=null,this.roomModeratorsChatId=null,this.room=null,this.practiceRoom=null,this.organizers=[],this.speakers=[],this.participants=[],this.profileId=null,this.pendingParticipantNumber=0,this.acceptedParticipantNumber=0,this.rejectedParticipantNumber=0,this.color="",this.creatorId=null,this.creatorCompanyId=null,this.isCreator=!1,this.isOrganizer=!1,this.isSpeaker=!1,this.isAttendee=!0,this.isGuestAttendee=!0,this.password=null,this.approvalRegistrationMethod="automatic",this.registrationUuid=null,this.published=!1,this.moderatorsNotified=!1,this.status="upcoming",this.webinarUrl=null,this.rxSubject=new rxjs_1.Subject,this.rxAskStagingSubject=new rxjs_1.Subject,this.rxParticipantsSubject=new rxjs_1.Subject,this.rxInfoSubject=new rxjs_1.Subject,this.isWebinarSync=!0,this.session=null,this.waitingRoomMultimediaURLs=[],this.stageBackground="hop",this.reminderDates=[],this.subtitlesEnable=!1,this.blur=!1,this.bgReplaceUrl=null,this.chatOption="participant",this.chatOptionExpired=!1,this.chatOptionTimer=null,this.isRecorded=!1,this.hideRecordInfo=!1,this.action=null}static create(){return new Webinar}static createFromData(webinarData){const webinar=new Webinar;return Webinar.updateFromData(webinar,webinarData),webinar}static updateFromData(webinar,webinarData){if(webinarData.name&&(webinar.name=webinarData.name),(webinarData.subject||""===webinarData.subject)&&(webinar.subject=webinarData.subject),webinarData.organizers&&(webinar.organizers=webinarData.organizers),webinarData.speakers&&(webinar.speakers=webinarData.speakers),webinarData.creatorId&&(webinar.creatorId=webinarData.creatorId),webinarData.creatorCompanyId&&(webinar.creatorCompanyId=webinarData.creatorCompanyId),webinarData.password&&(webinar.password=webinarData.password),webinarData.approvalRegistrationMethod&&(webinar.approvalRegistrationMethod=webinarData.approvalRegistrationMethod),webinarData.registrationUuid&&(webinar.registrationUuid=webinarData.registrationUuid),webinarData.waitingRoomMultimediaURL&&(webinar.waitingRoomMultimediaURLs=webinarData.waitingRoomMultimediaURL),webinarData.stageBackground&&(webinar.stageBackground=webinarData.stageBackground),webinarData.timeZone&&(webinar.timeZone=webinarData.timeZone),webinarData.id&&(webinar.id=webinarData.id),webinarData.webinarStartDate&&(webinar.webinarStartDate=webinarData.webinarStartDate),webinarData.webinarEndDate&&(webinar.webinarEndDate=webinarData.webinarEndDate),webinarData.waitingRoomStartDate&&(webinar.waitingRoomStartDate=webinarData.waitingRoomStartDate),webinarData.roomId&&(webinar.roomId=webinarData.roomId),webinarData.roomModeratorsChatId&&(webinar.roomModeratorsChatId=webinarData.roomModeratorsChatId),webinarData.participants&&(webinar.participants=webinarData.participants),webinarData.emailNotification&&(webinar.published=webinarData.emailNotification),webinarData.moderatorsSelectedAnNotified&&(webinar.moderatorsNotified=webinarData.moderatorsSelectedAnNotified),webinarData.reminderDates&&(webinar.reminderDates=webinarData.reminderDates),webinarData.profileId&&(webinar.profileId=webinarData.profileId),webinarData.chatOption&&(webinar.chatOption=webinarData.chatOption),webinarData.recording&&(webinar.isRecorded=webinarData.recording),webinarData.isActive&&(webinar.status="inProgress"),void 0!==webinarData.state)switch(webinarData.state){case"webinar":webinar.status="inProgress";break;case"waitingRoom":webinar.status="waitingRoom";break;case"practiceWaitingRoom":webinar.status="practiceWaitingRoom";break;case"terminated":webinar.status="terminated";break;default:webinar.status="upcoming"}return webinar.organizers.forEach(organizer=>{organizer.role="organizer"}),webinar.speakers.forEach(speaker=>{speaker.role="speaker"}),webinarData.guestSpeakers&&webinarData.guestSpeakers.forEach(guestSpeaker=>{webinar.speakers.push({status:"invited",email:guestSpeaker.email,role:"speaker"})}),webinar.pendingParticipantNumber=0,webinar.acceptedParticipantNumber=0,webinar.rejectedParticipantNumber=0,webinar.participants.forEach(participant=>{switch(participant.state){case"pending":webinar.pendingParticipantNumber++;break;case"approved":webinar.acceptedParticipantNumber++;break;case"rejected":webinar.rejectedParticipantNumber++}}),webinar.name.length&&(webinar.color=Webinar.computeWebinarColor(webinar.name)),webinar.webinarUrl=`${config.webservices.protocol}://webinar.${config.webservices.server.replace(".red",".com")}/${webinar.registrationUuid}`,-1!==window.location.origin.indexOf("localhost")&&(webinar.webinarUrl="localhost:8000/#/webinar/"+webinar.registrationUuid),-1!==window.location.origin.indexOf("demo")&&(webinar.webinarUrl="https://web-demo.openrainbow.org/#/webinar/"+webinar.registrationUuid),config.enableAioUrlMode&&(webinar.webinarUrl=`${config.webservices.protocol}://${config.webservices.server.replace(".red",".com")}/#/webinar/${webinar.registrationUuid}`),webinar}static computeWebinarColor(name){const upperCaseWebinarName=name.toUpperCase();let sum=0;for(let i=0;i<upperCaseWebinarName.length;i++)sum+=upperCaseWebinarName.charCodeAt(i);return["#d3a575","#eb8d8d","#d47ab0","#b38deb","#9aa3ed","#76a6e5","#92d0de","#a7d6bc","#99c86b","#b4d43d","#dcd33b","#eec838"][sum%12]}subscribe(handler){return this.rxSubject.subscribe(handler)}getData(){const data={isOrganizer:!0,passwordNeeded:!1,recording:this.isRecorded};return this.name&&void 0!==this.name&&(data.name=this.name),null!==this.subject&&void 0!==this.subject&&(data.subject=this.subject),this.webinarStartDate&&void 0!==this.webinarStartDate&&(data.webinarStartDate=this.webinarStartDate),this.webinarEndDate&&void 0!==this.webinarEndDate&&(data.webinarEndDate=this.webinarEndDate),this.waitingRoomStartDate&&void 0!==this.waitingRoomStartDate&&(data.waitingRoomStartDate=this.waitingRoomStartDate),this.timeZone&&void 0!==this.timeZone&&(data.timeZone=this.timeZone),this.approvalRegistrationMethod&&void 0!==this.approvalRegistrationMethod&&(data.approvalRegistrationMethod=this.approvalRegistrationMethod),this.waitingRoomMultimediaURLs&&void 0!==this.waitingRoomMultimediaURLs&&(data.waitingRoomMultimediaURL=this.waitingRoomMultimediaURLs),this.stageBackground&&void 0!==this.stageBackground&&(data.stageBackground=this.stageBackground),this.reminderDates&&this.reminderDates.length>0&&(data.reminderDates=this.reminderDates),this.profileId&&void 0!==this.profileId&&(data.profileId=this.profileId),this.chatOption&&void 0!==this.chatOption&&(data.chatOption=this.chatOption),JSON.stringify(data)}updateRaiseHandParticipants(){this.session&&(this.session.raiseHandAttendeeParticipants=this.session.attendeeParticipants.filter(participant=>participant.raiseHand))}getTagInfo(){switch(this.status){case"waitingRoom":return this.isAttendee?{label:"webinarWaitingRoom",class:"waitingRoom"}:this.session?{label:"webinarPractice",class:"practice"}:null;case"practiceWaitingRoom":return this.isAttendee?{label:"webinarWaitingRoom",class:"waitingRoom"}:{label:"webinarPractice",class:"practice"};case"upcoming":return this.session?{label:this.isAttendee?"webinarWaitingRoom":"webinarPractice",class:this.isAttendee?"waitingRoom":"practice"}:null;case"inProgress":return{label:"webinarLive",class:"live"};case"terminated":return this.isRecorded?{label:"webinarRecorded",class:"recorded"}:{label:"webinarTerminated",class:"terminated"};default:return null}}}exports.Webinar=Webinar},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.defaultHostConfig=exports.HostConfig=exports.FontTypeSet=exports.FontTypeDefinition=exports.ContainerStyleSet=exports.ContainerStyleDefinition=exports.ColorSetDefinition=exports.ActionsConfig=exports.ShowCardActionConfig=exports.FactSetConfig=exports.FactTitleDefinition=exports.FactTextDefinition=exports.InputConfig=exports.InputLabelConfig=exports.RequiredInputLabelTextDefinition=exports.TextBlockConfig=exports.TextStyleSet=exports.TextStyleDefinition=exports.BaseTextDefinition=exports.TableConfig=exports.MediaConfig=exports.ImageSetConfig=exports.AdaptiveCardConfig=exports.TextColorDefinition=exports.ColorDefinition=void 0;var Enums=__webpack_require__(55),Utils=__webpack_require__(69),Shared=__webpack_require__(62),host_capabilities_1=__webpack_require__(145);function parseHostConfigEnum(targetEnum,value,defaultValue){if("string"==typeof value){var parsedValue=Utils.parseEnum(targetEnum,value,defaultValue);return void 0!==parsedValue?parsedValue:defaultValue}return"number"==typeof value?value:defaultValue}var ColorDefinition=function(){function ColorDefinition(defaultColor,subtleColor){this.default="#000000",this.subtle="#666666",defaultColor&&(this.default=defaultColor),subtleColor&&(this.subtle=subtleColor)}return ColorDefinition.prototype.parse=function(obj){obj&&(this.default=obj.default||this.default,this.subtle=obj.subtle||this.subtle)},ColorDefinition}();exports.ColorDefinition=ColorDefinition;var TextColorDefinition=function(_super){function TextColorDefinition(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.highlightColors=new ColorDefinition("#22000000","#11000000"),_this}return __extends(TextColorDefinition,_super),TextColorDefinition.prototype.parse=function(obj){_super.prototype.parse.call(this,obj),obj&&this.highlightColors.parse(obj.highlightColors)},TextColorDefinition}(ColorDefinition);exports.TextColorDefinition=TextColorDefinition;var AdaptiveCardConfig=function(obj){this.allowCustomStyle=!1,obj&&(this.allowCustomStyle=obj.allowCustomStyle||this.allowCustomStyle)};exports.AdaptiveCardConfig=AdaptiveCardConfig;var ImageSetConfig=function(){function ImageSetConfig(obj){this.imageSize=Enums.Size.Medium,this.maxImageHeight=100,obj&&(this.imageSize=null!=obj.imageSize?obj.imageSize:this.imageSize,this.maxImageHeight=Utils.parseNumber(obj.maxImageHeight,100))}return ImageSetConfig.prototype.toJSON=function(){return{imageSize:Enums.Size[this.imageSize],maxImageHeight:this.maxImageHeight}},ImageSetConfig}();exports.ImageSetConfig=ImageSetConfig;var MediaConfig=function(){function MediaConfig(obj){this.allowInlinePlayback=!0,obj&&(this.defaultPoster=obj.defaultPoster,this.allowInlinePlayback=obj.allowInlinePlayback||this.allowInlinePlayback)}return MediaConfig.prototype.toJSON=function(){return{defaultPoster:this.defaultPoster,allowInlinePlayback:this.allowInlinePlayback}},MediaConfig}();exports.MediaConfig=MediaConfig;var TableConfig=function(){function TableConfig(obj){this.cellSpacing=8,obj&&(this.cellSpacing=obj.cellSpacing&&"number"==typeof obj.cellSpacing?obj.cellSpacing:this.cellSpacing)}return TableConfig.prototype.toJSON=function(){return{cellSpacing:this.cellSpacing}},TableConfig}();exports.TableConfig=TableConfig;var BaseTextDefinition=function(){function BaseTextDefinition(obj){this.size=Enums.TextSize.Default,this.color=Enums.TextColor.Default,this.isSubtle=!1,this.weight=Enums.TextWeight.Default,this.parse(obj)}return BaseTextDefinition.prototype.parse=function(obj){obj&&(this.size=parseHostConfigEnum(Enums.TextSize,obj.size,this.size),this.color=parseHostConfigEnum(Enums.TextColor,obj.color,this.color),this.isSubtle=void 0!==obj.isSubtle&&"boolean"==typeof obj.isSubtle?obj.isSubtle:this.isSubtle,this.weight=parseHostConfigEnum(Enums.TextWeight,obj.weight,this.getDefaultWeight()))},BaseTextDefinition.prototype.getDefaultWeight=function(){return Enums.TextWeight.Default},BaseTextDefinition.prototype.toJSON=function(){return{size:Enums.TextSize[this.size],color:Enums.TextColor[this.color],isSubtle:this.isSubtle,weight:Enums.TextWeight[this.weight]}},BaseTextDefinition}();exports.BaseTextDefinition=BaseTextDefinition;var TextStyleDefinition=function(_super){function TextStyleDefinition(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.fontType=Enums.FontType.Default,_this}return __extends(TextStyleDefinition,_super),TextStyleDefinition.prototype.parse=function(obj){_super.prototype.parse.call(this,obj),obj&&(this.fontType=parseHostConfigEnum(Enums.FontType,obj.fontType,this.fontType))},TextStyleDefinition}(BaseTextDefinition);exports.TextStyleDefinition=TextStyleDefinition;var TextStyleSet=function(){function TextStyleSet(obj){this.default=new TextStyleDefinition,this.heading=new TextStyleDefinition({size:"Large",weight:"Bolder"}),this.columnHeader=new TextStyleDefinition({weight:"Bolder"}),obj&&(this.heading.parse(obj.heading),this.columnHeader.parse(obj.columnHeader))}return TextStyleSet.prototype.getStyleByName=function(name){switch(name.toLowerCase()){case"heading":return this.heading;case"columnHeader":return this.columnHeader;default:return this.default}},TextStyleSet}();exports.TextStyleSet=TextStyleSet;var TextBlockConfig=function(obj){obj&&(this.headingLevel=Utils.parseNumber(obj.headingLevel))};exports.TextBlockConfig=TextBlockConfig;var RequiredInputLabelTextDefinition=function(_super){function RequiredInputLabelTextDefinition(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.suffix=" *",_this.suffixColor=Enums.TextColor.Attention,_this}return __extends(RequiredInputLabelTextDefinition,_super),RequiredInputLabelTextDefinition.prototype.parse=function(obj){_super.prototype.parse.call(this,obj),obj&&(this.suffix=obj.suffix||this.suffix,this.suffixColor=parseHostConfigEnum(Enums.TextColor,obj.suffixColor,this.suffixColor))},RequiredInputLabelTextDefinition.prototype.toJSON=function(){var result=_super.prototype.toJSON.call(this);return result.suffix=this.suffix,result.suffixColor=Enums.TextColor[this.suffixColor],result},RequiredInputLabelTextDefinition}(BaseTextDefinition);exports.RequiredInputLabelTextDefinition=RequiredInputLabelTextDefinition;var InputLabelConfig=function(obj){this.inputSpacing=Enums.Spacing.Small,this.requiredInputs=new RequiredInputLabelTextDefinition,this.optionalInputs=new BaseTextDefinition,obj&&(this.inputSpacing=parseHostConfigEnum(Enums.Spacing,obj.inputSpacing,this.inputSpacing),this.requiredInputs=new RequiredInputLabelTextDefinition(obj.requiredInputs),this.optionalInputs=new BaseTextDefinition(obj.optionalInputs))};exports.InputLabelConfig=InputLabelConfig;var InputConfig=function(obj){this.label=new InputLabelConfig,this.errorMessage=new BaseTextDefinition({color:Enums.TextColor.Attention}),obj&&(this.label=new InputLabelConfig(obj.label),this.errorMessage=new BaseTextDefinition(obj.errorMessage))};exports.InputConfig=InputConfig;var FactTextDefinition=function(_super){function FactTextDefinition(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.wrap=!0,_this}return __extends(FactTextDefinition,_super),FactTextDefinition.prototype.parse=function(obj){_super.prototype.parse.call(this,obj),obj&&(this.wrap=null!=obj.wrap?obj.wrap:this.wrap)},FactTextDefinition.prototype.toJSON=function(){var result=_super.prototype.toJSON.call(this);return result.wrap=this.wrap,result},FactTextDefinition}(BaseTextDefinition);exports.FactTextDefinition=FactTextDefinition;var FactTitleDefinition=function(_super){function FactTitleDefinition(obj){var _this=_super.call(this,obj)||this;return _this.maxWidth=150,_this.weight=Enums.TextWeight.Bolder,obj&&(_this.maxWidth=null!=obj.maxWidth?obj.maxWidth:_this.maxWidth,_this.weight=parseHostConfigEnum(Enums.TextWeight,obj.weight,Enums.TextWeight.Bolder)),_this}return __extends(FactTitleDefinition,_super),FactTitleDefinition.prototype.getDefaultWeight=function(){return Enums.TextWeight.Bolder},FactTitleDefinition}(FactTextDefinition);exports.FactTitleDefinition=FactTitleDefinition;var FactSetConfig=function(obj){this.title=new FactTitleDefinition,this.value=new FactTextDefinition,this.spacing=10,obj&&(this.title=new FactTitleDefinition(obj.title),this.value=new FactTextDefinition(obj.value),this.spacing=obj.spacing&&null!=obj.spacing?obj.spacing&&obj.spacing:this.spacing)};exports.FactSetConfig=FactSetConfig;var ShowCardActionConfig=function(){function ShowCardActionConfig(obj){this.actionMode=Enums.ShowCardActionMode.Inline,this.inlineTopMargin=16,this.style=Enums.ContainerStyle.Emphasis,obj&&(this.actionMode=parseHostConfigEnum(Enums.ShowCardActionMode,obj.actionMode,Enums.ShowCardActionMode.Inline),this.inlineTopMargin=null!=obj.inlineTopMargin?obj.inlineTopMargin:this.inlineTopMargin,this.style=obj.style&&"string"==typeof obj.style?obj.style:Enums.ContainerStyle.Emphasis)}return ShowCardActionConfig.prototype.toJSON=function(){return{actionMode:Enums.ShowCardActionMode[this.actionMode],inlineTopMargin:this.inlineTopMargin,style:this.style}},ShowCardActionConfig}();exports.ShowCardActionConfig=ShowCardActionConfig;var ActionsConfig=function(){function ActionsConfig(obj){if(this.maxActions=5,this.spacing=Enums.Spacing.Default,this.buttonSpacing=20,this.showCard=new ShowCardActionConfig,this.preExpandSingleShowCardAction=!1,this.actionsOrientation=Enums.Orientation.Horizontal,this.actionAlignment=Enums.ActionAlignment.Left,this.iconPlacement=Enums.ActionIconPlacement.LeftOfTitle,this.allowTitleToWrap=!1,this.iconSize=16,obj){this.maxActions=null!=obj.maxActions?obj.maxActions:this.maxActions,this.spacing=parseHostConfigEnum(Enums.Spacing,obj.spacing&&obj.spacing,Enums.Spacing.Default),this.buttonSpacing=null!=obj.buttonSpacing?obj.buttonSpacing:this.buttonSpacing,this.showCard=new ShowCardActionConfig(obj.showCard),this.preExpandSingleShowCardAction=Utils.parseBool(obj.preExpandSingleShowCardAction,!1),this.actionsOrientation=parseHostConfigEnum(Enums.Orientation,obj.actionsOrientation,Enums.Orientation.Horizontal),this.actionAlignment=parseHostConfigEnum(Enums.ActionAlignment,obj.actionAlignment,Enums.ActionAlignment.Left),this.iconPlacement=parseHostConfigEnum(Enums.ActionIconPlacement,obj.iconPlacement,Enums.ActionIconPlacement.LeftOfTitle),this.allowTitleToWrap=null!=obj.allowTitleToWrap?obj.allowTitleToWrap:this.allowTitleToWrap;try{var sizeAndUnit=Shared.SizeAndUnit.parse(obj.iconSize);sizeAndUnit.unit==Enums.SizeUnit.Pixel&&(this.iconSize=sizeAndUnit.physicalSize)}catch(e){}}}return ActionsConfig.prototype.toJSON=function(){return{maxActions:this.maxActions,spacing:Enums.Spacing[this.spacing],buttonSpacing:this.buttonSpacing,showCard:this.showCard,preExpandSingleShowCardAction:this.preExpandSingleShowCardAction,actionsOrientation:Enums.Orientation[this.actionsOrientation],actionAlignment:Enums.ActionAlignment[this.actionAlignment]}},ActionsConfig}();exports.ActionsConfig=ActionsConfig;var ColorSetDefinition=function(){function ColorSetDefinition(obj){this.default=new TextColorDefinition,this.dark=new TextColorDefinition,this.light=new TextColorDefinition,this.accent=new TextColorDefinition,this.good=new TextColorDefinition,this.warning=new TextColorDefinition,this.attention=new TextColorDefinition,this.parse(obj)}return ColorSetDefinition.prototype.parseSingleColor=function(obj,propertyName){obj&&this[propertyName].parse(obj[propertyName])},ColorSetDefinition.prototype.parse=function(obj){obj&&(this.parseSingleColor(obj,"default"),this.parseSingleColor(obj,"dark"),this.parseSingleColor(obj,"light"),this.parseSingleColor(obj,"accent"),this.parseSingleColor(obj,"good"),this.parseSingleColor(obj,"warning"),this.parseSingleColor(obj,"attention"))},ColorSetDefinition}();exports.ColorSetDefinition=ColorSetDefinition;var ContainerStyleDefinition=function(){function ContainerStyleDefinition(obj){this.foregroundColors=new ColorSetDefinition({default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#E69500",subtle:"#DDE69500"},attention:{default:"#CC3300",subtle:"#DDCC3300"}}),this.parse(obj)}return ContainerStyleDefinition.prototype.parse=function(obj){obj&&(this.backgroundColor=obj.backgroundColor,this.foregroundColors.parse(obj.foregroundColors),this.highlightBackgroundColor=obj.highlightBackgroundColor,this.highlightForegroundColor=obj.highlightForegroundColor,this.borderColor=obj.borderColor)},Object.defineProperty(ContainerStyleDefinition.prototype,"isBuiltIn",{get:function(){return!1},enumerable:!1,configurable:!0}),ContainerStyleDefinition}();exports.ContainerStyleDefinition=ContainerStyleDefinition;var BuiltInContainerStyleDefinition=function(_super){function BuiltInContainerStyleDefinition(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(BuiltInContainerStyleDefinition,_super),Object.defineProperty(BuiltInContainerStyleDefinition.prototype,"isBuiltIn",{get:function(){return!0},enumerable:!1,configurable:!0}),BuiltInContainerStyleDefinition}(ContainerStyleDefinition),ContainerStyleSet=function(){function ContainerStyleSet(obj){if(this._allStyles={},this._allStyles[Enums.ContainerStyle.Default]=new BuiltInContainerStyleDefinition,this._allStyles[Enums.ContainerStyle.Emphasis]=new BuiltInContainerStyleDefinition,this._allStyles[Enums.ContainerStyle.Accent]=new BuiltInContainerStyleDefinition,this._allStyles[Enums.ContainerStyle.Good]=new BuiltInContainerStyleDefinition,this._allStyles[Enums.ContainerStyle.Attention]=new BuiltInContainerStyleDefinition,this._allStyles[Enums.ContainerStyle.Warning]=new BuiltInContainerStyleDefinition,obj){this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]),this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]),this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]),this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]),this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]),this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);var customStyleArray=obj.customStyles;if(customStyleArray&&Array.isArray(customStyleArray))for(var _i=0,customStyleArray_1=customStyleArray;_i<customStyleArray_1.length;_i++){var customStyle=customStyleArray_1[_i];if(customStyle){var styleName=customStyle.name;styleName&&"string"==typeof styleName&&(this._allStyles.hasOwnProperty(styleName)?this._allStyles[styleName].parse(customStyle.style):this._allStyles[styleName]=new ContainerStyleDefinition(customStyle.style))}}}}return ContainerStyleSet.prototype.toJSON=function(){var _this=this,customStyleArray=[];Object.keys(this._allStyles).forEach((function(key){_this._allStyles[key].isBuiltIn||customStyleArray.push({name:key,style:_this._allStyles[key]})}));var result={default:this.default,emphasis:this.emphasis};return customStyleArray.length>0&&(result.customStyles=customStyleArray),result},ContainerStyleSet.prototype.getStyleByName=function(name,defaultValue){return name&&this._allStyles.hasOwnProperty(name)?this._allStyles[name]:defaultValue||this._allStyles[Enums.ContainerStyle.Default]},Object.defineProperty(ContainerStyleSet.prototype,"default",{get:function(){return this._allStyles[Enums.ContainerStyle.Default]},enumerable:!1,configurable:!0}),Object.defineProperty(ContainerStyleSet.prototype,"emphasis",{get:function(){return this._allStyles[Enums.ContainerStyle.Emphasis]},enumerable:!1,configurable:!0}),ContainerStyleSet}();exports.ContainerStyleSet=ContainerStyleSet;var FontTypeDefinition=function(){function FontTypeDefinition(fontFamily){this.fontFamily="Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif",this.fontSizes={small:12,default:14,medium:17,large:21,extraLarge:26},this.fontWeights={lighter:200,default:400,bolder:600},fontFamily&&(this.fontFamily=fontFamily)}return FontTypeDefinition.prototype.parse=function(obj){this.fontFamily=obj.fontFamily||this.fontFamily,this.fontSizes={small:obj.fontSizes&&obj.fontSizes.small||this.fontSizes.small,default:obj.fontSizes&&obj.fontSizes.default||this.fontSizes.default,medium:obj.fontSizes&&obj.fontSizes.medium||this.fontSizes.medium,large:obj.fontSizes&&obj.fontSizes.large||this.fontSizes.large,extraLarge:obj.fontSizes&&obj.fontSizes.extraLarge||this.fontSizes.extraLarge},this.fontWeights={lighter:obj.fontWeights&&obj.fontWeights.lighter||this.fontWeights.lighter,default:obj.fontWeights&&obj.fontWeights.default||this.fontWeights.default,bolder:obj.fontWeights&&obj.fontWeights.bolder||this.fontWeights.bolder}},FontTypeDefinition.monospace=new FontTypeDefinition("'Courier New', Courier, monospace"),FontTypeDefinition}();exports.FontTypeDefinition=FontTypeDefinition;var FontTypeSet=function(){function FontTypeSet(obj){this.default=new FontTypeDefinition,this.monospace=new FontTypeDefinition("'Courier New', Courier, monospace"),obj&&(this.default.parse(obj.default),this.monospace.parse(obj.monospace))}return FontTypeSet.prototype.getStyleDefinition=function(style){switch(style){case Enums.FontType.Monospace:return this.monospace;case Enums.FontType.Default:default:return this.default}},FontTypeSet}();exports.FontTypeSet=FontTypeSet;var HostConfig=function(){function HostConfig(obj){this.hostCapabilities=new host_capabilities_1.HostCapabilities,this.choiceSetInputValueSeparator=",",this.supportsInteractivity=!0,this.spacing={small:3,default:8,medium:20,large:30,extraLarge:40,padding:15},this.separator={lineThickness:1,lineColor:"#EEEEEE"},this.imageSizes={small:40,medium:80,large:160},this.containerStyles=new ContainerStyleSet,this.inputs=new InputConfig,this.actions=new ActionsConfig,this.adaptiveCard=new AdaptiveCardConfig,this.imageSet=new ImageSetConfig,this.media=new MediaConfig,this.factSet=new FactSetConfig,this.table=new TableConfig,this.textStyles=new TextStyleSet,this.textBlock=new TextBlockConfig,this.alwaysAllowBleed=!1,obj&&(("string"==typeof obj||obj instanceof String)&&(obj=JSON.parse(obj)),this.choiceSetInputValueSeparator=obj&&"string"==typeof obj.choiceSetInputValueSeparator?obj.choiceSetInputValueSeparator:this.choiceSetInputValueSeparator,this.supportsInteractivity=obj&&"boolean"==typeof obj.supportsInteractivity?obj.supportsInteractivity:this.supportsInteractivity,this._legacyFontType=new FontTypeDefinition,this._legacyFontType.parse(obj),obj.fontTypes&&(this.fontTypes=new FontTypeSet(obj.fontTypes)),obj.lineHeights&&(this.lineHeights={small:obj.lineHeights.small,default:obj.lineHeights.default,medium:obj.lineHeights.medium,large:obj.lineHeights.large,extraLarge:obj.lineHeights.extraLarge}),this.imageSizes={small:obj.imageSizes&&obj.imageSizes.small||this.imageSizes.small,medium:obj.imageSizes&&obj.imageSizes.medium||this.imageSizes.medium,large:obj.imageSizes&&obj.imageSizes.large||this.imageSizes.large},this.containerStyles=new ContainerStyleSet(obj.containerStyles),this.spacing={small:obj.spacing&&obj.spacing.small||this.spacing.small,default:obj.spacing&&obj.spacing.default||this.spacing.default,medium:obj.spacing&&obj.spacing.medium||this.spacing.medium,large:obj.spacing&&obj.spacing.large||this.spacing.large,extraLarge:obj.spacing&&obj.spacing.extraLarge||this.spacing.extraLarge,padding:obj.spacing&&obj.spacing.padding||this.spacing.padding},this.separator={lineThickness:obj.separator&&obj.separator.lineThickness||this.separator.lineThickness,lineColor:obj.separator&&obj.separator.lineColor||this.separator.lineColor},this.inputs=new InputConfig(obj.inputs||this.inputs),this.actions=new ActionsConfig(obj.actions||this.actions),this.adaptiveCard=new AdaptiveCardConfig(obj.adaptiveCard||this.adaptiveCard),this.imageSet=new ImageSetConfig(obj.imageSet),this.factSet=new FactSetConfig(obj.factSet),this.textStyles=new TextStyleSet(obj.textStyles),this.textBlock=new TextBlockConfig(obj.textBlock))}return HostConfig.prototype.getFontTypeDefinition=function(style){return this.fontTypes?this.fontTypes.getStyleDefinition(style):style==Enums.FontType.Monospace?FontTypeDefinition.monospace:this._legacyFontType},HostConfig.prototype.getEffectiveSpacing=function(spacing){switch(spacing){case Enums.Spacing.Small:return this.spacing.small;case Enums.Spacing.Default:return this.spacing.default;case Enums.Spacing.Medium:return this.spacing.medium;case Enums.Spacing.Large:return this.spacing.large;case Enums.Spacing.ExtraLarge:return this.spacing.extraLarge;case Enums.Spacing.Padding:return this.spacing.padding;default:return 0}},HostConfig.prototype.paddingDefinitionToSpacingDefinition=function(paddingDefinition){return new Shared.SpacingDefinition(this.getEffectiveSpacing(paddingDefinition.top),this.getEffectiveSpacing(paddingDefinition.right),this.getEffectiveSpacing(paddingDefinition.bottom),this.getEffectiveSpacing(paddingDefinition.left))},HostConfig.prototype.makeCssClassNames=function(){for(var classNames=[],_i=0;_i<arguments.length;_i++)classNames[_i]=arguments[_i];for(var result=[],_a=0,classNames_1=classNames;_a<classNames_1.length;_a++){var className=classNames_1[_a];result.push((this.cssClassNamePrefix?this.cssClassNamePrefix+"-":"")+className)}return result},HostConfig.prototype.makeCssClassName=function(){for(var classNames=[],_i=0;_i<arguments.length;_i++)classNames[_i]=arguments[_i];var result=this.makeCssClassNames.apply(this,classNames).join(" ");return result||""},Object.defineProperty(HostConfig.prototype,"fontFamily",{get:function(){return this._legacyFontType.fontFamily},set:function(value){this._legacyFontType.fontFamily=value},enumerable:!1,configurable:!0}),Object.defineProperty(HostConfig.prototype,"fontSizes",{get:function(){return this._legacyFontType.fontSizes},enumerable:!1,configurable:!0}),Object.defineProperty(HostConfig.prototype,"fontWeights",{get:function(){return this._legacyFontType.fontWeights},enumerable:!1,configurable:!0}),HostConfig}();exports.HostConfig=HostConfig,exports.defaultHostConfig=new HostConfig({supportsInteractivity:!0,spacing:{small:10,default:20,medium:30,large:40,extraLarge:50,padding:20},separator:{lineThickness:1,lineColor:"#EEEEEE"},fontTypes:{default:{fontFamily:"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",fontSizes:{small:12,default:14,medium:17,large:21,extraLarge:26},fontWeights:{lighter:200,default:400,bolder:600}},monospace:{fontFamily:"'Courier New', Courier, monospace",fontSizes:{small:12,default:14,medium:17,large:21,extraLarge:26},fontWeights:{lighter:200,default:400,bolder:600}}},imageSizes:{small:40,medium:80,large:160},containerStyles:{default:{backgroundColor:"#FFFFFF",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}},emphasis:{backgroundColor:"#08000000",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}},accent:{backgroundColor:"#C7DEF9",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}},good:{backgroundColor:"#CCFFCC",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}},attention:{backgroundColor:"#FFC5B2",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}},warning:{backgroundColor:"#FFE2B2",foregroundColors:{default:{default:"#333333",subtle:"#EE333333"},dark:{default:"#000000",subtle:"#66000000"},light:{default:"#FFFFFF",subtle:"#33000000"},accent:{default:"#2E89FC",subtle:"#882E89FC"},attention:{default:"#cc3300",subtle:"#DDcc3300"},good:{default:"#028A02",subtle:"#DD027502"},warning:{default:"#e69500",subtle:"#DDe69500"}}}},inputs:{label:{requiredInputs:{color:Enums.TextColor.Accent,size:Enums.TextSize.ExtraLarge,weight:Enums.TextWeight.Bolder,isSubtle:!0,suffix:" (required)",suffixColor:Enums.TextColor.Good},optionalInputs:{color:Enums.TextColor.Warning,size:Enums.TextSize.Medium,weight:Enums.TextWeight.Lighter,isSubtle:!1}},errorMessage:{color:Enums.TextColor.Accent,size:Enums.TextSize.Small,weight:Enums.TextWeight.Bolder}},actions:{maxActions:5,spacing:Enums.Spacing.Default,buttonSpacing:10,showCard:{actionMode:Enums.ShowCardActionMode.Inline,inlineTopMargin:16},actionsOrientation:Enums.Orientation.Horizontal,actionAlignment:Enums.ActionAlignment.Left},adaptiveCard:{allowCustomStyle:!1},imageSet:{imageSize:Enums.Size.Medium,maxImageHeight:100},factSet:{title:{color:Enums.TextColor.Default,size:Enums.TextSize.Default,isSubtle:!1,weight:Enums.TextWeight.Bolder,wrap:!0,maxWidth:150},value:{color:Enums.TextColor.Default,size:Enums.TextSize.Default,isSubtle:!1,weight:Enums.TextWeight.Default,wrap:!0},spacing:10}})},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class UtilitiesService{static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.utilitiesService||(win.rainbow.utilitiesService=new UtilitiesService),win.rainbow.utilitiesService}constructor(){this.rtlDirCheck=new RegExp("^[^֑-߿‏‫‮יִ-﷽ﹰ-ﻼ]*?[֑-߿‏‫‮יִ-﷽ﹰ-ﻼ]"),this.usableRandomChars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"}emojiShortnameToImage(text,link=!0){let raw=this.unescapeQuotes(text),html="";if(link){const LINKY_URL_REGEXP=/((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,{}<>]/,MEET_URL_FORMAT=config.webappMeetUrl,MAILTO_REGEXP=/^mailto:/;let match=null;for(;match=raw.match(LINKY_URL_REGEXP);){let url=match[0];match[2]===match[3]&&(url="mailto:"+url);const nolinkText=emojione.shortnameToImage(raw.substr(0,match.index));MEET_URL_FORMAT&&url.match(MEET_URL_FORMAT)?html+=`${nolinkText}<span class="publiclink" >${match[0].replace(MAILTO_REGEXP,"")}</span>`:html+=`${nolinkText}<a target="_blank" href="${url}">${match[0].replace(MAILTO_REGEXP,"")}</a>`,raw=raw.substring(match.index+match[0].length)}}return html+=emojione.unicodeToImage(raw),html}unescapeQuotes(string){const unescaped={"&quot;":'"',"&#34;":'"',"&#x22;":'"',"&apos;":"'","&#39;":"'","&#x27;":"'"};return string.replace(/&(?:apos|#39|#x27|quot|#34|#x22);/gi,match=>unescaped[match])}async asyncForEach(array,callback){for(let i=0;i<array.length;i++)await callback(array[i],i,array)}isRTL(str){return this.rtlDirCheck.test(str.charAt(0))}randomString(length=10){let rnd,outString="";for(;length>0;)rnd=Math.floor(Math.random()*this.usableRandomChars.length),outString+=this.usableRandomChars.charAt(rnd),length--;return outString}extractBrowserVersion(uastring,expr,pos){const match=uastring.match(expr);return match&&match.length>=pos&&parseInt(match[pos],10)}addUrlParameter(url,urlParameter){return url.includes("?")?url+="&":url+="?",url+=urlParameter}isNumeric(str){return"string"==typeof str&&!isNaN(parseFloat(str))}asyncTimeout(ms){return new Promise(resolve=>setTimeout(resolve,ms))}}exports.UtilitiesService=UtilitiesService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),i18n_service_1=__webpack_require__(38),errorHelper_service_1=__webpack_require__(12);class CountryService{constructor(){this.portalURL=null,this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.datacenters=[{name:"France","alpha-3":"FRA","alpha-2":"FR",region:"Europe"},{name:"Germany","alpha-3":"DEU","alpha-2":"DE",region:"Europe"},{name:"Canada","alpha-3":"CAN","alpha-2":"CA",region:"America"},{name:"Singapore","alpha-3":"SGP","alpha-2":"SG",region:"Asia-Pacific"}],this.countries=[{name:"Australia","alpha-3":"AUS","country-code":"036","alpha-2":"AU"},{name:"Austria","alpha-3":"AUT","country-code":"040","alpha-2":"AT"},{name:"Belgium","alpha-3":"BEL","country-code":"056","alpha-2":"BE"},{name:"Brazil","alpha-3":"BRA","country-code":"076","alpha-2":"BR"},{name:"Canada","alpha-3":"CAN","country-code":"124","alpha-2":"CA"},{name:"China","alpha-3":"CHN","country-code":"156","alpha-2":"CN"},{name:"Czech Republic","alpha-3":"CZE","country-code":"203","alpha-2":"CZ"},{name:"Denmark","alpha-3":"DNK","country-code":"208","alpha-2":"DK"},{name:"Finland","alpha-3":"FIN","country-code":"246","alpha-2":"FI"},{name:"France","alpha-3":"FRA","country-code":"250",default:!0,"alpha-2":"FR"},{name:"Germany","alpha-3":"DEU","country-code":"276","alpha-2":"DE"},{name:"Hong Kong","alpha-3":"HKG","country-code":"344","alpha-2":"HK"},{name:"Ireland","alpha-3":"IRL","country-code":"372","alpha-2":"IE"},{name:"Israel","alpha-3":"ISR","country-code":"376","alpha-2":"IL"},{name:"Italy","alpha-3":"ITA","country-code":"380","alpha-2":"IT"},{name:"Mexico","alpha-3":"MEX","country-code":"484","alpha-2":"MX"},{name:"Netherlands","alpha-3":"NLD","country-code":"528","alpha-2":"NL"},{name:"Norway","alpha-3":"NOR","country-code":"578","alpha-2":"NO"},{name:"Poland","alpha-3":"POL","country-code":"616","alpha-2":"PL"},{name:"Portugal","alpha-3":"PRT","country-code":"620","alpha-2":"PT"},{name:"Russia","alpha-3":"RUS","country-code":"643","alpha-2":"RU"},{name:"South Africa","alpha-3":"ZAF","country-code":"710","alpha-2":"ZA"},{name:"South Korea","alpha-3":"KOR","country-code":"410","alpha-2":"KR"},{name:"Spain","alpha-3":"ESP","country-code":"724","alpha-2":"ES"},{name:"Sweden","alpha-3":"SWE","country-code":"752","alpha-2":"SE"},{name:"Switzerland","alpha-3":"CHE","country-code":"756","alpha-2":"CH"},{name:"Taiwan","alpha-3":"TWN","country-code":"158","alpha-2":"TW"},{name:"Turkey","alpha-3":"TUR","country-code":"792","alpha-2":"TR"},{name:"United Kingdom","alpha-3":"GBR","country-code":"826","alpha-2":"GB"},{name:"United States of America","alpha-3":"USA","country-code":"840","alpha-2":"US"},{name:"Afghanistan","alpha-3":"AFG","country-code":"004","alpha-2":"AF"},{name:"Albania","alpha-3":"ALB","country-code":"008","alpha-2":"AL"},{name:"Algeria","alpha-3":"DZA","country-code":"012","alpha-2":"DZ"},{name:"Andorra","alpha-3":"AND","country-code":"020","alpha-2":"AD"},{name:"Angola","alpha-3":"AGO","country-code":"024","alpha-2":"AO"},{name:"Anguilla","alpha-3":"AIA","country-code":"660","alpha-2":"AI"},{name:"Antigua and Barbuda","alpha-3":"ATG","country-code":"028","alpha-2":"AG"},{name:"Argentina","alpha-3":"ARG","country-code":"032","alpha-2":"AR"},{name:"Armenia","alpha-3":"ARM","country-code":"051","alpha-2":"AM"},{name:"Aruba","alpha-3":"ABW","country-code":"533","alpha-2":"AW"},{name:"Azerbaijan","alpha-3":"AZE","country-code":"031","alpha-2":"AZ"},{name:"Bahamas","alpha-3":"BHS","country-code":"044","alpha-2":"BS"},{name:"Bahrain","alpha-3":"BHR","country-code":"048","alpha-2":"BH"},{name:"Bangladesh","alpha-3":"BGD","country-code":"050","alpha-2":"BD"},{name:"Barbados","alpha-3":"BRB","country-code":"052","alpha-2":"BB"},{name:"Belarus","alpha-3":"BLR","country-code":"112","alpha-2":"BY"},{name:"Belize","alpha-3":"BLZ","country-code":"084","alpha-2":"BZ"},{name:"Benin","alpha-3":"BEN","country-code":"204","alpha-2":"BJ"},{name:"Bermuda","alpha-3":"BMU","country-code":"060","alpha-2":"BM"},{name:"Bhutan","alpha-3":"BTN","country-code":"064","alpha-2":"BT"},{name:"Bolivia","alpha-3":"BOL","country-code":"068","alpha-2":"BO"},{name:"Bosnia and Herzegovina","alpha-3":"BIH","country-code":"070","alpha-2":"BA"},{name:"Botswana","alpha-3":"BWA","country-code":"072","alpha-2":"BW"},{name:"British Virgin Islands","alpha-3":"VGB","country-code":"092","alpha-2":"VG"},{name:"Brunei Darussalam","alpha-3":"BRN","country-code":"096","alpha-2":"BN"},{name:"Bulgaria","alpha-3":"BGR","country-code":"100","alpha-2":"BG"},{name:"Burkina Faso","alpha-3":"BFA","country-code":"854","alpha-2":"BF"},{name:"Burundi","alpha-3":"BDI","country-code":"108","alpha-2":"BI"},{name:"Cambodia","alpha-3":"KHM","country-code":"116","alpha-2":"KH"},{name:"Cameroon","alpha-3":"CMR","country-code":"120","alpha-2":"CM"},{name:"Cape Verde","alpha-3":"CPV","country-code":"132","alpha-2":"CV"},{name:"Cayman Islands","alpha-3":"CYM","country-code":"136","alpha-2":"KY"},{name:"Central African Republic","alpha-3":"CAF","country-code":"140","alpha-2":"CF"},{name:"Chad","alpha-3":"TCD","country-code":"148","alpha-2":"TD"},{name:"Chile","alpha-3":"CHL","country-code":"152","alpha-2":"CL"},{name:"Colombia","alpha-3":"COL","country-code":"170","alpha-2":"CO"},{name:"Comoros","alpha-3":"COM","country-code":"174","alpha-2":"KM"},{name:"Congo","alpha-3":"COG","country-code":"178","alpha-2":"CG"},{name:"Congo, Democratic Republic of","alpha-3":"COD","country-code":"180","alpha-2":"CD"},{name:"Costa Rica","alpha-3":"CRI","country-code":"188","alpha-2":"CR"},{name:"Ivory Coast","alpha-3":"CIV","country-code":"384","alpha-2":"CI"},{name:"Croatia","alpha-3":"HRV","country-code":"191","alpha-2":"HR"},{name:"Cyprus","alpha-3":"CYP","country-code":"196","alpha-2":"CY"},{name:"Djibouti","alpha-3":"DJI","country-code":"262","alpha-2":"DJ"},{name:"Dominica","alpha-3":"DMA","country-code":"212","alpha-2":"DM"},{name:"Dominican Republic","alpha-3":"DOM","country-code":"214","alpha-2":"DO"},{name:"Ecuador","alpha-3":"ECU","country-code":"218","alpha-2":"EC"},{name:"El Salvador","alpha-3":"SLV","country-code":"222","alpha-2":"SV"},{name:"Egypt","alpha-3":"EGY","country-code":"818","alpha-2":"EG"},{name:"Eritrea","alpha-3":"ERI","country-code":"232","alpha-2":"ER"},{name:"Estonia","alpha-3":"EST","country-code":"233","alpha-2":"EE"},{name:"Ethiopia","alpha-3":"ETH","country-code":"231","alpha-2":"ET"},{name:"Fiji","alpha-3":"FJI","country-code":"242","alpha-2":"FJ"},{name:"French Guiana","alpha-3":"GUF","country-code":"254","alpha-2":"GF"},{name:"French Polynesia","alpha-3":"PYF","country-code":"258","alpha-2":"PF"},{name:"Gabon","alpha-3":"GAB","country-code":"266","alpha-2":"GA"},{name:"Gambia","alpha-3":"GMB","country-code":"270","alpha-2":"GM"},{name:"Georgia","alpha-3":"GEO","country-code":"268","alpha-2":"GE"},{name:"Ghana","alpha-3":"GHA","country-code":"288","alpha-2":"GH"},{name:"Greece","alpha-3":"GRC","country-code":"300","alpha-2":"GR"},{name:"Grenada","alpha-3":"GRD","country-code":"308","alpha-2":"GD"},{name:"Guadeloupe","alpha-3":"GLP","country-code":"312","alpha-2":"GP"},{name:"Guatemala","alpha-3":"GTM","country-code":"320","alpha-2":"GT"},{name:"Guinea","alpha-3":"GIN","country-code":"324","alpha-2":"GN"},{name:"Guyana","alpha-3":"GUY","country-code":"328","alpha-2":"GY"},{name:"Haiti","alpha-3":"HTI","country-code":"332","alpha-2":"HT"},{name:"Honduras","alpha-3":"HND","country-code":"340","alpha-2":"HN"},{name:"Hungary","alpha-3":"HUN","country-code":"348","alpha-2":"HU"},{name:"Iceland","alpha-3":"ISL","country-code":"352","alpha-2":"IS"},{name:"India","alpha-3":"IND","country-code":"356","alpha-2":"IN"},{name:"Indonesia","alpha-3":"IDN","country-code":"360","alpha-2":"ID"},{name:"Iraq","alpha-3":"IRQ","country-code":"368","alpha-2":"IQ"},{name:"Jamaica","alpha-3":"JAM","country-code":"388","alpha-2":"JM"},{name:"Japan","alpha-3":"JPN","country-code":"392","alpha-2":"JP"},{name:"Jordan","alpha-3":"JOR","country-code":"400","alpha-2":"JO"},{name:"Kazakhstan","alpha-3":"KAZ","country-code":"398","alpha-2":"KZ"},{name:"Kenya","alpha-3":"KEN","country-code":"404","alpha-2":"KE"},{name:"Kuwait","alpha-3":"KWT","country-code":"414","alpha-2":"KW"},{name:"Kyrgyzstan","alpha-3":"KGZ","country-code":"417","alpha-2":"KG"},{name:"Latvia","alpha-3":"LVA","country-code":"428","alpha-2":"LV"},{name:"Lebanon","alpha-3":"LBN","country-code":"422","alpha-2":"LB"},{name:"Lesotho","alpha-3":"LSO","country-code":"426","alpha-2":"LS"},{name:"Liberia","alpha-3":"LBR","country-code":"430","alpha-2":"LR"},{name:"Libya","alpha-3":"LBY","country-code":"434","alpha-2":"LY"},{name:"Liechtenstein","alpha-3":"LIE","country-code":"438","alpha-2":"LI"},{name:"Lithuania","alpha-3":"LTU","country-code":"440","alpha-2":"LT"},{name:"Luxembourg","alpha-3":"LUX","country-code":"442","alpha-2":"LU"},{name:"Macao","alpha-3":"MAC","country-code":"446","alpha-2":"MO"},{name:"Macedonia","alpha-3":"MKD","country-code":"807","alpha-2":"MK"},{name:"Madagascar","alpha-3":"MDG","country-code":"450","alpha-2":"MG"},{name:"Malawi","alpha-3":"MWI","country-code":"454","alpha-2":"MW"},{name:"Malaysia","alpha-3":"MYS","country-code":"458","alpha-2":"MY"},{name:"Maldives","alpha-3":"MDV","country-code":"462","alpha-2":"MV"},{name:"Mali","alpha-3":"MLI","country-code":"466","alpha-2":"ML"},{name:"Malta","alpha-3":"MLT","country-code":"470","alpha-2":"MT"},{name:"Mauritius","alpha-3":"MUS","country-code":"480","alpha-2":"MU"},{name:"Mayotte","alpha-3":"MYT","country-code":"175","alpha-2":"YT"},{name:"Moldova","alpha-3":"MDA","country-code":"498","alpha-2":"MD"},{name:"Monaco","alpha-3":"MCO","country-code":"492","alpha-2":"MC"},{name:"Mongolia","alpha-3":"MNG","country-code":"496","alpha-2":"MN"},{name:"Montenegro","alpha-3":"MNE","country-code":"499","alpha-2":"ME"},{name:"Montserrat","alpha-3":"MSR","country-code":"500","alpha-2":"MS"},{name:"Morocco","alpha-3":"MAR","country-code":"504","alpha-2":"MA"},{name:"Mozambique","alpha-3":"MOZ","country-code":"508","alpha-2":"MZ"},{name:"Myanmar","alpha-3":"MMR","country-code":"104","alpha-2":"MM"},{name:"Namibia","alpha-3":"NAM","country-code":"516","alpha-2":"NA"},{name:"Nepal","alpha-3":"NPL","country-code":"524","alpha-2":"NP"},{name:"New Zealand","alpha-3":"NZL","country-code":"554","alpha-2":"NZ"},{name:"Nicaragua","alpha-3":"NIC","country-code":"558","alpha-2":"NI"},{name:"Niger","alpha-3":"NER","country-code":"562","alpha-2":"NE"},{name:"Nigeria","alpha-3":"NGA","country-code":"566","alpha-2":"NG"},{name:"Oman","alpha-3":"OMN","country-code":"512","alpha-2":"OM"},{name:"Pakistan","alpha-3":"PAK","country-code":"586","alpha-2":"PK"},{name:"Palestine","alpha-3":"PSE","country-code":"275","alpha-2":"PS"},{name:"Panama","alpha-3":"PAN","country-code":"591","alpha-2":"PA"},{name:"Paraguay","alpha-3":"PRY","country-code":"600","alpha-2":"PY"},{name:"Peru","alpha-3":"PER","country-code":"604","alpha-2":"PE"},{name:"Philippines","alpha-3":"PHL","country-code":"608","alpha-2":"PH"},{name:"Puerto Rico","alpha-3":"PRI","country-code":"630","alpha-2":"PR"},{name:"Qatar","alpha-3":"QAT","country-code":"634","alpha-2":"QA"},{name:"Romania","alpha-3":"ROU","country-code":"642","alpha-2":"RO"},{name:"Rwanda","alpha-3":"RWA","country-code":"646","alpha-2":"RW"},{name:"Saint Kitts and Nevis","alpha-3":"KNA","country-code":"659","alpha-2":"KN"},{name:"Saint Lucia","alpha-3":"LCA","country-code":"662","alpha-2":"LC"},{name:"Saint Vincent and the Grenadines","alpha-3":"VCT","country-code":"670","alpha-2":"VC"},{name:"Saudi Arabia","alpha-3":"SAU","country-code":"682","alpha-2":"SA"},{name:"Senegal","alpha-3":"SEN","country-code":"686","alpha-2":"SN"},{name:"Serbia","alpha-3":"SRB","country-code":"688","alpha-2":"RS"},{name:"Sierra Leone","alpha-3":"SLE","country-code":"694","alpha-2":"SL"},{name:"Singapore","alpha-3":"SGP","country-code":"702","alpha-2":"SG"},{name:"Slovakia","alpha-3":"SVK","country-code":"703","alpha-2":"SK"},{name:"Slovenia","alpha-3":"SVN","country-code":"705","alpha-2":"SI"},{name:"South Sudan","alpha-3":"SSD","country-code":"728","alpha-2":"SS"},{name:"Sri Lanka","alpha-3":"LKA","country-code":"144","alpha-2":"LK"},{name:"Sudan","alpha-3":"SDN","country-code":"729","alpha-2":"SD"},{name:"Swaziland","alpha-3":"SWZ","country-code":"748","alpha-2":"SZ"},{name:"Tajikistan","alpha-3":"TJK","country-code":"762","alpha-2":"TJ"},{name:"Tanzania","alpha-3":"TZA","country-code":"834","alpha-2":"TZ"},{name:"Thailand","alpha-3":"THA","country-code":"764","alpha-2":"TH"},{name:"Togo","alpha-3":"TGO","country-code":"768","alpha-2":"TG"},{name:"Trinidad and Tobago","alpha-3":"TTO","country-code":"780","alpha-2":"TT"},{name:"Tunisia","alpha-3":"TUN","country-code":"788","alpha-2":"TN"},{name:"Turkmenistan","alpha-3":"TKM","country-code":"795","alpha-2":"TM"},{name:"Turks and Caicos Islands","alpha-3":"TCA","country-code":"796","alpha-2":"TC"},{name:"Uganda","alpha-3":"UGA","country-code":"800","alpha-2":"UG"},{name:"Ukraine","alpha-3":"UKR","country-code":"804","alpha-2":"UA"},{name:"United Arab Emirates","alpha-3":"ARE","country-code":"784","alpha-2":"AE"},{name:"Virgin Islands, US","alpha-3":"VIR","country-code":"850","alpha-2":"VI"},{name:"Uruguay","alpha-3":"URY","country-code":"858","alpha-2":"UY"},{name:"Uzbekistan","alpha-3":"UZB","country-code":"860","alpha-2":"UZ"},{name:"Venezuela","alpha-3":"VEN","country-code":"862","alpha-2":"VE"},{name:"Vietnam","alpha-3":"VNM","country-code":"704","alpha-2":"VN"},{name:"Zambia","alpha-3":"ZMB","country-code":"894","alpha-2":"ZM"},{name:"Zimbabwe","alpha-3":"ZWE","country-code":"716","alpha-2":"ZW"}],this.statesOfCanada={AB:"Alberta",BC:"British Columbia",MB:"Manitoba",NB:"New Brunswick",NL:"Newfoundland and Labrador",NS:"Nova Scotia",NT:"Northwest Territories",NU:"Nunavut",ON:"Ontario",PE:"Prince Edward Island",QC:"Quebec",SK:"Saskatchewan",YT:"Yukon"},this.statesOfAmerica={AL:"Alabama",AK:"Alaska",AZ:"Arizona",AR:"Arkansas",AA:"Armed Forces America",AE:"Armed Forces",AP:"Armed Forces Pacific",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",FL:"Florida",GA:"Georgia",GU:"Guam",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PA:"Pennsylvania",PR:"Puerto Rico",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VI:"Virgin Islands",VA:"Virginia",WA:"Washington",DC:"Washington DC",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming"},this.countryToInternationalCallingCodeMapping={AD:"376",AE:"971",AF:"93",AG:"1268",AI:"1264",AL:"355",AM:"374",AN:"599",AO:"244",AQ:"672",AR:"54",AS:"1684",AT:"43",AU:"61",AW:"297",AZ:"994",BA:"387",BB:"1246",BD:"880",BE:"32",BF:"226",BG:"359",BH:"973",BI:"257",BJ:"229",BL:"590",BM:"1441",BN:"673",BO:"591",BR:"55",BS:"1242",BT:"975",BW:"267",BY:"375",BZ:"501",CA:"1",CC:"61",CD:"243",CF:"236",CG:"242",CH:"41",CI:"225",CK:"682",CL:"56",CM:"237",CN:"86",CO:"57",CR:"506",CU:"53",CV:"238",CX:"61",CY:"357",CZ:"420",DE:"49",DJ:"253",DK:"45",DM:"1767",DO:"1809",DZ:"213",EC:"593",EE:"372",EG:"20",ER:"291",ES:"34",ET:"251",FI:"358",FJ:"679",FK:"500",FM:"691",FO:"298",FR:"33",GA:"241",GB:"44",GD:"1473",GE:"995",GH:"233",GI:"350",GL:"299",GM:"220",GN:"224",GQ:"240",GR:"30",GT:"502",GU:"1671",GW:"245",GY:"592",HK:"852",HN:"504",HR:"385",HT:"509",HU:"36",ID:"62",IE:"353",IL:"972",IM:"44",IN:"91",IQ:"964",IR:"98",IS:"354",IT:"39",JM:"1876",JO:"962",JP:"81",KE:"254",KG:"996",KH:"855",KI:"686",KM:"269",KN:"1869",KP:"850",KR:"82",KW:"965",KY:"1345",KZ:"7",LA:"856",LB:"961",LC:"1758",LI:"423",LK:"94",LR:"231",LS:"266",LT:"370",LU:"352",LV:"371",LY:"218",MA:"212",MC:"377",MD:"373",ME:"382",MF:"1599",MG:"261",MH:"692",MK:"389",ML:"223",MM:"95",MN:"976",MO:"853",MP:"1670",MR:"222",MS:"1664",MT:"356",MU:"230",MV:"960",MW:"265",MX:"52",MY:"60",MZ:"258",NA:"264",NC:"687",NE:"227",NG:"234",NI:"505",NL:"31",NO:"47",NP:"977",NR:"674",NU:"683",NZ:"64",OM:"968",PA:"507",PE:"51",PF:"689",PG:"675",PH:"63",PK:"92",PL:"48",PM:"508",PN:"870",PR:"1",PT:"351",PW:"680",PY:"595",QA:"974",RO:"40",RS:"381",RU:"7",RW:"250",SA:"966",SB:"677",SC:"248",SD:"249",SE:"46",SG:"65",SH:"290",SI:"386",SK:"421",SL:"232",SM:"378",SN:"221",SO:"252",SR:"597",ST:"239",SV:"503",SY:"963",SZ:"268",TC:"1649",TD:"235",TG:"228",TH:"66",TJ:"992",TK:"690",TL:"670",TM:"993",TN:"216",TO:"676",TR:"90",TT:"1868",TV:"688",TW:"886",TZ:"255",UA:"380",UG:"256",US:"1",UY:"598",UZ:"998",VA:"39",VC:"1784",VE:"58",VG:"1284",VI:"1340",VN:"84",VU:"678",WF:"681",WS:"685",XK:"381",YE:"967",YT:"262",ZA:"27",ZM:"260",ZW:"263"},this.countryToLanguageMapping={ad:"ca",ae:"ar",af:"fa,ps",ag:"en",ai:"en",al:"sq",am:"hy",an:"nl,en",ao:"pt",ar:"es",as:"en,sm",at:"de",au:"en",aw:"nl,pap",ax:"sv",ba:"bs,hr,sr",bb:"en",bd:"bn",be:"nl,fr,de",bf:"fr",bh:"ar",bi:"fr",bj:"fr",bl:"fr",bm:"en",bn:"ms",bo:"es,qu,ay",br:"pt",bs:"en",bt:"dz",bv:"no",bw:"en,tn",by:"be,ru",bz:"en",ca:"en,fr",cc:"en",cd:"fr",cf:"fr",cg:"fr",ch:"de,fr,it,rm",ci:"fr",ck:"en,rar",cl:"es",cm:"fr,en",cn:"zh",co:"es",cr:"es",cu:"es",cv:"pt",cx:"en",cy:"el,tr",cz:"cs","// de":"de",dj:"fr,ar,so",dk:"da",dm:"en",do:"es",dz:"ar",ec:"es",ee:"et",eg:"ar",eh:"ar,es,fr",er:"ti,ar,en",es:"ast,ca,es,eu,gl",et:"am,om",fi:"fi,sv,se",fj:"en",fk:"en",fm:"en",ga:"fr",gb:"en,ga,cy,gd,kw",gd:"en",ge:"ka",gf:"fr",gg:"en",gh:"en",gi:"en",gl:"kl,da",gm:"en",gn:"fr",gp:"fr",gq:"es,fr,pt",gr:"el",gs:"en",gt:"es",gu:"en,ch",gw:"pt",gy:"en",hk:"zh,en",hm:"en",hn:"es",ht:"fr,ht",ie:"en,ga",il:"he",im:"en",in:"hi,en",io:"en",iq:"ar,ku",ir:"fa",it:"it,de,fr",je:"en",jm:"en",jo:"ar",jp:"ja",ke:"sw,en",kg:"ky,ru",kh:"km",ki:"en",km:"ar,fr",kn:"en",kp:"ko",kr:"ko,en",kw:"ar",ky:"en",kz:"kk,ru",la:"lo",lb:"ar,fr",lc:"en",li:"de",lk:"si,ta",lr:"en",ls:"en,st",lu:"lb,fr,de",ly:"ar",ma:"ar",mc:"fr",md:"ru,uk,ro",me:"srp,sq,bs,hr,sr",mf:"fr",mg:"mg,fr",mh:"en,mh",ml:"fr",mm:"my",mo:"zh,pt",mp:"ch",mq:"fr",mr:"ar,fr",ms:"en",mt:"mt,en",mu:"mfe,fr,en",mv:"dv",mw:"en,ny",mx:"es",my:"ms",mz:"pt",na:"en,sf,de",nc:"fr",ne:"fr",nf:"en,pih",ng:"en",ni:"es",no:"nb,nn,no,se",np:"ne",nr:"na,en",nu:"niu,en",nz:"mi,en",om:"ar",pa:"es",pe:"es",pf:"fr",pg:"en,tpi,ho",ph:"en,tl",pk:"en,ur",pm:"fr",pn:"en,pih",pr:"es,en",ps:"ar,he",pw:"en,pau,ja,sov,tox",py:"es,gn",qa:"ar",re:"fr",rs:"sr",rw:"rw,fr,en",sa:"ar",sb:"en",sc:"fr,en,crs",sd:"ar,en",se:"sv",sg:"en,ms,zh,ta",sh:"en",si:"sl",sj:"no",sl:"en",sm:"it",sn:"fr",so:"so,ar",sr:"nl",st:"pt",ss:"en",sv:"es",sy:"ar",sz:"en,ss",tc:"en",td:"fr,ar",tf:"fr",tg:"fr",tj:"tg,ru",tk:"tkl,en,sm",tl:"pt,tet",tm:"tk",tn:"ar",to:"en",tt:"en",tv:"en",tw:"zh",tz:"sw,en",ua:"uk",ug:"en,sw",um:"en",us:"en",uy:"es",uz:"uz,kaa",va:"it",vc:"en",ve:"es",vg:"en",vi:"en",vn:"vi",vu:"bi,en,fr",wf:"fr",ws:"sm,en",ye:"ar",yt:"fr",za:"zu,xh,af,st,tn,en",zm:"en",zw:"en,sn,nd "}}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.countryService||(win.rainbow.countryService=new CountryService),win.rainbow.countryService}async start(){this.logger.info(""),this.logger.info("[countryService] === STARTING ==="),this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/";try{const availableCountries=await this.getAvailableCountries();this.countries=availableCountries.map(country=>{const entry={name:country.fullname,"alpha-3":country.isoAlpha3Code,"alpha-2":country.isoAlpha2Code};return"FRA"===country.isoAlpha3Code&&(entry.default=!0),entry})}catch(error){this.logger.info("[countryService] === warning === "+error.message)}this.logger.info("[countryService] === STARTED  === "+this.countries.length+" countries"),this.logger.info("")}async stop(){this.logger.info("[countryService] STOPPED")}getCountries(){const countries=this.countries.map(country=>{const label=this.getCountryLabel(country["alpha-2"]);if(label){const name=this.i18n.translate(label);name&&name!==label&&(country.name=name)}return country});return countries.sort((country1,country2)=>country1.name.localeCompare(country2.name,this.i18n.getCurrentLanguage())),countries}getCountryStates(country){return country&&"USA"===country["alpha-3"]?this.statesOfAmerica:country&&"CAN"===country["alpha-3"]?this.statesOfCanada:{}}getCountry(countryCode,defaulted=null){if(!countryCode)return defaulted?this.getDefaultCountry():null;const countries=this.countries.filter(country=>country["alpha-3"]===countryCode);return countries.length>0?countries[0]:null}getDefaultCountry(){const countries=this.countries.filter(country=>!0===country.default);return countries.length>0?countries[0]:this.countries[0]}getCountryName(countryCode){return this.getCountry(countryCode)?this.getCountry(countryCode).name:null}getCountryCode(country){return country?country["alpha-3"]:null}getCountryDataFromName(countryName){if(!countryName)return null;const countries=this.countries.filter(country=>country.name===countryName);return countries.length>0?countries[0]:null}getCountryCodeFromName(countryName){const country=this.getCountryDataFromName(countryName);return country?country["alpha-3"]:null}getStateCodeFromName(countryName,stateName){const country=this.getCountryDataFromName(countryName);if(country&&"USA"===country["alpha-3"])for(const[code,name]of Object.entries(this.statesOfAmerica))if(stateName===name)return code;if(country&&"CAN"===country["alpha-3"])for(const[code,name]of Object.entries(this.statesOfCanada))if(stateName===name)return code;return null}getStateName(country,state){return country&&state?"USA"===country?this.statesOfAmerica[state]:"CAN"===country?this.statesOfCanada[state]:"":""}getDefaultState(country){return country&&"USA"===country["alpha-3"]?"AL":country&&"CAN"===country["alpha-3"]?"AB":null}getAlpha2Code(alpha3Code){if(!alpha3Code)return null;const countries=this.countries.filter(country=>country["alpha-3"]===alpha3Code);return countries.length>0?countries[0]["alpha-2"]:null}getCountryLabel(alphaCode){let alpha2Code=null;return alpha2Code=3===alphaCode.length?this.getAlpha2Code(alphaCode):alphaCode,alpha2Code?"country"+alpha2Code:null}getDataCenterLabel(datacenterLocation,companyCountry){let label=this.getRegionLabel(datacenterLocation.name);if(datacenterLocation.country===companyCountry)label=this.getCountryLabel(datacenterLocation.country);else{const datacenter=this.datacenters.find(dc=>dc["alpha-3"]===datacenterLocation.country);datacenter&&(label=this.getRegionLabel(datacenter.region))}return label}getRegionLabel(regionName){return regionName}getInternationalCallingCode(countryAlpha2Code){if(!countryAlpha2Code)return;const countryCode=countryAlpha2Code.toUpperCase();return this.countryToInternationalCallingCodeMapping[countryCode]}mapCountryToLanguages(countryAlpha2Code){if(!countryAlpha2Code)return;const countryCode=countryAlpha2Code.toLowerCase();return void 0!==this.countryToLanguageMapping[countryCode]?this.countryToLanguageMapping[countryCode].split(","):[countryCode]}async getAvailableCountries(){try{const response=await fetch(this.portalURL+"/countries",{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAvailableCountries");throw this.logger.error("[countryService] "+errorInfo.message),errorInfo.error}}}exports.CountryService=CountryService},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ConnectableObservable})),__webpack_require__.d(__webpack_exports__,"b",(function(){return connectableObservableDescriptor}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(14),_Observable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(5),_Subscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(2),_Subscription__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(10),_operators_refCount__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(82),ConnectableObservable=function(_super){function ConnectableObservable(source,subjectFactory){var _this=_super.call(this)||this;return _this.source=source,_this.subjectFactory=subjectFactory,_this._refCount=0,_this._isComplete=!1,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ConnectableObservable,_super),ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber)},ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;return subject&&!subject.isStopped||(this._subject=this.subjectFactory()),this._subject},ConnectableObservable.prototype.connect=function(){var connection=this._connection;return connection||(this._isComplete=!1,(connection=this._connection=new _Subscription__WEBPACK_IMPORTED_MODULE_4__.a).add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this))),connection.closed&&(this._connection=null,connection=_Subscription__WEBPACK_IMPORTED_MODULE_4__.a.EMPTY)),connection},ConnectableObservable.prototype.refCount=function(){return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__.a)()(this)},ConnectableObservable}(_Observable__WEBPACK_IMPORTED_MODULE_2__.a),connectableObservableDescriptor=function(){var connectableProto=ConnectableObservable.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:!0},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}}}(),ConnectableSubscriber=function(_super){function ConnectableSubscriber(destination,connectable){var _this=_super.call(this,destination)||this;return _this.connectable=connectable,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ConnectableSubscriber,_super),ConnectableSubscriber.prototype._error=function(err){this._unsubscribe(),_super.prototype._error.call(this,err)},ConnectableSubscriber.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),_super.prototype._complete.call(this)},ConnectableSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var connection=connectable._connection;connectable._refCount=0,connectable._subject=null,connectable._connection=null,connection&&connection.unsubscribe()}},ConnectableSubscriber}(_Subject__WEBPACK_IMPORTED_MODULE_1__.b);_Subscriber__WEBPACK_IMPORTED_MODULE_3__.a},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return observeOn})),__webpack_require__.d(__webpack_exports__,"a",(function(){return ObserveOnSubscriber}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Subscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2),_Notification__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(33);function observeOn(scheduler,delay){return void 0===delay&&(delay=0),function(source){return source.lift(new ObserveOnOperator(scheduler,delay))}}var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){void 0===delay&&(delay=0),this.scheduler=scheduler,this.delay=delay}return ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay))},ObserveOnOperator}(),ObserveOnSubscriber=function(_super){function ObserveOnSubscriber(destination,scheduler,delay){void 0===delay&&(delay=0);var _this=_super.call(this,destination)||this;return _this.scheduler=scheduler,_this.delay=delay,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(ObserveOnSubscriber,_super),ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination),this.unsubscribe()},ObserveOnSubscriber.prototype.scheduleMessage=function(notification){this.destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)))},ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__.a.createNext(value))},ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__.a.createError(err)),this.unsubscribe()},ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__.a.createComplete()),this.unsubscribe()},ObserveOnSubscriber}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.a),ObserveOnMessage=function(){return function(notification,destination){this.notification=notification,this.destination=destination}}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return TimeoutError}));var TimeoutError=function(){function TimeoutErrorImpl(){return Error.call(this),this.message="Timeout has occurred",this.name="TimeoutError",this}return TimeoutErrorImpl.prototype=Object.create(Error.prototype),TimeoutErrorImpl}()},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return concatAll}));var _mergeAll__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(86);function concatAll(){return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__.a)(1)}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return merge}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(21),_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(86),_fromArray__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(50);function merge(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];var concurrent=Number.POSITIVE_INFINITY,scheduler=null,last=observables[observables.length-1];return Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__.a)(last)?(scheduler=observables.pop(),observables.length>1&&"number"==typeof observables[observables.length-1]&&(concurrent=observables.pop())):"number"==typeof last&&(concurrent=observables.pop()),null===scheduler&&1===observables.length&&observables[0]instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__.a?observables[0]:Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__.a)(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__.a)(observables,scheduler))}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return race}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_util_isArray__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17),_fromArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(50),_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(31),_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(26);function race(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];if(1===observables.length){if(!Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__.a)(observables[0]))return observables[0];observables=observables[0]}return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__.a)(observables,void 0).lift(new RaceOperator)}var RaceOperator=function(){function RaceOperator(){}return RaceOperator.prototype.call=function(subscriber,source){return source.subscribe(new RaceSubscriber(subscriber))},RaceOperator}(),RaceSubscriber=function(_super){function RaceSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.hasFirst=!1,_this.observables=[],_this.subscriptions=[],_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(RaceSubscriber,_super),RaceSubscriber.prototype._next=function(observable){this.observables.push(observable)},RaceSubscriber.prototype._complete=function(){var observables=this.observables,len=observables.length;if(0===len)this.destination.complete();else{for(var i=0;i<len&&!this.hasFirst;i++){var observable=observables[i],subscription=Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__.a)(this,observable,void 0,i);this.subscriptions&&this.subscriptions.push(subscription),this.add(subscription)}this.observables=null}},RaceSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){if(!this.hasFirst){this.hasFirst=!0;for(var i=0;i<this.subscriptions.length;i++)if(i!==outerIndex){var subscription=this.subscriptions[i];subscription.unsubscribe(),this.remove(subscription)}this.subscriptions=null}this.destination.next(innerValue)},RaceSubscriber}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__.a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return timer}));var _Observable__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5),_scheduler_async__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(16),_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(54),_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(21);function timer(dueTime,periodOrScheduler,scheduler){void 0===dueTime&&(dueTime=0);var period=-1;return Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__.a)(periodOrScheduler)?period=Number(periodOrScheduler)<1?1:Number(periodOrScheduler):Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__.a)(periodOrScheduler)&&(scheduler=periodOrScheduler),Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__.a)(scheduler)||(scheduler=_scheduler_async__WEBPACK_IMPORTED_MODULE_1__.a),new _Observable__WEBPACK_IMPORTED_MODULE_0__.a((function(subscriber){var due=Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__.a)(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber})}))}function dispatch(state){var index=state.index,period=state.period,subscriber=state.subscriber;if(subscriber.next(index),!subscriber.closed){if(-1===period)return subscriber.complete();state.index=index+1,this.schedule(state,period)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const event_service_1=__webpack_require__(11),company_model_1=__webpack_require__(24),logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),userInfo_service_1=__webpack_require__(58),errorHelper_service_1=__webpack_require__(12),xmpp_service_1=__webpack_require__(9),main_service_1=__webpack_require__(15);class CompanyService{constructor(){this.eventService=event_service_1.EventService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.userInfoService=userInfo_service_1.UserInfoService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.companies={},this.xmppService.subscribeToConnectionEvents(event=>{"ON_XMPP_DISCONNECTED"===event.name&&"LOGOUT"===event.data.reason&&(this.companies={})}),setTimeout(()=>{this.configure()},500)}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.companyService||(win.rainbow.companyService=new CompanyService),win.rainbow.companyService}configure(){this.eventService.subscribe("ON_COMPANY_CHANGE_EVENT",(__event,companyId)=>{this.getCompanyById(companyId,!0)})}async getCompanyById(companyId,update=!1){try{if(!companyId)throw new Error("missing companyId");let company=this.companies[companyId];if(company&&!update)return this.logger.info("[companyService] getCompanyById (cache) "+companyId+" - success"),company;const headers=this.authService.getRequestHeader();let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/companies/${companyId}`;url+="?selectedThemeObj=true";const responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText);const companyData=await responseData.json();return company?(company.updateFromData(companyData.data),this.logger.info(`getCompanyById (update) ${companyId} - success`)):(company=company_model_1.Company.createFromData(companyData.data),this.companies[company.id]=company,this.logger.info(`getCompanyById ${companyId} - success`)),this.getCompanyLogo(company),this.getCompanyBanner(company),company}catch(error){const errorMessage="getCompanyById -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async searchCompanies(searchText,hasBP=null,isBP=null,bpType=null){try{let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/companies?name=${encodeURIComponent(searchText)}&format=full`;null!=hasBP&&(url+="&hasBP="+hasBP),null!=isBP&&(url+="&isBP="+isBP),bpType&&(url+="&bpType="+bpType);const headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText);const companiesData=await responseData.json(),companies=companiesData.data.reduce((result,companyData)=>{if("Default"!==companyData.name&&"Rainbow"!==companyData.name&&"active"===companyData.status){let company=this.companies[companyData.id];company||(company=company_model_1.Company.createFromData(companyData),this.companies[company.id]=company,this.getCompanyLogo(company)),result.push(company)}return result},[]);return this.logger.info("searchCompanies with criteria '"+searchText+"' - success - found "+companiesData.length+" companies : returns "+companies.length+" companies"),companies}catch(error){const errorMessage="searchCompanies -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async getCompanyAdminsData(companyId){try{let url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/companies/${companyId}/administrators`;url+="?selectedThemeObj=true";const headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText);return(await responseData.json()).data}catch(error){const errorMessage="getCompanyAdminsData -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async getCompanyUsers(companyId,pageSize){try{const url=`${config.restServerUrl}/api/rainbow/search/v1.0/users?companyId=${companyId}&limit=${pageSize}`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText)}catch(error){const errorMessage="getCompanyUsers -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async getCompanyLogo(company){try{const companyColor=this.userInfoService.computeUserColor(company.name),companyInitials=company.name.substr(0,1);return company.logo=this.userInfoService.getAvatarImage(company.id,companyInitials,companyColor.color,130,company.lastAvatarUpdateDate),this.eventService.publish("ON_COMPANY_LOGO_UPDATED",company.id),this.logger.info("[getCompanyLogo] - "+company.getNameForLogs()+" - success"),company.sendChangeEvent("logo"),company}catch(error){throw new Error("getCompanyLogo -- FAILURE -- "+error.message)}}async getCompanyBanner(company){return new Promise(resolve=>{const image=new Image;image.onload=()=>{company.banner=image,this.eventService.publish("ON_COMPANY_BANNER_UPDATED",company.id),this.logger.info("[getCompanyBanner] - "+company.getNameForLogs()+" - success"),resolve(company)},image.onerror=()=>{this.logger.error("[companyService] Load banner for "+company.getNameForLogs()+" failure"),resolve(company)};let imgSrc=this.authService.fromSDK?null:"/cacheV2/images/company-banner-01.svg";if(company.lastBannerUpdateDate){imgSrc=config.webservices.protocol+"://"+config.webservices.currentServer+"/api/banner/"+company.id+"?size=831",imgSrc+="&update="+main_service_1.MainService.MD5(company.lastBannerUpdateDate)}imgSrc?image.src=imgSrc:resolve(company)})}async getImageMimeType(imageUrl){try{if(!imageUrl)return null;const responseData=await fetch(imageUrl);if(!responseData.ok)throw new Error(responseData.statusText);return(await responseData.blob()).type}catch(error){const errorMessage="getImageMimeType -- FAILURE -- "+error.message;return this.logger.error(errorMessage),null}}async getCompanyFeatures(company){try{const features={alertNotifAllowed:!1,webinarAccess:!1},url=`${config.restServerUrl}/api/rainbow/subscription/v1.0/companies/${company.id}/subscriptions/features`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText);const data=(await responseData.json()).data,featureAlertNotifAllowed=data.find(feat=>"ALERT_NOTIFICATIONS_ALLOWED"===feat.featureUniqueRef);featureAlertNotifAllowed&&(features.alertNotifAllowed=featureAlertNotifAllowed.isEnabled);const featureWebinarAccess=data.find(feat=>"WEBINAR_ACCESS"===feat.featureUniqueRef);return featureWebinarAccess&&(features.webinarAccess=featureWebinarAccess.isEnabled),features}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCompanyFeatures");return this.logger.warn("[companyService] "+errorInfo.message),{}}}}exports.CompanyService=CompanyService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),voiceMessage_model_1=__webpack_require__(460),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),fileStorage_service_1=__webpack_require__(34),fileServer_service_1=__webpack_require__(47),telephony_service_1=__webpack_require__(57),event_service_1=__webpack_require__(11),personal_directory_service_1=__webpack_require__(314),main_service_1=__webpack_require__(15);class VoiceMessageService{constructor(){this.portalURL="",this.sipWisePortalURL="",this.listeners=[],this.voiceMessageMngtRef=null,this.messageHandlerRef=null,this.voiceMessages=[],this.voiceMails=[],this.xmpp_message_handler=null,this.voiceMessagesCounters={total:0,unread:0,voiceMessagePresent:!1},this.voiceMailsHuntingGroupCounters={roomJid:null,total:0,unread:0},this.unreadVoiceMessageCounter=0,this.voiceMessagePromises={},this.rxSubject=new rxjs_1.Subject,this.CALLSERVICE_NS="urn:xmpp:pbxagent:callservice:1",this.CALLSERVICE_NS_SIPWISE="urn:xmpp:pbxagent:telephony:1",this.personalDirSubscriptions=[],this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.personalDirectoryService=personal_directory_service_1.PersonalDirectoryService.getInstance(),this.mainService=main_service_1.MainService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.voiceMessageService||(win.rainbow.voiceMessageService=new VoiceMessageService),win.rainbow.voiceMessageService}start(){return this.centralizedService=this.mainService.inject("centralizedService"),this.portalURL=config.restServerUrl+"/api/rainbow/telephony/v1.0/",this.sipWisePortalURL=config.restServerUrl+"/api/rainbow/voice/v1.0/",this.telephonyService.isSipWiseRoot()&&(this.logger.info("[voiceMessageService] starting in sipWise mode "),this.CALLSERVICE_NS=this.CALLSERVICE_NS_SIPWISE),this.voiceMessagesCounters={total:0,unread:0,voiceMessagePresent:!1},new Promise(resolve=>{this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL)?(this.contactService.userContact.isCPaaSGuest()||(this.logger.info("[voiceMessageService] === STARTING ==="),this.attachHandlers(),this.telephonyService.isSipWiseRoot()&&this.getVoiceMessagesCounters().then(()=>{this.eventService.publish("ON_VOICE_MESSAGE_UPDATE_EVENT",this.voiceMessagesCounters)}),this.logger.info("[voiceMessageService] === STARTED  ===")),resolve()):resolve()})}reconnect(){this.attachHandlers()}attachHandlers(){this.logger.info("[voiceMessageService] attachHandlers"),this.voiceMessageMngtRef&&(this.xmppService.connection.deleteHandler(this.voiceMessageMngtRef),this.voiceMessageMngtRef=null),this.voiceMessageMngtRef=this.xmppService.connection.addHandler(stanza=>this.onVoiceMessageManagement(stanza),null,"message","management"),this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.messageHandlerRef=this.xmppService.addHandler(stanza=>this.vmCounterHandler(stanza),this.CALLSERVICE_NS,"message"),this.personalDirSubscriptions.push(this.personalDirectoryService.subscribe(event=>{this.onPersonalContactEvent(event)}))}async stop(){this.logger.info("[voiceMessageService] === STOPPING ==="),this.listeners.forEach(destroyFunction=>{destroyFunction()}),this.voiceMessagesCounters={total:0,unread:0},this.logger.info("[voiceMessageService] === STOPPED ===")}subscribe(handler){return this.rxSubject.subscribe(handler)}vmCounterHandler(stanza){try{if(this.telephonyService.isSipWiseRoot()){const actionElem=$(stanza).find("telephony"),stanzaIdElem=$(stanza).find("stanza-id"),mwiElem=actionElem.find("mwi"),gmwiElem=actionElem.find("gmwi");if(mwiElem&&0!==mwiElem.length){const mwiMessage=mwiElem.find("message"),mwiMsgType=mwiMessage.attr("type"),mwiMsgNew=mwiMessage.attr("new"),mwiMsgOld=mwiMessage.attr("old");mwiMsgType&&"voice"===mwiMsgType&&mwiMsgNew&&mwiMsgOld?(this.voiceMessagesCounters.unread=Number(mwiMsgNew),this.voiceMessagesCounters.total=Number(mwiMsgNew)+Number(mwiMsgOld),this.voiceMessagesCounters.voiceMessagePresent=!1,this.logger.info("[voiceMessageService] vmCounterHandler SipWise -- Messages total : "+this.voiceMessagesCounters.total+" - Messages Unread : "+this.voiceMessagesCounters.unread),this.rxSubject.next({type:"VOICE_MESSAGE_UPDATE",data:this.voiceMessagesCounters}),this.eventService.publish("ON_VOICE_MESSAGE_UPDATE_EVENT",this.voiceMessagesCounters)):this.logger.info("[voiceMessageService] vmCounterHandler SipWise -- anomaly msg attr ")}if(gmwiElem&&0!==gmwiElem.length){const gmwiMessage=gmwiElem.find("message"),gmwiMsgType=gmwiMessage.attr("type"),gmwiMsgNew=gmwiMessage.attr("new"),gmwiMsgOld=gmwiMessage.attr("old"),roomJid=stanzaIdElem.attr("by");gmwiMsgType&&"voice"===gmwiMsgType&&gmwiMsgNew&&gmwiMsgOld&&roomJid?(this.voiceMailsHuntingGroupCounters.roomJid=roomJid,this.voiceMailsHuntingGroupCounters.unread=Number(gmwiMsgNew),this.voiceMailsHuntingGroupCounters.total=Number(gmwiMsgNew)+Number(gmwiMsgOld),this.logger.info("[voiceMessageService] vmHuntingGroupCounterHandler SipWise for room: "+this.voiceMailsHuntingGroupCounters.roomJid+" -- Messages total : "+this.voiceMailsHuntingGroupCounters.total+" - Messages Unread : "+this.voiceMailsHuntingGroupCounters.unread),this.rxSubject.next({type:"VOICE_MAIL_HUNTING_GROUP_UPDATE",data:this.voiceMailsHuntingGroupCounters})):this.logger.info("[voiceMessageService] vmHuntingGroupCounterHandler SipWise -- anomaly msg attr ")}}else{const vmCounters=$(stanza).find("voiceMessages").find("voiceMessagesCounters");if(vmCounters&&0!==vmCounters.length){const totalVoiceMessageAttr=vmCounters.attr("totalVoiceMessages"),unreadVoiceMessageAttr=vmCounters.attr("unreadVoiceMessages"),voiceMessagePresent=vmCounters.attr("voiceMessagePresent");this.voiceMessagesCounters={total:totalVoiceMessageAttr?parseInt(totalVoiceMessageAttr,10):0,unread:unreadVoiceMessageAttr?parseInt(unreadVoiceMessageAttr,10):0,voiceMessagePresent:Boolean(voiceMessagePresent)},this.rxSubject.next({type:"VOICE_MESSAGE_UPDATE",data:this.voiceMessagesCounters}),this.eventService.publish("ON_VOICE_MESSAGE_UPDATE_EVENT",this.voiceMessagesCounters)}}return!0}catch(error){return!0}}async onVoiceMessageManagement(stanza){try{const voiceMessageEndpointElem=$(stanza).find("visualvoicemail");if(voiceMessageEndpointElem.length&&"abort"===voiceMessageEndpointElem.attr("action")){const voiceMessageId=voiceMessageEndpointElem.attr("msgid"),errorEndPointElem=voiceMessageEndpointElem.find("error");this.voiceMessagePromises[voiceMessageId].reject(new Error(errorEndPointElem.attr("errordetailscode"))),delete this.voiceMessagePromises[voiceMessageId],this.logger.info("[voiceMessageService] onVoiceMessageManagement - "+voiceMessageId+" - abort - "+errorEndPointElem.attr("errormsg"))}else if(voiceMessageEndpointElem.length&&"create"===voiceMessageEndpointElem.attr("action")){const voiceMessageId=voiceMessageEndpointElem.attr("msgid"),fileId=voiceMessageEndpointElem.find("fileid").text();this.logger.info("[voiceMessageService] onVoiceMessageManagement - "+voiceMessageId+" - create FileId - "+fileId);this.getVoiceMessageById(voiceMessageId)&&(await this.fileStorageService.retrieveVoiceMessageFileDescriptorsListPerOwner(),this.voiceMessagePromises[voiceMessageId].resolve(voiceMessageId),delete this.voiceMessagePromises[voiceMessageId])}return!0}catch(error){return!0}}getVoiceMessageById(msgId){return this.voiceMessages.find(currentVoiceMsg=>msgId===currentVoiceMsg.id)}onPersonalContactEvent(event){try{let voiceMsgUpdated=!1;switch(event.name){case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_ADD:if(event.data){const addedContact=event.data;this.logger.debug(`[VoiceMessageService] onPersonalContactEvent PERSONAL_DIRECTORY_ADD: Id = ${addedContact.id} -- Display name = ${addedContact.displayName}`),this.voiceMessages.forEach(voiceMsg=>{if(!voiceMsg.directoryContactId&&voiceMsg.contact.temp){const jid=voiceMsg.contact.id,persoContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(jid);persoContact&&(this.logger.debug(`[VoiceMessageService] onPersonalContactEvent -- Update display of voice message number '${voiceMsg.contact.displayName}' to name '${persoContact.displayName}'`),voiceMsg.contact.displayName=persoContact.displayName,voiceMsg.directoryContactId=persoContact.id,voiceMsgUpdated=!0)}}),voiceMsgUpdated&&this.rxSubject.next({type:"VOICE_MESSAGE_INFOS_UPDATE"})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_UPDATE:if(event.data){const updatedContact=event.data;this.logger.debug(`[VoiceMessageService] onPersonalContactEvent PERSONAL_DIRECTORY_UPDATE: Id = ${updatedContact.id} -- Display name = ${updatedContact.displayName}`),this.voiceMessages.forEach(voiceMsg=>{const jid=voiceMsg.contact.id,persoContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(jid);persoContact?(this.logger.debug(`[VoiceMessageService] onPersonalContactEvent -- Update display of voice message log name '${voiceMsg.contact.displayName}' to '${persoContact.displayName}'`),voiceMsg.contact.displayName=persoContact.displayName,voiceMsg.directoryContactId=persoContact.id,voiceMsgUpdated=!0):voiceMsg.directoryContactId&&(this.logger.debug(`[VoiceMessageService] onPersonalContactEvent -- Reinit display of voice message log name '${voiceMsg.contact.displayName}' to number '${voiceMsg.contact.phoneProCan}'`),voiceMsg.contact.displayName=voiceMsg.contact.phoneProCan,voiceMsg.directoryContactId=null,voiceMsgUpdated=!0)}),voiceMsgUpdated&&this.rxSubject.next({type:"VOICE_MESSAGE_INFOS_UPDATE"})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE:if(event.data){const deletedContactId=event.data;this.logger.debug("[VoiceMessageService] onPersonalContactEvent PERSONAL_DIRECTORY_DELETE: Id =  "+deletedContactId),this.voiceMessages.forEach(voiceMsg=>{voiceMsg.directoryContactId===deletedContactId&&(this.logger.debug(`[VoiceMessageService] onPersonalContactEvent -- Reinit display of voice message log name '${voiceMsg.contact.displayName}' to number '${voiceMsg.contact.phoneProCan}'`),voiceMsg.contact.displayName=voiceMsg.contact.phoneProCan,voiceMsg.directoryContactId=null,voiceMsgUpdated=!0)}),voiceMsgUpdated&&this.rxSubject.next({type:"VOICE_MESSAGE_INFOS_UPDATE"})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE_ALL:this.logger.debug("[VoiceMessageService] onPersonalContactEvent PERSONAL_DIRECTORY_DELETE_ALL"),this.voiceMessages.forEach(voiceMsg=>{voiceMsg.directoryContactId&&(this.logger.debug(`[VoiceMessageService] onPersonalContactEvent -- Reinit display of voice message log name '${voiceMsg.contact.displayName}' to number '${voiceMsg.contact.phoneProCan}'`),voiceMsg.contact.displayName=voiceMsg.contact.phoneProCan,voiceMsg.directoryContactId=null,voiceMsgUpdated=!0)}),voiceMsgUpdated&&this.rxSubject.next({type:"VOICE_MESSAGE_INFOS_UPDATE"})}}catch(error){return this.logger.error("[VoiceMessageService] onPersonalContactEvent -- failure with error "+error),!0}return!0}async getVoiceMessagesList(){if(!this.telephonyService.agentStatus.featureVVM&&!this.telephonyService.isSipWise())return[];try{let response,responseData,voiceMessagesData;if(this.voiceMessages=[],this.telephonyService.isSipWise()){const url=this.sipWisePortalURL+"messages",headers=this.authService.getRequestHeader();if(responseData=await fetch(url,{method:"GET",headers:headers}),!responseData.ok)throw responseData;response=await responseData.json(),voiceMessagesData=response.data,this.voiceMessages=await Promise.all(voiceMessagesData.map(async voiceMessageData=>await this.createVoiceMessageFromSipWiseData(voiceMessageData).catch(()=>{}))),this.fileStorageService.reinitInternal()}else{const url=this.portalURL+"voicemessages",headers=this.authService.getRequestHeader();if(responseData=await fetch(url,{method:"GET",headers:headers}),!responseData.ok)throw responseData;response=await responseData.json(),voiceMessagesData=response.data.voicemessages.voiceMessageList,this.voiceMessages=await Promise.all(voiceMessagesData.map(async voiceMessageData=>await this.createVoiceMessageFromData(voiceMessageData).catch(()=>{})))}return this.logger.info("[voiceMessageService] getVoiceMessagesList success - Messages number : "+this.voiceMessages.length),this.voiceMessages.sort((a,b)=>new Date(b.date).getTime()-new Date(a.date).getTime()),this.voiceMessages}catch(error){let errorMessage="getVoiceMessagesList failure -- ";throw errorMessage+=error.status?error.status:error.message,this.logger.error("[voiceMessageService] "+errorMessage),new Error(errorMessage)}}getVoiceMessages(){return this.voiceMessages}async getVoiceMessagesCounters(){try{if(this.telephonyService.isSipWiseRoot()){const url=this.sipWisePortalURL+"messages",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const voiceMessagesData=await responseData.json(),counterInbox=Number(voiceMessagesData.inbox),counterOld=Number(voiceMessagesData.old);this.voiceMessagesCounters.unread=counterInbox,this.voiceMessagesCounters.total=counterInbox+counterOld,this.logger.info("[voiceMessageService] getVoiceMessagesCounters SipWise success - total : "+this.voiceMessagesCounters.total+" - unread : "+this.voiceMessagesCounters.unread)}else{const url=this.portalURL+"voicemessages/counters",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const voiceMessageCountersData=(await responseData.json()).data.voicemessages.counters;this.voiceMessagesCounters.total=parseInt(voiceMessageCountersData.total,10),this.voiceMessagesCounters.unread=parseInt(voiceMessageCountersData.unread,10),this.logger.info("[voiceMessageService] getVoiceMessagesCounters success - total : "+this.voiceMessagesCounters.total+" - unread : "+this.voiceMessagesCounters.unread)}return this.rxSubject.next({type:"VOICE_MESSAGE_UPDATE",data:this.voiceMessagesCounters}),this.voiceMessagesCounters}catch(error){throw this.voiceMessageHandleError("getVoiceMessagesCounters",error)}}getVoiceMessagesUnreadCounter(){return this.voiceMessagesCounters.unread}getVoiceMessagesTotalCounter(){return this.voiceMessagesCounters.total}getVoiceMessagePresent(){return this.voiceMessagesCounters.voiceMessagePresent}async getVoiceMessageAudioFileURL(voiceMessage){let vmFileDesc;if(vmFileDesc=this.telephonyService.isSipWise()?this.fileStorageService.getFileDescriptorById(voiceMessage.id):this.fileStorageService.getVoiceMessageFileDescriptorByMsgId(voiceMessage.id),vmFileDesc&&"deleted"!==vmFileDesc.state){const vmBlob=await this.fileServerService.getBlobFromFileDescriptor(vmFileDesc);return voiceMessage.unread&&this.updateVoiceMessage(voiceMessage.id,!0),URL.createObjectURL(vmBlob)}const voiceMessageId=await new Promise((resolve,reject)=>{this.voiceMessagePromises[voiceMessage.id]={resolve:resolve,reject:reject},this.getVoiceMessageFromPBX(voiceMessage)});if(await this.fileStorageService.retrieveVoiceMessageFileDescriptorsListPerOwner(),vmFileDesc=this.fileStorageService.getVoiceMessageFileDescriptorByMsgId(voiceMessageId),vmFileDesc){const vmBlob=await this.fileServerService.getBlobFromFileDescriptor(vmFileDesc);return URL.createObjectURL(vmBlob)}}async getVoiceMessageFromPBX(voiceMessage){try{const url=this.portalURL+"voicemessages/"+encodeURIComponent(voiceMessage.id)+"?messageDate="+encodeURIComponent(voiceMessage.dateString)+"&messageFrom="+encodeURIComponent(voiceMessage.from),headers=this.authService.getRequestHeader();await fetch(url,{method:"GET",headers:headers}),this.logger.info("[voiceMessageService] getVoiceMessageFromPBX success")}catch(error){throw this.voiceMessageHandleError("getVoiceMessageFromPBX",error)}}async deleteVoiceMessage(voiceMessageId){try{if(this.telephonyService.isSipWise()){const url=this.sipWisePortalURL+"messages/"+voiceMessageId,headers=this.authService.getRequestHeader();await fetch(url,{method:"DELETE",headers:headers})}else{const url=this.portalURL+"voicemessages/"+voiceMessageId,headers=this.authService.getRequestHeader();await fetch(url,{method:"DELETE",headers:headers})}this.logger.info("[voiceMessageService] deleteVoiceMessage success")}catch(error){throw this.voiceMessageHandleError("deleteVoiceMessage",error)}}async deleteAllVoiceMessages(){try{if(this.telephonyService.isSipWise()){const url=this.sipWisePortalURL+"messages",headers=this.authService.getRequestHeader();await fetch(url,{method:"DELETE",headers:headers})}else{const url=this.portalURL+"voicemessages/all",headers=this.authService.getRequestHeader();await fetch(url,{method:"DELETE",headers:headers})}this.logger.info("[voiceMessageService] deleteAllVoiceMessages success")}catch(error){throw this.voiceMessageHandleError("deleteAllVoiceMessages",error)}}async createVoiceMessageFromData(data){try{if(data){const foundidentity=data.foundidentity;let identityFirstName="",identityLastName="";const otherParticipantJid=data.jid,otherParticipantNumber=data.from;if(otherParticipantJid||otherParticipantNumber){const contact=await this.contactService.getOrCreateContact(otherParticipantJid,otherParticipantNumber);if(this.logger.info(`[voiceMessageService] createVoiceMessageFromData otherParticipant jid: ${otherParticipantJid} - Number: ${otherParticipantNumber} => contact retrieved (temp:${contact.temp}`),!otherParticipantJid&&contact.temp){if(foundidentity&&foundidentity.length){const foundFirstName=foundidentity.attr("firstName"),foundLastName=foundidentity.attr("lastName"),foundDisplayName=foundidentity.attr("displayName");identityFirstName=foundFirstName||"",identityLastName=foundLastName||"",""===identityLastName&&""===identityFirstName&&foundDisplayName&&0!==foundDisplayName.length&&foundDisplayName!==otherParticipantNumber&&(identityLastName=foundDisplayName),(identityFirstName.length||identityLastName.length)&&(this.logger.debug("[voiceMessageService] createVoiceMessageFromData  xNames updated from directories for contact "+contact.id),contact.updateName(identityFirstName,identityLastName))}else try{const reload=!0;if(this.centralizedService)try{await this.centralizedService.outlook.updateContactFromOutlookInfos(contact,otherParticipantNumber,reload)?this.logger.debug("[voiceMessageService] createVoiceMessageFromData  xNames updated from outlook for contact "+contact.id):this.logger.debug("[voiceMessageService] createVoiceMessageFromData no update from outlook for contact "+contact.id)}catch(error){this.logger.debug("[voiceMessageService] createVoiceMessageFromData -- No Outlook search available")}}catch(error){}let displayNameisAPhoneNumber=!1;const phoneNumberRegex=/^[0-9A-D #\-\+\*\(\)\./]{1,32}$/;if(this.telephonyService.started){displayNameisAPhoneNumber=contact.displayName.match(phoneNumberRegex)&&this.telephonyService.startAsPhoneNumber(contact.displayName)}displayNameisAPhoneNumber&&contact.phoneProCan&&""!==contact.phoneProCan&&(contact.displayName=contact.phoneProCan)}const duration=Number.parseInt(data.length,10);return new voiceMessage_model_1.VoiceMessage(data.id,contact,"true"===data.unread,duration,data.date,data.from,data.jid)}throw new Error("neither otherParticipantJid nor otherParticipantNumber")}throw new Error("no data")}catch(error){throw this.logger.warn("[voiceMessageService] createVoiceMessageFromData  -- failure --"),error}}async createVoiceMessageFromSipWiseData(data){try{if(data&&data.callerInfo){const callerNumber=data.callerInfo.number,callerDisplayName=data.callerInfo.name||"",callerFirstName=data.callerInfo.firstName||"",callerLastName=data.callerInfo.lastName||"",callerJid=data.callerInfo.jid||"";if(callerJid||callerNumber){let checkPersonalDir=!0,contact=await this.contactService.getOrCreateContact(callerJid,callerNumber);if(this.logger.info(`[voiceMessageService] createVoiceMessageFromSipWiseData caller Jid : ${callerJid} - Number: ${callerNumber} => contact retrieved (temp:${contact.temp}`),callerDisplayName&&(contact.displayName=callerDisplayName,checkPersonalDir=!1),(callerFirstName.length||callerLastName.length)&&(contact.updateName(callerFirstName,callerLastName),checkPersonalDir=!1),contact.temp){const foundContactByNumber=this.contactService.getContactByPhoneNumber(callerNumber);if(foundContactByNumber)contact=foundContactByNumber,checkPersonalDir=!1;else try{const reload=!0;if(this.centralizedService)try{await this.centralizedService.outlook.updateContactFromOutlookInfos(contact,callerNumber,reload)?(this.logger.debug("[voiceMessageService] createVoiceMessageFromSipWiseData  xNames updated from outlook for contact "+contact.id),checkPersonalDir=!1):this.logger.debug("[voiceMessageService] createVoiceMessageFromSipWiseData no update from outlook for contact "+contact.id)}catch(error){this.logger.debug("[voiceMessageService] createVoiceMessageFromSipWiseData -- No Outlook search available")}}catch(error){}let displayNameisAPhoneNumber=!1;const phoneNumberRegex=/^[0-9A-D #\-\+\*\(\)\./]{1,32}$/;if(this.telephonyService.started){displayNameisAPhoneNumber=contact.displayName.match(phoneNumberRegex)&&this.telephonyService.startAsPhoneNumber(contact.displayName)}displayNameisAPhoneNumber&&contact.phoneProCan&&""!==contact.phoneProCan&&(contact.displayName=contact.phoneProCan)}const duration=Number.parseInt(data.duration,10),voiceMsg=new voiceMessage_model_1.VoiceMessage(data.id,contact,!data.read,duration,data.date,data.callerInfo.number,data.callerInfo.jid);if(checkPersonalDir){const persoDirContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(callerNumber);persoDirContact&&(voiceMsg.contact.displayName=persoDirContact.displayName,voiceMsg.directoryContactId=persoDirContact.id)}return voiceMsg}throw new Error("neither otherParticipantJid nor otherParticipantNumber")}throw new Error("no data")}catch(error){throw this.logger.warn("[voiceMessageService] createVoiceMessageFromSipWiseData  -- failure --"+error.message),error}}voiceMessageHandleError(methodName,err){let errorMessage=methodName+" -- failure -- ";return errorMessage+=err.data?err.data.errorDetails:"Server failure",this.logger.error("[voiceMessageService] "+errorMessage),new Error(errorMessage)}voiceMessageErrorHandler(methodName,reject,err){err.data?this.logger.error("[voiceMessageService] "+methodName+" -- failure -- "+err.data.errorDetails):this.logger.error("[voiceMessageService] "+methodName+" -- failure -- Server failure"),reject(err)}async updateVoiceMessage(voiceMessageId,isRead){try{if(this.telephonyService.isSipWise()){const url=this.sipWisePortalURL+"messages/"+encodeURIComponent(voiceMessageId),headers=this.authService.getPostHeader(),body=JSON.stringify({read:isRead});await fetch(url,{method:"PUT",headers:headers,body:body}),this.logger.info("[voiceMessageService] updateVoiceMessage success")}}catch(error){throw this.voiceMessageHandleError("updateVoiceMessage",error)}}async getVoiceMailsHuntingGroupList(groupId){try{this.voiceMails=[];const url=this.sipWisePortalURL+"groups/"+groupId+"/messages?sortOrder=-1",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const voiceMailsData=(await responseData.json()).data;return this.voiceMails=await Promise.all(voiceMailsData.map(async voiceMailData=>await this.createVoiceMessageFromSipWiseData(voiceMailData).catch(()=>{}))),this.fileStorageService.reinitInternal(),this.logger.info("[voiceMessageService] getVoiceMailsHuntingGroupList success - Messages number : "+this.voiceMails.length),this.voiceMails}catch(error){let errorMessage="getVoiceMailsList failure -- ";throw errorMessage+=error.status?error.status:error.message,this.logger.error("[voiceMessageService] "+errorMessage),new Error(errorMessage)}}async getVoiceMailsCounters(groupId){try{const counters={unread:0,total:0},url=this.sipWisePortalURL+"groups/"+groupId+"/messages",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const response=await responseData.json();return counters.unread=response.new,counters.total=response.total,this.logger.info("[voiceMessageService] getVoiceMailsCounters success - VM unread : "+this.voiceMailsHuntingGroupCounters.unread+" VM total :"+this.voiceMailsHuntingGroupCounters.total),counters}catch(error){let errorMessage="getVoiceMailsCounters failure -- ";throw errorMessage+=error.status?error.status:error.message,this.logger.error("[voiceMessageService] "+errorMessage),new Error(errorMessage)}}async deleteVoiceMailHuntingGroup(groupId,voiceMailId){try{const url=this.sipWisePortalURL+"groups/"+groupId+"/messages/"+voiceMailId,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[voiceMessageService] deleteVoiceMailHuntingGroup success")}catch(error){throw this.voiceMessageHandleError("deleteVoiceMailHuntingGroup",error)}}}exports.VoiceMessageService=VoiceMessageService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),main_service_1=__webpack_require__(15),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),event_service_1=__webpack_require__(11),errorHelper_service_1=__webpack_require__(12),profile_service_1=__webpack_require__(13);class BotData{constructor(){this.id=null,this.name=null,this.jid=null,this.avatarId=null,this.avatarUrl=null,this.lastAvatarUpdateDate=null,this.capabilities=[],this.isRainbowSupportBot=!1}static createFromData(data){const bot=new BotData;return bot.id=data.id,bot.name=data.name,bot.jid=data.jid,bot.avatarId=data.avatarId||data.id,bot.lastAvatarUpdateDate=data.lastAvatarUpdateDate,bot.capabilities=data.capabilities,bot.isRainbowSupportBot=data.isRainbowSupportBot,bot}}exports.BotData=BotData;class AbstractBotService{}exports.AbstractBotService=AbstractBotService;class BotService extends AbstractBotService{constructor(){super(),this.authService=auth_service_1.AuthService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.avatarChangeEventHandler=null,this.botsList=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.botService||(win.rainbow.botService=new BotService),win.rainbow.botService}async start(){try{if(this.logger.info("[botService] === STARTING ==="),this.init(),this.startListeners(),!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.REPORT_A_PROBLEM)){const supportBot=await this.getEmilyBot();this.storeEmilyBot(supportBot)}this.logger.info("[botService] === STARTED ===")}catch(error){this.logger.error("[botService] === STARTING FAILURE === "+error.message)}}async stop(){this.botsList=[],this.avatarChangeEventHandler&&(this.avatarChangeEventHandler(),this.avatarChangeEventHandler=null),this.logger.info("[botService] === STOPPED ===")}init(){this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/"}startListeners(){this.avatarChangeEventHandler&&(this.avatarChangeEventHandler(),this.avatarChangeEventHandler=null),this.avatarChangeEventHandler=this.eventService.subscribe("ON_COMPANY_SUPPORT_AVATAR_CHANGE_EVENT",(_event,supportAvatarInfo)=>this.onSupportAvatarChange(_event,supportAvatarInfo))}async onSupportAvatarChange(__event,supportAvatarInfo){try{if(this.logger.info("[botService] Emily avatar has been changed"),supportAvatarInfo.companyId===this.contactService.userContact.company.id&&!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.REPORT_A_PROBLEM)){const supportBot=await this.getEmilyBot();this.storeEmilyBot(supportBot)}}catch(error){this.logger.warn("[botService] Impossible to update Emily - "+error.stack||!1)}}async getBots(options=null){try{const urlOptions={};options?(options.format&&"string"==typeof options.format&&options.format.length?urlOptions.format=options.format:urlOptions.format="full",options.limit&&(urlOptions.limit=options.limit),options.offset&&(urlOptions.offset=options.offset),options.sortField&&(urlOptions.sortField=options.sortField),!options.sortOrder||"-1"!==options.sortOrder&&"1"!==options.sortOrder||(urlOptions.sortOrder=options.sortOrder)):urlOptions.format="full";const urlParams=new URLSearchParams(urlOptions).toString(),url=new URL(this.portalURL+"bots"),headers=this.authService.getRequestHeader();url.search=urlParams;const responseData=await fetch(url.toString(),{method:"GET",headers:headers});if(!responseData.ok)throw responseData;this.logger.info("[botService] getBots: Get the list of bot services -- success from server");return(await responseData.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getBots");throw this.logger.error(`[botService] getBots failure: ${errorInfo.error.errorDetails} with status ${errorInfo.error.status}`),errorInfo.error}}async getBotById(botId){try{if(!botId)throw new Error("Missing botId in the request");const url=`${this.portalURL}bots/${botId}`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;this.logger.info("[botService] getBotById success for "+botId);return(await responseData.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getBotById");throw this.logger.error("[botService] getBotById failure: "+errorInfo.error.message),errorInfo.error}}async getBotContactByJid(jid){try{if(!jid)throw new Error("Missing bot jid in the request");let botIndex=this.botsList.findIndex(entry=>entry.jid===jid);if(-1!==botIndex){this.logger.info(`[botService] getBotContactByJid - Data for bot jid "${jid}" found in cache`);const foundBot=this.botsList[botIndex];return this.contactService.getContactByJid(foundBot.jid)}const allBots=await this.getBots();if(botIndex=allBots.findIndex(entry=>entry.jid===jid),-1!==botIndex){this.logger.info(`[botService] getBotContactByJid - Data for bot jid "${jid}" get from server`);const foundBot=allBots[botIndex];return this.botsList.unshift(foundBot),this.contactService.createBotContact(foundBot.jid,foundBot.name,foundBot.id,foundBot.avatarUrl,foundBot.capabilities,foundBot.isRainbowSupportBot)}throw new Error(`No bot with jid ${jid} found in cache or server`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getBotContactByJid");throw this.logger.error("[botService] "+errorInfo.error.message),errorInfo.error}}async getEmilyBot(){try{const url=this.portalURL+"bots/rainbow-support",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;this.logger.info("[botService] Get support bot service (Emily) success from server");return(await responseData.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getEmilyBot");throw this.logger.error(`[botService] getEmilyBot failure: ${errorInfo.error.errorDetails} with status ${errorInfo.error.status}`),errorInfo.error}}storeEmilyBot(bot){const emilyIndex=this.botsList.findIndex(entry=>!0===entry.isRainbowSupportBot);-1!==emilyIndex&&this.botsList.splice(emilyIndex,1);const emilyBot=BotData.createFromData(bot);return emilyBot.avatarUrl=this.getBotAvatarUrl(emilyBot.avatarId,emilyBot.lastAvatarUpdateDate),this.botsList.unshift(emilyBot),this.contactService.createBotContact(emilyBot.jid,emilyBot.name,emilyBot.id,emilyBot.avatarUrl,emilyBot.capabilities,!0),this.logger.info("[botService] storeEmilyBot - Emily bot data stored in cache and contact updated"),emilyBot}async getEmily(){if(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.REPORT_A_PROBLEM))return null;const foundEmily=this.botsList.filter(bot=>!0===bot.isRainbowSupportBot);if(0===foundEmily.length){this.logger.error("[botService] getEmily failure: Unexpected behaviour -- Emily bot not found in cache !");const supportBot=await this.getEmilyBot();return this.storeEmilyBot(supportBot)}return foundEmily[0]}getBotAvatarImage(avatarId,lastAvatarUpdateDate){return new Promise((resolve,reject)=>{this.logger.info("[botService] getBotAvatarImage");const image=new Image;let nbErrors=0;image.onload=()=>{this.logger.info("[botService] Load bot avatar "+avatarId+" lastAvatarUpdateDate "+lastAvatarUpdateDate+" success"),resolve(image)},image.onerror=()=>{nbErrors++,this.logger.warn("[botService] Load bot avatar "+avatarId+" lastAvatarUpdateDate "+lastAvatarUpdateDate+" failure"),1===nbErrors?(this.logger.warn("[botService] Fallback to default emily avatar"),image.src="/assets/skins/rainbow/images/conversation/icon_headset.png"):reject(new Error("No image found"))},image.src=this.getBotAvatarUrl(avatarId,lastAvatarUpdateDate)})}getBotAvatarUrl(botId,lastAvatarUpdateDate){let imgSrc=config.webservices.protocol+"://"+config.webservices.currentServer+"/api/avatar/"+botId+"?size=120";return imgSrc+=lastAvatarUpdateDate?"&update="+main_service_1.MainService.MD5(lastAvatarUpdateDate):"&update="+Date.now(),imgSrc}}exports.BotService=BotService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),auth_service_1=__webpack_require__(8),directoryContact_model_1=__webpack_require__(142),event_service_1=__webpack_require__(11),profile_service_1=__webpack_require__(13),contact_service_1=__webpack_require__(6),country_service_1=__webpack_require__(114),company_model_1=__webpack_require__(24),userInfo_service_1=__webpack_require__(58),main_service_1=__webpack_require__(15);var CompanyDirectoryEvent;!function(CompanyDirectoryEvent){CompanyDirectoryEvent.ADMIN_DIRECTORY_CHANGE="ADMIN_DIRECTORY_CHANGE",CompanyDirectoryEvent.ON_COMPANY_BANNER_UPDATED="ON_COMPANY_BANNER_UPDATED"}(CompanyDirectoryEvent=exports.CompanyDirectoryEvent||(exports.CompanyDirectoryEvent={}));class CompanyDirectoryService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.countryService=country_service_1.CountryService.getInstance(),this.userInfoService=userInfo_service_1.UserInfoService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.companies=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.companyDirectoryService||(win.rainbow.companyDirectoryService=new CompanyDirectoryService),win.rainbow.companyDirectoryService}async getDirectoryContacts(companyId,page,pageSize,searchPattern,searchBy,format="full"){try{let url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries?view=company&type=all&format=${format}&companyId=${companyId}&limit=${pageSize}`;if(page&&(url+="&offset="+pageSize*(page-1)),searchPattern)switch(searchBy){case"phoneNumbers":case"tags":url+="&"+searchBy+"="+encodeURIComponent(searchPattern);break;case"name":default:url+="&name="+encodeURIComponent(searchPattern)}const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info("[CompanyDirectoryService] getDirectoryContacts success (found "+responseData.total+" contact(s))");const contactsData=responseData.data,contacts=[];return contactsData.forEach(contactData=>{const contact=directoryContact_model_1.DirectoryContact.createFromData(contactData);contacts.push(contact)}),{contacts:contacts,limit:responseData.limit,offset:responseData.offset,total:responseData.total}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getDirectoryContacts");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async createDirectoryContact(entry){try{if(!entry.companyId)throw new Error("Missing mandatory parameter 'companyId");const url=config.restServerUrl+"/api/rainbow/directory/v1.0/"+"entries",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(entry)});if(!response.ok)throw response;const responseData=await response.json(),contact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data);return this.logger.info("[CompanyDirectoryService] createDirectoryContact success"),this.eventService.publish(CompanyDirectoryEvent.ADMIN_DIRECTORY_CHANGE,contact),contact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createDirectoryContact");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async getDirectoryContact(id,format="full"){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/${id}?format=${format}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info("[CompanyDirectoryService] getDirectoryContact success");return directoryContact_model_1.DirectoryContact.createFromData(responseData.data)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getDirectoryContact");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async updateDirectoryContact(entry){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/${entry.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(entry)});if(!response.ok)throw response;const responseData=await response.json(),contact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data);return this.logger.info("[CompanyDirectoryService] createDirectoryContact success"),this.eventService.publish(CompanyDirectoryEvent.ADMIN_DIRECTORY_CHANGE,contact),contact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateDirectoryContact");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async deleteDirectoryContact(id){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/${id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return this.logger.info(`[CompanyDirectoryService] deleteDirectoryContact of ${id} success`),void this.eventService.publish(CompanyDirectoryEvent.ADMIN_DIRECTORY_CHANGE)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteDirectoryContact");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async getTags(companyId){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/tags${companyId?"?companyId="+companyId:""}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[CompanyDirectoryService] getTags success"),responseData.data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getTags");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async getTagsStats(companyId){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/tags/stats${companyId?"?companyId="+companyId:""}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const tagsStats=(await response.json()).data.stats||[];return this.logger.info("[CompanyDirectoryService] getTagsStats success(find "+tagsStats.length+"tags(s))"),tagsStats}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getTagsStats");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async renameTag(tag,newTagName,companyId){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/tags?tag=${encodeURIComponent(tag)}${companyId?"&companyId="+companyId:""}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({newTagName:newTagName})});if(!response.ok)throw response;const responseData=await response.json();return void this.logger.info("[CompanyDirectoryService] renameTag success => old tag: "+tag+" => new tag: "+newTagName+": found "+responseData.data.found+" occurence(s)")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"renameTag");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async deleteTag(tag,companyId){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/tags?tag=${encodeURIComponent(tag)}${companyId?"&companyId="+companyId:""}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[CompanyDirectoryService] deleteTag success (tag "+tag+": found "+responseData.data.found+" occurence(s)"),void this.eventService.publish(CompanyDirectoryEvent.ADMIN_DIRECTORY_CHANGE)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteTag");throw this.logger.error("[CompanyDirectoryService] "+errorInfo.message),errorInfo.error}}async search(searchPattern,companyId){try{const portalURL=config.restServerUrl+"/api/rainbow/directory/v1.0/",searchByTag=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.SEARCH_BY_TAGS),url=`${portalURL}entries?view=company&type=all&format=full&${searchByTag?"search=":"name="}${encodeURIComponent(searchPattern)}${companyId?"&companyId="+companyId:""}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json(),companyContacts=responseData.data.map(contactData=>this.createAndUpdateContact(contactData));return this.logger.info("[CompanyDirectoryService] search success "+companyContacts.length),companyContacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"search");return this.logger.error("[CompanyDirectoryService] "+errorInfo.message),[]}}createAndUpdateContact(contactData){const contact=this.contactService.createDirectoryContact(contactData.id,!1);return contact.companyDirectoryFlag=!0,contact.personalDirectoryFlag=!1,contact.mobilePhones=contactData.mobilePhoneNumbers,contact.businessPhones=contactData.workPhoneNumbers,contact.otherPhoneNumbers=contactData.otherPhoneNumbers,contact.email=contactData.eMail,contact.businessCompanyId=contactData.companyId,contact.companyName=contactData.companyName,contact.department=contactData.department,contact.jobTitle=contactData.jobTitle,contact.updateName(contactData.firstName,contactData.lastName),contact.getAvatar(),contact.note1=contactData.custom1,contact.note2=contactData.custom2,contact.tags=contactData.tags?contactData.tags:void 0,contact.city=contactData.city,contact.postalCode=contactData.postalCode,contact.street=contactData.street,contact.state=this.countryService.getStateName(contactData.country,contactData.state),contact.country=this.countryService.getCountryName(contactData.country),contact}async searchCompanies(searchPattern,companyId){try{const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries?view=company&format=full&companyName=${encodeURIComponent(searchPattern)}${companyId?"&companyId="+companyId:""}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json(),companies=responseData.data.map(directoryCompanyData=>{const company=company_model_1.Company.create(directoryCompanyData.id,directoryCompanyData.companyName);return company.country=directoryCompanyData.country,this.getCompanyLogo(company),this.getCompanyBanner(company),this.companies[company.id]=company,company});return this.logger.info("[CompanyDirectoryService] searchCompanies success"),companies}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchCompanies");return this.logger.error("[CompanyDirectoryService] "+errorInfo.message),[]}}async getCompanyLogo(company){try{const companyColor=this.userInfoService.computeUserColor(company.name),companyInitials=company.name.substr(0,1);return company.logo=this.userInfoService.getAvatarImage(company.id,companyInitials,companyColor.color,130,company.lastAvatarUpdateDate),this.eventService.publish("ON_COMPANY_LOGO_UPDATED",company.id),this.logger.info("[CompanyDirectoryService] - getCompanyLogo - "+company.getNameForLogs()+" - success"),company.sendChangeEvent("logo"),company}catch(error){throw new Error("getCompanyLogo -- FAILURE -- "+error.message)}}async getCompanyBanner(company){return new Promise(resolve=>{const image=new Image;image.onload=()=>{company.banner=image,this.eventService.publish(CompanyDirectoryEvent.ON_COMPANY_BANNER_UPDATED,company.id),this.logger.info("[CompanyDirectoryService] - getCompanyBanner - "+company.getNameForLogs()+" - success"),resolve(company)},image.onerror=()=>{this.logger.error("[CompanyDirectoryService] Load banner for "+company.getNameForLogs()+" failure"),resolve(company)};let imgSrc=this.authService.fromSDK?null:"/cacheV2/images/company-banner-01.svg";if(company.lastBannerUpdateDate){imgSrc=config.webservices.protocol+"://"+config.webservices.currentServer+"/api/banner/"+company.id+"?size=831",imgSrc+="&update="+main_service_1.MainService.MD5(company.lastBannerUpdateDate)}imgSrc?image.src=imgSrc:resolve(company)})}getCompanyById(companyId){if(!companyId)throw new Error("missing companyId");const company=this.companies[companyId];return this.logger.info("[CompanyDirectoryService] getCompanyById (cache) "+companyId+" - success"),company}async getAllDirectoryContacts(companyId){try{const limit=1e3,firstResponse=await this.getDirectoryContacts(companyId,1,limit),result=firstResponse;if(firstResponse.total>limit){const totalPages=Math.ceil(firstResponse.total/limit);let pages=[...Array(totalPages-1)];pages=pages.map((__unused,index)=>index+2);const chunks=[];for(;pages.length>0;)chunks.push(pages.splice(0,5));await chunks.reduce((promiseChain,requests)=>promiseChain.then(()=>{const promisesArray=requests.map(page=>this.getDirectoryContacts(companyId,page,limit).then(data=>{result.contacts=result.contacts.concat(data.contacts),result.limit+=data.limit}));return Promise.all(promisesArray)}),Promise.resolve())}return result}catch(error){throw this.logger.error("[CompanyDirectoryService] getAllDirectoryContacts - "+error.message),error}}async buildDirectoryCsvBlob(companyId){try{this.logger.info("[CompanyDirectoryService] === buildDirectoryCsvBlob ===");const result=await this.getAllDirectoryContacts(companyId),maxWorkPhoneNumbers=Math.max(1,result.contacts.reduce((max,contact)=>Math.max(max,contact.workPhoneNumbers?contact.workPhoneNumbers.length:0),0)),maxMobilePhoneNumbers=Math.max(1,result.contacts.reduce((max,contact)=>Math.max(max,contact.mobilePhoneNumbers?contact.mobilePhoneNumbers.length:0),0)),maxOtherPhoneNumbers=Math.max(1,result.contacts.reduce((max,contact)=>Math.max(max,contact.otherPhoneNumbers?contact.otherPhoneNumbers.length:0),0)),csvWorkPhonesColumns=[...new Array(maxWorkPhoneNumbers)].map((__val,i)=>"workPhoneNumber"+i),csvWorkPhonesExtraSeparators=[...new Array(maxWorkPhoneNumbers)].map(()=>";"),csvMobilePhonesColumns=[...new Array(maxMobilePhoneNumbers)].map((__val,i)=>"mobilePhoneNumber"+i),csvMobilePhonesExtraSeparators=[...new Array(maxMobilePhoneNumbers)].map(()=>";"),csvOtherPhonesColumns=[...new Array(maxOtherPhoneNumbers)].map((__val,i)=>"otherPhoneNumber"+i),csvOtherPhonesExtraSeparators=[...new Array(maxOtherPhoneNumbers)].map(()=>";"),csvDirectoryLines=[];csvDirectoryLines.push("firstName;lastName;companyName;department;street;city;postalCode;state;country;"+csvWorkPhonesColumns.join(";")+";"+csvMobilePhonesColumns.join(";")+";"+csvOtherPhonesColumns.join(";")+";jobTitle;eMail;tag0;tag1;tag2;tag3;tag4;custom1;custom2"),result.contacts.forEach(contact=>{let phoneNumbers,extraSeparators,contactLine="";contactLine+=contact.firstName?contact.firstName:"",contactLine+=";",contactLine+=contact.lastName?contact.lastName:"",contactLine+=";",contactLine+=contact.companyName?contact.companyName:"",contactLine+=";",contactLine+=contact.department?contact.department:"",contactLine+=";",contactLine+=contact.street?contact.street:"",contactLine+=";",contactLine+=contact.city?contact.city:"",contactLine+=";",contactLine+=contact.postalCode?contact.postalCode:"",contactLine+=";",contactLine+=contact.state?contact.state:"",contactLine+=";",contactLine+=contact.country?contact.country:"",phoneNumbers=contact.workPhoneNumbers&&contact.workPhoneNumbers.length>0?contact.workPhoneNumbers:[""],contactLine+=";",contactLine+=phoneNumbers.map(number=>number).join(";"),extraSeparators=csvWorkPhonesExtraSeparators.slice(phoneNumbers.length),contactLine+=extraSeparators.join(""),phoneNumbers=contact.mobilePhoneNumbers&&contact.mobilePhoneNumbers.length>0?contact.mobilePhoneNumbers:[""],contactLine+=";",contactLine+=phoneNumbers.map(number=>number).join(";"),extraSeparators=csvMobilePhonesExtraSeparators.slice(phoneNumbers.length),contactLine+=extraSeparators.join(""),phoneNumbers=contact.otherPhoneNumbers&&contact.otherPhoneNumbers.length>0?contact.otherPhoneNumbers:[""],contactLine+=";",contactLine+=phoneNumbers.map(number=>number).join(";"),extraSeparators=csvOtherPhonesExtraSeparators.slice(phoneNumbers.length),contactLine+=extraSeparators.join(""),contactLine+=";",contactLine+=contact.jobTitle?contact.jobTitle:"",contactLine+=";",contactLine+=contact.eMail?contact.eMail:"",contactLine+=";",contactLine+=contact.tags&&contact.tags.length>0?contact.tags[0]:"",contactLine+=";",contactLine+=contact.tags&&contact.tags.length>1?contact.tags[1]:"",contactLine+=";",contactLine+=contact.tags&&contact.tags.length>2?contact.tags[2]:"",contactLine+=";",contactLine+=contact.tags&&contact.tags.length>3?contact.tags[3]:"",contactLine+=";",contactLine+=contact.tags&&contact.tags.length>4?contact.tags[4]:"",contactLine+=";",contactLine+=contact.custom1?contact.custom1:"",contactLine+=";",contactLine+=contact.custom2?contact.custom2:"",csvDirectoryLines.push(contactLine)});return new Blob([csvDirectoryLines.join("\r\n")],{type:"text/csv; charset=utf-8"})}catch(error){throw this.logger.error("[CompanyDirectoryService] buildDirectoryCsvBlob - "+error.message),error}}async exportDirectoryCsvFile(companyId){try{this.logger.info("[CompanyDirectoryService] === exportDirectoryCsvFile ===");const csvFilename="directory_"+moment().format("YYYY-MM-DD_HH-mm")+".csv";return{fileBlob:await this.buildDirectoryCsvBlob(companyId),fileName:csvFilename}}catch(error){throw this.logger.error("[CompanyDirectoryService] exportDirectoryCsvFile - "+error.message),error}}async getDirectoryContactById(id,forceServer=!1){try{let directoryContact=null;if(!forceServer&&(directoryContact=this.contactService.contacts[id],directoryContact))return directoryContact;const url=`${config.restServerUrl+"/api/rainbow/directory/v1.0/"}entries/${id}?format=full`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[CompanyDirectoryService] getDirectoryContactById success"),directoryContact=this.createAndUpdateDirectoryContact(responseData.data),directoryContact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getDirectoryContactById");return this.logger.error("[CompanyDirectoryService] getDirectoryContactById -- "+errorInfo.message),null}}createAndUpdateDirectoryContact(contactData){const contact=this.contactService.createDirectoryContact(contactData.id,!1);return"personal"===contactData.directoryType?(contact.companyDirectoryFlag=!1,contact.personalDirectoryFlag=!0):(contact.companyDirectoryFlag=!0,contact.personalDirectoryFlag=!1),contact.mobilePhones=contactData.mobilePhoneNumbers,contact.businessPhones=contactData.workPhoneNumbers,contact.otherPhoneNumbers=contactData.otherPhoneNumbers,contact.email=contactData.eMail,"company"===contactData.directoryType&&(contact.businessCompanyId=contactData.companyId),contact.companyName=contactData.companyName,contact.department=contactData.department,contact.jobTitle=contactData.jobTitle,contact.updateName(contactData.firstName,contactData.lastName),contact.note1=contactData.custom1,contact.note2=contactData.custom2,contact.tags=contactData.tags?contactData.tags:[],contact.city=contactData.city,contact.postalCode=contactData.postalCode,contact.street=contactData.street,"personal"===contactData.directoryType?(contact.country=contactData.country,contact.state=contactData.state):(contact.state=this.countryService.getStateName(contactData.country,contactData.state),contact.country=this.countryService.getCountryName(contactData.country)),contact}}exports.CompanyDirectoryService=CompanyDirectoryService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),profile_service_1=__webpack_require__(13),xmpp_service_1=__webpack_require__(9),event_model_1=__webpack_require__(19),contact_service_1=__webpack_require__(6),errorHelper_service_1=__webpack_require__(12),xmlParser_1=__webpack_require__(139),event_service_1=__webpack_require__(11);class CCDAgentService{constructor(){this.CCD_AGENT_NAMESPACE="urn:xmpp:pbxagent:ccdfeatures:1",this.ccdAgentHandlerRef=null,this.eventNames=[],this.groupId="",this.password="",this.passwordNeeded=!0,this.agentId="",this.passwordPresence=!1,this.currentGroupId="",this.logActivated=!1,this.wrapUpActivated=!1,this.withdrawalActivated=!1,this.pauseActivated=!1,this.state="",this.reason="",this.value={agentId:this.agentId,passwordPresence:this.passwordPresence,currentGroupId:this.currentGroupId,logActivated:this.logActivated,wrapUpActivated:this.wrapUpActivated,withdrawalActivated:this.withdrawalActivated,pauseActivated:this.pauseActivated,reason:this.reason,state:this.state},this.eventUnregisters=[],this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.onCCDAgentStatusMessageReceived=async stanza=>{const stanzaElem=xmlParser_1.default(stanza);if(stanzaElem.find("acdagent").length>0){const ccdAgentStatusElem=stanzaElem.find("status");this.agentId=ccdAgentStatusElem.attr("agentId"),this.passwordPresence="true"===ccdAgentStatusElem.attr("passwordPresence"),this.currentGroupId=ccdAgentStatusElem.attr("currentGroupId"),this.state=ccdAgentStatusElem.attr("state"),this.reason=ccdAgentStatusElem.attr("reason"),this.value.agentId=this.agentId,this.value.passwordPresence=this.passwordPresence,this.value.currentGroupId=this.currentGroupId,this.value.logActivated=this.logActivated="Null"!==this.state,this.value.wrapUpActivated=this.wrapUpActivated="Work After Call"===this.state||"Not Ready Work After Call"===this.state,this.value.withdrawalActivated=this.withdrawalActivated="Not Ready"===this.state||"Not Ready Work After Call"===this.state,this.value.pauseActivated=this.pauseActivated="Not Ready Pause"===this.state,this.value.state=this.state,this.value.reason=this.reason,this.logger.info("ccdAgentStatus event received  -- state: "+this.state+" agentId: "+this.agentId+" passwordPresence: "+this.passwordPresence+" currentGroupID:  "+this.currentGroupId+" logActivated: "+this.logActivated+" wrapUpActivated: "+this.wrapUpActivated+" withdrawalActivated: "+this.withdrawalActivated+" pauseActivated: "+this.pauseActivated+" reason: "+this.reason),this.rxSubject.next(event_model_1.RBEvent.create("ON_CCD_UPDATE_EVENT",this.value))}return!0}}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.ccdAgentService||(win.rainbow.ccdAgentService=new CCDAgentService),win.rainbow.ccdAgentService}async start(){this.logger.info("[ccdAgentService] === STARTING ===");const isCCDAgentProfilEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CCD_AGENT),isCCDAgentContactEnabled=this.contactService.userContact.isCCDAgentEnabled,isCCDAgentEnabled=isCCDAgentContactEnabled&&isCCDAgentProfilEnabled;this.rxSubject=new rxjs_1.Subject,this.logger.info("[ccdAgentService] contact is CCDAgent : "+(isCCDAgentContactEnabled?"true":"false")+", ccdAgent service is activated for this user: "+(isCCDAgentEnabled?"true":"false")),isCCDAgentEnabled?(this.connect(),this.attachHandlers(),this.eventUnregisters.push(this.eventService.subscribe("ON_TELEPHONY_STATUS_CHANGED_EVENT",(__event,value)=>{"started"===value&&this.getCCDAgentStatus()})),this.logger.info("=== STARTED ===")):this.logger.info("[ccdAgentService] === Start skipped - ccdAgent : false")}async connect(){try{await this.getCCDAgentStatus()}catch(error){this.logger.error("[ccdAgentService] connect -- Failure -- "+error.message)}}async reconnect(){try{this.logger.info("[ccdAgentService] reconnect"),this.attachHandlers()}catch(error){this.logger.error("[ccdAgentService] reconnect -- failure -- "+error.message)}}async stop(){this.logger.info("[ccdAgentService] === STOPPING ==="),this.xmppManagementHandler&&(this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=null),this.eventUnregisters.forEach(eventUnregister=>{eventUnregister()}),this.eventUnregisters=[],this.logger.info("=== STOPPED ===")}subscribe(observer){return this.rxSubject.subscribe(observer)}async getCCDAgentStatus(){try{const url=config.restServerUrl+"/api/rainbow/telephony/v1.0/acd/status",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const response=await responseData.json(),data=response.data;return this.agentId=this.value.agentId=data.agentId,this.passwordPresence=this.value.passwordPresence="true"===data.passwordPresence,this.currentGroupId=this.value.currentGroupId=data.currentGroupId,this.logActivated=this.value.logActivated="Null"!==data.state,this.wrapUpActivated=this.value.wrapUpActivated="Work After Call"===data.state||"Not Ready Work After Call"===data.state,this.withdrawalActivated=this.value.withdrawalActivated="Not Ready"===data.state||"Not Ready Work After Call"===data.state,this.pauseActivated=this.value.pauseActivated="Not Ready Pause"===data.state,this.reason=this.value.reason=data.reason,this.logger.info("[CCDAgentService] ccdAgentStatus -- SUCCESS -- State: "+data.state+" agentId: "+this.agentId+" PasswordPresence: "+this.passwordPresence+" Current Group: "+this.currentGroupId+" logActivated: "+this.logActivated+" wrapUpActivated: "+this.wrapUpActivated+" withdrawalActivated: "+this.withdrawalActivated+" pauseActivated: "+this.pauseActivated+" reason: "+this.reason),this.rxSubject.next(event_model_1.RBEvent.create("ON_CCD_UPDATE_EVENT",this.value)),response.result}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCCDAgentStatus");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}async getCCDGroupStatus(groupId){try{const url=`${config.restServerUrl}/api/rainbow/telephony/v1.0/acd/status/group/${groupId}`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const data=(await responseData.json()).data;return this.logger.info("[CCDAgentService] getCCDGroupStatus -- SUCCESS -- groupId: "+data.groupId+" reasonsize: "+data.reasonsSize),data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCCDGroupStatus");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}async ccdAgentLogOn(endpointTel,agentId,password,groupId,nomadicDestination,nomadic,analyticsMode=""){try{const url=config.restServerUrl+"/api/rainbow/telephony/v1.0/acd/logon?analyticsMode="+analyticsMode,headers=this.authService.getPostHeader();this.logger.info("[CCDAgentService] ccdAgentLogOn -- endpointTel : "+endpointTel+", nomadic : "+nomadic+", agentId : "+agentId+", groupId : "+groupId);const body={endpointTel:endpointTel,agentId:agentId,password:password,groupId:groupId,nomadicDestination:nomadicDestination,nomadic:nomadic},responseData=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.logger.info("[CCDAgentService] ccdAgentLogOn -- SUCCESS"),this.groupId=groupId,this.password=password,""===this.password&&(this.passwordNeeded=!1),response.result}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"ccdAgentLogOn");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}async ccdAgentLogOff(endpointTel,agentId,password,groupId){try{const url=config.restServerUrl+"/api/rainbow/telephony/v1.0/acd/logoff",headers=this.authService.getPostHeader(),body={endpointTel:endpointTel,agentId:agentId,password:password,groupId:groupId},responseData=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.logger.info("[CCDAgentService] ccdAgentLogOff -- SUCCESS"),this.groupId="",this.password="",this.passwordNeeded=!0,response.result}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"ccdAgentLogOff");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}async ccdAgentWrapup(agentId,groupId,password,state){try{const url=config.restServerUrl+"/api/rainbow/telephony/v1.0/acd/wrapup",headers=this.authService.getPostHeader(),body={agentId:agentId,password:password,groupId:groupId,state:state},responseData=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.logger.info("[CCDAgentService] ccdAgentLogWrapup "+state+" -- SUCCESS"),""===this.password&&(this.passwordNeeded=!1),response.result}catch(error){this.CCDAgentStatus();const errorInfo=await this.errorHelperService.getErrorInfo(error,"ccdAgentWrapup");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}async ccdAgentWithdrawal(agentId,groupId,state,reason="1"){try{const url=config.restServerUrl+"/api/rainbow/telephony/v1.0/acd/withdrawal",headers=this.authService.getPostHeader(),body={agentId:agentId,groupId:groupId,state:state,reason:reason},responseData=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.logger.info("[CCDAgentService] ccdAgentLogWithdrawal "+state+" -- SUCCESS"),""===this.password&&(this.passwordNeeded=!1),response.result}catch(error){this.CCDAgentStatus();const errorInfo=await this.errorHelperService.getErrorInfo(error,"ccdAgentWithdrawal");throw this.logger.error("[CCDAgentService] "+errorInfo.message),errorInfo.error}}attachHandlers(){this.logger.info("[ccdAgentService] attachHandlers"),this.ccdAgentHandlerRef&&(this.xmppService.deleteHandler(this.ccdAgentHandlerRef),this.ccdAgentHandlerRef=null),this.ccdAgentHandlerRef=this.xmppService.addHandler(stanza=>this.onCCDAgentStatusMessageReceived(stanza),null,"message",null)}getAgentId(){return this.agentId}getCCDAgentGroupId(){return this.groupId}getCCDAgentPasswordPresence(){return this.passwordPresence}isCCDAgentLogActivated(){return this.logActivated}isCCDAgentWrapUpActivated(){return this.wrapUpActivated}isCCDAgentWithdrawalActivated(){return this.withdrawalActivated}isCCDAgentPauseActivated(){return this.pauseActivated}isPasswordNeeded(){return this.passwordNeeded}CCDAgentState(){return this.state}getCurrentCCDAgentStatus(){return this.value}CCDAgentStatus(){this.rxSubject.next(event_model_1.RBEvent.create("ON_CCD_UPDATE_EVENT",this.value))}}exports.CCDAgentService=CCDAgentService},function(module,__webpack_exports__,__webpack_require__){"use strict";var Observable=__webpack_require__(5),Subscription=__webpack_require__(10),symbol_observable=__webpack_require__(41);var scheduleArray=__webpack_require__(91),symbol_iterator=__webpack_require__(36);var isPromise=__webpack_require__(131),isArrayLike=__webpack_require__(130);function scheduled(input,scheduler){if(null!=input){if(function(input){return input&&"function"==typeof input[symbol_observable.a]}(input))return function(input,scheduler){return new Observable.a((function(subscriber){var sub=new Subscription.a;return sub.add(scheduler.schedule((function(){var observable=input[symbol_observable.a]();sub.add(observable.subscribe({next:function(value){sub.add(scheduler.schedule((function(){return subscriber.next(value)})))},error:function(err){sub.add(scheduler.schedule((function(){return subscriber.error(err)})))},complete:function(){sub.add(scheduler.schedule((function(){return subscriber.complete()})))}}))}))),sub}))}(input,scheduler);if(Object(isPromise.a)(input))return function(input,scheduler){return new Observable.a((function(subscriber){var sub=new Subscription.a;return sub.add(scheduler.schedule((function(){return input.then((function(value){sub.add(scheduler.schedule((function(){subscriber.next(value),sub.add(scheduler.schedule((function(){return subscriber.complete()})))})))}),(function(err){sub.add(scheduler.schedule((function(){return subscriber.error(err)})))}))}))),sub}))}(input,scheduler);if(Object(isArrayLike.a)(input))return Object(scheduleArray.a)(input,scheduler);if(function(input){return input&&"function"==typeof input[symbol_iterator.a]}(input)||"string"==typeof input)return function(input,scheduler){if(!input)throw new Error("Iterable cannot be null");return new Observable.a((function(subscriber){var iterator,sub=new Subscription.a;return sub.add((function(){iterator&&"function"==typeof iterator.return&&iterator.return()})),sub.add(scheduler.schedule((function(){iterator=input[symbol_iterator.a](),sub.add(scheduler.schedule((function(){if(!subscriber.closed){var value,done;try{var result=iterator.next();value=result.value,done=result.done}catch(err){return void subscriber.error(err)}done?subscriber.complete():(subscriber.next(value),this.schedule())}})))}))),sub}))}(input,scheduler)}throw new TypeError((null!==input&&typeof input||input)+" is not observable")}__webpack_require__.d(__webpack_exports__,"a",(function(){return scheduled}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SubjectSubscription}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),SubjectSubscription=function(_super){function SubjectSubscription(subject,subscriber){var _this=_super.call(this)||this;return _this.subject=subject,_this.subscriber=subscriber,_this.closed=!1,_this}return tslib__WEBPACK_IMPORTED_MODULE_0__.a(SubjectSubscription,_super),SubjectSubscription.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var subject=this.subject,observers=subject.observers;if(this.subject=null,observers&&0!==observers.length&&!subject.isStopped&&!subject.closed){var subscriberIndex=observers.indexOf(this.subscriber);-1!==subscriberIndex&&observers.splice(subscriberIndex,1)}}},SubjectSubscription}(__webpack_require__(10).a)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return subscribeToArray}));var subscribeToArray=function(array){return function(subscriber){for(var i=0,len=array.length;i<len&&!subscriber.closed;i++)subscriber.next(array[i]);subscriber.complete()}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return isArrayLike}));var isArrayLike=function(x){return x&&"number"==typeof x.length&&"function"!=typeof x}},function(module,__webpack_exports__,__webpack_require__){"use strict";function isPromise(value){return!!value&&"function"!=typeof value.subscribe&&"function"==typeof value.then}__webpack_require__.d(__webpack_exports__,"a",(function(){return isPromise}))},function(module,__webpack_exports__,__webpack_require__){"use strict";function not(pred,thisArg){function notPred(){return!notPred.pred.apply(notPred.thisArg,arguments)}return notPred.pred=pred,notPred.thisArg=thisArg,notPred}__webpack_require__.d(__webpack_exports__,"a",(function(){return not}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Organisation{constructor(data){this.id=data.id,this.name=data.name,this.visibility=data.visibility,this.companies=[]}static createFromData(data){return new Organisation(data)}}exports.Organisation=Organisation},function(module,exports){var g;g=function(){return this}();try{g=g||new Function("return this")()}catch(e){"object"==typeof window&&(g=window)}module.exports=g},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Subject_1=__webpack_require__(77),ObjectUnsubscribedError_1=__webpack_require__(138),BehaviorSubject=function(_super){function BehaviorSubject(_value){var _this=_super.call(this)||this;return _this._value=_value,_this}return __extends(BehaviorSubject,_super),Object.defineProperty(BehaviorSubject.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);return subscription&&!subscription.closed&&subscriber.next(this._value),subscription},BehaviorSubject.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;return this._value},BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value)},BehaviorSubject}(Subject_1.Subject);exports.BehaviorSubject=BehaviorSubject},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _enable_super_gross_mode_that_will_cause_bad_things=!1;exports.config={Promise:void 0,set useDeprecatedSynchronousErrorHandling(value){if(value){var error=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+error.stack)}else _enable_super_gross_mode_that_will_cause_bad_things&&console.log("RxJS: Back to a better error behavior. Thank you. <3");_enable_super_gross_mode_that_will_cause_bad_things=value},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.rxSubscriber="function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random(),exports.$$rxSubscriber=exports.rxSubscriber},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ObjectUnsubscribedErrorImpl=function(){function ObjectUnsubscribedErrorImpl(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return ObjectUnsubscribedErrorImpl.prototype=Object.create(Error.prototype),ObjectUnsubscribedErrorImpl}();exports.ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class XMLElement{constructor(elem){this.elem=elem}attr(name){return this.elem.getAttribute(name)}text(){return this.elem.textContent}find(selector){return new XMLElements(Array.from(this.elem.getElementsByTagName(selector)).map(elem=>new XMLElement(elem)))}}exports.XMLElement=XMLElement;class XMLElements{constructor(elems){this.elems=elems}forEach(callbackfn){this.elems.forEach(callbackfn)}attr(name){return this.elems.length?this.elems[0].attr(name):null}text(){return this.elems.length?this.elems[0].text():null}find(selector){return this.elems.length?this.elems[0].find(selector):new XMLElements([])}first(){return this.elems.length?this.elems[0]:null}get length(){return this.elems.length}}exports.XMLElements=XMLElements,exports.default=element=>{if("string"!=typeof element)return new XMLElement(element);const parser=new DOMParser;return new XMLElement(parser.parseFromString(element,"text/xml"))}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class TelephonyForward{constructor(type,activate,destinationType,name,number,userId){this.type=type,this.activate=activate,this.destinationType=destinationType,this.name=name,this.number=number,this.userId=userId}static createForwardFromUserData(data){return new TelephonyForward(data.type,data.activate,data.destinationType,data.name,data.number,data.userId)}updateFromEventData(activate,destinationType,name){return this.activate=activate,this.destinationType=destinationType,this.name=name,this.activate&&"voicemail"!==this.destinationType||(this.number=""),this}}exports.TelephonyForward=TelephonyForward},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);class Channel{constructor(name,id,visibility,topic,creatorId,companyId,creationDate,users_count,lastAvatarUpdateDate,subscribed,type,invited,category,mode,subscribers_count,muted,additionDate){this.userRole="none",this.messageRetrieved=!1,this.messages=[],this.subscribed=!1,this.deleted=!1,this.invited=!1,this.type="SIMPLE",this.pageIndex=0,this.isLoading=!1,this.complete=!1,this.users=[],this.publishersRetreived=!1,this.loaded=!1,this.muted=!1,this.name=name,this.id=id,this.visibility=visibility,this.topic=topic,this.creatorId=creatorId,this.companyId=companyId,this.creationDate=creationDate,this.type=type,this.users_count=users_count,this.subscribers_count=subscribers_count,this.category=category,this.mode=mode,this.additionDate=void 0!==additionDate?additionDate:creationDate,this.lastAvatarUpdateDate=lastAvatarUpdateDate;const timestamp=this.lastAvatarUpdateDate?"&ts="+new Date(this.lastAvatarUpdateDate).getTime():"";if(this.avatar=config.restServerUrl+"/api/channel-avatar/"+id+"?size=256"+timestamp,this.subscribed=void 0!==subscribed&&subscribed,void 0!==type&&(this.userRole=type),void 0!==invited&&(this.invited=invited),!this.mode)switch(this.visibility){case"company":this.mode="company_public";break;case"public":this.mode="all_public";break;case"private":this.mode="company_private"}this.updateSubject=new rxjs_1.Subject,this.muted=muted}static create(data){const channel=new Channel(data.name,data.id,data.visibility,data.topic,data.creatorId,data.companyId,data.creationDate,data.users_count,data.lastAvatarUpdateDate,data.subscribed,data.type,data.invited,data.category,data.mode,data.subscribers_count,data.mute,data.additionDate);return channel.category||(channel.category="globalnews"),channel}isNotMember(){return this.userRole="none"}isOwner(){return"owner"===this.userRole}isPublisher(){return this.subscribed&&("owner"===this.userRole||"publisher"===this.userRole)}isMember(){return"member"===this.userRole}getAvatarSrc(){return this.lastAvatarUpdateDate?this.avatar:"/assets/skins/rainbow/images/channels/default_channel_avatar.png"}}exports.Channel=Channel},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class DirectoryContact{static createFromData(data){return new DirectoryContact(data.directoryType,data.companyId,data.userId,data.id,data.firstName,data.lastName,data.eMail,data.jobTitle,data.department,data.companyName,data.street,data.city,data.state,data.postalCode,data.country,data.workPhoneNumbers,data.mobilePhoneNumbers,data.otherPhoneNumbers,data.custom1,data.custom2,data.tags)}constructor(directoryType,companyId,userId,id,firstName,lastName,eMail,jobTitle,department,companyName,street,city,state,postalCode,country,workPhoneNumbers,mobilePhoneNumbers,otherPhoneNumbers,custom1,custom2,tags){directoryType&&(this.directoryType=directoryType),companyId&&(this.companyId=companyId),userId&&(this.userId=userId),id&&(this.id=id),firstName&&(this.firstName=firstName),lastName&&(this.lastName=lastName),eMail&&(this.eMail=eMail),jobTitle&&(this.jobTitle=jobTitle),department&&(this.department=department),companyName&&(this.companyName=companyName),street&&(this.street=street),city&&(this.city=city),state&&(this.state=state),postalCode&&(this.postalCode=postalCode),country&&(this.country=country),workPhoneNumbers&&(this.workPhoneNumbers=workPhoneNumbers),mobilePhoneNumbers&&(this.mobilePhoneNumbers=mobilePhoneNumbers),otherPhoneNumbers&&(this.otherPhoneNumbers=otherPhoneNumbers),custom1&&(this.custom1=custom1),custom2&&(this.custom2=custom2),tags&&(this.tags=tags)}toJSON(){return this.companyId&&""!==this.companyId?{companyId:this.companyId,id:this.id,firstName:this.firstName,lastName:this.lastName,eMail:this.eMail,jobTitle:this.jobTitle,department:this.department,companyName:this.companyName,street:this.street,city:this.city,state:this.state,postalCode:this.postalCode,country:this.country,workPhoneNumbers:this.workPhoneNumbers,mobilePhoneNumbers:this.mobilePhoneNumbers,otherPhoneNumbers:this.otherPhoneNumbers,custom1:this.custom1,custom2:this.custom2,tags:this.tags}:{id:this.id,firstName:this.firstName,lastName:this.lastName,eMail:this.eMail,jobTitle:this.jobTitle,department:this.department,companyName:this.companyName,street:this.street,city:this.city,state:this.state,postalCode:this.postalCode,country:this.country,workPhoneNumbers:this.workPhoneNumbers,mobilePhoneNumbers:this.mobilePhoneNumbers,otherPhoneNumbers:this.otherPhoneNumbers,custom1:this.custom1,custom2:this.custom2,tags:this.tags}}}exports.DirectoryContact=DirectoryContact},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Subscriber_1=__webpack_require__(95);exports.distinctUntilChanged=function(compare,keySelector){return function(source){return source.lift(new DistinctUntilChangedOperator(compare,keySelector))}};var DistinctUntilChangedOperator=function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare,this.keySelector=keySelector}return DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector))},DistinctUntilChangedOperator}(),DistinctUntilChangedSubscriber=function(_super){function DistinctUntilChangedSubscriber(destination,compare,keySelector){var _this=_super.call(this,destination)||this;return _this.keySelector=keySelector,_this.hasKey=!1,"function"==typeof compare&&(_this.compare=compare),_this}return __extends(DistinctUntilChangedSubscriber,_super),DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y},DistinctUntilChangedSubscriber.prototype._next=function(value){var key;try{var keySelector=this.keySelector;key=keySelector?keySelector(value):value}catch(err){return this.destination.error(err)}var result=!1;if(this.hasKey)try{result=(0,this.compare)(this.key,key)}catch(err){return this.destination.error(err)}else this.hasKey=!0;result||(this.key=key,this.destination.next(value))},DistinctUntilChangedSubscriber}(Subscriber_1.Subscriber)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19);class Room{constructor(dbId,jid,name,desc,creationDate,conferenceEndpoints=[],history=Room.History.NONE,customdata={},conference=null,avatar=null,isActive=!1,lastActivityDate=null,autoRegister="unlock",autoAcceptInvitation=!1,tags=[],containerId="",containerName="",isOwnedByGroup=!1,isAlertNotificationEnabled=!1,phoneNumbers=[]){this.nameForLogs="",this.users=[],this.ownerContact=null,this.organizers=[],this.members=[],this.avatarContacts=[],this.owner=!1,this.isModerator=!1,this.status="none",this.rxSubject=new rxjs_1.Subject,this.initPresPromise=null,this.initPresPromiseResolve=null,this.initPresInterval=null,this.initPresenceAck=!1,this.autoAcceptInvitation=!1,this.tags=[],this.foundByTag=!1,this.filterName=null,this.containerId="",this.containerName="",this.webinarId=null,this.isOwnedByGroup=!1,this.isAlertNotificationEnabled=!1,this.noNotificationPopUp=!1,this.dbId=dbId,this.jid=jid,this.name=name,this.desc=desc,this.creationDate=creationDate,this.type=Room.Type.PRIVATE,this.history=history,this.customData=customdata,this.confEndpoints=conferenceEndpoints,this.conference=conference,this.avatar=avatar,this.isActive=isActive,this.lastActivityDate=lastActivityDate,this.autoRegister=autoRegister,this.autoAcceptInvitation=autoAcceptInvitation,this.tags=tags,this.containerId=containerId||"",this.autoAcceptInvitation=autoAcceptInvitation,this.tags=tags,this.containerId=containerId||"",this.containerName=containerName||"",this.isOwnedByGroup=isOwnedByGroup,this.isAlertNotificationEnabled=isAlertNotificationEnabled}static create(dbId,jid,name,topic,date,conferenceEndpoints,history,customdata,conference,avatar,isActive,lastActivityDate=null,autoRegister="unlock",autoAcceptInvitation=!1,tags=[],containerId="",containerName="",isOwnedByGroup=!1,isAlertNotificationEnabled=!1){const room=new Room(dbId,jid,name,topic,date,conferenceEndpoints,history,customdata,conference,avatar,isActive,lastActivityDate,autoRegister,autoAcceptInvitation,tags,containerId,containerName,isOwnedByGroup,isAlertNotificationEnabled);return room.lastActivityDate=lastActivityDate,room}toString(){return"Room "+this.dbId+" "+this.name+" "+this.jid}getCreationDate(){return this.creationDate?new Date(this.creationDate):new Date}getLastActivityDate(){return this.lastActivityDate?new Date(this.lastActivityDate):this.getCreationDate()}subscribe(handler){return this.rxSubject.subscribe(handler)}updateAvatarInfo(){if(this.avatar)return;const avatarContacts=[],orderedContacts=this.users.slice();orderedContacts.sort((aa,bb)=>new Date(aa.date)>new Date(bb.date)?1:new Date(aa.date)<new Date(bb.date)?-1:0);for(let index=0;index<orderedContacts.length;index++){const contact=orderedContacts[index].contact,status=orderedContacts[index].status;if(!(this.ownerContact&&contact.dbId===this.ownerContact.dbId||contact.isAnonymousGuest()||contact.isBadGuest()||contact.isTerminated)&&(!this.owner&&!this.isModerator||"accepted"!==status&&"invited"!==status?"accepted"===status&&avatarContacts.push(contact):avatarContacts.push(contact),5===avatarContacts.length))break}this.avatarContacts=avatarContacts,this.rxSubject&&this.rxSubject.next(event_model_1.RBEvent.create("updateAvatarInfo",this.avatarContacts))}isUserOwner(contact){return!!contact&&(this.ownerContact&&this.ownerContact.jid===contact.jid)}isUserModerator(contact){return void 0!==this.getOrganizerFromContactJid(contact.jid)}isUserStatusAccepted(contact){const user=this.getUserByJid(contact.jid);return void 0!==user&&"accepted"===user.status}isUserStatusAcceptedOrInvited(contact){const user=this.getUserByJid(contact.jid);return void 0!==user&&("accepted"===user.status||"invited"===user.status)}isUserStillBelongToRoom(userJid){const ownUser=this.getUserByJid(userJid);return!ownUser||"unsubscribed"!==ownUser.status&&"deleted"!==ownUser.status}getOrganizerFromContactJid(contactJid){let user;return this.organizers.forEach(organizer=>{organizer.contact.jid===contactJid&&(user=organizer)}),user}getUserByJid(userJid){for(let i=0;i<this.users.length;i++)if(userJid===this.users[i].contact.jid)return this.users[i];return null}getPstnConfEndpointId(){if(this.confEndpoints&&this.confEndpoints.length)for(let i=0;i<this.confEndpoints.length;i++)if("pstnAudio"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null}getSFUConfEndpointId(){if(this.confEndpoints&&this.confEndpoints.length)for(let i=0;i<this.confEndpoints.length;i++)if("webrtc"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null}getSFUSharingConfEndpointId(){if(this.confEndpoints&&this.confEndpoints.length)for(let i=0;i<this.confEndpoints.length;i++)if("webrtcSharingOnly"===this.confEndpoints[i].mediaType)return this.confEndpoints[i].confEndpointId;return null}isMyPersonalMeetingRoom(){return this.conference&&"pstnAudio"===this.conference.mediaType&&!this.conference.scheduled&&this.conference.personalMeeting&&this.owner}isMeetingRoom(){return this.conference&&"pstnAudio"===this.conference.mediaType}isWebinarRoom(){return this.conference&&this.conference.webinar&&this.conference.webinar.id}isWebConferenceRoom(){return this.conference&&"pstnAudio"!==this.conference.mediaType&&null!==this.getSFUConfEndpointId()}isWebConferenceV2Room(){return this.conference&&this.conference.sessions&&this.conference.sessions.length&&"conference"===this.conference.sessions[0].type}getWebConferenceOwnerId(){return this.conference&&this.conference.sessions&&this.conference.sessions.length&&"conference"===this.conference.sessions[0].type?this.conference.sessions[0].ownerId:null}setWebConferenceOwnerId(ownerId){this.conference&&this.conference.sessions&&this.conference.sessions.length&&"conference"===this.conference.sessions[0].type&&(this.conference.sessions[0].ownerId=ownerId)}getCurrentConferenceSession(){return this.conference&&this.conference.sessions&&this.conference.sessions.length&&"conference"===this.conference.sessions[0].type?this.conference.sessions[0]:null}isMeetingOrWebConferenceRoom(){return this.isMeetingRoom()||null!==this.getSFUConfEndpointId()}getNameForLogs(){if(!this.nameForLogs&&this.name){const temp=this.name.replace(/[^\s](?=.{1,}$)/g,"*");this.nameForLogs=this.name.charAt(0)+temp.substr(1)}return this.nameForLogs}getAutoRegister(){return this.autoRegister?this.autoRegister:"unlock"}setAutoRegister(value){this.autoRegister=value}getAutoAcceptInvitation(){return this.autoAcceptInvitation}setAutoAcceptInvitation(value){this.autoAcceptInvitation=value}getMuteUponEntry(){return this.conference?this.conference.muteUponEntry:"false"}setMuteUponEntry(value){this.conference&&(this.conference.muteUponEntry=value)}getDisableTimeStats(){return this.conference?this.conference.disableTimeStats:"false"}setDisableTimeStats(value){this.conference&&(this.conference.disableTimeStats=value)}getPlayEntryTone(){return this.conference?this.conference.playEntryTone:"true"}setPlayEntryTone(value){this.conference&&(this.conference.playEntryTone=value)}getAllAcceptedMembers(){return this.members.filter(user=>!user.contact.isBadGuest()&&!user.contact.isAnonymousGuest()&&!user.contact.isTerminated&&"accepted"===user.status)}getAllAcceptedUsers(){return this.users.filter(user=>!user.contact.isBadGuest()&&!user.contact.isAnonymousGuest()&&!user.contact.isTerminated&&"accepted"===user.status)}getTagColor(tagName){const tagIndex=this.tags.findIndex(tag=>tag.tag===tagName);return tagIndex>-1?this.tags[tagIndex].color:"#ff9900"}getDialInCode(){return this.conference?this.conference.dialInCode:""}setDialInCode(value){this.conference&&(this.conference.dialInCode=value,this.rxSubject&&this.rxSubject.next(event_model_1.RBEvent.create("updateDialInCode",this.conference.dialInCode)))}getIncludeAllPhoneNumbers(){return!!this.conference&&this.conference.includeAllPhoneNumbers}setIncludeAllPhoneNumbers(value){this.conference&&(this.conference.includeAllPhoneNumbers=value,this.rxSubject&&this.rxSubject.next(event_model_1.RBEvent.create("updateIncludeAllPhoneNumbers",this.conference.includeAllPhoneNumbers)))}getPhoneNumbers(){return this.conference?this.conference.phoneNumbers:[]}setPhoneNumbers(value){this.conference&&(this.conference.phoneNumbers=value,this.rxSubject&&this.rxSubject.next(event_model_1.RBEvent.create("updateDialInPhoneNumbers",this.conference.phoneNumbers)))}}Room.Type={PRIVATE:0,PUBLIC:1},Room.Privilege={USER:"user",MODERATOR:"moderator",GUEST:"guest"},Room.History={ALL:"all",NONE:"none"},exports.Room=Room},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.HostCapabilities=void 0;var serialization_1=__webpack_require__(70),HostCapabilities=function(_super){function HostCapabilities(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._capabilities={},_this}return __extends(HostCapabilities,_super),HostCapabilities.prototype.getSchemaKey=function(){return"HostCapabilities"},HostCapabilities.prototype.internalParse=function(source,context){if(_super.prototype.internalParse.call(this,source,context),source)for(var name_1 in source){var jsonVersion=source[name_1];if("string"==typeof jsonVersion)if("*"==jsonVersion)this.addCapability(name_1,"*");else{var version=serialization_1.Version.parse(jsonVersion,context);version&&version.isValid&&this.addCapability(name_1,version)}}},HostCapabilities.prototype.internalToJSON=function(target,context){for(var key in _super.prototype.internalToJSON.call(this,target,context),this._capabilities)target[key]=this._capabilities[key]},HostCapabilities.prototype.addCapability=function(name,version){this._capabilities[name]=version},HostCapabilities.prototype.removeCapability=function(name){delete this._capabilities[name]},HostCapabilities.prototype.clear=function(){this._capabilities={}},HostCapabilities.prototype.hasCapability=function(name,version){return!!this._capabilities.hasOwnProperty(name)&&("*"==version||"*"==this._capabilities[name]||version.compareTo(this._capabilities[name])<=0)},HostCapabilities.prototype.areAllMet=function(hostCapabilities){for(var capabilityName in this._capabilities)if(!hostCapabilities.hasCapability(capabilityName,this._capabilities[capabilityName]))return!1;return!0},HostCapabilities}(serialization_1.SerializableObject);exports.HostCapabilities=HostCapabilities},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.GlobalRegistry=exports.CardObjectRegistry=void 0;var serialization_1=__webpack_require__(70),CardObjectRegistry=function(){function CardObjectRegistry(){this._items={}}return CardObjectRegistry.prototype.findByName=function(typeName){return this._items.hasOwnProperty(typeName)?this._items[typeName]:void 0},CardObjectRegistry.prototype.clear=function(){this._items={}},CardObjectRegistry.prototype.copyTo=function(target){for(var _i=0,keys_1=Object.keys(this._items);_i<keys_1.length;_i++){var key=keys_1[_i],typeRegistration=this._items[key];target.register(typeRegistration.typeName,typeRegistration.objectType,typeRegistration.schemaVersion)}},CardObjectRegistry.prototype.register=function(typeName,objectType,schemaVersion){void 0===schemaVersion&&(schemaVersion=serialization_1.Versions.v1_0);var registrationInfo=this.findByName(typeName);void 0!==registrationInfo?registrationInfo.objectType=objectType:registrationInfo={typeName:typeName,objectType:objectType,schemaVersion:schemaVersion},this._items[typeName]=registrationInfo},CardObjectRegistry.prototype.unregister=function(typeName){delete this._items[typeName]},CardObjectRegistry.prototype.createInstance=function(typeName,targetVersion){var registrationInfo=this.findByName(typeName);return registrationInfo&&registrationInfo.schemaVersion.compareTo(targetVersion)<=0?new registrationInfo.objectType:void 0},CardObjectRegistry.prototype.getItemCount=function(){return Object.keys(this._items).length},CardObjectRegistry.prototype.getItemAt=function(index){var _this=this;return Object.keys(this._items).map((function(e){return _this._items[e]}))[index]},CardObjectRegistry}();exports.CardObjectRegistry=CardObjectRegistry;var GlobalRegistry=function(){function GlobalRegistry(){}return GlobalRegistry.populateWithDefaultElements=function(registry){registry.clear(),GlobalRegistry.defaultElements.copyTo(registry)},GlobalRegistry.populateWithDefaultActions=function(registry){registry.clear(),GlobalRegistry.defaultActions.copyTo(registry)},Object.defineProperty(GlobalRegistry,"elements",{get:function(){return GlobalRegistry._elements||(GlobalRegistry._elements=new CardObjectRegistry,GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements)),GlobalRegistry._elements},enumerable:!1,configurable:!0}),Object.defineProperty(GlobalRegistry,"actions",{get:function(){return GlobalRegistry._actions||(GlobalRegistry._actions=new CardObjectRegistry,GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions)),GlobalRegistry._actions},enumerable:!1,configurable:!0}),GlobalRegistry.reset=function(){GlobalRegistry._elements=void 0,GlobalRegistry._actions=void 0},GlobalRegistry.defaultElements=new CardObjectRegistry,GlobalRegistry.defaultActions=new CardObjectRegistry,GlobalRegistry}();exports.GlobalRegistry=GlobalRegistry},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SerializationContext=exports.AdaptiveCard=exports.Authentication=exports.TokenExchangeResource=exports.AuthCardButton=exports.RefreshDefinition=exports.RefreshActionProperty=exports.ContainerWithActions=exports.ColumnSet=exports.Column=exports.Container=exports.BackgroundImage=exports.ContainerBase=exports.StylableCardElementContainer=exports.ContainerStyleProperty=exports.ActionSet=exports.ShowCardAction=exports.HttpAction=exports.HttpHeader=exports.ToggleVisibilityAction=exports.OpenUrlAction=exports.ExecuteAction=exports.SubmitAction=exports.SubmitActionBase=exports.Action=exports.TimeInput=exports.TimeProperty=exports.DateInput=exports.NumberInput=exports.ChoiceSetInput=exports.Choice=exports.ToggleInput=exports.TextInput=exports.Input=exports.Media=exports.MediaSource=exports.ImageSet=exports.CardElementContainer=exports.Image=exports.FactSet=exports.Fact=exports.RichTextBlock=exports.TextRun=exports.TextBlock=exports.BaseTextBlock=exports.ActionProperty=exports.CardElement=exports.renderSeparation=void 0;var Enums=__webpack_require__(55),shared_1=__webpack_require__(62),Utils=__webpack_require__(69),host_config_1=__webpack_require__(112),TextFormatters=__webpack_require__(413),card_object_1=__webpack_require__(169),serialization_1=__webpack_require__(70),registry_1=__webpack_require__(146),strings_1=__webpack_require__(80),controls_1=__webpack_require__(414);function renderSeparation(hostConfig,separationDefinition,orientation){if(separationDefinition.spacing>0||separationDefinition.lineThickness&&separationDefinition.lineThickness>0){var separator=document.createElement("div");separator.className=hostConfig.makeCssClassName("ac-"+(orientation==Enums.Orientation.Horizontal?"horizontal":"vertical")+"-separator"),separator.setAttribute("aria-hidden","true");var color=separationDefinition.lineColor?Utils.stringToCssColor(separationDefinition.lineColor):"";return orientation==Enums.Orientation.Horizontal?separationDefinition.lineThickness?(separator.style.paddingTop=separationDefinition.spacing/2+"px",separator.style.marginBottom=separationDefinition.spacing/2+"px",separator.style.borderBottom=separationDefinition.lineThickness+"px solid "+color):separator.style.height=separationDefinition.spacing+"px":separationDefinition.lineThickness?(separator.style.paddingLeft=separationDefinition.spacing/2+"px",separator.style.marginRight=separationDefinition.spacing/2+"px",separator.style.borderRight=separationDefinition.lineThickness+"px solid "+color):separator.style.width=separationDefinition.spacing+"px",separator.style.overflow="hidden",separator.style.flex="0 0 auto",separator}}exports.renderSeparation=renderSeparation;var CardElement=function(_super){function CardElement(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._truncatedDueToOverflow=!1,_this}return __extends(CardElement,_super),Object.defineProperty(CardElement.prototype,"lang",{get:function(){var lang=this.getValue(CardElement.langProperty);return lang||(this.parent?this.parent.lang:void 0)},set:function(value){this.setValue(CardElement.langProperty,value)},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"isVisible",{get:function(){return this.getValue(CardElement.isVisibleProperty)},set:function(value){shared_1.GlobalSettings.useAdvancedCardBottomTruncation&&!value&&this.undoOverflowTruncation(),this.isVisible!==value&&(this.setValue(CardElement.isVisibleProperty,value),this.updateRenderedElementVisibility(),this._renderedElement&&raiseElementVisibilityChangedEvent(this)),this._renderedElement&&this._renderedElement.setAttribute("aria-expanded",value.toString())},enumerable:!1,configurable:!0}),CardElement.prototype.internalRenderSeparator=function(){var renderedSeparator=renderSeparation(this.hostConfig,{spacing:this.hostConfig.getEffectiveSpacing(this.spacing),lineThickness:this.separator?this.hostConfig.separator.lineThickness:void 0,lineColor:this.separator?this.hostConfig.separator.lineColor:void 0},this.separatorOrientation);if(shared_1.GlobalSettings.alwaysBleedSeparators&&renderedSeparator&&this.separatorOrientation==Enums.Orientation.Horizontal){var parentContainer=this.getParentContainer();if(parentContainer&&parentContainer.getEffectivePadding()){var parentPhysicalPadding=this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());renderedSeparator.style.marginLeft="-"+parentPhysicalPadding.left+"px",renderedSeparator.style.marginRight="-"+parentPhysicalPadding.right+"px"}}return renderedSeparator},CardElement.prototype.updateRenderedElementVisibility=function(){var displayMode=this.isDesignMode()||this.isVisible?this._defaultRenderedElementDisplayMode:"none";this._renderedElement&&(displayMode?this._renderedElement.style.display=displayMode:this._renderedElement.style.removeProperty("display")),this._separatorElement&&(this.parent&&this.parent.isFirstElement(this)?this._separatorElement.style.display="none":displayMode?this._separatorElement.style.display=displayMode:this._separatorElement.style.removeProperty("display"))},CardElement.prototype.hideElementDueToOverflow=function(){this._renderedElement&&this.isVisible&&(this._renderedElement.style.visibility="hidden",this.isVisible=!1,raiseElementVisibilityChangedEvent(this,!1))},CardElement.prototype.showElementHiddenDueToOverflow=function(){this._renderedElement&&!this.isVisible&&(this._renderedElement.style.removeProperty("visibility"),this.isVisible=!0,raiseElementVisibilityChangedEvent(this,!1))},CardElement.prototype.handleOverflow=function(maxHeight){if(this.isVisible||this.isHiddenDueToOverflow()){var handled=this.truncateOverflow(maxHeight);this._truncatedDueToOverflow=handled||this._truncatedDueToOverflow,handled?handled&&!this.isVisible&&this.showElementHiddenDueToOverflow():this.hideElementDueToOverflow()}},CardElement.prototype.resetOverflow=function(){var sizeChanged=!1;return this._truncatedDueToOverflow&&(this.undoOverflowTruncation(),this._truncatedDueToOverflow=!1,sizeChanged=!0),this.isHiddenDueToOverflow()&&this.showElementHiddenDueToOverflow(),sizeChanged},CardElement.prototype.getDefaultSerializationContext=function(){return new SerializationContext},CardElement.prototype.createPlaceholderElement=function(){var styleDefinition=this.getEffectiveStyleDefinition(),foregroundCssColor=Utils.stringToCssColor(styleDefinition.foregroundColors.default.subtle),element=document.createElement("div");return element.style.border="1px dashed "+foregroundCssColor,element.style.padding="4px",element.style.minHeight="32px",element.style.fontSize="10px",element.style.color=foregroundCssColor,element.innerText="Empty "+this.getJsonTypeName(),element},CardElement.prototype.adjustRenderedElementSize=function(renderedElement){"auto"===this.height?renderedElement.style.flex="0 0 auto":renderedElement.style.flex="1 1 auto"},CardElement.prototype.isDisplayed=function(){return void 0!==this._renderedElement&&this.isVisible&&this._renderedElement.offsetHeight>0},CardElement.prototype.overrideInternalRender=function(){return this.internalRender()},CardElement.prototype.applyPadding=function(){if(this.separatorElement&&this.separatorOrientation===Enums.Orientation.Horizontal)if(shared_1.GlobalSettings.alwaysBleedSeparators&&!this.isBleeding()){var padding=new shared_1.PaddingDefinition;this.getImmediateSurroundingPadding(padding);var physicalPadding=this.hostConfig.paddingDefinitionToSpacingDefinition(padding);this.separatorElement.style.marginLeft="-"+physicalPadding.left+"px",this.separatorElement.style.marginRight="-"+physicalPadding.right+"px"}else this.separatorElement.style.marginRight="0",this.separatorElement.style.marginLeft="0"},CardElement.prototype.truncateOverflow=function(maxHeight){return!1},CardElement.prototype.undoOverflowTruncation=function(){},CardElement.prototype.getDefaultPadding=function(){return new shared_1.PaddingDefinition},CardElement.prototype.getHasBackground=function(){return!1},CardElement.prototype.getHasBorder=function(){return!1},CardElement.prototype.getPadding=function(){return this._padding},CardElement.prototype.setPadding=function(value){this._padding=value},CardElement.prototype.shouldSerialize=function(context){return void 0!==context.elementRegistry.findByName(this.getJsonTypeName())},Object.defineProperty(CardElement.prototype,"useDefaultSizing",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"separatorOrientation",{get:function(){return Enums.Orientation.Horizontal},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"defaultStyle",{get:function(){return Enums.ContainerStyle.Default},enumerable:!1,configurable:!0}),CardElement.prototype.parse=function(source,context){_super.prototype.parse.call(this,source,context||new SerializationContext)},CardElement.prototype.asString=function(){return""},CardElement.prototype.isBleeding=function(){return!1},CardElement.prototype.getEffectiveStyle=function(){return this.parent?this.parent.getEffectiveStyle():this.defaultStyle},CardElement.prototype.getEffectiveStyleDefinition=function(){return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle())},CardElement.prototype.getEffectiveTextStyleDefinition=function(){return this.parent?this.parent.getEffectiveTextStyleDefinition():this.hostConfig.textStyles.default},CardElement.prototype.getForbiddenActionTypes=function(){return[]},CardElement.prototype.getImmediateSurroundingPadding=function(result,processTop,processRight,processBottom,processLeft){if(void 0===processTop&&(processTop=!0),void 0===processRight&&(processRight=!0),void 0===processBottom&&(processBottom=!0),void 0===processLeft&&(processLeft=!0),this.parent){var doProcessTop=processTop&&this.parent.isTopElement(this),doProcessRight=processRight&&this.parent.isRightMostElement(this),doProcessBottom=processBottom&&this.parent.isBottomElement(this),doProcessLeft=processLeft&&this.parent.isLeftMostElement(this),effectivePadding=this.parent.getEffectivePadding();effectivePadding&&(doProcessTop&&effectivePadding.top!=Enums.Spacing.None&&(result.top=effectivePadding.top,doProcessTop=!1),doProcessRight&&effectivePadding.right!=Enums.Spacing.None&&(result.right=effectivePadding.right,doProcessRight=!1),doProcessBottom&&effectivePadding.bottom!=Enums.Spacing.None&&(result.bottom=effectivePadding.bottom,doProcessBottom=!1),doProcessLeft&&effectivePadding.left!=Enums.Spacing.None&&(result.left=effectivePadding.left,doProcessLeft=!1)),(doProcessTop||doProcessRight||doProcessBottom||doProcessLeft)&&this.parent.getImmediateSurroundingPadding(result,doProcessTop,doProcessRight,doProcessBottom,doProcessLeft)}},CardElement.prototype.getActionCount=function(){return 0},CardElement.prototype.getActionAt=function(index){throw new Error(strings_1.Strings.errors.indexOutOfRange(index))},CardElement.prototype.indexOfAction=function(action){for(var i=0;i<this.getActionCount();i++)if(this.getActionAt(i)===action)return i;return-1},CardElement.prototype.remove=function(){return!!(this.parent&&this.parent instanceof CardElementContainer)&&this.parent.removeItem(this)},CardElement.prototype.render=function(){return this._renderedElement=this.overrideInternalRender(),this._separatorElement=this.internalRenderSeparator(),this._renderedElement?(this.id&&(this._renderedElement.id=this.id),this.customCssSelector&&this._renderedElement.classList.add(this.customCssSelector),this._renderedElement.style.boxSizing="border-box",this._defaultRenderedElementDisplayMode=this._renderedElement.style.display?this._renderedElement.style.display:void 0,this.adjustRenderedElementSize(this._renderedElement),this.updateLayout(!1)):this.isDesignMode()&&(this._renderedElement=this.createPlaceholderElement()),this._renderedElement},CardElement.prototype.updateLayout=function(processChildren){void 0===processChildren&&(processChildren=!0),this.updateRenderedElementVisibility(),this.applyPadding()},CardElement.prototype.indexOf=function(cardElement){return-1},CardElement.prototype.isDesignMode=function(){var rootElement=this.getRootElement();return rootElement instanceof AdaptiveCard&&rootElement.designMode},CardElement.prototype.isFirstElement=function(element){return!0},CardElement.prototype.isLastElement=function(element){return!0},CardElement.prototype.isAtTheVeryLeft=function(){return!this.parent||this.parent.isLeftMostElement(this)&&this.parent.isAtTheVeryLeft()},CardElement.prototype.isAtTheVeryRight=function(){return!this.parent||this.parent.isRightMostElement(this)&&this.parent.isAtTheVeryRight()},CardElement.prototype.isAtTheVeryTop=function(){return!this.parent||this.parent.isFirstElement(this)&&this.parent.isAtTheVeryTop()},CardElement.prototype.isAtTheVeryBottom=function(){return!this.parent||this.parent.isLastElement(this)&&this.parent.isAtTheVeryBottom()},CardElement.prototype.isBleedingAtTop=function(){return!1},CardElement.prototype.isBleedingAtBottom=function(){return!1},CardElement.prototype.isLeftMostElement=function(element){return!0},CardElement.prototype.isRightMostElement=function(element){return!0},CardElement.prototype.isTopElement=function(element){return this.isFirstElement(element)},CardElement.prototype.isBottomElement=function(element){return this.isLastElement(element)},CardElement.prototype.isHiddenDueToOverflow=function(){return void 0!==this._renderedElement&&"hidden"==this._renderedElement.style.visibility},CardElement.prototype.getRootElement=function(){return this.getRootObject()},CardElement.prototype.getParentContainer=function(){for(var currentElement=this.parent;currentElement;){if(currentElement instanceof Container)return currentElement;currentElement=currentElement.parent}},CardElement.prototype.getAllInputs=function(processActions){return void 0===processActions&&(processActions=!0),[]},CardElement.prototype.getResourceInformation=function(){return[]},CardElement.prototype.getElementById=function(id){return this.id===id?this:void 0},CardElement.prototype.getActionById=function(id){},CardElement.prototype.getEffectivePadding=function(){var padding=this.getPadding();return padding||this.getDefaultPadding()},CardElement.prototype.getEffectiveHorizontalAlignment=function(){return void 0!==this.horizontalAlignment?this.horizontalAlignment:this.parent?this.parent.getEffectiveHorizontalAlignment():Enums.HorizontalAlignment.Left},Object.defineProperty(CardElement.prototype,"hostConfig",{get:function(){return this._hostConfig?this._hostConfig:this.parent?this.parent.hostConfig:host_config_1.defaultHostConfig},set:function(value){this._hostConfig=value},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"index",{get:function(){return this.parent?this.parent.indexOf(this):0},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"isInteractive",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"isStandalone",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"isInline",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"hasVisibleSeparator",{get:function(){return!(!this.parent||!this.separatorElement)&&(!this.parent.isFirstElement(this)&&(this.isVisible||this.isDesignMode()))},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"separatorElement",{get:function(){return this._separatorElement},enumerable:!1,configurable:!0}),Object.defineProperty(CardElement.prototype,"parent",{get:function(){return this._parent},enumerable:!1,configurable:!0}),CardElement.langProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"lang",!0,/^[a-z]{2,3}$/gi),CardElement.isVisibleProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"isVisible",!0),CardElement.separatorProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"separator",!1),CardElement.heightProperty=new serialization_1.ValueSetProperty(serialization_1.Versions.v1_1,"height",[{value:"auto"},{value:"stretch"}],"auto"),CardElement.horizontalAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"horizontalAlignment",Enums.HorizontalAlignment),CardElement.spacingProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"spacing",Enums.Spacing,Enums.Spacing.Default),__decorate([serialization_1.property(CardElement.horizontalAlignmentProperty)],CardElement.prototype,"horizontalAlignment",void 0),__decorate([serialization_1.property(CardElement.spacingProperty)],CardElement.prototype,"spacing",void 0),__decorate([serialization_1.property(CardElement.separatorProperty)],CardElement.prototype,"separator",void 0),__decorate([serialization_1.property(CardElement.heightProperty)],CardElement.prototype,"height",void 0),__decorate([serialization_1.property(CardElement.langProperty)],CardElement.prototype,"lang",null),__decorate([serialization_1.property(CardElement.isVisibleProperty)],CardElement.prototype,"isVisible",null),CardElement}(card_object_1.CardObject);exports.CardElement=CardElement;var ActionProperty=function(_super){function ActionProperty(targetVersion,name,forbiddenActionTypes){void 0===forbiddenActionTypes&&(forbiddenActionTypes=[]);var _this=_super.call(this,targetVersion,name,void 0)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.forbiddenActionTypes=forbiddenActionTypes,_this}return __extends(ActionProperty,_super),ActionProperty.prototype.parse=function(sender,source,context){var parent=sender;return context.parseAction(parent,source[this.name],this.forbiddenActionTypes,parent.isDesignMode())},ActionProperty.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,value?value.toJSON(context):void 0,void 0,!0)},ActionProperty}(serialization_1.PropertyDefinition);exports.ActionProperty=ActionProperty;var BaseTextBlock=function(_super){function BaseTextBlock(text){var _this=_super.call(this)||this;return _this.ariaHidden=!1,text&&(_this.text=text),_this}return __extends(BaseTextBlock,_super),BaseTextBlock.prototype.populateSchema=function(schema){_super.prototype.populateSchema.call(this,schema),schema.remove(BaseTextBlock.selectActionProperty)},Object.defineProperty(BaseTextBlock.prototype,"text",{get:function(){return this.getValue(BaseTextBlock.textProperty)},set:function(value){this.setText(value)},enumerable:!1,configurable:!0}),BaseTextBlock.prototype.getFontSize=function(fontType){switch(this.effectiveSize){case Enums.TextSize.Small:return fontType.fontSizes.small;case Enums.TextSize.Medium:return fontType.fontSizes.medium;case Enums.TextSize.Large:return fontType.fontSizes.large;case Enums.TextSize.ExtraLarge:return fontType.fontSizes.extraLarge;default:return fontType.fontSizes.default}},BaseTextBlock.prototype.getColorDefinition=function(colorSet,color){switch(color){case Enums.TextColor.Accent:return colorSet.accent;case Enums.TextColor.Dark:return colorSet.dark;case Enums.TextColor.Light:return colorSet.light;case Enums.TextColor.Good:return colorSet.good;case Enums.TextColor.Warning:return colorSet.warning;case Enums.TextColor.Attention:return colorSet.attention;default:return colorSet.default}},BaseTextBlock.prototype.setText=function(value){this.setValue(BaseTextBlock.textProperty,value)},BaseTextBlock.prototype.init=function(textDefinition){this.size=textDefinition.size,this.weight=textDefinition.weight,this.color=textDefinition.color,this.isSubtle=textDefinition.isSubtle},BaseTextBlock.prototype.asString=function(){return this.text},BaseTextBlock.prototype.applyStylesTo=function(targetElement){var fontSize,fontType=this.hostConfig.getFontTypeDefinition(this.effectiveFontType);switch(fontType.fontFamily&&(targetElement.style.fontFamily=fontType.fontFamily),this.effectiveSize){case Enums.TextSize.Small:fontSize=fontType.fontSizes.small;break;case Enums.TextSize.Medium:fontSize=fontType.fontSizes.medium;break;case Enums.TextSize.Large:fontSize=fontType.fontSizes.large;break;case Enums.TextSize.ExtraLarge:fontSize=fontType.fontSizes.extraLarge;break;default:fontSize=fontType.fontSizes.default}targetElement.style.fontSize=fontSize+"px";var fontWeight,colorDefinition=this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors,this.effectiveColor);switch(targetElement.style.color=Utils.stringToCssColor(this.effectiveIsSubtle?colorDefinition.subtle:colorDefinition.default),this.effectiveWeight){case Enums.TextWeight.Lighter:fontWeight=fontType.fontWeights.lighter;break;case Enums.TextWeight.Bolder:fontWeight=fontType.fontWeights.bolder;break;default:fontWeight=fontType.fontWeights.default}targetElement.style.fontWeight=fontWeight.toString(),this.ariaHidden&&targetElement.setAttribute("aria-hidden","true")},Object.defineProperty(BaseTextBlock.prototype,"effectiveColor",{get:function(){return void 0!==this.color?this.color:this.getEffectiveTextStyleDefinition().color},enumerable:!1,configurable:!0}),Object.defineProperty(BaseTextBlock.prototype,"effectiveFontType",{get:function(){return void 0!==this.fontType?this.fontType:this.getEffectiveTextStyleDefinition().fontType},enumerable:!1,configurable:!0}),Object.defineProperty(BaseTextBlock.prototype,"effectiveIsSubtle",{get:function(){return void 0!==this.isSubtle?this.isSubtle:this.getEffectiveTextStyleDefinition().isSubtle},enumerable:!1,configurable:!0}),Object.defineProperty(BaseTextBlock.prototype,"effectiveSize",{get:function(){return void 0!==this.size?this.size:this.getEffectiveTextStyleDefinition().size},enumerable:!1,configurable:!0}),Object.defineProperty(BaseTextBlock.prototype,"effectiveWeight",{get:function(){return void 0!==this.weight?this.weight:this.getEffectiveTextStyleDefinition().weight},enumerable:!1,configurable:!0}),BaseTextBlock.textProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"text",!0),BaseTextBlock.sizeProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"size",Enums.TextSize),BaseTextBlock.weightProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"weight",Enums.TextWeight),BaseTextBlock.colorProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"color",Enums.TextColor),BaseTextBlock.isSubtleProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"isSubtle"),BaseTextBlock.fontTypeProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_2,"fontType",Enums.FontType),BaseTextBlock.selectActionProperty=new ActionProperty(serialization_1.Versions.v1_1,"selectAction",["Action.ShowCard"]),__decorate([serialization_1.property(BaseTextBlock.sizeProperty)],BaseTextBlock.prototype,"size",void 0),__decorate([serialization_1.property(BaseTextBlock.weightProperty)],BaseTextBlock.prototype,"weight",void 0),__decorate([serialization_1.property(BaseTextBlock.colorProperty)],BaseTextBlock.prototype,"color",void 0),__decorate([serialization_1.property(BaseTextBlock.fontTypeProperty)],BaseTextBlock.prototype,"fontType",void 0),__decorate([serialization_1.property(BaseTextBlock.isSubtleProperty)],BaseTextBlock.prototype,"isSubtle",void 0),__decorate([serialization_1.property(BaseTextBlock.textProperty)],BaseTextBlock.prototype,"text",null),__decorate([serialization_1.property(BaseTextBlock.selectActionProperty)],BaseTextBlock.prototype,"selectAction",void 0),BaseTextBlock}(CardElement);exports.BaseTextBlock=BaseTextBlock;var TextBlock=function(_super){function TextBlock(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.wrap=!1,_this._treatAsPlainText=!0,_this.useMarkdown=!0,_this}return __extends(TextBlock,_super),TextBlock.prototype.restoreOriginalContent=function(){void 0!==this.renderedElement&&(this.maxLines&&this.maxLines>0&&(this.renderedElement.style.maxHeight=this._computedLineHeight*this.maxLines+"px"),this.renderedElement.innerHTML=this._originalInnerHtml)},TextBlock.prototype.truncateIfSupported=function(maxHeight){if(void 0!==this.renderedElement){var children=this.renderedElement.children,isTextOnly=!children.length;if(isTextOnly||1==children.length&&"p"==children[0].tagName.toLowerCase()){var element=isTextOnly?this.renderedElement:children[0];return Utils.truncate(element,maxHeight,this._computedLineHeight),!0}}return!1},TextBlock.prototype.setText=function(value){_super.prototype.setText.call(this,value),this._processedText=void 0},TextBlock.prototype.internalRender=function(){var _this=this;if(this._processedText=void 0,this.text){var preProcessedText=this.preProcessPropertyValue(BaseTextBlock.textProperty),hostConfig=this.hostConfig,element=void 0;if(this.forElementId){var labelElement=document.createElement("label");labelElement.htmlFor=this.forElementId,element=labelElement}else element=document.createElement("div");if(element.classList.add(hostConfig.makeCssClassName("ac-textBlock")),element.style.overflow="hidden",this.applyStylesTo(element),"heading"===this.style){element.setAttribute("role","heading");var headingLevel=this.hostConfig.textBlock.headingLevel;void 0!==headingLevel&&headingLevel>0&&element.setAttribute("aria-level",headingLevel.toString())}if(this.selectAction&&hostConfig.supportsInteractivity&&(element.onclick=function(e){_this.selectAction&&_this.selectAction.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this.selectAction.execute())},this.selectAction.setupElementForAccessibility(element),this.selectAction.isEnabled&&element.classList.add(hostConfig.makeCssClassName("ac-selectable"))),!this._processedText){this._treatAsPlainText=!0;var formattedText=TextFormatters.formatText(this.lang,preProcessedText);if(this.useMarkdown&&formattedText){shared_1.GlobalSettings.allowMarkForTextHighlighting&&(formattedText=formattedText.replace(/<mark>/g,"===").replace(/<\/mark>/g,"/==/"));var markdownProcessingResult=AdaptiveCard.applyMarkdown(formattedText);if(markdownProcessingResult.didProcess&&markdownProcessingResult.outputHtml){if(this._processedText=markdownProcessingResult.outputHtml,this._treatAsPlainText=!1,shared_1.GlobalSettings.allowMarkForTextHighlighting&&this._processedText){var markStyle="",effectiveStyle=this.getEffectiveStyleDefinition();effectiveStyle.highlightBackgroundColor&&(markStyle+="background-color: "+effectiveStyle.highlightBackgroundColor+";"),effectiveStyle.highlightForegroundColor&&(markStyle+="color: "+effectiveStyle.highlightForegroundColor+";"),markStyle&&(markStyle='style="'+markStyle+'"'),this._processedText=this._processedText.replace(/===/g,"<mark "+markStyle+">").replace(/\/==\//g,"</mark>")}}else this._processedText=formattedText,this._treatAsPlainText=!0}else this._processedText=formattedText,this._treatAsPlainText=!0}if(this._processedText||(this._processedText=""),this._treatAsPlainText?element.innerText=this._processedText:element.innerHTML=this._processedText,element.firstElementChild instanceof HTMLElement){var firstElementChild=element.firstElementChild;firstElementChild.style.marginTop="0px",firstElementChild.style.width="100%",this.wrap||(firstElementChild.style.overflow="hidden",firstElementChild.style.textOverflow="ellipsis")}element.lastElementChild instanceof HTMLElement&&(element.lastElementChild.style.marginBottom="0px");for(var anchors=element.getElementsByTagName("a"),i=0;i<anchors.length;i++){var anchor=anchors[i];anchor.classList.add(hostConfig.makeCssClassName("ac-anchor")),anchor.target="_blank",anchor.onclick=function(e){raiseAnchorClickedEvent(_this,e.target,e)&&(e.preventDefault(),e.cancelBubble=!0)},anchor.oncontextmenu=function(e){return!raiseAnchorClickedEvent(_this,e.target,e)||(e.preventDefault(),e.cancelBubble=!0,!1)}}return this.wrap?(element.style.wordWrap="break-word",this.maxLines&&this.maxLines>0&&(element.style.overflow="hidden",Utils.isInternetExplorer()||!shared_1.GlobalSettings.useWebkitLineClamp?element.style.maxHeight=this._computedLineHeight*this.maxLines+"px":(element.style.removeProperty("line-height"),element.style.display="-webkit-box",element.style.webkitBoxOrient="vertical",element.style.webkitLineClamp=this.maxLines.toString()))):(element.style.whiteSpace="nowrap",element.style.textOverflow="ellipsis"),(shared_1.GlobalSettings.useAdvancedTextBlockTruncation||shared_1.GlobalSettings.useAdvancedCardBottomTruncation)&&(this._originalInnerHtml=element.innerHTML),element}},TextBlock.prototype.truncateOverflow=function(maxHeight){return maxHeight>=this._computedLineHeight&&this.truncateIfSupported(maxHeight)},TextBlock.prototype.undoOverflowTruncation=function(){if(this.restoreOriginalContent(),shared_1.GlobalSettings.useAdvancedTextBlockTruncation&&this.maxLines){var maxHeight=this._computedLineHeight*this.maxLines;this.truncateIfSupported(maxHeight)}},TextBlock.prototype.applyStylesTo=function(targetElement){switch(_super.prototype.applyStylesTo.call(this,targetElement),this.getEffectiveHorizontalAlignment()){case Enums.HorizontalAlignment.Center:targetElement.style.textAlign="center";break;case Enums.HorizontalAlignment.Right:targetElement.style.textAlign="end";break;default:targetElement.style.textAlign="start"}var lineHeights=this.hostConfig.lineHeights;if(lineHeights)switch(this.effectiveSize){case Enums.TextSize.Small:this._computedLineHeight=lineHeights.small;break;case Enums.TextSize.Medium:this._computedLineHeight=lineHeights.medium;break;case Enums.TextSize.Large:this._computedLineHeight=lineHeights.large;break;case Enums.TextSize.ExtraLarge:this._computedLineHeight=lineHeights.extraLarge;break;default:this._computedLineHeight=lineHeights.default}else this._computedLineHeight=1.33*this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType));targetElement.style.lineHeight=this._computedLineHeight+"px"},TextBlock.prototype.getJsonTypeName=function(){return"TextBlock"},TextBlock.prototype.getEffectiveTextStyleDefinition=function(){return this.style?this.hostConfig.textStyles.getStyleByName(this.style):_super.prototype.getEffectiveTextStyleDefinition.call(this)},TextBlock.prototype.updateLayout=function(processChildren){void 0===processChildren&&(processChildren=!1),_super.prototype.updateLayout.call(this,processChildren),shared_1.GlobalSettings.useAdvancedTextBlockTruncation&&this.maxLines&&this.isDisplayed()&&(this.restoreOriginalContent(),this.truncateIfSupported(this._computedLineHeight*this.maxLines))},TextBlock.wrapProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"wrap",!1),TextBlock.maxLinesProperty=new serialization_1.NumProperty(serialization_1.Versions.v1_0,"maxLines"),TextBlock.styleProperty=new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5,"style",[{value:"default"},{value:"columnHeader"},{value:"heading"}]),__decorate([serialization_1.property(TextBlock.wrapProperty)],TextBlock.prototype,"wrap",void 0),__decorate([serialization_1.property(TextBlock.maxLinesProperty)],TextBlock.prototype,"maxLines",void 0),__decorate([serialization_1.property(TextBlock.styleProperty)],TextBlock.prototype,"style",void 0),TextBlock}(BaseTextBlock);exports.TextBlock=TextBlock;var TextRun=function(_super){function TextRun(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.italic=!1,_this.strikethrough=!1,_this.highlight=!1,_this.underline=!1,_this}return __extends(TextRun,_super),TextRun.prototype.populateSchema=function(schema){_super.prototype.populateSchema.call(this,schema),schema.add(BaseTextBlock.selectActionProperty)},TextRun.prototype.internalRender=function(){var _this=this;if(this.text){var preProcessedText=this.preProcessPropertyValue(BaseTextBlock.textProperty),hostConfig=this.hostConfig,formattedText=TextFormatters.formatText(this.lang,preProcessedText);formattedText||(formattedText="");var element=document.createElement("span");if(element.classList.add(hostConfig.makeCssClassName("ac-textRun")),this.applyStylesTo(element),this.selectAction&&hostConfig.supportsInteractivity){var anchor=document.createElement("a");anchor.classList.add(hostConfig.makeCssClassName("ac-anchor"));var href=this.selectAction.getHref();anchor.href=href||"",anchor.target="_blank",anchor.onclick=function(e){_this.selectAction&&_this.selectAction.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this.selectAction.execute())},this.selectAction.setupElementForAccessibility(anchor),anchor.innerText=formattedText,element.appendChild(anchor)}else element.innerText=formattedText;return element}},TextRun.prototype.applyStylesTo=function(targetElement){if(_super.prototype.applyStylesTo.call(this,targetElement),this.italic&&(targetElement.style.fontStyle="italic"),this.strikethrough&&(targetElement.style.textDecoration="line-through"),this.highlight){var colorDefinition=this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors,this.effectiveColor);targetElement.style.backgroundColor=Utils.stringToCssColor(this.effectiveIsSubtle?colorDefinition.highlightColors.subtle:colorDefinition.highlightColors.default)}this.underline&&(targetElement.style.textDecoration="underline")},TextRun.prototype.getJsonTypeName=function(){return"TextRun"},Object.defineProperty(TextRun.prototype,"isStandalone",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(TextRun.prototype,"isInline",{get:function(){return!0},enumerable:!1,configurable:!0}),TextRun.italicProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"italic",!1),TextRun.strikethroughProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"strikethrough",!1),TextRun.highlightProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"highlight",!1),TextRun.underlineProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_3,"underline",!1),__decorate([serialization_1.property(TextRun.italicProperty)],TextRun.prototype,"italic",void 0),__decorate([serialization_1.property(TextRun.strikethroughProperty)],TextRun.prototype,"strikethrough",void 0),__decorate([serialization_1.property(TextRun.highlightProperty)],TextRun.prototype,"highlight",void 0),__decorate([serialization_1.property(TextRun.underlineProperty)],TextRun.prototype,"underline",void 0),TextRun}(BaseTextBlock);exports.TextRun=TextRun;var RichTextBlock=function(_super){function RichTextBlock(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._inlines=[],_this}return __extends(RichTextBlock,_super),RichTextBlock.prototype.internalAddInline=function(inline,forceAdd){if(void 0===forceAdd&&(forceAdd=!1),!inline.isInline)throw new Error(strings_1.Strings.errors.elementCannotBeUsedAsInline());if(!(void 0===inline.parent||forceAdd)&&inline.parent!=this)throw new Error(strings_1.Strings.errors.inlineAlreadyParented());inline.setParent(this),this._inlines.push(inline)},RichTextBlock.prototype.internalParse=function(source,context){if(_super.prototype.internalParse.call(this,source,context),this._inlines=[],Array.isArray(source.inlines))for(var _i=0,_a=source.inlines;_i<_a.length;_i++){var jsonInline=_a[_i],inline=void 0;if("string"==typeof jsonInline){var textRun=new TextRun;textRun.text=jsonInline,inline=textRun}else inline=context.parseElement(this,jsonInline,!1);inline&&this.internalAddInline(inline,!0)}},RichTextBlock.prototype.internalToJSON=function(target,context){if(_super.prototype.internalToJSON.call(this,target,context),this._inlines.length>0){for(var jsonInlines=[],_i=0,_a=this._inlines;_i<_a.length;_i++){var inline=_a[_i];jsonInlines.push(inline.toJSON(context))}context.serializeValue(target,"inlines",jsonInlines)}},RichTextBlock.prototype.internalRender=function(){if(this._inlines.length>0){var element=void 0;if(this.forElementId){var labelElement=document.createElement("label");labelElement.htmlFor=this.forElementId,element=labelElement}else element=document.createElement("div");switch(element.className=this.hostConfig.makeCssClassName("ac-richTextBlock"),this.getEffectiveHorizontalAlignment()){case Enums.HorizontalAlignment.Center:element.style.textAlign="center";break;case Enums.HorizontalAlignment.Right:element.style.textAlign="end";break;default:element.style.textAlign="start"}for(var renderedInlines=0,_i=0,_a=this._inlines;_i<_a.length;_i++){var renderedInline=_a[_i].render();renderedInline&&(element.appendChild(renderedInline),renderedInlines++)}if(renderedInlines>0)return element}},RichTextBlock.prototype.asString=function(){for(var result="",_i=0,_a=this._inlines;_i<_a.length;_i++){result+=_a[_i].asString()}return result},RichTextBlock.prototype.getJsonTypeName=function(){return"RichTextBlock"},RichTextBlock.prototype.getInlineCount=function(){return this._inlines.length},RichTextBlock.prototype.getInlineAt=function(index){if(index>=0&&index<this._inlines.length)return this._inlines[index];throw new Error(strings_1.Strings.errors.indexOutOfRange(index))},RichTextBlock.prototype.addInline=function(inline){"string"==typeof inline?this.internalAddInline(new TextRun(inline)):this.internalAddInline(inline)},RichTextBlock.prototype.removeInline=function(inline){var index=this._inlines.indexOf(inline);return index>=0&&(this._inlines[index].setParent(void 0),this._inlines.splice(index,1),!0)},RichTextBlock}(CardElement);exports.RichTextBlock=RichTextBlock;var Fact=function(_super){function Fact(name,value){var _this=_super.call(this)||this;return _this.name=name,_this.value=value,_this}return __extends(Fact,_super),Fact.prototype.getSchemaKey=function(){return"Fact"},Fact.titleProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"title"),Fact.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),__decorate([serialization_1.property(Fact.titleProperty)],Fact.prototype,"name",void 0),__decorate([serialization_1.property(Fact.valueProperty)],Fact.prototype,"value",void 0),Fact}(serialization_1.SerializableObject);exports.Fact=Fact;var FactSet=function(_super){function FactSet(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(FactSet,_super),Object.defineProperty(FactSet.prototype,"useDefaultSizing",{get:function(){return!1},enumerable:!1,configurable:!0}),FactSet.prototype.internalRender=function(){var element=void 0,hostConfig=this.hostConfig;if(this.facts.length>0){(element=document.createElement("table")).style.borderWidth="0px",element.style.borderSpacing="0px",element.style.borderStyle="none",element.style.borderCollapse="collapse",element.style.display="block",element.style.overflow="hidden",element.classList.add(hostConfig.makeCssClassName("ac-factset")),element.setAttribute("role","presentation");for(var i=0;i<this.facts.length;i++){var trElement=document.createElement("tr");i>0&&(trElement.style.marginTop=hostConfig.factSet.spacing+"px");var tdElement=document.createElement("td");tdElement.style.padding="0",tdElement.classList.add(hostConfig.makeCssClassName("ac-fact-title")),hostConfig.factSet.title.maxWidth&&(tdElement.style.maxWidth=hostConfig.factSet.title.maxWidth+"px"),tdElement.style.verticalAlign="top";var textBlock=new TextBlock;textBlock.setParent(this),textBlock.text=!this.facts[i].name&&this.isDesignMode()?"Title":this.facts[i].name,textBlock.size=hostConfig.factSet.title.size,textBlock.color=hostConfig.factSet.title.color,textBlock.isSubtle=hostConfig.factSet.title.isSubtle,textBlock.weight=hostConfig.factSet.title.weight,textBlock.wrap=hostConfig.factSet.title.wrap,textBlock.spacing=Enums.Spacing.None,Utils.appendChild(tdElement,textBlock.render()),Utils.appendChild(trElement,tdElement),(tdElement=document.createElement("td")).style.width="10px",Utils.appendChild(trElement,tdElement),(tdElement=document.createElement("td")).style.padding="0",tdElement.style.verticalAlign="top",tdElement.classList.add(hostConfig.makeCssClassName("ac-fact-value")),(textBlock=new TextBlock).setParent(this),textBlock.text=this.facts[i].value,textBlock.size=hostConfig.factSet.value.size,textBlock.color=hostConfig.factSet.value.color,textBlock.isSubtle=hostConfig.factSet.value.isSubtle,textBlock.weight=hostConfig.factSet.value.weight,textBlock.wrap=hostConfig.factSet.value.wrap,textBlock.spacing=Enums.Spacing.None,Utils.appendChild(tdElement,textBlock.render()),Utils.appendChild(trElement,tdElement),Utils.appendChild(element,trElement)}}return element},FactSet.prototype.getJsonTypeName=function(){return"FactSet"},FactSet.factsProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0,"facts",Fact),__decorate([serialization_1.property(FactSet.factsProperty)],FactSet.prototype,"facts",void 0),FactSet}(CardElement);exports.FactSet=FactSet;var ImageDimensionProperty=function(_super){function ImageDimensionProperty(targetVersion,name,internalName,fallbackProperty){var _this=_super.call(this,targetVersion,name)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.internalName=internalName,_this.fallbackProperty=fallbackProperty,_this}return __extends(ImageDimensionProperty,_super),ImageDimensionProperty.prototype.getInternalName=function(){return this.internalName},ImageDimensionProperty.prototype.parse=function(sender,source,context){var result=void 0,sourceValue=source[this.name];if(void 0===sourceValue)return this.defaultValue;var isValid=!1;if("string"==typeof sourceValue){try{var size=shared_1.SizeAndUnit.parse(sourceValue,!0);size.unit==Enums.SizeUnit.Pixel&&(result=size.physicalSize,isValid=!0)}catch(_a){}!isValid&&this.fallbackProperty&&(isValid=this.fallbackProperty.isValidValue(sourceValue,context))}return isValid||context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(sourceValue,this.name)),result},ImageDimensionProperty.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,"number"!=typeof value||isNaN(value)?void 0:value+"px")},ImageDimensionProperty}(serialization_1.PropertyDefinition),Image=function(_super){function Image(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.size=Enums.Size.Auto,_this.style=Enums.ImageStyle.Default,_this}return __extends(Image,_super),Image.prototype.populateSchema=function(schema){_super.prototype.populateSchema.call(this,schema),schema.remove(CardElement.heightProperty)},Image.prototype.applySize=function(element){if(this.pixelWidth||this.pixelHeight)this.pixelWidth&&(element.style.width=this.pixelWidth+"px"),this.pixelHeight&&(element.style.height=this.pixelHeight+"px");else if(this.maxHeight){switch(this.size){case Enums.Size.Small:element.style.height=this.hostConfig.imageSizes.small+"px";break;case Enums.Size.Large:element.style.height=this.hostConfig.imageSizes.large+"px";break;default:element.style.height=this.hostConfig.imageSizes.medium+"px"}element.style.maxHeight=this.maxHeight+"px"}else{switch(this.size){case Enums.Size.Stretch:element.style.width="100%";break;case Enums.Size.Auto:element.style.maxWidth="100%";break;case Enums.Size.Small:element.style.width=this.hostConfig.imageSizes.small+"px";break;case Enums.Size.Large:element.style.width=this.hostConfig.imageSizes.large+"px";break;case Enums.Size.Medium:element.style.width=this.hostConfig.imageSizes.medium+"px"}element.style.maxHeight="100%"}},Object.defineProperty(Image.prototype,"useDefaultSizing",{get:function(){return!1},enumerable:!1,configurable:!0}),Image.prototype.internalRender=function(){var _this=this,element=void 0;if(this.url){(element=document.createElement("div")).style.display="flex",element.style.alignItems="flex-start";var hostConfig=this.hostConfig;switch(this.getEffectiveHorizontalAlignment()){case Enums.HorizontalAlignment.Center:element.style.justifyContent="center";break;case Enums.HorizontalAlignment.Right:element.style.justifyContent="flex-end";break;default:element.style.justifyContent="flex-start"}var imageElement=document.createElement("img");imageElement.onload=function(e){raiseImageLoadedEvent(_this)},imageElement.onerror=function(e){if(_this.renderedElement){var card=_this.getRootElement();if(_this.renderedElement.innerHTML="",card&&card.designMode){var errorElement=document.createElement("div");errorElement.style.display="flex",errorElement.style.alignItems="center",errorElement.style.justifyContent="center",errorElement.style.backgroundColor="#EEEEEE",errorElement.style.color="black",errorElement.innerText=":-(",errorElement.style.padding="10px",_this.applySize(errorElement),_this.renderedElement.appendChild(errorElement)}}raiseImageLoadedEvent(_this)},imageElement.style.minWidth="0",imageElement.classList.add(hostConfig.makeCssClassName("ac-image")),this.selectAction&&hostConfig.supportsInteractivity&&(imageElement.onkeypress=function(e){_this.selectAction&&_this.selectAction.isEnabled&&("Enter"==e.code||"Space"==e.code)&&(e.preventDefault(),e.cancelBubble=!0,_this.selectAction.execute())},imageElement.onclick=function(e){_this.selectAction&&_this.selectAction.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this.selectAction.execute())},this.selectAction.setupElementForAccessibility(imageElement),this.selectAction.isEnabled&&imageElement.classList.add(hostConfig.makeCssClassName("ac-selectable"))),this.applySize(imageElement),this.style===Enums.ImageStyle.Person&&(imageElement.style.borderRadius="50%",imageElement.style.backgroundPosition="50% 50%",imageElement.style.backgroundRepeat="no-repeat"),imageElement.style.backgroundColor=Utils.stringToCssColor(this.backgroundColor),imageElement.src=this.preProcessPropertyValue(Image.urlProperty);var altTextProperty=this.preProcessPropertyValue(Image.altTextProperty);altTextProperty&&(imageElement.alt=altTextProperty),element.appendChild(imageElement)}return element},Image.prototype.getJsonTypeName=function(){return"Image"},Image.prototype.getActionById=function(id){var result=_super.prototype.getActionById.call(this,id);return!result&&this.selectAction&&(result=this.selectAction.getActionById(id)),result},Image.prototype.getResourceInformation=function(){return this.url?[{url:this.url,mimeType:"image"}]:[]},Image.urlProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"url"),Image.altTextProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"altText"),Image.backgroundColorProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"backgroundColor"),Image.styleProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"style",Enums.ImageStyle,Enums.ImageStyle.Default),Image.sizeProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"size",Enums.Size,Enums.Size.Auto),Image.pixelWidthProperty=new ImageDimensionProperty(serialization_1.Versions.v1_1,"width","pixelWidth"),Image.pixelHeightProperty=new ImageDimensionProperty(serialization_1.Versions.v1_1,"height","pixelHeight",CardElement.heightProperty),Image.selectActionProperty=new ActionProperty(serialization_1.Versions.v1_1,"selectAction",["Action.ShowCard"]),__decorate([serialization_1.property(Image.urlProperty)],Image.prototype,"url",void 0),__decorate([serialization_1.property(Image.altTextProperty)],Image.prototype,"altText",void 0),__decorate([serialization_1.property(Image.backgroundColorProperty)],Image.prototype,"backgroundColor",void 0),__decorate([serialization_1.property(Image.sizeProperty)],Image.prototype,"size",void 0),__decorate([serialization_1.property(Image.styleProperty)],Image.prototype,"style",void 0),__decorate([serialization_1.property(Image.pixelWidthProperty)],Image.prototype,"pixelWidth",void 0),__decorate([serialization_1.property(Image.pixelHeightProperty)],Image.prototype,"pixelHeight",void 0),__decorate([serialization_1.property(Image.selectActionProperty)],Image.prototype,"selectAction",void 0),Image}(CardElement);exports.Image=Image;var CardElementContainer=function(_super){function CardElementContainer(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.allowVerticalOverflow=!1,_this}return __extends(CardElementContainer,_super),CardElementContainer.prototype.populateSchema=function(schema){_super.prototype.populateSchema.call(this,schema),this.isSelectable||schema.remove(CardElementContainer.selectActionProperty)},CardElementContainer.prototype.isElementAllowed=function(element){return this.hostConfig.supportsInteractivity||!element.isInteractive},CardElementContainer.prototype.applyPadding=function(){if(_super.prototype.applyPadding.call(this),this.renderedElement){var physicalPadding=new shared_1.SpacingDefinition;this.getEffectivePadding()&&(physicalPadding=this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding())),this.renderedElement.style.paddingTop=physicalPadding.top+"px",this.renderedElement.style.paddingRight=physicalPadding.right+"px",this.renderedElement.style.paddingBottom=physicalPadding.bottom+"px",this.renderedElement.style.paddingLeft=physicalPadding.left+"px",this.renderedElement.style.marginRight="0",this.renderedElement.style.marginLeft="0"}},Object.defineProperty(CardElementContainer.prototype,"isSelectable",{get:function(){return!1},enumerable:!1,configurable:!0}),CardElementContainer.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context);for(var i=0;i<this.getItemCount();i++){var item=this.getItemAt(i);!this.hostConfig.supportsInteractivity&&item.isInteractive&&context.addFailure(this,Enums.ValidationEvent.InteractivityNotAllowed,strings_1.Strings.errors.interactivityNotAllowed()),this.isElementAllowed(item)||context.addFailure(this,Enums.ValidationEvent.InteractivityNotAllowed,strings_1.Strings.errors.elementTypeNotAllowed(item.getJsonTypeName())),item.internalValidateProperties(context)}this._selectAction&&this._selectAction.internalValidateProperties(context)},CardElementContainer.prototype.render=function(){var _this=this,element=_super.prototype.render.call(this);if(element){var hostConfig=this.hostConfig;this.allowVerticalOverflow&&(element.style.overflowX="hidden",element.style.overflowY="auto"),element&&this.isSelectable&&this._selectAction&&hostConfig.supportsInteractivity&&(element.onclick=function(e){_this._selectAction&&_this._selectAction.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this._selectAction.execute())},element.onkeypress=function(e){_this._selectAction&&_this._selectAction.isEnabled&&("Enter"==e.code||"Space"==e.code)&&(e.preventDefault(),e.cancelBubble=!0,_this._selectAction.execute())},this._selectAction.setupElementForAccessibility(element),this._selectAction.isEnabled&&element.classList.add(hostConfig.makeCssClassName("ac-selectable")))}return element},CardElementContainer.prototype.updateLayout=function(processChildren){if(void 0===processChildren&&(processChildren=!0),_super.prototype.updateLayout.call(this,processChildren),processChildren)for(var i=0;i<this.getItemCount();i++)this.getItemAt(i).updateLayout()},CardElementContainer.prototype.getAllInputs=function(processActions){void 0===processActions&&(processActions=!0);for(var result=[],i=0;i<this.getItemCount();i++)result=result.concat(this.getItemAt(i).getAllInputs(processActions));return result},CardElementContainer.prototype.getResourceInformation=function(){for(var result=[],i=0;i<this.getItemCount();i++)result=result.concat(this.getItemAt(i).getResourceInformation());return result},CardElementContainer.prototype.getElementById=function(id){var result=_super.prototype.getElementById.call(this,id);if(!result)for(var i=0;i<this.getItemCount()&&!(result=this.getItemAt(i).getElementById(id));i++);return result},CardElementContainer.prototype.findDOMNodeOwner=function(node){for(var target=void 0,i=0;i<this.getItemCount();i++)if(target=this.getItemAt(i).findDOMNodeOwner(node))return target;return _super.prototype.findDOMNodeOwner.call(this,node)},CardElementContainer.selectActionProperty=new ActionProperty(serialization_1.Versions.v1_1,"selectAction",["Action.ShowCard"]),__decorate([serialization_1.property(CardElementContainer.selectActionProperty)],CardElementContainer.prototype,"_selectAction",void 0),CardElementContainer}(CardElement);exports.CardElementContainer=CardElementContainer;var ImageSet=function(_super){function ImageSet(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._images=[],_this.imageSize=Enums.ImageSize.Medium,_this}return __extends(ImageSet,_super),ImageSet.prototype.internalRender=function(){var element=void 0;if(this._images.length>0){(element=document.createElement("div")).style.display="flex",element.style.flexWrap="wrap";for(var _i=0,_a=this._images;_i<_a.length;_i++){var image=_a[_i];switch(this.imageSize){case Enums.ImageSize.Small:image.size=Enums.Size.Small;break;case Enums.ImageSize.Large:image.size=Enums.Size.Large;break;default:image.size=Enums.Size.Medium}image.maxHeight=this.hostConfig.imageSet.maxImageHeight;var renderedImage=image.render();renderedImage&&(renderedImage.style.display="inline-flex",renderedImage.style.margin="0px",renderedImage.style.marginRight="10px",Utils.appendChild(element,renderedImage))}}return element},ImageSet.prototype.getItemCount=function(){return this._images.length},ImageSet.prototype.getItemAt=function(index){return this._images[index]},ImageSet.prototype.getFirstVisibleRenderedItem=function(){return this._images&&this._images.length>0?this._images[0]:void 0},ImageSet.prototype.getLastVisibleRenderedItem=function(){return this._images&&this._images.length>0?this._images[this._images.length-1]:void 0},ImageSet.prototype.removeItem=function(item){if(item instanceof Image){var itemIndex=this._images.indexOf(item);if(itemIndex>=0)return this._images.splice(itemIndex,1),item.setParent(void 0),this.updateLayout(),!0}return!1},ImageSet.prototype.getJsonTypeName=function(){return"ImageSet"},ImageSet.prototype.addImage=function(image){if(image.parent)throw new Error("This image already belongs to another ImageSet");this._images.push(image),image.setParent(this)},ImageSet.prototype.indexOf=function(cardElement){return cardElement instanceof Image?this._images.indexOf(cardElement):-1},ImageSet.imagesProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0,"images",Image,(function(sender,item){item.setParent(sender)})),ImageSet.imageSizeProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"imageSize",Enums.ImageSize,Enums.ImageSize.Medium),__decorate([serialization_1.property(ImageSet.imagesProperty)],ImageSet.prototype,"_images",void 0),__decorate([serialization_1.property(ImageSet.imageSizeProperty)],ImageSet.prototype,"imageSize",void 0),ImageSet}(CardElementContainer);exports.ImageSet=ImageSet;var MediaSource=function(_super){function MediaSource(url,mimeType){var _this=_super.call(this)||this;return _this.url=url,_this.mimeType=mimeType,_this}return __extends(MediaSource,_super),MediaSource.prototype.getSchemaKey=function(){return"MediaSource"},MediaSource.prototype.isValid=function(){return!(!this.mimeType||!this.url)},MediaSource.prototype.render=function(){var result=void 0;return this.isValid()&&((result=document.createElement("source")).src=this.url,result.type=this.mimeType),result},MediaSource.mimeTypeProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"mimeType"),MediaSource.urlProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"url"),__decorate([serialization_1.property(MediaSource.mimeTypeProperty)],MediaSource.prototype,"mimeType",void 0),__decorate([serialization_1.property(MediaSource.urlProperty)],MediaSource.prototype,"url",void 0),MediaSource}(serialization_1.SerializableObject);exports.MediaSource=MediaSource;var Media=function(_super){function Media(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.sources=[],_this}return __extends(Media,_super),Media.prototype.getPosterUrl=function(){return this.poster?this.poster:this.hostConfig.media.defaultPoster},Media.prototype.processSources=function(){this._selectedSources=[],this._selectedMediaType=void 0;for(var _i=0,_a=this.sources;_i<_a.length;_i++){var source=_a[_i],mimeComponents=source.mimeType?source.mimeType.split("/"):[];if(2==mimeComponents.length){if(!this._selectedMediaType){var index=Media.supportedMediaTypes.indexOf(mimeComponents[0]);index>=0&&(this._selectedMediaType=Media.supportedMediaTypes[index])}mimeComponents[0]==this._selectedMediaType&&this._selectedSources.push(source)}}},Media.prototype.handlePlayButtonInvoke=function(event){if(this.hostConfig.media.allowInlinePlayback){if(event.preventDefault(),event.cancelBubble=!0,this.renderedElement){var mediaPlayerElement=this.renderMediaPlayer();this.renderedElement.innerHTML="",this.renderedElement.appendChild(mediaPlayerElement),mediaPlayerElement.play(),mediaPlayerElement.focus()}}else Media.onPlay&&(event.preventDefault(),event.cancelBubble=!0,Media.onPlay(this))},Media.prototype.renderPoster=function(){var _this=this,posterRootElement=document.createElement("div");posterRootElement.className=this.hostConfig.makeCssClassName("ac-media-poster"),posterRootElement.setAttribute("role","contentinfo"),posterRootElement.setAttribute("aria-label",this.altText?this.altText:strings_1.Strings.defaults.mediaPlayerAriaLabel()),posterRootElement.style.position="relative",posterRootElement.style.display="flex";var posterUrl=this.getPosterUrl();if(posterUrl){var posterImageElement_1=document.createElement("img");posterImageElement_1.style.width="100%",posterImageElement_1.style.height="100%",posterImageElement_1.setAttribute("role","presentation"),posterImageElement_1.onerror=function(e){posterImageElement_1.parentNode&&posterImageElement_1.parentNode.removeChild(posterImageElement_1),posterRootElement.classList.add("empty"),posterRootElement.style.minHeight="150px"},posterImageElement_1.src=posterUrl,posterRootElement.appendChild(posterImageElement_1)}else posterRootElement.classList.add("empty"),posterRootElement.style.minHeight="150px";if(this.hostConfig.supportsInteractivity&&this._selectedSources.length>0){var playButtonOuterElement=document.createElement("div");playButtonOuterElement.tabIndex=0,playButtonOuterElement.setAttribute("role","button"),playButtonOuterElement.setAttribute("aria-label",strings_1.Strings.defaults.mediaPlayerPlayMedia()),playButtonOuterElement.className=this.hostConfig.makeCssClassName("ac-media-playButton"),playButtonOuterElement.style.display="flex",playButtonOuterElement.style.alignItems="center",playButtonOuterElement.style.justifyContent="center",playButtonOuterElement.onclick=function(e){_this.handlePlayButtonInvoke(e)},playButtonOuterElement.onkeypress=function(e){"Enter"!=e.code&&"Space"!=e.code||_this.handlePlayButtonInvoke(e)};var playButtonInnerElement=document.createElement("div");playButtonInnerElement.className=this.hostConfig.makeCssClassName("ac-media-playButton-arrow"),playButtonInnerElement.style.width="12px",playButtonInnerElement.style.height="15px",playButtonInnerElement.style.borderTopWidth="7.5px",playButtonInnerElement.style.borderBottomWidth="7.5px",playButtonInnerElement.style.borderLeftWidth="12px",playButtonInnerElement.style.borderRightWidth="0",playButtonInnerElement.style.borderStyle="solid",playButtonInnerElement.style.borderTopColor="transparent",playButtonInnerElement.style.borderRightColor="transparent",playButtonInnerElement.style.borderBottomColor="transparent",playButtonInnerElement.style.transform="translate(1.2px,0px)",playButtonOuterElement.appendChild(playButtonInnerElement);var playButtonContainer=document.createElement("div");playButtonContainer.style.position="absolute",playButtonContainer.style.left="0",playButtonContainer.style.top="0",playButtonContainer.style.width="100%",playButtonContainer.style.height="100%",playButtonContainer.style.display="flex",playButtonContainer.style.justifyContent="center",playButtonContainer.style.alignItems="center",playButtonContainer.appendChild(playButtonOuterElement),posterRootElement.appendChild(playButtonContainer)}return posterRootElement},Media.prototype.renderMediaPlayer=function(){var mediaElement;if("video"==this._selectedMediaType){var videoPlayer=document.createElement("video"),posterUrl=this.getPosterUrl();posterUrl&&(videoPlayer.poster=posterUrl),mediaElement=videoPlayer}else mediaElement=document.createElement("audio");mediaElement.setAttribute("aria-label",this.altText?this.altText:strings_1.Strings.defaults.mediaPlayerAriaLabel()),mediaElement.setAttribute("webkit-playsinline",""),mediaElement.setAttribute("playsinline",""),mediaElement.autoplay=!0,mediaElement.controls=!0,Utils.isMobileOS()&&(mediaElement.muted=!0),mediaElement.preload="none",mediaElement.style.width="100%";for(var _i=0,_a=this.sources;_i<_a.length;_i++){var renderedSource=_a[_i].render();Utils.appendChild(mediaElement,renderedSource)}return mediaElement},Media.prototype.internalRender=function(){var element=document.createElement("div");return element.className=this.hostConfig.makeCssClassName("ac-media"),this.processSources(),element.appendChild(this.renderPoster()),element},Media.prototype.getJsonTypeName=function(){return"Media"},Media.prototype.getResourceInformation=function(){var result=[],posterUrl=this.getPosterUrl();posterUrl&&result.push({url:posterUrl,mimeType:"image"});for(var _i=0,_a=this.sources;_i<_a.length;_i++){var mediaSource=_a[_i];mediaSource.isValid()&&result.push({url:mediaSource.url,mimeType:mediaSource.mimeType})}return result},Object.defineProperty(Media.prototype,"selectedMediaType",{get:function(){return this._selectedMediaType},enumerable:!1,configurable:!0}),Media.sourcesProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_1,"sources",MediaSource),Media.posterProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"poster"),Media.altTextProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"altText"),Media.supportedMediaTypes=["audio","video"],__decorate([serialization_1.property(Media.sourcesProperty)],Media.prototype,"sources",void 0),__decorate([serialization_1.property(Media.posterProperty)],Media.prototype,"poster",void 0),__decorate([serialization_1.property(Media.altTextProperty)],Media.prototype,"altText",void 0),Media}(CardElement);exports.Media=Media;var Input=function(_super){function Input(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Input,_super),Input.prototype.getAllLabelIds=function(){var labelIds=[];return this.labelledBy&&labelIds.push(this.labelledBy),this._renderedLabelElement&&labelIds.push(this._renderedLabelElement.id),this._renderedErrorMessageElement&&labelIds.push(this._renderedErrorMessageElement.id),labelIds},Input.prototype.updateInputControlAriaLabelledBy=function(){if(this._renderedInputControlElement){var labelIds=this.getAllLabelIds();labelIds.length>0?this._renderedInputControlElement.setAttribute("aria-labelledby",labelIds.join(" ")):this._renderedInputControlElement.removeAttribute("aria-labelledby")}},Object.defineProperty(Input.prototype,"isNullable",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(Input.prototype,"renderedInputControlElement",{get:function(){return this._renderedInputControlElement},enumerable:!1,configurable:!0}),Object.defineProperty(Input.prototype,"inputControlContainerElement",{get:function(){return this._inputControlContainerElement},enumerable:!1,configurable:!0}),Input.prototype.overrideInternalRender=function(){var hostConfig=this.hostConfig;this._outerContainerElement=document.createElement("div"),this._outerContainerElement.style.display="flex",this._outerContainerElement.style.flexDirection="column";var renderedInputControlId=Utils.generateUniqueId();if(this.label){var labelRichTextBlock=new RichTextBlock;labelRichTextBlock.setParent(this),labelRichTextBlock.forElementId=renderedInputControlId;var labelInline=new TextRun(this.label);if(labelRichTextBlock.addInline(labelInline),this.isRequired){labelInline.init(hostConfig.inputs.label.requiredInputs);var isRequiredCueInline=new TextRun(hostConfig.inputs.label.requiredInputs.suffix);isRequiredCueInline.color=hostConfig.inputs.label.requiredInputs.suffixColor,isRequiredCueInline.ariaHidden=!0,labelRichTextBlock.addInline(isRequiredCueInline)}else labelInline.init(hostConfig.inputs.label.optionalInputs);this._renderedLabelElement=labelRichTextBlock.render(),this._renderedLabelElement&&(this._renderedLabelElement.id=Utils.generateUniqueId(),this._renderedLabelElement.style.marginBottom=hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing)+"px",this._outerContainerElement.appendChild(this._renderedLabelElement))}if(this._inputControlContainerElement=document.createElement("div"),this._inputControlContainerElement.className=hostConfig.makeCssClassName("ac-input-container"),this._inputControlContainerElement.style.display="flex","stretch"===this.height&&(this._inputControlContainerElement.style.alignItems="stretch",this._inputControlContainerElement.style.flex="1 1 auto"),this._renderedInputControlElement=this.internalRender(),this._renderedInputControlElement)return this._renderedInputControlElement.id=renderedInputControlId,this._renderedInputControlElement.style.minWidth="0px",this.isNullable&&this.isRequired&&(this._renderedInputControlElement.setAttribute("aria-required","true"),this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName("ac-input-required"))),this._inputControlContainerElement.appendChild(this._renderedInputControlElement),this._outerContainerElement.appendChild(this._inputControlContainerElement),this.updateInputControlAriaLabelledBy(),this._outerContainerElement},Input.prototype.valueChanged=function(){var input,card,onInputValueChangedHandler;this.isValid()&&this.resetValidationFailureCue(),this.onValueChanged&&this.onValueChanged(this),card=(input=this).getRootElement(),(onInputValueChangedHandler=card&&card.onInputValueChanged?card.onInputValueChanged:AdaptiveCard.onInputValueChanged)&&onInputValueChangedHandler(input)},Input.prototype.resetValidationFailureCue=function(){this.renderedInputControlElement&&(this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName("ac-input-validation-failed")),this.updateInputControlAriaLabelledBy(),this._renderedErrorMessageElement&&(this._outerContainerElement.removeChild(this._renderedErrorMessageElement),this._renderedErrorMessageElement=void 0))},Input.prototype.showValidationErrorMessage=function(){if(this.renderedElement&&this.errorMessage&&shared_1.GlobalSettings.displayInputValidationErrors){var errorMessageTextBlock=new TextBlock;errorMessageTextBlock.setParent(this),errorMessageTextBlock.text=this.errorMessage,errorMessageTextBlock.wrap=!0,errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage),this._renderedErrorMessageElement=errorMessageTextBlock.render(),this._renderedErrorMessageElement&&(this._renderedErrorMessageElement.id=Utils.generateUniqueId(),this._outerContainerElement.appendChild(this._renderedErrorMessageElement),this.updateInputControlAriaLabelledBy())}},Input.prototype.focus=function(){this._renderedInputControlElement&&this._renderedInputControlElement.focus()},Input.prototype.isValid=function(){return!0},Input.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this.id||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.inputsMustHaveUniqueId()),this.isRequired&&(this.label||context.addFailure(this,Enums.ValidationEvent.RequiredInputsShouldHaveLabel,"Required inputs should have a label"),this.errorMessage||context.addFailure(this,Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage,"Required inputs should have an error message"))},Input.prototype.validateValue=function(){this.resetValidationFailureCue();var result=this.isRequired?this.isSet()&&this.isValid():this.isValid();return!result&&this.renderedInputControlElement&&(this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName("ac-input-validation-failed")),this.showValidationErrorMessage()),result},Input.prototype.getAllInputs=function(processActions){return void 0===processActions&&(processActions=!0),[this]},Object.defineProperty(Input.prototype,"isInteractive",{get:function(){return!0},enumerable:!1,configurable:!0}),Input.labelProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_3,"label",!0),Input.isRequiredProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_3,"isRequired",!1),Input.errorMessageProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_3,"errorMessage",!0),__decorate([serialization_1.property(Input.labelProperty)],Input.prototype,"label",void 0),__decorate([serialization_1.property(Input.isRequiredProperty)],Input.prototype,"isRequired",void 0),__decorate([serialization_1.property(Input.errorMessageProperty)],Input.prototype,"errorMessage",void 0),Input}(CardElement);exports.Input=Input;var TextInput=function(_super){function TextInput(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.isMultiline=!1,_this.style=Enums.InputTextStyle.Text,_this}return __extends(TextInput,_super),TextInput.prototype.setupInput=function(input){var _this=this;input.style.flex="1 1 auto",input.tabIndex=0,this.placeholder&&(input.placeholder=this.placeholder,input.setAttribute("aria-label",this.placeholder)),this.defaultValue&&(input.value=this.defaultValue),this.maxLength&&this.maxLength>0&&(input.maxLength=this.maxLength),input.oninput=function(){_this.valueChanged()},input.onkeypress=function(e){e.ctrlKey&&"Enter"===e.code&&_this.inlineAction&&_this.inlineAction.isEnabled&&_this.inlineAction.execute()}},TextInput.prototype.internalRender=function(){var result;return this.isMultiline&&this.style!==Enums.InputTextStyle.Password?((result=document.createElement("textarea")).className=this.hostConfig.makeCssClassName("ac-input","ac-textInput","ac-multiline"),"stretch"===this.height&&(result.style.height="initial")):((result=document.createElement("input")).className=this.hostConfig.makeCssClassName("ac-input","ac-textInput"),result.type=Enums.InputTextStyle[this.style].toLowerCase()),this.setupInput(result),result},TextInput.prototype.overrideInternalRender=function(){var _this=this,renderedInputControl=_super.prototype.overrideInternalRender.call(this);if(this.inlineAction){var button_1=document.createElement("button");if(button_1.className=this.hostConfig.makeCssClassName(this.inlineAction.isEnabled?"ac-inlineActionButton":"ac-inlineActionButton-disabled"),button_1.onclick=function(e){_this.inlineAction&&_this.inlineAction.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this.inlineAction.execute())},this.inlineAction.iconUrl){button_1.classList.add("iconOnly");var icon_1=document.createElement("img");icon_1.style.height="100%",icon_1.setAttribute("role","presentation"),icon_1.style.display="none",icon_1.onload=function(){icon_1.style.removeProperty("display")},icon_1.onerror=function(){button_1.removeChild(icon_1),button_1.classList.remove("iconOnly"),button_1.classList.add("textOnly"),button_1.textContent=_this.inlineAction&&_this.inlineAction.title?_this.inlineAction.title:strings_1.Strings.defaults.inlineActionTitle()},icon_1.src=this.inlineAction.iconUrl,button_1.appendChild(icon_1),button_1.title=this.inlineAction.title?this.inlineAction.title:strings_1.Strings.defaults.inlineActionTitle()}else button_1.classList.add("textOnly"),button_1.textContent=this.inlineAction.title?this.inlineAction.title:strings_1.Strings.defaults.inlineActionTitle();this.inlineAction.setupElementForAccessibility(button_1,!0),button_1.style.marginLeft="8px",this.inputControlContainerElement.appendChild(button_1)}return renderedInputControl},TextInput.prototype.getJsonTypeName=function(){return"Input.Text"},TextInput.prototype.getActionById=function(id){var result=_super.prototype.getActionById.call(this,id);return!result&&this.inlineAction&&(result=this.inlineAction.getActionById(id)),result},TextInput.prototype.isSet=function(){return!!this.value},TextInput.prototype.isValid=function(){return!this.value||(!this.regex||new RegExp(this.regex,"g").test(this.value))},Object.defineProperty(TextInput.prototype,"value",{get:function(){return this.renderedInputControlElement?(this.isMultiline,this.renderedInputControlElement.value):void 0},enumerable:!1,configurable:!0}),TextInput.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),TextInput.maxLengthProperty=new serialization_1.NumProperty(serialization_1.Versions.v1_0,"maxLength"),TextInput.isMultilineProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"isMultiline",!1),TextInput.placeholderProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"placeholder"),TextInput.styleProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_0,"style",Enums.InputTextStyle,Enums.InputTextStyle.Text,[{value:Enums.InputTextStyle.Text},{value:Enums.InputTextStyle.Tel},{value:Enums.InputTextStyle.Url},{value:Enums.InputTextStyle.Email},{value:Enums.InputTextStyle.Password,targetVersion:serialization_1.Versions.v1_5}]),TextInput.inlineActionProperty=new ActionProperty(serialization_1.Versions.v1_0,"inlineAction",["Action.ShowCard"]),TextInput.regexProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_3,"regex",!0),__decorate([serialization_1.property(TextInput.valueProperty)],TextInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(TextInput.maxLengthProperty)],TextInput.prototype,"maxLength",void 0),__decorate([serialization_1.property(TextInput.isMultilineProperty)],TextInput.prototype,"isMultiline",void 0),__decorate([serialization_1.property(TextInput.placeholderProperty)],TextInput.prototype,"placeholder",void 0),__decorate([serialization_1.property(TextInput.styleProperty)],TextInput.prototype,"style",void 0),__decorate([serialization_1.property(TextInput.inlineActionProperty)],TextInput.prototype,"inlineAction",void 0),__decorate([serialization_1.property(TextInput.regexProperty)],TextInput.prototype,"regex",void 0),TextInput}(Input);exports.TextInput=TextInput;var ToggleInput=function(_super){function ToggleInput(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.valueOn="true",_this.valueOff="false",_this.wrap=!1,_this}return __extends(ToggleInput,_super),ToggleInput.prototype.updateInputControlAriaLabelledBy=function(){if(this._checkboxInputElement){var joinedLabelIds=this.getAllLabelIds().join(" ");this._checkboxInputLabelElement&&this._checkboxInputLabelElement.id&&(joinedLabelIds+=" "+this._checkboxInputLabelElement.id),joinedLabelIds?this._checkboxInputElement.setAttribute("aria-labelledby",joinedLabelIds):this._checkboxInputElement.removeAttribute("aria-labelledby")}},ToggleInput.prototype.internalRender=function(){var _this=this,element=document.createElement("div");if(element.className=this.hostConfig.makeCssClassName("ac-input","ac-toggleInput"),element.style.width="100%",element.style.display="flex",element.style.alignItems="center",this._checkboxInputElement=document.createElement("input"),this._checkboxInputElement.id=Utils.generateUniqueId(),this._checkboxInputElement.type="checkbox",this._checkboxInputElement.style.display="inline-block",this._checkboxInputElement.style.verticalAlign="middle",this._checkboxInputElement.style.margin="0",this._checkboxInputElement.style.flex="0 0 auto",this.title&&this._checkboxInputElement.setAttribute("aria-label",this.title),this.isRequired&&this._checkboxInputElement.setAttribute("aria-required","true"),this._checkboxInputElement.tabIndex=0,this.defaultValue==this.valueOn&&(this._checkboxInputElement.checked=!0),this._checkboxInputElement.onchange=function(){_this.valueChanged()},Utils.appendChild(element,this._checkboxInputElement),this.title||this.isDesignMode()){var label=new TextBlock;if(label.setParent(this),label.forElementId=this._checkboxInputElement.id,label.hostConfig=this.hostConfig,label.text=this.title?this.title:this.getJsonTypeName(),label.useMarkdown=shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox,label.wrap=this.wrap,this._checkboxInputLabelElement=label.render(),this._checkboxInputLabelElement){this._checkboxInputLabelElement.id=Utils.generateUniqueId(),this._checkboxInputLabelElement.style.display="inline-block",this._checkboxInputLabelElement.style.flex="1 1 auto",this._checkboxInputLabelElement.style.marginLeft="6px",this._checkboxInputLabelElement.style.verticalAlign="middle";var spacerElement=document.createElement("div");spacerElement.style.width="6px",Utils.appendChild(element,spacerElement),Utils.appendChild(element,this._checkboxInputLabelElement)}}return element},Object.defineProperty(ToggleInput.prototype,"isNullable",{get:function(){return!1},enumerable:!1,configurable:!0}),ToggleInput.prototype.getJsonTypeName=function(){return"Input.Toggle"},ToggleInput.prototype.focus=function(){this._checkboxInputElement&&this._checkboxInputElement.focus()},ToggleInput.prototype.isSet=function(){return this.isRequired?this.value===this.valueOn:!!this.value},Object.defineProperty(ToggleInput.prototype,"value",{get:function(){return this._checkboxInputElement?this._checkboxInputElement.checked?this.valueOn:this.valueOff:void 0},enumerable:!1,configurable:!0}),ToggleInput.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),ToggleInput.titleProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"title"),ToggleInput.valueOnProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"valueOn",!0,void 0,"true",(function(sender){return"true"})),ToggleInput.valueOffProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"valueOff",!0,void 0,"false",(function(sender){return"false"})),ToggleInput.wrapProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"wrap",!1),__decorate([serialization_1.property(ToggleInput.valueProperty)],ToggleInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(ToggleInput.titleProperty)],ToggleInput.prototype,"title",void 0),__decorate([serialization_1.property(ToggleInput.valueOnProperty)],ToggleInput.prototype,"valueOn",void 0),__decorate([serialization_1.property(ToggleInput.valueOffProperty)],ToggleInput.prototype,"valueOff",void 0),__decorate([serialization_1.property(ToggleInput.wrapProperty)],ToggleInput.prototype,"wrap",void 0),ToggleInput}(Input);exports.ToggleInput=ToggleInput;var Choice=function(_super){function Choice(title,value){var _this=_super.call(this)||this;return _this.title=title,_this.value=value,_this}return __extends(Choice,_super),Choice.prototype.getSchemaKey=function(){return"Choice"},Choice.titleProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"title"),Choice.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),__decorate([serialization_1.property(Choice.titleProperty)],Choice.prototype,"title",void 0),__decorate([serialization_1.property(Choice.valueProperty)],Choice.prototype,"value",void 0),Choice}(serialization_1.SerializableObject);exports.Choice=Choice;var ChoiceSetInput=function(_super){function ChoiceSetInput(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.isMultiSelect=!1,_this.wrap=!1,_this.choices=[],_this}return __extends(ChoiceSetInput,_super),Object.defineProperty(ChoiceSetInput.prototype,"isCompact",{get:function(){return!this.style||"compact"===this.style},set:function(value){this.style=value?void 0:"expanded"},enumerable:!1,configurable:!0}),ChoiceSetInput.getUniqueCategoryName=function(){var uniqueCategoryName="__ac-category"+ChoiceSetInput.uniqueCategoryCounter;return ChoiceSetInput.uniqueCategoryCounter++,uniqueCategoryName},ChoiceSetInput.prototype.internalApplyAriaCurrent=function(){if(this._selectElement){var options=this._selectElement.options;if(options)for(var i=0;i<options.length;i++)options[i].selected?options[i].setAttribute("aria-current","true"):options[i].removeAttribute("aria-current")}},ChoiceSetInput.prototype.renderCompoundInput=function(cssClassName,type,defaultValues){var _this=this,element=document.createElement("div");element.className=this.hostConfig.makeCssClassName("ac-input",cssClassName),element.style.width="100%",this._toggleInputs=[],this._labels=[];for(var _i=0,_a=this.choices;_i<_a.length;_i++){var choice=_a[_i],input=document.createElement("input");input.id=Utils.generateUniqueId(),input.type=type,input.style.margin="0",input.style.display="inline-block",input.style.verticalAlign="middle",input.style.flex="0 0 auto",input.name=this.id?this.id:this._uniqueCategoryName,this.isRequired&&input.setAttribute("aria-required","true"),choice.value&&(input.value=choice.value),choice.title&&input.setAttribute("aria-label",choice.title),defaultValues&&choice.value&&defaultValues.indexOf(choice.value)>=0&&(input.checked=!0),input.onchange=function(){_this.valueChanged()},this._toggleInputs.push(input);var compoundInput=document.createElement("div");compoundInput.style.display="flex",compoundInput.style.alignItems="center",Utils.appendChild(compoundInput,input);var label=new TextBlock;label.setParent(this),label.forElementId=input.id,label.hostConfig=this.hostConfig,label.text=choice.title?choice.title:"Choice "+this._toggleInputs.length,label.useMarkdown=shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox,label.wrap=this.wrap;var labelElement=label.render();if(this._labels.push(labelElement),labelElement){labelElement.id=Utils.generateUniqueId(),labelElement.style.display="inline-block",labelElement.style.flex="1 1 auto",labelElement.style.marginLeft="6px",labelElement.style.verticalAlign="middle";var spacerElement=document.createElement("div");spacerElement.style.width="6px",Utils.appendChild(compoundInput,spacerElement),Utils.appendChild(compoundInput,labelElement)}Utils.appendChild(element,compoundInput)}return element},ChoiceSetInput.prototype.updateInputControlAriaLabelledBy=function(){if((this.isMultiSelect||"expanded"===this.style)&&this._toggleInputs&&this._labels)for(var labelIds=this.getAllLabelIds(),i=0;i<this._toggleInputs.length;i++){var joinedLabelIds=labelIds.join(" "),label=this._labels[i];label&&label.id&&(joinedLabelIds+=" "+label.id),joinedLabelIds?this._toggleInputs[i].setAttribute("aria-labelledby",joinedLabelIds):this._toggleInputs[i].removeAttribute("aria-labelledby")}else _super.prototype.updateInputControlAriaLabelledBy.call(this)},ChoiceSetInput.prototype.internalRender=function(){var _this=this;if(this._uniqueCategoryName=ChoiceSetInput.getUniqueCategoryName(),this.isMultiSelect)return this.renderCompoundInput("ac-choiceSetInput-multiSelect","checkbox",this.defaultValue?this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator):void 0);if("expanded"===this.style)return this.renderCompoundInput("ac-choiceSetInput-expanded","radio",this.defaultValue?[this.defaultValue]:void 0);if("filtered"===this.style){var inputContainer=document.createElement("div");inputContainer.style.width="100%",this._textInput=document.createElement("input"),this._textInput.className=this.hostConfig.makeCssClassName("ac-input","ac-multichoiceInput","ac-choiceSetInput-filtered"),this._textInput.type="text",this._textInput.style.width="100%",this._textInput.oninput=function(){_this.valueChanged(),_this._textInput&&(_this.value?(_this._textInput.removeAttribute("placeholder"),_this._textInput.removeAttribute("aria-label")):_this.placeholder&&(_this._textInput.placeholder=_this.placeholder,_this._textInput.setAttribute("aria-label",_this.placeholder)))},this.defaultValue&&(this._textInput.value=this.defaultValue),this.placeholder&&!this._textInput.value&&(this._textInput.placeholder=this.placeholder,this._textInput.setAttribute("aria-label",this.placeholder));var dataList=document.createElement("datalist");dataList.id=Utils.generateUniqueId();for(var _i=0,_a=this.choices;_i<_a.length;_i++){var option,choice=_a[_i];(option=document.createElement("option")).value=choice.title,option.setAttribute("aria-label",choice.title),dataList.appendChild(option)}return this._textInput.setAttribute("list",dataList.id),inputContainer.append(this._textInput,dataList),inputContainer}this._selectElement=document.createElement("select"),this._selectElement.className=this.hostConfig.makeCssClassName("ac-input","ac-multichoiceInput","ac-choiceSetInput-compact"),this._selectElement.style.width="100%",(option=document.createElement("option")).selected=!0,option.disabled=!0,option.hidden=!0,option.value="",this.placeholder&&(option.text=this.placeholder),Utils.appendChild(this._selectElement,option);for(var _b=0,_c=this.choices;_b<_c.length;_b++){choice=_c[_b];var option_1=document.createElement("option");option_1.value=choice.value,option_1.text=choice.title,option_1.setAttribute("aria-label",choice.title),choice.value==this.defaultValue&&(option_1.selected=!0),Utils.appendChild(this._selectElement,option_1)}return this._selectElement.onchange=function(){_this.internalApplyAriaCurrent(),_this.valueChanged()},this.internalApplyAriaCurrent(),this._selectElement},ChoiceSetInput.prototype.getJsonTypeName=function(){return"Input.ChoiceSet"},ChoiceSetInput.prototype.focus=function(){this._toggleInputs&&(this.isMultiSelect||"expanded"===this.style)?this._toggleInputs.length>0&&this._toggleInputs[0].focus():this._textInput?this._textInput.focus():_super.prototype.focus.call(this)},ChoiceSetInput.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),0==this.choices.length&&context.addFailure(this,Enums.ValidationEvent.CollectionCantBeEmpty,strings_1.Strings.errors.choiceSetMustHaveAtLeastOneChoice());for(var _i=0,_a=this.choices;_i<_a.length;_i++){var choice=_a[_i];choice.title&&choice.value||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.choiceSetChoicesMustHaveTitleAndValue())}},ChoiceSetInput.prototype.isSet=function(){return!!this.value},ChoiceSetInput.prototype.isValid=function(){if(this._textInput){if(""===this.value||this.value===this.placeholder)return!0;for(var _i=0,_a=this.choices;_i<_a.length;_i++){var choice=_a[_i];if(this.value===choice.value)return!0}return!1}return _super.prototype.isValid.call(this)},Object.defineProperty(ChoiceSetInput.prototype,"value",{get:function(){if(this.isMultiSelect){if(!this._toggleInputs||0==this._toggleInputs.length)return;for(var result="",_d=0,_e=this._toggleInputs;_d<_e.length;_d++){(toggleInput=_e[_d]).checked&&(""!=result&&(result+=this.hostConfig.choiceSetInputValueSeparator),result+=toggleInput.value)}return result||void 0}if(this._selectElement)return this._selectElement.selectedIndex>0?this._selectElement.value:void 0;if(this._textInput){for(var _i=0,_a=this.choices;_i<_a.length;_i++){var choice=_a[_i];if(choice.title&&this._textInput.value===choice.title)return choice.value}return this._textInput.value}if(this._toggleInputs&&this._toggleInputs.length>0)for(var _b=0,_c=this._toggleInputs;_b<_c.length;_b++){var toggleInput;if((toggleInput=_c[_b]).checked)return toggleInput.value}},enumerable:!1,configurable:!0}),ChoiceSetInput.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),ChoiceSetInput.choicesProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0,"choices",Choice),ChoiceSetInput.styleProperty=new serialization_1.ValueSetProperty(serialization_1.Versions.v1_0,"style",[{value:"compact"},{value:"expanded"},{value:"filtered",targetVersion:serialization_1.Versions.v1_5}],"compact"),ChoiceSetInput.isMultiSelectProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"isMultiSelect",!1),ChoiceSetInput.placeholderProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"placeholder"),ChoiceSetInput.wrapProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"wrap",!1),ChoiceSetInput.uniqueCategoryCounter=0,__decorate([serialization_1.property(ChoiceSetInput.valueProperty)],ChoiceSetInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(ChoiceSetInput.styleProperty)],ChoiceSetInput.prototype,"style",void 0),__decorate([serialization_1.property(ChoiceSetInput.isMultiSelectProperty)],ChoiceSetInput.prototype,"isMultiSelect",void 0),__decorate([serialization_1.property(ChoiceSetInput.placeholderProperty)],ChoiceSetInput.prototype,"placeholder",void 0),__decorate([serialization_1.property(ChoiceSetInput.wrapProperty)],ChoiceSetInput.prototype,"wrap",void 0),__decorate([serialization_1.property(ChoiceSetInput.choicesProperty)],ChoiceSetInput.prototype,"choices",void 0),ChoiceSetInput}(Input);exports.ChoiceSetInput=ChoiceSetInput;var NumberInput=function(_super){function NumberInput(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(NumberInput,_super),NumberInput.prototype.internalRender=function(){var _this=this;return this._numberInputElement=document.createElement("input"),this._numberInputElement.setAttribute("type","number"),void 0!==this.min&&this._numberInputElement.setAttribute("min",this.min.toString()),void 0!==this.max&&this._numberInputElement.setAttribute("max",this.max.toString()),this._numberInputElement.className=this.hostConfig.makeCssClassName("ac-input","ac-numberInput"),this._numberInputElement.style.width="100%",this._numberInputElement.tabIndex=0,void 0!==this.defaultValue&&(this._numberInputElement.valueAsNumber=this.defaultValue),this.placeholder&&(this._numberInputElement.placeholder=this.placeholder,this._numberInputElement.setAttribute("aria-label",this.placeholder)),this._numberInputElement.oninput=function(){_this.valueChanged()},this._numberInputElement},NumberInput.prototype.getJsonTypeName=function(){return"Input.Number"},NumberInput.prototype.isSet=function(){return void 0!==this.value&&!isNaN(this.value)},NumberInput.prototype.isValid=function(){if(void 0===this.value)return!this.isRequired;var result=!0;return void 0!==this.min&&(result=result&&this.value>=this.min),void 0!==this.max&&(result=result&&this.value<=this.max),result},Object.defineProperty(NumberInput.prototype,"value",{get:function(){return this._numberInputElement?this._numberInputElement.valueAsNumber:void 0},enumerable:!1,configurable:!0}),NumberInput.valueProperty=new serialization_1.NumProperty(serialization_1.Versions.v1_0,"value"),NumberInput.placeholderProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"placeholder"),NumberInput.minProperty=new serialization_1.NumProperty(serialization_1.Versions.v1_0,"min"),NumberInput.maxProperty=new serialization_1.NumProperty(serialization_1.Versions.v1_0,"max"),__decorate([serialization_1.property(NumberInput.valueProperty)],NumberInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(NumberInput.minProperty)],NumberInput.prototype,"min",void 0),__decorate([serialization_1.property(NumberInput.maxProperty)],NumberInput.prototype,"max",void 0),__decorate([serialization_1.property(NumberInput.placeholderProperty)],NumberInput.prototype,"placeholder",void 0),NumberInput}(Input);exports.NumberInput=NumberInput;var DateInput=function(_super){function DateInput(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(DateInput,_super),DateInput.prototype.internalRender=function(){var _this=this;return this._dateInputElement=document.createElement("input"),this._dateInputElement.setAttribute("type","date"),this.min&&this._dateInputElement.setAttribute("min",this.min),this.max&&this._dateInputElement.setAttribute("max",this.max),this.placeholder&&(this._dateInputElement.placeholder=this.placeholder,this._dateInputElement.setAttribute("aria-label",this.placeholder)),this._dateInputElement.className=this.hostConfig.makeCssClassName("ac-input","ac-dateInput"),this._dateInputElement.style.width="100%",this._dateInputElement.oninput=function(){_this.valueChanged()},this.defaultValue&&(this._dateInputElement.value=this.defaultValue),this._dateInputElement},DateInput.prototype.getJsonTypeName=function(){return"Input.Date"},DateInput.prototype.isSet=function(){return!!this.value},DateInput.prototype.isValid=function(){if(!this.value)return!this.isRequired;var valueAsDate=new Date(this.value),result=!0;if(this.min){var minDate=new Date(this.min);result=result&&valueAsDate>=minDate}if(this.max){var maxDate=new Date(this.max);result=result&&valueAsDate<=maxDate}return result},Object.defineProperty(DateInput.prototype,"value",{get:function(){return this._dateInputElement?this._dateInputElement.value:void 0},enumerable:!1,configurable:!0}),DateInput.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"value"),DateInput.placeholderProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"placeholder"),DateInput.minProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"min"),DateInput.maxProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"max"),__decorate([serialization_1.property(DateInput.valueProperty)],DateInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(DateInput.minProperty)],DateInput.prototype,"min",void 0),__decorate([serialization_1.property(DateInput.maxProperty)],DateInput.prototype,"max",void 0),__decorate([serialization_1.property(DateInput.placeholderProperty)],DateInput.prototype,"placeholder",void 0),DateInput}(Input);exports.DateInput=DateInput;var TimeProperty=function(_super){function TimeProperty(targetVersion,name){var _this=_super.call(this,targetVersion,name,(function(sender,property,source,context){var value=source[property.name];if("string"==typeof value&&value&&/^[0-9]{2}:[0-9]{2}$/.test(value))return value}),(function(sender,property,target,value,context){context.serializeValue(target,property.name,value)}))||this;return _this.targetVersion=targetVersion,_this.name=name,_this}return __extends(TimeProperty,_super),TimeProperty}(serialization_1.CustomProperty);exports.TimeProperty=TimeProperty;var TimeInput=function(_super){function TimeInput(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(TimeInput,_super),TimeInput.convertTimeStringToDate=function(timeString){return new Date("1973-09-04T"+timeString+":00Z")},TimeInput.prototype.internalRender=function(){var _this=this;return this._timeInputElement=document.createElement("input"),this._timeInputElement.setAttribute("type","time"),this._timeInputElement.setAttribute("min",this.min),this._timeInputElement.setAttribute("max",this.max),this._timeInputElement.className=this.hostConfig.makeCssClassName("ac-input","ac-timeInput"),this._timeInputElement.style.width="100%",this._timeInputElement.oninput=function(){_this.valueChanged()},this.placeholder&&(this._timeInputElement.placeholder=this.placeholder,this._timeInputElement.setAttribute("aria-label",this.placeholder)),this.defaultValue&&(this._timeInputElement.value=this.defaultValue),this._timeInputElement},TimeInput.prototype.getJsonTypeName=function(){return"Input.Time"},TimeInput.prototype.isSet=function(){return!!this.value},TimeInput.prototype.isValid=function(){if(!this.value)return!this.isRequired;var valueAsDate=TimeInput.convertTimeStringToDate(this.value),result=!0;if(this.min){var minDate=TimeInput.convertTimeStringToDate(this.min);result=result&&valueAsDate>=minDate}if(this.max){var maxDate=TimeInput.convertTimeStringToDate(this.max);result=result&&valueAsDate<=maxDate}return result},Object.defineProperty(TimeInput.prototype,"value",{get:function(){return this._timeInputElement?this._timeInputElement.value:void 0},enumerable:!1,configurable:!0}),TimeInput.valueProperty=new TimeProperty(serialization_1.Versions.v1_0,"value"),TimeInput.placeholderProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"placeholder"),TimeInput.minProperty=new TimeProperty(serialization_1.Versions.v1_0,"min"),TimeInput.maxProperty=new TimeProperty(serialization_1.Versions.v1_0,"max"),__decorate([serialization_1.property(TimeInput.valueProperty)],TimeInput.prototype,"defaultValue",void 0),__decorate([serialization_1.property(TimeInput.minProperty)],TimeInput.prototype,"min",void 0),__decorate([serialization_1.property(TimeInput.maxProperty)],TimeInput.prototype,"max",void 0),__decorate([serialization_1.property(TimeInput.placeholderProperty)],TimeInput.prototype,"placeholder",void 0),TimeInput}(Input);exports.TimeInput=TimeInput;var Action=function(_super){function Action(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.style=Enums.ActionStyle.Default,_this.mode=Enums.ActionMode.Primary,_this._state=0,_this._isFocusable=!0,_this}return __extends(Action,_super),Action.prototype.renderButtonContent=function(){if(this.renderedElement){var hostConfig=this.hostConfig,titleElement=document.createElement("div");if(titleElement.style.overflow="hidden",titleElement.style.textOverflow="ellipsis",hostConfig.actions.iconPlacement==Enums.ActionIconPlacement.AboveTitle||hostConfig.actions.allowTitleToWrap||(titleElement.style.whiteSpace="nowrap"),this.title&&(titleElement.innerText=this.title),this.iconUrl){var iconElement=document.createElement("img");iconElement.src=this.iconUrl,iconElement.style.width=hostConfig.actions.iconSize+"px",iconElement.style.height=hostConfig.actions.iconSize+"px",iconElement.style.flex="0 0 auto",hostConfig.actions.iconPlacement==Enums.ActionIconPlacement.AboveTitle?(this.renderedElement.classList.add("iconAbove"),this.renderedElement.style.flexDirection="column",this.title&&(iconElement.style.marginBottom="6px")):(this.renderedElement.classList.add("iconLeft"),iconElement.style.maxHeight="100%",this.title&&(iconElement.style.marginRight="6px")),this.renderedElement.appendChild(iconElement),this.renderedElement.appendChild(titleElement)}else this.renderedElement.classList.add("noIcon"),this.renderedElement.appendChild(titleElement)}},Action.prototype.getParentContainer=function(){return this.parent instanceof Container?this.parent:this.parent?this.parent.getParentContainer():void 0},Action.prototype.updateCssClasses=function(){var _a,_b;if(this.parent&&this.renderedElement){var hostConfig=this.parent.hostConfig;this.renderedElement.className=hostConfig.makeCssClassName(this.isEnabled?"ac-pushButton":"ac-pushButton-disabled");var parentContainer=this.getParentContainer();if(parentContainer){var parentContainerStyle=parentContainer.getEffectiveStyle();parentContainerStyle&&this.renderedElement.classList.add("style-"+parentContainerStyle)}switch(this.renderedElement.tabIndex=this.isFocusable?0:-1,this._state){case 1:this.renderedElement.classList.add(hostConfig.makeCssClassName("expanded"));break;case 2:this.renderedElement.classList.add(hostConfig.makeCssClassName("subdued"))}this.style&&this.isEnabled&&(this.style===Enums.ActionStyle.Positive?(_a=this.renderedElement.classList).add.apply(_a,hostConfig.makeCssClassNames("primary","style-positive")):(_b=this.renderedElement.classList).add.apply(_b,hostConfig.makeCssClassNames("style-"+this.style.toLowerCase())))}},Action.prototype.getDefaultSerializationContext=function(){return new SerializationContext},Action.prototype.internalGetReferencedInputs=function(){return{}},Action.prototype.internalPrepareForExecution=function(inputs){},Action.prototype.internalValidateInputs=function(referencedInputs){var result=[];if(referencedInputs)for(var _i=0,_a=Object.keys(referencedInputs);_i<_a.length;_i++){var input=referencedInputs[_a[_i]];input.validateValue()||result.push(input)}return result},Action.prototype.shouldSerialize=function(context){return void 0!==context.actionRegistry.findByName(this.getJsonTypeName())},Action.prototype.raiseExecuteActionEvent=function(){var action,card,onExecuteActionHandler;this.onExecute&&this.onExecute(this),card=(action=this).parent?action.parent.getRootElement():void 0,onExecuteActionHandler=card&&card.onExecuteAction?card.onExecuteAction:AdaptiveCard.onExecuteAction,action.prepareForExecution()&&onExecuteActionHandler&&onExecuteActionHandler(action)},Action.prototype.getHref=function(){return""},Action.prototype.getAriaRole=function(){return"button"},Action.prototype.setupElementForAccessibility=function(element,promoteTooltipToLabel){if(void 0===promoteTooltipToLabel&&(promoteTooltipToLabel=!1),element.tabIndex=this.isEnabled?0:-1,element.setAttribute("role",this.getAriaRole()),element instanceof HTMLButtonElement&&(element.disabled=!this.isEnabled),this.isEnabled?element.classList.add(this.hostConfig.makeCssClassName("ac-selectable")):element.setAttribute("aria-disabled","true"),this.title&&(element.setAttribute("aria-label",this.title),element.title=this.title),this.tooltip){var targetAriaAttribute=promoteTooltipToLabel?this.title?"aria-description":"aria-label":"aria-description";element.setAttribute(targetAriaAttribute,this.tooltip),element.title=this.tooltip}},Action.prototype.parse=function(source,context){return _super.prototype.parse.call(this,source,context||new SerializationContext)},Action.prototype.render=function(){var _this=this,buttonElement=document.createElement("button");buttonElement.type="button",buttonElement.style.display="flex",buttonElement.style.alignItems="center",buttonElement.style.justifyContent="center",buttonElement.onclick=function(e){_this.isEnabled&&(e.preventDefault(),e.cancelBubble=!0,_this.execute())},this._renderedElement=buttonElement,this.renderButtonContent(),this.updateCssClasses(),this.setupElementForAccessibility(buttonElement)},Action.prototype.execute=function(){this._actionCollection&&this._actionCollection.actionExecuted(this),this.raiseExecuteActionEvent()},Action.prototype.prepareForExecution=function(){var referencedInputs=this.getReferencedInputs(),invalidInputs=this.internalValidateInputs(referencedInputs);return invalidInputs.length>0?(invalidInputs[0].focus(),!1):(this.internalPrepareForExecution(referencedInputs),!0)},Action.prototype.remove=function(){return!!this._actionCollection&&this._actionCollection.removeAction(this)},Action.prototype.getAllInputs=function(processActions){return void 0===processActions&&(processActions=!0),[]},Action.prototype.getResourceInformation=function(){return this.iconUrl?[{url:this.iconUrl,mimeType:"image"}]:[]},Action.prototype.getActionById=function(id){return this.id===id?this:void 0},Action.prototype.getReferencedInputs=function(){return this.internalGetReferencedInputs()},Action.prototype.validateInputs=function(){return this.internalValidateInputs(this.getReferencedInputs())},Object.defineProperty(Action.prototype,"isPrimary",{get:function(){return this.style==Enums.ActionStyle.Positive},set:function(value){value?this.style=Enums.ActionStyle.Positive:this.style==Enums.ActionStyle.Positive&&(this.style=Enums.ActionStyle.Default)},enumerable:!1,configurable:!0}),Object.defineProperty(Action.prototype,"hostConfig",{get:function(){return this.parent?this.parent.hostConfig:host_config_1.defaultHostConfig},enumerable:!1,configurable:!0}),Object.defineProperty(Action.prototype,"parent",{get:function(){return this._parent},enumerable:!1,configurable:!0}),Object.defineProperty(Action.prototype,"state",{get:function(){return this._state},set:function(value){this._state!==value&&(this._state=value,this.updateCssClasses())},enumerable:!1,configurable:!0}),Object.defineProperty(Action.prototype,"isFocusable",{get:function(){return this._isFocusable},set:function(value){this._isFocusable!==value&&(this._isFocusable=value,this.updateCssClasses())},enumerable:!1,configurable:!0}),Action.titleProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"title"),Action.iconUrlProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_1,"iconUrl"),Action.styleProperty=new serialization_1.ValueSetProperty(serialization_1.Versions.v1_2,"style",[{value:Enums.ActionStyle.Default},{value:Enums.ActionStyle.Positive},{value:Enums.ActionStyle.Destructive}],Enums.ActionStyle.Default),Action.modeProperty=new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5,"mode",[{value:Enums.ActionMode.Primary},{value:Enums.ActionMode.Secondary}],Enums.ActionMode.Primary),Action.tooltipProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_5,"tooltip"),Action.isEnabledProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_5,"isEnabled",!0),__decorate([serialization_1.property(Action.titleProperty)],Action.prototype,"title",void 0),__decorate([serialization_1.property(Action.iconUrlProperty)],Action.prototype,"iconUrl",void 0),__decorate([serialization_1.property(Action.styleProperty)],Action.prototype,"style",void 0),__decorate([serialization_1.property(Action.modeProperty)],Action.prototype,"mode",void 0),__decorate([serialization_1.property(Action.tooltipProperty)],Action.prototype,"tooltip",void 0),__decorate([serialization_1.property(Action.isEnabledProperty)],Action.prototype,"isEnabled",void 0),Action}(card_object_1.CardObject);exports.Action=Action;var SubmitActionBase=function(_super){function SubmitActionBase(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._isPrepared=!1,_this}return __extends(SubmitActionBase,_super),SubmitActionBase.prototype.internalGetReferencedInputs=function(){var result={};if("none"!==this.associatedInputs){for(var current=this.parent,inputs=[];current;)inputs=inputs.concat(current.getAllInputs(!1)),current=current.parent;for(var _i=0,inputs_1=inputs;_i<inputs_1.length;_i++){var input=inputs_1[_i];input.id&&(result[input.id]=input)}}return result},SubmitActionBase.prototype.internalPrepareForExecution=function(inputs){if(this._originalData?this._processedData=JSON.parse(JSON.stringify(this._originalData)):this._processedData={},this._processedData&&inputs)for(var _i=0,_a=Object.keys(inputs);_i<_a.length;_i++){var input=inputs[_a[_i]];input.id&&input.isSet()&&(this._processedData[input.id]="string"==typeof input.value?input.value:input.value.toString())}this._isPrepared=!0},Object.defineProperty(SubmitActionBase.prototype,"data",{get:function(){return this._isPrepared?this._processedData:this._originalData},set:function(value){this._originalData=value,this._isPrepared=!1},enumerable:!1,configurable:!0}),SubmitActionBase.dataProperty=new serialization_1.PropertyDefinition(serialization_1.Versions.v1_0,"data"),SubmitActionBase.associatedInputsProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_3,"associatedInputs",(function(sender,property,source,context){var value=source[property.name];if(void 0!==value&&"string"==typeof value)return"none"===value.toLowerCase()?"none":"auto"}),(function(sender,property,target,value,context){context.serializeValue(target,property.name,value)})),__decorate([serialization_1.property(SubmitActionBase.dataProperty)],SubmitActionBase.prototype,"_originalData",void 0),__decorate([serialization_1.property(SubmitActionBase.associatedInputsProperty)],SubmitActionBase.prototype,"associatedInputs",void 0),SubmitActionBase}(Action);exports.SubmitActionBase=SubmitActionBase;var SubmitAction=function(_super){function SubmitAction(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(SubmitAction,_super),SubmitAction.prototype.getJsonTypeName=function(){return SubmitAction.JsonTypeName},SubmitAction.JsonTypeName="Action.Submit",SubmitAction}(SubmitActionBase);exports.SubmitAction=SubmitAction;var ExecuteAction=function(_super){function ExecuteAction(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(ExecuteAction,_super),ExecuteAction.prototype.getJsonTypeName=function(){return ExecuteAction.JsonTypeName},ExecuteAction.JsonTypeName="Action.Execute",ExecuteAction.verbProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"verb"),__decorate([serialization_1.property(ExecuteAction.verbProperty)],ExecuteAction.prototype,"verb",void 0),ExecuteAction}(SubmitActionBase);exports.ExecuteAction=ExecuteAction;var OpenUrlAction=function(_super){function OpenUrlAction(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(OpenUrlAction,_super),OpenUrlAction.prototype.getJsonTypeName=function(){return OpenUrlAction.JsonTypeName},OpenUrlAction.prototype.getAriaRole=function(){return"link"},OpenUrlAction.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this.url||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.propertyMustBeSet("url"))},OpenUrlAction.prototype.getHref=function(){return this.url},OpenUrlAction.urlProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"url"),OpenUrlAction.JsonTypeName="Action.OpenUrl",__decorate([serialization_1.property(OpenUrlAction.urlProperty)],OpenUrlAction.prototype,"url",void 0),OpenUrlAction}(Action);exports.OpenUrlAction=OpenUrlAction;var ToggleVisibilityAction=function(_super){function ToggleVisibilityAction(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.targetElements={},_this}return __extends(ToggleVisibilityAction,_super),ToggleVisibilityAction.prototype.updateAriaControlsAttribute=function(){if(this.targetElements){var elementIds=Object.keys(this.targetElements);this._renderedElement&&(elementIds.length>0?this._renderedElement.setAttribute("aria-controls",elementIds.join(" ")):this._renderedElement.removeAttribute("aria-controls"))}},ToggleVisibilityAction.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this.targetElements||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.propertyMustBeSet("targetElements"))},ToggleVisibilityAction.prototype.getJsonTypeName=function(){return ToggleVisibilityAction.JsonTypeName},ToggleVisibilityAction.prototype.render=function(){_super.prototype.render.call(this),this.updateAriaControlsAttribute()},ToggleVisibilityAction.prototype.execute=function(){if(this.parent)for(var _i=0,_a=Object.keys(this.targetElements);_i<_a.length;_i++){var elementId=_a[_i],targetElement=this.parent.getRootElement().getElementById(elementId);targetElement&&("boolean"==typeof this.targetElements[elementId]?targetElement.isVisible=this.targetElements[elementId]:targetElement.isVisible=!targetElement.isVisible)}},ToggleVisibilityAction.prototype.addTargetElement=function(elementId,isVisible){void 0===isVisible&&(isVisible=void 0),this.targetElements[elementId]=isVisible,this.updateAriaControlsAttribute()},ToggleVisibilityAction.prototype.removeTargetElement=function(elementId){delete this.targetElements[elementId],this.updateAriaControlsAttribute()},ToggleVisibilityAction.targetElementsProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_2,"targetElements",(function(sender,property,source,context){var result={};if(Array.isArray(source[property.name]))for(var _i=0,_a=source[property.name];_i<_a.length;_i++){var item=_a[_i];if("string"==typeof item)result[item]=void 0;else if("object"==typeof item){var elementId=item.elementId;"string"==typeof elementId&&(result[elementId]=Utils.parseBool(item.isVisible))}}return result}),(function(sender,property,target,value,context){for(var targetElements=[],_i=0,_a=Object.keys(value);_i<_a.length;_i++){var id=_a[_i];"boolean"==typeof value[id]?targetElements.push({elementId:id,isVisible:value[id]}):targetElements.push(id)}context.serializeArray(target,property.name,targetElements)}),{},(function(sender){return{}})),ToggleVisibilityAction.JsonTypeName="Action.ToggleVisibility",__decorate([serialization_1.property(ToggleVisibilityAction.targetElementsProperty)],ToggleVisibilityAction.prototype,"targetElements",void 0),ToggleVisibilityAction}(Action);exports.ToggleVisibilityAction=ToggleVisibilityAction;var StringWithSubstitutionProperty=function(_super){function StringWithSubstitutionProperty(targetVersion,name){var _this=_super.call(this,targetVersion,name,void 0,(function(){return new shared_1.StringWithSubstitutions}))||this;return _this.targetVersion=targetVersion,_this.name=name,_this}return __extends(StringWithSubstitutionProperty,_super),StringWithSubstitutionProperty.prototype.parse=function(sender,source,context){var result=new shared_1.StringWithSubstitutions;return result.set(Utils.parseString(source[this.name])),result},StringWithSubstitutionProperty.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,value.getOriginal())},StringWithSubstitutionProperty}(serialization_1.PropertyDefinition),HttpHeader=function(_super){function HttpHeader(name,value){void 0===name&&(name=""),void 0===value&&(value="");var _this=_super.call(this)||this;return _this.name=name,_this.value=value,_this}return __extends(HttpHeader,_super),HttpHeader.prototype.getSchemaKey=function(){return"HttpHeader"},HttpHeader.prototype.getReferencedInputs=function(inputs,referencedInputs){this._value.getReferencedInputs(inputs,referencedInputs)},HttpHeader.prototype.prepareForExecution=function(inputs){this._value.substituteInputValues(inputs,shared_1.ContentTypes.applicationXWwwFormUrlencoded)},Object.defineProperty(HttpHeader.prototype,"value",{get:function(){return this._value.get()},set:function(newValue){this._value.set(newValue)},enumerable:!1,configurable:!0}),HttpHeader.nameProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"name"),HttpHeader.valueProperty=new StringWithSubstitutionProperty(serialization_1.Versions.v1_0,"value"),__decorate([serialization_1.property(HttpHeader.nameProperty)],HttpHeader.prototype,"name",void 0),__decorate([serialization_1.property(HttpHeader.valueProperty)],HttpHeader.prototype,"_value",void 0),HttpHeader}(serialization_1.SerializableObject);exports.HttpHeader=HttpHeader;var HttpAction=function(_super){function HttpAction(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._ignoreInputValidation=!1,_this}return __extends(HttpAction,_super),HttpAction.prototype.internalGetReferencedInputs=function(){var allInputs=this.parent?this.parent.getRootElement().getAllInputs():[],result={};this._url.getReferencedInputs(allInputs,result);for(var _i=0,_a=this.headers;_i<_a.length;_i++){_a[_i].getReferencedInputs(allInputs,result)}return this._body.getReferencedInputs(allInputs,result),result},HttpAction.prototype.internalPrepareForExecution=function(inputs){if(inputs){this._url.substituteInputValues(inputs,shared_1.ContentTypes.applicationXWwwFormUrlencoded);for(var contentType=shared_1.ContentTypes.applicationJson,_i=0,_a=this.headers;_i<_a.length;_i++){var header=_a[_i];header.prepareForExecution(inputs),header.name&&"content-type"==header.name.toLowerCase()&&(contentType=header.value)}this._body.substituteInputValues(inputs,contentType)}},HttpAction.prototype.getJsonTypeName=function(){return HttpAction.JsonTypeName},HttpAction.prototype.internalValidateProperties=function(context){if(_super.prototype.internalValidateProperties.call(this,context),this.url||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.propertyMustBeSet("url")),this.headers.length>0)for(var _i=0,_a=this.headers;_i<_a.length;_i++){_a[_i].name||context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.actionHttpHeadersMustHaveNameAndValue())}},Object.defineProperty(HttpAction.prototype,"ignoreInputValidation",{get:function(){return this._ignoreInputValidation},set:function(value){this._ignoreInputValidation=value},enumerable:!1,configurable:!0}),Object.defineProperty(HttpAction.prototype,"url",{get:function(){return this._url.get()},set:function(value){this._url.set(value)},enumerable:!1,configurable:!0}),Object.defineProperty(HttpAction.prototype,"body",{get:function(){return this._body.get()},set:function(value){this._body.set(value)},enumerable:!1,configurable:!0}),HttpAction.urlProperty=new StringWithSubstitutionProperty(serialization_1.Versions.v1_0,"url"),HttpAction.bodyProperty=new StringWithSubstitutionProperty(serialization_1.Versions.v1_0,"body"),HttpAction.methodProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"method"),HttpAction.headersProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0,"headers",HttpHeader),HttpAction.ignoreInputValidationProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_3,"ignoreInputValidation",!1),HttpAction.JsonTypeName="Action.Http",__decorate([serialization_1.property(HttpAction.urlProperty)],HttpAction.prototype,"_url",void 0),__decorate([serialization_1.property(HttpAction.bodyProperty)],HttpAction.prototype,"_body",void 0),__decorate([serialization_1.property(HttpAction.methodProperty)],HttpAction.prototype,"method",void 0),__decorate([serialization_1.property(HttpAction.headersProperty)],HttpAction.prototype,"headers",void 0),__decorate([serialization_1.property(HttpAction.ignoreInputValidationProperty)],HttpAction.prototype,"_ignoreInputValidation",void 0),HttpAction}(Action);exports.HttpAction=HttpAction;var ShowCardAction=function(_super){function ShowCardAction(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.card=new InlineAdaptiveCard,_this}return __extends(ShowCardAction,_super),ShowCardAction.prototype.updateCssClasses=function(){if(_super.prototype.updateCssClasses.call(this),this.renderedElement){var effectiveHostConfig=this.parent?this.parent.hostConfig:host_config_1.defaultHostConfig;this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName("expandable")),this.renderedElement.setAttribute("aria-expanded",(1===this.state).toString())}},ShowCardAction.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context);var jsonCard=source.card;jsonCard?this.card.parse(jsonCard,context):context.logParseEvent(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.showCardMustHaveCard())},ShowCardAction.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),this.card&&context.serializeValue(target,"card",this.card.toJSON(context))},ShowCardAction.prototype.raiseExecuteActionEvent=function(){this.hostConfig.actions.showCard.actionMode===Enums.ShowCardActionMode.Popup&&_super.prototype.raiseExecuteActionEvent.call(this)},ShowCardAction.prototype.getJsonTypeName=function(){return ShowCardAction.JsonTypeName},ShowCardAction.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this.card.internalValidateProperties(context)},ShowCardAction.prototype.setParent=function(value){_super.prototype.setParent.call(this,value),this.card.setParent(value)},ShowCardAction.prototype.getAllInputs=function(processActions){return void 0===processActions&&(processActions=!0),this.card.getAllInputs(processActions)},ShowCardAction.prototype.getResourceInformation=function(){return _super.prototype.getResourceInformation.call(this).concat(this.card.getResourceInformation())},ShowCardAction.prototype.getActionById=function(id){var result=_super.prototype.getActionById.call(this,id);return result||(result=this.card.getActionById(id)),result},ShowCardAction.JsonTypeName="Action.ShowCard",ShowCardAction}(Action);exports.ShowCardAction=ShowCardAction;var OverflowAction=function(_super){function OverflowAction(actions){var _this=_super.call(this)||this;return _this.actions=actions,_this.title=strings_1.Strings.defaults.overflowButtonText(),_this}return __extends(OverflowAction,_super),OverflowAction.prototype.getActions=function(){return this.actions},OverflowAction.prototype.getJsonTypeName=function(){return ShowCardAction.JsonTypeName},OverflowAction.prototype.execute=function(){var _a,action,target,card,onDisplayOverflowActionMenuHandler,_this=this;if((action=this,target=this.renderedElement,card=action.parent?action.parent.getRootElement():void 0,!(void 0!==(onDisplayOverflowActionMenuHandler=card&&card.onDisplayOverflowActionMenu?card.onDisplayOverflowActionMenu:AdaptiveCard.onDisplayOverflowActionMenu)&&onDisplayOverflowActionMenuHandler(action.getActions(),target)))&&this.renderedElement){var contextMenu_1=new controls_1.PopupMenu;contextMenu_1.hostConfig=this.hostConfig;for(var _loop_1=function(i){var menuItem=new controls_1.MenuItem(i.toString(),null!==(_a=this_1.actions[i].title)&&void 0!==_a?_a:"");menuItem.isEnabled=this_1.actions[i].isEnabled,menuItem.onClick=function(){var actionToExecute=_this.actions[i];contextMenu_1.closePopup(!1),actionToExecute.isEnabled&&actionToExecute.execute()},contextMenu_1.items.add(menuItem)},this_1=this,i=0;i<this.actions.length;i++)_loop_1(i);contextMenu_1.popup(this.renderedElement)}},OverflowAction.JsonTypeName="Action.Overflow",OverflowAction}(Action),ActionCollection=function(){function ActionCollection(owner){this._items=[],this._renderedActions=[],this._owner=owner}return ActionCollection.prototype.isActionAllowed=function(action){var forbiddenTypes=this._owner.getForbiddenActionTypes();if(forbiddenTypes)for(var _i=0,forbiddenTypes_1=forbiddenTypes;_i<forbiddenTypes_1.length;_i++){var forbiddenType=forbiddenTypes_1[_i];if(action.constructor===forbiddenType)return!1}return!0},ActionCollection.prototype.refreshContainer=function(){if(this._actionCardContainer.innerHTML="",this._actionCard){this._actionCardContainer.style.marginTop=this.renderedActionCount>0?this._owner.hostConfig.actions.showCard.inlineTopMargin+"px":"0px";var padding=this._owner.getEffectivePadding();this._owner.getImmediateSurroundingPadding(padding);var physicalPadding=this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);this._actionCard&&(this._actionCard.style.paddingLeft=physicalPadding.left+"px",this._actionCard.style.paddingRight=physicalPadding.right+"px",this._actionCard.style.marginLeft="-"+physicalPadding.left+"px",this._actionCard.style.marginRight="-"+physicalPadding.right+"px",0==physicalPadding.bottom||this._owner.isDesignMode()||(this._actionCard.style.paddingBottom=physicalPadding.bottom+"px",this._actionCard.style.marginBottom="-"+physicalPadding.bottom+"px"),Utils.appendChild(this._actionCardContainer,this._actionCard))}else this._actionCardContainer.style.marginTop="0px"},ActionCollection.prototype.layoutChanged=function(){this._owner.getRootElement().updateLayout()},ActionCollection.prototype.showActionCard=function(action,suppressStyle,raiseEvent){void 0===suppressStyle&&(suppressStyle=!1),void 0===raiseEvent&&(raiseEvent=!0),action.card.suppressStyle=suppressStyle;var renderedCard=action.card.renderedElement&&!this._owner.isDesignMode()?action.card.renderedElement:action.card.render();this._actionCard=renderedCard,this._expandedAction=action,this.refreshContainer(),raiseEvent&&(this.layoutChanged(),raiseInlineCardExpandedEvent(action,!0))},ActionCollection.prototype.collapseExpandedAction=function(){for(var _i=0,_a=this._renderedActions;_i<_a.length;_i++){_a[_i].state=0}var previouslyExpandedAction=this._expandedAction;this._expandedAction=void 0,this._actionCard=void 0,this.refreshContainer(),previouslyExpandedAction&&(this.layoutChanged(),raiseInlineCardExpandedEvent(previouslyExpandedAction,!1))},ActionCollection.prototype.expandShowCardAction=function(action,raiseEvent){for(var _this=this,afterSelectedAction=!1,_i=0,_a=this._renderedActions;_i<_a.length;_i++){var renderedAction=_a[_i];afterSelectedAction&&(renderedAction.isFocusable=!1),renderedAction!==action?renderedAction.state=2:(renderedAction.state=1,afterSelectedAction=!0,renderedAction.renderedElement&&(renderedAction.renderedElement.onblur=function(e){for(var _i=0,_a=_this._renderedActions;_i<_a.length;_i++){_a[_i].isFocusable=!0}}))}this.showActionCard(action,!(this._owner.isAtTheVeryLeft()&&this._owner.isAtTheVeryRight()),raiseEvent)},ActionCollection.prototype.actionExecuted=function(action){action instanceof ShowCardAction?action===this._expandedAction?this.collapseExpandedAction():this._owner.hostConfig.actions.showCard.actionMode===Enums.ShowCardActionMode.Inline&&this.expandShowCardAction(action,!0):this.collapseExpandedAction()},ActionCollection.prototype.parse=function(source,context){if(this.clear(),Array.isArray(source))for(var _i=0,source_1=source;_i<source_1.length;_i++){var jsonAction=source_1[_i],action=context.parseAction(this._owner,jsonAction,[],!this._owner.isDesignMode());action&&this.addAction(action)}},ActionCollection.prototype.toJSON=function(target,propertyName,context){context.serializeArray(target,propertyName,this._items)},ActionCollection.prototype.getActionAt=function(id){return this._items[id]},ActionCollection.prototype.getActionCount=function(){return this._items.length},ActionCollection.prototype.getActionById=function(id){for(var result=void 0,_i=0,_a=this._items;_i<_a.length;_i++){if(result=_a[_i].getActionById(id))break}return result},ActionCollection.prototype.validateProperties=function(context){this._owner.hostConfig.actions.maxActions&&this._items.length>this._owner.hostConfig.actions.maxActions&&context.addFailure(this._owner,Enums.ValidationEvent.TooManyActions,strings_1.Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions)),this._items.length>0&&!this._owner.hostConfig.supportsInteractivity&&context.addFailure(this._owner,Enums.ValidationEvent.InteractivityNotAllowed,strings_1.Strings.errors.interactivityNotAllowed());for(var _i=0,_a=this._items;_i<_a.length;_i++){var item=_a[_i];this.isActionAllowed(item)||context.addFailure(this._owner,Enums.ValidationEvent.ActionTypeNotAllowed,strings_1.Strings.errors.actionTypeNotAllowed(item.getJsonTypeName())),item.internalValidateProperties(context)}},ActionCollection.prototype.render=function(orientation,isDesignMode){var hostConfig=this._owner.hostConfig;if(hostConfig.supportsInteractivity){var element=document.createElement("div"),maxActions=hostConfig.actions.maxActions?Math.min(hostConfig.actions.maxActions,this._items.length):this._items.length;if(this._actionCardContainer=document.createElement("div"),this._renderedActions=[],hostConfig.actions.preExpandSingleShowCardAction&&1==maxActions&&this._items[0]instanceof ShowCardAction&&this.isActionAllowed(this._items[0]))this.showActionCard(this._items[0],!0),this._renderedActions.push(this._items[0]);else{var buttonStrip=document.createElement("div");if(buttonStrip.className=hostConfig.makeCssClassName("ac-actionSet"),buttonStrip.style.display="flex",buttonStrip.setAttribute("role","menubar"),orientation==Enums.Orientation.Horizontal)if(buttonStrip.style.flexDirection="row",this._owner.horizontalAlignment&&hostConfig.actions.actionAlignment!=Enums.ActionAlignment.Stretch)switch(this._owner.horizontalAlignment){case Enums.HorizontalAlignment.Center:buttonStrip.style.justifyContent="center";break;case Enums.HorizontalAlignment.Right:buttonStrip.style.justifyContent="flex-end";break;default:buttonStrip.style.justifyContent="flex-start"}else switch(hostConfig.actions.actionAlignment){case Enums.ActionAlignment.Center:buttonStrip.style.justifyContent="center";break;case Enums.ActionAlignment.Right:buttonStrip.style.justifyContent="flex-end";break;default:buttonStrip.style.justifyContent="flex-start"}else if(buttonStrip.style.flexDirection="column",this._owner.horizontalAlignment&&hostConfig.actions.actionAlignment!=Enums.ActionAlignment.Stretch)switch(this._owner.horizontalAlignment){case Enums.HorizontalAlignment.Center:buttonStrip.style.alignItems="center";break;case Enums.HorizontalAlignment.Right:buttonStrip.style.alignItems="flex-end";break;default:buttonStrip.style.alignItems="flex-start"}else switch(hostConfig.actions.actionAlignment){case Enums.ActionAlignment.Center:buttonStrip.style.alignItems="center";break;case Enums.ActionAlignment.Right:buttonStrip.style.alignItems="flex-end";break;case Enums.ActionAlignment.Stretch:buttonStrip.style.alignItems="stretch";break;default:buttonStrip.style.alignItems="flex-start"}var allowedActions=this._items.filter(this.isActionAllowed.bind(this)),primaryActions_1=[],secondaryActions_1=[];if(this._owner.isDesignMode())primaryActions_1=allowedActions;else{allowedActions.forEach((function(action){return action.mode===Enums.ActionMode.Secondary?secondaryActions_1.push(action):primaryActions_1.push(action)}));var overflowPrimaryActions=primaryActions_1.splice(hostConfig.actions.maxActions);shared_1.GlobalSettings.allowMoreThanMaxActionsInOverflowMenu&&secondaryActions_1.push.apply(secondaryActions_1,overflowPrimaryActions);var shouldRenderOverflowActionButton=!0;if(secondaryActions_1.length>0){this._overflowAction||(this._overflowAction=new OverflowAction(secondaryActions_1),this._overflowAction.setParent(this._owner),this._overflowAction._actionCollection=this);var isRootAction=this._owner instanceof AdaptiveCard&&!this._owner.parent;shouldRenderOverflowActionButton=!function(action,isAtRootLevelActions){var card=action.parent?action.parent.getRootElement():void 0,onRenderOverflowActionsHandler=card&&card.onRenderOverflowActions?card.onRenderOverflowActions:AdaptiveCard.onRenderOverflowActions;return void 0!==onRenderOverflowActionsHandler&&onRenderOverflowActionsHandler(action.getActions(),isAtRootLevelActions)}(this._overflowAction,isRootAction)}this._overflowAction&&shouldRenderOverflowActionButton&&primaryActions_1.push(this._overflowAction)}for(var i=0;i<primaryActions_1.length;i++){var action=primaryActions_1[i];if(action.render(),action.renderedElement&&(primaryActions_1.length>1&&(action.renderedElement.setAttribute("aria-posinset",(i+1).toString()),action.renderedElement.setAttribute("aria-setsize",primaryActions_1.length.toString()),action.renderedElement.setAttribute("role","menuitem")),hostConfig.actions.actionsOrientation==Enums.Orientation.Horizontal&&hostConfig.actions.actionAlignment==Enums.ActionAlignment.Stretch?action.renderedElement.style.flex="0 1 100%":action.renderedElement.style.flex="0 1 auto",buttonStrip.appendChild(action.renderedElement),this._renderedActions.push(action),i<primaryActions_1.length-1&&hostConfig.actions.buttonSpacing>0)){var spacer=document.createElement("div");orientation===Enums.Orientation.Horizontal?(spacer.style.flex="0 0 auto",spacer.style.width=hostConfig.actions.buttonSpacing+"px"):spacer.style.height=hostConfig.actions.buttonSpacing+"px",Utils.appendChild(buttonStrip,spacer)}}var buttonStripContainer=document.createElement("div");buttonStripContainer.style.overflow="hidden",buttonStripContainer.appendChild(buttonStrip),Utils.appendChild(element,buttonStripContainer)}Utils.appendChild(element,this._actionCardContainer);for(var _i=0,_a=this._renderedActions;_i<_a.length;_i++){var renderedAction=_a[_i];if(1==renderedAction.state){this.expandShowCardAction(renderedAction,!1);break}}return this._renderedActions.length>0?element:void 0}},ActionCollection.prototype.addAction=function(action){if(!action)throw new Error("The action parameter cannot be null.");if(action.parent&&action.parent!==this._owner||!(this._items.indexOf(action)<0))throw new Error(strings_1.Strings.errors.actionAlreadyParented());this._items.push(action),action.parent||action.setParent(this._owner),action._actionCollection=this},ActionCollection.prototype.removeAction=function(action){this.expandedAction&&this._expandedAction==action&&this.collapseExpandedAction();var actionIndex=this._items.indexOf(action);if(actionIndex>=0){this._items.splice(actionIndex,1),action.setParent(void 0),action._actionCollection=void 0;for(var i=0;i<this._renderedActions.length;i++)if(this._renderedActions[i]==action){this._renderedActions.splice(i,1);break}return!0}return!1},ActionCollection.prototype.clear=function(){this._items=[],this._renderedActions=[],this._expandedAction=void 0},ActionCollection.prototype.getAllInputs=function(processActions){void 0===processActions&&(processActions=!0);var result=[];if(processActions)for(var _i=0,_a=this._items;_i<_a.length;_i++){var action=_a[_i];result=result.concat(action.getAllInputs())}return result},ActionCollection.prototype.getResourceInformation=function(){for(var result=[],_i=0,_a=this._items;_i<_a.length;_i++){var action=_a[_i];result=result.concat(action.getResourceInformation())}return result},Object.defineProperty(ActionCollection.prototype,"renderedActionCount",{get:function(){return this._renderedActions.length},enumerable:!1,configurable:!0}),Object.defineProperty(ActionCollection.prototype,"expandedAction",{get:function(){return this._expandedAction},enumerable:!1,configurable:!0}),ActionCollection}(),ActionSet=function(_super){function ActionSet(){var _this=_super.call(this)||this;return _this._actionCollection=new ActionCollection(_this),_this}return __extends(ActionSet,_super),ActionSet.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this._actionCollection.parse(source.actions,context)},ActionSet.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),this._actionCollection.toJSON(target,"actions",context)},ActionSet.prototype.internalRender=function(){return this._actionCollection.render(void 0!==this.orientation?this.orientation:this.hostConfig.actions.actionsOrientation,this.isDesignMode())},ActionSet.prototype.isBleedingAtBottom=function(){return 0==this._actionCollection.renderedActionCount?_super.prototype.isBleedingAtBottom.call(this):1==this._actionCollection.getActionCount()?void 0!==this._actionCollection.expandedAction&&!this.hostConfig.actions.preExpandSingleShowCardAction:void 0!==this._actionCollection.expandedAction},ActionSet.prototype.getJsonTypeName=function(){return"ActionSet"},ActionSet.prototype.getActionCount=function(){return this._actionCollection.getActionCount()},ActionSet.prototype.getActionAt=function(index){return index>=0&&index<this.getActionCount()?this._actionCollection.getActionAt(index):_super.prototype.getActionAt.call(this,index)},ActionSet.prototype.getActionById=function(id){var result=this._actionCollection.getActionById(id);return result||_super.prototype.getActionById.call(this,id)},ActionSet.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this._actionCollection.validateProperties(context)},ActionSet.prototype.addAction=function(action){this._actionCollection.addAction(action)},ActionSet.prototype.getAllInputs=function(processActions){return void 0===processActions&&(processActions=!0),processActions?this._actionCollection.getAllInputs():[]},ActionSet.prototype.getResourceInformation=function(){return this._actionCollection.getResourceInformation()},ActionSet.prototype.findDOMNodeOwner=function(node){for(var target=void 0,i=0;i<this.getActionCount();i++){var action=this.getActionAt(i);if(action&&(target=action.findDOMNodeOwner(node)))return target}return _super.prototype.findDOMNodeOwner.call(this,node)},Object.defineProperty(ActionSet.prototype,"isInteractive",{get:function(){return!0},enumerable:!1,configurable:!0}),ActionSet.orientationProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_1,"orientation",Enums.Orientation),__decorate([serialization_1.property(ActionSet.orientationProperty)],ActionSet.prototype,"orientation",void 0),ActionSet}(CardElement);exports.ActionSet=ActionSet;var ContainerStyleProperty=function(_super){function ContainerStyleProperty(targetVersion,name,defaultValue,onGetInitialValue){var _this=_super.call(this,targetVersion,name,[{value:Enums.ContainerStyle.Default},{value:Enums.ContainerStyle.Emphasis},{targetVersion:serialization_1.Versions.v1_2,value:Enums.ContainerStyle.Accent},{targetVersion:serialization_1.Versions.v1_2,value:Enums.ContainerStyle.Good},{targetVersion:serialization_1.Versions.v1_2,value:Enums.ContainerStyle.Attention},{targetVersion:serialization_1.Versions.v1_2,value:Enums.ContainerStyle.Warning}],defaultValue,onGetInitialValue)||this;return _this.targetVersion=targetVersion,_this.name=name,_this.defaultValue=defaultValue,_this.onGetInitialValue=onGetInitialValue,_this}return __extends(ContainerStyleProperty,_super),ContainerStyleProperty}(serialization_1.ValueSetProperty);exports.ContainerStyleProperty=ContainerStyleProperty;var StylableCardElementContainer=function(_super){function StylableCardElementContainer(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(StylableCardElementContainer,_super),Object.defineProperty(StylableCardElementContainer.prototype,"style",{get:function(){if(this.allowCustomStyle){var style=this.getValue(StylableCardElementContainer.styleProperty);if(style&&this.hostConfig.containerStyles.getStyleByName(style))return style}},set:function(value){this.setValue(StylableCardElementContainer.styleProperty,value)},enumerable:!1,configurable:!0}),Object.defineProperty(StylableCardElementContainer.prototype,"allowCustomStyle",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(StylableCardElementContainer.prototype,"hasExplicitStyle",{get:function(){return void 0!==this.getValue(StylableCardElementContainer.styleProperty)},enumerable:!1,configurable:!0}),StylableCardElementContainer.prototype.applyBorder=function(){},StylableCardElementContainer.prototype.applyBackground=function(){if(this.renderedElement){var styleDefinition=this.hostConfig.containerStyles.getStyleByName(this.style,this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));if(styleDefinition.backgroundColor){var bgColor=Utils.stringToCssColor(styleDefinition.backgroundColor);this.renderedElement.style.backgroundColor=bgColor}}},StylableCardElementContainer.prototype.applyPadding=function(){if(_super.prototype.applyPadding.call(this),this.renderedElement){var physicalPadding=new shared_1.SpacingDefinition;if(this.getEffectivePadding()&&(physicalPadding=this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding())),this.renderedElement.style.paddingTop=physicalPadding.top+"px",this.renderedElement.style.paddingRight=physicalPadding.right+"px",this.renderedElement.style.paddingBottom=physicalPadding.bottom+"px",this.renderedElement.style.paddingLeft=physicalPadding.left+"px",this.isBleeding()){var padding=new shared_1.PaddingDefinition;this.getImmediateSurroundingPadding(padding);var surroundingPadding=this.hostConfig.paddingDefinitionToSpacingDefinition(padding);this.renderedElement.style.marginRight="-"+surroundingPadding.right+"px",this.renderedElement.style.marginLeft="-"+surroundingPadding.left+"px",this.isDesignMode()||(this.renderedElement.style.marginTop="-"+surroundingPadding.top+"px",this.renderedElement.style.marginBottom="-"+surroundingPadding.bottom+"px"),this.separatorElement&&this.separatorOrientation==Enums.Orientation.Horizontal&&(this.separatorElement.style.marginLeft="-"+surroundingPadding.left+"px",this.separatorElement.style.marginRight="-"+surroundingPadding.right+"px")}else this.renderedElement.style.marginRight="0",this.renderedElement.style.marginLeft="0",this.renderedElement.style.marginTop="0",this.renderedElement.style.marginBottom="0",this.separatorElement&&this.separatorOrientation===Enums.Orientation.Horizontal&&(this.separatorElement.style.marginRight="0",this.separatorElement.style.marginLeft="0")}},StylableCardElementContainer.prototype.getHasBackground=function(){for(var currentElement=this.parent;currentElement;){var currentElementHasBackgroundImage=currentElement instanceof Container&&currentElement.backgroundImage.isValid();if(currentElement instanceof StylableCardElementContainer&&this.hasExplicitStyle&&(currentElement.getEffectiveStyle()!=this.getEffectiveStyle()||currentElementHasBackgroundImage))return!0;currentElement=currentElement.parent}return!1},StylableCardElementContainer.prototype.getDefaultPadding=function(){return this.getHasBackground()||this.getHasBorder()?new shared_1.PaddingDefinition(Enums.Spacing.Padding,Enums.Spacing.Padding,Enums.Spacing.Padding,Enums.Spacing.Padding):_super.prototype.getDefaultPadding.call(this)},StylableCardElementContainer.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context);var explicitStyle=this.getValue(StylableCardElementContainer.styleProperty);void 0!==explicitStyle&&(this.hostConfig.containerStyles.getStyleByName(explicitStyle)||context.addFailure(this,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidPropertyValue(explicitStyle,"style")))},StylableCardElementContainer.prototype.render=function(){var renderedElement=_super.prototype.render.call(this);return renderedElement&&this.getHasBackground()&&this.applyBackground(),this.applyBorder(),renderedElement},StylableCardElementContainer.prototype.getEffectiveStyle=function(){var effectiveStyle=this.style;return effectiveStyle||_super.prototype.getEffectiveStyle.call(this)},StylableCardElementContainer.styleProperty=new ContainerStyleProperty(serialization_1.Versions.v1_0,"style"),__decorate([serialization_1.property(StylableCardElementContainer.styleProperty)],StylableCardElementContainer.prototype,"style",null),StylableCardElementContainer}(CardElementContainer);exports.StylableCardElementContainer=StylableCardElementContainer;var ContainerBase=function(_super){function ContainerBase(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._bleed=!1,_this}return __extends(ContainerBase,_super),ContainerBase.prototype.adjustRenderedElementSize=function(renderedElement){_super.prototype.adjustRenderedElementSize.call(this,renderedElement),this.minPixelHeight&&(renderedElement.style.minHeight=this.minPixelHeight+"px")},ContainerBase.prototype.getHasExpandedAction=function(){return!1},ContainerBase.prototype.getBleed=function(){return this._bleed},ContainerBase.prototype.setBleed=function(value){this._bleed=value},Object.defineProperty(ContainerBase.prototype,"renderedActionCount",{get:function(){return 0},enumerable:!1,configurable:!0}),ContainerBase.prototype.isBleeding=function(){return(this.getHasBackground()||this.hostConfig.alwaysAllowBleed)&&this.getBleed()},ContainerBase.bleedProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_2,"bleed",!1),ContainerBase.minHeightProperty=new serialization_1.PixelSizeProperty(serialization_1.Versions.v1_2,"minHeight"),__decorate([serialization_1.property(ContainerBase.bleedProperty)],ContainerBase.prototype,"_bleed",void 0),__decorate([serialization_1.property(ContainerBase.minHeightProperty)],ContainerBase.prototype,"minPixelHeight",void 0),ContainerBase}(StylableCardElementContainer);exports.ContainerBase=ContainerBase;var BackgroundImage=function(_super){function BackgroundImage(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(BackgroundImage,_super),BackgroundImage.prototype.getSchemaKey=function(){return"BackgroundImage"},BackgroundImage.prototype.internalParse=function(source,context){if("string"!=typeof source)return _super.prototype.internalParse.call(this,source,context);this.resetDefaultValues(),this.url=source},BackgroundImage.prototype.apply=function(element){if(this.url&&element.renderedElement){switch(element.renderedElement.style.backgroundImage="url('"+element.preProcessPropertyValue(BackgroundImage.urlProperty,this.url)+"')",this.fillMode){case Enums.FillMode.Repeat:element.renderedElement.style.backgroundRepeat="repeat";break;case Enums.FillMode.RepeatHorizontally:element.renderedElement.style.backgroundRepeat="repeat-x";break;case Enums.FillMode.RepeatVertically:element.renderedElement.style.backgroundRepeat="repeat-y";break;case Enums.FillMode.Cover:default:element.renderedElement.style.backgroundRepeat="no-repeat",element.renderedElement.style.backgroundSize="cover"}switch(this.horizontalAlignment){case Enums.HorizontalAlignment.Center:element.renderedElement.style.backgroundPositionX="center";break;case Enums.HorizontalAlignment.Right:element.renderedElement.style.backgroundPositionX="right"}switch(this.verticalAlignment){case Enums.VerticalAlignment.Center:element.renderedElement.style.backgroundPositionY="center";break;case Enums.VerticalAlignment.Bottom:element.renderedElement.style.backgroundPositionY="bottom"}}},BackgroundImage.prototype.isValid=function(){return!!this.url},BackgroundImage.urlProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"url"),BackgroundImage.fillModeProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_2,"fillMode",Enums.FillMode,Enums.FillMode.Cover),BackgroundImage.horizontalAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_2,"horizontalAlignment",Enums.HorizontalAlignment,Enums.HorizontalAlignment.Left),BackgroundImage.verticalAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_2,"verticalAlignment",Enums.VerticalAlignment,Enums.VerticalAlignment.Top),__decorate([serialization_1.property(BackgroundImage.urlProperty)],BackgroundImage.prototype,"url",void 0),__decorate([serialization_1.property(BackgroundImage.fillModeProperty)],BackgroundImage.prototype,"fillMode",void 0),__decorate([serialization_1.property(BackgroundImage.horizontalAlignmentProperty)],BackgroundImage.prototype,"horizontalAlignment",void 0),__decorate([serialization_1.property(BackgroundImage.verticalAlignmentProperty)],BackgroundImage.prototype,"verticalAlignment",void 0),BackgroundImage}(serialization_1.SerializableObject);exports.BackgroundImage=BackgroundImage;var Container=function(_super){function Container(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._items=[],_this._renderedItems=[],_this}return __extends(Container,_super),Object.defineProperty(Container.prototype,"backgroundImage",{get:function(){return this.getValue(Container.backgroundImageProperty)},enumerable:!1,configurable:!0}),Container.prototype.insertItemAt=function(item,index,forceInsert){if(item.parent&&!forceInsert)throw new Error(strings_1.Strings.errors.elementAlreadyParented());if(!item.isStandalone)throw new Error(strings_1.Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));index<0||index>=this._items.length?this._items.push(item):this._items.splice(index,0,item),item.setParent(this)},Container.prototype.getItemsCollectionPropertyName=function(){return"items"},Container.prototype.applyBackground=function(){this.backgroundImage.isValid()&&this.renderedElement&&this.backgroundImage.apply(this),_super.prototype.applyBackground.call(this)},Container.prototype.internalRender=function(){this._renderedItems=[];var hostConfig=this.hostConfig,element=document.createElement("div");switch(void 0!==this.rtl&&(element.dir=this.rtl?"rtl":"ltr"),element.classList.add(hostConfig.makeCssClassName("ac-container")),element.style.display="flex",element.style.flexDirection="column",shared_1.GlobalSettings.useAdvancedCardBottomTruncation&&(element.style.minHeight="-webkit-min-content"),this.getEffectiveVerticalContentAlignment()){case Enums.VerticalAlignment.Center:element.style.justifyContent="center";break;case Enums.VerticalAlignment.Bottom:element.style.justifyContent="flex-end";break;default:element.style.justifyContent="flex-start"}if(this._items.length>0)for(var _i=0,_a=this._items;_i<_a.length;_i++){var item=_a[_i],renderedItem=this.isElementAllowed(item)?item.render():void 0;renderedItem&&(this._renderedItems.length>0&&item.separatorElement&&(item.separatorElement.style.flex="0 0 auto",Utils.appendChild(element,item.separatorElement)),Utils.appendChild(element,renderedItem),this._renderedItems.push(item))}else if(this.isDesignMode()){var placeholderElement=this.createPlaceholderElement();placeholderElement.style.width="100%",placeholderElement.style.height="100%",element.appendChild(placeholderElement)}return element},Container.prototype.truncateOverflow=function(maxHeight){if(this.renderedElement){for(var boundary_1=this.renderedElement.offsetTop+maxHeight+1,handleElement_1=function(cardElement){var elt=cardElement.renderedElement;if(elt)switch(Utils.getFitStatus(elt,boundary_1)){case Enums.ContainerFitStatus.FullyInContainer:cardElement.resetOverflow()&&handleElement_1(cardElement);break;case Enums.ContainerFitStatus.Overflowing:var maxHeight_1=boundary_1-elt.offsetTop;cardElement.handleOverflow(maxHeight_1);break;case Enums.ContainerFitStatus.FullyOutOfContainer:cardElement.handleOverflow(0)}},_i=0,_a=this._items;_i<_a.length;_i++){var item=_a[_i];handleElement_1(item)}return!0}return!1},Container.prototype.undoOverflowTruncation=function(){for(var _i=0,_a=this._items;_i<_a.length;_i++){_a[_i].resetOverflow()}},Container.prototype.getHasBackground=function(){return this.backgroundImage.isValid()||_super.prototype.getHasBackground.call(this)},Container.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this.clear(),this.setShouldFallback(!1);var jsonItems=source[this.getItemsCollectionPropertyName()];if(Array.isArray(jsonItems))for(var _i=0,jsonItems_1=jsonItems;_i<jsonItems_1.length;_i++){var item=jsonItems_1[_i],element=context.parseElement(this,item,!this.isDesignMode());element&&this.insertItemAt(element,-1,!0)}},Container.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),context.serializeArray(target,this.getItemsCollectionPropertyName(),this._items)},Object.defineProperty(Container.prototype,"isSelectable",{get:function(){return!0},enumerable:!1,configurable:!0}),Container.prototype.getEffectiveVerticalContentAlignment=function(){if(void 0!==this.verticalContentAlignment)return this.verticalContentAlignment;var parentContainer=this.getParentContainer();return parentContainer?parentContainer.getEffectiveVerticalContentAlignment():Enums.VerticalAlignment.Top},Container.prototype.getItemCount=function(){return this._items.length},Container.prototype.getItemAt=function(index){return this._items[index]},Container.prototype.getFirstVisibleRenderedItem=function(){if(this.renderedElement&&this._renderedItems&&this._renderedItems.length>0)for(var _i=0,_a=this._renderedItems;_i<_a.length;_i++){var item=_a[_i];if(item.isVisible)return item}},Container.prototype.getLastVisibleRenderedItem=function(){if(this.renderedElement&&this._renderedItems&&this._renderedItems.length>0)for(var i=this._renderedItems.length-1;i>=0;i--)if(this._renderedItems[i].isVisible)return this._renderedItems[i]},Container.prototype.getJsonTypeName=function(){return"Container"},Container.prototype.isFirstElement=function(element){for(var designMode=this.isDesignMode(),_i=0,_a=this._items;_i<_a.length;_i++){var item=_a[_i];if(item.isVisible||designMode)return item==element}return!1},Container.prototype.isLastElement=function(element){for(var designMode=this.isDesignMode(),i=this._items.length-1;i>=0;i--)if(this._items[i].isVisible||designMode)return this._items[i]==element;return!1},Container.prototype.isRtl=function(){if(void 0!==this.rtl)return this.rtl;var parentContainer=this.getParentContainer();return!!parentContainer&&parentContainer.isRtl()},Container.prototype.isBleedingAtTop=function(){var firstRenderedItem=this.getFirstVisibleRenderedItem();return this.isBleeding()||!!firstRenderedItem&&firstRenderedItem.isBleedingAtTop()},Container.prototype.isBleedingAtBottom=function(){var lastRenderedItem=this.getLastVisibleRenderedItem();return this.isBleeding()||!!lastRenderedItem&&(lastRenderedItem.isBleedingAtBottom()&&lastRenderedItem.getEffectiveStyle()==this.getEffectiveStyle())},Container.prototype.indexOf=function(cardElement){return this._items.indexOf(cardElement)},Container.prototype.addItem=function(item){this.insertItemAt(item,-1,!1)},Container.prototype.insertItemBefore=function(item,insertBefore){this.insertItemAt(item,this._items.indexOf(insertBefore),!1)},Container.prototype.insertItemAfter=function(item,insertAfter){this.insertItemAt(item,this._items.indexOf(insertAfter)+1,!1)},Container.prototype.removeItem=function(item){var itemIndex=this._items.indexOf(item);return itemIndex>=0&&(this._items.splice(itemIndex,1),item.setParent(void 0),this.updateLayout(),!0)},Container.prototype.clear=function(){this._items=[],this._renderedItems=[]},Container.prototype.getResourceInformation=function(){var result=_super.prototype.getResourceInformation.call(this);return this.backgroundImage.isValid()&&result.push({url:this.backgroundImage.url,mimeType:"image"}),result},Container.prototype.getActionById=function(id){var result=_super.prototype.getActionById.call(this,id);if(!result&&(this.selectAction&&(result=this.selectAction.getActionById(id)),!result))for(var _i=0,_a=this._items;_i<_a.length;_i++){if(result=_a[_i].getActionById(id))break}return result},Object.defineProperty(Container.prototype,"padding",{get:function(){return this.getPadding()},set:function(value){this.setPadding(value)},enumerable:!1,configurable:!0}),Object.defineProperty(Container.prototype,"selectAction",{get:function(){return this._selectAction},set:function(value){this._selectAction=value},enumerable:!1,configurable:!0}),Object.defineProperty(Container.prototype,"bleed",{get:function(){return this.getBleed()},set:function(value){this.setBleed(value)},enumerable:!1,configurable:!0}),Container.backgroundImageProperty=new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_0,"backgroundImage",BackgroundImage),Container.verticalContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_1,"verticalContentAlignment",Enums.VerticalAlignment),Container.rtlProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_0,"rtl"),__decorate([serialization_1.property(Container.backgroundImageProperty)],Container.prototype,"backgroundImage",null),__decorate([serialization_1.property(Container.verticalContentAlignmentProperty)],Container.prototype,"verticalContentAlignment",void 0),__decorate([serialization_1.property(Container.rtlProperty)],Container.prototype,"rtl",void 0),Container}(ContainerBase);exports.Container=Container;var Column=function(_super){function Column(width){void 0===width&&(width="stretch");var _this=_super.call(this)||this;return _this.width="stretch",_this._computedWeight=0,_this.width=width,_this}return __extends(Column,_super),Column.prototype.adjustRenderedElementSize=function(renderedElement){this.isDesignMode()?(renderedElement.style.minWidth="20px",renderedElement.style.minHeight=(this.minPixelHeight?Math.max(this.minPixelHeight,20):20)+"px"):(renderedElement.style.minWidth="0",this.minPixelHeight&&(renderedElement.style.minHeight=this.minPixelHeight+"px")),"auto"===this.width?renderedElement.style.flex="0 1 auto":"stretch"===this.width?renderedElement.style.flex="1 1 50px":this.width instanceof shared_1.SizeAndUnit&&(this.width.unit==Enums.SizeUnit.Pixel?(renderedElement.style.flex="0 0 auto",renderedElement.style.width=this.width.physicalSize+"px"):renderedElement.style.flex="1 1 "+(this._computedWeight>0?this._computedWeight:this.width.physicalSize)+"%")},Column.prototype.shouldSerialize=function(context){return!0},Object.defineProperty(Column.prototype,"separatorOrientation",{get:function(){return Enums.Orientation.Vertical},enumerable:!1,configurable:!0}),Column.prototype.getJsonTypeName=function(){return"Column"},Object.defineProperty(Column.prototype,"hasVisibleSeparator",{get:function(){return!!(this.parent&&this.parent instanceof ColumnSet)&&(void 0!==this.separatorElement&&!this.parent.isLeftMostElement(this))},enumerable:!1,configurable:!0}),Object.defineProperty(Column.prototype,"isStandalone",{get:function(){return!1},enumerable:!1,configurable:!0}),Column.widthProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_0,"width",(function(sender,property,source,context){var result=property.defaultValue,value=source[property.name],invalidWidth=!1;if("number"!=typeof value||isNaN(value))if("auto"===value||"stretch"===value)result=value;else if("string"==typeof value)try{(result=shared_1.SizeAndUnit.parse(value)).unit===Enums.SizeUnit.Pixel&&property.targetVersion.compareTo(context.targetVersion)>0&&(invalidWidth=!0)}catch(e){invalidWidth=!0}else invalidWidth=!0;else result=new shared_1.SizeAndUnit(value,Enums.SizeUnit.Weight);return invalidWidth&&(context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidColumnWidth(value)),result="auto"),result}),(function(sender,property,target,value,context){value instanceof shared_1.SizeAndUnit?value.unit===Enums.SizeUnit.Pixel?context.serializeValue(target,"width",value.physicalSize+"px"):context.serializeNumber(target,"width",value.physicalSize):context.serializeValue(target,"width",value)}),"stretch"),__decorate([serialization_1.property(Column.widthProperty)],Column.prototype,"width",void 0),Column}(Container);exports.Column=Column;var ColumnSet=function(_super){function ColumnSet(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._columns=[],_this}return __extends(ColumnSet,_super),ColumnSet.prototype.createColumnInstance=function(source,context){return context.parseCardObject(this,source,[],!this.isDesignMode(),(function(typeName){return typeName&&"Column"!==typeName?void 0:new Column}),(function(typeName,errorType){context.logParseEvent(void 0,Enums.ValidationEvent.ElementTypeNotAllowed,strings_1.Strings.errors.elementTypeNotAllowed(typeName))}))},ColumnSet.prototype.internalRender=function(){if(this._renderedColumns=[],this._columns.length>0){var hostConfig=this.hostConfig,element=document.createElement("div");switch(element.className=hostConfig.makeCssClassName("ac-columnSet"),element.style.display="flex",shared_1.GlobalSettings.useAdvancedCardBottomTruncation&&(element.style.minHeight="-webkit-min-content"),this.getEffectiveHorizontalAlignment()){case Enums.HorizontalAlignment.Center:element.style.justifyContent="center";break;case Enums.HorizontalAlignment.Right:element.style.justifyContent="flex-end";break;default:element.style.justifyContent="flex-start"}for(var totalWeight=0,_i=0,_a=this._columns;_i<_a.length;_i++){(column=_a[_i]).width instanceof shared_1.SizeAndUnit&&column.width.unit==Enums.SizeUnit.Weight&&(totalWeight+=column.width.physicalSize)}for(var _b=0,_c=this._columns;_b<_c.length;_b++){var column;if((column=_c[_b]).width instanceof shared_1.SizeAndUnit&&column.width.unit==Enums.SizeUnit.Weight&&totalWeight>0){var computedWeight=100/totalWeight*column.width.physicalSize;column._computedWeight=computedWeight}var renderedColumn=column.render();renderedColumn&&(this._renderedColumns.length>0&&column.separatorElement&&(column.separatorElement.style.flex="0 0 auto",Utils.appendChild(element,column.separatorElement)),Utils.appendChild(element,renderedColumn),this._renderedColumns.push(column))}return this._renderedColumns.length>0?element:void 0}},ColumnSet.prototype.truncateOverflow=function(maxHeight){for(var _i=0,_a=this._columns;_i<_a.length;_i++){_a[_i].handleOverflow(maxHeight)}return!0},ColumnSet.prototype.undoOverflowTruncation=function(){for(var _i=0,_a=this._columns;_i<_a.length;_i++){_a[_i].resetOverflow()}},Object.defineProperty(ColumnSet.prototype,"isSelectable",{get:function(){return!0},enumerable:!1,configurable:!0}),ColumnSet.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this._columns=[],this._renderedColumns=[];var jsonColumns=source.columns;if(Array.isArray(jsonColumns))for(var _i=0,jsonColumns_1=jsonColumns;_i<jsonColumns_1.length;_i++){var item=jsonColumns_1[_i],column=this.createColumnInstance(item,context);column&&this._columns.push(column)}},ColumnSet.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),context.serializeArray(target,"columns",this._columns)},ColumnSet.prototype.isFirstElement=function(element){for(var _i=0,_a=this._columns;_i<_a.length;_i++){var column=_a[_i];if(column.isVisible)return column==element}return!1},ColumnSet.prototype.isBleedingAtTop=function(){if(this.isBleeding())return!0;if(this._renderedColumns&&this._renderedColumns.length>0)for(var _i=0,_a=this._columns;_i<_a.length;_i++){if(_a[_i].isBleedingAtTop())return!0}return!1},ColumnSet.prototype.isBleedingAtBottom=function(){if(this.isBleeding())return!0;if(this._renderedColumns&&this._renderedColumns.length>0)for(var _i=0,_a=this._columns;_i<_a.length;_i++){if(_a[_i].isBleedingAtBottom())return!0}return!1},ColumnSet.prototype.getItemCount=function(){return this._columns.length},ColumnSet.prototype.getFirstVisibleRenderedItem=function(){return this.renderedElement&&this._renderedColumns&&this._renderedColumns.length>0?this._renderedColumns[0]:void 0},ColumnSet.prototype.getLastVisibleRenderedItem=function(){return this.renderedElement&&this._renderedColumns&&this._renderedColumns.length>0?this._renderedColumns[this._renderedColumns.length-1]:void 0},ColumnSet.prototype.getColumnAt=function(index){return this._columns[index]},ColumnSet.prototype.getItemAt=function(index){return this.getColumnAt(index)},ColumnSet.prototype.getJsonTypeName=function(){return"ColumnSet"},ColumnSet.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context);for(var weightedColumns=0,stretchedColumns=0,_i=0,_a=this._columns;_i<_a.length;_i++){var column=_a[_i];"number"==typeof column.width?weightedColumns++:"stretch"===column.width&&stretchedColumns++}weightedColumns>0&&stretchedColumns>0&&context.addFailure(this,Enums.ValidationEvent.Hint,strings_1.Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet())},ColumnSet.prototype.addColumn=function(column){if(column.parent)throw new Error(strings_1.Strings.errors.columnAlreadyBelongsToAnotherSet());this._columns.push(column),column.setParent(this)},ColumnSet.prototype.removeItem=function(item){if(item instanceof Column){var itemIndex=this._columns.indexOf(item);if(itemIndex>=0)return this._columns.splice(itemIndex,1),item.setParent(void 0),this.updateLayout(),!0}return!1},ColumnSet.prototype.indexOf=function(cardElement){return cardElement instanceof Column?this._columns.indexOf(cardElement):-1},ColumnSet.prototype.isLeftMostElement=function(element){return 0==this._columns.indexOf(element)},ColumnSet.prototype.isRightMostElement=function(element){return this._columns.indexOf(element)==this._columns.length-1},ColumnSet.prototype.isTopElement=function(element){return this._columns.indexOf(element)>=0},ColumnSet.prototype.isBottomElement=function(element){return this._columns.indexOf(element)>=0},ColumnSet.prototype.getActionById=function(id){for(var result=void 0,_i=0,_a=this._columns;_i<_a.length;_i++){if(result=_a[_i].getActionById(id))break}return result},Object.defineProperty(ColumnSet.prototype,"bleed",{get:function(){return this.getBleed()},set:function(value){this.setBleed(value)},enumerable:!1,configurable:!0}),Object.defineProperty(ColumnSet.prototype,"padding",{get:function(){return this.getPadding()},set:function(value){this.setPadding(value)},enumerable:!1,configurable:!0}),Object.defineProperty(ColumnSet.prototype,"selectAction",{get:function(){return this._selectAction},set:function(value){this._selectAction=value},enumerable:!1,configurable:!0}),ColumnSet}(ContainerBase);function raiseImageLoadedEvent(image){var card=image.getRootElement(),onImageLoadedHandler=card&&card.onImageLoaded?card.onImageLoaded:AdaptiveCard.onImageLoaded;onImageLoadedHandler&&onImageLoadedHandler(image)}function raiseAnchorClickedEvent(element,anchor,ev){var card=element.getRootElement(),onAnchorClickedHandler=card&&card.onAnchorClicked?card.onAnchorClicked:AdaptiveCard.onAnchorClicked;return void 0!==onAnchorClickedHandler&&onAnchorClickedHandler(element,anchor,ev)}function raiseInlineCardExpandedEvent(action,isExpanded){var card=action.parent?action.parent.getRootElement():void 0,onInlineCardExpandedHandler=card&&card.onInlineCardExpanded?card.onInlineCardExpanded:AdaptiveCard.onInlineCardExpanded;onInlineCardExpandedHandler&&onInlineCardExpandedHandler(action,isExpanded)}function raiseElementVisibilityChangedEvent(element,shouldUpdateLayout){void 0===shouldUpdateLayout&&(shouldUpdateLayout=!0);var rootElement=element.getRootElement();shouldUpdateLayout&&rootElement.updateLayout();var card=rootElement,onElementVisibilityChangedHandler=card&&card.onElementVisibilityChanged?card.onElementVisibilityChanged:AdaptiveCard.onElementVisibilityChanged;void 0!==onElementVisibilityChangedHandler&&onElementVisibilityChangedHandler(element)}exports.ColumnSet=ColumnSet;var ContainerWithActions=function(_super){function ContainerWithActions(){var _this=_super.call(this)||this;return _this._actionCollection=new ActionCollection(_this),_this}return __extends(ContainerWithActions,_super),ContainerWithActions.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this._actionCollection.parse(source.actions,context)},ContainerWithActions.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),this._actionCollection.toJSON(target,"actions",context)},ContainerWithActions.prototype.internalRender=function(){var element=_super.prototype.internalRender.call(this);if(element){var renderedActions=this._actionCollection.render(this.hostConfig.actions.actionsOrientation,!1);return renderedActions&&(Utils.appendChild(element,renderSeparation(this.hostConfig,{spacing:this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)},Enums.Orientation.Horizontal)),Utils.appendChild(element,renderedActions)),this.renderIfEmpty||element.children.length>0?element:void 0}},ContainerWithActions.prototype.getHasExpandedAction=function(){return 0!=this.renderedActionCount&&(1==this.renderedActionCount?void 0!==this._actionCollection.expandedAction&&!this.hostConfig.actions.preExpandSingleShowCardAction:void 0!==this._actionCollection.expandedAction)},Object.defineProperty(ContainerWithActions.prototype,"renderedActionCount",{get:function(){return this._actionCollection.renderedActionCount},enumerable:!1,configurable:!0}),Object.defineProperty(ContainerWithActions.prototype,"renderIfEmpty",{get:function(){return!1},enumerable:!1,configurable:!0}),ContainerWithActions.prototype.getActionCount=function(){return this._actionCollection.getActionCount()},ContainerWithActions.prototype.getActionAt=function(index){return index>=0&&index<this.getActionCount()?this._actionCollection.getActionAt(index):_super.prototype.getActionAt.call(this,index)},ContainerWithActions.prototype.getActionById=function(id){var result=this._actionCollection.getActionById(id);return result||_super.prototype.getActionById.call(this,id)},ContainerWithActions.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),this._actionCollection&&this._actionCollection.validateProperties(context)},ContainerWithActions.prototype.isLastElement=function(element){return _super.prototype.isLastElement.call(this,element)&&0==this._actionCollection.getActionCount()},ContainerWithActions.prototype.addAction=function(action){this._actionCollection.addAction(action)},ContainerWithActions.prototype.clear=function(){_super.prototype.clear.call(this),this._actionCollection.clear()},ContainerWithActions.prototype.getAllInputs=function(processActions){void 0===processActions&&(processActions=!0);var result=_super.prototype.getAllInputs.call(this,processActions);return processActions&&(result=result.concat(this._actionCollection.getAllInputs(processActions))),result},ContainerWithActions.prototype.getResourceInformation=function(){return _super.prototype.getResourceInformation.call(this).concat(this._actionCollection.getResourceInformation())},ContainerWithActions.prototype.isBleedingAtBottom=function(){return 0==this._actionCollection.renderedActionCount?_super.prototype.isBleedingAtBottom.call(this):1==this._actionCollection.getActionCount()?void 0!==this._actionCollection.expandedAction&&!this.hostConfig.actions.preExpandSingleShowCardAction:void 0!==this._actionCollection.expandedAction},Object.defineProperty(ContainerWithActions.prototype,"isStandalone",{get:function(){return!1},enumerable:!1,configurable:!0}),ContainerWithActions}(Container);exports.ContainerWithActions=ContainerWithActions;var RefreshActionProperty=function(_super){function RefreshActionProperty(targetVersion,name){var _this=_super.call(this,targetVersion,name,void 0)||this;return _this.targetVersion=targetVersion,_this.name=name,_this}return __extends(RefreshActionProperty,_super),RefreshActionProperty.prototype.parse=function(sender,source,context){var action=context.parseAction(sender.parent,source[this.name],[],!1);if(void 0!==action){if(action instanceof ExecuteAction)return action;context.logParseEvent(sender,Enums.ValidationEvent.ActionTypeNotAllowed,strings_1.Strings.errors.actionTypeNotAllowed(action.getJsonTypeName()))}context.logParseEvent(sender,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.propertyMustBeSet("action"))},RefreshActionProperty.prototype.toJSON=function(sender,target,value,context){context.serializeValue(target,this.name,value?value.toJSON(context):void 0,void 0,!0)},RefreshActionProperty}(serialization_1.PropertyDefinition);exports.RefreshActionProperty=RefreshActionProperty;var RefreshDefinition=function(_super){function RefreshDefinition(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(RefreshDefinition,_super),Object.defineProperty(RefreshDefinition.prototype,"action",{get:function(){return this.getValue(RefreshDefinition.actionProperty)},set:function(value){this.setValue(RefreshDefinition.actionProperty,value),value&&value.setParent(this.parent)},enumerable:!1,configurable:!0}),RefreshDefinition.prototype.getSchemaKey=function(){return"RefreshDefinition"},RefreshDefinition.actionProperty=new RefreshActionProperty(serialization_1.Versions.v1_4,"action"),RefreshDefinition.userIdsProperty=new serialization_1.StringArrayProperty(serialization_1.Versions.v1_4,"userIds"),__decorate([serialization_1.property(RefreshDefinition.actionProperty)],RefreshDefinition.prototype,"action",null),__decorate([serialization_1.property(RefreshDefinition.userIdsProperty)],RefreshDefinition.prototype,"userIds",void 0),RefreshDefinition}(serialization_1.SerializableObject);exports.RefreshDefinition=RefreshDefinition;var AuthCardButton=function(_super){function AuthCardButton(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(AuthCardButton,_super),AuthCardButton.prototype.getSchemaKey=function(){return"AuthCardButton"},AuthCardButton.typeProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"type"),AuthCardButton.titleProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"title"),AuthCardButton.imageProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"image"),AuthCardButton.valueProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"value"),__decorate([serialization_1.property(AuthCardButton.typeProperty)],AuthCardButton.prototype,"type",void 0),__decorate([serialization_1.property(AuthCardButton.titleProperty)],AuthCardButton.prototype,"title",void 0),__decorate([serialization_1.property(AuthCardButton.imageProperty)],AuthCardButton.prototype,"image",void 0),__decorate([serialization_1.property(AuthCardButton.valueProperty)],AuthCardButton.prototype,"value",void 0),AuthCardButton}(serialization_1.SerializableObject);exports.AuthCardButton=AuthCardButton;var TokenExchangeResource=function(_super){function TokenExchangeResource(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(TokenExchangeResource,_super),TokenExchangeResource.prototype.getSchemaKey=function(){return"TokenExchangeResource"},TokenExchangeResource.idProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"id"),TokenExchangeResource.uriProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"uri"),TokenExchangeResource.providerIdProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"providerId"),__decorate([serialization_1.property(TokenExchangeResource.idProperty)],TokenExchangeResource.prototype,"id",void 0),__decorate([serialization_1.property(TokenExchangeResource.uriProperty)],TokenExchangeResource.prototype,"uri",void 0),__decorate([serialization_1.property(TokenExchangeResource.providerIdProperty)],TokenExchangeResource.prototype,"providerId",void 0),TokenExchangeResource}(serialization_1.SerializableObject);exports.TokenExchangeResource=TokenExchangeResource;var Authentication=function(_super){function Authentication(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Authentication,_super),Authentication.prototype.getSchemaKey=function(){return"Authentication"},Authentication.textProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"text"),Authentication.connectionNameProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_4,"connectionName"),Authentication.buttonsProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_4,"buttons",AuthCardButton),Authentication.tokenExchangeResourceProperty=new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4,"tokenExchangeResource",TokenExchangeResource,!0),__decorate([serialization_1.property(Authentication.textProperty)],Authentication.prototype,"text",void 0),__decorate([serialization_1.property(Authentication.connectionNameProperty)],Authentication.prototype,"connectionName",void 0),__decorate([serialization_1.property(Authentication.buttonsProperty)],Authentication.prototype,"buttons",void 0),__decorate([serialization_1.property(Authentication.tokenExchangeResourceProperty)],Authentication.prototype,"tokenExchangeResource",void 0),Authentication}(serialization_1.SerializableObject);exports.Authentication=Authentication;var AdaptiveCard=function(_super){function AdaptiveCard(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.designMode=!1,_this}return __extends(AdaptiveCard,_super),Object.defineProperty(AdaptiveCard.prototype,"refresh",{get:function(){return this.getValue(AdaptiveCard.refreshProperty)},set:function(value){this.setValue(AdaptiveCard.refreshProperty,value),value&&(value.parent=this)},enumerable:!1,configurable:!0}),Object.defineProperty(AdaptiveCard,"processMarkdown",{get:function(){throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved())},set:function(value){throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved())},enumerable:!1,configurable:!0}),AdaptiveCard.applyMarkdown=function(text){var result={didProcess:!1};if(AdaptiveCard.onProcessMarkdown)AdaptiveCard.onProcessMarkdown(text,result);else if(window.markdownit){var markdownIt=window.markdownit;result.outputHtml=markdownIt().render(text),result.didProcess=!0}else console.warn(strings_1.Strings.errors.markdownProcessingNotEnabled);return result},AdaptiveCard.prototype.isVersionSupported=function(){return!!this.bypassVersionCheck||!(!this.version||!this.version.isValid||this.maxVersion.major<this.version.major||this.maxVersion.major==this.version.major&&this.maxVersion.minor<this.version.minor)},AdaptiveCard.prototype.getDefaultSerializationContext=function(){return new SerializationContext(this.version)},AdaptiveCard.prototype.getItemsCollectionPropertyName=function(){return"body"},AdaptiveCard.prototype.internalParse=function(source,context){this._fallbackCard=void 0;var fallbackElement=context.parseElement(void 0,source.fallback,!this.isDesignMode());fallbackElement&&(this._fallbackCard=new AdaptiveCard,this._fallbackCard.addItem(fallbackElement)),_super.prototype.internalParse.call(this,source,context)},AdaptiveCard.prototype.internalToJSON=function(target,context){this.setValue(AdaptiveCard.versionProperty,context.targetVersion),_super.prototype.internalToJSON.call(this,target,context)},AdaptiveCard.prototype.internalRender=function(){var renderedElement=_super.prototype.internalRender.call(this);return shared_1.GlobalSettings.useAdvancedCardBottomTruncation&&renderedElement&&renderedElement.style.removeProperty("minHeight"),renderedElement},AdaptiveCard.prototype.getHasBackground=function(){return!0},AdaptiveCard.prototype.getDefaultPadding=function(){return new shared_1.PaddingDefinition(Enums.Spacing.Padding,Enums.Spacing.Padding,Enums.Spacing.Padding,Enums.Spacing.Padding)},AdaptiveCard.prototype.shouldSerialize=function(context){return!0},Object.defineProperty(AdaptiveCard.prototype,"renderIfEmpty",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(AdaptiveCard.prototype,"bypassVersionCheck",{get:function(){return!1},enumerable:!1,configurable:!0}),Object.defineProperty(AdaptiveCard.prototype,"allowCustomStyle",{get:function(){return this.hostConfig.adaptiveCard&&this.hostConfig.adaptiveCard.allowCustomStyle},enumerable:!1,configurable:!0}),Object.defineProperty(AdaptiveCard.prototype,"hasBackground",{get:function(){return!0},enumerable:!1,configurable:!0}),AdaptiveCard.prototype.getJsonTypeName=function(){return"AdaptiveCard"},AdaptiveCard.prototype.internalValidateProperties=function(context){_super.prototype.internalValidateProperties.call(this,context),"AdaptiveCard"!==this.getValue(CardElement.typeNameProperty)&&context.addFailure(this,Enums.ValidationEvent.MissingCardType,strings_1.Strings.errors.invalidCardType()),this.bypassVersionCheck||this.version?this.isVersionSupported()||context.addFailure(this,Enums.ValidationEvent.UnsupportedCardVersion,strings_1.Strings.errors.unsupportedCardVersion(this.version.toString(),this.maxVersion.toString())):context.addFailure(this,Enums.ValidationEvent.PropertyCantBeNull,strings_1.Strings.errors.propertyMustBeSet("version"))},AdaptiveCard.prototype.render=function(target){var renderedCard;return this.shouldFallback()&&this._fallbackCard?(this._fallbackCard.hostConfig=this.hostConfig,renderedCard=this._fallbackCard.render()):(renderedCard=_super.prototype.render.call(this))&&(renderedCard.classList.add(this.hostConfig.makeCssClassName("ac-adaptiveCard")),shared_1.GlobalSettings.setTabIndexAtCardRoot&&(renderedCard.tabIndex=0),this.speak&&renderedCard.setAttribute("aria-label",this.speak)),target&&(Utils.appendChild(target,renderedCard),this.updateLayout()),renderedCard},AdaptiveCard.prototype.updateLayout=function(processChildren){if(void 0===processChildren&&(processChildren=!0),_super.prototype.updateLayout.call(this,processChildren),shared_1.GlobalSettings.useAdvancedCardBottomTruncation&&this.isDisplayed()){var padding=this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);this.handleOverflow(this.renderedElement.offsetHeight-padding)}},AdaptiveCard.prototype.shouldFallback=function(){return _super.prototype.shouldFallback.call(this)||!this.isVersionSupported()},Object.defineProperty(AdaptiveCard.prototype,"hasVisibleSeparator",{get:function(){return!1},enumerable:!1,configurable:!0}),AdaptiveCard.schemaUrl="http://adaptivecards.io/schemas/adaptive-card.json",AdaptiveCard.$schemaProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_0,"$schema",(function(sender,property,source,context){return AdaptiveCard.schemaUrl}),(function(sender,property,target,value,context){context.serializeValue(target,property.name,AdaptiveCard.schemaUrl)})),AdaptiveCard.versionProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_0,"version",(function(sender,property,source,context){var version=serialization_1.Version.parse(source[property.name],context);return void 0===version&&(version=serialization_1.Versions.latest,context.logParseEvent(sender,Enums.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidCardVersion(version.toString()))),version}),(function(sender,property,target,value,context){void 0!==value&&context.serializeValue(target,property.name,value.toString())}),serialization_1.Versions.v1_0),AdaptiveCard.fallbackTextProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"fallbackText"),AdaptiveCard.speakProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"speak"),AdaptiveCard.refreshProperty=new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4,"refresh",RefreshDefinition,!0),AdaptiveCard.authenticationProperty=new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4,"authentication",Authentication,!0),__decorate([serialization_1.property(AdaptiveCard.versionProperty)],AdaptiveCard.prototype,"version",void 0),__decorate([serialization_1.property(AdaptiveCard.fallbackTextProperty)],AdaptiveCard.prototype,"fallbackText",void 0),__decorate([serialization_1.property(AdaptiveCard.speakProperty)],AdaptiveCard.prototype,"speak",void 0),__decorate([serialization_1.property(AdaptiveCard.refreshProperty)],AdaptiveCard.prototype,"refresh",null),__decorate([serialization_1.property(AdaptiveCard.authenticationProperty)],AdaptiveCard.prototype,"authentication",void 0),AdaptiveCard}(ContainerWithActions);exports.AdaptiveCard=AdaptiveCard;var InlineAdaptiveCard=function(_super){function InlineAdaptiveCard(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.suppressStyle=!1,_this}return __extends(InlineAdaptiveCard,_super),InlineAdaptiveCard.prototype.getSchemaKey=function(){return"InlineAdaptiveCard"},InlineAdaptiveCard.prototype.populateSchema=function(schema){_super.prototype.populateSchema.call(this,schema),schema.remove(AdaptiveCard.$schemaProperty,AdaptiveCard.versionProperty)},InlineAdaptiveCard.prototype.getDefaultPadding=function(){return new shared_1.PaddingDefinition(this.suppressStyle?Enums.Spacing.None:Enums.Spacing.Padding,Enums.Spacing.Padding,this.suppressStyle?Enums.Spacing.None:Enums.Spacing.Padding,Enums.Spacing.Padding)},Object.defineProperty(InlineAdaptiveCard.prototype,"bypassVersionCheck",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(InlineAdaptiveCard.prototype,"defaultStyle",{get:function(){return this.suppressStyle?Enums.ContainerStyle.Default:this.hostConfig.actions.showCard.style?this.hostConfig.actions.showCard.style:Enums.ContainerStyle.Emphasis},enumerable:!1,configurable:!0}),InlineAdaptiveCard.prototype.render=function(target){var renderedCard=_super.prototype.render.call(this,target);return renderedCard&&(renderedCard.setAttribute("aria-live","polite"),renderedCard.removeAttribute("tabindex")),renderedCard},InlineAdaptiveCard}(AdaptiveCard),SerializationContext=function(_super){function SerializationContext(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(SerializationContext,_super),SerializationContext.prototype.internalParseCardObject=function(parent,source,forbiddenTypeNames,allowFallback,createInstanceCallback,logParseEvent){var result=void 0;if(source&&"object"==typeof source){var typeName=Utils.parseString(source.type);if(typeName&&forbiddenTypeNames.indexOf(typeName)>=0)logParseEvent(typeName,Enums.TypeErrorType.ForbiddenType);else{var tryToFallback=!1;if((result=createInstanceCallback(typeName))?(result.setParent(parent),result.parse(source,this),tryToFallback=shared_1.GlobalSettings.enableFallback&&allowFallback&&result.shouldFallback()):(tryToFallback=shared_1.GlobalSettings.enableFallback&&allowFallback,logParseEvent(typeName,Enums.TypeErrorType.UnknownType)),tryToFallback){var fallback=source.fallback;!fallback&&parent&&parent.setShouldFallback(!0),"string"==typeof fallback&&"drop"===fallback.toLowerCase()?result=void 0:"object"==typeof fallback&&(result=this.internalParseCardObject(parent,fallback,forbiddenTypeNames,!0,createInstanceCallback,logParseEvent))}}}return result},SerializationContext.prototype.cardObjectParsed=function(o,source){o instanceof Action&&this.onParseAction?this.onParseAction(o,source,this):o instanceof CardElement&&this.onParseElement&&this.onParseElement(o,source,this)},SerializationContext.prototype.shouldSerialize=function(o){return o instanceof Action?void 0!==this.actionRegistry.findByName(o.getJsonTypeName()):!(o instanceof CardElement)||void 0!==this.elementRegistry.findByName(o.getJsonTypeName())},SerializationContext.prototype.parseCardObject=function(parent,source,forbiddenTypeNames,allowFallback,createInstanceCallback,logParseEvent){var result=this.internalParseCardObject(parent,source,forbiddenTypeNames,allowFallback,createInstanceCallback,logParseEvent);return void 0!==result&&this.cardObjectParsed(result,source),result},SerializationContext.prototype.parseElement=function(parent,source,allowFallback){var _this=this;return this.parseCardObject(parent,source,[],allowFallback,(function(typeName){return _this.elementRegistry.createInstance(typeName,_this.targetVersion)}),(function(typeName,errorType){errorType===Enums.TypeErrorType.UnknownType?_this.logParseEvent(void 0,Enums.ValidationEvent.UnknownElementType,strings_1.Strings.errors.unknownElementType(typeName)):_this.logParseEvent(void 0,Enums.ValidationEvent.ElementTypeNotAllowed,strings_1.Strings.errors.elementTypeNotAllowed(typeName))}))},SerializationContext.prototype.parseAction=function(parent,source,forbiddenActionTypes,allowFallback){var _this=this;return this.parseCardObject(parent,source,forbiddenActionTypes,allowFallback,(function(typeName){return _this.actionRegistry.createInstance(typeName,_this.targetVersion)}),(function(typeName,errorType){errorType==Enums.TypeErrorType.UnknownType?_this.logParseEvent(void 0,Enums.ValidationEvent.UnknownActionType,strings_1.Strings.errors.unknownActionType(typeName)):_this.logParseEvent(void 0,Enums.ValidationEvent.ActionTypeNotAllowed,strings_1.Strings.errors.actionTypeNotAllowed(typeName))}))},Object.defineProperty(SerializationContext.prototype,"elementRegistry",{get:function(){return this._elementRegistry?this._elementRegistry:registry_1.GlobalRegistry.elements},enumerable:!1,configurable:!0}),SerializationContext.prototype.setElementRegistry=function(value){this._elementRegistry=value},Object.defineProperty(SerializationContext.prototype,"actionRegistry",{get:function(){return this._actionRegistry?this._actionRegistry:registry_1.GlobalRegistry.actions},enumerable:!1,configurable:!0}),SerializationContext.prototype.setActionRegistry=function(value){this._actionRegistry=value},SerializationContext}(serialization_1.BaseSerializationContext);exports.SerializationContext=SerializationContext,registry_1.GlobalRegistry.defaultElements.register("Container",Container),registry_1.GlobalRegistry.defaultElements.register("TextBlock",TextBlock),registry_1.GlobalRegistry.defaultElements.register("RichTextBlock",RichTextBlock,serialization_1.Versions.v1_2),registry_1.GlobalRegistry.defaultElements.register("TextRun",TextRun,serialization_1.Versions.v1_2),registry_1.GlobalRegistry.defaultElements.register("Image",Image),registry_1.GlobalRegistry.defaultElements.register("ImageSet",ImageSet),registry_1.GlobalRegistry.defaultElements.register("Media",Media,serialization_1.Versions.v1_1),registry_1.GlobalRegistry.defaultElements.register("FactSet",FactSet),registry_1.GlobalRegistry.defaultElements.register("ColumnSet",ColumnSet),registry_1.GlobalRegistry.defaultElements.register("ActionSet",ActionSet,serialization_1.Versions.v1_2),registry_1.GlobalRegistry.defaultElements.register("Input.Text",TextInput),registry_1.GlobalRegistry.defaultElements.register("Input.Date",DateInput),registry_1.GlobalRegistry.defaultElements.register("Input.Time",TimeInput),registry_1.GlobalRegistry.defaultElements.register("Input.Number",NumberInput),registry_1.GlobalRegistry.defaultElements.register("Input.ChoiceSet",ChoiceSetInput),registry_1.GlobalRegistry.defaultElements.register("Input.Toggle",ToggleInput),registry_1.GlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName,OpenUrlAction),registry_1.GlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName,SubmitAction),registry_1.GlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName,ShowCardAction),registry_1.GlobalRegistry.defaultActions.register(ToggleVisibilityAction.JsonTypeName,ToggleVisibilityAction,serialization_1.Versions.v1_2),registry_1.GlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName,ExecuteAction,serialization_1.Versions.v1_4)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Constants=void 0;var Constants=function(){function Constants(){}return Constants.keys={tab:"Tab",enter:"Enter",escape:"Escape",space:" ",up:"ArrowUp",down:"ArrowDown",delete:"Delete"},Constants}();exports.Constants=Constants},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const favorite_model_1=__webpack_require__(461),rxjs_1=__webpack_require__(7),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),room_service_1=__webpack_require__(25),conversation_service_1=__webpack_require__(63),company_directory_service_1=__webpack_require__(125),office365ad_service_1=__webpack_require__(316);class FavoriteService{constructor(){this.favorites=[],this.eventNames=[],this.rxSubject=new rxjs_1.Subject,this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.companyDirectoryService=company_directory_service_1.CompanyDirectoryService.getInstance(),this.office365AdService=office365ad_service_1.Office365AdService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.favoriteService||(win.rainbow.favoriteService=new FavoriteService),win.rainbow.favoriteService}async start(){this.logger.info("[FavoriteService] === STARTING ==="),this.connect(),this.eventNames=["ON_FAVORITE_CREATED","ON_FAVORITE_DELETED","ON_FAVORITE_UPDATED"],this.logger.info("[FavoriteService] === STARTED ===")}async connect(){try{await this.getServerFavorites(),this.conversationService.favoriteService=this,this.attachHandlers(),this.rxSubject.next({name:"update"})}catch(error){this.logger.error("[FavoriteService] connect -- Failure -- "+error.message)}}async stop(){this.logger.info("[FavoriteService] === STOPPING ==="),this.xmppManagementHandler&&(this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=null),this.logger.info("[FavoriteService] === STOPPED ===")}subscribe(observer){return this.rxSubject.subscribe(observer)}async getServerFavorites(){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw this.logger.debug(`[FavoriteService] Request ${responseData.headers.get("x-rainbow-request-id")} failed with status ${responseData.status}`),new Error(responseData.statusText);const promises=(await responseData.json()).data.map(async data=>this.createFavorite(data.id,data.peerId,data.type)),favorites=await Promise.all(promises);return this.favorites=favorites.filter(favorite=>null!==favorite),this.logger.info(`[FavoriteService] getServerFavorites -- SUCCESS -- found ${this.favorites.length} favorites`),this.favorites}catch(error){const errorMessage="[FavoriteService] getServerFavorites -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async addServerFavorite(peerId,type){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites?type=${type}`,headers=this.authService.getPostHeader(),body={peerId:peerId,type:type},response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)}),responseData=await response.json();if(responseData.errorDetails&&"FAVORITE_CONVERSATIONS_COUNT"===responseData.errorDetails.feature)throw new Error("Reach FAVORITE_CONVERSATIONS_COUNT");this.logger.info(`[FavoriteService] addServerFavorite(${peerId}, ${type}) -- SUCCESS`)}catch(error){const errorMessage=`[FavoriteService] addServerFavorite(${peerId}, ${type}) -- FAILURE -- ${error.message}`;throw this.logger.error(errorMessage),new Error(errorMessage)}}async removeServerFavorite(favoriteId){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites/${favoriteId}`,headers=this.authService.getRequestHeader();await fetch(url,{method:"DELETE",headers:headers}),this.logger.info(`[FavoriteService] removeServerFavorite(${favoriteId}) -- SUCCESS`)}catch(error){const errorMessage=`[FavoriteService] removeServerFavorite(${favoriteId}) -- FAILURE -- ${error.statusText}`;throw this.logger.error(errorMessage),new Error(errorMessage)}}async toggleFavorite(conversation){try{const peerId=conversation.contact?conversation.contact.dbId:conversation.room.dbId,type=conversation.contact?conversation.contact.isBot?"bot":"user":"room",favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite?await this.removeServerFavorite(favorite.id):await this.addServerFavorite(peerId,type)}catch(error){throw new Error(error.message)}}async getFavoriteConversation(peerId){const favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId),convGetter=favorite.contact?this.conversationService.getOrCreateConversation(favorite.contact.jid,"contact"):this.conversationService.getOrCreateConversation(favorite.room.jid,"room");return await convGetter}isFavoriteConversation(peerId){return this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId)}moveFavoritePosition(favoriteId,position){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/favorites/${favoriteId}?position=${position}`,headers=this.authService.getRequestHeader();fetch(url,{method:"PUT",headers:headers}),this.logger.info(`[FavoriteService] moveFavoritePosition(${favoriteId}, ${position}) -- SUCCESS`)}catch(error){const errorMessage=`[FavoriteService] moveFavoritePosition(${favoriteId}, ${position}) -- FAILURE -- ${error.statusText}`;throw this.logger.error(errorMessage),new Error(errorMessage)}}async createFavorite(id,peerId,type){try{const favorite=new favorite_model_1.Favorite(id,peerId,type);if("room"===type?favorite.room=this.roomService.getRoomById(peerId):favorite.contact="directory"===type?await this.companyDirectoryService.getDirectoryContactById(peerId):"office365"===type?await this.office365AdService.getO365DirectoryContactById(peerId):await this.contactService.getContactByDBId(peerId),"room"!==type&&"directory"!==type&&"office365"!==type&&!favorite.contact)return this.removeServerFavorite(id),null;if("directory"!==type&&"office365"!==type){const convId=favorite.room?favorite.room.jid:favorite.contact.jid,conv=this.conversationService.getConversation(convId);conv&&(conv.isFavorite=!0,favorite.conv=conv)}return favorite}catch(error){return this.logger.warn(`[FavoriteService] createFavorite(${id}, ${peerId}, ${type}) -- FAILURE -- ${error.message}`),null}}updateFavoriteConversations(conversation){const peerId=conversation.contact?conversation.contact.dbId:conversation.room.dbId,favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite&&(conversation.isFavorite=!0,favorite.conv=conversation)}async onXmppEvent(stanza){try{const favoriteElem=$(stanza).find("favorite");if(favoriteElem){const id=favoriteElem.attr("id"),type=favoriteElem.attr("type"),peerId=favoriteElem.attr("peer_id"),action=favoriteElem.attr("action");if("create"===action){let favorite=this.favorites.find(favoriteConv=>favoriteConv.peerId===peerId);favorite||(favorite=await this.createFavorite(id,peerId,type),favorite&&(this.favorites.push(favorite),this.logger.info(`[FavoriteService] onXmppEvent -- createFavorite(${id}, ${peerId}, ${type})`),this.sendEvent("ON_FAVORITE_CREATED",{favorite:favorite})))}else if("delete"===action){const index=this.favorites.findIndex(fav=>fav.peerId===peerId);if(-1!==index){const favorite=this.favorites[index];favorite.conv&&(favorite.conv.isFavorite=!1),this.favorites.splice(index,1),this.logger.info(`[FavoriteService] onXmppEvent -- deleteFavorite(${favorite.id})`),this.sendEvent("ON_FAVORITE_DELETED",{favoriteId:favorite.id})}}else if("update"===action){const targetIndex=parseInt(favoriteElem.attr("position"),10),sourceIndex=this.favorites.findIndex(fav=>fav.id===id);-1!==sourceIndex&&(this.favorites.splice(targetIndex,0,this.favorites.splice(sourceIndex,1)[0]),this.logger.info(`[FavoriteService] onXmppEvent -- deleteFavorite(${id})`),this.sendEvent("ON_FAVORITE_UPDATED",{favoriteId:id,position:targetIndex}))}}return!0}catch(error){return!0}}updateFavoriteContact(favorite,contact){favorite&&(favorite.updateContact(contact),this.sendEvent("ON_FAVORITE_CONTACT_UPDATED",favorite))}searchAndUpdateFavoriteContact(contact){const favorite=this.favorites.find(fav=>fav.peerId===contact.id);favorite&&(favorite.updateContact(contact),this.sendEvent("ON_FAVORITE_CONTACT_UPDATED",favorite))}sendEvent(eventName,detail){const event=new CustomEvent(eventName,{detail:detail});window.dispatchEvent(event),this.rxSubject.next({name:eventName,data:detail})}attachHandlers(){this.xmppManagementHandler&&this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=this.xmppService.addHandler(stanza=>(this.onXmppEvent(stanza),!0),null,"message","management")}}exports.FavoriteService=FavoriteService},function(module,exports,__webpack_require__){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}Object.defineProperty(exports,"__esModule",{value:!0}),__export(__webpack_require__(161)),__export(__webpack_require__(24)),__export(__webpack_require__(473)),__export(__webpack_require__(108)),__export(__webpack_require__(474)),__export(__webpack_require__(19)),__export(__webpack_require__(318)),__export(__webpack_require__(165)),__export(__webpack_require__(109)),__export(__webpack_require__(144)),__export(__webpack_require__(140)),__export(__webpack_require__(475))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),anonymizer_1=__webpack_require__(66),errorHelper_service_1=__webpack_require__(12),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),profile_service_1=__webpack_require__(13),conversation_service_1=__webpack_require__(63),main_service_1=__webpack_require__(15);class SdkApis{constructor(search=null,searchUserByLogin=null,searchUserByJid=null,searchUserByPhoneNumber=null,searchAllContacts=null){this.search=search,this.searchUserByLogin=searchUserByLogin,this.searchUserByJid=searchUserByJid,this.searchUserByPhoneNumber=searchUserByPhoneNumber,this.searchAllContacts=searchAllContacts}}class DirectoryService{constructor(){this.centralizedService=null,this.authService=auth_service_1.AuthService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this._sdkApis=Object.keys(new SdkApis),this.companyContactsNumber=0,this.otherCompanyContactsNumber=0,this.rxSubject=new rxjs_1.Subject}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.directoryService||(win.rainbow.directoryService=new DirectoryService),win.rainbow.directoryService}async start(){try{this.logger.info("[DirectoryService] === STARTING ==="),this.centralizedService=this.mainService.inject("centralizedService"),this.logger.info("[DirectoryService] === STARTED ===")}catch(error){this.logger.error("[DirectoryService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info("[DirectoryService] === STOPPING ==="),this.logger.info("[DirectoryService] === STOPPED ===")}subscribe(observer){return this.rxSubject.subscribe(observer)}async search(searchText,addRosters=!1,limit=20,companyId="",excludeCompanyId=null){this.logger.info("[DirectoryService] search -- search Contact with text "+anonymizer_1.default(searchText));try{const searchType=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.SEARCH_BY_TAGS)?"search=":"displayName=";let serverUrl=config.restServerUrl+"/api/rainbow/search/v1.0/users?limit="+limit+"&"+searchType+encodeURIComponent(searchText);companyId&&(serverUrl+="&companyId="+encodeURIComponent(companyId)),excludeCompanyId&&(serverUrl+="&excludeCompanyId="+encodeURIComponent(excludeCompanyId));const headers=this.authService.getRequestHeader(),responseData=await fetch(serverUrl,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const contactsData=(await responseData.json()).data;this.logger.info(`[DirectoryService] search -- search on server find ${contactsData.length} contact(s)`),excludeCompanyId?this.otherCompanyContactsNumber=contactsData.length:this.companyContactsNumber=contactsData.length;let contacts=[];if(contactsData.forEach(contactData=>{if(this.contactService.isUserContactJid(contactData.jid_im))return void this.logger.info(`[DirectoryService] search -- contact ${contactData.jid_im} ignored`);let contact=this.contactService.getContact(contactData.jid_im);contact?contact.updateFromUserData(contactData):(contact=this.contactService.createBasicContact(contactData.jid_im),contact.updateFromUserData(contactData),contact.getAvatar(),this.contactService.dbContacts[contactData.id]=contact,this.contactService.jtelContacts[contact.jidtel]=contact),contact.tags=contactData.tags,contact.dbId=contactData.id,this.contactService.updateContactRichStatus(contact),this.conversationService.computeCapabilitiesForContact(contact,!1),contacts.push(contact)}),addRosters){const rosterContacts=this.contactService.searchContacts(searchText);contacts=contacts.concat(rosterContacts.filter(item=>item.roster&&contacts.indexOf(item)<0))}return contacts.sort((function(item1,item2){return item1._displayName<item2._displayName?-1:1})),this.logger.info(`[DirectoryService] search -- Sorted contacts contains ${contacts.length} contact(s)`),contacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"search");throw this.logger.error("[DirectoryService] search failure -- "+errorInfo.error.message),error.data&&401===error.data.errorCode&&this.rxSubject.next(event_model_1.RBEvent.create("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),errorInfo.error}}getCompanyContactsNumber(){return this.companyContactsNumber}getOtherCompanyContactsNumber(){return this.otherCompanyContactsNumber}async searchUserByLogin(loginEmail){this.logger.info(`[DirectoryService] searchUserByLogin with "${anonymizer_1.default(loginEmail)}"`);try{const serverUrl=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/loginEmails",headers=this.authService.getPostHeader(),body=JSON.stringify({loginEmail:[loginEmail]}),responseData=await fetch(serverUrl,{method:"POST",headers:headers,body:body});if(!responseData.ok)throw responseData;const userArray=(await responseData.json()).data;if(this.logger.info(`[DirectoryService] searchUserByLogin -- Search found ${userArray.length} contact(s)`),1===userArray.length){const contact=await this.contactService.getOrCreateContact(userArray[0].jid_im);return contact.loginEmail=loginEmail,contact}return null}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchUserByLogin");throw this.logger.error("[DirectoryService] searchUserByLogin failure -- "+errorInfo.error.message),error.data&&401===error.data.errorCode&&this.rxSubject.next(event_model_1.RBEvent.create("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),errorInfo.error}}async searchUserByJid(jid){this.logger.info(`[DirectoryService] searchUserByJid with "${anonymizer_1.default(jid)}"`);try{const serverUrl=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/jids/"+encodeURIComponent(jid),headers=this.authService.getRequestHeader(),responseData=await fetch(serverUrl,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const user=(await responseData.json()).data;if(user){this.logger.info("[DirectoryService] searchUserByJid -- Search found 1 user");const contact=await this.contactService.getOrCreateContact(jid);return contact.updateFromUserData(user),contact}return this.logger.info("[DirectoryService] searchUserByJid -- Search found 0 user"),null}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchUserByJid");throw this.logger.error("[DirectoryService] searchUserByJid failure -- "+errorInfo.error.message),error.data&&401===error.data.errorCode&&this.rxSubject.next(event_model_1.RBEvent.create("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),errorInfo.error}}async searchUserByPhoneNumber(phoneNumber){this.logger.info(`[DirectoryService] searchUserByPhoneNumber with "${phoneNumber}"`);try{const serverUrl=config.restServerUrl+"/api/rainbow/search/v1.0/phone-numbers/"+phoneNumber+"/users",headers=this.authService.getRequestHeader(),responseData=await fetch(serverUrl,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const user=(await responseData.json()).data;if(user){this.logger.info("[DirectoryService] searchUserByPhoneNumber -- Search found 1 user");return await this.contactService.getOrCreateContact(user.jid_im)}return this.logger.info("[DirectoryService] searchUserByPhoneNumber -- Search found 0 user"),null}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchUserByPhoneNumber");throw this.logger.error("[DirectoryService] searchUserByPhoneNumber failure -- "+errorInfo.error.message),error.data&&401===error.data.errorCode&&this.rxSubject.next(event_model_1.RBEvent.create("ON_SESSION_EXPIRED_NOTIFICATION_EVENT")),errorInfo.error}}async searchAllContacts(searchText,limit=20,companyId="",addRosters=!0,addOutlook=!0,excludeCompanyId=null){this.logger.info(`[DirectoryService] searchAllContacts with text "${searchText}"`);try{let contacts=[];addRosters&&(contacts=this.contactService.searchContacts(searchText));const rainbowContacts=await this.search(searchText,!1,limit,companyId,excludeCompanyId);if(contacts=contacts.concat(rainbowContacts.filter(item=>!item.roster||contacts.indexOf(item)<0)),this.logger.info(`[DirectoryService] searchAllContacts with text "${searchText}" - Found contacts = ${contacts.length}`),addOutlook&&this.centralizedService&&this.centralizedService.outlook){const[outlookContactsByEmail,outlookContactsByName]=await Promise.all([this.searchOutlookUsersByEmail(searchText),this.searchOutlookUsersByName(searchText)]);let outlookResults=this.centralizedService.outlook.mergeOutlookContact(outlookContactsByEmail,outlookContactsByName);outlookResults=this.adaptOutlookContacts(outlookResults),contacts=contacts.concat(outlookResults),this.logger.info(`[DirectoryService] searchAllContacts with text "${searchText}" including outlook contacts - Found contacts = ${contacts.length}`)}return contacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchAllContacts");throw this.logger.error("[DirectoryService] searchAllContacts failure -- "+errorInfo.error.message),errorInfo.error}}adaptOutlookContacts(outlookResults){return outlookResults&&outlookResults.length&&outlookResults.forEach(contact=>{contact.photo&&contact.photo.src?contact.avatar=contact.photo:contact.photo&&(contact.avatar=new Image,contact.avatar.src=contact.photo),contact.businessPhones=[],contact.businessPhone&&contact.businessPhones.push(contact.businessPhone),contact.mobilePhone&&(contact.mobilePhones=[],contact.mobilePhones.push(contact.mobilePhone)),contact.homePhone&&(contact.otherPhoneNumbers=contact.homePhone),contact.emailAddress&&(contact.email=contact.emailAddress),contact.outlookFlag=!0}),outlookResults}async searchOutlookUsersByName(searchPattern){if(this.centralizedService&&this.centralizedService.outlook)try{return await this.centralizedService.outlook.searchByNameWithAvatar(searchPattern,2)}catch{return this.logger.warn("[DirectoryService] searchOutlookUsersByName - Outlook service unavailable"),[]}return[]}async searchOutlookUsersByEmail(searchPattern){if(this.centralizedService&&this.centralizedService.outlook)try{return await this.centralizedService.outlook.searchByEmailWithAvatar(searchPattern,2)}catch{return this.logger.warn("[DirectoryService] searchOutlookUsersByEmail - Outlook service unavailable"),[]}return[]}}exports.DirectoryService=DirectoryService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ContactSDK=class{constructor(contact){this.id=contact.dbId||contact.id,this.status=contact.status,this.loginEmail=contact.loginEmail,this.email=contact.email,this.lastname=contact.lastname,this.firstname=contact.firstname,this.fullname=contact._displayName,this.nickname=contact.nickname,this.initials=contact.initials,this.title=contact.title,this.jobTitle=contact.jobTitle,this.language=contact.language,this.country=contact.country,this.tags=contact.tags,this.internalPhoneNumber=contact.phoneInternalNumber,this.professionalPhoneNumber=contact.phonePro,this.personalPhoneNumber=contact.phonePerso,this.personalMobilePhoneNumber=contact.mobilePerso,this.professionalMobileNumber=contact.mobilePro,this.professionalMobileNumberCan=contact.mobileProCan,this.voicemailNumber=contact.voiceMailNumber,this.roles=contact.roles,this.customData=contact.customData,this.pbxId=contact.pbxId,this.displayOrder=contact.displayOrder,this.avatar=contact.avatarSrc,this.userInfo1=contact.userInfo1,this.userInfo2=contact.userInfo2,this.company=contact.company,this.businessPhones=contact.businessPhones,this.mobilePhones=contact.mobilePhones,this.isAlertNotificationEnabled=contact.isAlertNotificationEnabled,this.calendarInformation=contact.calendarState,this.fileSharingEnabled=contact.fileSharingEnabled,this.fileStorageEnabled=contact.fileStorageEnabled,this.instantMessagesEnabled=contact.instantMessagesEnabled,this.bubblesEnabled=contact.roomsEnabled,this.webrtcAudioEnabled=contact.webrtcAudioEnabled,this.webrtcVideoEnabled=contact.webrtcVideoEnabled,this.webrtcSharingEnabled=contact.webrtcSharingEnabled,this.modifyProfileEnabled=contact.modifyProfileEnabled}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),profile_service_1=__webpack_require__(13),logger_service_1=__webpack_require__(4);class PhonebookService{constructor(){this.authService=auth_service_1.AuthService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.phonebookService||(win.rainbow.phonebookService=new PhonebookService),win.rainbow.phonebookService}async search(searchPattern){if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK))return[];this.logger.info("search PBXContact from phonebook with pattern "+searchPattern);try{const url=`${config.restServerUrl}/api/rainbow/search/v1.0/phonebooks?limit=20&name=${encodeURIComponent(searchPattern)}`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",mode:"cors",headers:headers}),phonebooksData=(await responseData.json()).phoneBooks;return phonebooksData.map(phonebook=>{const contact=this.contactService.createBasicContact("",phonebook.number);return contact.updateName(phonebook.firstName,phonebook.lastName),contact.getAvatar(),contact})}catch(error){return this.logger.info(`search PBXContact from phonebook with pattern ${searchPattern} --- FAILURE --- ${error.message}`),[]}}async searchByNumber(searchPattern){if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK))return null;this.logger.info("searchByNumber PBXContact from phonebook with pattern "+searchPattern);try{const url=`${config.restServerUrl}/api/rainbow/search/v1.0/phonebooks?number=${encodeURIComponent(searchPattern)}`,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",mode:"cors",headers:headers}),phonebooksData=(await responseData.json()).phoneBooks[0],phonebookContact=this.contactService.createBasicContact("",searchPattern);return phonebooksData?phonebookContact.updateName(phonebooksData.firstName,phonebooksData.lastName):phonebookContact.updateName("",searchPattern),phonebookContact.getAvatar(),phonebookContact}catch(error){return this.logger.info(`searchByNumber PBXContact from phonebook with pattern ${searchPattern} --- FAILURE --- ${error.message}`),null}}}exports.PhonebookService=PhonebookService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),event_service_1=__webpack_require__(11),call_model_1=__webpack_require__(29),$=__webpack_require__(463),event_model_1=__webpack_require__(19),webrtcConfigAndUtils_1=__webpack_require__(44),webrtcP2P_service_1=__webpack_require__(35),settings_service_1=__webpack_require__(18),main_service_1=__webpack_require__(15);class WebrtcGlobalEventHandlerService{constructor(){this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.webConferenceServiceV2=null,this.telephonyService=null,this.roomService=null,this.nameSpaceJingle="urn:xmpp:jingle-message:0",this.messageHandlerRef=null,this.nameSpaceRbVoice="urn:xmpp:jingle:apps:rtp:info:1",this.messageHandlerRbVoiceRef=null,this.xmppServiceSubscription=null,this.xmppConnectionSubscription=null,this.started=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webrtcGlobalEventHandlerService||(win.rainbow.webrtcGlobalEventHandlerService=new WebrtcGlobalEventHandlerService),win.rainbow.webrtcGlobalEventHandlerService}start(){this.webConferenceServiceV2=this.mainService.inject("webConferenceServiceV2"),this.telephonyService=this.mainService.inject("telephonyService"),this.roomService=this.mainService.inject("roomService"),this.started=!0,this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChangeEvent(event)}),this.xmppService.started&&(this.xmppServiceSubscription&&(this.xmppServiceSubscription.unsubscribe(),this.xmppServiceSubscription=null),this.xmppServiceSubscription=this.xmppService.connection.jingle.rxSubject.subscribe(evt=>{this.onJingleMessage(evt)})),this.attachHandlers()}stop(){this.started=!1,this.removeHandlers(),this.xmppServiceSubscription&&this.xmppServiceSubscription.unsubscribe(),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe()}reconnect(){}attachHandlers(){this.removeHandlers(),this.logger.info("[WebrtcGlobalEventHandlerService] attachHandlers"),this.messageHandlerRef||(this.messageHandlerRef=this.xmppService.addHandler(stanza=>{try{return this.onMessageReceived(stanza),!0}catch(err){return this.logger.error("[WebrtcGlobalEventHandlerService] caught error "+err),!0}},this.nameSpaceJingle,"message")),this.messageHandlerRbVoiceRef||(this.messageHandlerRbVoiceRef=this.xmppService.addHandler(stanza=>{try{return this.onMessageReceivedRef2(stanza),!0}catch(err){return this.logger.error("[WebrtcGlobalEventHandlerService] caught error HandlerRef 2 : "+err),!0}},this.nameSpaceRbVoice,"message"))}onConnectionStateChangeEvent(event){"ON_XMPP_CONNECTED"===event.name&&(this.logger.log("[WebrtcGlobalEventHandlerService] onConnectionStateChangeEvent : connected"),this.xmppServiceSubscription&&(this.xmppServiceSubscription.unsubscribe(),this.xmppServiceSubscription=null),this.xmppServiceSubscription=this.xmppService.connection.jingle.rxSubject.subscribe(evt=>{this.onJingleMessage(evt)}),this.attachHandlers())}removeHandlers(){this.logger.info("[WebrtcGlobalEventHandlerService] removeHandlers"),this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.messageHandlerRbVoiceRef&&(this.xmppService.deleteHandler(this.messageHandlerRbVoiceRef),this.messageHandlerRbVoiceRef=null)}onJingleMessage(event){try{switch(event.name){case"jingleSessionInvitation":this.onJingleSessionInvite(event.data.sid);break;case"iceconnectionstatechange.jingle":this.onJingleConnectionStateChange(event.data.sid,event.data.session);break;case"callterminated.jingle":this.onSessionTerminated(event.data.sid,event.data.reason);break;case"webrtcSessionStatsSimplyfied.jingle":this.onJingleSessionStatsSimplified(event.data.sid,event.data.data);break;case"webrtcFirefoxStats.jingle":this.onJingleFirefoxSessionStats(event.data.sid,event.data.data);break;case"webrtcSessionStats.jingle":this.onJingleChromeSessionStats(event.data.sid,event.data.stats);break;case"webrtcConnectionType.jingle":this.webrtcConnectionTypeStats(event.data.sid,event.data.data);break;case"jingleP2PUpdateStream":this.jingleP2PUpdateStream(event.data.sid);break;case"error.jingle":this.onJingleError(event.data.sid,event.data.error);break;case"transportreplace.jingle":this.onJingleTransportReplace(event.data.sid);break;case"ringing.jingle":this.onJingleRingingEvent(event.data.sid);break;case"callaccepted.jingle":this.onJingleCallAccepted(event.data.sid);break;case"hold.jingle":this.onJingleHoldEvent(event.data.sid);break;case"unhold.jingle":this.onJingleUnholdEvent(event.data.sid);break;case"remotestreamremoved.jingle":this.onJingleRemoteStreamsRemoved(event.data.sid);break;case"remotestreamadded.jingle":this.onJingleRemoteStreamAddedEvent(event.data.sid,event.data.nbAudioTracks);break;case"mediamodified.jingle":this.onJingleMediaModifiedEvent(event.data.sid,event.data.mediaType);break;case"refer.jingle":this.onJingleSessionRefer(event.data.sid,event.data.status,event.data.confEndpointId,event.data.referTo,event.data.method,event.data.otherSid)}}catch(error){this.logger.info("[WebrtcGlobalEventHandlerService] onJingleMessage -- failure -- "+event.name)}}onMessageReceived(stanza){const fromJid=$(stanza).attr("from"),bareJid=this.xmppService.getBareJidFromJid(fromJid),conferenceSessionId=$(stanza).find("propose").find("conference").attr("id"),conferenceSession=this.webConferenceServiceV2?this.webConferenceServiceV2.getActiveWebConferenceSession():null;if(conferenceSession&&conferenceSession.id===conferenceSessionId)try{this.logger.info("[WebrtcGlobalEventHandlerService]   | onMessageReceived");if($(stanza).find("propose").length>0){const id=$(stanza).find("propose").attr("id"),xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:this.contactService.userContact.jid}).c("accept",{xmlns:this.nameSpaceJingle,id:id});this.xmppService.send(xmppMessage);const xmppProceedMessage=$msg({from:this.contactService.userContact.fullJid,to:bareJid}).c("proceed",{xmlns:this.nameSpaceJingle,id:id});return this.xmppService.send(xmppProceedMessage),!0}}catch(error){return this.webrtcP2PService.webrtcP2PEventHandler.onMessageReceived(stanza)}return!!conferenceSessionId||this.webrtcP2PService.webrtcP2PEventHandler.onMessageReceived(stanza)}async onMessageReceivedRef2(stanza){this.logger.info("[WebrtcGlobalEventHandlerService]   | onMessageReceivedRef2");const isRefer=$(stanza).find("refer"),isError=$(stanza).find("error");if(isError&&isError.length)this.logger.info("[WebrtcGlobalEventHandlerService]   | onMessageReceivedRef2 -- error stanza received, do nothing");else if(isRefer){const confEndpointId=$(stanza).find("refer").attr("confEndpointId"),referTo=$(stanza).find("refer").attr("referTo"),status=$(stanza).find("refer").attr("status"),from=$(stanza).attr("from"),telCallId=$(stanza).find("refer").attr("telCallId")?$(stanza).find("refer").attr("telCallId"):null;let myTelCall=null,possibleCall=null;const shouldMute=!1,mediaPillarCalls=this.webrtcP2PService.getMediaPillarAudioCalls();if(telCallId){if(!this.telephonyService)return void this.logger.info("[WebrtcGlobalEventHandlerService] | missing telephony service !!!");if(possibleCall=this.telephonyService.calls[telCallId],!(mediaPillarCalls&&mediaPillarCalls.length&&possibleCall))return void this.logger.info("[WebrtcGlobalEventHandlerService] | onMessageReceivedRef2 : Not my callId then Ignore");myTelCall=this.telephonyService.calls[telCallId]}else{if(possibleCall=mediaPillarCalls&&mediaPillarCalls.length?mediaPillarCalls[0]:void 0,!possibleCall||!possibleCall.contact||possibleCall.contact.jid!==this.xmppService.getBareJidFromJid(from))return void this.logger.info("[WebrtcGlobalEventHandlerService] | onMessageReceivedRef2 : Not my call then Ignore");if(!this.telephonyService)return void this.logger.info("[WebrtcGlobalEventHandlerService] | missing telephony service !!!");myTelCall=this.telephonyService.getActiveCall()}if(confEndpointId&&referTo&&"complete"!==status){if(this.roomService){let room=this.roomService.getRoomById(confEndpointId);if(!room)try{room=await this.roomService.getServerRoom(confEndpointId)}catch{this.logger.warn("[WebrtcGlobalEventHandlerService] | adhoc conference v1 type")}if(room&&room.isWebConferenceV2Room()){room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),await this.webConferenceServiceV2.transferP2pCallToConference(null,referTo,room,!1,shouldMute);const nameSpaceRefer="urn:xmpp:jingle:apps:rtp:info:1";return this.xmppService.send($msg({from:this.contactService.userContact.fullJid,to:from}).c("refer",{xmlns:nameSpaceRefer,status:"complete",telCallId:telCallId})),void this.eventService.publish("ON_WEBCONF_ADD_HOC_COMPLETED",room)}}}else"complete"===status&&(this.logger.info("[WebrtcGlobalEventHandlerService]   | onMessageReceivedRef2 : refer complete received"),!myTelCall||myTelCall.status!==call_model_1.Call.Status.ACTIVE&&myTelCall.status!==call_model_1.Call.Status.HOLD||(this.logger.info("[WebrtcGlobalEventHandlerService]   | onMessageReceivedRef2 : callId to release : "+telCallId),this.telephonyService.releaseCall(myTelCall)))}}checkSessionAudioReceivedHealthStatus(sid){this.logger.info("[WebrtcGlobalEventHandlerService]   | checkSessionAudioReceivedHealthStatus --- user hears nothing !");const call=this.webrtcP2PService.calls[sid];call&&!call.isInCallWithMediaPillar()&&call.status.key===call_model_1.Call.Status.ACTIVE.key&&call.remoteMedia&call_model_1.Call.Media.AUDIO&&(this.webrtcConfigAndUtils.callsStatsSimplified[sid].errorAudioReceived=1,this.logger.info("[WebrtcGlobalEventHandlerService]   | checkSessionAudioReceivedHealthStatus --- reset output device"),this.webrtcP2PService.resetAudioOutputElement())}onJingleSessionInvite(sessId){this.logger.info("[WebrtcGlobalEventHandlerService]  | callincoming.jingle "+sessId);const session=this.xmppService.connection.jingle.sessions[sessId];if(session&&session.confId);else if(session.replaceSid){this.logger.info("[WebrtcGlobalEventHandlerService]  | callincoming.jingle -- webrtc to webrtc transfer call case");const call=this.webrtcP2PService.calls[session.replaceSid];call&&this.webrtcP2PService.terminateAndRemoveCall(call),this.webrtcP2PService.webrtcP2PEventHandler.onIncomingTrasferredCall(sessId)}else this.webrtcP2PService.webrtcP2PEventHandler.incomingCall(sessId)}onSessionTerminated(sessId,reason=""){const callReason=reason||"";if(this.logger.info("[WebrtcGlobalEventHandlerService]  | callterminated "+sessId+" reason: "+callReason),"multi-device"===reason);else{this.webrtcP2PService.calls[sessId]&&this.webrtcP2PService.webrtcP2PEventHandler.terminatedCall(sessId,callReason,!1)}}onJingleConnectionStateChange(sid,sess){if(!sess.peerconnection)return void this.logger.info("[WebrtcGlobalEventHandlerService]  | iceconnectionstatechange - peerConnection does not exist anymore !!!");this.webrtcP2PService.calls[sid]&&this.webrtcP2PService.webrtcP2PEventHandler.iceConnectionStateChange(sid,sess)}onJingleError(sid,error){if(this.logger.error("[WebrtcGlobalEventHandlerService]  | on jingle callerror"),error&&this.logger.error(JSON.stringify(error)),sid){this.webrtcP2PService.calls[sid]&&this.webrtcP2PService.webrtcP2PEventHandler.onJingleError(sid)}}onJingleSessionStatsSimplified(sid,data){if(this.webrtcConfigAndUtils.callsStatsSimplified[sid]||(this.webrtcConfigAndUtils.callsStatsSimplified[sid]={},this.webrtcConfigAndUtils.callsStatsSimplified[sid].errorAudioReceived=0),data.errorAudioReceived=this.webrtcConfigAndUtils.callsStatsSimplified[sid].errorAudioReceived,data.networkQualityIteration=this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration,data.conferenceId){if(data.publisherId&&data.conferenceId)if(this.webrtcConfigAndUtils.callsStatsSimplified[sid].publisherJidIm)data.publisherJidIm=this.webrtcConfigAndUtils.callsStatsSimplified[sid].publisherJidIm;else{if(this.webConferenceServiceV2?this.webConferenceServiceV2.webConferenceSessions[data.conferenceId]:null){const contact=this.contactService.getContactById(data.publisherId);data.publisherJidIm=contact?contact.jid:"",this.webrtcConfigAndUtils.callsStatsSimplified[sid].publisherJidIm=data.publisherJidIm}}this.logger.info("[WebrtcGlobalEventHandlerService] on webrtcSessionStatsSimplyfied for session "+sid+" related to conferenceID "+data.conferenceId+" : "+JSON.stringify(data))}else this.logger.info("[WebrtcGlobalEventHandlerService] on webrtcSessionStatsSimplyfied for session "+sid+" : "+JSON.stringify(data));this.webrtcConfigAndUtils.callsStatsSimplified[sid]=data,data.packetsAudioReceived&&0===data.audioOutputLevel&&0===data.errorAudioReceived&&this.checkSessionAudioReceivedHealthStatus(sid);const call=this.webrtcP2PService.calls[sid];call&&(this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityFlag===call.networkQuality?(this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration=this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration?this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration+1:1,0===call.networkQuality&&this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration>=3&&call.publish("badNetworkQuality",call.networkQuality)):this.webrtcConfigAndUtils.callsStatsSimplified[sid].networkQualityIteration=1,call.networkQuality=data.networkQualityFlag,call.publish("networkQuality",call.networkQuality))}webrtcConnectionTypeStats(sid,data){data&&(this.logger.info("[WebrtcGlobalEventHandlerService] Local candidate ("+data.localAddress+") type is "+data.localCandidateType+" for session: "+sid),this.logger.info("[WebrtcGlobalEventHandlerService] Remote candidate  ("+data.remoteAddress+") type is "+data.remoteCandidateType+" for session: "+sid),data.networkType&&this.logger.info("[WebrtcGlobalEventHandlerService] Network type is "+data.networkType+" for session: "+sid))}onJingleFirefoxSessionStats(sid,data){this.webrtcConfigAndUtils.callsStats[sid]||(this.webrtcConfigAndUtils.callsStats[sid]={}),this.webrtcConfigAndUtils.callsStats[sid]||(this.webrtcConfigAndUtils.callsStats[sid]={});if(this.webrtcP2PService.calls[sid]){const currentStats=this.webrtcConfigAndUtils.callsStats[sid];currentStats&&(data.videoReceived?currentStats.video=data:currentStats.audio=data,this.webrtcConfigAndUtils.callsStats[sid]=currentStats)}}onJingleChromeSessionStats(sid,data){this.webrtcConfigAndUtils.callsStats[sid]||(this.webrtcConfigAndUtils.callsStats[sid]={}),this.webrtcConfigAndUtils.callsStats[sid]||(this.webrtcConfigAndUtils.callsStats[sid]={});const id=this.webrtcConfigAndUtils.callsStats[sid].id;this.webrtcConfigAndUtils.callsStats[sid]=data,this.webrtcConfigAndUtils.callsStats[sid].id=id}async onJingleSessionRefer(sid,status,confEndpointId,referTo,method,otherSid){this.logger.info("[WebrtcGlobalEventHandlerService]  | refer: "+sid+" - status: "+status+" - confEndpointId: "+confEndpointId+" - referTo: "+referTo+" - method: "+method);const session=this.xmppService.connection.jingle.sessions[sid];if("complete"===status){const call=this.webrtcP2PService.calls[sid];this.webrtcP2PService.onCallTransferred(call)}else if(session){const call=this.webrtcP2PService.calls[sid];if(confEndpointId){const shouldMute=call&&call.isMuted;if(this.roomService){let room=this.roomService.getRoomById(confEndpointId);if(!room)try{room=await this.roomService.getServerRoom(confEndpointId)}catch{this.logger.warn("[WebrtcGlobalEventHandlerService] | adhoc conference v1 type")}if(room&&room.isWebConferenceV2Room())return room.rxSubject.next(event_model_1.RBEvent.create("ROOM_CONFERENCE_START_EVENT")),await this.webConferenceServiceV2.transferP2pCallToConference(session,referTo,room,!1,shouldMute),this.webrtcP2PService.sendReferStatus(sid,"complete"),void this.eventService.publish("ON_WEBCONF_ADD_HOC_COMPLETED",room)}}else referTo&&otherSid?(this.logger.debug(`[WebrtcGlobalEventHandlerService]  | refer.jingle -- transfer call is requested for session ${sid} to contact ${referTo}`),await this.webrtcP2PService.webrtcP2PEventHandler.onTrasferCallEvent(referTo,otherSid),this.webrtcP2PService.onCallTransferred(call),this.webrtcP2PService.sendReferStatus(sid,"complete")):method&&referTo?this.onCallBlindTransfer(call,{method:method,referTo:referTo}):this.logger.error("[WebrtcGlobalEventHandlerService]  | refer.jingle -- wrong parameters ")}else this.logger.error("[WebrtcGlobalEventHandlerService]  | refer.jingle -- no session ")}onCallBlindTransfer(call,transferData){if(transferData)if(this.webrtcP2PService.releaseCall(call),"webrtc"===transferData.method){this.logger.info("[WebrtcGlobalEventHandlerService] | onCallBlindTransfer webrtc");const contact=this.contactService.getContactByJid(transferData.referTo);contact?this.webrtcP2PService.makeCall(contact,"WebRTCAudio"):(this.logger.info("[WebrtcGlobalEventHandlerService] | onCallBlindTransfer ERROR"),this.logger.error("unknow contact"))}else if("pbx"===transferData.method){if(this.logger.info("[WebrtcGlobalEventHandlerService] | onCallBlindTransfer sip"),!this.telephonyService)return void this.logger.error("[WebrtcGlobalEventHandlerService] -- missing telephony service !");this.telephonyService.makeCallByPhoneNumber(transferData.referTo)}else this.logger.info("[WebrtcGlobalEventHandlerService] | onCallBlindTransfer ERROR"),this.logger.error("wrong transfer Data");else this.logger.info("[WebrtcGlobalEventHandlerService] | onCallBlindTransfer ERROR"),this.logger.error("no transfer Data")}onJingleTransportReplace(callId){const sess=this.xmppService.connection.jingle.sessions[callId];sess?(this.logger.info("[WebrtcGlobalEventHandlerService]  | transportreplace.jingle "+callId),sess.sendAnswer(void 0,"transport-accept")):this.logger.warn("[WebrtcGlobalEventHandlerService]  | transportreplace.jingle no such session !")}onJingleRingingEvent(callId){this.logger.info("[WebrtcGlobalEventHandlerService]  | callremoteringing "+callId)}onJingleMediaModifiedEvent(callId,mediaType){this.logger.info("[WebrtcGlobalEventHandlerService]  | mediamodified "+callId),this.webrtcP2PService.webrtcP2PEventHandler.mediaModified(callId,mediaType)}onJingleRemoteStreamAddedEvent(callId,nbAudioTracks=0){const sess=this.xmppService.connection.jingle.sessions[callId];if(sess&&sess.remoteStreams&&!sess.confId){this.logger.info("[WebrtcGlobalEventHandlerService]  | remoteStreamadded "+callId);const call=this.webrtcP2PService.calls[callId];call&&this.webrtcP2PService.attachDistantMediaStreams(!0,call),this.eventService.publish("ON_WEBRTC_REMOTE_STREAM_ADDED",sess.remoteStreams)}nbAudioTracks&&this.webrtcP2PService.resetAudioOutputElement()}onJingleRemoteStreamsRemoved(callId){const call=this.webrtcP2PService.calls[callId],sess=this.xmppService.connection.jingle.sessions[callId];call&&sess&&(this.logger.info("[WebrtcGlobalEventHandlerService] | remotestreamremoved "+callId),this.webrtcP2PService.attachDistantMediaStreams(!0,call))}onJingleCallAccepted(callId){const call=this.webrtcP2PService.calls[callId],sess=this.xmppService.connection.jingle.sessions[callId];call&&sess&&(this.logger.info("[WebrtcGlobalEventHandlerService] | callaccepted "+callId),call.statsInterval&&(this.logger.info("[WebrtcGlobalEventHandlerService] | remove getStats interval"),window.clearInterval(call.statsInterval),call.statsInterval=null),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.logger.info("[WebrtcGlobalEventHandlerService] | start getStats interval"),call.statsInterval=sess.getStats(3e3))}onJingleHoldEvent(callId){const session=this.xmppService.connection.jingle.sessions[callId];if(!session)return void this.logger.info("[WebrtcGlobalEventHandlerService] | hold - received on a non existing session !");this.logger.info("[WebrtcGlobalEventHandlerService] | hold "+callId);const call=this.webrtcP2PService.calls[callId];if(call&&call.isMediaPillarCall()){const options={iceRestart:!1};this.settingsService.getBooleanSetting("enableIceRestartOnHold")&&(options.iceRestart=!0),session.peerconnection.getTransceivers&&session.peerconnection.getTransceivers().length?session.peerconnection.getTransceivers().forEach((function(transceiver){transceiver.direction="sendonly"})):(options.offerToReceiveAudio=!1,session.reconnectionOptions={iceRestart:!0,offerToReceiveAudio:!1}),session.contentModify("audio",options)}else session.muteAudio(!0),this.eventService.publish("ON_HOLD_TONE_EVENT","hold"),call&&(call.putOnHold=!0,call.setStatus(call_model_1.Call.Status.PUT_ON_HOLD),this.eventService.publish("ON_CALL_UPDATED_EVENT",call))}onJingleUnholdEvent(callId){const session=this.xmppService.connection.jingle.sessions[callId];if(!session)return void this.logger.info("[WebrtcGlobalEventHandlerService] | unhold - received on a non existing session !");this.logger.info("[WebrtcGlobalEventHandlerService] | unhold "+callId);const call=this.webrtcP2PService.calls[callId];if(call&&call.isMediaPillarCall()){const options={iceRestart:!1};this.settingsService.getBooleanSetting("enableIceRestartOnUnhold")&&(options.iceRestart=!0),session.peerconnection.getTransceivers&&session.peerconnection.getTransceivers().length?session.peerconnection.getTransceivers().forEach((function(transceiver){transceiver.direction="sendrecv"})):(options.offerToReceiveAudio=!0,session.reconnectionOptions=null),session.contentModify("audio",options)}else session.muteAudio(!1),this.eventService.publish("ON_HOLD_TONE_EVENT","unhold"),call&&(call.putOnHold=!1,session.muteAudio(call.isMuted),call.setStatus(call_model_1.Call.Status.ACTIVE),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.webrtcP2PService.attachDistantMediaStreams(!0,call))}jingleP2PUpdateStream(sid){const call=this.webrtcP2PService.calls[sid];call&&this.webConferenceServiceV2&&!this.webConferenceServiceV2.hasActiveWebConferenceSession()&&(this.logger.info("[WebrtcGlobalEventHandlerService] | jingleP2PUpdateStream for session "+sid),this.webrtcP2PService.attachDistantMediaStreams(!0,call))}}exports.WebrtcGlobalEventHandlerService=WebrtcGlobalEventHandlerService},function(module,exports,__webpack_require__){!function(strophe_js){"use strict";strophe_js.Strophe.addNamespace("RSM","http://jabber.org/protocol/rsm"),strophe_js.Strophe.RSM=function(options){if(this.attribs=["max","first","last","after","before","index","count"],void 0!==options.xml)this.fromXMLElement(options.xml);else for(var ii=0;ii<this.attribs.length;ii++){var attrib=this.attribs[ii];this[attrib]=options[attrib]}},strophe_js.Strophe.RSM.prototype={toXML:function(){for(var xml=strophe_js.$build("set",{xmlns:strophe_js.Strophe.NS.RSM}),ii=0;ii<this.attribs.length;ii++){var attrib=this.attribs[ii];void 0!==this[attrib]&&(xml=xml.c(attrib).t(this[attrib].toString()).up())}return xml.tree()},next:function(max){return new strophe_js.Strophe.RSM({max:max,after:this.last})},previous:function(max){return new strophe_js.Strophe.RSM({max:max,before:this.first})},fromXMLElement:function(xmlElement){for(var ii=0;ii<this.attribs.length;ii++){var attrib=this.attribs[ii],elem=xmlElement.getElementsByTagName(attrib)[0];null!=elem&&(this[attrib]=strophe_js.Strophe.getText(elem),"first"==attrib&&(this.index=elem.getAttribute("index")))}}}}(__webpack_require__(103))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class RBError extends Error{constructor(message=null,details=null,detailsCode=null,detailsData=null){super(),this.name="RainbowError",this.message=message,this.details=details,this.detailsCode=detailsCode,this.detailsData=detailsData}}exports.RBError=RBError},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isFunction=function(x){return"function"==typeof x}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var config_1=__webpack_require__(136),hostReportError_1=__webpack_require__(159);exports.empty={closed:!0,next:function(value){},error:function(err){if(config_1.config.useDeprecatedSynchronousErrorHandling)throw err;hostReportError_1.hostReportError(err)},complete:function(){}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.hostReportError=function(err){setTimeout((function(){throw err}),0)}},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var SubjectSubscription=function(_super){function SubjectSubscription(subject,subscriber){var _this=_super.call(this)||this;return _this.subject=subject,_this.subscriber=subscriber,_this.closed=!1,_this}return __extends(SubjectSubscription,_super),SubjectSubscription.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var subject=this.subject,observers=subject.observers;if(this.subject=null,observers&&0!==observers.length&&!subject.isStopped&&!subject.closed){var subscriberIndex=observers.indexOf(this.subscriber);-1!==subscriberIndex&&observers.splice(subscriberIndex,1)}}},SubjectSubscription}(__webpack_require__(78).Subscription);exports.SubjectSubscription=SubjectSubscription},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class AuthSettings{constructor(authURLs){if(this.type=null,this.loginUrl=null,this.logoutUrl=null,this.safetyUrl=null,this.userId=null,authURLs.length>0){let authSettings={};authSettings=1===authURLs.length?authURLs[0]:authURLs.reduce((settings,authUrl)=>"RAINBOW"===authUrl.type&&"RAINBOW"!==settings.type?(settings.safetyUrl=authUrl.url||authUrl.loginUrl,settings):(authUrl.safetyUrl=settings.url||settings.loginUrl,authUrl)),this.type=authSettings.type,this.loginUrl=authSettings.url||authSettings.loginUrl,this.logoutUrl=authSettings.logoutUrl,this.safetyUrl=authSettings.safetyUrl}}static createFromData(data){return new AuthSettings(data)}setParameter(name,fn){switch(name){case"uid":this.userId=fn();break;case"x-rainbow-app-auth":if("RAINBOW"!==this.type&&this.loginUrl){const url=new URL(this.loginUrl),appAuth=fn(url.searchParams.get("challenge"));url.searchParams.append(name,appAuth),this.loginUrl=url.href}break;case"token":if("RAINBOW"!==this.type&&this.logoutUrl){const url=new URL(this.logoutUrl),tkn=fn();url.searchParams.append(name,tkn),this.logoutUrl=url.href}break;case"safetyUrl":"RAINBOW"===this.type||this.safetyUrl||(this.safetyUrl=fn())}}}exports.AuthSettings=AuthSettings},function(module,__webpack_exports__,__webpack_require__){"use strict";function e(e){this.message=e}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"InvalidTokenError",(function(){return n})),e.prototype=new Error,e.prototype.name="InvalidCharacterError";var r="undefined"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,"");if(t.length%4==1)throw new e("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,o,a=0,i=0,c="";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o);return c};function t(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw"Illegal base64url string!"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t="0"+t),"%"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}n.prototype=new Error,n.prototype.name="InvalidTokenError",__webpack_exports__.default=function(e,r){if("string"!=typeof e)throw new n("Invalid token specified");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(".")[o]))}catch(e){throw new n("Invalid token specified: "+e.message)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=(length=10)=>{const characters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",charactersLength=characters.length;let result="";for(let i=0;i<length;i++)result+=characters.charAt(Math.floor(Math.random()*charactersLength));return result}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class ReplaceMsg{static create(id,body){return new ReplaceMsg(id,body)}constructor(id,body){this.id=id,this.body=body}}exports.ReplaceMsg=ReplaceMsg},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Offer{constructor(id,name,isDefault,isExclusive,isPrepaid,hasConference,isDemo){this.id=null,this.name=null,this.isDefault=!1,this.isExclusive=!1,this.hasConference=!1,this.isPrepaid=!1,this.isDemo=!1,this.id=id,this.name=name||"",this.isDefault=isDefault,this.isExclusive=isExclusive,this.isPrepaid=isPrepaid,this.hasConference=hasConference,this.isDemo=isDemo}static createFromProfileData(profile){return new Offer(profile.offerId,profile.offerName,profile.isDefault,profile.isExclusive,profile.isPrepaid,profile.hasConference,profile.isDemo)}static offerComparator(offer1,offer2){const offerOrder=["Essential","Business","Enterprise","Voice","Room","Conference"];if(offer1.isEssential())return-1;if(offer2.isEssential())return 1;if(offer1.isDemo&&!offer2.isDemo)return-1;if(!offer1.isDemo&&offer2.isDemo)return 1;if(offer1.hasConference&&!offer2.hasConference)return 1;if(!offer1.hasConference&&offer2.hasConference)return-1;let orderIndex1=offerOrder.findIndex(order=>offer1.name.startsWith(order)),orderIndex2=offerOrder.findIndex(order=>offer2.name.startsWith(order));return orderIndex1=-1===orderIndex1?offerOrder.length:orderIndex1,orderIndex2=-1===orderIndex2?offerOrder.length:orderIndex2,orderIndex1<orderIndex2?-1:orderIndex1>orderIndex2?1:offer1.isDemo?-1:offer2.isDemo||offer1.isPrepaid&&!offer2.isPrepaid?1:!offer1.isPrepaid&&offer2.isPrepaid||offer1.name<offer2.name?-1:offer1.name>offer2.name?1:0}isEnterprise(){return this.name.toLowerCase().includes("enterprise")}isBusiness(){return this.name.toLowerCase().includes("business")}isEssential(){return this.isDefault}}exports.Offer=Offer},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const message_1=__webpack_require__(67),conversation_model_1=__webpack_require__(96),main_service_1=__webpack_require__(15),xmpp_service_1=__webpack_require__(9),fileStorage_service_1=__webpack_require__(34),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),room_service_1=__webpack_require__(25),settings_service_1=__webpack_require__(18),profile_service_1=__webpack_require__(13),webinars_service_1=__webpack_require__(168),event_service_1=__webpack_require__(11),fileServer_service_1=__webpack_require__(47),webrtcGateway_service_1=__webpack_require__(71),urlMetadata_service_1=__webpack_require__(312);class ConversationServiceEventHandler{constructor(conversationService,webConferenceServiceV2){this.conversationService=conversationService,this.webConferenceServiceV2=webConferenceServiceV2,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.webinarService=webinars_service_1.WebinarService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance()}static create(conversationService,webConferenceServiceV2){return new ConversationServiceEventHandler(conversationService,webConferenceServiceV2)}onChatMessageReceived(stanza){try{const stanzaElem=$(stanza);return stanzaElem.find("event").length>0||stanzaElem.find("propose").length>0||stanzaElem.find("received").length>0?(this.logger.info("[ConversationServiceEventHandler] onChatMessageReceived ignore the message"),!0):(stanzaElem.find("recording").length>0?(this.logger.info("[ConversationServiceEventHandler] onChatMessageReceived : recording msg case"),this.onRecordingMessageReceived(stanza)):stanzaElem.find("record").length>0||this.extractStanzaData(stanza).then(stanzaData=>{stanzaData&&(stanzaData.body||stanzaData.additionalContent||stanzaData.oob||stanzaData.conference||stanzaData.replace||stanzaData.modified?(this.logger.info("[ConversationServiceEventHandler] onChatMessageReceived"),this.handleChatMessage(stanzaData)):stanzaData.outgoingMessage||this.contactService.isUserContact(stanzaData.participant)||!stanzaData.status||this.handleStatusMessage(stanzaData.conversation,stanzaData.participant,stanza))}),!0)}catch(error){return this.logger.error("[ConversationServiceEventHandler] onChatMessageReceived ERROR "+error),!0}}async onErrorMessageReceived(stanza){try{const stanzaData=await this.extractStanzaData(stanza),message=stanzaData.conversation.getMessageById(stanzaData.messageId);message.sendStatus=message_1.Message.SendStatus.ERROR,message.sendUpdateEvent(),this.logger.info("[ConversationServiceEventHandler] onErrorMessageReceived")}catch(error){this.logger.error("[ConversationServiceEventHandler] onErrorMessageReceived ERROR "+error)}}onConferenceMessageReceived(stanza){this.logger.info("[ConversationServiceEventHandler] onConferenceMessageReceived");try{return 0===$(stanza).find("event").length?this.logger.info("[ConversationServiceEventHandler] onConferenceMessageReceived ignore the message"):this.extractStanzaData(stanza).then(stanzaData=>{stanzaData.conference&&this.handleChatMessage(stanzaData)}),!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onConferenceMessageReceived ERROR "+error),!0}}onRoomAdminMessageReceived(conversation,contact,type,msgId,translatedMessage){if("StageUpdate"===type)return;this.logger.info("[ConversationServiceEventHandler] onRoomAdminMessageReceived");const message=this.conversationService.addAdminBubbleMessage(conversation,contact,new Date,type,msgId,translatedMessage);this.conversationService.setStatusMessage(conversation,contact,conversation_model_1.Conversation.Status.ACTIVE),this.conversationService.sendAckReceivedMessage(conversation,message),conversation===this.conversationService.activeConversation&&this.mainService.appVisible.getValue()||conversation.setMissedCounter(conversation.missedCounter+1),this.eventService.publish("ON_CONVERSATION_MESSAGE_RECEIVED",message,conversation,!1),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.IM)}onFileMessageReceived(stanza){this.logger.info("[ConversationServiceEventHandler] onFileMessageReceived");try{return this.extractStanzaData(stanza).then(stanzaData=>{if(stanzaData.body){const conversation=stanzaData.conversation;this.conversationService.addFileMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId,stanzaData.urgency),this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation,conversation_model_1.Conversation.EventType.FILE)}}),!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onFileMessageReceived ERROR "+error),!0}}onWebRTCMessageReceived(stanza){this.logger.info("[ConversationServiceEventHandler] onWebRTCMessageReceived");try{return $(stanza).find("call_log").length>0?this.extractWebrtcStanzaData(stanza).then(stanzaData=>{if(stanzaData&&stanzaData.body){const conversation=stanzaData.conversation,message=this.conversationService.addWebRTCMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId);this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),this.conversationService.sendAckReceivedMessage(conversation,message),"R"===message.side||stanzaData.state&&"answered"===stanzaData.state?this.conversationService.sendAckReadMessage(conversation,message):conversation===this.conversationService.activeConversation&&this.mainService.appVisible.getValue()||conversation.setMissedCounter(conversation.missedCounter+1),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}}):this.extractStanzaData(stanza).then(stanzaData=>{if(stanzaData&&stanzaData.body){const conversation=stanzaData.conversation;this.conversationService.addWebRTCMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId),this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}}),!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onWebRTCMessageReceived error "+error),!0}}onPBXMessageReceived(stanza){this.logger.info("[ConversationServiceEventHandler] onWebRTCMessageReceived");try{return $(stanza).find("call_log").length>0&&this.extractWebrtcStanzaData(stanza).then(stanzaData=>{if(stanzaData&&stanzaData.body){const conversation=stanzaData.conversation,message=this.conversationService.addWebRTCMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId);this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),this.conversationService.sendAckReceivedMessage(conversation,message),"R"===message.side||stanzaData.state&&"answered"===stanzaData.state?this.conversationService.sendAckReadMessage(conversation,message):conversation===this.conversationService.activeConversation&&this.mainService.appVisible.getValue()||conversation.setMissedCounter(conversation.missedCounter+1),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}}),!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onWebRTCMessageReceived error "+error),!0}}onManagementMessageReceived(stanza){try{const stanzaElem=$(stanza),conversationElem=stanzaElem.find("conversation");if(conversationElem){const action=conversationElem.attr("action");let conversationGetterPromise=null;if("create"===action){const jid=this.xmppService.getBareJidFromJid(conversationElem.find("peer").text()),convType=conversationElem.find("type").text(),dbId=conversationElem.attr("id");conversationGetterPromise=this.conversationService["room"===convType?"getRoomConversationInternal":"getOrCreateOneToOneConversationInternal"](jid,dbId)}else conversationGetterPromise=Promise.resolve(this.conversationService.getConversation(conversationElem.attr("id")));conversationGetterPromise.then(conversation=>{if(this.logger.info("[ConversationServiceEventHandler] onManagementMessageReceived ("+action+" conversation)"),conversation)switch(action){case"create":{conversation.dbId=conversationElem.attr("id");const lastMessageDate=conversationElem.find("lastMessageDate").text();lastMessageDate&&lastMessageDate.length>0&&(conversation.lastModification=new Date(lastMessageDate)),conversation.missedCounter=parseInt(conversationElem.find("unreadMessageNumber").text(),10)||0,conversation.muted="true"===conversationElem.find("mute").text();const lastMessageText=conversationElem.find("lastMessageText").text(),lastMessageSender=conversationElem.find("lastMessageSender").text();conversation.lastMessageText=lastMessageText,conversation.lastMessageSender=lastMessageSender,this.conversationService.favoriteService&&this.conversationService.favoriteService.updateFavoriteConversations(conversation),this.conversationService.orderConversations(),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}break;case"delete":this.conversationService.removeConversation(conversation);break;case"update":{const bookmarkElem=conversationElem.find("bookmark");if(bookmarkElem&&bookmarkElem.length){const messageId=bookmarkElem.find("messageId").text();if(messageId){const timestamp=Number(bookmarkElem.find("timestamp").text()),unreadMessageNumber=Number(bookmarkElem.find("unreadMessageNumber").text());conversation.bookmark={messageId:messageId,timestamp:timestamp},conversation.missedCounter=unreadMessageNumber,this.logger.info(`[ConversationServiceEventHandler] onManagementMessageReceived - Bookmarked ${messageId} on ${timestamp} with ${unreadMessageNumber} unread`)}else conversation.bookmark=null,this.logger.info("[ConversationServiceEventHandler] onManagementMessageReceived - Bookmark removed")}break}}else if("create"===action){const convId=this.xmppService.getBareJidFromJid(conversationElem.find("peer").text()),convDbId=conversationElem.attr("id"),lastModification=new Date(conversationElem.find("lastMessageDate").text()),lastMessageText=conversationElem.find("lastMessageText").text(),lastMessageSender=conversationElem.find("lastMessageSender").text(),missedIMCounter=parseInt(conversationElem.find("unreadMessageNumber").text(),10)||0,muted="true"===conversationElem.find("mute").text(),type=conversationElem.find("type").text();this.conversationService.getOrCreateConversation(convId,type).then(conv=>{this.logger.info("[ConversationServiceEventHandler] onManagementMessageReceived update conversation ("+conv.id+")"),conv.dbId=convDbId,conv.lastModification=lastModification?new Date(lastModification):void 0,conv.lastMessageText=lastMessageText,conv.lastMessageSender=lastMessageSender,conv.muted=muted,conv.preload=!0,conv.setMissedCounter(missedIMCounter),"bot"===type&&(conv.type=conversation_model_1.Conversation.Type.ONE_TO_ONE),this.conversationService.favoriteService&&this.conversationService.favoriteService.updateFavoriteConversations(conv),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conv)})}})}if(stanzaElem.find("mute")||stanzaElem.find("unmute")){const muteElem=stanzaElem.find("mute");let mute=!1;muteElem.length&&(mute=!muteElem.text().length||"true"===muteElem.text());const conversationDbId=stanzaElem.find("mute").attr("conversation")||stanzaElem.find("unmute").attr("conversation"),conversation=this.conversationService.getConversation(conversationDbId);conversation&&(this.logger.info("[ConversationServiceEventHandler] onManagementMessageReceived : mute is changed to "+mute),conversation.muted=mute)}return!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onManagementMessageReceived error "+error),!0}}onReceiptMessageReceived(stanza){try{let stanzaElement=$(stanza);const messageSender=this.xmppService.getBareJidFromJid(stanzaElement.attr("from")),carbonStanza=stanzaElement.find("message");this.contactService.isUserContactJid(messageSender)&&carbonStanza.length>0&&(stanzaElement=$(carbonStanza));const recvMessage=stanzaElement.find("received");if(recvMessage.length&&recvMessage.length>0){this.logger.info("[ConversationServiceEventHandler] onReceiptMessageReceived");const messageId=$(recvMessage).attr("id"),entity=$(recvMessage).attr("entity"),event=$(recvMessage).attr("event");if("server"===entity&&"received"===event){const messageInfo=this.conversationService.pendingMessages[messageId];if(messageInfo&&messageInfo.message){const message=messageInfo.message,conversation=messageInfo.conversation;this.logger.info("[conversationService] Receive server ack ("+conversation.id+", "+message.id+")"),message.setReceiptStatus(message_1.Message.ReceiptStatus.SENT),message.sendUpdateEvent(),delete this.conversationService.pendingMessages[messageId],this.eventService.publish("ON_CONVERSATION_RECEIPT_RECEIVED",message,conversation,"server")}}else"client"===entity&&this.extractStanzaData(stanza).then(stanzaData=>{this.handleReceiptReceiveMessage(stanzaData.conversation,stanza)})}else if(stanzaElement.find("mark_as_read").length){this.logger.info("[ConversationServiceEventHandler] onReceiptMessageReceived -- mark_as_read");const conversationId=stanzaElement.find("mark_as_read").attr("with"),conversation=this.conversationService.getConversation(conversationId);if(conversation){const maskRead="true"===stanzaElement.find("mark_as_read").attr("maskread");switch(stanzaElement.find("mark_as_read").attr("id")){case"all-received":conversation.setMissedCounter(0),this.conversationService.updateMissedCounters();break;case"all-sent":maskRead?conversation.ackReceivedAllSentMessages():conversation.ackReadAllSentMessages();break;default:this.logger.error("[ConversationServiceEventHandler] onReceiptMessageReceived error - unknown read type")}}}else stanzaElement.find("voicemessage").length&&this.logger.debug("[ConversationServiceEventHandler] onReceiptMessageReceived VoiceMessage detected");return!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onReceiptMessageReceived error "+error),!0}}extractStanzaData(stanza){return new Promise((resolve,reject)=>{let stanzaElem=$(stanza);const from=stanzaElem.attr("from"),messageSender=this.xmppService.getBareJidFromJid(from),stanzaData={};let results=null;const carbonStanza=stanzaElem.find("message");if(carbonStanza.length>0&&this.contactService.isUserContactJid(messageSender)){const forwardedCarbonMsg=$(stanzaElem).find("sent forwarded message forwarded message");if(forwardedCarbonMsg&&forwardedCarbonMsg.length){const origMsgId=$(stanzaElem).find("sent forwarded message").attr("id");stanzaElem=$(forwardedCarbonMsg).find("forwarded message"),stanzaData.isForwarded=!0,results=this.handleCarbonMsg(carbonStanza,stanzaData,stanzaElem,origMsgId)}else results=this.handleCarbonMsg(carbonStanza,stanzaData,stanzaElem,null)}else{const forwardedMsg=$(stanzaElem).find("forwarded[xmlns='urn:xmpp:forward:0']");if(forwardedMsg&&forwardedMsg.length){const origMsgId=stanzaElem.attr("id");stanzaElem=$(forwardedMsg).find("forwarded message"),stanzaData.isForwarded=!0,results=this.handleStandardMsg(stanzaData,stanzaElem,from,origMsgId,resolve)}else results=this.handleStandardMsg(stanzaData,stanzaElem,from,null,resolve)}results&&this.handleCommonData(stanza,stanzaData,stanzaElem,results.conversationId,results.delay,results.resource,resolve,reject)})}handleCommonData(stanza,stanzaData,stanzaElem,conversationId,delay,resource,resolve,reject){const archived="push"===stanzaElem.find("retransmission").attr("source");if(stanzaData.date=new Date,stanzaData.offline=!1,"Offline Storage"===delay.text()&&(stanzaData.date=new Date(delay.attr("stamp")),stanzaData.offline=!0),archived){let conversation=this.conversationService.getConversation(conversationId);return void(conversation?reject():this.conversationService.getOrCreateConversation(conversationId,conversationId.startsWith("room_")?"room":"contact").then(conv=>{conversation=conv,reject()}))}const existingConv=this.conversationService.getConversation(conversationId);if(stanzaData.convReady=existingConv&&null!==existingConv.dbId,stanzaData.body||existingConv||stanzaData.oob||stanzaData.conference)if(0===conversationId.indexOf("room_")){const room=this.roomService.getRoomByJid(conversationId),subject=stanzaElem.find("subject"),emptySubject=subject.length&&""===subject.text();room&&"accepted"!==room.status||emptySubject?this.logger.info("[conversationServiceEvent] extractStanzaData -- ignore this stanza message"):this.conversationService.getOrCreateConversation(conversationId,"room").then(roomConv=>(stanzaData.conversation=roomConv,stanzaData.conference&&stanzaData.conference.ownerjid?this.contactService.getOrCreateContact(stanzaData.conference.ownerjid):(resource&&-1!==resource.indexOf("/")&&(resource=resource.split("/")[0]),resource?this.contactService.getOrCreateContact(resource):null))).then(contact=>{stanzaData.participant=contact,resolve(stanzaData)}).catch(error=>{this.logger.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),reject()})}else this.conversationService.getOrCreateConversation(conversationId,"contact").then(conv=>{stanzaData.conversation=conv,stanzaData.participant||(stanzaData.participant=conv.contact),resolve(stanzaData)}).catch(error=>{this.logger.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),reject()});else if($(stanza).find("deleted")){const deleted=$(stanza).find("deleted")[0];if(deleted&&"all"===deleted.getAttribute("id")){const conv=this.conversationService.getConversation(deleted.getAttribute("with"));conv&&(this.logger.info("[conversationServiceEventHandler] Remove all messages for conversation "+conv.id),conv.reset())}resolve()}else this.logger.debug("[conversationServiceEventHandler] ignored message stanza"),reject()}handleStandardMsg(stanzaData,stanzaElem,from,msgId,resolve){this.logger.debug("[conversationServiceEventHandler] > handleStandardMsg "+msgId),stanzaData.outgoingMessage=!1,stanzaData.body=stanzaElem.find("body").text(),stanzaData.messageId=msgId||stanzaElem.attr("id"),stanzaData.carbon=!1,stanzaData.answeredMsg=stanzaElem.find("answeredMsg"),stanzaData.attention=stanzaElem.find("attention");let conversationId=this.xmppService.getBareJidFromJid(from);const resource=this.xmppService.getResourceFromJid(from),delay=stanzaElem.find("delay");stanzaData.urgency="std";const headersElem=stanzaElem.find("headers[xmlns='http://jabber.org/protocol/shim']");if(headersElem&&headersElem.length){const urgencyElem=$(headersElem).find("header[name='Urgency']");urgencyElem&&urgencyElem.length&&(stanzaData.urgency=urgencyElem.text()),"undefined"===stanzaData.urgency&&(stanzaData.urgency="std")}const oob=stanzaElem.find("x[xmlns='jabber:x:oob']");if(oob&&oob.length){const oobElem=$(oob),url=oobElem.find("url").text(),mime=oobElem.find("mime").text(),filename=oobElem.find("filename").text(),filesize=oobElem.find("size").text();stanzaData.oob={url:url,mime:mime,filename:filename,filesize:filesize}}const geoloc=stanzaElem.find("geoloc");if(geoloc&&geoloc.length){const geolocElem=$(geoloc),lon=geolocElem.find("lon").text(),lat=geolocElem.find("lat").text();stanzaData.geoloc={lon:lon,lat:lat}}const voiceMessage=stanzaElem.find("voicemessage");voiceMessage&&voiceMessage.length&&(stanzaData.voiceMessage=!0);const conference=stanzaElem.find("x[xmlns='jabber:x:audioconference']");if(conference&&conference.length){const conferenceElem=$(conference),message=conferenceElem.attr("message"),confendpointid=conferenceElem.attr("confendpointid"),jid=conference.attr("jid"),type=conference.attr("type");if(stanzaData.conference={type:type,message:message,confendpointid:confendpointid,roomjid:jid,ownerjid:conversationId},"reminder"!==type)return this.logger.debug("[conversationServiceEventHandler] ignored message stanza for conference"),resolve(stanzaData),null;conversationId=jid}const urlMetadataElems=stanzaElem.find("url-metadata");stanzaData.urlMetadata=[],urlMetadataElems&&urlMetadataElems.each((__index,urlMetadataElem)=>{const data=$(urlMetadataElem);stanzaData.urlMetadata.push(urlMetadata_service_1.UrlMetaData.create({title:data.attr("title"),url:data.attr("url"),description:data.attr("description"),image:data.attr("image")}))});const replace=stanzaElem.find("replace");replace&&replace.length&&(stanzaData.replace={id:replace.attr("id")});const modified=stanzaElem.find("modified"),deleted=stanzaElem.find("deleted");stanzaData.modified=modified&&modified.length>0||deleted&&deleted.length>0;const mentionElem=stanzaElem.find("mention[xmlns='urn:xmpp:attention:0']");if(mentionElem.length){stanzaData.mentions=[];mentionElem.find("jid").each((__ind,content)=>{const mention={};mention.jid=$(content).text(),mention.pos=parseInt($(content).attr("pos"),10),mention.size=parseInt($(content).attr("size"),10),mention.jid&&stanzaData.mentions.push(mention)})}stanzaData.additionalContent=null;const contents=stanzaElem.find("content[xmlns='urn:xmpp:content']");if(contents&&contents.length>0){const contentElem=$(contents[0]);stanzaData.additionalContent=message_1.MessageAdditionalContent.create(contentElem.attr("type"),contentElem.text())}const subject=stanzaElem.find("subject");subject&&""!==subject.text()&&(stanzaData.subject=subject.text()),stanzaData.status=null;const composing=stanzaElem.find("composing"),paused=stanzaElem.find("paused"),active=stanzaElem.find("active"),inactive=stanzaElem.find("inactive");return composing.length?stanzaData.status="composing":paused.length?stanzaData.status="paused":active.length?stanzaData.status="active":inactive.length&&(stanzaData.status="inactive"),{conversationId:conversationId,resource:resource,delay:delay}}handleCarbonMsg(carbonStanza,stanzaData,stanzaElem,origMsgId){const carbonStanzaElem=$(carbonStanza),from=this.xmppService.getBareJidFromJid(carbonStanzaElem.attr("from")),fromResource=this.xmppService.getResourceFromJid(carbonStanzaElem.attr("from")),to=this.xmppService.getBareJidFromJid(carbonStanzaElem.attr("to")),toResource=this.xmppService.getResourceFromJid(carbonStanzaElem.attr("to"));stanzaData.outgoingMessage=this.contactService.isUserContactJid(from),stanzaData.body=carbonStanzaElem.find("body").text(),stanzaData.participant=stanzaData.outgoingMessage?this.contactService.userContact:null,stanzaData.messageId=origMsgId||carbonStanzaElem.attr("id"),stanzaData.carbon=!0,stanzaData.answeredMsg=carbonStanzaElem.find("answeredMsg");const conversationId=stanzaData.outgoingMessage?to:from,resource=stanzaData.outgoingMessage?toResource:fromResource,delay=carbonStanzaElem.find("delay");stanzaData.urgency="std";const headersElem=carbonStanzaElem.find("headers[xmlns='http://jabber.org/protocol/shim']");if(headersElem&&headersElem.length){const urgencyElem=$(headersElem).find("header[name='Urgency']");urgencyElem&&urgencyElem.length&&(stanzaData.urgency=urgencyElem.text())}const oob=carbonStanzaElem.find("x[xmlns='jabber:x:oob']");if(oob&&oob.length){const oobElem=$(oob),url=oobElem.find("url").text(),mime=oobElem.find("mime").text(),filename=oobElem.find("filename").text(),filesize=oobElem.find("size").text();stanzaData.oob={url:url,mime:mime,filename:filename,filesize:filesize}}const conference=stanzaElem.find("x[xmlns='jabber:x:audioconference']");if(conference&&conference.length){const conferenceElem=$(conference),subject=conferenceElem.attr("subject"),confendpointid=conferenceElem.attr("confendpointid"),jid=conference.attr("jid"),type=conference.attr("type");stanzaData.conference={type:type,subject:subject,confendpointid:confendpointid,roomjid:jid,ownerjid:conversationId}}const urlMetadataElems=stanzaElem.find("url-metadata");stanzaData.urlMetadata=[],urlMetadataElems&&urlMetadataElems.each((__index,urlMetadataElem)=>{const data=$(urlMetadataElem);stanzaData.urlMetadata.push(urlMetadata_service_1.UrlMetaData.create({title:data.attr("title"),url:data.attr("url"),description:data.attr("description"),image:data.attr("image")}))});const replace=carbonStanza.find("replace");replace&&replace.length&&(stanzaData.replace={id:replace.attr("id")});const modified=stanzaElem.find("modified"),deleted=stanzaElem.find("deleted");stanzaData.modified=modified&&modified.length>0||deleted&&deleted.length>0;const mentionElem=carbonStanza.find("mention[xmlns='urn:xmpp:attention:0']");if(mentionElem.length){stanzaData.mentions=[];mentionElem.find("jid").each((__ind,content)=>{const mention={};mention.jid=$(content).text(),mention.pos=parseInt($(content).attr("pos"),10),mention.size=parseInt($(content).attr("size"),10),mention.jid&&stanzaData.mentions.push(mention)})}stanzaData.additionalContent=null;const contents=stanzaElem.find("content[xmlns='urn:xmpp:content']");if(contents&&contents.length>0){const contentElem=$(contents[0]);stanzaData.additionalContent=message_1.MessageAdditionalContent.create(contentElem.attr("type"),contentElem.text())}stanzaData.status=null;const composing=stanzaElem.find("composing"),paused=stanzaElem.find("paused"),active=stanzaElem.find("active"),inactive=stanzaElem.find("inactive");composing.length?stanzaData.status="composing":paused.length?stanzaData.status="paused":active.length?stanzaData.status="active":inactive.length&&(stanzaData.status="inactive");const geoloc=carbonStanzaElem.find("geoloc");if(geoloc&&geoloc.length){const geolocElem=$(geoloc),lon=geolocElem.find("lon").text(),lat=geolocElem.find("lat").text();stanzaData.geoloc={lon:lon,lat:lat}}const voiceMessage=carbonStanzaElem.find("voicemessage");return voiceMessage&&voiceMessage.length&&(stanzaData.voiceMessage=!0),{conversationId:conversationId,resource:resource,delay:delay}}extractWebrtcStanzaData(stanza){return new Promise((resolve,reject)=>{this.logger.debug("[conversationServiceEventHandler] extractWebrtcStanzaData");const stanzaData={};stanzaData.messageId=$(stanza).attr("id"),stanzaData.callerJid=$(stanza).find("caller").text(),stanzaData.calleeJid=$(stanza).find("callee").text(),stanzaData.state=$(stanza).find("state").text();let conversationId=null;if(this.contactService.isUserContactJid(stanzaData.callerJid)?(conversationId=stanzaData.calleeJid,stanzaData.participant=this.contactService.userContact):conversationId=stanzaData.callerJid,-1!==conversationId.indexOf("janusgateway"))return this.logger.debug("[conversationServiceEventHandler] extractWebrtcStanzaData -- ignore Janus message"),void reject();if(this.webrtcGatewayService.isMediaPillarJid(stanzaData.callerJid))return this.logger.debug("[conversationServiceEventHandler] extractWebrtcStanzaData -- ignore MediaPillar message"),void resolve(null);let duration=0;$(stanza).find("duration")&&(duration=parseInt($(stanza).find("duration").text(),10)),stanzaData.duration=duration>0?"("+moment.duration(duration,"ms").format("h[H] mm[m] ss[s]")+")":0;const date=$(stanza).find("date").text();date&&(stanzaData.date=new Date(date)),stanzaData.body="","missed"===stanzaData.state?stanzaData.body="missedCall||"+stanzaData.date:"answered"===stanzaData.state&&(stanzaData.body="activeCallMsg||"+stanzaData.date+"||"+stanzaData.duration),this.conversationService.getOrCreateConversation(conversationId,"contact").then(conversation=>{stanzaData.conversation=conversation,stanzaData.participant||(stanzaData.participant=conversation.contact),resolve(stanzaData)}).catch(error=>{this.logger.error("[conversationServiceEventHandler] impossible to fetch conversation "+error.message),reject()})})}handleChatMessage(stanzaData){this.logger.info("[ConversationServiceEventHandler] handleChatMessage");const body=stanzaData.body;let message=null,conversation=stanzaData.conversation;if(conversation&&conversation.room&&(conversation.room.lastActivityDate=new Date),stanzaData.oob){const url=stanzaData.oob.url,fileName=stanzaData.oob.filename,fileId=this.fileStorageService.extractFileIdFromUrl(url),attention=stanzaData.attention&&stanzaData.attention.length;message=this.conversationService.addFileSharingMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId,fileId,fileName,stanzaData.geoloc,stanzaData.urgency,stanzaData.isForwarded,attention);let shouldForceRetrieve=!1;const fd=this.fileStorageService.getFileDescriptorById(fileId);fd&&!fd.isAlreadyFileViewer(conversation.id)&&(shouldForceRetrieve=!0),this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId,shouldForceRetrieve).then(fileDescriptor=>{this.fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor).then(blob=>{let newFileDescriptor=fileDescriptor;fileDescriptor.recordingFile||(newFileDescriptor=this.fileStorageService.getFileDescriptorById(fileDescriptor.id)),newFileDescriptor.previewBlob=blob,newFileDescriptor.previewBlobSubject.next(newFileDescriptor.previewBlob),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:newFileDescriptor.id})}),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})}).catch(error=>{this.logger.info("[ConversationServiceEventHandler] handleChatMessage error "+error)})}else if(stanzaData.conference){const conferenceDescriptor={type:stanzaData.conference.type,message:stanzaData.conference.subject,confendpointid:stanzaData.conference.confendpointid,roomjid:stanzaData.conference.roomjid};if(conversation=this.conversationService.getConversation(conferenceDescriptor.roomjid),this.eventService.publish("ROOM_UPDATE_CONFID"),!conversation)return;message=this.conversationService.addConferenceMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.messageId,conferenceDescriptor)}else if(stanzaData.replace)message=conversation.getMessageById(stanzaData.replace.id),message&&stanzaData.participant.jid!==message.from.jid?(this.logger.warn("[ConversationServiceEventHandler] handleChatMessage : message Replaced by somebody else - Skip"),message=null):(message||(message=this.conversationService.addChatMessage(conversation,stanzaData.participant,stanzaData.date,"",stanzaData.replace.id,null,stanzaData.subject,null,null,stanzaData.additionalContent,null,null,null,stanzaData.isForwarded)),message.addReplaceMsg(stanzaData.messageId,body),message.mentions=stanzaData.mentions,conversation.updateAfterReplaceEvent(message));else if(stanzaData.modified)message=conversation.getMessageById(stanzaData.messageId),message.modify(stanzaData),conversation.updateAfterReplaceEvent(message);else if(body.length>0||null!==stanzaData.additionalContent){const answeredMsgId=stanzaData.answeredMsg?stanzaData.answeredMsg.text():null,answeredMsgDate=stanzaData.answeredMsg?stanzaData.answeredMsg.attr("stamp"):null;if(message=this.conversationService.addChatMessage(conversation,stanzaData.participant,stanzaData.date,stanzaData.body,stanzaData.messageId,null,stanzaData.subject,answeredMsgId,answeredMsgDate,stanzaData.additionalContent,stanzaData.mentions,stanzaData.urgency,stanzaData.isForwarded),answeredMsgId){const answeredMessage=conversation.getMessageById(answeredMsgId),isFromMe=this.contactService.isUserContact(stanzaData.participant);answeredMessage&&isFromMe?(answeredMessage.urgencyAck=!0,answeredMessage.urgencyHandler&&answeredMessage.urgencyHandler()):this.logger.error("[ConversationServiceEventHandler] Not possible to handle answeredMsg because replied msg not found")}}message&&(this.logger.info("[ConversationServiceEventHandler] handleChatMessage : message body="+message.getLastTextModified()),message.isForwarded=!!stanzaData.isForwarded&&stanzaData.isForwarded,message.urlMetadata=stanzaData.urlMetadata.length>0?stanzaData.urlMetadata[0]:null,this.acknowledgeHandledChatMessage(stanzaData,conversation,message))}acknowledgeHandledChatMessage(stanzaData,conversation,message){if(this.logger.info("[ConversationServiceEventHandler] acknowledgeHandledChatMessage"),!message)return message=conversation.getMessageById(stanzaData.messageId),void(conversation.room&&message&&message.side===message_1.Message.Side.RIGHT&&this.conversationService.sendAckReceivedMessage(conversation,message));if(message.side===message_1.Message.Side.LEFT){let checkIfChatIsHidden=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&conversation.webConferenceSession&&conversation.webConferenceSession.haveJoined&&!conversation.webConferenceSession.isInExternalWindow&&(!conversation.infoVisible||conversation.infoVisible&&"chat"!==conversation.selectedTabName);if(this.webConferenceServiceV2&&conversation.room){const webConferenceSession=this.webConferenceServiceV2.getWebConferenceSessionById(conversation.room.dbId);checkIfChatIsHidden=checkIfChatIsHidden||webConferenceSession&&webConferenceSession.haveJoined&&!webConferenceSession.isInExternalWindow&&(!conversation.infoVisible||conversation.infoVisible&&"chat"!==conversation.selectedTabName)}if(checkIfChatIsHidden=checkIfChatIsHidden||this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&conversation.videoCall&&0!==conversation.videoCall.status.key&&!conversation.infoVisible,conversation.room&&conversation.room.isWebinarRoom()){checkIfChatIsHidden=!conversation.infoVisible||conversation.infoVisible&&"chat"!==conversation.selectedTabName;const conversationWebinarId=conversation.room.conference.webinar.id,activeWebinar=this.webinarService.conference.activeWebinar;activeWebinar&&activeWebinar.id===conversationWebinarId||this.conversationService.sendAckReadMessage(conversation,message)}this.conversationService.activeConversation&&conversation.dbId===this.conversationService.activeConversation.dbId&&"away"!==this.contactService.userContact.status&&this.mainService.appVisible.getValue()&&!conversation.isFullScreenNoChat&&!checkIfChatIsHidden?this.conversationService.sendAckReadMessage(conversation,message):(this.conversationService.sendAckReceivedMessage(conversation,message),stanzaData.offline||!stanzaData.convReady||message.isTextModified()||conversation.setMissedCounter(conversation.missedCounter+1)),message.isTextModified()&&(message.receiptStatus===message_1.Message.ReceiptStatus.READ&&this.conversationService.sendAckReadOrReceivedMessage(conversation,stanzaData.messageId,"read"),message.sendUpdateEvent())}else stanzaData.carbon?message.setReceiptStatus(message_1.Message.ReceiptStatus.SENT):message.setReceiptStatus(message_1.Message.ReceiptStatus.IN_PROGRESS);this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),this.eventService.publish("ON_CONVERSATION_MESSAGE_RECEIVED",message,conversation,stanzaData.carbon),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}handleReceiptReceiveMessage(conversation,stanza){this.logger.info("[ConversationServiceEventHandler] handleReceiptReceiveMessage");const recvMessage=$(stanza).find("received[xmlns='urn:xmpp:receipts']");if(recvMessage.length){const messageId=$(recvMessage).attr("id"),message=conversation.getMessageById(messageId);if(message){let contactJid=$(stanza).attr("from").split("/")[1];contactJid||(contactJid=$(stanza).attr("from"));const event=$(recvMessage).attr("event"),maskRead="true"===$(recvMessage).attr("maskread");(conversation.room&&this.contactService.isUserContactJid(contactJid)||!conversation.room)&&("received"===event?message.setReceiptStatus(message_1.Message.ReceiptStatus.UNREAD):"read"===event&&(maskRead||message.setReceiptStatus(message_1.Message.ReceiptStatus.READ),conversation.setMissedCounter(0))),this.contactService.isUserContactJid(contactJid)&&"read"===event&&"L"===message.side&&conversation.setMissedCounter(0),message.sendUpdateEvent(),this.eventService.publish("ON_CONVERSATION_RECEIPT_RECEIVED",message,conversation,event),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation)}else{const temp=$(stanza).attr("from"),event=$(recvMessage).attr("event");let contactJid="";temp&&(contactJid=temp.split("/")[1]),contactJid||(contactJid=temp),this.contactService.isUserContactJid(contactJid)&&"read"===event&&(conversation.setMissedCounter(0),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation))}}}handleStatusMessage(conversation,participant,stanza){this.logger.info("[conversationServiceEventHandler] handleStatusMessage ");let status="";status="thread"===$(stanza).children().prop("tagName")?conversation_model_1.Conversation.stringToStatus($($(stanza).children()[1]).prop("tagName")):conversation_model_1.Conversation.stringToStatus($(stanza).children().prop("tagName")),this.conversationService.setStatusMessage(conversation,participant,status),this.eventService.publish("ON_CONVERSATIONS_STATUS_MESSAGE_EVENT",conversation,participant,status)}onRecordingMessageReceived(stanza){this.logger.info("[ConversationServiceEventHandler] onRecordingMessageReceived");try{const msgContent=stanza.textContent;return this.extractStanzaData(stanza).then(stanzaData=>{if("start"===msgContent){const conversation=stanzaData.conversation;this.conversationService.addRecordingMessage(conversation,stanzaData.participant,stanzaData.date,msgContent,stanzaData.messageId),this.conversationService.setStatusMessage(conversation,stanzaData.participant,conversation_model_1.Conversation.Status.ACTIVE),conversation.videoCall&&(conversation.videoCall.isRecorded=!0),this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT",conversation),this.eventService.publish("ON_RECORDING_START_MSG_RECEIVED")}else if("stop"===msgContent){const conversation=stanzaData.conversation;conversation&&(this.conversationService.addRecordingMessage(conversation,stanzaData.participant,stanzaData.date,msgContent,stanzaData.messageId),conversation.videoCall&&(conversation.videoCall.isRecorded=!1)),this.eventService.publish("ON_RECORDING_STOP_MSG_RECEIVED")}else"remoteStopVideo"===msgContent?this.eventService.publish("ON_RECORDING_REMOTESTOPVIDEO_MSG_RECEIVED"):"remoteChangeMediaVideo"===msgContent?this.eventService.publish("ON_RECORDING_REMOTECHANGEMEDIAVIDEO_MSG_RECEIVED"):"remoteStopSharing"===msgContent?this.eventService.publish("ON_RECORDING_REMOTESTOPSHARING_MSG_RECEIVED"):"remoteChangeMediaSharing"===msgContent&&this.eventService.publish("ON_RECORDING_REMOTECHANGEMEDIASHARING_MSG_RECEIVED")}),!0}catch(error){return this.logger.error("[ConversationServiceEventHandler] onRecordingMessageReceived error "+error),!0}}}exports.ConversationServiceEventHandler=ConversationServiceEventHandler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);class FilePublicDownload{static create(url,fileName,totalBytes,receivedBytes,savePath){return new FilePublicDownload(url,fileName,totalBytes,receivedBytes,savePath)}constructor(url=null,fileName=null,totalBytes=null,receivedBytes=null,savePath=null){this.url=url,this.fileName=fileName,this.totalBytes=totalBytes,this.receivedBytes=receivedBytes,this.savePath=savePath,this.isCanceled=!1,this.openFolderOnceDownloadFinished=!1,this.progressSubject=new rxjs_1.Subject}isDownloadFinished(){return this.receivedBytes===this.totalBytes}askCancel(){this.isCanceled=!0,this.progressSubject.next(void 0)}}exports.FilePublicDownload=FilePublicDownload},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webinar_model_1=__webpack_require__(111),webinarConference_service_1=__webpack_require__(401),webinarParticipants_service_1=__webpack_require__(429),webinarSpeakers_service_1=__webpack_require__(430),auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),room_service_1=__webpack_require__(25),contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),settings_service_1=__webpack_require__(18),errorHelper_service_1=__webpack_require__(12),webrtcP2P_service_1=__webpack_require__(35),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),main_service_1=__webpack_require__(15);class WebinarService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.subject=new rxjs_1.Subject,this.webinars=[],this.webinarsMap={},this.subscription=null,this.xmppHandlers=[],this.createInProgress=!1,this.getWebinarPromise=[],this.centralizedService=null,this.conversationService=null,this.userContact=null,this.guestMode=!0,this.speakers=webinarSpeakers_service_1.WebinarSpeakersService.create(this),this.participants=webinarParticipants_service_1.WebinarParticipantsService.create(this),this.conference=webinarConference_service_1.WebinarConferenceService.create(this)}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webinarService||(win.rainbow.webinarService=new WebinarService),win.rainbow.webinarService}async start(conversationService){try{this.userContact=this.contactService.userContact,this.centralizedService=this.mainService.inject("centralizedService"),this.conversationService=conversationService,config.enableAioUrlMode="true"===this.settingsService.getSetting("enableAioUrlMode"),await this.getServerWebinars(),this.handleRoomEvents(),this.conference.attachListeners(),this.logger.info("[WebinarService] start -- success")}catch(error){}}async stop(nowait=!1){this.conference.activeWebinar&&this.conference.activeWebinar.session&&this.conference.leave(this.conference.activeWebinar,!1,nowait),this.subscription&&this.subscription.unsubscribe(),this.logger.info("[WebinarService] stop -- success")}async reconnect(){this.webinars=[],this.webinarsMap={},this.handleRoomEvents(),await this.getServerWebinars(),await this.conference.reconnect(),this.submitEvent(WebinarService.WEBINARS_UPDATE),this.logger.info("[WebinarService] reconnect -- success")}subscribe(observer){return this.subject.subscribe(observer)}submitEvent(name,data){this.subject.next(event_model_1.RBEvent.create(name,data))}async createWebinar(webinar,addToCache=!0){try{this.createInProgress=!0;const url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars",headers=this.authService.getPostHeader(),body=webinar.getData(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;return webinar_model_1.Webinar.updateFromData(webinar,data),webinar.isCreator=!0,this.updateRoles(webinar),await this.getWebinarRooms(webinar),addToCache&&this.addWebinarToCache(webinar),this.createInProgress=!1,this.logger.info(`[WebinarService] createWebinar -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createWebinar");throw this.logger.error("[WebinarService] "+errorInfo.message),this.createInProgress=!1,errorInfo.error}}async updateWebinar(webinarData){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinarData.id}`,headers=this.authService.getPostHeader(),body=webinarData.getData(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data,webinar=this.webinarsMap[webinarData.id];return webinar_model_1.Webinar.updateFromData(webinar,data),webinar.published&&this.submitEvent(WebinarService.WEBINARS_UPDATE),webinar.rxSubject.next(),this.logger.info(`[WebinarService] updateWebinar -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateWebinar");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async updateWebinarAvatar(webinar,avatarImg){try{return avatarImg?await this.roomService.setAvatarRoom({id:webinar.roomId},avatarImg,1200,600):await this.roomService.deleteAvatarRoom(webinar.roomId),webinar.room.avatar=avatarImg,webinar.room.rxSubject.next(),webinar.rxSubject.next(),this.logger.info(`[WebinarService] updateWebinarAvatar -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateWebinarAvatar");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async updateWebinarLogo(webinar,logoSrc){try{return logoSrc?await this.roomService.setAvatarRoom({id:webinar.roomModeratorsChatId},logoSrc,1200,600):await this.roomService.deleteAvatarRoom(webinar.roomId),webinar.practiceRoom.avatar=logoSrc,webinar.practiceRoom.rxSubject.next(),webinar.rxSubject.next(),this.logger.info(`[WebinarService] updateWebinarLogo -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateWebinarLogo");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}getWebinars(order=null){if(order)switch(order){case"name":this.webinars.sort((webinarA,webinarB)=>webinarA.name.localeCompare(webinarB.name));break;default:this.webinars.sort((webinarA,webinarB)=>{const dateA=moment(webinarA.webinarStartDate),dateB=moment(webinarB.webinarStartDate);return dateA.isSame(dateB)?0:dateA.isBefore(dateB)?-1:1})}return this.webinars.filter(webinar=>webinar.isAttendee||"accepted"===webinar.room.status)}async getServerWebinars(){try{const url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars?limit=100&offset=0",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.webinars=data.reduce((webinars,webinarData)=>{if(!webinarData.moderatorsSelectedAnNotified)return this.deleteWebinar(webinarData.id),this.logger.error("[WebinarService] getServerWebinars -- remove non finalized webinar -- "+webinarData.id),webinars;const webinar=webinar_model_1.Webinar.createFromData(webinarData);return webinar.isCreator=webinar.creatorId===this.contactService.userContact.dbId,webinar.room=this.roomService.getRoomById(webinar.roomId),webinar.practiceRoom=this.roomService.getRoomById(webinar.roomModeratorsChatId),this.updateRoles(webinar),webinar.room&&this.createWebinarSession(webinar,"getServerWebinars"),webinar.isAttendee||webinar.room?(this.webinarsMap[webinar.id]=webinar,webinars.push(webinar),webinars):(this.logger.error(`[WebinarService] getServerWebinars -- no room found for webinar ${webinarData.id} roomId ${webinar.roomId}`),webinars)},[]),this.logger.info(`[WebinarService] getServerWebinars -- ${this.webinars.length} webinar(s) found -- success`),this.webinars}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerWebinars");return this.logger.error("[WebinarService] "+errorInfo.message),[]}}getWebinar(webinarId){return this.webinarsMap[webinarId]?(this.logger.info(`[WebinarService] getWebinar (from cache) -- ${webinarId} -- success`),Promise.resolve(this.webinarsMap[webinarId])):(this.getWebinarPromise[webinarId]||(this.getWebinarPromise[webinarId]=new Promise((resolve,reject)=>{const webinar=webinar_model_1.Webinar.create();webinar.id=webinarId,this.updateWebinarFromServer(webinar).then(()=>{this.webinars.push(webinar),this.webinarsMap[webinarId]=webinar,this.logger.info(`[WebinarService] getWebinar (from server) -- ${webinarId} -- success`),delete this.getWebinarPromise[webinarId],this.updateRoles(webinar),this.createWebinarSession(webinar,"getWebinar"),resolve(webinar)}).catch(error=>{this.logger.error("[WebinarService] "+error.message),delete this.getWebinarPromise[webinarId],reject(error)})})),this.getWebinarPromise[webinarId])}getWebinarBySessionId(sessionId,confId=null){let conferenceId=confId;if(!conferenceId){const session=this.xmppService.connection.jingle.sessions[sessionId];if(!session)return null;conferenceId=session.conference_id}return this.webinars.find(webinar=>webinar.roomId===conferenceId)}getWebinarByRoomId(roomId){return this.webinars.find(webinar=>webinar.roomId===roomId)}async getPublicWebinarInfo(openInviteId,joinUuid=null,registrationCall){try{let url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars/public";registrationCall&&(url+="?registrationClickCount=true");const headers={Accept:"application/json","Content-Type":"application/json"},bodyContent={};joinUuid||(bodyContent.registrationId=openInviteId),joinUuid&&(bodyContent.openInviteId=openInviteId,bodyContent.joinUuid=joinUuid);const body=JSON.stringify(bodyContent),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const webinarInfo=(await response.json()).data;return webinarInfo.errorDetailsCode=null,webinarInfo.publicWebinarId=openInviteId,webinarInfo.joinUuid=joinUuid,this.logger.info("[WebinarService] -- getPublicWebinarInfo -- success"),webinarInfo}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getWebinar");if(this.logger.error("[WebinarService] -- getPublicWebinarInfo -- failure -- "+errorInfo.message),403621===errorInfo.error.errorDetailsCode){const webinarInfo=errorInfo.error.errorDetailsData;return webinarInfo.errorDetailsCode=403621,webinarInfo}return{errorStatus:errorInfo.error.status,errorDetailsCode:errorInfo.error.errorDetailsCode,errorMessage:errorInfo.error.message,linkType:""}}}async updateWebinarFromServer(webinar){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;if(webinar_model_1.Webinar.updateFromData(webinar,data),this.updateRoles(webinar),webinar.room||(webinar.room=this.roomService.getRoomById(webinar.roomId)),!webinar.room)try{webinar.room=await this.roomService.getServerRoom(webinar.roomId)}catch(error){}if((webinar.isOrganizer||webinar.isSpeaker)&&webinar.room&&"accepted"===webinar.room.status&&(webinar.practiceRoom||(webinar.practiceRoom=this.roomService.getRoomById(webinar.roomModeratorsChatId)),!webinar.practiceRoom))try{webinar.practiceRoom=await this.roomService.getServerRoom(webinar.roomModeratorsChatId)}catch(error){}return webinar.session||this.createWebinarSession(webinar,"updateWebinarFromServer"),this.submitEvent(WebinarService.WEBINARS_UPDATE),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateWebinarFromServer");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async deleteWebinar(webinarId){try{const webinar=this.webinarsMap[webinarId];if(!webinar||webinar.isOrganizer||webinar.isCreator){const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinarId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response}else{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinarId}/unsubscribe`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response}webinar&&this.removeWebinar(webinar)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteWebinar");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}updateRoles(webinar){webinar.isOrganizer=void 0!==webinar.organizers.find(organizer=>organizer.userId===this.contactService.userContact.dbId),webinar.isSpeaker=void 0!==webinar.speakers.find(speaker=>speaker.userId&&speaker.userId===this.contactService.userContact.dbId||speaker.alternativeUserId&&speaker.alternativeUserId===this.contactService.userContact.dbId),webinar.isAttendee=!webinar.isOrganizer&&!webinar.isSpeaker,webinar.isGuestAttendee=webinar.isAttendee&&this.contactService.userContact.isGuest()}async hasWebinarLicence(userId){try{const url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars/invitations/check-license",headers=this.authService.getPostHeader(),body=JSON.stringify({users:[userId]}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return(await response.json()).status.accepted.users[0]===userId}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getSpeakerStatus");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async getAvailableLicences(webinarStartDate,webinarEndDate,excludeWebinarId=null){try{let url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/licenses?webinarStartDate=${webinarStartDate}&webinarEndDate=${webinarEndDate}`;excludeWebinarId&&(url+="&excludeWebinarId="+excludeWebinarId);const headers=this.authService.getPostHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAvailableLicences");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async notifyModerators(webinar){if(webinar.moderatorsNotified)return webinar;try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/warn-moderators`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return webinar_model_1.Webinar.updateFromData(webinar,data),this.submitEvent(WebinarService.WEBINAR_PUBLISHED,webinar),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"warnModerators");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}async publishWebinar(webinar){if(webinar.published)return webinar;try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/publish`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return webinar_model_1.Webinar.updateFromData(webinar,data),webinar.rxSubject.next(),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"publishWebinar");throw this.logger.error("[WebinarService] "+errorInfo.message),errorInfo.error}}handleRoomEvents(){this.subscription&&this.subscription.unsubscribe(),this.subscription=this.roomService.subscribe(async event=>{try{switch(event.type){case"ROOM_USER_UPDATE_EVENT":{const room=event.value.room;if(room&&room.isWebinarRoom()){const webinar=this.webinarsMap[room.conference.webinar.id];webinar&&(this.logger.info(`[webinarService] handleRoomEvents -- ${webinar.id} -- update`),await this.updateWebinarFromServer(webinar),webinar.rxSubject.next())}}break;case"ROOM_UPDATE_EVENT":{const room=event.value;if(room&&room.isWebinarRoom()&&"unsubscribed"===room.status){const webinar=this.webinarsMap[room.conference.webinar.id];webinar&&(this.logger.info(`[webinarService] handleRoomEvents -- ${webinar.id} -- delete`),this.removeWebinar(webinar))}}}}catch(error){}}),this.xmppHandlers.forEach(handler=>{this.xmppService.connection.deleteHandler(handler)}),this.xmppHandlers=[],this.xmppHandlers.push(this.xmppService.connection.addHandler(stanza=>this.onManagementMessage(stanza),null,"message","management"))}async onManagementMessage(stanza){try{const stanzaElem=$(stanza),webinarElem=stanzaElem.find("webinar");if(webinarElem.length>0){const webinarId=webinarElem.attr("webinarid");let webinar=this.webinarsMap[webinarId];const action=webinarElem.attr("action");if(action){switch(action){case"create":webinar||this.createInProgress||(webinar=await this.getWebinar(webinarId),this.logger.info(`[webinarService] onManagementMessage -- ${webinarId} -- create`));break;case"update":if(webinar){const nameElem=webinarElem.find("name"),subjectElem=webinarElem.find("subject"),approvalElem=webinarElem.find("approvalRegistrationMethod"),moderatorsNotifiedElem=webinarElem.find("moderatorsSelectedAnNotified"),emailNotificationElem=webinarElem.find("emailNotification"),chatElem=webinarElem.find("chat"),waitingRoomStartDateElem=webinarElem.find("waitingRoomStartDate"),webinarStartDateElem=webinarElem.find("webinarStartDate"),webinarEndDateElem=webinarElem.find("webinarEndDate"),timeZoneElem=webinarElem.find("timeZone");nameElem.length&&(webinar.name=nameElem.text()),subjectElem.length&&(webinar.subject=subjectElem.text()),approvalElem.length&&(webinar.approvalRegistrationMethod=approvalElem.text()),moderatorsNotifiedElem.length&&(webinar.moderatorsNotified="true"===moderatorsNotifiedElem.text()),emailNotificationElem.length&&(webinar.published="true"===emailNotificationElem.text()),chatElem.length&&chatElem.attr("option")&&(webinar.chatOption=chatElem.attr("option")),waitingRoomStartDateElem.length&&(webinar.waitingRoomStartDate=waitingRoomStartDateElem.text()),webinarStartDateElem.length&&(webinar.webinarStartDate=webinarStartDateElem.text()),webinarEndDateElem.length&&(webinar.webinarEndDate=webinarEndDateElem.text()),timeZoneElem.length&&(webinar.timeZone=timeZoneElem.text());const moderatorsElem=webinarElem.find("moderators");if(moderatorsElem.length>0){webinar.organizers=[];moderatorsElem.find("organizer").each((__ind,organizer)=>{const organizerElem=$(organizer);webinar.organizers.push({userId:organizerElem.attr("userid"),status:organizerElem.attr("status"),hightlighted:"true"===organizerElem.attr("hightlighted"),role:"organizer"})}),webinar.speakers=webinar.speakers.filter(speaker=>null===speaker.userId);moderatorsElem.find("speaker").each((__ind,speaker)=>{const speakerElem=$(speaker),userId=speakerElem.attr("userid");webinar.speakers.push({userId:userId,status:speakerElem.attr("status"),company:speakerElem.attr("company"),jobTitle:speakerElem.attr("jobTitle"),hightlighted:"true"===speakerElem.attr("hightlighted"),role:"speaker"}),this.contactService.getContactByDBId(userId)});moderatorsElem.find("guestspeaker").each((__ind,guestspeaker)=>{const guestspeakerElem=$(guestspeaker);webinar.speakers.push({email:guestspeakerElem.attr("email"),status:guestspeakerElem.attr("status"),role:"speaker"})}),this.updateRoles(webinar)}const participantsElem=webinarElem.find("participants");participantsElem.length>0&&(participantsElem.find("participant").each((__ind,_participant)=>{const participantElem=$(_participant),email=participantElem.attr("email"),state=participantElem.attr("state");let participant=webinar.participants.find(part=>part.email===email);participant?participant.state=state:(participant=webinar_model_1.WebinarParticipant.create(),participant.email=email,participant.state=state,participant.firstName=participantElem.attr("firstName"),participant.lastName=participantElem.attr("lastName"),participant.company=participantElem.attr("company"),participant.jobTitle=participantElem.attr("jobTitle"),participant.userId=participantElem.attr("userId"),participant.lastAvatarUpdateDate=participantElem.attr("lastAvatarUpdateDate"),webinar.participants.push(participant))}),webinar.pendingParticipantNumber=parseInt(participantsElem.attr("pending"),10),webinar.acceptedParticipantNumber=parseInt(participantsElem.attr("accepted"),10),webinar.rejectedParticipantNumber=parseInt(participantsElem.attr("rejected"),10)),webinar.rxSubject.next(),this.logger.info(`[webinarService] onManagementMessage -- ${webinarId} -- update`)}break;case"delete":webinar&&(this.logger.info(`[webinarService] onManagementMessage -- ${webinarId} -- delete`),this.removeWebinar(webinar));break;case"invitation":if(!webinar){webinar=await this.getWebinar(webinarId);const from=stanzaElem.attr("from");this.submitEvent("WEBINAR_NOTIFICATION",{webinar:webinar,from:from,action:"invite"}),this.logger.info(`[webinarService] onManagementMessage -- ${webinarId} -- invitation`)}}this.submitEvent(WebinarService.WEBINARS_UPDATE)}}return!0}catch(error){return this.logger.error("[webinarService] onWebinarManagement -- failure -- "+error.message),!0}}async getWebinarRooms(webinar,practice=!0){webinar.room=await this.roomService.getServerRoom(webinar.roomId),practice&&(webinar.practiceRoom=await this.roomService.getServerRoom(webinar.roomModeratorsChatId))}hasActiveOrFutureWebinar(){return this.webinars.some(webinar=>webinar.isOrganizer||"terminated"!==webinar.status)}removeWebinar(webinar){const index=this.webinars.findIndex(web=>web.id===webinar.id);-1!==index&&(this.webinars.splice(index,1),delete this.webinarsMap[webinar.id]),this.conference.removeActiveWebinar(webinar),webinar.session=null,webinar.status="terminated",webinar.rxSubject.next(),this.submitEvent(WebinarService.WEBINARS_UPDATE)}async getWebinarTextConversation(webinar){try{const conversation=await this.conversationService.getOrCreateConversation(webinar.room.jid,"room"),url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/conversations/${conversation.dbId}/downloads`,response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;this.logger.info(`[webinarService] getWebinarTextConversation -- ${webinar.id} -- success`);return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getWebinarTextConversation");throw this.logger.error("[webinarService] "+errorInfo.message),errorInfo.error}}async getGlobalAnalytics(webinar){try{const url=`${config.restServerUrl}/api/rainbow/analytics/v1.0/webinars/${webinar.id}`,response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;this.logger.info(`[webinarService] getAnalytics -- ${webinar.id} -- success`);const data=(await response.json()).data;return data.participation=data.registered>0?Math.floor(100*data.participants/data.registered)+" %":"0 %",data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAnalytics");throw this.logger.error("[webinarService] "+errorInfo.message),errorInfo.error}}async getParticipantsAnalytics(webinar){try{const url=`${config.restServerUrl}/api/rainbow/analytics/v1.0/webinars/${webinar.id}/participants`,response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;this.logger.info(`[webinarService] getParticipantsAnalytics -- ${webinar.id} -- success`);const data=(await response.json()).data;return data.forEach(entry=>{entry.date=moment(entry.date).format("LT")}),data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getParticipantsAnalytics");throw this.logger.error("[webinarService] "+errorInfo.message),errorInfo.error}}async getAttendeesAnalytics(webinar){try{const url=`${config.restServerUrl}/api/rainbow/analytics/v1.0/webinars/${webinar.id}/attendance`,response=await fetch(url,{method:"GET",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;this.logger.info(`[webinarService] getAttendeesAnalytics -- ${webinar.id} -- success`);return(await response.json()).data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAttendeesAnalytics");throw this.logger.error("[webinarService] "+errorInfo.message),errorInfo.error}}addWebinarToCache(webinar){this.webinars.push(webinar),this.webinarsMap[webinar.id]=webinar}createWebinarSession(webinar,from){if(webinar.room&&webinar.room.conference&&webinar.room.conference.sessions.length){const message=`[webinarService] createWebinarSession -- ${webinar.room.conference.sessions[0].type} -- ${from}`;switch(webinar.room.conference.sessions[0].type){case"practiceWaitingRoom":webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(message);break;case"practiceRoom":webinar.isAttendee||(webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(message));break;case"waitingRoom":webinar.isAttendee&&(webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(message));break;case"webinar":webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(message)}}else this.logger.info(`[webinarService] createWebinarSession -- ${from} -- no room conference session`)}}WebinarService.WEBINARS_UPDATE="WEBINARS_UPDATE",WebinarService.WEBINAR_PUBLISHED="WEBINAR_PUBLISHED",WebinarService.WEBINAR_TERMINATED="WEBINAR_TERMINATED",exports.WebinarService=WebinarService},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CardObject=exports.ValidationResults=void 0;var Enums=__webpack_require__(55),strings_1=__webpack_require__(80),shared_1=__webpack_require__(62),host_capabilities_1=__webpack_require__(145),serialization_1=__webpack_require__(70),ValidationResults=function(){function ValidationResults(){this.allIds={},this.validationEvents=[]}return ValidationResults.prototype.addFailure=function(cardObject,event,message){this.validationEvents.push({phase:Enums.ValidationPhase.Validation,source:cardObject,event:event,message:message})},ValidationResults}();exports.ValidationResults=ValidationResults;var CardObject=function(_super){function CardObject(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._shouldFallback=!1,_this}return __extends(CardObject,_super),CardObject.prototype.getSchemaKey=function(){return this.getJsonTypeName()},Object.defineProperty(CardObject.prototype,"requires",{get:function(){return this.getValue(CardObject.requiresProperty)},enumerable:!1,configurable:!0}),CardObject.prototype.contains=function(node){return!!this._renderedElement&&this._renderedElement.contains(node)},CardObject.prototype.preProcessPropertyValue=function(property,propertyValue){var value=void 0===propertyValue?this.getValue(property):propertyValue;if(shared_1.GlobalSettings.allowPreProcessingPropertyValues){for(var currentObject=this;currentObject&&!currentObject.onPreProcessPropertyValue;)currentObject=currentObject.parent;if(currentObject&&currentObject.onPreProcessPropertyValue)return currentObject.onPreProcessPropertyValue(this,property,value)}return value},CardObject.prototype.setParent=function(value){this._parent=value},CardObject.prototype.setShouldFallback=function(value){this._shouldFallback=value},CardObject.prototype.shouldFallback=function(){return this._shouldFallback||!this.requires.areAllMet(this.hostConfig.hostCapabilities)},CardObject.prototype.getRootObject=function(){for(var rootObject=this;rootObject.parent;)rootObject=rootObject.parent;return rootObject},CardObject.prototype.internalValidateProperties=function(context){this.id&&(context.allIds.hasOwnProperty(this.id)?(1==context.allIds[this.id]&&context.addFailure(this,Enums.ValidationEvent.DuplicateId,strings_1.Strings.errors.duplicateId(this.id)),context.allIds[this.id]+=1):context.allIds[this.id]=1)},CardObject.prototype.validateProperties=function(){var result=new ValidationResults;return this.internalValidateProperties(result),result},CardObject.prototype.findDOMNodeOwner=function(node){return this.contains(node)?this:void 0},Object.defineProperty(CardObject.prototype,"parent",{get:function(){return this._parent},enumerable:!1,configurable:!0}),Object.defineProperty(CardObject.prototype,"renderedElement",{get:function(){return this._renderedElement},enumerable:!1,configurable:!0}),CardObject.typeNameProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"type",void 0,void 0,void 0,(function(sender){return sender.getJsonTypeName()})),CardObject.idProperty=new serialization_1.StringProperty(serialization_1.Versions.v1_0,"id"),CardObject.requiresProperty=new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_2,"requires",host_capabilities_1.HostCapabilities,!1,new host_capabilities_1.HostCapabilities),__decorate([serialization_1.property(CardObject.idProperty)],CardObject.prototype,"id",void 0),__decorate([serialization_1.property(CardObject.requiresProperty)],CardObject.prototype,"requires",null),CardObject}(serialization_1.SerializableObject);exports.CardObject=CardObject},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.LoginRequestResponse=exports.ErrorResponse=exports.SuccessResponse=exports.ActivityResponse=exports.ActivityRequestError=exports.ActivityRequestTrigger=void 0,function(ActivityRequestTrigger){ActivityRequestTrigger.Automatic="automatic",ActivityRequestTrigger.Manual="manual"}(exports.ActivityRequestTrigger||(exports.ActivityRequestTrigger={}));var ActivityRequestError=function(code,message){this.code=code,this.message=message};exports.ActivityRequestError=ActivityRequestError;var ActivityResponse=function(request){this.request=request};exports.ActivityResponse=ActivityResponse;var SuccessResponse=function(_super){function SuccessResponse(request,rawContent){var _this=_super.call(this,request)||this;return _this.request=request,_this.rawContent=rawContent,_this}return __extends(SuccessResponse,_super),SuccessResponse}(ActivityResponse);exports.SuccessResponse=SuccessResponse;var ErrorResponse=function(_super){function ErrorResponse(request,error){var _this=_super.call(this,request)||this;return _this.request=request,_this.error=error,_this}return __extends(ErrorResponse,_super),ErrorResponse}(ActivityResponse);exports.ErrorResponse=ErrorResponse;var LoginRequestResponse=function(_super){function LoginRequestResponse(request,_auth){var _this=_super.call(this,request)||this;_this.request=request,_this._auth=_auth;for(var _i=0,_a=_this._auth.buttons;_i<_a.length;_i++){var button=_a[_i];if("signin"===button.type&&void 0!==button.value)try{new URL(button.value),_this.signinButton=button;break}catch(e){}}return _this}return __extends(LoginRequestResponse,_super),Object.defineProperty(LoginRequestResponse.prototype,"tokenExchangeResource",{get:function(){return this._auth.tokenExchangeResource},enumerable:!1,configurable:!0}),LoginRequestResponse}(ActivityResponse);exports.LoginRequestResponse=LoginRequestResponse},function(module,exports,__webpack_require__){var v1=__webpack_require__(424),v4=__webpack_require__(425),uuid=v4;uuid.v1=v1,uuid.v4=v4,module.exports=uuid},function(module,exports){var getRandomValues="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(getRandomValues){var rnds8=new Uint8Array(16);module.exports=function(){return getRandomValues(rnds8),rnds8}}else{var rnds=new Array(16);module.exports=function(){for(var r,i=0;i<16;i++)0==(3&i)&&(r=4294967296*Math.random()),rnds[i]=r>>>((3&i)<<3)&255;return rnds}}},function(module,exports){for(var byteToHex=[],i=0;i<256;++i)byteToHex[i]=(i+256).toString(16).substr(1);module.exports=function(buf,offset){var i=offset||0,bth=byteToHex;return[bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]]].join("")}},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("af",{months:"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),monthsShort:"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),weekdays:"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),weekdaysShort:"Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),weekdaysMin:"So_Ma_Di_Wo_Do_Vr_Sa".split("_"),meridiemParse:/vm|nm/i,isPM:function(input){return/^nm$/i.test(input)},meridiem:function(hours,minutes,isLower){return hours<12?isLower?"vm":"VM":isLower?"nm":"NM"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Vandag om] LT",nextDay:"[Môre om] LT",nextWeek:"dddd [om] LT",lastDay:"[Gister om] LT",lastWeek:"[Laas] dddd [om] LT",sameElse:"L"},relativeTime:{future:"oor %s",past:"%s gelede",s:"'n paar sekondes",ss:"%d sekondes",m:"'n minuut",mm:"%d minute",h:"'n uur",hh:"%d ure",d:"'n dag",dd:"%d dae",M:"'n maand",MM:"%d maande",y:"'n jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(number){return number+(1===number||8===number||number>=20?"ste":"de")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},numberMap={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"},pluralForm=function(n){return 0===n?0:1===n?1:2===n?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5},plurals={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},pluralize=function(u){return function(number,withoutSuffix,string,isFuture){var f=pluralForm(number),str=plurals[u][pluralForm(number)];return 2===f&&(str=str[withoutSuffix?0:1]),str.replace(/%d/i,number)}},months=["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];moment.defineLocale("ar",{months:months,monthsShort:months,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(input){return"م"===input},meridiem:function(hour,minute,isLower){return hour<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:pluralize("s"),ss:pluralize("s"),m:pluralize("m"),mm:pluralize("m"),h:pluralize("h"),hh:pluralize("h"),d:pluralize("d"),dd:pluralize("d"),M:pluralize("M"),MM:pluralize("M"),y:pluralize("y"),yy:pluralize("y")},preparse:function(string){return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(match){return numberMap[match]})).replace(/،/g,",")},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var pluralForm=function(n){return 0===n?0:1===n?1:2===n?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5},plurals={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},pluralize=function(u){return function(number,withoutSuffix,string,isFuture){var f=pluralForm(number),str=plurals[u][pluralForm(number)];return 2===f&&(str=str[withoutSuffix?0:1]),str.replace(/%d/i,number)}},months=["جانفي","فيفري","مارس","أفريل","ماي","جوان","جويلية","أوت","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];moment.defineLocale("ar-dz",{months:months,monthsShort:months,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(input){return"م"===input},meridiem:function(hour,minute,isLower){return hour<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:pluralize("s"),ss:pluralize("s"),m:pluralize("m"),mm:pluralize("m"),h:pluralize("h"),hh:pluralize("h"),d:pluralize("d"),dd:pluralize("d"),M:pluralize("M"),MM:pluralize("M"),y:pluralize("y"),yy:pluralize("y")},postformat:function(string){return string.replace(/,/g,"،")},week:{dow:0,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ar-kw",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:0,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",0:"0"},pluralForm=function(n){return 0===n?0:1===n?1:2===n?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5},plurals={s:["أقل من ثانية","ثانية واحدة",["ثانيتان","ثانيتين"],"%d ثوان","%d ثانية","%d ثانية"],m:["أقل من دقيقة","دقيقة واحدة",["دقيقتان","دقيقتين"],"%d دقائق","%d دقيقة","%d دقيقة"],h:["أقل من ساعة","ساعة واحدة",["ساعتان","ساعتين"],"%d ساعات","%d ساعة","%d ساعة"],d:["أقل من يوم","يوم واحد",["يومان","يومين"],"%d أيام","%d يومًا","%d يوم"],M:["أقل من شهر","شهر واحد",["شهران","شهرين"],"%d أشهر","%d شهرا","%d شهر"],y:["أقل من عام","عام واحد",["عامان","عامين"],"%d أعوام","%d عامًا","%d عام"]},pluralize=function(u){return function(number,withoutSuffix,string,isFuture){var f=pluralForm(number),str=plurals[u][pluralForm(number)];return 2===f&&(str=str[withoutSuffix?0:1]),str.replace(/%d/i,number)}},months=["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"];moment.defineLocale("ar-ly",{months:months,monthsShort:months,weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/‏M/‏YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(input){return"م"===input},meridiem:function(hour,minute,isLower){return hour<12?"ص":"م"},calendar:{sameDay:"[اليوم عند الساعة] LT",nextDay:"[غدًا عند الساعة] LT",nextWeek:"dddd [عند الساعة] LT",lastDay:"[أمس عند الساعة] LT",lastWeek:"dddd [عند الساعة] LT",sameElse:"L"},relativeTime:{future:"بعد %s",past:"منذ %s",s:pluralize("s"),ss:pluralize("s"),m:pluralize("m"),mm:pluralize("m"),h:pluralize("h"),hh:pluralize("h"),d:pluralize("d"),dd:pluralize("d"),M:pluralize("M"),MM:pluralize("M"),y:pluralize("y"),yy:pluralize("y")},preparse:function(string){return string.replace(/،/g,",")},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ar-ma",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},numberMap={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};moment.defineLocale("ar-sa",{months:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/ص|م/,isPM:function(input){return"م"===input},meridiem:function(hour,minute,isLower){return hour<12?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(string){return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(match){return numberMap[match]})).replace(/،/g,",")},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]})).replace(/,/g,"،")},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ar-tn",{months:"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",ss:"%d ثانية",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={1:"-inci",5:"-inci",8:"-inci",70:"-inci",80:"-inci",2:"-nci",7:"-nci",20:"-nci",50:"-nci",3:"-üncü",4:"-üncü",100:"-üncü",6:"-ncı",9:"-uncu",10:"-uncu",30:"-uncu",60:"-ıncı",90:"-ıncı"};moment.defineLocale("az",{months:"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),monthsShort:"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),weekdays:"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),weekdaysShort:"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),weekdaysMin:"Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün saat] LT",nextDay:"[sabah saat] LT",nextWeek:"[gələn həftə] dddd [saat] LT",lastDay:"[dünən] LT",lastWeek:"[keçən həftə] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s sonra",past:"%s əvvəl",s:"bir neçə saniyə",ss:"%d saniyə",m:"bir dəqiqə",mm:"%d dəqiqə",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",M:"bir ay",MM:"%d ay",y:"bir il",yy:"%d il"},meridiemParse:/gecə|səhər|gündüz|axşam/,isPM:function(input){return/^(gündüz|axşam)$/.test(input)},meridiem:function(hour,minute,isLower){return hour<4?"gecə":hour<12?"səhər":hour<17?"gündüz":"axşam"},dayOfMonthOrdinalParse:/\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,ordinal:function(number){if(0===number)return number+"-ıncı";var a=number%10;return number+(suffixes[a]||suffixes[number%100-a]||suffixes[number>=100?100:null])},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function relativeTimeWithPlural(number,withoutSuffix,key){var num,forms;return"m"===key?withoutSuffix?"хвіліна":"хвіліну":"h"===key?withoutSuffix?"гадзіна":"гадзіну":number+" "+(num=+number,forms={ss:withoutSuffix?"секунда_секунды_секунд":"секунду_секунды_секунд",mm:withoutSuffix?"хвіліна_хвіліны_хвілін":"хвіліну_хвіліны_хвілін",hh:withoutSuffix?"гадзіна_гадзіны_гадзін":"гадзіну_гадзіны_гадзін",dd:"дзень_дні_дзён",MM:"месяц_месяцы_месяцаў",yy:"год_гады_гадоў"}[key].split("_"),num%10==1&&num%100!=11?forms[0]:num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2])}moment.defineLocale("be",{months:{format:"студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),standalone:"студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")},monthsShort:"студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),weekdays:{format:"нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),standalone:"нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),isFormat:/\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/},weekdaysShort:"нд_пн_ат_ср_чц_пт_сб".split("_"),weekdaysMin:"нд_пн_ат_ср_чц_пт_сб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., HH:mm",LLLL:"dddd, D MMMM YYYY г., HH:mm"},calendar:{sameDay:"[Сёння ў] LT",nextDay:"[Заўтра ў] LT",lastDay:"[Учора ў] LT",nextWeek:function(){return"[У] dddd [ў] LT"},lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return"[У мінулую] dddd [ў] LT";case 1:case 2:case 4:return"[У мінулы] dddd [ў] LT"}},sameElse:"L"},relativeTime:{future:"праз %s",past:"%s таму",s:"некалькі секунд",m:relativeTimeWithPlural,mm:relativeTimeWithPlural,h:relativeTimeWithPlural,hh:relativeTimeWithPlural,d:"дзень",dd:relativeTimeWithPlural,M:"месяц",MM:relativeTimeWithPlural,y:"год",yy:relativeTimeWithPlural},meridiemParse:/ночы|раніцы|дня|вечара/,isPM:function(input){return/^(дня|вечара)$/.test(input)},meridiem:function(hour,minute,isLower){return hour<4?"ночы":hour<12?"раніцы":hour<17?"дня":"вечара"},dayOfMonthOrdinalParse:/\d{1,2}-(і|ы|га)/,ordinal:function(number,period){switch(period){case"M":case"d":case"DDD":case"w":case"W":return number%10!=2&&number%10!=3||number%100==12||number%100==13?number+"-ы":number+"-і";case"D":return number+"-га";default:return number}},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("bg",{months:"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),monthsShort:"яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),weekdays:"неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),weekdaysShort:"нед_пон_вто_сря_чет_пет_съб".split("_"),weekdaysMin:"нд_пн_вт_ср_чт_пт_сб".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[Днес в] LT",nextDay:"[Утре в] LT",nextWeek:"dddd [в] LT",lastDay:"[Вчера в] LT",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return"[Миналата] dddd [в] LT";case 1:case 2:case 4:case 5:return"[Миналия] dddd [в] LT"}},sameElse:"L"},relativeTime:{future:"след %s",past:"преди %s",s:"няколко секунди",ss:"%d секунди",m:"минута",mm:"%d минути",h:"час",hh:"%d часа",d:"ден",dd:"%d дена",w:"седмица",ww:"%d седмици",M:"месец",MM:"%d месеца",y:"година",yy:"%d години"},dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(number){var lastDigit=number%10,last2Digits=number%100;return 0===number?number+"-ев":0===last2Digits?number+"-ен":last2Digits>10&&last2Digits<20?number+"-ти":1===lastDigit?number+"-ви":2===lastDigit?number+"-ри":7===lastDigit||8===lastDigit?number+"-ми":number+"-ти"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("bm",{months:"Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split("_"),monthsShort:"Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split("_"),weekdays:"Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),weekdaysShort:"Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),weekdaysMin:"Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"MMMM [tile] D [san] YYYY",LLL:"MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",LLLL:"dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"},calendar:{sameDay:"[Bi lɛrɛ] LT",nextDay:"[Sini lɛrɛ] LT",nextWeek:"dddd [don lɛrɛ] LT",lastDay:"[Kunu lɛrɛ] LT",lastWeek:"dddd [tɛmɛnen lɛrɛ] LT",sameElse:"L"},relativeTime:{future:"%s kɔnɔ",past:"a bɛ %s bɔ",s:"sanga dama dama",ss:"sekondi %d",m:"miniti kelen",mm:"miniti %d",h:"lɛrɛ kelen",hh:"lɛrɛ %d",d:"tile kelen",dd:"tile %d",M:"kalo kelen",MM:"kalo %d",y:"san kelen",yy:"san %d"},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"১",2:"২",3:"৩",4:"৪",5:"৫",6:"৬",7:"৭",8:"৮",9:"৯",0:"০"},numberMap={"১":"1","২":"2","৩":"3","৪":"4","৫":"5","৬":"6","৭":"7","৮":"8","৯":"9","০":"0"};moment.defineLocale("bn",{months:"জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),monthsShort:"জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),weekdays:"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),weekdaysShort:"রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),weekdaysMin:"রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),longDateFormat:{LT:"A h:mm সময়",LTS:"A h:mm:ss সময়",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm সময়",LLLL:"dddd, D MMMM YYYY, A h:mm সময়"},calendar:{sameDay:"[আজ] LT",nextDay:"[আগামীকাল] LT",nextWeek:"dddd, LT",lastDay:"[গতকাল] LT",lastWeek:"[গত] dddd, LT",sameElse:"L"},relativeTime:{future:"%s পরে",past:"%s আগে",s:"কয়েক সেকেন্ড",ss:"%d সেকেন্ড",m:"এক মিনিট",mm:"%d মিনিট",h:"এক ঘন্টা",hh:"%d ঘন্টা",d:"এক দিন",dd:"%d দিন",M:"এক মাস",MM:"%d মাস",y:"এক বছর",yy:"%d বছর"},preparse:function(string){return string.replace(/[১২৩৪৫৬৭৮৯০]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/রাত|সকাল|দুপুর|বিকাল|রাত/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"রাত"===meridiem&&hour>=4||"দুপুর"===meridiem&&hour<5||"বিকাল"===meridiem?hour+12:hour},meridiem:function(hour,minute,isLower){return hour<4?"রাত":hour<10?"সকাল":hour<17?"দুপুর":hour<20?"বিকাল":"রাত"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"১",2:"২",3:"৩",4:"৪",5:"৫",6:"৬",7:"৭",8:"৮",9:"৯",0:"০"},numberMap={"১":"1","২":"2","৩":"3","৪":"4","৫":"5","৬":"6","৭":"7","৮":"8","৯":"9","০":"0"};moment.defineLocale("bn-bd",{months:"জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),monthsShort:"জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),weekdays:"রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),weekdaysShort:"রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),weekdaysMin:"রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),longDateFormat:{LT:"A h:mm সময়",LTS:"A h:mm:ss সময়",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm সময়",LLLL:"dddd, D MMMM YYYY, A h:mm সময়"},calendar:{sameDay:"[আজ] LT",nextDay:"[আগামীকাল] LT",nextWeek:"dddd, LT",lastDay:"[গতকাল] LT",lastWeek:"[গত] dddd, LT",sameElse:"L"},relativeTime:{future:"%s পরে",past:"%s আগে",s:"কয়েক সেকেন্ড",ss:"%d সেকেন্ড",m:"এক মিনিট",mm:"%d মিনিট",h:"এক ঘন্টা",hh:"%d ঘন্টা",d:"এক দিন",dd:"%d দিন",M:"এক মাস",MM:"%d মাস",y:"এক বছর",yy:"%d বছর"},preparse:function(string){return string.replace(/[১২৩৪৫৬৭৮৯০]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"রাত"===meridiem?hour<4?hour:hour+12:"ভোর"===meridiem||"সকাল"===meridiem?hour:"দুপুর"===meridiem?hour>=3?hour:hour+12:"বিকাল"===meridiem||"সন্ধ্যা"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"রাত":hour<6?"ভোর":hour<12?"সকাল":hour<15?"দুপুর":hour<18?"বিকাল":hour<20?"সন্ধ্যা":"রাত"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"༡",2:"༢",3:"༣",4:"༤",5:"༥",6:"༦",7:"༧",8:"༨",9:"༩",0:"༠"},numberMap={"༡":"1","༢":"2","༣":"3","༤":"4","༥":"5","༦":"6","༧":"7","༨":"8","༩":"9","༠":"0"};moment.defineLocale("bo",{months:"ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),monthsShort:"ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12".split("_"),monthsShortRegex:/^(ཟླ་\d{1,2})/,monthsParseExact:!0,weekdays:"གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),weekdaysShort:"ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),weekdaysMin:"ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[དི་རིང] LT",nextDay:"[སང་ཉིན] LT",nextWeek:"[བདུན་ཕྲག་རྗེས་མ], LT",lastDay:"[ཁ་སང] LT",lastWeek:"[བདུན་ཕྲག་མཐའ་མ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ལ་",past:"%s སྔན་ལ",s:"ལམ་སང",ss:"%d སྐར་ཆ།",m:"སྐར་མ་གཅིག",mm:"%d སྐར་མ",h:"ཆུ་ཚོད་གཅིག",hh:"%d ཆུ་ཚོད",d:"ཉིན་གཅིག",dd:"%d ཉིན་",M:"ཟླ་བ་གཅིག",MM:"%d ཟླ་བ",y:"ལོ་གཅིག",yy:"%d ལོ"},preparse:function(string){return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"མཚན་མོ"===meridiem&&hour>=4||"ཉིན་གུང"===meridiem&&hour<5||"དགོང་དག"===meridiem?hour+12:hour},meridiem:function(hour,minute,isLower){return hour<4?"མཚན་མོ":hour<10?"ཞོགས་ཀས":hour<17?"ཉིན་གུང":hour<20?"དགོང་དག":"མཚན་མོ"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function relativeTimeWithMutation(number,withoutSuffix,key){return number+" "+function(text,number){return 2===number?function(text){var mutationTable={m:"v",b:"v",d:"z"};return void 0===mutationTable[text.charAt(0)]?text:mutationTable[text.charAt(0)]+text.substring(1)}(text):text}({mm:"munutenn",MM:"miz",dd:"devezh"}[key],number)}var monthsParse=[/^gen/i,/^c[ʼ\']hwe/i,/^meu/i,/^ebr/i,/^mae/i,/^(mez|eve)/i,/^gou/i,/^eos/i,/^gwe/i,/^her/i,/^du/i,/^ker/i],monthsRegex=/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,minWeekdaysParse=[/^Su/i,/^Lu/i,/^Me([^r]|$)/i,/^Mer/i,/^Ya/i,/^Gw/i,/^Sa/i];moment.defineLocale("br",{months:"Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),monthsShort:"Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),weekdays:"Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn".split("_"),weekdaysShort:"Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),weekdaysMin:"Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),weekdaysParse:minWeekdaysParse,fullWeekdaysParse:[/^sul/i,/^lun/i,/^meurzh/i,/^merc[ʼ\']her/i,/^yaou/i,/^gwener/i,/^sadorn/i],shortWeekdaysParse:[/^Sul/i,/^Lun/i,/^Meu/i,/^Mer/i,/^Yao/i,/^Gwe/i,/^Sad/i],minWeekdaysParse:minWeekdaysParse,monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,monthsShortStrictRegex:/^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [a viz] MMMM YYYY",LLL:"D [a viz] MMMM YYYY HH:mm",LLLL:"dddd, D [a viz] MMMM YYYY HH:mm"},calendar:{sameDay:"[Hiziv da] LT",nextDay:"[Warcʼhoazh da] LT",nextWeek:"dddd [da] LT",lastDay:"[Decʼh da] LT",lastWeek:"dddd [paset da] LT",sameElse:"L"},relativeTime:{future:"a-benn %s",past:"%s ʼzo",s:"un nebeud segondennoù",ss:"%d eilenn",m:"ur vunutenn",mm:relativeTimeWithMutation,h:"un eur",hh:"%d eur",d:"un devezh",dd:relativeTimeWithMutation,M:"ur miz",MM:relativeTimeWithMutation,y:"ur bloaz",yy:function(number){switch(function lastNumber(number){return number>9?lastNumber(number%10):number}(number)){case 1:case 3:case 4:case 5:case 9:return number+" bloaz";default:return number+" vloaz"}}},dayOfMonthOrdinalParse:/\d{1,2}(añ|vet)/,ordinal:function(number){return number+(1===number?"añ":"vet")},week:{dow:1,doy:4},meridiemParse:/a.m.|g.m./,isPM:function(token){return"g.m."===token},meridiem:function(hour,minute,isLower){return hour<12?"a.m.":"g.m."}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function translate(number,withoutSuffix,key){var result=number+" ";switch(key){case"ss":return result+=1===number?"sekunda":2===number||3===number||4===number?"sekunde":"sekundi";case"m":return withoutSuffix?"jedna minuta":"jedne minute";case"mm":return result+=1===number?"minuta":2===number||3===number||4===number?"minute":"minuta";case"h":return withoutSuffix?"jedan sat":"jednog sata";case"hh":return result+=1===number?"sat":2===number||3===number||4===number?"sata":"sati";case"dd":return result+=1===number?"dan":"dana";case"MM":return result+=1===number?"mjesec":2===number||3===number||4===number?"mjeseca":"mjeseci";case"yy":return result+=1===number?"godina":2===number||3===number||4===number?"godine":"godina"}}moment.defineLocale("bs",{months:"januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[jučer u] LT",lastWeek:function(){switch(this.day()){case 0:case 3:return"[prošlu] dddd [u] LT";case 6:return"[prošle] [subote] [u] LT";case 1:case 2:case 4:case 5:return"[prošli] dddd [u] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"par sekundi",ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:"dan",dd:translate,M:"mjesec",MM:translate,y:"godinu",yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ca",{months:{standalone:"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),format:"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),isFormat:/D[oD]?(\s)+MMMM/},monthsShort:"gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),monthsParseExact:!0,weekdays:"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),weekdaysShort:"dg._dl._dt._dc._dj._dv._ds.".split("_"),weekdaysMin:"dg_dl_dt_dc_dj_dv_ds".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [de] YYYY",ll:"D MMM YYYY",LLL:"D MMMM [de] YYYY [a les] H:mm",lll:"D MMM YYYY, H:mm",LLLL:"dddd D MMMM [de] YYYY [a les] H:mm",llll:"ddd D MMM YYYY, H:mm"},calendar:{sameDay:function(){return"[avui a "+(1!==this.hours()?"les":"la")+"] LT"},nextDay:function(){return"[demà a "+(1!==this.hours()?"les":"la")+"] LT"},nextWeek:function(){return"dddd [a "+(1!==this.hours()?"les":"la")+"] LT"},lastDay:function(){return"[ahir a "+(1!==this.hours()?"les":"la")+"] LT"},lastWeek:function(){return"[el] dddd [passat a "+(1!==this.hours()?"les":"la")+"] LT"},sameElse:"L"},relativeTime:{future:"d'aquí %s",past:"fa %s",s:"uns segons",ss:"%d segons",m:"un minut",mm:"%d minuts",h:"una hora",hh:"%d hores",d:"un dia",dd:"%d dies",M:"un mes",MM:"%d mesos",y:"un any",yy:"%d anys"},dayOfMonthOrdinalParse:/\d{1,2}(r|n|t|è|a)/,ordinal:function(number,period){var output=1===number?"r":2===number?"n":3===number?"r":4===number?"t":"è";return"w"!==period&&"W"!==period||(output="a"),number+output},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var months={format:"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"),standalone:"ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince".split("_")},monthsShort="led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"),monthsParse=[/^led/i,/^úno/i,/^bře/i,/^dub/i,/^kvě/i,/^(čvn|červen$|června)/i,/^(čvc|červenec|července)/i,/^srp/i,/^zář/i,/^říj/i,/^lis/i,/^pro/i],monthsRegex=/^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;function plural(n){return n>1&&n<5&&1!=~~(n/10)}function translate(number,withoutSuffix,key,isFuture){var result=number+" ";switch(key){case"s":return withoutSuffix||isFuture?"pár sekund":"pár sekundami";case"ss":return withoutSuffix||isFuture?result+(plural(number)?"sekundy":"sekund"):result+"sekundami";case"m":return withoutSuffix?"minuta":isFuture?"minutu":"minutou";case"mm":return withoutSuffix||isFuture?result+(plural(number)?"minuty":"minut"):result+"minutami";case"h":return withoutSuffix?"hodina":isFuture?"hodinu":"hodinou";case"hh":return withoutSuffix||isFuture?result+(plural(number)?"hodiny":"hodin"):result+"hodinami";case"d":return withoutSuffix||isFuture?"den":"dnem";case"dd":return withoutSuffix||isFuture?result+(plural(number)?"dny":"dní"):result+"dny";case"M":return withoutSuffix||isFuture?"měsíc":"měsícem";case"MM":return withoutSuffix||isFuture?result+(plural(number)?"měsíce":"měsíců"):result+"měsíci";case"y":return withoutSuffix||isFuture?"rok":"rokem";case"yy":return withoutSuffix||isFuture?result+(plural(number)?"roky":"let"):result+"lety"}}moment.defineLocale("cs",{months:months,monthsShort:monthsShort,monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,monthsShortStrictRegex:/^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),weekdaysShort:"ne_po_út_st_čt_pá_so".split("_"),weekdaysMin:"ne_po_út_st_čt_pá_so".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd D. MMMM YYYY H:mm",l:"D. M. YYYY"},calendar:{sameDay:"[dnes v] LT",nextDay:"[zítra v] LT",nextWeek:function(){switch(this.day()){case 0:return"[v neděli v] LT";case 1:case 2:return"[v] dddd [v] LT";case 3:return"[ve středu v] LT";case 4:return"[ve čtvrtek v] LT";case 5:return"[v pátek v] LT";case 6:return"[v sobotu v] LT"}},lastDay:"[včera v] LT",lastWeek:function(){switch(this.day()){case 0:return"[minulou neděli v] LT";case 1:case 2:return"[minulé] dddd [v] LT";case 3:return"[minulou středu v] LT";case 4:case 5:return"[minulý] dddd [v] LT";case 6:return"[minulou sobotu v] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"před %s",s:translate,ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("cv",{months:"кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),monthsShort:"кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),weekdays:"вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),weekdaysShort:"выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),weekdaysMin:"вр_тн_ыт_юн_кҫ_эр_шм".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",LLL:"YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",LLLL:"dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"},calendar:{sameDay:"[Паян] LT [сехетре]",nextDay:"[Ыран] LT [сехетре]",lastDay:"[Ӗнер] LT [сехетре]",nextWeek:"[Ҫитес] dddd LT [сехетре]",lastWeek:"[Иртнӗ] dddd LT [сехетре]",sameElse:"L"},relativeTime:{future:function(output){return output+(/сехет$/i.exec(output)?"рен":/ҫул$/i.exec(output)?"тан":"ран")},past:"%s каялла",s:"пӗр-ик ҫеккунт",ss:"%d ҫеккунт",m:"пӗр минут",mm:"%d минут",h:"пӗр сехет",hh:"%d сехет",d:"пӗр кун",dd:"%d кун",M:"пӗр уйӑх",MM:"%d уйӑх",y:"пӗр ҫул",yy:"%d ҫул"},dayOfMonthOrdinalParse:/\d{1,2}-мӗш/,ordinal:"%d-мӗш",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("cy",{months:"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),monthsShort:"Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),weekdays:"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),weekdaysShort:"Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),weekdaysMin:"Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Heddiw am] LT",nextDay:"[Yfory am] LT",nextWeek:"dddd [am] LT",lastDay:"[Ddoe am] LT",lastWeek:"dddd [diwethaf am] LT",sameElse:"L"},relativeTime:{future:"mewn %s",past:"%s yn ôl",s:"ychydig eiliadau",ss:"%d eiliad",m:"munud",mm:"%d munud",h:"awr",hh:"%d awr",d:"diwrnod",dd:"%d diwrnod",M:"mis",MM:"%d mis",y:"blwyddyn",yy:"%d flynedd"},dayOfMonthOrdinalParse:/\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,ordinal:function(number){var output="";return number>20?output=40===number||50===number||60===number||80===number||100===number?"fed":"ain":number>0&&(output=["","af","il","ydd","ydd","ed","ed","ed","fed","fed","fed","eg","fed","eg","eg","fed","eg","eg","fed","eg","fed"][number]),number+output},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("da",{months:"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),monthsShort:"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),weekdays:"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),weekdaysShort:"søn_man_tir_ons_tor_fre_lør".split("_"),weekdaysMin:"sø_ma_ti_on_to_fr_lø".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd [d.] D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[i dag kl.] LT",nextDay:"[i morgen kl.] LT",nextWeek:"på dddd [kl.] LT",lastDay:"[i går kl.] LT",lastWeek:"[i] dddd[s kl.] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s siden",s:"få sekunder",ss:"%d sekunder",m:"et minut",mm:"%d minutter",h:"en time",hh:"%d timer",d:"en dag",dd:"%d dage",M:"en måned",MM:"%d måneder",y:"et år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[number+" Tage",number+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[number+" Monate",number+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[number+" Jahre",number+" Jahren"]};return withoutSuffix?format[key][0]:format[key][1]}moment.defineLocale("de",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:processRelativeTime,mm:"%d Minuten",h:processRelativeTime,hh:"%d Stunden",d:processRelativeTime,dd:processRelativeTime,w:processRelativeTime,ww:"%d Wochen",M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[number+" Tage",number+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[number+" Monate",number+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[number+" Jahre",number+" Jahren"]};return withoutSuffix?format[key][0]:format[key][1]}moment.defineLocale("de-at",{months:"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:processRelativeTime,mm:"%d Minuten",h:processRelativeTime,hh:"%d Stunden",d:processRelativeTime,dd:processRelativeTime,w:processRelativeTime,ww:"%d Wochen",M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[number+" Tage",number+" Tagen"],w:["eine Woche","einer Woche"],M:["ein Monat","einem Monat"],MM:[number+" Monate",number+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[number+" Jahre",number+" Jahren"]};return withoutSuffix?format[key][0]:format[key][1]}moment.defineLocale("de-ch",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[heute um] LT [Uhr]",sameElse:"L",nextDay:"[morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",ss:"%d Sekunden",m:processRelativeTime,mm:"%d Minuten",h:processRelativeTime,hh:"%d Stunden",d:processRelativeTime,dd:processRelativeTime,w:processRelativeTime,ww:"%d Wochen",M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var months=["ޖެނުއަރީ","ފެބްރުއަރީ","މާރިޗު","އޭޕްރީލު","މޭ","ޖޫން","ޖުލައި","އޯގަސްޓު","ސެޕްޓެމްބަރު","އޮކްޓޯބަރު","ނޮވެމްބަރު","ޑިސެމްބަރު"],weekdays=["އާދިއްތަ","ހޯމަ","އަންގާރަ","ބުދަ","ބުރާސްފަތި","ހުކުރު","ހޮނިހިރު"];moment.defineLocale("dv",{months:months,monthsShort:months,weekdays:weekdays,weekdaysShort:weekdays,weekdaysMin:"އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"D/M/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},meridiemParse:/މކ|މފ/,isPM:function(input){return"މފ"===input},meridiem:function(hour,minute,isLower){return hour<12?"މކ":"މފ"},calendar:{sameDay:"[މިއަދު] LT",nextDay:"[މާދަމާ] LT",nextWeek:"dddd LT",lastDay:"[އިއްޔެ] LT",lastWeek:"[ފާއިތުވި] dddd LT",sameElse:"L"},relativeTime:{future:"ތެރޭގައި %s",past:"ކުރިން %s",s:"ސިކުންތުކޮޅެއް",ss:"d% ސިކުންތު",m:"މިނިޓެއް",mm:"މިނިޓު %d",h:"ގަޑިއިރެއް",hh:"ގަޑިއިރު %d",d:"ދުވަހެއް",dd:"ދުވަސް %d",M:"މަހެއް",MM:"މަސް %d",y:"އަހަރެއް",yy:"އަހަރު %d"},preparse:function(string){return string.replace(/،/g,",")},postformat:function(string){return string.replace(/,/g,"،")},week:{dow:7,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("el",{monthsNominativeEl:"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),monthsGenitiveEl:"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),months:function(momentToFormat,format){return momentToFormat?"string"==typeof format&&/D/.test(format.substring(0,format.indexOf("MMMM")))?this._monthsGenitiveEl[momentToFormat.month()]:this._monthsNominativeEl[momentToFormat.month()]:this._monthsNominativeEl},monthsShort:"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),weekdays:"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),weekdaysShort:"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),weekdaysMin:"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),meridiem:function(hours,minutes,isLower){return hours>11?isLower?"μμ":"ΜΜ":isLower?"πμ":"ΠΜ"},isPM:function(input){return"μ"===(input+"").toLowerCase()[0]},meridiemParse:/[ΠΜ]\.?Μ?\.?/i,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendarEl:{sameDay:"[Σήμερα {}] LT",nextDay:"[Αύριο {}] LT",nextWeek:"dddd [{}] LT",lastDay:"[Χθες {}] LT",lastWeek:function(){switch(this.day()){case 6:return"[το προηγούμενο] dddd [{}] LT";default:return"[την προηγούμενη] dddd [{}] LT"}},sameElse:"L"},calendar:function(key,mom){var input,output=this._calendarEl[key],hours=mom&&mom.hours();return input=output,("undefined"!=typeof Function&&input instanceof Function||"[object Function]"===Object.prototype.toString.call(input))&&(output=output.apply(mom)),output.replace("{}",hours%12==1?"στη":"στις")},relativeTime:{future:"σε %s",past:"%s πριν",s:"λίγα δευτερόλεπτα",ss:"%d δευτερόλεπτα",m:"ένα λεπτό",mm:"%d λεπτά",h:"μία ώρα",hh:"%d ώρες",d:"μία μέρα",dd:"%d μέρες",M:"ένας μήνας",MM:"%d μήνες",y:"ένας χρόνος",yy:"%d χρόνια"},dayOfMonthOrdinalParse:/\d{1,2}η/,ordinal:"%dη",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-au",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:0,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-ca",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"YYYY-MM-DD",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-gb",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-ie",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-il",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-in",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-nz",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("en-sg",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("eo",{months:"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),monthsShort:"jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec".split("_"),weekdays:"dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split("_"),weekdaysShort:"dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),weekdaysMin:"di_lu_ma_me_ĵa_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"[la] D[-an de] MMMM, YYYY",LLL:"[la] D[-an de] MMMM, YYYY HH:mm",LLLL:"dddd[n], [la] D[-an de] MMMM, YYYY HH:mm",llll:"ddd, [la] D[-an de] MMM, YYYY HH:mm"},meridiemParse:/[ap]\.t\.m/i,isPM:function(input){return"p"===input.charAt(0).toLowerCase()},meridiem:function(hours,minutes,isLower){return hours>11?isLower?"p.t.m.":"P.T.M.":isLower?"a.t.m.":"A.T.M."},calendar:{sameDay:"[Hodiaŭ je] LT",nextDay:"[Morgaŭ je] LT",nextWeek:"dddd[n je] LT",lastDay:"[Hieraŭ je] LT",lastWeek:"[pasintan] dddd[n je] LT",sameElse:"L"},relativeTime:{future:"post %s",past:"antaŭ %s",s:"kelkaj sekundoj",ss:"%d sekundoj",m:"unu minuto",mm:"%d minutoj",h:"unu horo",hh:"%d horoj",d:"unu tago",dd:"%d tagoj",M:"unu monato",MM:"%d monatoj",y:"unu jaro",yy:"%d jaroj"},dayOfMonthOrdinalParse:/\d{1,2}a/,ordinal:"%da",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortDot="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),monthsShort="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],monthsRegex=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;moment.defineLocale("es",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShort[m.month()]:monthsShortDot[m.month()]:monthsShortDot},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4},invalidDate:"Fecha inválida"})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortDot="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),monthsShort="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],monthsRegex=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;moment.defineLocale("es-do",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShort[m.month()]:monthsShortDot[m.month()]:monthsShortDot},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY h:mm A",LLLL:"dddd, D [de] MMMM [de] YYYY h:mm A"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortDot="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),monthsShort="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],monthsRegex=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;moment.defineLocale("es-mx",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShort[m.month()]:monthsShortDot[m.month()]:monthsShortDot},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:0,doy:4},invalidDate:"Fecha inválida"})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortDot="ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),monthsShort="ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),monthsParse=[/^ene/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i],monthsRegex=/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;moment.defineLocale("es-us",{months:"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShort[m.month()]:monthsShortDot[m.month()]:monthsShortDot},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,monthsShortStrictRegex:/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),weekdaysShort:"dom._lun._mar._mié._jue._vie._sáb.".split("_"),weekdaysMin:"do_lu_ma_mi_ju_vi_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"MM/DD/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY h:mm A",LLLL:"dddd, D [de] MMMM [de] YYYY h:mm A"},calendar:{sameDay:function(){return"[hoy a la"+(1!==this.hours()?"s":"")+"] LT"},nextDay:function(){return"[mañana a la"+(1!==this.hours()?"s":"")+"] LT"},nextWeek:function(){return"dddd [a la"+(1!==this.hours()?"s":"")+"] LT"},lastDay:function(){return"[ayer a la"+(1!==this.hours()?"s":"")+"] LT"},lastWeek:function(){return"[el] dddd [pasado a la"+(1!==this.hours()?"s":"")+"] LT"},sameElse:"L"},relativeTime:{future:"en %s",past:"hace %s",s:"unos segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"una hora",hh:"%d horas",d:"un día",dd:"%d días",w:"una semana",ww:"%d semanas",M:"un mes",MM:"%d meses",y:"un año",yy:"%d años"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={s:["mõne sekundi","mõni sekund","paar sekundit"],ss:[number+"sekundi",number+"sekundit"],m:["ühe minuti","üks minut"],mm:[number+" minuti",number+" minutit"],h:["ühe tunni","tund aega","üks tund"],hh:[number+" tunni",number+" tundi"],d:["ühe päeva","üks päev"],M:["kuu aja","kuu aega","üks kuu"],MM:[number+" kuu",number+" kuud"],y:["ühe aasta","aasta","üks aasta"],yy:[number+" aasta",number+" aastat"]};return withoutSuffix?format[key][2]?format[key][2]:format[key][1]:isFuture?format[key][0]:format[key][1]}moment.defineLocale("et",{months:"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),monthsShort:"jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),weekdays:"pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),weekdaysShort:"P_E_T_K_N_R_L".split("_"),weekdaysMin:"P_E_T_K_N_R_L".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[Täna,] LT",nextDay:"[Homme,] LT",nextWeek:"[Järgmine] dddd LT",lastDay:"[Eile,] LT",lastWeek:"[Eelmine] dddd LT",sameElse:"L"},relativeTime:{future:"%s pärast",past:"%s tagasi",s:processRelativeTime,ss:processRelativeTime,m:processRelativeTime,mm:processRelativeTime,h:processRelativeTime,hh:processRelativeTime,d:processRelativeTime,dd:"%d päeva",M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("eu",{months:"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),monthsShort:"urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),monthsParseExact:!0,weekdays:"igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),weekdaysShort:"ig._al._ar._az._og._ol._lr.".split("_"),weekdaysMin:"ig_al_ar_az_og_ol_lr".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY[ko] MMMM[ren] D[a]",LLL:"YYYY[ko] MMMM[ren] D[a] HH:mm",LLLL:"dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",l:"YYYY-M-D",ll:"YYYY[ko] MMM D[a]",lll:"YYYY[ko] MMM D[a] HH:mm",llll:"ddd, YYYY[ko] MMM D[a] HH:mm"},calendar:{sameDay:"[gaur] LT[etan]",nextDay:"[bihar] LT[etan]",nextWeek:"dddd LT[etan]",lastDay:"[atzo] LT[etan]",lastWeek:"[aurreko] dddd LT[etan]",sameElse:"L"},relativeTime:{future:"%s barru",past:"duela %s",s:"segundo batzuk",ss:"%d segundo",m:"minutu bat",mm:"%d minutu",h:"ordu bat",hh:"%d ordu",d:"egun bat",dd:"%d egun",M:"hilabete bat",MM:"%d hilabete",y:"urte bat",yy:"%d urte"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"۱",2:"۲",3:"۳",4:"۴",5:"۵",6:"۶",7:"۷",8:"۸",9:"۹",0:"۰"},numberMap={"۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9","۰":"0"};moment.defineLocale("fa",{months:"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),monthsShort:"ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),weekdays:"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),weekdaysShort:"یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),weekdaysMin:"ی_د_س_چ_پ_ج_ش".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/قبل از ظهر|بعد از ظهر/,isPM:function(input){return/بعد از ظهر/.test(input)},meridiem:function(hour,minute,isLower){return hour<12?"قبل از ظهر":"بعد از ظهر"},calendar:{sameDay:"[امروز ساعت] LT",nextDay:"[فردا ساعت] LT",nextWeek:"dddd [ساعت] LT",lastDay:"[دیروز ساعت] LT",lastWeek:"dddd [پیش] [ساعت] LT",sameElse:"L"},relativeTime:{future:"در %s",past:"%s پیش",s:"چند ثانیه",ss:"%d ثانیه",m:"یک دقیقه",mm:"%d دقیقه",h:"یک ساعت",hh:"%d ساعت",d:"یک روز",dd:"%d روز",M:"یک ماه",MM:"%d ماه",y:"یک سال",yy:"%d سال"},preparse:function(string){return string.replace(/[۰-۹]/g,(function(match){return numberMap[match]})).replace(/،/g,",")},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]})).replace(/,/g,"،")},dayOfMonthOrdinalParse:/\d{1,2}م/,ordinal:"%dم",week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var numbersPast="nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "),numbersFuture=["nolla","yhden","kahden","kolmen","neljän","viiden","kuuden",numbersPast[7],numbersPast[8],numbersPast[9]];function translate(number,withoutSuffix,key,isFuture){var result="";switch(key){case"s":return isFuture?"muutaman sekunnin":"muutama sekunti";case"ss":result=isFuture?"sekunnin":"sekuntia";break;case"m":return isFuture?"minuutin":"minuutti";case"mm":result=isFuture?"minuutin":"minuuttia";break;case"h":return isFuture?"tunnin":"tunti";case"hh":result=isFuture?"tunnin":"tuntia";break;case"d":return isFuture?"päivän":"päivä";case"dd":result=isFuture?"päivän":"päivää";break;case"M":return isFuture?"kuukauden":"kuukausi";case"MM":result=isFuture?"kuukauden":"kuukautta";break;case"y":return isFuture?"vuoden":"vuosi";case"yy":result=isFuture?"vuoden":"vuotta"}return result=function(number,isFuture){return number<10?isFuture?numbersFuture[number]:numbersPast[number]:number}(number,isFuture)+" "+result}moment.defineLocale("fi",{months:"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),monthsShort:"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),weekdays:"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),weekdaysShort:"su_ma_ti_ke_to_pe_la".split("_"),weekdaysMin:"su_ma_ti_ke_to_pe_la".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD.MM.YYYY",LL:"Do MMMM[ta] YYYY",LLL:"Do MMMM[ta] YYYY, [klo] HH.mm",LLLL:"dddd, Do MMMM[ta] YYYY, [klo] HH.mm",l:"D.M.YYYY",ll:"Do MMM YYYY",lll:"Do MMM YYYY, [klo] HH.mm",llll:"ddd, Do MMM YYYY, [klo] HH.mm"},calendar:{sameDay:"[tänään] [klo] LT",nextDay:"[huomenna] [klo] LT",nextWeek:"dddd [klo] LT",lastDay:"[eilen] [klo] LT",lastWeek:"[viime] dddd[na] [klo] LT",sameElse:"L"},relativeTime:{future:"%s päästä",past:"%s sitten",s:translate,ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("fil",{months:"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),monthsShort:"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),weekdays:"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),weekdaysShort:"Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),weekdaysMin:"Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"MM/D/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY HH:mm",LLLL:"dddd, MMMM DD, YYYY HH:mm"},calendar:{sameDay:"LT [ngayong araw]",nextDay:"[Bukas ng] LT",nextWeek:"LT [sa susunod na] dddd",lastDay:"LT [kahapon]",lastWeek:"LT [noong nakaraang] dddd",sameElse:"L"},relativeTime:{future:"sa loob ng %s",past:"%s ang nakalipas",s:"ilang segundo",ss:"%d segundo",m:"isang minuto",mm:"%d minuto",h:"isang oras",hh:"%d oras",d:"isang araw",dd:"%d araw",M:"isang buwan",MM:"%d buwan",y:"isang taon",yy:"%d taon"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(number){return number},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("fo",{months:"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),weekdays:"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),weekdaysShort:"sun_mán_týs_mik_hós_frí_ley".split("_"),weekdaysMin:"su_má_tý_mi_hó_fr_le".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D. MMMM, YYYY HH:mm"},calendar:{sameDay:"[Í dag kl.] LT",nextDay:"[Í morgin kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[Í gjár kl.] LT",lastWeek:"[síðstu] dddd [kl] LT",sameElse:"L"},relativeTime:{future:"um %s",past:"%s síðani",s:"fá sekund",ss:"%d sekundir",m:"ein minuttur",mm:"%d minuttir",h:"ein tími",hh:"%d tímar",d:"ein dagur",dd:"%d dagar",M:"ein mánaður",MM:"%d mánaðir",y:"eitt ár",yy:"%d ár"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsRegex=/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,monthsParse=[/^janv/i,/^févr/i,/^mars/i,/^avr/i,/^mai/i,/^juin/i,/^juil/i,/^août/i,/^sept/i,/^oct/i,/^nov/i,/^déc/i];moment.defineLocale("fr",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,monthsShortStrictRegex:/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",w:"une semaine",ww:"%d semaines",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|)/,ordinal:function(number,period){switch(period){case"D":return number+(1===number?"er":"");default:case"M":case"Q":case"DDD":case"d":return number+(1===number?"er":"e");case"w":case"W":return number+(1===number?"re":"e")}},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("fr-ca",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsParseExact:!0,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,ordinal:function(number,period){switch(period){default:case"M":case"Q":case"D":case"DDD":case"d":return number+(1===number?"er":"e");case"w":case"W":return number+(1===number?"re":"e")}}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("fr-ch",{months:"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),monthsShort:"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),monthsParseExact:!0,weekdays:"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),weekdaysShort:"dim._lun._mar._mer._jeu._ven._sam.".split("_"),weekdaysMin:"di_lu_ma_me_je_ve_sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Aujourd’hui à] LT",nextDay:"[Demain à] LT",nextWeek:"dddd [à] LT",lastDay:"[Hier à] LT",lastWeek:"dddd [dernier à] LT",sameElse:"L"},relativeTime:{future:"dans %s",past:"il y a %s",s:"quelques secondes",ss:"%d secondes",m:"une minute",mm:"%d minutes",h:"une heure",hh:"%d heures",d:"un jour",dd:"%d jours",M:"un mois",MM:"%d mois",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(er|e)/,ordinal:function(number,period){switch(period){default:case"M":case"Q":case"D":case"DDD":case"d":return number+(1===number?"er":"e");case"w":case"W":return number+(1===number?"re":"e")}},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortWithDots="jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"),monthsShortWithoutDots="jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");moment.defineLocale("fy",{months:"jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShortWithoutDots[m.month()]:monthsShortWithDots[m.month()]:monthsShortWithDots},monthsParseExact:!0,weekdays:"snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),weekdaysShort:"si._mo._ti._wo._to._fr._so.".split("_"),weekdaysMin:"Si_Mo_Ti_Wo_To_Fr_So".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[hjoed om] LT",nextDay:"[moarn om] LT",nextWeek:"dddd [om] LT",lastDay:"[juster om] LT",lastWeek:"[ôfrûne] dddd [om] LT",sameElse:"L"},relativeTime:{future:"oer %s",past:"%s lyn",s:"in pear sekonden",ss:"%d sekonden",m:"ien minút",mm:"%d minuten",h:"ien oere",hh:"%d oeren",d:"ien dei",dd:"%d dagen",M:"ien moanne",MM:"%d moannen",y:"ien jier",yy:"%d jierren"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(number){return number+(1===number||8===number||number>=20?"ste":"de")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ga",{months:["Eanáir","Feabhra","Márta","Aibreán","Bealtaine","Meitheamh","Iúil","Lúnasa","Meán Fómhair","Deireadh Fómhair","Samhain","Nollaig"],monthsShort:["Ean","Feabh","Márt","Aib","Beal","Meith","Iúil","Lún","M.F.","D.F.","Samh","Noll"],monthsParseExact:!0,weekdays:["Dé Domhnaigh","Dé Luain","Dé Máirt","Dé Céadaoin","Déardaoin","Dé hAoine","Dé Sathairn"],weekdaysShort:["Domh","Luan","Máirt","Céad","Déar","Aoine","Sath"],weekdaysMin:["Do","Lu","Má","Cé","Dé","A","Sa"],longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Inniu ag] LT",nextDay:"[Amárach ag] LT",nextWeek:"dddd [ag] LT",lastDay:"[Inné ag] LT",lastWeek:"dddd [seo caite] [ag] LT",sameElse:"L"},relativeTime:{future:"i %s",past:"%s ó shin",s:"cúpla soicind",ss:"%d soicind",m:"nóiméad",mm:"%d nóiméad",h:"uair an chloig",hh:"%d uair an chloig",d:"lá",dd:"%d lá",M:"mí",MM:"%d míonna",y:"bliain",yy:"%d bliain"},dayOfMonthOrdinalParse:/\d{1,2}(d|na|mh)/,ordinal:function(number){return number+(1===number?"d":number%10==2?"na":"mh")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("gd",{months:["Am Faoilleach","An Gearran","Am Màrt","An Giblean","An Cèitean","An t-Ògmhios","An t-Iuchar","An Lùnastal","An t-Sultain","An Dàmhair","An t-Samhain","An Dùbhlachd"],monthsShort:["Faoi","Gear","Màrt","Gibl","Cèit","Ògmh","Iuch","Lùn","Sult","Dàmh","Samh","Dùbh"],monthsParseExact:!0,weekdays:["Didòmhnaich","Diluain","Dimàirt","Diciadain","Diardaoin","Dihaoine","Disathairne"],weekdaysShort:["Did","Dil","Dim","Dic","Dia","Dih","Dis"],weekdaysMin:["Dò","Lu","Mà","Ci","Ar","Ha","Sa"],longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[An-diugh aig] LT",nextDay:"[A-màireach aig] LT",nextWeek:"dddd [aig] LT",lastDay:"[An-dè aig] LT",lastWeek:"dddd [seo chaidh] [aig] LT",sameElse:"L"},relativeTime:{future:"ann an %s",past:"bho chionn %s",s:"beagan diogan",ss:"%d diogan",m:"mionaid",mm:"%d mionaidean",h:"uair",hh:"%d uairean",d:"latha",dd:"%d latha",M:"mìos",MM:"%d mìosan",y:"bliadhna",yy:"%d bliadhna"},dayOfMonthOrdinalParse:/\d{1,2}(d|na|mh)/,ordinal:function(number){return number+(1===number?"d":number%10==2?"na":"mh")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("gl",{months:"xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),monthsShort:"xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"domingo_luns_martes_mércores_xoves_venres_sábado".split("_"),weekdaysShort:"dom._lun._mar._mér._xov._ven._sáb.".split("_"),weekdaysMin:"do_lu_ma_mé_xo_ve_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY H:mm",LLLL:"dddd, D [de] MMMM [de] YYYY H:mm"},calendar:{sameDay:function(){return"[hoxe "+(1!==this.hours()?"ás":"á")+"] LT"},nextDay:function(){return"[mañá "+(1!==this.hours()?"ás":"á")+"] LT"},nextWeek:function(){return"dddd ["+(1!==this.hours()?"ás":"a")+"] LT"},lastDay:function(){return"[onte "+(1!==this.hours()?"á":"a")+"] LT"},lastWeek:function(){return"[o] dddd [pasado "+(1!==this.hours()?"ás":"a")+"] LT"},sameElse:"L"},relativeTime:{future:function(str){return 0===str.indexOf("un")?"n"+str:"en "+str},past:"hai %s",s:"uns segundos",ss:"%d segundos",m:"un minuto",mm:"%d minutos",h:"unha hora",hh:"%d horas",d:"un día",dd:"%d días",M:"un mes",MM:"%d meses",y:"un ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={s:["थोडया सॅकंडांनी","थोडे सॅकंड"],ss:[number+" सॅकंडांनी",number+" सॅकंड"],m:["एका मिणटान","एक मिनूट"],mm:[number+" मिणटांनी",number+" मिणटां"],h:["एका वरान","एक वर"],hh:[number+" वरांनी",number+" वरां"],d:["एका दिसान","एक दीस"],dd:[number+" दिसांनी",number+" दीस"],M:["एका म्हयन्यान","एक म्हयनो"],MM:[number+" म्हयन्यानी",number+" म्हयने"],y:["एका वर्सान","एक वर्स"],yy:[number+" वर्सांनी",number+" वर्सां"]};return isFuture?format[key][0]:format[key][1]}moment.defineLocale("gom-deva",{months:{standalone:"जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),format:"जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या".split("_"),isFormat:/MMMM(\s)+D[oD]?/},monthsShort:"जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),monthsParseExact:!0,weekdays:"आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार".split("_"),weekdaysShort:"आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.".split("_"),weekdaysMin:"आ_सो_मं_बु_ब्रे_सु_शे".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"A h:mm [वाजतां]",LTS:"A h:mm:ss [वाजतां]",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY A h:mm [वाजतां]",LLLL:"dddd, MMMM Do, YYYY, A h:mm [वाजतां]",llll:"ddd, D MMM YYYY, A h:mm [वाजतां]"},calendar:{sameDay:"[आयज] LT",nextDay:"[फाल्यां] LT",nextWeek:"[फुडलो] dddd[,] LT",lastDay:"[काल] LT",lastWeek:"[फाटलो] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%s",past:"%s आदीं",s:processRelativeTime,ss:processRelativeTime,m:processRelativeTime,mm:processRelativeTime,h:processRelativeTime,hh:processRelativeTime,d:processRelativeTime,dd:processRelativeTime,M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}(वेर)/,ordinal:function(number,period){switch(period){case"D":return number+"वेर";default:case"M":case"Q":case"DDD":case"d":case"w":case"W":return number}},week:{dow:0,doy:3},meridiemParse:/राती|सकाळीं|दनपारां|सांजे/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"राती"===meridiem?hour<4?hour:hour+12:"सकाळीं"===meridiem?hour:"दनपारां"===meridiem?hour>12?hour:hour+12:"सांजे"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"राती":hour<12?"सकाळीं":hour<16?"दनपारां":hour<20?"सांजे":"राती"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={s:["thoddea sekondamni","thodde sekond"],ss:[number+" sekondamni",number+" sekond"],m:["eka mintan","ek minut"],mm:[number+" mintamni",number+" mintam"],h:["eka voran","ek vor"],hh:[number+" voramni",number+" voram"],d:["eka disan","ek dis"],dd:[number+" disamni",number+" dis"],M:["eka mhoinean","ek mhoino"],MM:[number+" mhoineamni",number+" mhoine"],y:["eka vorsan","ek voros"],yy:[number+" vorsamni",number+" vorsam"]};return isFuture?format[key][0]:format[key][1]}moment.defineLocale("gom-latn",{months:{standalone:"Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),format:"Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea".split("_"),isFormat:/MMMM(\s)+D[oD]?/},monthsShort:"Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split("_"),weekdaysShort:"Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),weekdaysMin:"Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"A h:mm [vazta]",LTS:"A h:mm:ss [vazta]",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY A h:mm [vazta]",LLLL:"dddd, MMMM Do, YYYY, A h:mm [vazta]",llll:"ddd, D MMM YYYY, A h:mm [vazta]"},calendar:{sameDay:"[Aiz] LT",nextDay:"[Faleam] LT",nextWeek:"[Fuddlo] dddd[,] LT",lastDay:"[Kal] LT",lastWeek:"[Fattlo] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%s",past:"%s adim",s:processRelativeTime,ss:processRelativeTime,m:processRelativeTime,mm:processRelativeTime,h:processRelativeTime,hh:processRelativeTime,d:processRelativeTime,dd:processRelativeTime,M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}(er)/,ordinal:function(number,period){switch(period){case"D":return number+"er";default:case"M":case"Q":case"DDD":case"d":case"w":case"W":return number}},week:{dow:0,doy:3},meridiemParse:/rati|sokallim|donparam|sanje/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"rati"===meridiem?hour<4?hour:hour+12:"sokallim"===meridiem?hour:"donparam"===meridiem?hour>12?hour:hour+12:"sanje"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"rati":hour<12?"sokallim":hour<16?"donparam":hour<20?"sanje":"rati"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"૧",2:"૨",3:"૩",4:"૪",5:"૫",6:"૬",7:"૭",8:"૮",9:"૯",0:"૦"},numberMap={"૧":"1","૨":"2","૩":"3","૪":"4","૫":"5","૬":"6","૭":"7","૮":"8","૯":"9","૦":"0"};moment.defineLocale("gu",{months:"જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split("_"),monthsShort:"જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split("_"),monthsParseExact:!0,weekdays:"રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),weekdaysShort:"રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),weekdaysMin:"ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),longDateFormat:{LT:"A h:mm વાગ્યે",LTS:"A h:mm:ss વાગ્યે",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm વાગ્યે",LLLL:"dddd, D MMMM YYYY, A h:mm વાગ્યે"},calendar:{sameDay:"[આજ] LT",nextDay:"[કાલે] LT",nextWeek:"dddd, LT",lastDay:"[ગઇકાલે] LT",lastWeek:"[પાછલા] dddd, LT",sameElse:"L"},relativeTime:{future:"%s મા",past:"%s પહેલા",s:"અમુક પળો",ss:"%d સેકંડ",m:"એક મિનિટ",mm:"%d મિનિટ",h:"એક કલાક",hh:"%d કલાક",d:"એક દિવસ",dd:"%d દિવસ",M:"એક મહિનો",MM:"%d મહિનો",y:"એક વર્ષ",yy:"%d વર્ષ"},preparse:function(string){return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/રાત|બપોર|સવાર|સાંજ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"રાત"===meridiem?hour<4?hour:hour+12:"સવાર"===meridiem?hour:"બપોર"===meridiem?hour>=10?hour:hour+12:"સાંજ"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"રાત":hour<10?"સવાર":hour<17?"બપોર":hour<20?"સાંજ":"રાત"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("he",{months:"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),monthsShort:"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),weekdays:"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),weekdaysShort:"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),weekdaysMin:"א_ב_ג_ד_ה_ו_ש".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [ב]MMMM YYYY",LLL:"D [ב]MMMM YYYY HH:mm",LLLL:"dddd, D [ב]MMMM YYYY HH:mm",l:"D/M/YYYY",ll:"D MMM YYYY",lll:"D MMM YYYY HH:mm",llll:"ddd, D MMM YYYY HH:mm"},calendar:{sameDay:"[היום ב־]LT",nextDay:"[מחר ב־]LT",nextWeek:"dddd [בשעה] LT",lastDay:"[אתמול ב־]LT",lastWeek:"[ביום] dddd [האחרון בשעה] LT",sameElse:"L"},relativeTime:{future:"בעוד %s",past:"לפני %s",s:"מספר שניות",ss:"%d שניות",m:"דקה",mm:"%d דקות",h:"שעה",hh:function(number){return 2===number?"שעתיים":number+" שעות"},d:"יום",dd:function(number){return 2===number?"יומיים":number+" ימים"},M:"חודש",MM:function(number){return 2===number?"חודשיים":number+" חודשים"},y:"שנה",yy:function(number){return 2===number?"שנתיים":number%10==0&&10!==number?number+" שנה":number+" שנים"}},meridiemParse:/אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,isPM:function(input){return/^(אחה"צ|אחרי הצהריים|בערב)$/.test(input)},meridiem:function(hour,minute,isLower){return hour<5?"לפנות בוקר":hour<10?"בבוקר":hour<12?isLower?'לפנה"צ':"לפני הצהריים":hour<18?isLower?'אחה"צ':"אחרי הצהריים":"בערב"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},numberMap={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"},monthsParse=[/^जन/i,/^फ़र|फर/i,/^मार्च/i,/^अप्रै/i,/^मई/i,/^जून/i,/^जुल/i,/^अग/i,/^सितं|सित/i,/^अक्टू/i,/^नव|नवं/i,/^दिसं|दिस/i];moment.defineLocale("hi",{months:{format:"जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),standalone:"जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर".split("_")},monthsShort:"जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),weekdays:"रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),weekdaysShort:"रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),weekdaysMin:"र_सो_मं_बु_गु_शु_श".split("_"),longDateFormat:{LT:"A h:mm बजे",LTS:"A h:mm:ss बजे",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm बजे",LLLL:"dddd, D MMMM YYYY, A h:mm बजे"},monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:[/^जन/i,/^फ़र/i,/^मार्च/i,/^अप्रै/i,/^मई/i,/^जून/i,/^जुल/i,/^अग/i,/^सित/i,/^अक्टू/i,/^नव/i,/^दिस/i],monthsRegex:/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,monthsShortRegex:/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,monthsStrictRegex:/^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,monthsShortStrictRegex:/^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,calendar:{sameDay:"[आज] LT",nextDay:"[कल] LT",nextWeek:"dddd, LT",lastDay:"[कल] LT",lastWeek:"[पिछले] dddd, LT",sameElse:"L"},relativeTime:{future:"%s में",past:"%s पहले",s:"कुछ ही क्षण",ss:"%d सेकंड",m:"एक मिनट",mm:"%d मिनट",h:"एक घंटा",hh:"%d घंटे",d:"एक दिन",dd:"%d दिन",M:"एक महीने",MM:"%d महीने",y:"एक वर्ष",yy:"%d वर्ष"},preparse:function(string){return string.replace(/[१२३४५६७८९०]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/रात|सुबह|दोपहर|शाम/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"रात"===meridiem?hour<4?hour:hour+12:"सुबह"===meridiem?hour:"दोपहर"===meridiem?hour>=10?hour:hour+12:"शाम"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"रात":hour<10?"सुबह":hour<17?"दोपहर":hour<20?"शाम":"रात"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function translate(number,withoutSuffix,key){var result=number+" ";switch(key){case"ss":return result+=1===number?"sekunda":2===number||3===number||4===number?"sekunde":"sekundi";case"m":return withoutSuffix?"jedna minuta":"jedne minute";case"mm":return result+=1===number?"minuta":2===number||3===number||4===number?"minute":"minuta";case"h":return withoutSuffix?"jedan sat":"jednog sata";case"hh":return result+=1===number?"sat":2===number||3===number||4===number?"sata":"sati";case"dd":return result+=1===number?"dan":"dana";case"MM":return result+=1===number?"mjesec":2===number||3===number||4===number?"mjeseca":"mjeseci";case"yy":return result+=1===number?"godina":2===number||3===number||4===number?"godine":"godina"}}moment.defineLocale("hr",{months:{format:"siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),standalone:"siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")},monthsShort:"sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"Do MMMM YYYY",LLL:"Do MMMM YYYY H:mm",LLLL:"dddd, Do MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[jučer u] LT",lastWeek:function(){switch(this.day()){case 0:return"[prošlu] [nedjelju] [u] LT";case 3:return"[prošlu] [srijedu] [u] LT";case 6:return"[prošle] [subote] [u] LT";case 1:case 2:case 4:case 5:return"[prošli] dddd [u] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"par sekundi",ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:"dan",dd:translate,M:"mjesec",MM:translate,y:"godinu",yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var weekEndings="vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ");function translate(number,withoutSuffix,key,isFuture){var num=number;switch(key){case"s":return isFuture||withoutSuffix?"néhány másodperc":"néhány másodperce";case"ss":return num+(isFuture||withoutSuffix)?" másodperc":" másodperce";case"m":return"egy"+(isFuture||withoutSuffix?" perc":" perce");case"mm":return num+(isFuture||withoutSuffix?" perc":" perce");case"h":return"egy"+(isFuture||withoutSuffix?" óra":" órája");case"hh":return num+(isFuture||withoutSuffix?" óra":" órája");case"d":return"egy"+(isFuture||withoutSuffix?" nap":" napja");case"dd":return num+(isFuture||withoutSuffix?" nap":" napja");case"M":return"egy"+(isFuture||withoutSuffix?" hónap":" hónapja");case"MM":return num+(isFuture||withoutSuffix?" hónap":" hónapja");case"y":return"egy"+(isFuture||withoutSuffix?" év":" éve");case"yy":return num+(isFuture||withoutSuffix?" év":" éve")}return""}function week(isFuture){return(isFuture?"":"[múlt] ")+"["+weekEndings[this.day()]+"] LT[-kor]"}moment.defineLocale("hu",{months:"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),monthsShort:"jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),weekdaysShort:"vas_hét_kedd_sze_csüt_pén_szo".split("_"),weekdaysMin:"v_h_k_sze_cs_p_szo".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"YYYY.MM.DD.",LL:"YYYY. MMMM D.",LLL:"YYYY. MMMM D. H:mm",LLLL:"YYYY. MMMM D., dddd H:mm"},meridiemParse:/de|du/i,isPM:function(input){return"u"===input.charAt(1).toLowerCase()},meridiem:function(hours,minutes,isLower){return hours<12?!0===isLower?"de":"DE":!0===isLower?"du":"DU"},calendar:{sameDay:"[ma] LT[-kor]",nextDay:"[holnap] LT[-kor]",nextWeek:function(){return week.call(this,!0)},lastDay:"[tegnap] LT[-kor]",lastWeek:function(){return week.call(this,!1)},sameElse:"L"},relativeTime:{future:"%s múlva",past:"%s",s:translate,ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("hy-am",{months:{format:"հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),standalone:"հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")},monthsShort:"հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),weekdays:"կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),weekdaysShort:"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),weekdaysMin:"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY թ.",LLL:"D MMMM YYYY թ., HH:mm",LLLL:"dddd, D MMMM YYYY թ., HH:mm"},calendar:{sameDay:"[այսօր] LT",nextDay:"[վաղը] LT",lastDay:"[երեկ] LT",nextWeek:function(){return"dddd [օրը ժամը] LT"},lastWeek:function(){return"[անցած] dddd [օրը ժամը] LT"},sameElse:"L"},relativeTime:{future:"%s հետո",past:"%s առաջ",s:"մի քանի վայրկյան",ss:"%d վայրկյան",m:"րոպե",mm:"%d րոպե",h:"ժամ",hh:"%d ժամ",d:"օր",dd:"%d օր",M:"ամիս",MM:"%d ամիս",y:"տարի",yy:"%d տարի"},meridiemParse:/գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,isPM:function(input){return/^(ցերեկվա|երեկոյան)$/.test(input)},meridiem:function(hour){return hour<4?"գիշերվա":hour<12?"առավոտվա":hour<17?"ցերեկվա":"երեկոյան"},dayOfMonthOrdinalParse:/\d{1,2}|\d{1,2}-(ին|րդ)/,ordinal:function(number,period){switch(period){case"DDD":case"w":case"W":case"DDDo":return 1===number?number+"-ին":number+"-րդ";default:return number}},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("id",{months:"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),monthsShort:"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),weekdays:"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),weekdaysShort:"Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),weekdaysMin:"Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|siang|sore|malam/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"pagi"===meridiem?hour:"siang"===meridiem?hour>=11?hour:hour+12:"sore"===meridiem||"malam"===meridiem?hour+12:void 0},meridiem:function(hours,minutes,isLower){return hours<11?"pagi":hours<15?"siang":hours<19?"sore":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Besok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kemarin pukul] LT",lastWeek:"dddd [lalu pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lalu",s:"beberapa detik",ss:"%d detik",m:"semenit",mm:"%d menit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function plural(n){return n%100==11||n%10!=1}function translate(number,withoutSuffix,key,isFuture){var result=number+" ";switch(key){case"s":return withoutSuffix||isFuture?"nokkrar sekúndur":"nokkrum sekúndum";case"ss":return plural(number)?result+(withoutSuffix||isFuture?"sekúndur":"sekúndum"):result+"sekúnda";case"m":return withoutSuffix?"mínúta":"mínútu";case"mm":return plural(number)?result+(withoutSuffix||isFuture?"mínútur":"mínútum"):withoutSuffix?result+"mínúta":result+"mínútu";case"hh":return plural(number)?result+(withoutSuffix||isFuture?"klukkustundir":"klukkustundum"):result+"klukkustund";case"d":return withoutSuffix?"dagur":isFuture?"dag":"degi";case"dd":return plural(number)?withoutSuffix?result+"dagar":result+(isFuture?"daga":"dögum"):withoutSuffix?result+"dagur":result+(isFuture?"dag":"degi");case"M":return withoutSuffix?"mánuður":isFuture?"mánuð":"mánuði";case"MM":return plural(number)?withoutSuffix?result+"mánuðir":result+(isFuture?"mánuði":"mánuðum"):withoutSuffix?result+"mánuður":result+(isFuture?"mánuð":"mánuði");case"y":return withoutSuffix||isFuture?"ár":"ári";case"yy":return plural(number)?result+(withoutSuffix||isFuture?"ár":"árum"):result+(withoutSuffix||isFuture?"ár":"ári")}}moment.defineLocale("is",{months:"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),monthsShort:"jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),weekdays:"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),weekdaysShort:"sun_mán_þri_mið_fim_fös_lau".split("_"),weekdaysMin:"Su_Má_Þr_Mi_Fi_Fö_La".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] H:mm",LLLL:"dddd, D. MMMM YYYY [kl.] H:mm"},calendar:{sameDay:"[í dag kl.] LT",nextDay:"[á morgun kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[í gær kl.] LT",lastWeek:"[síðasta] dddd [kl.] LT",sameElse:"L"},relativeTime:{future:"eftir %s",past:"fyrir %s síðan",s:translate,ss:translate,m:translate,mm:translate,h:"klukkustund",hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("it",{months:"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),monthsShort:"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),weekdays:"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),weekdaysShort:"dom_lun_mar_mer_gio_ven_sab".split("_"),weekdaysMin:"do_lu_ma_me_gi_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:function(){return"[Oggi a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},nextDay:function(){return"[Domani a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},nextWeek:function(){return"dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},lastDay:function(){return"[Ieri a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"},lastWeek:function(){switch(this.day()){case 0:return"[La scorsa] dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT";default:return"[Lo scorso] dddd [a"+(this.hours()>1?"lle ":0===this.hours()?" ":"ll'")+"]LT"}},sameElse:"L"},relativeTime:{future:"tra %s",past:"%s fa",s:"alcuni secondi",ss:"%d secondi",m:"un minuto",mm:"%d minuti",h:"un'ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",w:"una settimana",ww:"%d settimane",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("it-ch",{months:"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),monthsShort:"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),weekdays:"domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),weekdaysShort:"dom_lun_mar_mer_gio_ven_sab".split("_"),weekdaysMin:"do_lu_ma_me_gi_ve_sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[Oggi alle] LT",nextDay:"[Domani alle] LT",nextWeek:"dddd [alle] LT",lastDay:"[Ieri alle] LT",lastWeek:function(){switch(this.day()){case 0:return"[la scorsa] dddd [alle] LT";default:return"[lo scorso] dddd [alle] LT"}},sameElse:"L"},relativeTime:{future:function(s){return(/^[0-9].+$/.test(s)?"tra":"in")+" "+s},past:"%s fa",s:"alcuni secondi",ss:"%d secondi",m:"un minuto",mm:"%d minuti",h:"un'ora",hh:"%d ore",d:"un giorno",dd:"%d giorni",M:"un mese",MM:"%d mesi",y:"un anno",yy:"%d anni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ja",{eras:[{since:"2019-05-01",offset:1,name:"令和",narrow:"㋿",abbr:"R"},{since:"1989-01-08",until:"2019-04-30",offset:1,name:"平成",narrow:"㍻",abbr:"H"},{since:"1926-12-25",until:"1989-01-07",offset:1,name:"昭和",narrow:"㍼",abbr:"S"},{since:"1912-07-30",until:"1926-12-24",offset:1,name:"大正",narrow:"㍽",abbr:"T"},{since:"1873-01-01",until:"1912-07-29",offset:6,name:"明治",narrow:"㍾",abbr:"M"},{since:"0001-01-01",until:"1873-12-31",offset:1,name:"西暦",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"紀元前",narrow:"BC",abbr:"BC"}],eraYearOrdinalRegex:/(元|\d+)年/,eraYearOrdinalParse:function(input,match){return"元"===match[1]?1:parseInt(match[1]||input,10)},months:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),weekdaysShort:"日_月_火_水_木_金_土".split("_"),weekdaysMin:"日_月_火_水_木_金_土".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日 dddd HH:mm",l:"YYYY/MM/DD",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日(ddd) HH:mm"},meridiemParse:/午前|午後/i,isPM:function(input){return"午後"===input},meridiem:function(hour,minute,isLower){return hour<12?"午前":"午後"},calendar:{sameDay:"[今日] LT",nextDay:"[明日] LT",nextWeek:function(now){return now.week()!==this.week()?"[来週]dddd LT":"dddd LT"},lastDay:"[昨日] LT",lastWeek:function(now){return this.week()!==now.week()?"[先週]dddd LT":"dddd LT"},sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}日/,ordinal:function(number,period){switch(period){case"y":return 1===number?"元年":number+"年";case"d":case"D":case"DDD":return number+"日";default:return number}},relativeTime:{future:"%s後",past:"%s前",s:"数秒",ss:"%d秒",m:"1分",mm:"%d分",h:"1時間",hh:"%d時間",d:"1日",dd:"%d日",M:"1ヶ月",MM:"%dヶ月",y:"1年",yy:"%d年"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("jv",{months:"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),monthsShort:"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),weekdays:"Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),weekdaysShort:"Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),weekdaysMin:"Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/enjing|siyang|sonten|ndalu/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"enjing"===meridiem?hour:"siyang"===meridiem?hour>=11?hour:hour+12:"sonten"===meridiem||"ndalu"===meridiem?hour+12:void 0},meridiem:function(hours,minutes,isLower){return hours<11?"enjing":hours<15?"siyang":hours<19?"sonten":"ndalu"},calendar:{sameDay:"[Dinten puniko pukul] LT",nextDay:"[Mbenjang pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kala wingi pukul] LT",lastWeek:"dddd [kepengker pukul] LT",sameElse:"L"},relativeTime:{future:"wonten ing %s",past:"%s ingkang kepengker",s:"sawetawis detik",ss:"%d detik",m:"setunggal menit",mm:"%d menit",h:"setunggal jam",hh:"%d jam",d:"sedinten",dd:"%d dinten",M:"sewulan",MM:"%d wulan",y:"setaun",yy:"%d taun"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ka",{months:"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),monthsShort:"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),weekdays:{standalone:"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),format:"კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),isFormat:/(წინა|შემდეგ)/},weekdaysShort:"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),weekdaysMin:"კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[დღეს] LT[-ზე]",nextDay:"[ხვალ] LT[-ზე]",lastDay:"[გუშინ] LT[-ზე]",nextWeek:"[შემდეგ] dddd LT[-ზე]",lastWeek:"[წინა] dddd LT-ზე",sameElse:"L"},relativeTime:{future:function(s){return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,(function($0,$1,$2){return"ი"===$2?$1+"ში":$1+$2+"ში"}))},past:function(s){return/(წამი|წუთი|საათი|დღე|თვე)/.test(s)?s.replace(/(ი|ე)$/,"ის წინ"):/წელი/.test(s)?s.replace(/წელი$/,"წლის წინ"):s},s:"რამდენიმე წამი",ss:"%d წამი",m:"წუთი",mm:"%d წუთი",h:"საათი",hh:"%d საათი",d:"დღე",dd:"%d დღე",M:"თვე",MM:"%d თვე",y:"წელი",yy:"%d წელი"},dayOfMonthOrdinalParse:/0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,ordinal:function(number){return 0===number?number:1===number?number+"-ლი":number<20||number<=100&&number%20==0||number%100==0?"მე-"+number:number+"-ე"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={0:"-ші",1:"-ші",2:"-ші",3:"-ші",4:"-ші",5:"-ші",6:"-шы",7:"-ші",8:"-ші",9:"-шы",10:"-шы",20:"-шы",30:"-шы",40:"-шы",50:"-ші",60:"-шы",70:"-ші",80:"-ші",90:"-шы",100:"-ші"};moment.defineLocale("kk",{months:"қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split("_"),monthsShort:"қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split("_"),weekdays:"жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split("_"),weekdaysShort:"жек_дүй_сей_сәр_бей_жұм_сен".split("_"),weekdaysMin:"жк_дй_сй_ср_бй_жм_сн".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Бүгін сағат] LT",nextDay:"[Ертең сағат] LT",nextWeek:"dddd [сағат] LT",lastDay:"[Кеше сағат] LT",lastWeek:"[Өткен аптаның] dddd [сағат] LT",sameElse:"L"},relativeTime:{future:"%s ішінде",past:"%s бұрын",s:"бірнеше секунд",ss:"%d секунд",m:"бір минут",mm:"%d минут",h:"бір сағат",hh:"%d сағат",d:"бір күн",dd:"%d күн",M:"бір ай",MM:"%d ай",y:"бір жыл",yy:"%d жыл"},dayOfMonthOrdinalParse:/\d{1,2}-(ші|шы)/,ordinal:function(number){return number+(suffixes[number]||suffixes[number%10]||suffixes[number>=100?100:null])},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"១",2:"២",3:"៣",4:"៤",5:"៥",6:"៦",7:"៧",8:"៨",9:"៩",0:"០"},numberMap={"១":"1","២":"2","៣":"3","៤":"4","៥":"5","៦":"6","៧":"7","៨":"8","៩":"9","០":"0"};moment.defineLocale("km",{months:"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),monthsShort:"មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),weekdays:"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),weekdaysShort:"អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),weekdaysMin:"អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/ព្រឹក|ល្ងាច/,isPM:function(input){return"ល្ងាច"===input},meridiem:function(hour,minute,isLower){return hour<12?"ព្រឹក":"ល្ងាច"},calendar:{sameDay:"[ថ្ងៃនេះ ម៉ោង] LT",nextDay:"[ស្អែក ម៉ោង] LT",nextWeek:"dddd [ម៉ោង] LT",lastDay:"[ម្សិលមិញ ម៉ោង] LT",lastWeek:"dddd [សប្តាហ៍មុន] [ម៉ោង] LT",sameElse:"L"},relativeTime:{future:"%sទៀត",past:"%sមុន",s:"ប៉ុន្មានវិនាទី",ss:"%d វិនាទី",m:"មួយនាទី",mm:"%d នាទី",h:"មួយម៉ោង",hh:"%d ម៉ោង",d:"មួយថ្ងៃ",dd:"%d ថ្ងៃ",M:"មួយខែ",MM:"%d ខែ",y:"មួយឆ្នាំ",yy:"%d ឆ្នាំ"},dayOfMonthOrdinalParse:/ទី\d{1,2}/,ordinal:"ទី%d",preparse:function(string){return string.replace(/[១២៣៤៥៦៧៨៩០]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"೧",2:"೨",3:"೩",4:"೪",5:"೫",6:"೬",7:"೭",8:"೮",9:"೯",0:"೦"},numberMap={"೧":"1","೨":"2","೩":"3","೪":"4","೫":"5","೬":"6","೭":"7","೮":"8","೯":"9","೦":"0"};moment.defineLocale("kn",{months:"ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split("_"),monthsShort:"ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split("_"),monthsParseExact:!0,weekdays:"ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split("_"),weekdaysShort:"ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),weekdaysMin:"ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[ಇಂದು] LT",nextDay:"[ನಾಳೆ] LT",nextWeek:"dddd, LT",lastDay:"[ನಿನ್ನೆ] LT",lastWeek:"[ಕೊನೆಯ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ನಂತರ",past:"%s ಹಿಂದೆ",s:"ಕೆಲವು ಕ್ಷಣಗಳು",ss:"%d ಸೆಕೆಂಡುಗಳು",m:"ಒಂದು ನಿಮಿಷ",mm:"%d ನಿಮಿಷ",h:"ಒಂದು ಗಂಟೆ",hh:"%d ಗಂಟೆ",d:"ಒಂದು ದಿನ",dd:"%d ದಿನ",M:"ಒಂದು ತಿಂಗಳು",MM:"%d ತಿಂಗಳು",y:"ಒಂದು ವರ್ಷ",yy:"%d ವರ್ಷ"},preparse:function(string){return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"ರಾತ್ರಿ"===meridiem?hour<4?hour:hour+12:"ಬೆಳಿಗ್ಗೆ"===meridiem?hour:"ಮಧ್ಯಾಹ್ನ"===meridiem?hour>=10?hour:hour+12:"ಸಂಜೆ"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"ರಾತ್ರಿ":hour<10?"ಬೆಳಿಗ್ಗೆ":hour<17?"ಮಧ್ಯಾಹ್ನ":hour<20?"ಸಂಜೆ":"ರಾತ್ರಿ"},dayOfMonthOrdinalParse:/\d{1,2}(ನೇ)/,ordinal:function(number){return number+"ನೇ"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ko",{months:"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),monthsShort:"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),weekdays:"일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),weekdaysShort:"일_월_화_수_목_금_토".split("_"),weekdaysMin:"일_월_화_수_목_금_토".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"YYYY.MM.DD.",LL:"YYYY년 MMMM D일",LLL:"YYYY년 MMMM D일 A h:mm",LLLL:"YYYY년 MMMM D일 dddd A h:mm",l:"YYYY.MM.DD.",ll:"YYYY년 MMMM D일",lll:"YYYY년 MMMM D일 A h:mm",llll:"YYYY년 MMMM D일 dddd A h:mm"},calendar:{sameDay:"오늘 LT",nextDay:"내일 LT",nextWeek:"dddd LT",lastDay:"어제 LT",lastWeek:"지난주 dddd LT",sameElse:"L"},relativeTime:{future:"%s 후",past:"%s 전",s:"몇 초",ss:"%d초",m:"1분",mm:"%d분",h:"한 시간",hh:"%d시간",d:"하루",dd:"%d일",M:"한 달",MM:"%d달",y:"일 년",yy:"%d년"},dayOfMonthOrdinalParse:/\d{1,2}(일|월|주)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"일";case"M":return number+"월";case"w":case"W":return number+"주";default:return number}},meridiemParse:/오전|오후/,isPM:function(token){return"오후"===token},meridiem:function(hour,minute,isUpper){return hour<12?"오전":"오후"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},numberMap={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"},months=["کانونی دووەم","شوبات","ئازار","نیسان","ئایار","حوزەیران","تەمموز","ئاب","ئەیلوول","تشرینی یەكەم","تشرینی دووەم","كانونی یەکەم"];moment.defineLocale("ku",{months:months,monthsShort:months,weekdays:"یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌".split("_"),weekdaysShort:"یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌".split("_"),weekdaysMin:"ی_د_س_چ_پ_ه_ش".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},meridiemParse:/ئێواره‌|به‌یانی/,isPM:function(input){return/ئێواره‌/.test(input)},meridiem:function(hour,minute,isLower){return hour<12?"به‌یانی":"ئێواره‌"},calendar:{sameDay:"[ئه‌مرۆ كاتژمێر] LT",nextDay:"[به‌یانی كاتژمێر] LT",nextWeek:"dddd [كاتژمێر] LT",lastDay:"[دوێنێ كاتژمێر] LT",lastWeek:"dddd [كاتژمێر] LT",sameElse:"L"},relativeTime:{future:"له‌ %s",past:"%s",s:"چه‌ند چركه‌یه‌ك",ss:"چركه‌ %d",m:"یه‌ك خوله‌ك",mm:"%d خوله‌ك",h:"یه‌ك كاتژمێر",hh:"%d كاتژمێر",d:"یه‌ك ڕۆژ",dd:"%d ڕۆژ",M:"یه‌ك مانگ",MM:"%d مانگ",y:"یه‌ك ساڵ",yy:"%d ساڵ"},preparse:function(string){return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g,(function(match){return numberMap[match]})).replace(/،/g,",")},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]})).replace(/,/g,"،")},week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={0:"-чү",1:"-чи",2:"-чи",3:"-чү",4:"-чү",5:"-чи",6:"-чы",7:"-чи",8:"-чи",9:"-чу",10:"-чу",20:"-чы",30:"-чу",40:"-чы",50:"-чү",60:"-чы",70:"-чи",80:"-чи",90:"-чу",100:"-чү"};moment.defineLocale("ky",{months:"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),monthsShort:"янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),weekdays:"Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split("_"),weekdaysShort:"Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),weekdaysMin:"Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Бүгүн саат] LT",nextDay:"[Эртең саат] LT",nextWeek:"dddd [саат] LT",lastDay:"[Кечээ саат] LT",lastWeek:"[Өткөн аптанын] dddd [күнү] [саат] LT",sameElse:"L"},relativeTime:{future:"%s ичинде",past:"%s мурун",s:"бирнече секунд",ss:"%d секунд",m:"бир мүнөт",mm:"%d мүнөт",h:"бир саат",hh:"%d саат",d:"бир күн",dd:"%d күн",M:"бир ай",MM:"%d ай",y:"бир жыл",yy:"%d жыл"},dayOfMonthOrdinalParse:/\d{1,2}-(чи|чы|чү|чу)/,ordinal:function(number){return number+(suffixes[number]||suffixes[number%10]||suffixes[number>=100?100:null])},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:["eng Minutt","enger Minutt"],h:["eng Stonn","enger Stonn"],d:["een Dag","engem Dag"],M:["ee Mount","engem Mount"],y:["ee Joer","engem Joer"]};return withoutSuffix?format[key][0]:format[key][1]}function eifelerRegelAppliesToNumber(number){if(number=parseInt(number,10),isNaN(number))return!1;if(number<0)return!0;if(number<10)return 4<=number&&number<=7;if(number<100){var lastDigit=number%10;return eifelerRegelAppliesToNumber(0===lastDigit?number/10:lastDigit)}if(number<1e4){for(;number>=10;)number/=10;return eifelerRegelAppliesToNumber(number)}return eifelerRegelAppliesToNumber(number/=1e3)}moment.defineLocale("lb",{months:"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),weekdaysShort:"So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mé_Dë_Më_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm [Auer]",LTS:"H:mm:ss [Auer]",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm [Auer]",LLLL:"dddd, D. MMMM YYYY H:mm [Auer]"},calendar:{sameDay:"[Haut um] LT",sameElse:"L",nextDay:"[Muer um] LT",nextWeek:"dddd [um] LT",lastDay:"[Gëschter um] LT",lastWeek:function(){switch(this.day()){case 2:case 4:return"[Leschten] dddd [um] LT";default:return"[Leschte] dddd [um] LT"}}},relativeTime:{future:function(string){return eifelerRegelAppliesToNumber(string.substr(0,string.indexOf(" ")))?"a "+string:"an "+string},past:function(string){return eifelerRegelAppliesToNumber(string.substr(0,string.indexOf(" ")))?"viru "+string:"virun "+string},s:"e puer Sekonnen",ss:"%d Sekonnen",m:processRelativeTime,mm:"%d Minutten",h:processRelativeTime,hh:"%d Stonnen",d:processRelativeTime,dd:"%d Deeg",M:processRelativeTime,MM:"%d Méint",y:processRelativeTime,yy:"%d Joer"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("lo",{months:"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),monthsShort:"ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),weekdays:"ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),weekdaysShort:"ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),weekdaysMin:"ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"ວັນdddd D MMMM YYYY HH:mm"},meridiemParse:/ຕອນເຊົ້າ|ຕອນແລງ/,isPM:function(input){return"ຕອນແລງ"===input},meridiem:function(hour,minute,isLower){return hour<12?"ຕອນເຊົ້າ":"ຕອນແລງ"},calendar:{sameDay:"[ມື້ນີ້ເວລາ] LT",nextDay:"[ມື້ອື່ນເວລາ] LT",nextWeek:"[ວັນ]dddd[ໜ້າເວລາ] LT",lastDay:"[ມື້ວານນີ້ເວລາ] LT",lastWeek:"[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",sameElse:"L"},relativeTime:{future:"ອີກ %s",past:"%sຜ່ານມາ",s:"ບໍ່ເທົ່າໃດວິນາທີ",ss:"%d ວິນາທີ",m:"1 ນາທີ",mm:"%d ນາທີ",h:"1 ຊົ່ວໂມງ",hh:"%d ຊົ່ວໂມງ",d:"1 ມື້",dd:"%d ມື້",M:"1 ເດືອນ",MM:"%d ເດືອນ",y:"1 ປີ",yy:"%d ປີ"},dayOfMonthOrdinalParse:/(ທີ່)\d{1,2}/,ordinal:function(number){return"ທີ່"+number}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var units={ss:"sekundė_sekundžių_sekundes",m:"minutė_minutės_minutę",mm:"minutės_minučių_minutes",h:"valanda_valandos_valandą",hh:"valandos_valandų_valandas",d:"diena_dienos_dieną",dd:"dienos_dienų_dienas",M:"mėnuo_mėnesio_mėnesį",MM:"mėnesiai_mėnesių_mėnesius",y:"metai_metų_metus",yy:"metai_metų_metus"};function translateSingular(number,withoutSuffix,key,isFuture){return withoutSuffix?forms(key)[0]:isFuture?forms(key)[1]:forms(key)[2]}function special(number){return number%10==0||number>10&&number<20}function forms(key){return units[key].split("_")}function translate(number,withoutSuffix,key,isFuture){var result=number+" ";return 1===number?result+translateSingular(0,withoutSuffix,key[0],isFuture):withoutSuffix?result+(special(number)?forms(key)[1]:forms(key)[0]):isFuture?result+forms(key)[1]:result+(special(number)?forms(key)[1]:forms(key)[2])}moment.defineLocale("lt",{months:{format:"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),standalone:"sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),isFormat:/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/},monthsShort:"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),weekdays:{format:"sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),standalone:"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),isFormat:/dddd HH:mm/},weekdaysShort:"Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),weekdaysMin:"S_P_A_T_K_Pn_Š".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY [m.] MMMM D [d.]",LLL:"YYYY [m.] MMMM D [d.], HH:mm [val.]",LLLL:"YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",l:"YYYY-MM-DD",ll:"YYYY [m.] MMMM D [d.]",lll:"YYYY [m.] MMMM D [d.], HH:mm [val.]",llll:"YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"},calendar:{sameDay:"[Šiandien] LT",nextDay:"[Rytoj] LT",nextWeek:"dddd LT",lastDay:"[Vakar] LT",lastWeek:"[Praėjusį] dddd LT",sameElse:"L"},relativeTime:{future:"po %s",past:"prieš %s",s:function(number,withoutSuffix,key,isFuture){return withoutSuffix?"kelios sekundės":isFuture?"kelių sekundžių":"kelias sekundes"},ss:translate,m:translateSingular,mm:translate,h:translateSingular,hh:translate,d:translateSingular,dd:translate,M:translateSingular,MM:translate,y:translateSingular,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}-oji/,ordinal:function(number){return number+"-oji"},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var units={ss:"sekundes_sekundēm_sekunde_sekundes".split("_"),m:"minūtes_minūtēm_minūte_minūtes".split("_"),mm:"minūtes_minūtēm_minūte_minūtes".split("_"),h:"stundas_stundām_stunda_stundas".split("_"),hh:"stundas_stundām_stunda_stundas".split("_"),d:"dienas_dienām_diena_dienas".split("_"),dd:"dienas_dienām_diena_dienas".split("_"),M:"mēneša_mēnešiem_mēnesis_mēneši".split("_"),MM:"mēneša_mēnešiem_mēnesis_mēneši".split("_"),y:"gada_gadiem_gads_gadi".split("_"),yy:"gada_gadiem_gads_gadi".split("_")};function format(forms,number,withoutSuffix){return withoutSuffix?number%10==1&&number%100!=11?forms[2]:forms[3]:number%10==1&&number%100!=11?forms[0]:forms[1]}function relativeTimeWithPlural(number,withoutSuffix,key){return number+" "+format(units[key],number,withoutSuffix)}function relativeTimeWithSingular(number,withoutSuffix,key){return format(units[key],number,withoutSuffix)}moment.defineLocale("lv",{months:"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),monthsShort:"jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),weekdays:"svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),weekdaysShort:"Sv_P_O_T_C_Pk_S".split("_"),weekdaysMin:"Sv_P_O_T_C_Pk_S".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY.",LL:"YYYY. [gada] D. MMMM",LLL:"YYYY. [gada] D. MMMM, HH:mm",LLLL:"YYYY. [gada] D. MMMM, dddd, HH:mm"},calendar:{sameDay:"[Šodien pulksten] LT",nextDay:"[Rīt pulksten] LT",nextWeek:"dddd [pulksten] LT",lastDay:"[Vakar pulksten] LT",lastWeek:"[Pagājušā] dddd [pulksten] LT",sameElse:"L"},relativeTime:{future:"pēc %s",past:"pirms %s",s:function(number,withoutSuffix){return withoutSuffix?"dažas sekundes":"dažām sekundēm"},ss:relativeTimeWithPlural,m:relativeTimeWithSingular,mm:relativeTimeWithPlural,h:relativeTimeWithSingular,hh:relativeTimeWithPlural,d:relativeTimeWithSingular,dd:relativeTimeWithPlural,M:relativeTimeWithSingular,MM:relativeTimeWithPlural,y:relativeTimeWithSingular,yy:relativeTimeWithPlural},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var translator={words:{ss:["sekund","sekunda","sekundi"],m:["jedan minut","jednog minuta"],mm:["minut","minuta","minuta"],h:["jedan sat","jednog sata"],hh:["sat","sata","sati"],dd:["dan","dana","dana"],MM:["mjesec","mjeseca","mjeseci"],yy:["godina","godine","godina"]},correctGrammaticalCase:function(number,wordKey){return 1===number?wordKey[0]:number>=2&&number<=4?wordKey[1]:wordKey[2]},translate:function(number,withoutSuffix,key){var wordKey=translator.words[key];return 1===key.length?withoutSuffix?wordKey[0]:wordKey[1]:number+" "+translator.correctGrammaticalCase(number,wordKey)}};moment.defineLocale("me",{months:"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sri._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sjutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedjelju] [u] LT";case 3:return"[u] [srijedu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[juče u] LT",lastWeek:function(){return["[prošle] [nedjelje] [u] LT","[prošlog] [ponedjeljka] [u] LT","[prošlog] [utorka] [u] LT","[prošle] [srijede] [u] LT","[prošlog] [četvrtka] [u] LT","[prošlog] [petka] [u] LT","[prošle] [subote] [u] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"za %s",past:"prije %s",s:"nekoliko sekundi",ss:translator.translate,m:translator.translate,mm:translator.translate,h:translator.translate,hh:translator.translate,d:"dan",dd:translator.translate,M:"mjesec",MM:translator.translate,y:"godinu",yy:translator.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("mi",{months:"Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split("_"),monthsShort:"Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),monthsRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsShortRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,monthsShortStrictRegex:/(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,weekdays:"Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split("_"),weekdaysShort:"Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),weekdaysMin:"Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [i] HH:mm",LLLL:"dddd, D MMMM YYYY [i] HH:mm"},calendar:{sameDay:"[i teie mahana, i] LT",nextDay:"[apopo i] LT",nextWeek:"dddd [i] LT",lastDay:"[inanahi i] LT",lastWeek:"dddd [whakamutunga i] LT",sameElse:"L"},relativeTime:{future:"i roto i %s",past:"%s i mua",s:"te hēkona ruarua",ss:"%d hēkona",m:"he meneti",mm:"%d meneti",h:"te haora",hh:"%d haora",d:"he ra",dd:"%d ra",M:"he marama",MM:"%d marama",y:"he tau",yy:"%d tau"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("mk",{months:"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),monthsShort:"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),weekdays:"недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),weekdaysShort:"нед_пон_вто_сре_чет_пет_саб".split("_"),weekdaysMin:"нe_пo_вт_ср_че_пе_сa".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[Денес во] LT",nextDay:"[Утре во] LT",nextWeek:"[Во] dddd [во] LT",lastDay:"[Вчера во] LT",lastWeek:function(){switch(this.day()){case 0:case 3:case 6:return"[Изминатата] dddd [во] LT";case 1:case 2:case 4:case 5:return"[Изминатиот] dddd [во] LT"}},sameElse:"L"},relativeTime:{future:"за %s",past:"пред %s",s:"неколку секунди",ss:"%d секунди",m:"една минута",mm:"%d минути",h:"еден час",hh:"%d часа",d:"еден ден",dd:"%d дена",M:"еден месец",MM:"%d месеци",y:"една година",yy:"%d години"},dayOfMonthOrdinalParse:/\d{1,2}-(ев|ен|ти|ви|ри|ми)/,ordinal:function(number){var lastDigit=number%10,last2Digits=number%100;return 0===number?number+"-ев":0===last2Digits?number+"-ен":last2Digits>10&&last2Digits<20?number+"-ти":1===lastDigit?number+"-ви":2===lastDigit?number+"-ри":7===lastDigit||8===lastDigit?number+"-ми":number+"-ти"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ml",{months:"ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),monthsShort:"ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),monthsParseExact:!0,weekdays:"ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),weekdaysShort:"ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),weekdaysMin:"ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),longDateFormat:{LT:"A h:mm -നു",LTS:"A h:mm:ss -നു",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm -നു",LLLL:"dddd, D MMMM YYYY, A h:mm -നു"},calendar:{sameDay:"[ഇന്ന്] LT",nextDay:"[നാളെ] LT",nextWeek:"dddd, LT",lastDay:"[ഇന്നലെ] LT",lastWeek:"[കഴിഞ്ഞ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s കഴിഞ്ഞ്",past:"%s മുൻപ്",s:"അൽപ നിമിഷങ്ങൾ",ss:"%d സെക്കൻഡ്",m:"ഒരു മിനിറ്റ്",mm:"%d മിനിറ്റ്",h:"ഒരു മണിക്കൂർ",hh:"%d മണിക്കൂർ",d:"ഒരു ദിവസം",dd:"%d ദിവസം",M:"ഒരു മാസം",MM:"%d മാസം",y:"ഒരു വർഷം",yy:"%d വർഷം"},meridiemParse:/രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"രാത്രി"===meridiem&&hour>=4||"ഉച്ച കഴിഞ്ഞ്"===meridiem||"വൈകുന്നേരം"===meridiem?hour+12:hour},meridiem:function(hour,minute,isLower){return hour<4?"രാത്രി":hour<12?"രാവിലെ":hour<17?"ഉച്ച കഴിഞ്ഞ്":hour<20?"വൈകുന്നേരം":"രാത്രി"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function translate(number,withoutSuffix,key,isFuture){switch(key){case"s":return withoutSuffix?"хэдхэн секунд":"хэдхэн секундын";case"ss":return number+(withoutSuffix?" секунд":" секундын");case"m":case"mm":return number+(withoutSuffix?" минут":" минутын");case"h":case"hh":return number+(withoutSuffix?" цаг":" цагийн");case"d":case"dd":return number+(withoutSuffix?" өдөр":" өдрийн");case"M":case"MM":return number+(withoutSuffix?" сар":" сарын");case"y":case"yy":return number+(withoutSuffix?" жил":" жилийн");default:return number}}moment.defineLocale("mn",{months:"Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split("_"),monthsShort:"1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split("_"),monthsParseExact:!0,weekdays:"Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),weekdaysShort:"Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),weekdaysMin:"Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY оны MMMMын D",LLL:"YYYY оны MMMMын D HH:mm",LLLL:"dddd, YYYY оны MMMMын D HH:mm"},meridiemParse:/ҮӨ|ҮХ/i,isPM:function(input){return"ҮХ"===input},meridiem:function(hour,minute,isLower){return hour<12?"ҮӨ":"ҮХ"},calendar:{sameDay:"[Өнөөдөр] LT",nextDay:"[Маргааш] LT",nextWeek:"[Ирэх] dddd LT",lastDay:"[Өчигдөр] LT",lastWeek:"[Өнгөрсөн] dddd LT",sameElse:"L"},relativeTime:{future:"%s дараа",past:"%s өмнө",s:translate,ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2} өдөр/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+" өдөр";default:return number}}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},numberMap={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"};function relativeTimeMr(number,withoutSuffix,string,isFuture){var output="";if(withoutSuffix)switch(string){case"s":output="काही सेकंद";break;case"ss":output="%d सेकंद";break;case"m":output="एक मिनिट";break;case"mm":output="%d मिनिटे";break;case"h":output="एक तास";break;case"hh":output="%d तास";break;case"d":output="एक दिवस";break;case"dd":output="%d दिवस";break;case"M":output="एक महिना";break;case"MM":output="%d महिने";break;case"y":output="एक वर्ष";break;case"yy":output="%d वर्षे"}else switch(string){case"s":output="काही सेकंदां";break;case"ss":output="%d सेकंदां";break;case"m":output="एका मिनिटा";break;case"mm":output="%d मिनिटां";break;case"h":output="एका तासा";break;case"hh":output="%d तासां";break;case"d":output="एका दिवसा";break;case"dd":output="%d दिवसां";break;case"M":output="एका महिन्या";break;case"MM":output="%d महिन्यां";break;case"y":output="एका वर्षा";break;case"yy":output="%d वर्षां"}return output.replace(/%d/i,number)}moment.defineLocale("mr",{months:"जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),monthsShort:"जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),monthsParseExact:!0,weekdays:"रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),weekdaysShort:"रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),weekdaysMin:"र_सो_मं_बु_गु_शु_श".split("_"),longDateFormat:{LT:"A h:mm वाजता",LTS:"A h:mm:ss वाजता",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm वाजता",LLLL:"dddd, D MMMM YYYY, A h:mm वाजता"},calendar:{sameDay:"[आज] LT",nextDay:"[उद्या] LT",nextWeek:"dddd, LT",lastDay:"[काल] LT",lastWeek:"[मागील] dddd, LT",sameElse:"L"},relativeTime:{future:"%sमध्ये",past:"%sपूर्वी",s:relativeTimeMr,ss:relativeTimeMr,m:relativeTimeMr,mm:relativeTimeMr,h:relativeTimeMr,hh:relativeTimeMr,d:relativeTimeMr,dd:relativeTimeMr,M:relativeTimeMr,MM:relativeTimeMr,y:relativeTimeMr,yy:relativeTimeMr},preparse:function(string){return string.replace(/[१२३४५६७८९०]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"पहाटे"===meridiem||"सकाळी"===meridiem?hour:"दुपारी"===meridiem||"सायंकाळी"===meridiem||"रात्री"===meridiem?hour>=12?hour:hour+12:void 0},meridiem:function(hour,minute,isLower){return hour>=0&&hour<6?"पहाटे":hour<12?"सकाळी":hour<17?"दुपारी":hour<20?"सायंकाळी":"रात्री"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ms",{months:"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),weekdays:"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),weekdaysShort:"Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),weekdaysMin:"Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"pagi"===meridiem?hour:"tengahari"===meridiem?hour>=11?hour:hour+12:"petang"===meridiem||"malam"===meridiem?hour+12:void 0},meridiem:function(hours,minutes,isLower){return hours<11?"pagi":hours<15?"tengahari":hours<19?"petang":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Esok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kelmarin pukul] LT",lastWeek:"dddd [lepas pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lepas",s:"beberapa saat",ss:"%d saat",m:"seminit",mm:"%d minit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ms-my",{months:"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),weekdays:"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),weekdaysShort:"Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),weekdaysMin:"Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [pukul] HH.mm",LLLL:"dddd, D MMMM YYYY [pukul] HH.mm"},meridiemParse:/pagi|tengahari|petang|malam/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"pagi"===meridiem?hour:"tengahari"===meridiem?hour>=11?hour:hour+12:"petang"===meridiem||"malam"===meridiem?hour+12:void 0},meridiem:function(hours,minutes,isLower){return hours<11?"pagi":hours<15?"tengahari":hours<19?"petang":"malam"},calendar:{sameDay:"[Hari ini pukul] LT",nextDay:"[Esok pukul] LT",nextWeek:"dddd [pukul] LT",lastDay:"[Kelmarin pukul] LT",lastWeek:"dddd [lepas pukul] LT",sameElse:"L"},relativeTime:{future:"dalam %s",past:"%s yang lepas",s:"beberapa saat",ss:"%d saat",m:"seminit",mm:"%d minit",h:"sejam",hh:"%d jam",d:"sehari",dd:"%d hari",M:"sebulan",MM:"%d bulan",y:"setahun",yy:"%d tahun"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("mt",{months:"Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split("_"),monthsShort:"Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split("_"),weekdays:"Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split("_"),weekdaysShort:"Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),weekdaysMin:"Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Illum fil-]LT",nextDay:"[Għada fil-]LT",nextWeek:"dddd [fil-]LT",lastDay:"[Il-bieraħ fil-]LT",lastWeek:"dddd [li għadda] [fil-]LT",sameElse:"L"},relativeTime:{future:"f’ %s",past:"%s ilu",s:"ftit sekondi",ss:"%d sekondi",m:"minuta",mm:"%d minuti",h:"siegħa",hh:"%d siegħat",d:"ġurnata",dd:"%d ġranet",M:"xahar",MM:"%d xhur",y:"sena",yy:"%d sni"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"၁",2:"၂",3:"၃",4:"၄",5:"၅",6:"၆",7:"၇",8:"၈",9:"၉",0:"၀"},numberMap={"၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","၀":"0"};moment.defineLocale("my",{months:"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),monthsShort:"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),weekdays:"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),weekdaysShort:"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),weekdaysMin:"နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[ယနေ.] LT [မှာ]",nextDay:"[မနက်ဖြန်] LT [မှာ]",nextWeek:"dddd LT [မှာ]",lastDay:"[မနေ.က] LT [မှာ]",lastWeek:"[ပြီးခဲ့သော] dddd LT [မှာ]",sameElse:"L"},relativeTime:{future:"လာမည့် %s မှာ",past:"လွန်ခဲ့သော %s က",s:"စက္ကန်.အနည်းငယ်",ss:"%d စက္ကန့်",m:"တစ်မိနစ်",mm:"%d မိနစ်",h:"တစ်နာရီ",hh:"%d နာရီ",d:"တစ်ရက်",dd:"%d ရက်",M:"တစ်လ",MM:"%d လ",y:"တစ်နှစ်",yy:"%d နှစ်"},preparse:function(string){return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("nb",{months:"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),monthsParseExact:!0,weekdays:"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),weekdaysShort:"sø._ma._ti._on._to._fr._lø.".split("_"),weekdaysMin:"sø_ma_ti_on_to_fr_lø".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] HH:mm",LLLL:"dddd D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[i dag kl.] LT",nextDay:"[i morgen kl.] LT",nextWeek:"dddd [kl.] LT",lastDay:"[i går kl.] LT",lastWeek:"[forrige] dddd [kl.] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s siden",s:"noen sekunder",ss:"%d sekunder",m:"ett minutt",mm:"%d minutter",h:"en time",hh:"%d timer",d:"en dag",dd:"%d dager",w:"en uke",ww:"%d uker",M:"en måned",MM:"%d måneder",y:"ett år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"१",2:"२",3:"३",4:"४",5:"५",6:"६",7:"७",8:"८",9:"९",0:"०"},numberMap={"१":"1","२":"2","३":"3","४":"4","५":"5","६":"6","७":"7","८":"8","९":"9","०":"0"};moment.defineLocale("ne",{months:"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),monthsShort:"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),monthsParseExact:!0,weekdays:"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),weekdaysShort:"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),weekdaysMin:"आ._सो._मं._बु._बि._शु._श.".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"Aको h:mm बजे",LTS:"Aको h:mm:ss बजे",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, Aको h:mm बजे",LLLL:"dddd, D MMMM YYYY, Aको h:mm बजे"},preparse:function(string){return string.replace(/[१२३४५६७८९०]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"राति"===meridiem?hour<4?hour:hour+12:"बिहान"===meridiem?hour:"दिउँसो"===meridiem?hour>=10?hour:hour+12:"साँझ"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<3?"राति":hour<12?"बिहान":hour<16?"दिउँसो":hour<20?"साँझ":"राति"},calendar:{sameDay:"[आज] LT",nextDay:"[भोलि] LT",nextWeek:"[आउँदो] dddd[,] LT",lastDay:"[हिजो] LT",lastWeek:"[गएको] dddd[,] LT",sameElse:"L"},relativeTime:{future:"%sमा",past:"%s अगाडि",s:"केही क्षण",ss:"%d सेकेण्ड",m:"एक मिनेट",mm:"%d मिनेट",h:"एक घण्टा",hh:"%d घण्टा",d:"एक दिन",dd:"%d दिन",M:"एक महिना",MM:"%d महिना",y:"एक बर्ष",yy:"%d बर्ष"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortWithDots="jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),monthsShortWithoutDots="jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),monthsParse=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i],monthsRegex=/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;moment.defineLocale("nl",{months:"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShortWithoutDots[m.month()]:monthsShortWithDots[m.month()]:monthsShortWithDots},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),weekdaysShort:"zo._ma._di._wo._do._vr._za.".split("_"),weekdaysMin:"zo_ma_di_wo_do_vr_za".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD-MM-YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[vandaag om] LT",nextDay:"[morgen om] LT",nextWeek:"dddd [om] LT",lastDay:"[gisteren om] LT",lastWeek:"[afgelopen] dddd [om] LT",sameElse:"L"},relativeTime:{future:"over %s",past:"%s geleden",s:"een paar seconden",ss:"%d seconden",m:"één minuut",mm:"%d minuten",h:"één uur",hh:"%d uur",d:"één dag",dd:"%d dagen",w:"één week",ww:"%d weken",M:"één maand",MM:"%d maanden",y:"één jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(number){return number+(1===number||8===number||number>=20?"ste":"de")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsShortWithDots="jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),monthsShortWithoutDots="jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),monthsParse=[/^jan/i,/^feb/i,/^maart|mrt.?$/i,/^apr/i,/^mei$/i,/^jun[i.]?$/i,/^jul[i.]?$/i,/^aug/i,/^sep/i,/^okt/i,/^nov/i,/^dec/i],monthsRegex=/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;moment.defineLocale("nl-be",{months:"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),monthsShort:function(m,format){return m?/-MMM-/.test(format)?monthsShortWithoutDots[m.month()]:monthsShortWithDots[m.month()]:monthsShortWithDots},monthsRegex:monthsRegex,monthsShortRegex:monthsRegex,monthsStrictRegex:/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,monthsShortStrictRegex:/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),weekdaysShort:"zo._ma._di._wo._do._vr._za.".split("_"),weekdaysMin:"zo_ma_di_wo_do_vr_za".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[vandaag om] LT",nextDay:"[morgen om] LT",nextWeek:"dddd [om] LT",lastDay:"[gisteren om] LT",lastWeek:"[afgelopen] dddd [om] LT",sameElse:"L"},relativeTime:{future:"over %s",past:"%s geleden",s:"een paar seconden",ss:"%d seconden",m:"één minuut",mm:"%d minuten",h:"één uur",hh:"%d uur",d:"één dag",dd:"%d dagen",M:"één maand",MM:"%d maanden",y:"één jaar",yy:"%d jaar"},dayOfMonthOrdinalParse:/\d{1,2}(ste|de)/,ordinal:function(number){return number+(1===number||8===number||number>=20?"ste":"de")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("nn",{months:"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),monthsShort:"jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),monthsParseExact:!0,weekdays:"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),weekdaysShort:"su._må._ty._on._to._fr._lau.".split("_"),weekdaysMin:"su_må_ty_on_to_fr_la".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY [kl.] H:mm",LLLL:"dddd D. MMMM YYYY [kl.] HH:mm"},calendar:{sameDay:"[I dag klokka] LT",nextDay:"[I morgon klokka] LT",nextWeek:"dddd [klokka] LT",lastDay:"[I går klokka] LT",lastWeek:"[Føregåande] dddd [klokka] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"%s sidan",s:"nokre sekund",ss:"%d sekund",m:"eit minutt",mm:"%d minutt",h:"ein time",hh:"%d timar",d:"ein dag",dd:"%d dagar",w:"ei veke",ww:"%d veker",M:"ein månad",MM:"%d månader",y:"eit år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("oc-lnc",{months:{standalone:"genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre".split("_"),format:"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split("_"),isFormat:/D[oD]?(\s)+MMMM/},monthsShort:"gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte".split("_"),weekdaysShort:"dg._dl._dm._dc._dj._dv._ds.".split("_"),weekdaysMin:"dg_dl_dm_dc_dj_dv_ds".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [de] YYYY",ll:"D MMM YYYY",LLL:"D MMMM [de] YYYY [a] H:mm",lll:"D MMM YYYY, H:mm",LLLL:"dddd D MMMM [de] YYYY [a] H:mm",llll:"ddd D MMM YYYY, H:mm"},calendar:{sameDay:"[uèi a] LT",nextDay:"[deman a] LT",nextWeek:"dddd [a] LT",lastDay:"[ièr a] LT",lastWeek:"dddd [passat a] LT",sameElse:"L"},relativeTime:{future:"d'aquí %s",past:"fa %s",s:"unas segondas",ss:"%d segondas",m:"una minuta",mm:"%d minutas",h:"una ora",hh:"%d oras",d:"un jorn",dd:"%d jorns",M:"un mes",MM:"%d meses",y:"un an",yy:"%d ans"},dayOfMonthOrdinalParse:/\d{1,2}(r|n|t|è|a)/,ordinal:function(number,period){var output=1===number?"r":2===number?"n":3===number?"r":4===number?"t":"è";return"w"!==period&&"W"!==period||(output="a"),number+output},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"੧",2:"੨",3:"੩",4:"੪",5:"੫",6:"੬",7:"੭",8:"੮",9:"੯",0:"੦"},numberMap={"੧":"1","੨":"2","੩":"3","੪":"4","੫":"5","੬":"6","੭":"7","੮":"8","੯":"9","੦":"0"};moment.defineLocale("pa-in",{months:"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),monthsShort:"ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),weekdays:"ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),weekdaysShort:"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),weekdaysMin:"ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),longDateFormat:{LT:"A h:mm ਵਜੇ",LTS:"A h:mm:ss ਵਜੇ",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm ਵਜੇ",LLLL:"dddd, D MMMM YYYY, A h:mm ਵਜੇ"},calendar:{sameDay:"[ਅਜ] LT",nextDay:"[ਕਲ] LT",nextWeek:"[ਅਗਲਾ] dddd, LT",lastDay:"[ਕਲ] LT",lastWeek:"[ਪਿਛਲੇ] dddd, LT",sameElse:"L"},relativeTime:{future:"%s ਵਿੱਚ",past:"%s ਪਿਛਲੇ",s:"ਕੁਝ ਸਕਿੰਟ",ss:"%d ਸਕਿੰਟ",m:"ਇਕ ਮਿੰਟ",mm:"%d ਮਿੰਟ",h:"ਇੱਕ ਘੰਟਾ",hh:"%d ਘੰਟੇ",d:"ਇੱਕ ਦਿਨ",dd:"%d ਦਿਨ",M:"ਇੱਕ ਮਹੀਨਾ",MM:"%d ਮਹੀਨੇ",y:"ਇੱਕ ਸਾਲ",yy:"%d ਸਾਲ"},preparse:function(string){return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"ਰਾਤ"===meridiem?hour<4?hour:hour+12:"ਸਵੇਰ"===meridiem?hour:"ਦੁਪਹਿਰ"===meridiem?hour>=10?hour:hour+12:"ਸ਼ਾਮ"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"ਰਾਤ":hour<10?"ਸਵੇਰ":hour<17?"ਦੁਪਹਿਰ":hour<20?"ਸ਼ਾਮ":"ਰਾਤ"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var monthsNominative="styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"),monthsSubjective="stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"),monthsParse=[/^sty/i,/^lut/i,/^mar/i,/^kwi/i,/^maj/i,/^cze/i,/^lip/i,/^sie/i,/^wrz/i,/^paź/i,/^lis/i,/^gru/i];function plural(n){return n%10<5&&n%10>1&&~~(n/10)%10!=1}function translate(number,withoutSuffix,key){var result=number+" ";switch(key){case"ss":return result+(plural(number)?"sekundy":"sekund");case"m":return withoutSuffix?"minuta":"minutę";case"mm":return result+(plural(number)?"minuty":"minut");case"h":return withoutSuffix?"godzina":"godzinę";case"hh":return result+(plural(number)?"godziny":"godzin");case"ww":return result+(plural(number)?"tygodnie":"tygodni");case"MM":return result+(plural(number)?"miesiące":"miesięcy");case"yy":return result+(plural(number)?"lata":"lat")}}moment.defineLocale("pl",{months:function(momentToFormat,format){return momentToFormat?/D MMMM/.test(format)?monthsSubjective[momentToFormat.month()]:monthsNominative[momentToFormat.month()]:monthsNominative},monthsShort:"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,weekdays:"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),weekdaysShort:"ndz_pon_wt_śr_czw_pt_sob".split("_"),weekdaysMin:"Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Dziś o] LT",nextDay:"[Jutro o] LT",nextWeek:function(){switch(this.day()){case 0:return"[W niedzielę o] LT";case 2:return"[We wtorek o] LT";case 3:return"[W środę o] LT";case 6:return"[W sobotę o] LT";default:return"[W] dddd [o] LT"}},lastDay:"[Wczoraj o] LT",lastWeek:function(){switch(this.day()){case 0:return"[W zeszłą niedzielę o] LT";case 3:return"[W zeszłą środę o] LT";case 6:return"[W zeszłą sobotę o] LT";default:return"[W zeszły] dddd [o] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"%s temu",s:"kilka sekund",ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:"1 dzień",dd:"%d dni",w:"tydzień",ww:translate,M:"miesiąc",MM:translate,y:"rok",yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("pt",{months:"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),monthsShort:"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),weekdays:"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),weekdaysShort:"Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),weekdaysMin:"Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY HH:mm",LLLL:"dddd, D [de] MMMM [de] YYYY HH:mm"},calendar:{sameDay:"[Hoje às] LT",nextDay:"[Amanhã às] LT",nextWeek:"dddd [às] LT",lastDay:"[Ontem às] LT",lastWeek:function(){return 0===this.day()||6===this.day()?"[Último] dddd [às] LT":"[Última] dddd [às] LT"},sameElse:"L"},relativeTime:{future:"em %s",past:"há %s",s:"segundos",ss:"%d segundos",m:"um minuto",mm:"%d minutos",h:"uma hora",hh:"%d horas",d:"um dia",dd:"%d dias",w:"uma semana",ww:"%d semanas",M:"um mês",MM:"%d meses",y:"um ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("pt-br",{months:"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),monthsShort:"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),weekdays:"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),weekdaysShort:"dom_seg_ter_qua_qui_sex_sáb".split("_"),weekdaysMin:"do_2ª_3ª_4ª_5ª_6ª_sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D [de] MMMM [de] YYYY",LLL:"D [de] MMMM [de] YYYY [às] HH:mm",LLLL:"dddd, D [de] MMMM [de] YYYY [às] HH:mm"},calendar:{sameDay:"[Hoje às] LT",nextDay:"[Amanhã às] LT",nextWeek:"dddd [às] LT",lastDay:"[Ontem às] LT",lastWeek:function(){return 0===this.day()||6===this.day()?"[Último] dddd [às] LT":"[Última] dddd [às] LT"},sameElse:"L"},relativeTime:{future:"em %s",past:"há %s",s:"poucos segundos",ss:"%d segundos",m:"um minuto",mm:"%d minutos",h:"uma hora",hh:"%d horas",d:"um dia",dd:"%d dias",M:"um mês",MM:"%d meses",y:"um ano",yy:"%d anos"},dayOfMonthOrdinalParse:/\d{1,2}º/,ordinal:"%dº",invalidDate:"Data inválida"})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function relativeTimeWithPlural(number,withoutSuffix,key){var separator=" ";return(number%100>=20||number>=100&&number%100==0)&&(separator=" de "),number+separator+{ss:"secunde",mm:"minute",hh:"ore",dd:"zile",ww:"săptămâni",MM:"luni",yy:"ani"}[key]}moment.defineLocale("ro",{months:"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),monthsShort:"ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),weekdaysShort:"Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),weekdaysMin:"Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY H:mm",LLLL:"dddd, D MMMM YYYY H:mm"},calendar:{sameDay:"[azi la] LT",nextDay:"[mâine la] LT",nextWeek:"dddd [la] LT",lastDay:"[ieri la] LT",lastWeek:"[fosta] dddd [la] LT",sameElse:"L"},relativeTime:{future:"peste %s",past:"%s în urmă",s:"câteva secunde",ss:relativeTimeWithPlural,m:"un minut",mm:relativeTimeWithPlural,h:"o oră",hh:relativeTimeWithPlural,d:"o zi",dd:relativeTimeWithPlural,w:"o săptămână",ww:relativeTimeWithPlural,M:"o lună",MM:relativeTimeWithPlural,y:"un an",yy:relativeTimeWithPlural},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function relativeTimeWithPlural(number,withoutSuffix,key){var num,forms;return"m"===key?withoutSuffix?"минута":"минуту":number+" "+(num=+number,forms={ss:withoutSuffix?"секунда_секунды_секунд":"секунду_секунды_секунд",mm:withoutSuffix?"минута_минуты_минут":"минуту_минуты_минут",hh:"час_часа_часов",dd:"день_дня_дней",ww:"неделя_недели_недель",MM:"месяц_месяца_месяцев",yy:"год_года_лет"}[key].split("_"),num%10==1&&num%100!=11?forms[0]:num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2])}var monthsParse=[/^янв/i,/^фев/i,/^мар/i,/^апр/i,/^ма[йя]/i,/^июн/i,/^июл/i,/^авг/i,/^сен/i,/^окт/i,/^ноя/i,/^дек/i];moment.defineLocale("ru",{months:{format:"января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),standalone:"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")},monthsShort:{format:"янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),standalone:"янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_")},weekdays:{standalone:"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),format:"воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),isFormat:/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/},weekdaysShort:"вс_пн_вт_ср_чт_пт_сб".split("_"),weekdaysMin:"вс_пн_вт_ср_чт_пт_сб".split("_"),monthsParse:monthsParse,longMonthsParse:monthsParse,shortMonthsParse:monthsParse,monthsRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,monthsShortRegex:/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,monthsStrictRegex:/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,monthsShortStrictRegex:/^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., H:mm",LLLL:"dddd, D MMMM YYYY г., H:mm"},calendar:{sameDay:"[Сегодня, в] LT",nextDay:"[Завтра, в] LT",lastDay:"[Вчера, в] LT",nextWeek:function(now){if(now.week()===this.week())return 2===this.day()?"[Во] dddd, [в] LT":"[В] dddd, [в] LT";switch(this.day()){case 0:return"[В следующее] dddd, [в] LT";case 1:case 2:case 4:return"[В следующий] dddd, [в] LT";case 3:case 5:case 6:return"[В следующую] dddd, [в] LT"}},lastWeek:function(now){if(now.week()===this.week())return 2===this.day()?"[Во] dddd, [в] LT":"[В] dddd, [в] LT";switch(this.day()){case 0:return"[В прошлое] dddd, [в] LT";case 1:case 2:case 4:return"[В прошлый] dddd, [в] LT";case 3:case 5:case 6:return"[В прошлую] dddd, [в] LT"}},sameElse:"L"},relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",ss:relativeTimeWithPlural,m:relativeTimeWithPlural,mm:relativeTimeWithPlural,h:"час",hh:relativeTimeWithPlural,d:"день",dd:relativeTimeWithPlural,w:"неделя",ww:relativeTimeWithPlural,M:"месяц",MM:relativeTimeWithPlural,y:"год",yy:relativeTimeWithPlural},meridiemParse:/ночи|утра|дня|вечера/i,isPM:function(input){return/^(дня|вечера)$/.test(input)},meridiem:function(hour,minute,isLower){return hour<4?"ночи":hour<12?"утра":hour<17?"дня":"вечера"},dayOfMonthOrdinalParse:/\d{1,2}-(й|го|я)/,ordinal:function(number,period){switch(period){case"M":case"d":case"DDD":return number+"-й";case"D":return number+"-го";case"w":case"W":return number+"-я";default:return number}},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var months=["جنوري","فيبروري","مارچ","اپريل","مئي","جون","جولاءِ","آگسٽ","سيپٽمبر","آڪٽوبر","نومبر","ڊسمبر"],days=["آچر","سومر","اڱارو","اربع","خميس","جمع","ڇنڇر"];moment.defineLocale("sd",{months:months,monthsShort:months,weekdays:days,weekdaysShort:days,weekdaysMin:days,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd، D MMMM YYYY HH:mm"},meridiemParse:/صبح|شام/,isPM:function(input){return"شام"===input},meridiem:function(hour,minute,isLower){return hour<12?"صبح":"شام"},calendar:{sameDay:"[اڄ] LT",nextDay:"[سڀاڻي] LT",nextWeek:"dddd [اڳين هفتي تي] LT",lastDay:"[ڪالهه] LT",lastWeek:"[گزريل هفتي] dddd [تي] LT",sameElse:"L"},relativeTime:{future:"%s پوء",past:"%s اڳ",s:"چند سيڪنڊ",ss:"%d سيڪنڊ",m:"هڪ منٽ",mm:"%d منٽ",h:"هڪ ڪلاڪ",hh:"%d ڪلاڪ",d:"هڪ ڏينهن",dd:"%d ڏينهن",M:"هڪ مهينو",MM:"%d مهينا",y:"هڪ سال",yy:"%d سال"},preparse:function(string){return string.replace(/،/g,",")},postformat:function(string){return string.replace(/,/g,"،")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("se",{months:"ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),monthsShort:"ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),weekdays:"sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),weekdaysShort:"sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),weekdaysMin:"s_v_m_g_d_b_L".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"MMMM D. [b.] YYYY",LLL:"MMMM D. [b.] YYYY [ti.] HH:mm",LLLL:"dddd, MMMM D. [b.] YYYY [ti.] HH:mm"},calendar:{sameDay:"[otne ti] LT",nextDay:"[ihttin ti] LT",nextWeek:"dddd [ti] LT",lastDay:"[ikte ti] LT",lastWeek:"[ovddit] dddd [ti] LT",sameElse:"L"},relativeTime:{future:"%s geažes",past:"maŋit %s",s:"moadde sekunddat",ss:"%d sekunddat",m:"okta minuhta",mm:"%d minuhtat",h:"okta diimmu",hh:"%d diimmut",d:"okta beaivi",dd:"%d beaivvit",M:"okta mánnu",MM:"%d mánut",y:"okta jahki",yy:"%d jagit"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("si",{months:"ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),monthsShort:"ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),weekdays:"ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),weekdaysShort:"ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),weekdaysMin:"ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"a h:mm",LTS:"a h:mm:ss",L:"YYYY/MM/DD",LL:"YYYY MMMM D",LLL:"YYYY MMMM D, a h:mm",LLLL:"YYYY MMMM D [වැනි] dddd, a h:mm:ss"},calendar:{sameDay:"[අද] LT[ට]",nextDay:"[හෙට] LT[ට]",nextWeek:"dddd LT[ට]",lastDay:"[ඊයේ] LT[ට]",lastWeek:"[පසුගිය] dddd LT[ට]",sameElse:"L"},relativeTime:{future:"%sකින්",past:"%sකට පෙර",s:"තත්පර කිහිපය",ss:"තත්පර %d",m:"මිනිත්තුව",mm:"මිනිත්තු %d",h:"පැය",hh:"පැය %d",d:"දිනය",dd:"දින %d",M:"මාසය",MM:"මාස %d",y:"වසර",yy:"වසර %d"},dayOfMonthOrdinalParse:/\d{1,2} වැනි/,ordinal:function(number){return number+" වැනි"},meridiemParse:/පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,isPM:function(input){return"ප.ව."===input||"පස් වරු"===input},meridiem:function(hours,minutes,isLower){return hours>11?isLower?"ප.ව.":"පස් වරු":isLower?"පෙ.ව.":"පෙර වරු"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var months="január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"),monthsShort="jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");function plural(n){return n>1&&n<5}function translate(number,withoutSuffix,key,isFuture){var result=number+" ";switch(key){case"s":return withoutSuffix||isFuture?"pár sekúnd":"pár sekundami";case"ss":return withoutSuffix||isFuture?result+(plural(number)?"sekundy":"sekúnd"):result+"sekundami";case"m":return withoutSuffix?"minúta":isFuture?"minútu":"minútou";case"mm":return withoutSuffix||isFuture?result+(plural(number)?"minúty":"minút"):result+"minútami";case"h":return withoutSuffix?"hodina":isFuture?"hodinu":"hodinou";case"hh":return withoutSuffix||isFuture?result+(plural(number)?"hodiny":"hodín"):result+"hodinami";case"d":return withoutSuffix||isFuture?"deň":"dňom";case"dd":return withoutSuffix||isFuture?result+(plural(number)?"dni":"dní"):result+"dňami";case"M":return withoutSuffix||isFuture?"mesiac":"mesiacom";case"MM":return withoutSuffix||isFuture?result+(plural(number)?"mesiace":"mesiacov"):result+"mesiacmi";case"y":return withoutSuffix||isFuture?"rok":"rokom";case"yy":return withoutSuffix||isFuture?result+(plural(number)?"roky":"rokov"):result+"rokmi"}}moment.defineLocale("sk",{months:months,monthsShort:monthsShort,weekdays:"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),weekdaysShort:"ne_po_ut_st_št_pi_so".split("_"),weekdaysMin:"ne_po_ut_st_št_pi_so".split("_"),longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd D. MMMM YYYY H:mm"},calendar:{sameDay:"[dnes o] LT",nextDay:"[zajtra o] LT",nextWeek:function(){switch(this.day()){case 0:return"[v nedeľu o] LT";case 1:case 2:return"[v] dddd [o] LT";case 3:return"[v stredu o] LT";case 4:return"[vo štvrtok o] LT";case 5:return"[v piatok o] LT";case 6:return"[v sobotu o] LT"}},lastDay:"[včera o] LT",lastWeek:function(){switch(this.day()){case 0:return"[minulú nedeľu o] LT";case 1:case 2:return"[minulý] dddd [o] LT";case 3:return"[minulú stredu o] LT";case 4:case 5:return"[minulý] dddd [o] LT";case 6:return"[minulú sobotu o] LT"}},sameElse:"L"},relativeTime:{future:"za %s",past:"pred %s",s:translate,ss:translate,m:translate,mm:translate,h:translate,hh:translate,d:translate,dd:translate,M:translate,MM:translate,y:translate,yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var result=number+" ";switch(key){case"s":return withoutSuffix||isFuture?"nekaj sekund":"nekaj sekundami";case"ss":return result+=1===number?withoutSuffix?"sekundo":"sekundi":2===number?withoutSuffix||isFuture?"sekundi":"sekundah":number<5?withoutSuffix||isFuture?"sekunde":"sekundah":"sekund";case"m":return withoutSuffix?"ena minuta":"eno minuto";case"mm":return result+=1===number?withoutSuffix?"minuta":"minuto":2===number?withoutSuffix||isFuture?"minuti":"minutama":number<5?withoutSuffix||isFuture?"minute":"minutami":withoutSuffix||isFuture?"minut":"minutami";case"h":return withoutSuffix?"ena ura":"eno uro";case"hh":return result+=1===number?withoutSuffix?"ura":"uro":2===number?withoutSuffix||isFuture?"uri":"urama":number<5?withoutSuffix||isFuture?"ure":"urami":withoutSuffix||isFuture?"ur":"urami";case"d":return withoutSuffix||isFuture?"en dan":"enim dnem";case"dd":return result+=1===number?withoutSuffix||isFuture?"dan":"dnem":2===number?withoutSuffix||isFuture?"dni":"dnevoma":withoutSuffix||isFuture?"dni":"dnevi";case"M":return withoutSuffix||isFuture?"en mesec":"enim mesecem";case"MM":return result+=1===number?withoutSuffix||isFuture?"mesec":"mesecem":2===number?withoutSuffix||isFuture?"meseca":"mesecema":number<5?withoutSuffix||isFuture?"mesece":"meseci":withoutSuffix||isFuture?"mesecev":"meseci";case"y":return withoutSuffix||isFuture?"eno leto":"enim letom";case"yy":return result+=1===number?withoutSuffix||isFuture?"leto":"letom":2===number?withoutSuffix||isFuture?"leti":"letoma":number<5?withoutSuffix||isFuture?"leta":"leti":withoutSuffix||isFuture?"let":"leti"}}moment.defineLocale("sl",{months:"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),monthsShort:"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),weekdaysShort:"ned._pon._tor._sre._čet._pet._sob.".split("_"),weekdaysMin:"ne_po_to_sr_če_pe_so".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD. MM. YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm",LLLL:"dddd, D. MMMM YYYY H:mm"},calendar:{sameDay:"[danes ob] LT",nextDay:"[jutri ob] LT",nextWeek:function(){switch(this.day()){case 0:return"[v] [nedeljo] [ob] LT";case 3:return"[v] [sredo] [ob] LT";case 6:return"[v] [soboto] [ob] LT";case 1:case 2:case 4:case 5:return"[v] dddd [ob] LT"}},lastDay:"[včeraj ob] LT",lastWeek:function(){switch(this.day()){case 0:return"[prejšnjo] [nedeljo] [ob] LT";case 3:return"[prejšnjo] [sredo] [ob] LT";case 6:return"[prejšnjo] [soboto] [ob] LT";case 1:case 2:case 4:case 5:return"[prejšnji] dddd [ob] LT"}},sameElse:"L"},relativeTime:{future:"čez %s",past:"pred %s",s:processRelativeTime,ss:processRelativeTime,m:processRelativeTime,mm:processRelativeTime,h:processRelativeTime,hh:processRelativeTime,d:processRelativeTime,dd:processRelativeTime,M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("sq",{months:"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),monthsShort:"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),weekdays:"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),weekdaysShort:"Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),weekdaysMin:"D_H_Ma_Më_E_P_Sh".split("_"),weekdaysParseExact:!0,meridiemParse:/PD|MD/,isPM:function(input){return"M"===input.charAt(0)},meridiem:function(hours,minutes,isLower){return hours<12?"PD":"MD"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Sot në] LT",nextDay:"[Nesër në] LT",nextWeek:"dddd [në] LT",lastDay:"[Dje në] LT",lastWeek:"dddd [e kaluar në] LT",sameElse:"L"},relativeTime:{future:"në %s",past:"%s më parë",s:"disa sekonda",ss:"%d sekonda",m:"një minutë",mm:"%d minuta",h:"një orë",hh:"%d orë",d:"një ditë",dd:"%d ditë",M:"një muaj",MM:"%d muaj",y:"një vit",yy:"%d vite"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var translator={words:{ss:["sekunda","sekunde","sekundi"],m:["jedan minut","jednog minuta"],mm:["minut","minuta","minuta"],h:["jedan sat","jednog sata"],hh:["sat","sata","sati"],d:["jedan dan","jednog dana"],dd:["dan","dana","dana"],M:["jedan mesec","jednog meseca"],MM:["mesec","meseca","meseci"],y:["jednu godinu","jedne godine"],yy:["godinu","godine","godina"]},correctGrammaticalCase:function(number,wordKey){return number%10>=1&&number%10<=4&&(number%100<10||number%100>=20)?number%10==1?wordKey[0]:wordKey[1]:wordKey[2]},translate:function(number,withoutSuffix,key,isFuture){var word,wordKey=translator.words[key];return 1===key.length?"y"===key&&withoutSuffix?"jedna godina":isFuture||withoutSuffix?wordKey[0]:wordKey[1]:(word=translator.correctGrammaticalCase(number,wordKey),"yy"===key&&withoutSuffix&&"godinu"===word?number+" godina":number+" "+word)}};moment.defineLocale("sr",{months:"januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),monthsShort:"jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),monthsParseExact:!0,weekdays:"nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),weekdaysShort:"ned._pon._uto._sre._čet._pet._sub.".split("_"),weekdaysMin:"ne_po_ut_sr_če_pe_su".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D. M. YYYY.",LL:"D. MMMM YYYY.",LLL:"D. MMMM YYYY. H:mm",LLLL:"dddd, D. MMMM YYYY. H:mm"},calendar:{sameDay:"[danas u] LT",nextDay:"[sutra u] LT",nextWeek:function(){switch(this.day()){case 0:return"[u] [nedelju] [u] LT";case 3:return"[u] [sredu] [u] LT";case 6:return"[u] [subotu] [u] LT";case 1:case 2:case 4:case 5:return"[u] dddd [u] LT"}},lastDay:"[juče u] LT",lastWeek:function(){return["[prošle] [nedelje] [u] LT","[prošlog] [ponedeljka] [u] LT","[prošlog] [utorka] [u] LT","[prošle] [srede] [u] LT","[prošlog] [četvrtka] [u] LT","[prošlog] [petka] [u] LT","[prošle] [subote] [u] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"za %s",past:"pre %s",s:"nekoliko sekundi",ss:translator.translate,m:translator.translate,mm:translator.translate,h:translator.translate,hh:translator.translate,d:translator.translate,dd:translator.translate,M:translator.translate,MM:translator.translate,y:translator.translate,yy:translator.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var translator={words:{ss:["секунда","секунде","секунди"],m:["један минут","једног минута"],mm:["минут","минута","минута"],h:["један сат","једног сата"],hh:["сат","сата","сати"],d:["један дан","једног дана"],dd:["дан","дана","дана"],M:["један месец","једног месеца"],MM:["месец","месеца","месеци"],y:["једну годину","једне године"],yy:["годину","године","година"]},correctGrammaticalCase:function(number,wordKey){return number%10>=1&&number%10<=4&&(number%100<10||number%100>=20)?number%10==1?wordKey[0]:wordKey[1]:wordKey[2]},translate:function(number,withoutSuffix,key,isFuture){var word,wordKey=translator.words[key];return 1===key.length?"y"===key&&withoutSuffix?"једна година":isFuture||withoutSuffix?wordKey[0]:wordKey[1]:(word=translator.correctGrammaticalCase(number,wordKey),"yy"===key&&withoutSuffix&&"годину"===word?number+" година":number+" "+word)}};moment.defineLocale("sr-cyrl",{months:"јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split("_"),monthsShort:"јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split("_"),monthsParseExact:!0,weekdays:"недеља_понедељак_уторак_среда_четвртак_петак_субота".split("_"),weekdaysShort:"нед._пон._уто._сре._чет._пет._суб.".split("_"),weekdaysMin:"не_по_ут_ср_че_пе_су".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"D. M. YYYY.",LL:"D. MMMM YYYY.",LLL:"D. MMMM YYYY. H:mm",LLLL:"dddd, D. MMMM YYYY. H:mm"},calendar:{sameDay:"[данас у] LT",nextDay:"[сутра у] LT",nextWeek:function(){switch(this.day()){case 0:return"[у] [недељу] [у] LT";case 3:return"[у] [среду] [у] LT";case 6:return"[у] [суботу] [у] LT";case 1:case 2:case 4:case 5:return"[у] dddd [у] LT"}},lastDay:"[јуче у] LT",lastWeek:function(){return["[прошле] [недеље] [у] LT","[прошлог] [понедељка] [у] LT","[прошлог] [уторка] [у] LT","[прошле] [среде] [у] LT","[прошлог] [четвртка] [у] LT","[прошлог] [петка] [у] LT","[прошле] [суботе] [у] LT"][this.day()]},sameElse:"L"},relativeTime:{future:"за %s",past:"пре %s",s:"неколико секунди",ss:translator.translate,m:translator.translate,mm:translator.translate,h:translator.translate,hh:translator.translate,d:translator.translate,dd:translator.translate,M:translator.translate,MM:translator.translate,y:translator.translate,yy:translator.translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ss",{months:"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),monthsShort:"Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),weekdays:"Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),weekdaysShort:"Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),weekdaysMin:"Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Namuhla nga] LT",nextDay:"[Kusasa nga] LT",nextWeek:"dddd [nga] LT",lastDay:"[Itolo nga] LT",lastWeek:"dddd [leliphelile] [nga] LT",sameElse:"L"},relativeTime:{future:"nga %s",past:"wenteka nga %s",s:"emizuzwana lomcane",ss:"%d mzuzwana",m:"umzuzu",mm:"%d emizuzu",h:"lihora",hh:"%d emahora",d:"lilanga",dd:"%d emalanga",M:"inyanga",MM:"%d tinyanga",y:"umnyaka",yy:"%d iminyaka"},meridiemParse:/ekuseni|emini|entsambama|ebusuku/,meridiem:function(hours,minutes,isLower){return hours<11?"ekuseni":hours<15?"emini":hours<19?"entsambama":"ebusuku"},meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"ekuseni"===meridiem?hour:"emini"===meridiem?hour>=11?hour:hour+12:"entsambama"===meridiem||"ebusuku"===meridiem?0===hour?0:hour+12:void 0},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:"%d",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("sv",{months:"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),monthsShort:"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),weekdays:"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),weekdaysShort:"sön_mån_tis_ons_tor_fre_lör".split("_"),weekdaysMin:"sö_må_ti_on_to_fr_lö".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"D MMMM YYYY",LLL:"D MMMM YYYY [kl.] HH:mm",LLLL:"dddd D MMMM YYYY [kl.] HH:mm",lll:"D MMM YYYY HH:mm",llll:"ddd D MMM YYYY HH:mm"},calendar:{sameDay:"[Idag] LT",nextDay:"[Imorgon] LT",lastDay:"[Igår] LT",nextWeek:"[På] dddd LT",lastWeek:"[I] dddd[s] LT",sameElse:"L"},relativeTime:{future:"om %s",past:"för %s sedan",s:"några sekunder",ss:"%d sekunder",m:"en minut",mm:"%d minuter",h:"en timme",hh:"%d timmar",d:"en dag",dd:"%d dagar",M:"en månad",MM:"%d månader",y:"ett år",yy:"%d år"},dayOfMonthOrdinalParse:/\d{1,2}(\:e|\:a)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?":e":1===b||2===b?":a":":e")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("sw",{months:"Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),monthsShort:"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),weekdays:"Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),weekdaysShort:"Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),weekdaysMin:"J2_J3_J4_J5_Al_Ij_J1".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"hh:mm A",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[leo saa] LT",nextDay:"[kesho saa] LT",nextWeek:"[wiki ijayo] dddd [saat] LT",lastDay:"[jana] LT",lastWeek:"[wiki iliyopita] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s baadaye",past:"tokea %s",s:"hivi punde",ss:"sekunde %d",m:"dakika moja",mm:"dakika %d",h:"saa limoja",hh:"masaa %d",d:"siku moja",dd:"siku %d",M:"mwezi mmoja",MM:"miezi %d",y:"mwaka mmoja",yy:"miaka %d"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var symbolMap={1:"௧",2:"௨",3:"௩",4:"௪",5:"௫",6:"௬",7:"௭",8:"௮",9:"௯",0:"௦"},numberMap={"௧":"1","௨":"2","௩":"3","௪":"4","௫":"5","௬":"6","௭":"7","௮":"8","௯":"9","௦":"0"};moment.defineLocale("ta",{months:"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),monthsShort:"ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),weekdays:"ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),weekdaysShort:"ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),weekdaysMin:"ஞா_தி_செ_பு_வி_வெ_ச".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, HH:mm",LLLL:"dddd, D MMMM YYYY, HH:mm"},calendar:{sameDay:"[இன்று] LT",nextDay:"[நாளை] LT",nextWeek:"dddd, LT",lastDay:"[நேற்று] LT",lastWeek:"[கடந்த வாரம்] dddd, LT",sameElse:"L"},relativeTime:{future:"%s இல்",past:"%s முன்",s:"ஒரு சில விநாடிகள்",ss:"%d விநாடிகள்",m:"ஒரு நிமிடம்",mm:"%d நிமிடங்கள்",h:"ஒரு மணி நேரம்",hh:"%d மணி நேரம்",d:"ஒரு நாள்",dd:"%d நாட்கள்",M:"ஒரு மாதம்",MM:"%d மாதங்கள்",y:"ஒரு வருடம்",yy:"%d ஆண்டுகள்"},dayOfMonthOrdinalParse:/\d{1,2}வது/,ordinal:function(number){return number+"வது"},preparse:function(string){return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g,(function(match){return numberMap[match]}))},postformat:function(string){return string.replace(/\d/g,(function(match){return symbolMap[match]}))},meridiemParse:/யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,meridiem:function(hour,minute,isLower){return hour<2?" யாமம்":hour<6?" வைகறை":hour<10?" காலை":hour<14?" நண்பகல்":hour<18?" எற்பாடு":hour<22?" மாலை":" யாமம்"},meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"யாமம்"===meridiem?hour<2?hour:hour+12:"வைகறை"===meridiem||"காலை"===meridiem||"நண்பகல்"===meridiem&&hour>=10?hour:hour+12},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("te",{months:"జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),monthsShort:"జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),monthsParseExact:!0,weekdays:"ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),weekdaysShort:"ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),weekdaysMin:"ఆ_సో_మం_బు_గు_శు_శ".split("_"),longDateFormat:{LT:"A h:mm",LTS:"A h:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY, A h:mm",LLLL:"dddd, D MMMM YYYY, A h:mm"},calendar:{sameDay:"[నేడు] LT",nextDay:"[రేపు] LT",nextWeek:"dddd, LT",lastDay:"[నిన్న] LT",lastWeek:"[గత] dddd, LT",sameElse:"L"},relativeTime:{future:"%s లో",past:"%s క్రితం",s:"కొన్ని క్షణాలు",ss:"%d సెకన్లు",m:"ఒక నిమిషం",mm:"%d నిమిషాలు",h:"ఒక గంట",hh:"%d గంటలు",d:"ఒక రోజు",dd:"%d రోజులు",M:"ఒక నెల",MM:"%d నెలలు",y:"ఒక సంవత్సరం",yy:"%d సంవత్సరాలు"},dayOfMonthOrdinalParse:/\d{1,2}వ/,ordinal:"%dవ",meridiemParse:/రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"రాత్రి"===meridiem?hour<4?hour:hour+12:"ఉదయం"===meridiem?hour:"మధ్యాహ్నం"===meridiem?hour>=10?hour:hour+12:"సాయంత్రం"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"రాత్రి":hour<10?"ఉదయం":hour<17?"మధ్యాహ్నం":hour<20?"సాయంత్రం":"రాత్రి"},week:{dow:0,doy:6}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("tet",{months:"Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),monthsShort:"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),weekdays:"Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),weekdaysShort:"Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),weekdaysMin:"Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Ohin iha] LT",nextDay:"[Aban iha] LT",nextWeek:"dddd [iha] LT",lastDay:"[Horiseik iha] LT",lastWeek:"dddd [semana kotuk] [iha] LT",sameElse:"L"},relativeTime:{future:"iha %s",past:"%s liuba",s:"segundu balun",ss:"segundu %d",m:"minutu ida",mm:"minutu %d",h:"oras ida",hh:"oras %d",d:"loron ida",dd:"loron %d",M:"fulan ida",MM:"fulan %d",y:"tinan ida",yy:"tinan %d"},dayOfMonthOrdinalParse:/\d{1,2}(st|nd|rd|th)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={0:"-ум",1:"-ум",2:"-юм",3:"-юм",4:"-ум",5:"-ум",6:"-ум",7:"-ум",8:"-ум",9:"-ум",10:"-ум",12:"-ум",13:"-ум",20:"-ум",30:"-юм",40:"-ум",50:"-ум",60:"-ум",70:"-ум",80:"-ум",90:"-ум",100:"-ум"};moment.defineLocale("tg",{months:{format:"январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри".split("_"),standalone:"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_")},monthsShort:"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),weekdays:"якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),weekdaysShort:"яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),weekdaysMin:"яш_дш_сш_чш_пш_ҷм_шб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[Имрӯз соати] LT",nextDay:"[Фардо соати] LT",lastDay:"[Дирӯз соати] LT",nextWeek:"dddd[и] [ҳафтаи оянда соати] LT",lastWeek:"dddd[и] [ҳафтаи гузашта соати] LT",sameElse:"L"},relativeTime:{future:"баъди %s",past:"%s пеш",s:"якчанд сония",m:"як дақиқа",mm:"%d дақиқа",h:"як соат",hh:"%d соат",d:"як рӯз",dd:"%d рӯз",M:"як моҳ",MM:"%d моҳ",y:"як сол",yy:"%d сол"},meridiemParse:/шаб|субҳ|рӯз|бегоҳ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"шаб"===meridiem?hour<4?hour:hour+12:"субҳ"===meridiem?hour:"рӯз"===meridiem?hour>=11?hour:hour+12:"бегоҳ"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){return hour<4?"шаб":hour<11?"субҳ":hour<16?"рӯз":hour<19?"бегоҳ":"шаб"},dayOfMonthOrdinalParse:/\d{1,2}-(ум|юм)/,ordinal:function(number){return number+(suffixes[number]||suffixes[number%10]||suffixes[number>=100?100:null])},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("th",{months:"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),monthsShort:"ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split("_"),monthsParseExact:!0,weekdays:"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),weekdaysShort:"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),weekdaysMin:"อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm",LTS:"H:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY เวลา H:mm",LLLL:"วันddddที่ D MMMM YYYY เวลา H:mm"},meridiemParse:/ก่อนเที่ยง|หลังเที่ยง/,isPM:function(input){return"หลังเที่ยง"===input},meridiem:function(hour,minute,isLower){return hour<12?"ก่อนเที่ยง":"หลังเที่ยง"},calendar:{sameDay:"[วันนี้ เวลา] LT",nextDay:"[พรุ่งนี้ เวลา] LT",nextWeek:"dddd[หน้า เวลา] LT",lastDay:"[เมื่อวานนี้ เวลา] LT",lastWeek:"[วัน]dddd[ที่แล้ว เวลา] LT",sameElse:"L"},relativeTime:{future:"อีก %s",past:"%sที่แล้ว",s:"ไม่กี่วินาที",ss:"%d วินาที",m:"1 นาที",mm:"%d นาที",h:"1 ชั่วโมง",hh:"%d ชั่วโมง",d:"1 วัน",dd:"%d วัน",w:"1 สัปดาห์",ww:"%d สัปดาห์",M:"1 เดือน",MM:"%d เดือน",y:"1 ปี",yy:"%d ปี"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={1:"'inji",5:"'inji",8:"'inji",70:"'inji",80:"'inji",2:"'nji",7:"'nji",20:"'nji",50:"'nji",3:"'ünji",4:"'ünji",100:"'ünji",6:"'njy",9:"'unjy",10:"'unjy",30:"'unjy",60:"'ynjy",90:"'ynjy"};moment.defineLocale("tk",{months:"Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr".split("_"),monthsShort:"Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek".split("_"),weekdays:"Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe".split("_"),weekdaysShort:"Ýek_Duş_Siş_Çar_Pen_Ann_Şen".split("_"),weekdaysMin:"Ýk_Dş_Sş_Çr_Pn_An_Şn".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün sagat] LT",nextDay:"[ertir sagat] LT",nextWeek:"[indiki] dddd [sagat] LT",lastDay:"[düýn] LT",lastWeek:"[geçen] dddd [sagat] LT",sameElse:"L"},relativeTime:{future:"%s soň",past:"%s öň",s:"birnäçe sekunt",m:"bir minut",mm:"%d minut",h:"bir sagat",hh:"%d sagat",d:"bir gün",dd:"%d gün",M:"bir aý",MM:"%d aý",y:"bir ýyl",yy:"%d ýyl"},ordinal:function(number,period){switch(period){case"d":case"D":case"Do":case"DD":return number;default:if(0===number)return number+"'unjy";var a=number%10;return number+(suffixes[a]||suffixes[number%100-a]||suffixes[number>=100?100:null])}},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("tl-ph",{months:"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),monthsShort:"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),weekdays:"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),weekdaysShort:"Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),weekdaysMin:"Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"MM/D/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY HH:mm",LLLL:"dddd, MMMM DD, YYYY HH:mm"},calendar:{sameDay:"LT [ngayong araw]",nextDay:"[Bukas ng] LT",nextWeek:"LT [sa susunod na] dddd",lastDay:"LT [kahapon]",lastWeek:"LT [noong nakaraang] dddd",sameElse:"L"},relativeTime:{future:"sa loob ng %s",past:"%s ang nakalipas",s:"ilang segundo",ss:"%d segundo",m:"isang minuto",mm:"%d minuto",h:"isang oras",hh:"%d oras",d:"isang araw",dd:"%d araw",M:"isang buwan",MM:"%d buwan",y:"isang taon",yy:"%d taon"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(number){return number},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var numbersNouns="pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");function translate(number,withoutSuffix,string,isFuture){var numberNoun=function(number){var hundred=Math.floor(number%1e3/100),ten=Math.floor(number%100/10),one=number%10,word="";return hundred>0&&(word+=numbersNouns[hundred]+"vatlh"),ten>0&&(word+=(""!==word?" ":"")+numbersNouns[ten]+"maH"),one>0&&(word+=(""!==word?" ":"")+numbersNouns[one]),""===word?"pagh":word}(number);switch(string){case"ss":return numberNoun+" lup";case"mm":return numberNoun+" tup";case"hh":return numberNoun+" rep";case"dd":return numberNoun+" jaj";case"MM":return numberNoun+" jar";case"yy":return numberNoun+" DIS"}}moment.defineLocale("tlh",{months:"tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),monthsShort:"jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),monthsParseExact:!0,weekdays:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),weekdaysShort:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),weekdaysMin:"lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[DaHjaj] LT",nextDay:"[wa’leS] LT",nextWeek:"LLL",lastDay:"[wa’Hu’] LT",lastWeek:"LLL",sameElse:"L"},relativeTime:{future:function(output){var time=output;return time=-1!==output.indexOf("jaj")?time.slice(0,-3)+"leS":-1!==output.indexOf("jar")?time.slice(0,-3)+"waQ":-1!==output.indexOf("DIS")?time.slice(0,-3)+"nem":time+" pIq"},past:function(output){var time=output;return time=-1!==output.indexOf("jaj")?time.slice(0,-3)+"Hu’":-1!==output.indexOf("jar")?time.slice(0,-3)+"wen":-1!==output.indexOf("DIS")?time.slice(0,-3)+"ben":time+" ret"},s:"puS lup",ss:translate,m:"wa’ tup",mm:translate,h:"wa’ rep",hh:translate,d:"wa’ jaj",dd:translate,M:"wa’ jar",MM:translate,y:"wa’ DIS",yy:translate},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var suffixes={1:"'inci",5:"'inci",8:"'inci",70:"'inci",80:"'inci",2:"'nci",7:"'nci",20:"'nci",50:"'nci",3:"'üncü",4:"'üncü",100:"'üncü",6:"'ncı",9:"'uncu",10:"'uncu",30:"'uncu",60:"'ıncı",90:"'ıncı"};moment.defineLocale("tr",{months:"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),monthsShort:"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),weekdays:"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),weekdaysShort:"Paz_Pzt_Sal_Çar_Per_Cum_Cmt".split("_"),weekdaysMin:"Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),meridiem:function(hours,minutes,isLower){return hours<12?isLower?"öö":"ÖÖ":isLower?"ös":"ÖS"},meridiemParse:/öö|ÖÖ|ös|ÖS/,isPM:function(input){return"ös"===input||"ÖS"===input},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[bugün saat] LT",nextDay:"[yarın saat] LT",nextWeek:"[gelecek] dddd [saat] LT",lastDay:"[dün] LT",lastWeek:"[geçen] dddd [saat] LT",sameElse:"L"},relativeTime:{future:"%s sonra",past:"%s önce",s:"birkaç saniye",ss:"%d saniye",m:"bir dakika",mm:"%d dakika",h:"bir saat",hh:"%d saat",d:"bir gün",dd:"%d gün",w:"bir hafta",ww:"%d hafta",M:"bir ay",MM:"%d ay",y:"bir yıl",yy:"%d yıl"},ordinal:function(number,period){switch(period){case"d":case"D":case"Do":case"DD":return number;default:if(0===number)return number+"'ıncı";var a=number%10;return number+(suffixes[a]||suffixes[number%100-a]||suffixes[number>=100?100:null])}},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function processRelativeTime(number,withoutSuffix,key,isFuture){var format={s:["viensas secunds","'iensas secunds"],ss:[number+" secunds",number+" secunds"],m:["'n míut","'iens míut"],mm:[number+" míuts",number+" míuts"],h:["'n þora","'iensa þora"],hh:[number+" þoras",number+" þoras"],d:["'n ziua","'iensa ziua"],dd:[number+" ziuas",number+" ziuas"],M:["'n mes","'iens mes"],MM:[number+" mesen",number+" mesen"],y:["'n ar","'iens ar"],yy:[number+" ars",number+" ars"]};return isFuture||withoutSuffix?format[key][0]:format[key][1]}moment.defineLocale("tzl",{months:"Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),monthsShort:"Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),weekdays:"Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),weekdaysShort:"Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),weekdaysMin:"Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),longDateFormat:{LT:"HH.mm",LTS:"HH.mm.ss",L:"DD.MM.YYYY",LL:"D. MMMM [dallas] YYYY",LLL:"D. MMMM [dallas] YYYY HH.mm",LLLL:"dddd, [li] D. MMMM [dallas] YYYY HH.mm"},meridiemParse:/d\'o|d\'a/i,isPM:function(input){return"d'o"===input.toLowerCase()},meridiem:function(hours,minutes,isLower){return hours>11?isLower?"d'o":"D'O":isLower?"d'a":"D'A"},calendar:{sameDay:"[oxhi à] LT",nextDay:"[demà à] LT",nextWeek:"dddd [à] LT",lastDay:"[ieiri à] LT",lastWeek:"[sür el] dddd [lasteu à] LT",sameElse:"L"},relativeTime:{future:"osprei %s",past:"ja%s",s:processRelativeTime,ss:processRelativeTime,m:processRelativeTime,mm:processRelativeTime,h:processRelativeTime,hh:processRelativeTime,d:processRelativeTime,dd:processRelativeTime,M:processRelativeTime,MM:processRelativeTime,y:processRelativeTime,yy:processRelativeTime},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("tzm",{months:"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),monthsShort:"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),weekdays:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),weekdaysShort:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),weekdaysMin:"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[ⴰⵙⴷⵅ ⴴ] LT",nextDay:"[ⴰⵙⴽⴰ ⴴ] LT",nextWeek:"dddd [ⴴ] LT",lastDay:"[ⴰⵚⴰⵏⵜ ⴴ] LT",lastWeek:"dddd [ⴴ] LT",sameElse:"L"},relativeTime:{future:"ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",past:"ⵢⴰⵏ %s",s:"ⵉⵎⵉⴽ",ss:"%d ⵉⵎⵉⴽ",m:"ⵎⵉⵏⵓⴺ",mm:"%d ⵎⵉⵏⵓⴺ",h:"ⵙⴰⵄⴰ",hh:"%d ⵜⴰⵙⵙⴰⵄⵉⵏ",d:"ⴰⵙⵙ",dd:"%d oⵙⵙⴰⵏ",M:"ⴰⵢoⵓⵔ",MM:"%d ⵉⵢⵢⵉⵔⵏ",y:"ⴰⵙⴳⴰⵙ",yy:"%d ⵉⵙⴳⴰⵙⵏ"},week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("tzm-latn",{months:"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),monthsShort:"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),weekdays:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),weekdaysShort:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),weekdaysMin:"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd D MMMM YYYY HH:mm"},calendar:{sameDay:"[asdkh g] LT",nextDay:"[aska g] LT",nextWeek:"dddd [g] LT",lastDay:"[assant g] LT",lastWeek:"dddd [g] LT",sameElse:"L"},relativeTime:{future:"dadkh s yan %s",past:"yan %s",s:"imik",ss:"%d imik",m:"minuḍ",mm:"%d minuḍ",h:"saɛa",hh:"%d tassaɛin",d:"ass",dd:"%d ossan",M:"ayowr",MM:"%d iyyirn",y:"asgas",yy:"%d isgasn"},week:{dow:6,doy:12}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("ug-cn",{months:"يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),monthsShort:"يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),weekdays:"يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),weekdaysShort:"يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),weekdaysMin:"يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY-MM-DD",LL:"YYYY-يىلىM-ئاينىڭD-كۈنى",LLL:"YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",LLLL:"dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm"},meridiemParse:/يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"يېرىم كېچە"===meridiem||"سەھەر"===meridiem||"چۈشتىن بۇرۇن"===meridiem?hour:"چۈشتىن كېيىن"===meridiem||"كەچ"===meridiem?hour+12:hour>=11?hour:hour+12},meridiem:function(hour,minute,isLower){var hm=100*hour+minute;return hm<600?"يېرىم كېچە":hm<900?"سەھەر":hm<1130?"چۈشتىن بۇرۇن":hm<1230?"چۈش":hm<1800?"چۈشتىن كېيىن":"كەچ"},calendar:{sameDay:"[بۈگۈن سائەت] LT",nextDay:"[ئەتە سائەت] LT",nextWeek:"[كېلەركى] dddd [سائەت] LT",lastDay:"[تۆنۈگۈن] LT",lastWeek:"[ئالدىنقى] dddd [سائەت] LT",sameElse:"L"},relativeTime:{future:"%s كېيىن",past:"%s بۇرۇن",s:"نەچچە سېكونت",ss:"%d سېكونت",m:"بىر مىنۇت",mm:"%d مىنۇت",h:"بىر سائەت",hh:"%d سائەت",d:"بىر كۈن",dd:"%d كۈن",M:"بىر ئاي",MM:"%d ئاي",y:"بىر يىل",yy:"%d يىل"},dayOfMonthOrdinalParse:/\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"-كۈنى";case"w":case"W":return number+"-ھەپتە";default:return number}},preparse:function(string){return string.replace(/،/g,",")},postformat:function(string){return string.replace(/,/g,"،")},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
function relativeTimeWithPlural(number,withoutSuffix,key){var num,forms;return"m"===key?withoutSuffix?"хвилина":"хвилину":"h"===key?withoutSuffix?"година":"годину":number+" "+(num=+number,forms={ss:withoutSuffix?"секунда_секунди_секунд":"секунду_секунди_секунд",mm:withoutSuffix?"хвилина_хвилини_хвилин":"хвилину_хвилини_хвилин",hh:withoutSuffix?"година_години_годин":"годину_години_годин",dd:"день_дні_днів",MM:"місяць_місяці_місяців",yy:"рік_роки_років"}[key].split("_"),num%10==1&&num%100!=11?forms[0]:num%10>=2&&num%10<=4&&(num%100<10||num%100>=20)?forms[1]:forms[2])}function processHoursFunction(str){return function(){return str+"о"+(11===this.hours()?"б":"")+"] LT"}}moment.defineLocale("uk",{months:{format:"січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),standalone:"січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")},monthsShort:"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),weekdays:function(m,format){var weekdays={nominative:"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),accusative:"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),genitive:"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")};return!0===m?weekdays.nominative.slice(1,7).concat(weekdays.nominative.slice(0,1)):m?weekdays[/(\[[ВвУу]\]) ?dddd/.test(format)?"accusative":/\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)?"genitive":"nominative"][m.day()]:weekdays.nominative},weekdaysShort:"нд_пн_вт_ср_чт_пт_сб".split("_"),weekdaysMin:"нд_пн_вт_ср_чт_пт_сб".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY р.",LLL:"D MMMM YYYY р., HH:mm",LLLL:"dddd, D MMMM YYYY р., HH:mm"},calendar:{sameDay:processHoursFunction("[Сьогодні "),nextDay:processHoursFunction("[Завтра "),lastDay:processHoursFunction("[Вчора "),nextWeek:processHoursFunction("[У] dddd ["),lastWeek:function(){switch(this.day()){case 0:case 3:case 5:case 6:return processHoursFunction("[Минулої] dddd [").call(this);case 1:case 2:case 4:return processHoursFunction("[Минулого] dddd [").call(this)}},sameElse:"L"},relativeTime:{future:"за %s",past:"%s тому",s:"декілька секунд",ss:relativeTimeWithPlural,m:relativeTimeWithPlural,mm:relativeTimeWithPlural,h:"годину",hh:relativeTimeWithPlural,d:"день",dd:relativeTimeWithPlural,M:"місяць",MM:relativeTimeWithPlural,y:"рік",yy:relativeTimeWithPlural},meridiemParse:/ночі|ранку|дня|вечора/,isPM:function(input){return/^(дня|вечора)$/.test(input)},meridiem:function(hour,minute,isLower){return hour<4?"ночі":hour<12?"ранку":hour<17?"дня":"вечора"},dayOfMonthOrdinalParse:/\d{1,2}-(й|го)/,ordinal:function(number,period){switch(period){case"M":case"d":case"DDD":case"w":case"W":return number+"-й";case"D":return number+"-го";default:return number}},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
var months=["جنوری","فروری","مارچ","اپریل","مئی","جون","جولائی","اگست","ستمبر","اکتوبر","نومبر","دسمبر"],days=["اتوار","پیر","منگل","بدھ","جمعرات","جمعہ","ہفتہ"];moment.defineLocale("ur",{months:months,monthsShort:months,weekdays:days,weekdaysShort:days,weekdaysMin:days,longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd، D MMMM YYYY HH:mm"},meridiemParse:/صبح|شام/,isPM:function(input){return"شام"===input},meridiem:function(hour,minute,isLower){return hour<12?"صبح":"شام"},calendar:{sameDay:"[آج بوقت] LT",nextDay:"[کل بوقت] LT",nextWeek:"dddd [بوقت] LT",lastDay:"[گذشتہ روز بوقت] LT",lastWeek:"[گذشتہ] dddd [بوقت] LT",sameElse:"L"},relativeTime:{future:"%s بعد",past:"%s قبل",s:"چند سیکنڈ",ss:"%d سیکنڈ",m:"ایک منٹ",mm:"%d منٹ",h:"ایک گھنٹہ",hh:"%d گھنٹے",d:"ایک دن",dd:"%d دن",M:"ایک ماہ",MM:"%d ماہ",y:"ایک سال",yy:"%d سال"},preparse:function(string){return string.replace(/،/g,",")},postformat:function(string){return string.replace(/,/g,"،")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("uz",{months:"январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),monthsShort:"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),weekdays:"Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),weekdaysShort:"Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),weekdaysMin:"Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"D MMMM YYYY, dddd HH:mm"},calendar:{sameDay:"[Бугун соат] LT [да]",nextDay:"[Эртага] LT [да]",nextWeek:"dddd [куни соат] LT [да]",lastDay:"[Кеча соат] LT [да]",lastWeek:"[Утган] dddd [куни соат] LT [да]",sameElse:"L"},relativeTime:{future:"Якин %s ичида",past:"Бир неча %s олдин",s:"фурсат",ss:"%d фурсат",m:"бир дакика",mm:"%d дакика",h:"бир соат",hh:"%d соат",d:"бир кун",dd:"%d кун",M:"бир ой",MM:"%d ой",y:"бир йил",yy:"%d йил"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("uz-latn",{months:"Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),monthsShort:"Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),weekdays:"Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),weekdaysShort:"Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),weekdaysMin:"Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"D MMMM YYYY, dddd HH:mm"},calendar:{sameDay:"[Bugun soat] LT [da]",nextDay:"[Ertaga] LT [da]",nextWeek:"dddd [kuni soat] LT [da]",lastDay:"[Kecha soat] LT [da]",lastWeek:"[O'tgan] dddd [kuni soat] LT [da]",sameElse:"L"},relativeTime:{future:"Yaqin %s ichida",past:"Bir necha %s oldin",s:"soniya",ss:"%d soniya",m:"bir daqiqa",mm:"%d daqiqa",h:"bir soat",hh:"%d soat",d:"bir kun",dd:"%d kun",M:"bir oy",MM:"%d oy",y:"bir yil",yy:"%d yil"},week:{dow:1,doy:7}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("vi",{months:"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),monthsShort:"Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12".split("_"),monthsParseExact:!0,weekdays:"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),weekdaysShort:"CN_T2_T3_T4_T5_T6_T7".split("_"),weekdaysMin:"CN_T2_T3_T4_T5_T6_T7".split("_"),weekdaysParseExact:!0,meridiemParse:/sa|ch/i,isPM:function(input){return/^ch$/i.test(input)},meridiem:function(hours,minutes,isLower){return hours<12?isLower?"sa":"SA":isLower?"ch":"CH"},longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"D MMMM [năm] YYYY",LLL:"D MMMM [năm] YYYY HH:mm",LLLL:"dddd, D MMMM [năm] YYYY HH:mm",l:"DD/M/YYYY",ll:"D MMM YYYY",lll:"D MMM YYYY HH:mm",llll:"ddd, D MMM YYYY HH:mm"},calendar:{sameDay:"[Hôm nay lúc] LT",nextDay:"[Ngày mai lúc] LT",nextWeek:"dddd [tuần tới lúc] LT",lastDay:"[Hôm qua lúc] LT",lastWeek:"dddd [tuần trước lúc] LT",sameElse:"L"},relativeTime:{future:"%s tới",past:"%s trước",s:"vài giây",ss:"%d giây",m:"một phút",mm:"%d phút",h:"một giờ",hh:"%d giờ",d:"một ngày",dd:"%d ngày",w:"một tuần",ww:"%d tuần",M:"một tháng",MM:"%d tháng",y:"một năm",yy:"%d năm"},dayOfMonthOrdinalParse:/\d{1,2}/,ordinal:function(number){return number},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("x-pseudo",{months:"J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split("_"),monthsShort:"J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split("_"),monthsParseExact:!0,weekdays:"S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split("_"),weekdaysShort:"S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),weekdaysMin:"S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY HH:mm",LLLL:"dddd, D MMMM YYYY HH:mm"},calendar:{sameDay:"[T~ódá~ý át] LT",nextDay:"[T~ómó~rró~w át] LT",nextWeek:"dddd [át] LT",lastDay:"[Ý~ést~érdá~ý át] LT",lastWeek:"[L~ást] dddd [át] LT",sameElse:"L"},relativeTime:{future:"í~ñ %s",past:"%s á~gó",s:"á ~féw ~sécó~ñds",ss:"%d s~écóñ~ds",m:"á ~míñ~úté",mm:"%d m~íñú~tés",h:"á~ñ hó~úr",hh:"%d h~óúrs",d:"á ~dáý",dd:"%d d~áýs",M:"á ~móñ~th",MM:"%d m~óñt~hs",y:"á ~ýéár",yy:"%d ý~éárs"},dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10;return number+(1==~~(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("yo",{months:"Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split("_"),monthsShort:"Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split("_"),weekdays:"Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),weekdaysShort:"Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),weekdaysMin:"Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),longDateFormat:{LT:"h:mm A",LTS:"h:mm:ss A",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY h:mm A",LLLL:"dddd, D MMMM YYYY h:mm A"},calendar:{sameDay:"[Ònì ni] LT",nextDay:"[Ọ̀la ni] LT",nextWeek:"dddd [Ọsẹ̀ tón'bọ] [ni] LT",lastDay:"[Àna ni] LT",lastWeek:"dddd [Ọsẹ̀ tólọ́] [ni] LT",sameElse:"L"},relativeTime:{future:"ní %s",past:"%s kọjá",s:"ìsẹjú aayá die",ss:"aayá %d",m:"ìsẹjú kan",mm:"ìsẹjú %d",h:"wákati kan",hh:"wákati %d",d:"ọjọ́ kan",dd:"ọjọ́ %d",M:"osù kan",MM:"osù %d",y:"ọdún kan",yy:"ọdún %d"},dayOfMonthOrdinalParse:/ọjọ́\s\d{1,2}/,ordinal:"ọjọ́ %d",week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("zh-cn",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"周日_周一_周二_周三_周四_周五_周六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日Ah点mm分",LLLL:"YYYY年M月D日ddddAh点mm分",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"凌晨"===meridiem||"早上"===meridiem||"上午"===meridiem?hour:"下午"===meridiem||"晚上"===meridiem?hour+12:hour>=11?hour:hour+12},meridiem:function(hour,minute,isLower){var hm=100*hour+minute;return hm<600?"凌晨":hm<900?"早上":hm<1130?"上午":hm<1230?"中午":hm<1800?"下午":"晚上"},calendar:{sameDay:"[今天]LT",nextDay:"[明天]LT",nextWeek:function(now){return now.week()!==this.week()?"[下]dddLT":"[本]dddLT"},lastDay:"[昨天]LT",lastWeek:function(now){return this.week()!==now.week()?"[上]dddLT":"[本]dddLT"},sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|周)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"日";case"M":return number+"月";case"w":case"W":return number+"周";default:return number}},relativeTime:{future:"%s后",past:"%s前",s:"几秒",ss:"%d 秒",m:"1 分钟",mm:"%d 分钟",h:"1 小时",hh:"%d 小时",d:"1 天",dd:"%d 天",w:"1 周",ww:"%d 周",M:"1 个月",MM:"%d 个月",y:"1 年",yy:"%d 年"},week:{dow:1,doy:4}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("zh-hk",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"凌晨"===meridiem||"早上"===meridiem||"上午"===meridiem?hour:"中午"===meridiem?hour>=11?hour:hour+12:"下午"===meridiem||"晚上"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){var hm=100*hour+minute;return hm<600?"凌晨":hm<900?"早上":hm<1200?"上午":1200===hm?"中午":hm<1800?"下午":"晚上"},calendar:{sameDay:"[今天]LT",nextDay:"[明天]LT",nextWeek:"[下]ddddLT",lastDay:"[昨天]LT",lastWeek:"[上]ddddLT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"日";case"M":return number+"月";case"w":case"W":return number+"週";default:return number}},relativeTime:{future:"%s後",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("zh-mo",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD/MM/YYYY",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"D/M/YYYY",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"凌晨"===meridiem||"早上"===meridiem||"上午"===meridiem?hour:"中午"===meridiem?hour>=11?hour:hour+12:"下午"===meridiem||"晚上"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){var hm=100*hour+minute;return hm<600?"凌晨":hm<900?"早上":hm<1130?"上午":hm<1230?"中午":hm<1800?"下午":"晚上"},calendar:{sameDay:"[今天] LT",nextDay:"[明天] LT",nextWeek:"[下]dddd LT",lastDay:"[昨天] LT",lastWeek:"[上]dddd LT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"日";case"M":return number+"月";case"w":case"W":return number+"週";default:return number}},relativeTime:{future:"%s內",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){!function(moment){"use strict";
//! moment.js locale configuration
moment.defineLocale("zh-tw",{months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"週日_週一_週二_週三_週四_週五_週六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日 HH:mm",LLLL:"YYYY年M月D日dddd HH:mm",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},meridiemParse:/凌晨|早上|上午|中午|下午|晚上/,meridiemHour:function(hour,meridiem){return 12===hour&&(hour=0),"凌晨"===meridiem||"早上"===meridiem||"上午"===meridiem?hour:"中午"===meridiem?hour>=11?hour:hour+12:"下午"===meridiem||"晚上"===meridiem?hour+12:void 0},meridiem:function(hour,minute,isLower){var hm=100*hour+minute;return hm<600?"凌晨":hm<900?"早上":hm<1130?"上午":hm<1230?"中午":hm<1800?"下午":"晚上"},calendar:{sameDay:"[今天] LT",nextDay:"[明天] LT",nextWeek:"[下]dddd LT",lastDay:"[昨天] LT",lastWeek:"[上]dddd LT",sameElse:"L"},dayOfMonthOrdinalParse:/\d{1,2}(日|月|週)/,ordinal:function(number,period){switch(period){case"d":case"D":case"DDD":return number+"日";case"M":return number+"月";case"w":case"W":return number+"週";default:return number}},relativeTime:{future:"%s後",past:"%s前",s:"幾秒",ss:"%d 秒",m:"1 分鐘",mm:"%d 分鐘",h:"1 小時",hh:"%d 小時",d:"1 天",dd:"%d 天",M:"1 個月",MM:"%d 個月",y:"1 年",yy:"%d 年"}})}(__webpack_require__(1))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const pgi_conference_service_1=__webpack_require__(440),distinctUntilChanged_1=__webpack_require__(143),contact_service_1=__webpack_require__(6);class PgiConferenceService extends pgi_conference_service_1.NgPgiConferenceService{constructor(){super(),this.contactService=contact_service_1.ContactService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.pgiConferenceService||(win.rainbow.pgiConferenceService=new PgiConferenceService),win.rainbow.pgiConferenceService}start(){this.contactService.userContact.phoneMeetingsEnabledSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(phoneMeetingsEnabled=>phoneMeetingsEnabled?super.start():(this.logger.info("start skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null))}async makeSnapshotForConfId(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("makeSnapshotForConfId skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):await super.makeSnapshotForConfId(confId)}removeConferenceSession(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("removeConferenceSession skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.removeConferenceSession(confId)}updateOrCreateConferenceSession(confId,snapshotData){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("updateOrCreateConferenceSession skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.updateOrCreateConferenceSession(confId,snapshotData)}async updateConference(confEndpointId,confData){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("updateConference skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):await super.updateConference(confEndpointId,confData)}getPstnInstantConferenceEndpoint(){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("getPstnInstantConferenceEndpoint skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.getPstnInstantConferenceEndpoint()}getPstnInstantConferenceEndpointId(){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("getPstnInstantConferenceEndpointId skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.getPstnInstantConferenceEndpointId()}async retrievePstnConferences(){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("retrievePstnConferences skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):await super.retrievePstnConferences()}async retrieveConference(confId,force=!1){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("retrieveConference skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):await super.retrieveConference(confId,force)}updateOrCreatePstnConferenceEndpoint(conferenceData){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("updateOrCreatePstnConferenceEndpoint skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.updateOrCreatePstnConferenceEndpoint(conferenceData)}getConferenceSessionWithConnId(connId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("getConferenceSessionWithConnId skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.getConferenceSessionWithConnId(connId)}getConferenceSessionById(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("getConferenceSessionById skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.getConferenceSessionById(confId)}async subscribeToPstnSession(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("subscribeToPstnSession skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.subscribeToPstnSession(confId)}async unSubscribeParticipantFromPstnSession(confId,participantId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("unSubscribeParticipantFromPstnSession skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.unSubscribeParticipantFromPstnSession(confId,participantId)}async startPstnConference(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("startPstnConference skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.startPstnConference(confId)}async stopPstnConference(confId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("stopPstnConference skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.stopPstnConference(confId)}async joinPstnConference(confId,participantPhoneNumber,participant,country){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("joinPstnConference skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.joinPstnConference(confId,participantPhoneNumber,participant,country)}async disconnectParticipant(confId,participantId){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("disconnectParticipant skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.disconnectParticipant(confId,participantId)}async retrievePstnPhoneNumbers(shouldFormatResults=!1){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("retrievePstnPhoneNumbers skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.retrievePstnPhoneNumbers(shouldFormatResults)}async resetPersonalMeetingRoom(){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("resetPersonalMeetingRoom skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.resetPersonalMeetingRoom()}subscribeToMyConferenceSessions(eventHandler){return this.contactService&&this.contactService.userContact&&!this.contactService.userContact.phoneMeetingsEnabled?(this.logger.info("subscribeToMyConferenceSessions skipped - phoneMeetingsEnabled : "+this.contactService.userContact.phoneMeetingsEnabled),null):super.subscribeToMyConferenceSessions(eventHandler)}}exports.PgiConferenceService=PgiConferenceService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class ConferenceParticipant{constructor(participantId,userId,jid_im,jid_tel,participantRole,mute,held,confStartDate,startDate,phoneNumber,participantState,delegateCapability){this.participantId=participantId,this.userId=userId,this.jid_im=jid_im,this.jid_tel=jid_tel,this.participantRole=participantRole,this.mute=mute,this.held=held,this.confStartDate=confStartDate,this.startDate=startDate,this.phoneNumber=phoneNumber,this.participantState=participantState,this.delegateCapability=delegateCapability}static createFromData(data){return new ConferenceParticipant(data.participantId,data.userId,data.jid_im,data.jid_tel,data.participantRole,data.mute,data.held,data.confStartDate,data.startDate,data.phoneNumber,data.participantState,data.delegateCapability)}updateFromData(data){data.participantId&&(this.participantId=data.participantId),data.userId&&(this.userId=data.userId),this.jid_im=data.jid_im,data.jid_tel&&(this.jid_tel=data.jid_tel),this.participantRole=data.participantRole,this.mute=data.mute,this.held=data.held,this.confStartDate=data.confStartDate,this.startDate=data.startDate,this.phoneNumber=data.phoneNumber,this.participantState=data.participantState,this.delegateCapability=data.delegateCapability}}exports.ConferenceParticipant=ConferenceParticipant},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=__webpack_require__(94),Subscription_1=__webpack_require__(78);exports.scheduleArray=function(input,scheduler){return new Observable_1.Observable((function(subscriber){var sub=new Subscription_1.Subscription,i=0;return sub.add(scheduler.schedule((function(){i!==input.length?(subscriber.next(input[i++]),subscriber.closed||sub.add(this.schedule())):subscriber.complete()}))),sub}))}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8);class UrlMetaData{static create(data){if(!data.image||!data.image)return null;const metaData=new UrlMetaData;return metaData.title=data.title,metaData.url=data.url,metaData.description=data.description,data.image.startsWith("/")&&(metaData.image=metaData.url+data.image),data.image.startsWith("./")||data.image.startsWith("../")?metaData.image=metaData.url+"/"+data.image:metaData.image=data.image,metaData}}exports.UrlMetaData=UrlMetaData;class UrlMetadataService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.linkRegex=/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.urlMetadataService||(win.rainbow.urlMetadataService=new UrlMetadataService),win.rainbow.urlMetadataService}getUrlFromString(text){const urls=text.match(this.linkRegex);return urls?urls[0]:void 0}async getUrlMetadata(url,timeout=4e3){try{this.abortController?this.abortController.abort():this.abortController=new AbortController,setTimeout(()=>{this.abortController.abort()},timeout);const serviceUrl=config.restServerUrl+"/api/rainbow/urlmetadata/v1.0/url",headers=this.authService.getPostHeader(),response=await fetch(serviceUrl,{method:"POST",headers:headers,body:JSON.stringify({url:url}),signal:this.abortController.signal});if(!response.ok)throw response;const data=(await response.json()).data;return this.abortController=null,this.logger.info("[urlMetadataService] getUrlMetadata -- success"),UrlMetaData.create(data)}catch(error){return this.abortController=null,this.logger.info("[urlMetadataService] getUrlMetadata -- failure"),null}}abortUrlMetadataRequest(){this.logger.info("[urlMetadataService] abortUrlMetadataRequest"),this.abortController&&(this.abortController.abort(),this.abortController=null)}}exports.UrlMetadataService=UrlMetadataService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),searchTextConvResults_model_1=__webpack_require__(110),utilities_service_1=__webpack_require__(113),message_1=__webpack_require__(67),contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9);class ConversationServiceHistoryHandler{constructor(conversationService){this.conversationService=conversationService,this.SEARCHTEXT_INALLCONVERSATIONS_LIMIT=100,this.SEARCHTEXT_INROOM_LIMIT=100,this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.utilitiesService=utilities_service_1.UtilitiesService.getInstance()}static create(conversationService){return new ConversationServiceHistoryHandler(conversationService)}onHistoryMessageReceived(stanza){try{this.logger.debug("[ConversationServiceHistoryHandler] onHistoryMessageReceived: "+stanza);let conversation=null;const stanzaElem=$(stanza),queryId=stanzaElem.find("result").attr("queryid");if(queryId&&queryId.startsWith("cache_")){this.logger.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived : Query Id for Cached Message");let conversationId=queryId.substring(6);if(conversationId=conversationId.substring(0,conversationId.length-5),conversation=this.conversationService.getConversation(conversationId),conversation){let fromJid;this.logger.info("[ConversationServiceHistoryHandler] onHistoryMessageReceived : Conversation Found");const brutJid=stanzaElem.find("forwarded message").attr("from");if(fromJid=brutJid&&0===brutJid.indexOf("room_")?brutJid.split("/")[1]:this.xmppService.getBareJidFromJid(stanzaElem.find("forwarded message").attr("from")),!fromJid&&stanzaElem.find("event").length){const roomEvent=stanzaElem.find("event").attr("name");fromJid=stanzaElem.find("event").attr("jid"),"welcome"===roomEvent&&conversation.room&&conversation.room.ownerContact&&(fromJid=conversation.room.ownerContact.jid)}if(!fromJid)return this.logger.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived - Receive message without valid fromJid information"),!0;let from=this.contactService.getContactByJid(fromJid);const messageId=stanzaElem.find("forwarded message").attr("id"),date=new Date(stanzaElem.find("forwarded delay").attr("stamp")),body=stanzaElem.find("forwarded message body").text(),side=this.contactService.isUserContact(from)?message_1.Message.Side.RIGHT:message_1.Message.Side.LEFT;from||(this.logger.warn("[ConversationServiceHistoryHandler] onHistoryMessageReceived missing contact for jid : "+fromJid+", ignore message"),from=this.contactService.createEmptyContact(fromJid));const message=message_1.Message.create(messageId,date,from,side,body,!1);message&&conversation.addMessageInCacheMessages(message)}}return!0}catch(error){return this.logger.error("[ConversationServiceHistoryHandler] onHistoryMessageReceived error -- "+error),!0}}onSearchTextMessageReceived(stanza){this.logger.info("[ConversationServiceHistoryHandler] onSearchTextMessageReceived");try{const stanzaElem=$(stanza);let otherJid;const fromJid=stanzaElem.find("forwarded message").attr("from"),toJid=stanzaElem.find("forwarded message").attr("to");let isSent=!1,isRoom=!1;if(this.contactService.isUserContactJid(fromJid)?(this.logger.info("[ConversationServiceHistoryHandler] sent message"),isSent=!0,otherJid=toJid):(this.logger.info("[ConversationServiceHistoryHandler] received message"),isSent=!1,otherJid=fromJid),otherJid&&0===otherJid.indexOf("room_")?(otherJid=otherJid.split("/")[0],isRoom=!0):otherJid=this.xmppService.getBareJidFromJid(otherJid),!otherJid)return void this.logger.warn("[ConversationServiceHistoryHandler] onSearchTextMessageReceived - Receive message without valid otherJid information");const messageId=stanzaElem.find("forwarded message").attr("id"),date=new Date(stanzaElem.find("forwarded delay").attr("stamp")),body=stanzaElem.find("forwarded message body").text(),historyIndex=stanzaElem.find("result").attr("id"),searchMsgResult=searchTextConvResults_model_1.SearchTextMsgResult.createSearchTextMsgResult();return searchMsgResult.body=body,searchMsgResult.date=date,searchMsgResult.isRoom=isRoom,searchMsgResult.isSent=isSent,searchMsgResult.messageId=messageId,searchMsgResult.otherJid=otherJid,searchMsgResult.historyIndex=historyIndex,searchMsgResult}catch(error){return void this.logger.error("[ConversationServiceHistoryHandler] onSearchTextMessageReceived error : "+error)}}retrieveMsgByDate(conversation,msgDate){return new Promise((resolve,reject)=>{this.contactService.isUserContact(conversation.contact)&&reject();const queryId=`cache_${conversation.id}${this.utilitiesService.randomString(5)}`;this.getCommonHistoryPageAroundMsg(queryId,conversation,1,msgDate,"after",()=>{this.logger.info("[ConversationServiceHistoryHandler] retrieveMsgByDate finished"),this.getCommonHistoryPageAroundMsg(queryId,conversation,1,msgDate,"before",()=>{this.logger.info("[ConversationServiceHistoryHandler] retrieveMsgByDate finished"),resolve()})})})}getCommonHistoryPageAroundMsg(queryId,conversation,size,centeredMsgDate,order,finishMethod){if(this.logger.info("[ConversationServiceHistoryHandler] getCommonHistoryPageAroundMsg("+queryId+", "+size+", "+conversation.historyIndex+")"),conversation.room){const mamRequest={queryid:queryId,with:this.contactService.userContact.jid,max:size,onComplete:finishMethod};mamRequest[order]=centeredMsgDate,this.xmppService.connection.mam.querymuc(queryId,conversation.room.jid,mamRequest)}else{const mamRequest={queryid:queryId,with:conversation.id,max:size,onComplete:finishMethod};mamRequest[order]=centeredMsgDate,this.xmppService.connection.mam.query(queryId,mamRequest)}}async searchTextInConversations(queryId,text){this.logger.info("[ConversationServiceHistoryHandler] searchTextInConversations("+text+")");const limitSize=this.SEARCHTEXT_INALLCONVERSATIONS_LIMIT,iqId=this.xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up(),data=await this.xmppService.sendIQ(iq);this.logger.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);const count=$(data).find("query").find("set").find("count").text();return this.logger.info("[ConversationServiceHistoryHandler] >searchTextInConversations: count= "+count),parseInt(count,10)}async searchTextResultsInConversation(queryId,text,contactJid){this.logger.info("[ConversationServiceHistoryHandler] searchTextResultsInConversation("+text+")");const limitSize=this.SEARCHTEXT_INALLCONVERSATIONS_LIMIT,iqId=this.xmppService.connection.getUniqueId(),iq=$iq({id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(limitSize).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up().c("field",{var:"with",type:"text-single"}).c("value").t(contactJid).up().up(),data=await this.xmppService.sendIQ(iq);this.logger.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);const count=$(data).find("query").find("set").find("count").text();return this.logger.info("[ConversationServiceHistoryHandler] >getConversationTextCount: count= "+count),parseInt(count,10)}async searchTextResultsInRoom(queryId,text,roomJid){this.logger.info("[ConversationServiceHistoryHandler] searchTextInRoom("+text+")");const userJid=this.contactService.userContact.jid,iqId=this.xmppService.connection.getUniqueId(),iq=$iq({to:roomJid,id:iqId,type:"get"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:tmp"}).c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(this.SEARCHTEXT_INROOM_LIMIT).up().c("before").up().up().c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"with",type:"text-single"}).c("value").t(userJid).up().up().c("field",{var:"withtext",type:"text-single"}).c("value").t(text).up().up(),data=await this.xmppService.sendIQ(iq);this.logger.info("[ConversationServiceHistoryHandler] sendIq Success: "+text);const count=$(data).find("query").find("set").find("count").text();return this.logger.info("[ConversationServiceHistoryHandler] >searchTextInRoom: count= "+count),parseInt(count,10)}}exports.ConversationServiceHistoryHandler=ConversationServiceHistoryHandler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),auth_service_1=__webpack_require__(8),directoryContact_model_1=__webpack_require__(142),event_service_1=__webpack_require__(11),favorite_service_1=__webpack_require__(149),profile_service_1=__webpack_require__(13),contact_service_1=__webpack_require__(6),country_service_1=__webpack_require__(114),userInfo_service_1=__webpack_require__(58);var PersonalDirectoryEvent;!function(PersonalDirectoryEvent){PersonalDirectoryEvent.PERSONAL_DIRECTORY_ADD="PERSONAL_DIRECTORY_ADD",PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE="PERSONAL_DIRECTORY_DELETE",PersonalDirectoryEvent.PERSONAL_DIRECTORY_UPDATE="PERSONAL_DIRECTORY_UPDATE",PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE_ALL="PERSONAL_DIRECTORY_DELETE_ALL",PersonalDirectoryEvent.PERSONAL_DIRECTORY_TAG_DELETE="PERSONAL_DIRECTORY_TAG_DELETE",PersonalDirectoryEvent.PERSONAL_DIRECTORY_TAG_RENAME="PERSONAL_DIRECTORY_TAG_RENAME"}(PersonalDirectoryEvent=exports.PersonalDirectoryEvent||(exports.PersonalDirectoryEvent={}));class PersonalDirectoryService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.countryService=country_service_1.CountryService.getInstance(),this.userInfoService=userInfo_service_1.UserInfoService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.favoriteService=favorite_service_1.FavoriteService.getInstance(),this.listeners=[],this.rxSubject=new rxjs_1.Subject,this.personalDirectoryEnabled=!1,this.deleteAllInProgress=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.personalDirectoryService||(win.rainbow.personalDirectoryService=new PersonalDirectoryService),win.rainbow.personalDirectoryService}async start(){try{if(this.logger.info("[PersonalDirectoryService] === STARTING ==="),this.init(),this.personalDirectoryEnabled){this.attachXMPPListeners();const allPersoContacts=await this.getPersonalContacts();this.logger.debug("[PersonalDirectoryService] Nb Contact found = "+allPersoContacts.total)}else this.logger.warn("[PersonalDirectoryService] User does not have the profile feature PERSONAL_DIRECTORY");this.logger.info("[PersonalDirectoryService] === STARTED ===")}catch(error){this.logger.error("[PersonalDirectoryService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info(""),this.logger.info("[PersonalDirectoryService] === STOPPING ==="),this.removeXMPPListeners(),this.logger.info("[PersonalDirectoryService] === STOPPED ===")}init(){this.directoryPortalURL=config.restServerUrl+"/api/rainbow/directory/v1.0",this.personalDirectoryEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.PERSONAL_DIRECTORY),this.logger.info("[PersonalDirectoryService] Personal Directory status from profileService: "+this.personalDirectoryEnabled)}attachXMPPListeners(){this.logger.info("[PersonalDirectoryService] attachXMPPListeners"),this.removeXMPPListeners()}removeXMPPListeners(){}subscribe(handler){return this.rxSubject.subscribe(handler)}async createPersonalContact(persDirContact){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] createPersonalContact -- User does not have the profile feature PERSONAL_DIRECTORY");persDirContact.companyId&&(persDirContact.companyId=void 0);const url=this.directoryPortalURL+"/entries?analyticsEntryType=personal",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(persDirContact)});if(!response.ok)throw response;const responseData=await response.json(),contact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data);this.logger.info(`[PersonalDirectoryService] createPersonalContact success from server for user ${contact.userId} -- Id = ${contact.id}`);const createdContact=this.createContactFromPersonalDirectoryData(contact);return this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_ADD,createdContact)),createdContact.rxSubject.next({name:"update"}),createdContact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createPersonalContact");throw this.logger.error("[PersonalDirectoryService] createPersonalContact failure: "+errorInfo.message),errorInfo.error}}async deletePersonalContact(contact){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] deletePersonalContact -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/${contact.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return this.logger.info(`[PersonalDirectoryService] Delete of Personal Contact ${contact.id} success from server for user ${contact.userId}`),contact.directoryObsolete=!0,contact.businessPhones=[],contact.mobilePhones=[],contact.otherPhoneNumbers=[],contact.phoneProCan="",contact.phonePro="",void this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE,contact.id))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deletePersonalContact");throw this.logger.error("[PersonalDirectoryService] deletePersonalContact failure: "+errorInfo.message),errorInfo.error}}async deletePersonalContactById(id){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] deletePersonalContactById -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/${id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info(`[PersonalDirectoryService] Delete of Personal Contact of ${id} success from server`);const contact=this.contactService.getContact(id);return contact&&(contact.directoryObsolete=!0,contact.businessPhones=[],contact.mobilePhones=[],contact.otherPhoneNumbers=[],contact.phoneProCan="",contact.phonePro=""),void(this.deleteAllInProgress||this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE,id)))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deletePersonalContactById");throw this.logger.error("[PersonalDirectoryService] deletePersonalContactById failure: "+errorInfo.message),errorInfo.error}}async deleteAllPersonalContacts(){try{const promiseArray=[];if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] deleteAllPersonalContacts -- User does not have the profile feature PERSONAL_DIRECTORY");const getResults=await this.getPersonalContacts();return this.deleteAllInProgress=!0,getResults.contacts.forEach(persContact=>{promiseArray.push(this.deletePersonalContactById(persContact.id))}),await Promise.all(promiseArray),this.deleteAllInProgress=!1,this.logger.info("[PersonalDirectoryService] Delete of all Personal Contacts success from server"),void this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE_ALL))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteAllPersonalContacts");throw this.logger.error("[PersonalDirectoryService] deleteAllPersonalContacts failure: "+errorInfo.message),errorInfo.error}}async updatePersonalContactFromUserData(contact){try{const url=`${this.directoryPortalURL}/entries/${contact.id}`,headers=this.authService.getPostHeader();if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] updatePersonalContactFromUserData -- User does not have the profile feature PERSONAL_DIRECTORY");const persDirectoryContact=this.createPersonalDirectoryDataFromContact(contact),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(persDirectoryContact)});if(!response.ok)throw response;const responseData=await response.json(),dirContact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data),contactUpdated=this.updateContactFromPersonalDirectoryData(dirContact);return this.logger.info(`[PersonalDirectoryService] Update Personal Contact ${contact.id} success from server for user ${contact.userId}`),this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_UPDATE,contactUpdated)),contactUpdated.rxSubject.next({name:"update"}),contactUpdated}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updatePersonalContactFromUserData");throw this.logger.error("[PersonalDirectoryService] updatePersonalContactFromUserData failure: "+errorInfo.message),errorInfo.error}}async updatePersonalContact(persDirContact){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] updatePersonalContact -- User does not have the profile feature PERSONAL_DIRECTORY");if(!persDirContact.id)throw new Error("Can not update  Personal Contact, missing Id");const url=`${this.directoryPortalURL}/entries/${persDirContact.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(persDirContact)});if(!response.ok)throw response;const responseData=await response.json(),dirContact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data),contactUpdated=this.updateContactFromPersonalDirectoryData(dirContact);return this.logger.info(`[PersonalDirectoryService] Update Personal Contact ${persDirContact.id} success from server for user ${persDirContact.userId}`),this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_UPDATE,contactUpdated)),this.favoriteService.searchAndUpdateFavoriteContact(contactUpdated),contactUpdated.rxSubject.next({name:"update"}),contactUpdated}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updatePersonalContact");throw this.logger.error("[PersonalDirectoryService] updatePersonalContact failure: "+errorInfo.message),errorInfo.error}}async getPersonalContacts(format="full"){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalContacts -- User does not have the profile feature PERSONAL_DIRECTORY");const directoryScope="personal",entryType="all",limitForAll=1e3,url=`${this.directoryPortalURL}/entries?view=${directoryScope}&type=${entryType}&limit=${limitForAll}&format=${format}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info(`[PersonalDirectoryService] getPersonalContacts success -- Found ${responseData.total} contact(s)`);const contactsData=responseData.data,persDirContacts=[];return contactsData.forEach(contactData=>{const persDirContact=directoryContact_model_1.DirectoryContact.createFromData(contactData);this.createOrUpdateContact(persDirContact),persDirContacts.push(persDirContact)}),{contacts:persDirContacts,limit:responseData.limit,offset:responseData.offset,total:responseData.total}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalContacts");throw this.logger.error("[PersonalDirectoryService] getPersonalContacts failure: "+errorInfo.message),errorInfo.error}}async getPersonalContactsByCriteria(options=null){try{const urlOptions={};if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalContactsByCriteria -- User does not have the profile feature PERSONAL_DIRECTORY");if(options){if(options.format&&"string"==typeof options.format&&options.format.length?urlOptions.format=options.format:urlOptions.format="full",options.limit&&(urlOptions.limit=options.limit),options.offset&&(urlOptions.offset=options.offset),options.searchPattern)switch(options.searchBy){case"phoneNumbers":urlOptions.phoneNumbers=encodeURIComponent(options.searchPattern);break;case"name":default:urlOptions.name=encodeURIComponent(options.searchPattern)}}else urlOptions.format="full";const directoryScope="personal",url=new URL(`${this.directoryPortalURL}/entries?view=${directoryScope}`),urlParams=new URLSearchParams(urlOptions).toString();url.search=urlParams;const headers=this.authService.getRequestHeader(),response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info(`[PersonalDirectoryService] getPersonalContactsByCriteria success -- Found ${responseData.total} contact(s)`);const contactsData=responseData.data,persDirContacts=[];return contactsData.forEach(contactData=>{const persDirContact=directoryContact_model_1.DirectoryContact.createFromData(contactData);this.createOrUpdateContact(persDirContact),persDirContacts.push(persDirContact)}),{contacts:persDirContacts,limit:responseData.limit,offset:responseData.offset,total:responseData.total}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalContactsByCriteria");throw this.logger.error("[PersonalDirectoryService] getPersonalContactsByCriteria failure: "+errorInfo.message),errorInfo.error}}async getPersonalContactCardById(id,format="full"){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalContactCardById -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/${id}?format=${format}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info(`[PersonalDirectoryService] getPersonalContactCardById for ${id} success from server`);const persDirContact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data);return this.createOrUpdateContact(persDirContact),persDirContact}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalContactCardById");throw this.logger.error("[PersonalDirectoryService] getPersonalContactCardById failure: "+errorInfo.message),errorInfo.error}}async getPersonalContactById(id,format="full"){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalContactById -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/${id}?format=${format}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();this.logger.info(`[PersonalDirectoryService] getPersonalContactById for ${id} success from server`);const persDirContact=directoryContact_model_1.DirectoryContact.createFromData(responseData.data);return this.createOrUpdateContact(persDirContact)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalContactById");throw this.logger.error("[PersonalDirectoryService] failure: "+errorInfo.message),errorInfo.error}}async searchPersonalContacts(searchPattern){try{if(!this.personalDirectoryEnabled)return this.logger.debug("[PersonalDirectoryService] searchPersonalContacts -- User does not have the profile feature PERSONAL_DIRECTORY"),[];const directoryScope="personal",format="full",searchType=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.SEARCH_BY_TAGS)?"search":"name",entryType="all",url=`${this.directoryPortalURL}/entries?view=${directoryScope}&format=${format}&${searchType}=${encodeURIComponent(searchPattern)}&type=${entryType}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json(),contacts=responseData.data;this.logger.info(`[PersonalDirectoryService] search success -- Found ${responseData.total} contact(s)`);const foundContacts=contacts.map(contactData=>{const persDirContact=directoryContact_model_1.DirectoryContact.createFromData(contactData);return this.createOrUpdateContact(persDirContact)});return this.logger.info(`[PersonalDirectoryService] searchPersonalContacts -- Return ${foundContacts.length} contact(s)`),foundContacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"search");return this.logger.error("[PersonalDirectoryService] "+errorInfo.message),[]}}getPersonalDirectoryContactFromNumber(phoneNumber){if(!this.personalDirectoryEnabled)return null;const foundContactByNumber=this.contactService.getDirectoryContactByPhoneNumber(phoneNumber);return foundContactByNumber&&foundContactByNumber.personalDirectoryFlag?foundContactByNumber.directoryObsolete?null:foundContactByNumber:null}async getPersonalDirectoryTags(){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalDirectoryTags -- User does not have the profile feature PERSONAL_DIRECTORY");const url=this.directoryPortalURL+"/entries/personal/tags",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const tagsList=(await response.json()).data.tags||[];return this.logger.info(`[PersonalDirectoryService] Get personal directory tags success from server -- Found ${tagsList.length} occurence(s)`),tagsList}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalDirectoryTags");throw this.logger.error("[PersonalDirectoryService] getPersonalDirectoryTags failure: "+errorInfo.message),errorInfo.error}}async deletePersonalDirectoryTag(tag){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] deletePersonalDirectoryTag -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/personal/tags?tag=${encodeURIComponent(tag)}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info(`[PersonalDirectoryService] Deletion of tag "${tag}" success -- Found ${responseData.data.found} occurence(s)`),void this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_TAG_DELETE,tag))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deletePersonalDirectoryTag");throw this.logger.error("[PersonalDirectoryService] deletePersonalDirectoryTag failure: "+errorInfo.message),errorInfo.error}}async renamePersonalDirectoryTag(tag,newTagName){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] renamePersonalDirectoryTag -- User does not have the profile feature PERSONAL_DIRECTORY");const url=`${this.directoryPortalURL}/entries/personal/tags?tag=${encodeURIComponent(tag)}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({newTagName:newTagName})});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info(`[PersonalDirectoryService] Renaming of tag from "${tag}" to "${newTagName}" success -- Found ${responseData.data.found} occurence(s)`),void this.rxSubject.next(event_model_1.RBEvent.create(PersonalDirectoryEvent.PERSONAL_DIRECTORY_TAG_RENAME,{oldTagName:tag,newTagName:newTagName}))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"renamePersonalDirectoryTag");throw this.logger.error("[PersonalDirectoryService] renamePersonalDirectoryTag failure: "+errorInfo.message),errorInfo.error}}async getPersonalDirectoryTagsStats(){try{if(!this.personalDirectoryEnabled)throw Error("[PersonalDirectoryService] getPersonalDirectoryTagsStats -- User does not have the profile feature PERSONAL_DIRECTORY");const url=this.directoryPortalURL+"/entries/personal/tags/stats",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const tagsStats=(await response.json()).data.stats||[];return this.logger.info(`[PersonalDirectoryService] getPersonalDirectoryTagsStats success -- Found ${tagsStats.length} tags(s)`),tagsStats}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalDirectoryTagsStats");throw this.logger.error("[PersonalDirectoryService] getPersonalDirectoryTagsStats failure: "+errorInfo.message),errorInfo.error}}createContactFromPersonalDirectoryData(persDirContact){const contact=this.contactService.createDirectoryContact(persDirContact.id,!0);return contact?(contact.companyDirectoryFlag=!1,contact.personalDirectoryFlag=!0,contact.userId=persDirContact.userId,contact.email=persDirContact.eMail,contact.jobTitle=persDirContact.jobTitle,contact.department=persDirContact.department,contact.companyName=persDirContact.companyName,contact.updateName(persDirContact.firstName,persDirContact.lastName),contact.street=persDirContact.street,contact.city=persDirContact.city,contact.postalCode=persDirContact.postalCode,contact.country=persDirContact.country,contact.state=persDirContact.state,contact.businessPhones=persDirContact.workPhoneNumbers,contact.mobilePhones=persDirContact.mobilePhoneNumbers,contact.otherPhoneNumbers=persDirContact.otherPhoneNumbers,contact.note1=persDirContact.custom1,contact.note2=persDirContact.custom2,contact.tags=persDirContact.tags?persDirContact.tags:[],contact):(this.logger.error("[PersonalDirectoryService] createContactFromPersonalDirectoryData -- Contact creation failed for "+persDirContact.id),null)}updateContactFromPersonalDirectoryData(persDirContact){const contact=this.contactService.getContact(persDirContact.id);return contact?(contact.companyDirectoryFlag=!1,contact.personalDirectoryFlag=!0,contact.userId=persDirContact.userId,contact.email=persDirContact.eMail,contact.jobTitle=persDirContact.jobTitle,contact.department=persDirContact.department,contact.companyName=persDirContact.companyName,contact.updateName(persDirContact.firstName,persDirContact.lastName),contact.street=persDirContact.street,contact.city=persDirContact.city,contact.postalCode=persDirContact.postalCode,contact.country=persDirContact.country,contact.state=persDirContact.state,contact.businessPhones=persDirContact.workPhoneNumbers,contact.mobilePhones=persDirContact.mobilePhoneNumbers,contact.otherPhoneNumbers=persDirContact.otherPhoneNumbers,contact.note1=persDirContact.custom1,contact.note2=persDirContact.custom2,contact.tags=persDirContact.tags?persDirContact.tags:[],contact):(this.logger.error(`[PersonalDirectoryService] updateContactFromData -- Unable to find contact for ${persDirContact.id} for update`),null)}createOrUpdateContact(persDirContact){if(this.contactService.getContact(persDirContact.id)){return this.updateContactFromPersonalDirectoryData(persDirContact)}return this.createContactFromPersonalDirectoryData(persDirContact)}createPersonalDirectoryDataFromContact(contactData){const persDirectoryContact=new directoryContact_model_1.DirectoryContact("personal");return persDirectoryContact.firstName=contactData.firstname,persDirectoryContact.lastName=contactData.lastname,persDirectoryContact.eMail=contactData.email,persDirectoryContact.jobTitle=contactData.jobTitle,persDirectoryContact.department=contactData.department,persDirectoryContact.companyName=contactData.companyName,persDirectoryContact.street=contactData.street,persDirectoryContact.city=contactData.city,persDirectoryContact.postalCode=contactData.postalCode,persDirectoryContact.country=contactData.country,persDirectoryContact.state=this.countryService.getStateCodeFromName(contactData.country,contactData.state),persDirectoryContact.workPhoneNumbers=contactData.businessPhones,persDirectoryContact.mobilePhoneNumbers=contactData.mobilePhones,persDirectoryContact.otherPhoneNumbers=contactData.otherPhoneNumbers,persDirectoryContact.custom1=contactData.note1,persDirectoryContact.custom2=contactData.note2,persDirectoryContact.tags=contactData.tags,persDirectoryContact}}exports.PersonalDirectoryService=PersonalDirectoryService},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_FACTORY__,__WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__,root,factory;
/*! Moment Duration Format v2.2.2
 *  https://github.com/jsmreese/moment-duration-format
 *  Date: 2018-02-16
 *
 *  Duration format plugin function for the Moment.js library
 *  http://momentjs.com/
 *
 *  Copyright 2018 John Madhavan-Reese
 *  Released under the MIT license
 */root=this,factory=function(moment){var toLocaleStringWorks=!1,toLocaleStringRoundingWorks=!1,intlNumberFormatWorks=!1,intlNumberFormatRoundingWorks=!1,types="escape years months weeks days hours minutes seconds milliseconds general".split(" "),bubbles=[{type:"seconds",targets:[{type:"minutes",value:60},{type:"hours",value:3600},{type:"days",value:86400},{type:"weeks",value:604800},{type:"months",value:2678400},{type:"years",value:31536e3}]},{type:"minutes",targets:[{type:"hours",value:60},{type:"days",value:1440},{type:"weeks",value:10080},{type:"months",value:44640},{type:"years",value:525600}]},{type:"hours",targets:[{type:"days",value:24},{type:"weeks",value:168},{type:"months",value:744},{type:"years",value:8760}]},{type:"days",targets:[{type:"weeks",value:7},{type:"months",value:31},{type:"years",value:365}]},{type:"months",targets:[{type:"years",value:12}]}];function stringIncludes(str,search){return!(search.length>str.length)&&-1!==str.indexOf(search)}function repeatZero(qty){for(var result="";qty;)result+="0",qty-=1;return result}function cachedNumberFormat(locale,options){var cacheKey=locale+"+"+map(keys(options).sort(),(function(key){return key+":"+options[key]})).join(",");return cachedNumberFormat.cache[cacheKey]||(cachedNumberFormat.cache[cacheKey]=Intl.NumberFormat(locale,options)),cachedNumberFormat.cache[cacheKey]}function formatNumber(number,options,userLocale){var integerString,fractionString,exponentString,useToLocaleString=options.useToLocaleString,useGrouping=options.useGrouping,grouping=useGrouping&&options.grouping.slice(),maximumSignificantDigits=options.maximumSignificantDigits,minimumIntegerDigits=options.minimumIntegerDigits||1,fractionDigits=options.fractionDigits||0,groupingSeparator=options.groupingSeparator,decimalSeparator=options.decimalSeparator;if(useToLocaleString&&userLocale){var roundingOptions,localeStringOptions={minimumIntegerDigits:minimumIntegerDigits,useGrouping:useGrouping};return fractionDigits&&(localeStringOptions.maximumFractionDigits=fractionDigits,localeStringOptions.minimumFractionDigits=fractionDigits),maximumSignificantDigits&&number>0&&(localeStringOptions.maximumSignificantDigits=maximumSignificantDigits),intlNumberFormatWorks?(intlNumberFormatRoundingWorks||((roundingOptions=extend({},options)).useGrouping=!1,roundingOptions.decimalSeparator=".",number=parseFloat(formatNumber(number,roundingOptions),10)),cachedNumberFormat(userLocale,localeStringOptions).format(number)):(toLocaleStringRoundingWorks||((roundingOptions=extend({},options)).useGrouping=!1,roundingOptions.decimalSeparator=".",number=parseFloat(formatNumber(number,roundingOptions),10)),number.toLocaleString(userLocale,localeStringOptions))}var temp=(maximumSignificantDigits?number.toPrecision(maximumSignificantDigits+1):number.toFixed(fractionDigits+1)).split("e");exponentString=temp[1]||"",fractionString=(temp=temp[0].split("."))[1]||"";var integerLength=(integerString=temp[0]||"").length,fractionLength=fractionString.length,digitCount=integerLength+fractionLength,digits=integerString+fractionString;(maximumSignificantDigits&&digitCount===maximumSignificantDigits+1||!maximumSignificantDigits&&fractionLength===fractionDigits+1)&&((digits=function(digits){for(var digitsArray=digits.split("").reverse(),i=0,carry=!0;carry&&i<digitsArray.length;)i?"9"===digitsArray[i]?digitsArray[i]="0":(digitsArray[i]=(parseInt(digitsArray[i],10)+1).toString(),carry=!1):(parseInt(digitsArray[i],10)<5&&(carry=!1),digitsArray[i]="0"),i+=1;return carry&&digitsArray.push("1"),digitsArray.reverse().join("")}(digits)).length===digitCount+1&&(integerLength+=1),fractionLength&&(digits=digits.slice(0,-1)),integerString=digits.slice(0,integerLength),fractionString=digits.slice(integerLength)),maximumSignificantDigits&&(fractionString=fractionString.replace(/0*$/,""));var exponent=parseInt(exponentString,10);exponent>0?fractionString.length<=exponent?(integerString+=fractionString+=repeatZero(exponent-fractionString.length),fractionString=""):(integerString+=fractionString.slice(0,exponent),fractionString=fractionString.slice(exponent)):exponent<0&&(fractionString=repeatZero(Math.abs(exponent)-integerString.length)+integerString+fractionString,integerString="0"),maximumSignificantDigits||((fractionString=fractionString.slice(0,fractionDigits)).length<fractionDigits&&(fractionString+=repeatZero(fractionDigits-fractionString.length)),integerString.length<minimumIntegerDigits&&(integerString=repeatZero(minimumIntegerDigits-integerString.length)+integerString));var group,formattedString="";if(useGrouping)for(temp=integerString;temp.length;)grouping.length&&(group=grouping.shift()),formattedString&&(formattedString=groupingSeparator+formattedString),formattedString=temp.slice(-group)+formattedString,temp=temp.slice(0,-group);else formattedString=integerString;return fractionString&&(formattedString=formattedString+decimalSeparator+fractionString),formattedString}function durationLabelCompare(a,b){return a.label.length>b.label.length?-1:a.label.length<b.label.length?1:0}function durationGetLabels(token,localeData){var labels=[];return each(keys(localeData),(function(localeDataKey){if("_durationLabels"===localeDataKey.slice(0,15)){var labelType=localeDataKey.slice(15).toLowerCase();each(keys(localeData[localeDataKey]),(function(labelKey){labelKey.slice(0,1)===token&&labels.push({type:labelType,key:labelKey,label:localeData[localeDataKey][labelKey]})}))}})),labels}cachedNumberFormat.cache={};var engLocale={durationLabelsStandard:{S:"millisecond",SS:"milliseconds",s:"second",ss:"seconds",m:"minute",mm:"minutes",h:"hour",hh:"hours",d:"day",dd:"days",w:"week",ww:"weeks",M:"month",MM:"months",y:"year",yy:"years"},durationLabelsShort:{S:"msec",SS:"msecs",s:"sec",ss:"secs",m:"min",mm:"mins",h:"hr",hh:"hrs",d:"dy",dd:"dys",w:"wk",ww:"wks",M:"mo",MM:"mos",y:"yr",yy:"yrs"},durationTimeTemplates:{HMS:"h:mm:ss",HM:"h:mm",MS:"m:ss"},durationLabelTypes:[{type:"standard",string:"__"},{type:"short",string:"_"}],durationPluralKey:function(token,integerValue,decimalValue){return 1===integerValue&&null===decimalValue?token:token+token}};function isArray(array){return"[object Array]"===Object.prototype.toString.call(array)}function isObject(obj){return"[object Object]"===Object.prototype.toString.call(obj)}function find(array,callback){var match,index=0,max=array&&array.length||0;for("function"!=typeof callback&&(match=callback,callback=function(item){return item===match});index<max;){if(callback(array[index]))return array[index];index+=1}}function each(array,callback){var index=0,max=array.length;if(array&&max)for(;index<max;){if(!1===callback(array[index],index))return;index+=1}}function map(array,callback){var index=0,max=array.length,ret=[];if(!array||!max)return ret;for(;index<max;)ret[index]=callback(array[index],index),index+=1;return ret}function pluck(array,prop){return map(array,(function(item){return item[prop]}))}function compact(array){var ret=[];return each(array,(function(item){item&&ret.push(item)})),ret}function unique(array){var ret=[];return each(array,(function(_a){find(ret,_a)||ret.push(_a)})),ret}function intersection(a,b){var ret=[];return each(a,(function(_a){each(b,(function(_b){_a===_b&&ret.push(_a)}))})),unique(ret)}function rest(array,callback){var ret=[];return each(array,(function(item,index){if(!callback(item))return ret=array.slice(index),!1})),ret}function initial(array,callback){return rest(array.slice().reverse(),callback).reverse()}function extend(a,b){for(var key in b)b.hasOwnProperty(key)&&(a[key]=b[key]);return a}function keys(a){var ret=[];for(var key in a)a.hasOwnProperty(key)&&ret.push(key);return ret}function any(array,callback){var index=0,max=array.length;if(!array||!max)return!1;for(;index<max;){if(!0===callback(array[index],index))return!0;index+=1}return!1}function flatten(array){var ret=[];return each(array,(function(child){ret=ret.concat(child)})),ret}function featureTestFormatterRounding(formatter){return"3.6"===formatter(3.55,"en",{useGrouping:!1,minimumIntegerDigits:1,minimumFractionDigits:1,maximumFractionDigits:1})}function featureTestFormatter(formatter){var passed=!0;return!!((passed=(passed=(passed=passed&&"1"===formatter(1,"en",{minimumIntegerDigits:1}))&&"01"===formatter(1,"en",{minimumIntegerDigits:2}))&&"001"===formatter(1,"en",{minimumIntegerDigits:3}))&&(passed=(passed=(passed=(passed=passed&&"100"===formatter(99.99,"en",{maximumFractionDigits:0,minimumFractionDigits:0}))&&"100.0"===formatter(99.99,"en",{maximumFractionDigits:1,minimumFractionDigits:1}))&&"99.99"===formatter(99.99,"en",{maximumFractionDigits:2,minimumFractionDigits:2}))&&"99.990"===formatter(99.99,"en",{maximumFractionDigits:3,minimumFractionDigits:3}))&&(passed=(passed=(passed=(passed=(passed=passed&&"100"===formatter(99.99,"en",{maximumSignificantDigits:1}))&&"100"===formatter(99.99,"en",{maximumSignificantDigits:2}))&&"100"===formatter(99.99,"en",{maximumSignificantDigits:3}))&&"99.99"===formatter(99.99,"en",{maximumSignificantDigits:4}))&&"99.99"===formatter(99.99,"en",{maximumSignificantDigits:5}))&&(passed=(passed=passed&&"1,000"===formatter(1e3,"en",{useGrouping:!0}))&&"1000"===formatter(1e3,"en",{useGrouping:!1})))}function durationsFormat(){var durations,args=[].slice.call(arguments),settings={};if(each(args,(function(arg,index){if(!index){if(!isArray(arg))throw"Expected array as the first argument to durationsFormat.";durations=arg}"string"!=typeof arg&&"function"!=typeof arg?"number"!=typeof arg?isObject(arg)&&extend(settings,arg):settings.precision=arg:settings.template=arg})),!durations||!durations.length)return[];settings.returnMomentTypes=!0;var formattedDurations=map(durations,(function(dur){return dur.format(settings)})),outputTypes=intersection(types,unique(pluck(flatten(formattedDurations),"type"))),largest=settings.largest;return largest&&(outputTypes=outputTypes.slice(0,largest)),settings.returnMomentTypes=!1,settings.outputTypes=outputTypes,map(durations,(function(dur){return dur.format(settings)}))}function durationFormat(){var args=[].slice.call(arguments),settings=extend({},this.format.defaults),asMilliseconds=this.asMilliseconds(),asMonths=this.asMonths();"function"==typeof this.isValid&&!1===this.isValid()&&(asMilliseconds=0,asMonths=0);var isNegative=asMilliseconds<0,remainder=moment.duration(Math.abs(asMilliseconds),"milliseconds"),remainderMonths=moment.duration(Math.abs(asMonths),"months");each(args,(function(arg){"string"!=typeof arg&&"function"!=typeof arg?"number"!=typeof arg?isObject(arg)&&extend(settings,arg):settings.precision=arg:settings.template=arg}));var momentTokens={years:"y",months:"M",weeks:"w",days:"d",hours:"h",minutes:"m",seconds:"s",milliseconds:"S"},tokenDefs={escape:/\[(.+?)\]/,years:/\*?[Yy]+/,months:/\*?M+/,weeks:/\*?[Ww]+/,days:/\*?[Dd]+/,hours:/\*?[Hh]+/,minutes:/\*?m+/,seconds:/\*?s+/,milliseconds:/\*?S+/,general:/.+?/};settings.types=types;var typeMap=function(token){return find(types,(function(type){return tokenDefs[type].test(token)}))},tokenizer=new RegExp(map(types,(function(type){return tokenDefs[type].source})).join("|"),"g");settings.duration=this;var template="function"==typeof settings.template?settings.template.apply(settings):settings.template,outputTypes=settings.outputTypes,returnMomentTypes=settings.returnMomentTypes,largest=settings.largest,stopTrim=[];outputTypes||(isArray(settings.stopTrim)&&(settings.stopTrim=settings.stopTrim.join("")),settings.stopTrim&&each(settings.stopTrim.match(tokenizer),(function(token){var type=typeMap(token);"escape"!==type&&"general"!==type&&stopTrim.push(type)})));var localeData=moment.localeData();localeData||(localeData={}),each(keys(engLocale),(function(key){"function"!=typeof engLocale[key]?localeData["_"+key]||(localeData["_"+key]=engLocale[key]):localeData[key]||(localeData[key]=engLocale[key])})),each(keys(localeData._durationTimeTemplates),(function(item){template=template.replace("_"+item+"_",localeData._durationTimeTemplates[item])}));var userLocale=settings.userLocale||moment.locale(),useLeftUnits=settings.useLeftUnits,usePlural=settings.usePlural,precision=settings.precision,forceLength=settings.forceLength,useGrouping=settings.useGrouping,trunc=settings.trunc,useSignificantDigits=settings.useSignificantDigits&&precision>0,significantDigits=useSignificantDigits?settings.precision:0,significantDigitsCache=significantDigits,minValue=settings.minValue,isMinValue=!1,maxValue=settings.maxValue,isMaxValue=!1,useToLocaleString=settings.useToLocaleString,groupingSeparator=settings.groupingSeparator,decimalSeparator=settings.decimalSeparator,grouping=settings.grouping;useToLocaleString=useToLocaleString&&(toLocaleStringWorks||intlNumberFormatWorks);var trim=settings.trim;isArray(trim)&&(trim=trim.join(" ")),null===trim&&(largest||maxValue||useSignificantDigits)&&(trim="all"),null!==trim&&!0!==trim&&"left"!==trim&&"right"!==trim||(trim="large"),!1===trim&&(trim="");var trimIncludes=function(item){return item.test(trim)},rLarge=/large/,rSmall=/small/,rBoth=/both/,rMid=/mid/,rAll=/^all|[^sm]all/,rFinal=/final/,trimLarge=largest>0||any([rLarge,rBoth,rAll],trimIncludes),trimSmall=any([rSmall,rBoth,rAll],trimIncludes),trimMid=any([rMid,rAll],trimIncludes),trimFinal=any([rFinal,rAll],trimIncludes),rawTokens=map(template.match(tokenizer),(function(token,index){var type=typeMap(token);return"*"===token.slice(0,1)&&(token=token.slice(1),"escape"!==type&&"general"!==type&&stopTrim.push(type)),{index:index,length:token.length,text:"",token:"escape"===type?token.replace(tokenDefs.escape,"$1"):token,type:"escape"===type||"general"===type?null:type}})),currentToken={index:0,length:0,token:"",text:"",type:null},tokens=[];useLeftUnits&&rawTokens.reverse(),each(rawTokens,(function(token){if(token.type)return(currentToken.type||currentToken.text)&&tokens.push(currentToken),void(currentToken=token);useLeftUnits?currentToken.text=token.token+currentToken.text:currentToken.text+=token.token})),(currentToken.type||currentToken.text)&&tokens.push(currentToken),useLeftUnits&&tokens.reverse();var momentTypes=intersection(types,unique(compact(pluck(tokens,"type"))));if(!momentTypes.length)return pluck(tokens,"text").join("");momentTypes=map(momentTypes,(function(momentType,index){var rawValue,isSmallest=index+1===momentTypes.length,isLargest=!index;rawValue="years"===momentType||"months"===momentType?remainderMonths.as(momentType):remainder.as(momentType);var wholeValue=Math.floor(rawValue),decimalValue=rawValue-wholeValue,token=find(tokens,(function(token){return momentType===token.type}));return isLargest&&maxValue&&rawValue>maxValue&&(isMaxValue=!0),isSmallest&&minValue&&Math.abs(settings.duration.as(momentType))<minValue&&(isMinValue=!0),isLargest&&null===forceLength&&token.length>1&&(forceLength=!0),remainder.subtract(wholeValue,momentType),remainderMonths.subtract(wholeValue,momentType),{rawValue:rawValue,wholeValue:wholeValue,decimalValue:isSmallest?decimalValue:0,isSmallest:isSmallest,isLargest:isLargest,type:momentType,tokenLength:token.length}}));var truncMethod=trunc?Math.floor:Math.round,truncate=function(value,places){var factor=Math.pow(10,places);return truncMethod(value*factor)/factor},foundFirst=!1,bubbled=!1,formatValue=function(momentType,index){var formatOptions={useGrouping:useGrouping,groupingSeparator:groupingSeparator,decimalSeparator:decimalSeparator,grouping:grouping,useToLocaleString:useToLocaleString};return useSignificantDigits&&(significantDigits<=0?(momentType.rawValue=0,momentType.wholeValue=0,momentType.decimalValue=0):(formatOptions.maximumSignificantDigits=significantDigits,momentType.significantDigits=significantDigits)),isMaxValue&&!bubbled&&(momentType.isLargest?(momentType.wholeValue=maxValue,momentType.decimalValue=0):(momentType.wholeValue=0,momentType.decimalValue=0)),isMinValue&&!bubbled&&(momentType.isSmallest?(momentType.wholeValue=minValue,momentType.decimalValue=0):(momentType.wholeValue=0,momentType.decimalValue=0)),momentType.isSmallest||momentType.significantDigits&&momentType.significantDigits-momentType.wholeValue.toString().length<=0?precision<0?momentType.value=truncate(momentType.wholeValue,precision):0===precision?momentType.value=truncMethod(momentType.wholeValue+momentType.decimalValue):useSignificantDigits?(momentType.value=trunc?truncate(momentType.rawValue,significantDigits-momentType.wholeValue.toString().length):momentType.rawValue,momentType.wholeValue&&(significantDigits-=momentType.wholeValue.toString().length)):(formatOptions.fractionDigits=precision,momentType.value=trunc?momentType.wholeValue+truncate(momentType.decimalValue,precision):momentType.wholeValue+momentType.decimalValue):useSignificantDigits&&momentType.wholeValue?(momentType.value=Math.round(truncate(momentType.wholeValue,momentType.significantDigits-momentType.wholeValue.toString().length)),significantDigits-=momentType.wholeValue.toString().length):momentType.value=momentType.wholeValue,momentType.tokenLength>1&&(forceLength||foundFirst)&&(formatOptions.minimumIntegerDigits=momentType.tokenLength,bubbled&&formatOptions.maximumSignificantDigits<momentType.tokenLength&&delete formatOptions.maximumSignificantDigits),!foundFirst&&(momentType.value>0||""===trim||find(stopTrim,momentType.type)||find(outputTypes,momentType.type))&&(foundFirst=!0),momentType.formattedValue=formatNumber(momentType.value,formatOptions,userLocale),formatOptions.useGrouping=!1,formatOptions.decimalSeparator=".",momentType.formattedValueEn=formatNumber(momentType.value,formatOptions,"en"),2===momentType.tokenLength&&"milliseconds"===momentType.type&&(momentType.formattedValueMS=formatNumber(momentType.value,{minimumIntegerDigits:3,useGrouping:!1},"en").slice(0,2)),momentType};if((momentTypes=compact(momentTypes=map(momentTypes,formatValue))).length>1){var findType=function(type){return find(momentTypes,(function(momentType){return momentType.type===type}))},bubbleTypes=function(bubble){var bubbleMomentType=findType(bubble.type);bubbleMomentType&&each(bubble.targets,(function(target){var targetMomentType=findType(target.type);targetMomentType&&parseInt(bubbleMomentType.formattedValueEn,10)===target.value&&(bubbleMomentType.rawValue=0,bubbleMomentType.wholeValue=0,bubbleMomentType.decimalValue=0,targetMomentType.rawValue+=1,targetMomentType.wholeValue+=1,targetMomentType.decimalValue=0,targetMomentType.formattedValueEn=targetMomentType.wholeValue.toString(),bubbled=!0)}))};each(bubbles,bubbleTypes)}return bubbled&&(foundFirst=!1,significantDigits=significantDigitsCache,momentTypes=compact(momentTypes=map(momentTypes,formatValue))),!outputTypes||isMaxValue&&!settings.trim?(trimLarge&&(momentTypes=rest(momentTypes,(function(momentType){return!momentType.isSmallest&&!momentType.wholeValue&&!find(stopTrim,momentType.type)}))),largest&&momentTypes.length&&(momentTypes=momentTypes.slice(0,largest)),trimSmall&&momentTypes.length>1&&(momentTypes=initial(momentTypes,(function(momentType){return!momentType.wholeValue&&!find(stopTrim,momentType.type)&&!momentType.isLargest}))),trimMid&&(momentTypes=compact(momentTypes=map(momentTypes,(function(momentType,index){return index>0&&index<momentTypes.length-1&&!momentType.wholeValue?null:momentType})))),!trimFinal||1!==momentTypes.length||momentTypes[0].wholeValue||!trunc&&momentTypes[0].isSmallest&&momentTypes[0].rawValue<minValue||(momentTypes=[])):momentTypes=compact(momentTypes=map(momentTypes,(function(momentType){return find(outputTypes,(function(outputType){return momentType.type===outputType}))?momentType:null}))),returnMomentTypes?momentTypes:(each(tokens,(function(token){var key=momentTokens[token.type],momentType=find(momentTypes,(function(momentType){return momentType.type===token.type}));if(key&&momentType){var values=momentType.formattedValueEn.split(".");values[0]=parseInt(values[0],10),values[1]?values[1]=parseFloat("0."+values[1],10):values[1]=null;var pluralKey=localeData.durationPluralKey(key,values[0],values[1]),labels=durationGetLabels(key,localeData),autoLocalized=!1,pluralizedLabels={};each(localeData._durationLabelTypes,(function(labelType){var label=find(labels,(function(label){return label.type===labelType.type&&label.key===pluralKey}));label&&(pluralizedLabels[label.type]=label.label,stringIncludes(token.text,labelType.string)&&(token.text=token.text.replace(labelType.string,label.label),autoLocalized=!0))})),usePlural&&!autoLocalized&&(labels.sort(durationLabelCompare),each(labels,(function(label){return pluralizedLabels[label.type]===label.label?!stringIncludes(token.text,label.label)&&void 0:stringIncludes(token.text,label.label)?(token.text=token.text.replace(label.label,pluralizedLabels[label.type]),!1):void 0})))}})),(tokens=map(tokens,(function(token){if(!token.type)return token.text;var momentType=find(momentTypes,(function(momentType){return momentType.type===token.type}));if(!momentType)return"";var out="";return useLeftUnits&&(out+=token.text),(isNegative&&isMaxValue||!isNegative&&isMinValue)&&(out+="< ",isMaxValue=!1,isMinValue=!1),(isNegative&&isMinValue||!isNegative&&isMaxValue)&&(out+="> ",isMaxValue=!1,isMinValue=!1),isNegative&&(momentType.value>0||""===trim||find(stopTrim,momentType.type)||find(outputTypes,momentType.type))&&(out+="-",isNegative=!1),"milliseconds"===token.type&&momentType.formattedValueMS?out+=momentType.formattedValueMS:out+=momentType.formattedValue,useLeftUnits||(out+=token.text),out}))).join("").replace(/(,| |:|\.)*$/,"").replace(/^(,| |:|\.)*/,""))}function defaultFormatTemplate(){var dur=this.duration,findType=function(type){return dur._data[type]},firstType=find(this.types,findType),lastType=function(array,callback){for(var index=array.length;index-=1;)if(callback(array[index]))return array[index]}(this.types,findType);switch(firstType){case"milliseconds":return"S __";case"seconds":case"minutes":return"*_MS_";case"hours":return"_HMS_";case"days":if(firstType===lastType)return"d __";case"weeks":return firstType===lastType?"w __":(null===this.trim&&(this.trim="both"),"w __, d __, h __");case"months":if(firstType===lastType)return"M __";case"years":return firstType===lastType?"y __":(null===this.trim&&(this.trim="both"),"y __, M __, d __");default:return null===this.trim&&(this.trim="both"),"y __, d __, h __, m __, s __"}}function init(context){if(!context)throw"Moment Duration Format init cannot find moment instance.";context.duration.format=durationsFormat,context.duration.fn.format=durationFormat,context.duration.fn.format.defaults={trim:null,stopTrim:null,largest:null,maxValue:null,minValue:null,precision:0,trunc:!1,forceLength:null,userLocale:null,usePlural:!0,useLeftUnits:!1,useGrouping:!0,useSignificantDigits:!1,template:defaultFormatTemplate,useToLocaleString:!0,groupingSeparator:",",decimalSeparator:".",grouping:[3]},context.updateLocale("en",engLocale)}var toLocaleStringFormatter=function(number,locale,options){return number.toLocaleString(locale,options)};toLocaleStringWorks=function(){try{(0).toLocaleString("i")}catch(e){return"RangeError"===e.name}return!1}()&&featureTestFormatter(toLocaleStringFormatter),toLocaleStringRoundingWorks=toLocaleStringWorks&&featureTestFormatterRounding(toLocaleStringFormatter);var intlNumberFormatFormatter=function(number,locale,options){if("undefined"!=typeof window&&window&&window.Intl&&window.Intl.NumberFormat)return window.Intl.NumberFormat(locale,options).format(number)};return intlNumberFormatWorks=featureTestFormatter(intlNumberFormatFormatter),intlNumberFormatRoundingWorks=intlNumberFormatWorks&&featureTestFormatterRounding(intlNumberFormatFormatter),init(moment),init},__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(1)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__="function"==typeof(__WEBPACK_AMD_DEFINE_FACTORY__=factory)?__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__):__WEBPACK_AMD_DEFINE_FACTORY__)||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__),root&&(root.momentDurationFormatSetup=root.moment?factory(root.moment):factory)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),profile_service_1=__webpack_require__(13),contact_service_1=__webpack_require__(6);class Office365AdService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.office365AdService||(win.rainbow.office365AdService=new Office365AdService),win.rainbow.office365AdService}async search(searchPattern){if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MSO365_DIRECTORY_SEARCH))return[];this.logger.info("search office365 Contact from Ad with pattern "+searchPattern);const url=config.restServerUrl+"/api/rainbow/office365/v1.0/users";try{const headers=this.authService.getPostHeader();let responseData;responseData=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.SEARCH_BY_TAGS)?await fetch(url+"/search",{method:"POST",mode:"cors",headers:headers,body:JSON.stringify({search:searchPattern,includeContacts:!0})}):await fetch(url+"/search",{method:"POST",mode:"cors",headers:headers,body:JSON.stringify({name:searchPattern,includeContacts:!0})});const office365ContactsData=(await responseData.json()).data;return office365ContactsData.map(office365ContactData=>{const contact=this.contactService.createDirectoryContact(office365ContactData.oid,!1);return this.updateContactWithData(contact,office365ContactData),contact})}catch(error){return this.logger.error(`search office365 Contact from Ad with pattern ${searchPattern} --- FAILURE --- ${error.message}`),[]}}async getUserDetails(contact){if(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MSO365_DIRECTORY_SEARCH)&&contact.o365Flag){this.logger.info("getUserDetails for "+contact.oid);try{const headers=this.authService.getRequestHeader(),url=`${config.restServerUrl}/api/rainbow/office365/v1.0/users/details/${encodeURIComponent(contact.id)}?picture=true`,responseData=await fetch(url,{method:"GET",mode:"cors",headers:headers});if(!responseData.ok)throw this.logger.debug(`Request ${responseData.headers.get("x-rainbow-request-id")} failed with status ${responseData.status}`),new Error(responseData.statusText);const office365ContactData=await responseData.json();this.updateContactWithOffice365Data(contact,office365ContactData)}catch(error){this.logger.error("getUserDetails -- FAILURE -- "+error.message)}}}async getO365ContactFromServer(oid){if(this.logger.info("[Office365AdService] getO365ContactFromServer for "+oid),!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MSO365_DIRECTORY_SEARCH))return this.logger.info("[Office365AdService] getO365ContactFromServer -- User does not have the profile feature MSO365_DIRECTORY_SEARCH"),null;try{const headers=this.authService.getRequestHeader(),url=`${config.restServerUrl}/api/rainbow/office365/v1.0/users/details/${encodeURIComponent(oid)}`,responseData=await fetch(url,{method:"GET",mode:"cors",headers:headers});if(!responseData.ok)throw this.logger.error(`[Office365AdService] Request ${responseData.headers.get("x-rainbow-request-id")} failed -- status ${responseData.status} - statusText ${responseData.statusText}`),new Error(responseData.statusText);const office365ContactData=await responseData.json(),o365Contacts=this.contactService.createDirectoryContact(office365ContactData.oid,!1);return o365Contacts?(this.updateContactWithOffice365Details(o365Contacts,office365ContactData),o365Contacts):(this.logger.error("[Office365AdService] getO365ContactFromServer -- Contact creation failed for "+office365ContactData.oid),null)}catch(error){return this.logger.error("[Office365AdService] getO365ContactFromServer -- FAILURE -- "+error.message),null}}async getO365DirectoryContactById(oid){const directoryContact=await this.getO365ContactFromServer(oid);return directoryContact?this.logger.info(`[Office365AdService] getO365DirectoryContactById Success -- Contact ${oid} retrieved from server and created in cache`):this.logger.error(`[Office365AdService] getO365DirectoryContactById Failure -- Contact ${oid} unknown from server or problem when retrieving it`),directoryContact}updateContactWithData(contact,data){contact.o365Flag=!0,contact.updateName(data.firstName,data.lastName),contact.companyName=this.contactService.userContact.company.name,contact.jobTitle=data.jobTitle,contact.department=data.department,contact.webAddress=data.mySite,contact.mobilePhones=data.mobilePhonesE164,contact.businessPhones=data.businessPhonesE164,contact.email=data.mail,contact.isContact=data.isContact}updateContactWithOffice365Data(contact,data){if(contact.o365Flag=!0,contact.updateName(data.givenName,data.surname),contact.companyName=this.contactService.userContact.company.name,contact.jobTitle=data.jobTitle,contact.department=data.department,contact.webAddress=data.mySite,contact.email=data.mail,contact.isContact?(contact.street=data.addresses[0]&&data.addresses[0].street?data.addresses[0].street:"",contact.city=data.addresses[0]&&data.addresses[0].city?data.addresses[0].city:"",contact.country=data.addresses[0]&&data.addresses[0].countryOrRegion?data.addresses[0].countryOrRegion:"",contact.postCode=data.addresses[0]&&data.addresses[0].postalCode?data.addresses[0].postalCode:"",contact.state=data.addresses[0]&&data.addresses[0].state?data.addresses[0].state:""):(contact.street=data.streetAddress,contact.city=data.city,contact.country=data.country,contact.postCode=data.postalCode,contact.state=data.state),contact.businessPhones=data.businessPhones,contact.mobilePhones=[],data.mobilePhone&&""!==data.mobilePhone&&contact.mobilePhones.push(data.mobilePhone),data.picture){let dataURI=null;data.picture.startsWith("/9j")?dataURI="data:image/jpeg;base64,":data.picture.startsWith("iVB")&&(dataURI="data:image/png;base64,"),dataURI&&(contact.avatar=new Image,contact.avatar.src=dataURI+data.picture)}}updateContactWithOffice365Details(contact,data){if(contact.o365Flag=!0,contact.updateName(data.givenName,data.surname),contact.companyName=this.contactService.userContact.company.name,contact.jobTitle=data.jobTitle,contact.department=data.department,contact.email=data.mail,data.isContact?(contact.street=data.addresses[0]&&data.addresses[0].street?data.addresses[0].street:"",contact.city=data.addresses[0]&&data.addresses[0].city?data.addresses[0].city:"",contact.country=data.addresses[0]&&data.addresses[0].countryOrRegion?data.addresses[0].countryOrRegion:"",contact.postalCode=data.addresses[0]&&data.addresses[0].postalCode?data.addresses[0].postalCode:"",contact.state=data.addresses[0]&&data.addresses[0].state?data.addresses[0].state:""):(contact.street=data.streetAddress,contact.city=data.city,contact.country=data.country,contact.postalCode=data.postalCode,contact.state=data.state),contact.businessPhones=data.businessPhones,contact.mobilePhones=[],data.mobilePhone&&""!==data.mobilePhone&&contact.mobilePhones.push(data.mobilePhone),data.picture){let dataURI=null;data.picture.startsWith("/9j")?dataURI="data:image/jpeg;base64,":data.picture.startsWith("iVB")&&(dataURI="data:image/png;base64,"),dataURI&&(contact.avatar=new Image,contact.avatar.src=dataURI+data.picture)}}}exports.Office365AdService=Office365AdService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),event_service_1=__webpack_require__(11),invitation_model_1=__webpack_require__(318),rxjs_1=__webpack_require__(7);class InvitationService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.subscription=null,this.xmppHandler=null,this.rxSubject=new rxjs_1.Subject,this.portalURL=null,this.receivedInvitations={},this.sentInvitations={},this.acceptedInvitationsArray=[],this.sentInvitationsArray=[],this.receivedInvitationsArray=[],this.innerTimeout=null}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.invitationService||(win.rainbow.invitationService=new InvitationService),win.rainbow.invitationService}async start(){this.logger.info(""),this.logger.info("[invitationService] === STARTING ==="),this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/",this.attachHandlers(),this.getAllSentInvitations(),this.getAllReceivedInvitations(),this.logger.info("[invitationService] === STARTED ==="),this.subscription=this.xmppService.subscribeToContactEvents(event=>{"ON_ROSTER_CHANGED_EVENT"===event.name&&(this.innerTimeout||(this.innerTimeout=setTimeout(()=>{this.getAllSentInvitations(),this.innerTimeout=null},1e3)))})}async stop(){this.logger.info(""),this.logger.info("[invitationService] === STOPPING ==="),this.subscription&&this.subscription.unsubscribe(),this.logger.info("[invitationService] === STOPPED ===")}reconnect(){this.attachHandlers()}subscribe(callback){return this.rxSubject.subscribe(callback)}sendEvent(type,value=null){this.rxSubject.next({type:type,value:value}),this.eventService.publish(type,value)}attachHandlers(){this.logger.info("[invitationService] attachHandlers"),this.xmppHandler&&(this.xmppService.connection.deleteHandler(this.xmppHandler),this.xmppHandler=null),this.xmppHandler=this.xmppService.connection.addHandler(stanza=>this.onInvitationsUpdate(stanza),null,"message","management")}onInvitationsUpdate(stanza){const userInviteElem=$(stanza).find("userinvite");if(userInviteElem.length){const id=userInviteElem.attr("id"),type=userInviteElem.attr("type"),action=userInviteElem.attr("action");switch(type){case"received":this.handleReceivedInvitation(id,action);break;case"sent":this.handleSentInvitation(id,action);break;default:this.logger.warn("[invitationService] onInvitationsUpdate - received unexpected type - "+type)}}return!0}async handleReceivedInvitation(id,action){if(this.logger.info("[invitationService] handleReceivedInvitation"),"delete"===action)return delete this.receivedInvitations[id],void this.updateReceivedInvitationsArray();const invitation=await this.getServerInvitation(id);let updateInvitation=null,status="none";switch(invitation.status){case"pending":if(this.receivedInvitations[invitation.id]=invitation,updateInvitation=invitation,status="ask",invitation.invitingUserId){const contact=await this.contactService.getContactByDBId(invitation.invitingUserId,!0);this.sendEvent("ON_INVITATION_RECEIVED",contact)}break;case"accepted":case"auto-accepted":if(this.receivedInvitations[invitation.id]=invitation,this.sendEvent("ON_INVITATION_ACCEPTED",invitation.invitingUserId),invitation.invitingUserId){const contact=await this.contactService.getContactByDBId(invitation.invitingUserId,!0);this.eventService.publish("ON_CONTACT_UPDATED_EVENT",contact)}break;default:delete this.receivedInvitations[invitation.id],status="unknown"}invitation.invitingUserId&&await this.updateContactInvitationStatus(invitation.invitingUserId,status,updateInvitation),this.updateReceivedInvitationsArray(),this.sendEvent("ON_INVITATION_CHANGED",invitation)}async handleSentInvitation(id,action){if(this.logger.info("[invitationService] handleSentInvitation"),"delete"===action)return delete this.sentInvitations[id],void this.updateReceivedInvitationsArray();const invitation=await this.getServerInvitation(id);let contactStatus=null;switch(invitation.status){case"pending":this.sentInvitations[invitation.id]=invitation,contactStatus="wait";break;case"accepted":case"auto-accepted":if(this.sendEvent("ON_INVITATION_ACCEPTED",invitation.invitedUserId),invitation.invitedUserId){const contact=await this.contactService.getContactByDBId(invitation.invitedUserId,!0);this.eventService.publish("ON_CONTACT_UPDATED_EVENT",contact)}break;default:delete this.sentInvitations[invitation.id],contactStatus="unknown"}invitation.invitedUserId&&await this.updateContactInvitationStatus(invitation.invitedUserId,contactStatus,invitation),this.updateSentInvitationsArray(),"resend"===action&&this.sendEvent("ON_INVITATIONS_RE_SEND",id)}updateReceivedInvitationsArray(){this.receivedInvitationsArray=[],this.acceptedInvitationsArray=[];for(const key in this.receivedInvitations)if(this.receivedInvitations.hasOwnProperty(key)){const invitation=this.receivedInvitations[key];switch(invitation.status){case"pending":this.receivedInvitationsArray.push(invitation);break;case"accepted":case"auto-accepted":this.acceptedInvitationsArray.push(invitation)}}this.receivedInvitationsArray.sort(this.sortInvitationArray),this.acceptedInvitationsArray=this.acceptedInvitationsArray.filter((function(acceptedInvitation){const lastInvite=moment(acceptedInvitation.lastNotificationDate);return moment.duration(moment().diff(lastInvite)).asHours()<168})),this.acceptedInvitationsArray.sort(this.sortInvitationArray),this.sendEvent("ON_INVITATIONS_NUMBER_UPDATED")}updateSentInvitationsArray(){this.sentInvitationsArray=[];for(const key in this.sentInvitations)this.sentInvitations.hasOwnProperty(key)&&this.sentInvitationsArray.push(this.sentInvitations[key]);this.sentInvitationsArray.sort(this.sortInvitationArray),this.sendEvent("ON_INVITATIONS_NUMBER_UPDATED")}async getServerInvitation(invitationId){try{const url=`${this.portalURL}${this.contactService.userContact.dbId}/invitations/${invitationId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const invitationData=(await response.json()).data;return this.logger.info("[invitationService] getServerInvitation success"),invitation_model_1.Invitation.createFromData(invitationData)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}getReceivedInvitations(){return this.receivedInvitationsArray}getAcceptedInvitations(){return this.acceptedInvitationsArray}getSentInvitations(){return this.sentInvitationsArray}getInvitationsNumberForCounter(){return this.receivedInvitationsArray.length}getAllInvitationsNumber(){return this.receivedInvitationsArray.length+this.sentInvitationsArray.length+this.acceptedInvitationsArray.length}getInvitation(invitationId){let invitationFound=this.receivedInvitations[invitationId];return invitationFound||(invitationFound=this.acceptedInvitationsArray[invitationId]),invitationFound||(invitationFound=this.sentInvitations[invitationId]),invitationFound}async joinContactInvitation(contact,customMessage=""){try{this.logger.info(`[invitationService] joinContactInvitation contact (${contact.jid})`);const url=`${this.portalURL}${this.contactService.userContact.dbId}/invitations`,headers=this.authService.getPostHeader(),data={invitedUserId:contact.dbId,customMessage:customMessage},response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw response;this.logger.info(`[invitationService] joinContactInvitation - success (${contact.jid})`),"unknown"===contact.status&&this.updateContactInvitationStatus(contact.dbId,"wait")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinContactInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async sendInvitationByEmail(email,customMessage=""){if(!email||!email.length){this.logger.error("[invitationService] sendInvitationByEmail: no email provided");const error=new Error("missing email");throw this.errorHelperService.getErrorInfo(error,"sendInvitationByEmail")}try{this.logger.info("[invitationService] sendInvitationByEmail");const lang=this.settingsService.getAppliLanguageCodeForServer(),url=`${this.portalURL}${this.contactService.userContact.dbId}/invitations`,headers=this.authService.getPostHeader(),data={email:email,lang:lang,customMessage:customMessage},response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw response;this.logger.info("[invitationService] sendInvitationByEmail - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sendInvitationByEmail");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async cancelOneSendInvitation(invitation){try{const url=`${this.portalURL}${invitation.invitingUserId}/invitations/${invitation.id}/cancel`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;this.logger.info("[invitationService] cancelOneSendInvitation success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cancelOneSendInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async reSendInvitation(invitationId){try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/invitations/${invitationId}/re-send`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;this.logger.info(`[invitationService] reSendInvitation ${invitationId} success`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"reSendInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async sendInvitationsParBulk(emails){if(!emails.length||emails.length>100)throw this.logger.error("[invitationService] sendInvitationsParBulk mail list length not correct"),new Error("sendInvitationsParBulk mail list length not correct");try{const url=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.contactService.userContact.dbId}/invitations/bulk`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify({emails:emails})});if(!response.ok)throw response;this.logger.info("[invitationService] sendInvitationsParBulk - success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sendInvitationsParBulk");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async acceptInvitation(invitation){try{const url=`${this.portalURL}${invitation.invitedUserId}/invitations/${invitation.id}/accept`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;this.logger.info("[invitationService] acceptInvitation success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"acceptInvitation");if(!errorInfo.error.errorDetailsCode||409605!==errorInfo.error.errorDetailsCode)throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error;{const contact=await this.contactService.getContactByDBId(invitation.invitingUserId,!0);this.eventService.publish("ON_CONTACT_UPDATED_EVENT",contact)}}}async declineInvitation(invitation){try{const url=`${this.portalURL}${invitation.invitedUserId}/invitations/${invitation.id}/decline`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;this.logger.info("[invitationService] declineInvitation success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"declineInvitation");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async updateContactInvitationStatus(contactDBId,status,invitation=null){const contact=await this.contactService.getContactByDBId(contactDBId);switch(status){case"ask":contact.status="unknown",contact.ask="ask",contact.invitation=invitation;break;case"wait":contact.status="wait",contact.ask="subscribe",contact.invitation=invitation;break;default:contact.ask="none",contact.invitation=null}this.contactService.updateContactRichStatus(contact),contact.rxSubject.next({name:"update",data:contact})}sortInvitationArray(invitA,invitB){return new Date(invitB.lastNotificationDate).getTime()-new Date(invitA.lastNotificationDate).getTime()}async getAllReceivedInvitations(){try{const url=`${this.portalURL}${this.contactService.userContact.dbId}/invitations/received?format=full&status=pending&limit=500`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const invitationsData=(await response.json()).data;return this.logger.info(`[invitationService] getAllReceivedInvitations success (find ${invitationsData.length} invitations)`),this.receivedInvitations={},invitationsData.forEach(invitationData=>{if("pending"===invitationData.status&&"registration"!==invitationData.type){const invitation=invitation_model_1.Invitation.createFromData(invitationData);this.receivedInvitations[invitationData.id]=invitation,invitationData.invitingUserId&&this.updateContactInvitationStatus(invitationData.invitingUserId,"ask",invitation)}else"accepted"!==invitationData.status&&"auto-accepted"!==invitationData.status||(this.receivedInvitations[invitationData.id]=invitation_model_1.Invitation.createFromData(invitationData))}),this.updateReceivedInvitationsArray(),this.receivedInvitations}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAllReceivedInvitations");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}async getAllSentInvitations(){try{const url=`${this.portalURL}${this.contactService.userContact.dbId}/invitations/sent?format=full&status=pending&limit=500`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const invitationsData=(await response.json()).data;return this.logger.info("[invitationService] getAllSentInvitations success (find "+invitationsData.length+" invitations)"),this.sentInvitations={},invitationsData.forEach(invitationData=>{if("pending"===invitationData.status&&!invitationData.inviteToJoinMeeting){const sentInvitation=invitation_model_1.Invitation.createFromData(invitationData);this.sentInvitations[invitationData.id]=sentInvitation,void 0!==sentInvitation.invitedUserId&&this.updateContactInvitationStatus(sentInvitation.invitedUserId,"wait",sentInvitation)}}),this.updateSentInvitationsArray(),this.sentInvitations}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAllSentInvitations");throw this.logger.error("[invitationService] "+errorInfo.message),errorInfo.error}}}exports.InvitationService=InvitationService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const userInfo_service_1=__webpack_require__(58);class Invitation{static create(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting){return new Invitation(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting)}static createFromData(invitationData){const invitation=new Invitation(invitationData.id,invitationData.invitedUserId,invitationData.invitedUserEmail,invitationData.invitingUserId,invitationData.invitingUserEmail,invitationData.requestNotificationLanguage,invitationData.invitingDate,invitationData.lastNotificationDate,invitationData.status,invitationData.type,invitationData.inviteToJoinMeeting,invitationData.invitedPhoneNumber);return invitation.createDefaultAvatar(),invitation}constructor(id,invitedUserId,invitedUserEmail,invitingUserId,invitingUserEmail,requestNotificationLanguage,invitingDate,lastNotificationDate,status,type,inviteToJoinMeeting,invitedPhoneNumber=null){this.id=id,this.invitedUserId=invitedUserId,this.invitedUserEmail=invitedUserEmail,this.invitedPhoneNumber=invitedPhoneNumber,this.invitingUserId=invitingUserId,this.invitingUserEmail=invitingUserEmail,this.requestNotificationLanguage=requestNotificationLanguage,this.invitingDate=invitingDate,this.lastNotificationDate=lastNotificationDate,this.status=status,this.type=type,this.defaultAvatar=null,this.inviteToJoinMeeting=inviteToJoinMeeting}createDefaultAvatar(){if(!this.defaultAvatar&&this.invitedUserEmail){const userInfoService=userInfo_service_1.UserInfoService.getInstance(),color=userInfoService.computeUserColor(this.invitedUserEmail),initials=this.invitedUserEmail.substring(0,2).toUpperCase();this.defaultAvatar=userInfoService.createDefaultAvatarImage(initials,color)}}}exports.Invitation=Invitation},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),xmpp_service_1=__webpack_require__(9);class SdkApis{constructor(getKeys=null,createFeatureCodeKey=null,createSpeedDialKey=null,updateKey=null,updateKeyPosition=null,deleteKey=null){this.getKeys=getKeys,this.createFeatureCodeKey=createFeatureCodeKey,this.createSpeedDialKey=createSpeedDialKey,this.updateKey=updateKey,this.updateKeyPosition=updateKeyPosition,this.deleteKey=deleteKey}}class TelephonyKeysService{constructor(){this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.portalURL="",this.xmppHandlers=[],this._sdkApis=Object.keys(new SdkApis),this.telephonyKeysSubject=new rxjs_1.Subject}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.telephonyKeysService||(win.rainbow.telephonyKeysService=new TelephonyKeysService),win.rainbow.telephonyKeysService}async start(){this.logger.info("[userTelephonyKeysService] === STARTING ==="),this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/users/"+this.authService.userId,this.attachListeners(),this.logger.info("=== STARTED ===")}async stop(){this.logger.info("[userTelephonyKeysService] === STOPPING ==="),this.logger.info("=== STOPPED ===")}async reconnect(){this.attachListeners(),this.logger.info("[userTelephonyKeysService] reconnect -- success")}attachListeners(){this.xmppHandlers.forEach(handler=>{this.xmppService.connection.deleteHandler(handler)}),this.xmppHandlers=[],this.xmppHandlers.push(this.xmppService.connection.addHandler(stanza=>this.onManagementMessage(stanza),null,"message","management"))}async onManagementMessage(stanza){try{const stanzaElem=$(stanza);return stanzaElem.find("telephony-key").length>0&&this.submitEvent("TELEPHONYKEYS_UPDATE"),!0}catch(error){return this.logger.error("[telephonyKeysService] onManagementMessage  -- failure -- "+error.message),!0}}submitEvent(name,data){this.telephonyKeysSubject.next(event_model_1.RBEvent.create(name,data))}async getKeys(){try{const url=this.portalURL+"/telephony-keys",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const jsonResponse=await response.json();return jsonResponse.data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getKeys");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async createFeatureCodeKey(name,number){try{const keyData={name:name,number:number,type:"featureCode",featureCodeSubType:"dtmf"},url=this.portalURL+"/telephony-keys",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(keyData)});if(!response.ok)throw response;const data=(await response.json()).data;return this.telephonyKeysSubject.next({op:"create",telephonyKeys:data.telephonyKeys}),data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createFeatureCodeKey");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async createSpeedDialKey(name,number){try{const keyData={name:name,number:number,type:"speedDialing"},url=this.portalURL+"/telephony-keys",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(keyData)});if(!response.ok)throw response;const data=(await response.json()).data;return this.telephonyKeysSubject.next({op:"create",telephonyKeys:data.telephonyKeys}),data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createSpeedDialKey");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async updateKey(keyId,key){try{const url=new URL(`${this.portalURL}/telephony-keys/${keyId}`),headers=this.authService.getPostHeader(),response=await fetch(url.toString(),{method:"PUT",headers:headers,body:JSON.stringify(key)});if(!response.ok)throw response;const data=(await response.json()).data;return this.telephonyKeysSubject.next({op:"update",telephonyKeys:data.telephonyKeys}),data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateKey");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async updateKeyPosition(keyId,position){try{const url=new URL(`${this.portalURL}/telephony-keys/${keyId}`);url.searchParams.set("position",String(position));const headers=this.authService.getPostHeader(),response=await fetch(url.toString(),{method:"PUT",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.telephonyKeysSubject.next({op:"update",telephonyKeys:data.telephonyKeys}),data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateFeatureCodeKeyPosition");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async deleteKey(keyId){try{const url=new URL(`${this.portalURL}/telephony-keys/${keyId}`),headers=this.authService.getRequestHeader(),response=await fetch(url.toString(),{method:"DELETE",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.telephonyKeysSubject.next({op:"delete",telephonyKeys:data.telephonyKeys}),data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteKey");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async getSharedKeys(){try{const url=this.portalURL+"/telephony-keys/shareable",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const jsonResponse=await response.json();return jsonResponse.data.sharedTelephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getSharedKeys");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}async selectSharedKey(keyId){try{const url=`${this.portalURL}/telephony-keys/shareable/${keyId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;const jsonResponse=await response.json();return jsonResponse.data.telephonyKeys}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"selectSharedKey");throw this.logger.error("[TelephonyKeysService] "+errorInfo.message),errorInfo.error}}}exports.TelephonyKeysService=TelephonyKeysService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const group_model_1=__webpack_require__(321),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),event_service_1=__webpack_require__(11),errorHelper_service_1=__webpack_require__(12);class AbstractGroupService{}exports.AbstractGroupService=AbstractGroupService;class GroupService extends AbstractGroupService{constructor(){super(),this.portalURL=null,this.groups=null,this.groupMessageHandlerRef=null,this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.ON_REMOVE_GROUP_USER_EVENT="ON_REMOVE_GROUP_USER_EVENT",this.ON_ADD_GROUP_USER_EVENT="ON_ADD_GROUP_USER_EVENT",this.ON_GROUP_USERS_UPDATE_EVENT="ON_GROUP_USERS_UPDATE_EVENT",this.ON_CREATED_GROUP_EVENT="ON_CREATED_GROUP_EVENT",this.ON_UPDATE_GROUP_EVENT="ON_UPDATE_GROUP_EVENT",this.ON_REMOVED_GROUP_EVENT="ON_REMOVED_GROUP_EVENT"}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.groupService||(win.rainbow.groupService=new GroupService),win.rainbow.groupService}async start(){this.logger.info(""),this.logger.info("[groupService] === STARTING ==="),this.portalURL=`${config.restServerUrl}/api/rainbow/enduser/v1.0/users/${this.authService.userId}/`,this.contactService.userContact.isCPaaSGuest()||(this.attachHandlers(),this.getRemoteGroups(),this.logger.info("[groupService] === STARTED ==="))}async stop(){this.logger.info("[groupService] === STOPPING ==="),this.groups=null,this.groupMessageHandlerRef&&(this.xmppService.deleteHandler(this.groupMessageHandlerRef),this.groupMessageHandlerRef=null),this.logger.info("[groupService] === STOPPED ===")}reconnect(){this.attachHandlers()}async addGroup(group){try{this.logger.info("[groupService] addGroup : "+group.name);const headers=this.authService.getPostHeader(),body=JSON.stringify({name:group.name,comment:group.comment,isFavorite:group.isFavorite}),responseData=await fetch(this.portalURL+"groups",{method:"POST",headers:headers,body:body});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.logger.info("[groupService] addGroup success for : "+group.name),group_model_1.Group.createFromData(response.data)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addGroup");throw this.logger.error(errorInfo.message),errorInfo.error.details=409===error.status?"conflict":"unknown",errorInfo.error}}async removeGroup(groupId){try{this.logger.info("[groupService] removeGroup : "+groupId);const headers=this.authService.getRequestHeader(),responseData=await fetch(`${this.portalURL}groups/${groupId}`,{method:"DELETE",headers:headers});if(!responseData.ok)throw responseData;this.removeGroupAct(groupId),this.logger.info("[groupService] removeGroup success for : "+groupId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeGroup");throw this.logger.error(errorInfo.message),errorInfo.error}}async updateGroup(group){try{this.logger.info("[groupService] updateGroup for : "+group.name);const headers=this.authService.getPostHeader(),body=JSON.stringify({name:group.name,comment:group.comment,isFavorite:group.isFavorite}),responseData=await fetch(`${this.portalURL}groups/${group.id}`,{method:"PUT",headers:headers,body:body});if(!responseData.ok)throw responseData;return this.logger.info("[groupService] updateGroup success for : "+group.name),group}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateGroup");throw this.logger.error(errorInfo.message),errorInfo.error}}async addGroupUser(group,user){try{this.logger.info("[groupService] addGroupUser");if(group.users.some(usr=>user.dbId===usr.dbId))return this.logger.info("[groupService] addGroupUser - user: "+user.id+" already exist in group: "+group.name+" - no remote action"),group;const headers=this.authService.getPostHeader(),responseData=await fetch(`${this.portalURL}groups/${group.id}/users/${user.dbId}`,{method:"POST",headers:headers});if(!responseData.ok)throw responseData;const updatedGroup=await this.addGroupUserAct(group.id,user.dbId);return this.eventService.publish(this.ON_GROUP_USERS_UPDATE_EVENT),this.logger.info("[groupService] addGroupUser success: "+user.id+"/"+updatedGroup.name),updatedGroup}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addGroupUser");throw this.logger.error(errorInfo.message),errorInfo.error}}async removeGroupUser(groupId,user){try{this.logger.info("[groupService] removeGroupUser : "+groupId+"/"+user.id);const headers=this.authService.getRequestHeader(),responseData=await fetch(`${this.portalURL}groups/${groupId}/users/${user.dbId}`,{method:"DELETE",headers:headers});if(!responseData.ok)throw responseData;this.removeGroupUserAct(groupId,user.dbId);const group=this.getGroupById(groupId);return this.logger.info("[groupService] removeGroupUser success : "+groupId+"/"+user.id),this.eventService.publish(this.ON_GROUP_USERS_UPDATE_EVENT),group}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeGroupUser");throw this.logger.error(errorInfo.message),errorInfo.error}}getGroups(){return this.groups}getGroupById(groupId){return this.groups.find(group=>group.id===groupId)}async getGroup(groupId){try{this.logger.info("[groupService] getGroup  for "+groupId);const headers=this.authService.getRequestHeader(),responseData=await fetch(`${this.portalURL}groups/${groupId}`,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const groupData=(await responseData.json()).data,usersPromises=[],group=group_model_1.Group.createFromData(groupData);return this.groups.some((grp,index)=>grp.id===groupData.id&&(this.groups[index]=group,groupData.users.forEach(user=>{usersPromises.push(this.contactService.getContactByDBId(user.id).then(contact=>{contact&&this.groups[index].users.push(contact)}))}),!0))||(this.groups.push(group),groupData.users.forEach(user=>{usersPromises.push(this.contactService.getContactByDBId(user.id).then((function(contact){if(contact){group.users.push(contact);const Wgroups=[group];contact.getGroups()?contact.getGroups().push(group):contact.setGroups(Wgroups)}})))})),await Promise.all(usersPromises),this.logger.info("[groupService] getGroup success for "+group.name+" : "+group.id),group}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getGroup");throw this.logger.error(errorInfo.message),errorInfo.error}}attachHandlers(){this.groupMessageHandlerRef&&(this.xmppService.deleteHandler(this.groupMessageHandlerRef),this.groupMessageHandlerRef=null),this.groupMessageHandlerRef=this.xmppService.addHandler(stanza=>(this.onGroupMessageReceived(stanza),!0),null,"message","management")}async onGroupMessageReceived(stanza){try{const stanzaData={outgoingMessage:!1};if(stanzaData.body=$(stanza)[0].firstChild,stanzaData.messageId=$(stanza).attr("id"),stanzaData.body&&"group"===stanzaData.body.tagName){const action=stanzaData.body.getAttribute("action"),scope=stanzaData.body.getAttribute("scope"),groupId=stanzaData.body.getAttribute("id");switch(scope){case"group":switch(action){case"create":await this.getGroup(groupId),this.eventService.publish(this.ON_CREATED_GROUP_EVENT,groupId);break;case"update":{const name=stanzaData.body.getAttribute("name"),comment=stanzaData.body.getAttribute("comment"),isFavorite="true"===stanzaData.body.getAttribute("isFavorite");this.eventService.publish(this.ON_UPDATE_GROUP_EVENT,groupId,name,comment,isFavorite)}break;case"delete":this.removeGroupAct(groupId),this.eventService.publish(this.ON_REMOVED_GROUP_EVENT,groupId)}break;case"user":{const userId=stanzaData.body.getAttribute("userId");switch(action){case"create":this.addGroupUserAct(groupId,userId);break;case"delete":this.removeGroupUserAct(groupId,userId),this.eventService.publish(this.ON_REMOVE_GROUP_USER_EVENT,groupId,userId)}}}}}catch(error){}}async getRemoteGroups(){try{this.logger.info("[groupService] getRemoteGroups");const headers=this.authService.getRequestHeader(),responseData=await fetch(this.portalURL+"groups?format=full",{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const data=(await responseData.json()).data;this.logger.info("[groupService] getRemoteGroups success (find "+data.total+" group(s))"),this.groups=[];const usersPromises=[];return data.forEach(groupData=>{const group=group_model_1.Group.createFromData(groupData);this.groups.push(group),groupData.users.forEach(userId=>{usersPromises.push(this.contactService.getContactByDBId(userId).then(contact=>{contact&&group.users.push(contact)}))}),this.logGroupUsers(group)}),await Promise.all(usersPromises),this.groups}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRemoteGroups");throw this.logger.error(errorInfo.message),errorInfo.error}}removeGroupAct(groupId){const index=this.groups.findIndex(group=>group.id===groupId);-1!==index&&this.groups.splice(index,1)}async addGroupUserAct(groupId,userId){try{const group=this.groups.find(grp=>grp.id===groupId);if(!group)throw new Error(`Group ${groupId} not found`);let user=group.users.find(usr=>userId===usr.dbId);if(user)return group;user=await this.contactService.getContactByDBId(userId),group.users.push(user);const Wgroups=[group];return user.getGroups()?user.getGroups().push(group):user.setGroups(Wgroups),this.eventService.publish(this.ON_ADD_GROUP_USER_EVENT,groupId,userId),group}catch(error){return this.logger.error("[GroupService] addGroupUserAct - "+error.message),null}}removeGroupUserAct(groupId,userId){this.groups.forEach(group=>{group.id===groupId&&group.users.forEach((userItem,index)=>{userItem.dbId===userId&&(group.users.splice(index,1),userItem.getGroups()&&userItem.getGroups().forEach((userGroupItem,gIndex)=>{userGroupItem.id===groupId&&userItem.getGroups().splice(gIndex,1)}))})})}logGroupUsers(group){let UserNameContent="";group&&group.users&&0!==group.users.length&&(UserNameContent=group.users.map((function(user){return user.nameForLog})).join(" / "),this.logger.info("[groupService] logGroupUsers for "+group.name+": "+UserNameContent))}logUserGroups(ownerName,groups){let groupsNameContent="";groups&&0!==groups.length&&(groups.forEach(gr=>{gr.name&&(groupsNameContent+=" "+gr.name)}),this.logger.info("[groupService] logUserGroups for "+ownerName+":"+groupsNameContent))}}exports.GroupService=GroupService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Group{constructor(id,name,comment="",isFavorite=!1){this.isFavorite=!1,this.users=[],this.sortedUserList=[],this.id=id,this.name=name,this.comment=comment,this.isFavorite=isFavorite}static createFromData(data){return new Group(data.id,data.name,data.comment,data.isFavorite)}}exports.Group=Group},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),channel_1=__webpack_require__(141),channelMessage_model_1=__webpack_require__(472),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),logger_service_1=__webpack_require__(4),i18n_service_1=__webpack_require__(38),contact_service_1=__webpack_require__(6),event_model_1=__webpack_require__(19),lodash_escape_1=__webpack_require__(105),imageUtils_service_1=__webpack_require__(64),event_service_1=__webpack_require__(11),models_1=__webpack_require__(150);class FeedChannel{constructor(){this.messages=[],this.complete=!1,this.pageIndex=0,this.isLoading=!1,this.type="AGGREGATE"}}class AbstractChannelService{}exports.AbstractChannelService=AbstractChannelService;class ChannelService extends AbstractChannelService{constructor(){super(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.listeners=[],this.isStarted=!1,this.channels={},this.channelsList=[],this.serviceStatusSubject=new rxjs_1.Subject,this.rxSubject=new rxjs_1.Subject,this.LIST_EVENT_TYPE={ADD:0,UPDATE:1,REMOVE:2,DELETE:3,SUBSCRIBE:4,UNSUBSCRIBE:5,CREATE:6},this.USER_ROLE={NONE:"none",OWNER:"owner",PUBLISHER:"publisher",MEMBER:"member"},this.MESSAGE_ACTION={ADD:0,RETRACT:1,UPDATED:2},this.xmppMessageHandler=null,this.xmppManagementHandler=null,this.notificationCounter=0,this.messageCounter=0,this.invitationCounter=0,this.CHANNEL_UPDATE_EVENT="CHANNEL_UPDATE_EVENT",this.CHANNEL_NOTIFICATION_NUMBER_UPDATED="CHANNEL_NOTIFICATION_NUMBER_UPDATED",this.CHANNEL_USER_SUBSCRIPTION_EVENT="CHANNEL_USER_SUBSCRIPTION_EVENT"}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.channelService||(win.rainbow.channelService=new ChannelService),win.rainbow.channelService}async start(){try{if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CHANNEL_ACTIVATED))return;if(this.contactService.userContact.isCPaaSGuest())return;if(!this.contactService.userContact.channelsEnabled)return;this.logger.info("[channelService] === STARTING ==="),this.feedChannel=new FeedChannel,this.portalURL=config.restServerUrl+"/api/rainbow/channels/v1.0/channels",this.getMyChannels()}catch(error){this.logger.error("[channelService] === STARTING FAILURE === "+error.message)}}async reconnect(){try{this.logger.info("[channelService] reconnect"),await this.stop(),await this.start()}catch(error){this.logger.error("[channelService] reconnect -- failure -- "+error.message)}}async stop(){this.logger.info("[channelService] === STOPPING ==="),this.listeners.forEach(destroyFunction=>{destroyFunction()}),this.xmppMessageHandler&&(this.xmppService.connection.deleteHandler(this.xmppMessageHandler),this.xmppMessageHandler=null),this.xmppManagementHandler&&(this.xmppService.connection.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=null),this.channels={},this.channelsList=[],this.feedChannel=null,this.notificationCounter=0,this.messageCounter=0,this.eventService.publish(this.CHANNEL_NOTIFICATION_NUMBER_UPDATED,this.notificationCounter),this.logger.info("[channelService] === STOPPED ===")}attachHandlers(){this.xmppMessageHandler=this.xmppService.connection.addHandler(stanza=>this.onChannelMessageReceived(stanza),"","message","headline"),this.xmppManagementHandler=this.xmppService.connection.addHandler(stanza=>this.onChannelManagementReceived(stanza),null,"message","management")}subscribe(handler){return this.rxSubject.subscribe(handler)}channelErrorHandler(methodName,err){let error=null;return err.data?(this.logger.error("[channelService] "+methodName+" -- failure -- "+err.data.errorDetails),error=new models_1.RBError(err.data.errorMsg,err.data.errorDetails,err.data.errorDetailsCode)):(this.logger.error("[channelService] "+methodName+" -- failure -- Server failure"),error=new models_1.RBError("Server failure")),error}onChannelMessageReceived(stanza){try{const eventNode=$(stanza).find("event");if(eventNode&&"http://jabber.org/protocol/pubsub#event"===eventNode.attr("xmlns")){const items=eventNode.find("items"),item=items.find("item"),retract=items.find("retract"),update=eventNode.find("update");if(1===update.length)this.updateMessage(update);else if(1===item.length)this.onNewMessage(item);else if(1===retract.length){const messageId=retract.attr("id"),channelId=items.attr("node").split(":")[0];this.onRetractMessage(channelId,messageId)}}return!0}catch(err){return this.logger.error("onChannelMessageReceived -- failure -- "+err.message),!0}}onNewMessage(item){const entry=item.find("entry"),messageId=item.attr("id"),channelId=entry.attr("channelId"),channel=this.getChannelFromCache(channelId),channelMessageIndex=channel.messages.findIndex(mess=>mess.id===messageId),feedMessageIndex=this.feedChannel.messages.findIndex(mess=>mess.id===messageId);let action=entry.attr("creation")?"modify":"new";-1===channelMessageIndex&&-1===feedMessageIndex||(action="modify"),this.logger.info("[channelService] onNewMessage -- "+action+" message "+messageId+" on channel "+channelId);const message={id:messageId,channelId:channelId,from:entry.attr("from"),fromDetails:null,new:!1,entry:{type:entry.find("type").length?entry.find("type")[0].textContent:"",message:entry.find("message").length?entry.find("message")[0].textContent:"",title:entry.find("title").length?entry.find("title")[0].textContent:"",url:entry.find("url").length?entry.find("url")[0].textContent:"",images:[],attachments:[],video:null},modified:"modify"===action,timestamp:entry.attr("timestamp")},imagesElem=item.find("images");0!==imagesElem.length&&imagesElem.find("id").each((__index,image)=>{message.entry.images.push({id:image.textContent})});const attachmentsElem=item.find("attachments");0!==attachmentsElem.length&&attachmentsElem.find("id").each((__index,attachment)=>{message.entry.attachments.push({id:attachment.textContent})});const videoElem=item.find("video");if(0!==videoElem.length&&(message.entry.video={provider:videoElem.find("provider")[0].textContent,id:videoElem.find("id")[0].textContent}),"new"===action){const channelMessage=channelMessage_model_1.ChannelMessage.createFromData(channel,message);channel.loaded&&channel.messages.unshift(channelMessage),this.feedChannel.messages.unshift(channelMessage),this.contactService.userContact.jid!==message.from&&(channelMessage.isNew=!0,this.incrementMessagesCounter()),channel.messagesCount+=1,this.rxSubject.next(event_model_1.RBEvent.create("CHANNEL_MESSAGE_RECEIVED",{action:this.MESSAGE_ACTION.ADD,message:message})),channel.updateSubject.next()}else{let channelMessage=null;if(-1!==channelMessageIndex){const existingMessage=channel.messages[channelMessageIndex];channelMessage=channelMessage_model_1.ChannelMessage.updateFromData(channel,existingMessage,message),channel.messages[channelMessageIndex]=channelMessage}if(-1!==feedMessageIndex){const existingMessage=this.feedChannel.messages[feedMessageIndex];channelMessage=channelMessage_model_1.ChannelMessage.updateFromData(channel,existingMessage,message),this.feedChannel.messages[feedMessageIndex]=channelMessage}channelMessage&&this.rxSubject.next(event_model_1.RBEvent.create("CHANNEL_MESSAGE_RECEIVED",{action:this.MESSAGE_ACTION.UPDATED,channelMessage:channelMessage}))}}getChannelMessage(channelId,messageId){const channel=this.getChannelFromCache(channelId);if(channel){return-1!==channel.messages.findIndex(mess=>mess.id===messageId)?channel.messages.find(mess=>mess.id===messageId):null}return null}getFeedChannelMessage(messageId){let channelMessage=null;return-1!==this.feedChannel.messages.findIndex(mess=>mess.id===messageId)&&(channelMessage=this.feedChannel.messages.find(mess=>mess.id===messageId)),channelMessage}updateMessage(update){const messageId=update.attr("id"),channelId=update.attr("channel_id"),updatedMessages=[],channelMessage=this.getChannelMessage(channelId,messageId),feedChannelMessage=this.getFeedChannelMessage(messageId);channelMessage&&updatedMessages.push(channelMessage),feedChannelMessage&&updatedMessages.push(feedChannelMessage),updatedMessages.forEach(message=>{const myLikeElem=update.find("my_appreciation");message.myLike=1===myLikeElem.length?myLikeElem.attr("appreciation"):"none";const likesElem=update.find("appreciations"),likeKeys=["like","happy","applause","fantastic","doubt"];1===likesElem.length&&(message.likeCounters=likeKeys.reduce((result,key)=>(result[key]=parseInt(likesElem.attr(key)||0,10),result),{})),message.rxSubject.next(event_model_1.RBEvent.create("updateLikes"))})}onRetractMessage(channelId,messageId){this.logger.info("[channelService] onRetractMessage -- retract message "+messageId+" on channel "+channelId);const channel=this.getChannelFromCache(channelId);let message=null;if(channel.loaded){const messageIndex=channel.messages.findIndex(chMsg=>chMsg.id===messageId);-1!==messageIndex&&(message=channel.messages[messageIndex],channel.messages.splice(messageIndex,1))}const messageListIndex=this.feedChannel.messages.findIndex(feedChMsg=>feedChMsg.id===messageId);-1!==messageListIndex&&(message=this.feedChannel.messages[messageListIndex],this.feedChannel.messages.splice(messageListIndex,1)),message&&message.isNew&&this.decrementMessagesCounter(),channel.messagesCount-=1,this.rxSubject.next(event_model_1.RBEvent.create("CHANNEL_MESSAGE_RECEIVED",{action:this.MESSAGE_ACTION.RETRACT})),channel.updateSubject.next()}onChannelManagementReceived(stanza){try{const channelMuteElem=$(stanza).find("mute");if(channelMuteElem&&channelMuteElem.length>0&&"channel"===channelMuteElem.attr("type")){const channelId=channelMuteElem.attr("peer_id"),channel=this.getChannelFromCache(channelId);this.muteChannel(channel)}const channelUnmuteElem=$(stanza).find("unmute");if(channelUnmuteElem&&channelUnmuteElem.length>0&&"channel"===channelUnmuteElem.attr("type")){const channelId=channelUnmuteElem.attr("peer_id"),channel=this.getChannelFromCache(channelId);this.unmuteChannel(channel)}const channelElem=$(stanza).find("channel");if(channelElem&&channelElem.length>0){const channelId=channelElem.attr("channelid"),channel=this.getChannelFromCache(channelId);if(channel){const avatarElem=channelElem.find("avatar"),nameElem=channelElem.find("name"),topicElem=channelElem.find("topic"),categoryElem=channelElem.find("category"),typeElem=channelElem.find("type");avatarElem&&avatarElem.length>0&&this.onAvatarChange(channelId,avatarElem),nameElem&&nameElem.length>0&&(channel.name=nameElem.text()),topicElem&&topicElem.length>0&&(channel.topic=topicElem.text()),categoryElem&&categoryElem.length>0&&(channel.category=categoryElem.text()),typeElem&&typeElem.length>0&&(channel.userRole=typeElem.text(),this.eventService.publish("ON_CHANNEL_ROLE_UPDATED_EVENT",channelId)),this.updateDisplayInfo(channel)}const action=channelElem.attr("action");switch(this.logger.info("[channelService] onChannelManagementReceived -- "+action+" event received on channel "+channelId),action){case"add":this.onAddToChannel(channelId);break;case"update":this.onUpdateToChannel(channelId);break;case"remove":this.onRemovedFromChannel(channelId);break;case"subscribe":this.onSubscribeToChannel(channelId,channelElem.attr("subscribers"));break;case"unsubscribe":this.onUnsubscribeToChannel(channelId,channelElem.attr("subscribers"));break;case"delete":this.onDeleteChannel(channelId)}}const channelSubscriptionElem=$(stanza).find("channel-subscription");if(channelSubscriptionElem&&channelSubscriptionElem.length>0){const channelId=channelSubscriptionElem.attr("channelid"),action=channelSubscriptionElem.attr("action"),userId=channelSubscriptionElem.attr("id"),subscribers=channelSubscriptionElem.attr("subscribers"),channel=this.getChannelFromCache(channelId);switch(channel.subscribers_count=Number.parseInt(subscribers,10),this.logger.info("[channelService] onChannelManagementReceived -- subscription-"+action+" event received on channel "+channelId),action){case"subscribe":this.onUserSubscribeEvent(channelId,userId);break;case"unsubscribe":this.onUserUnsubscribeEvent(channelId,userId)}channel.updateSubject.next()}return!0}catch(err){return this.logger.error("[channels] onChannelManagementReceived -- failure -- "+err.message),!0}}async muteChannel(channel){try{const url=`${this.portalURL}/${channel.id}/mute`,responseData=await fetch(url,{method:"POST",headers:this.authService.getPostHeader()});if(!responseData.ok)throw new Error(responseData.statusText);channel.muted=!0,channel.updateSubject.next()}catch(error){throw this.channelErrorHandler("muteChannel",error)}}async unmuteChannel(channel){try{const url=`${this.portalURL}/${channel.id}/mute`,responseData=await fetch(url,{method:"DELETE",headers:this.authService.getPostHeader()});if(!responseData.ok)throw new Error(responseData.statusText);channel.muted=!1,channel.updateSubject.next()}catch(error){throw this.channelErrorHandler("unmuteChannel",error)}}onAddToChannel(channelId){const channel=this.getChannelFromCache(channelId);this.getChannel(channelId).then(newChannel=>{channel||newChannel.invited?!channel&&newChannel.invited?(this.addChannelToCache(newChannel),this.incrementInvitationCounter(),this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,newChannel.id),this.rxSubject.next(event_model_1.RBEvent.create(this.CHANNEL_UPDATE_EVENT,{action:this.LIST_EVENT_TYPE.SUBSCRIBE,channelId:newChannel.id}))):channel&&newChannel.userRole!==this.USER_ROLE.NONE&&(channel.userRole=newChannel.userRole,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})):(this.addChannelToCache(newChannel),this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.ADD,newChannel.id))})}onUpdateToChannel(channelId){this.getChannel(channelId).then(newChannel=>{newChannel.invited&&(this.addChannelToCache(newChannel),this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.ADD,newChannel.id))})}onRemovedFromChannel(channelId){this.removeChannelFromCache(channelId).then(()=>{this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.DELETE,channelId)})}onAvatarChange(channelId,avatar){const action=avatar.attr("action"),updateDate=avatar.attr("lastAvatarUpdateDate")?new Date(avatar.attr("lastAvatarUpdateDate")):null;if(this.logger.info("[channelService] onChannelManagementReceived -- "+action+" avatar for "+channelId),"delete"===action||"update"===action){const channel=this.getChannelFromCache(channelId);channel.lastAvatarUpdateDate=updateDate,null!==updateDate&&(channel.avatar=config.restServerUrl+"/api/channel-avatar/"+channelId+"?size=256&ts="+new Date(updateDate).getTime())}}onSubscribeToChannel(channelId,subscribersInfo){this.logger.info(`[onSubscribeToChannel] channelId = ${channelId} - subsInfo = ${subscribersInfo}`);const channel=this.getChannelFromCache(channelId),subscribers=Number.parseInt(subscribersInfo,10);channel?(channel.invited=!1,channel.subscribed=!0,channel.subscribers_count=subscribers,channel.messages=[],channel.complete=!1,channel.pageIndex=0,channel.isLoading=!1,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.eventService.publish("CURRENT_CHANNEL_UPDATE_EVENT",channelId),this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})):this.getChannel(channelId).then(newChannel=>(this.addChannelToCache(newChannel),this.feedChannel.messages=[],this.retrieveLatests())).then(()=>{this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId)})}onUnsubscribeToChannel(channelId,subscribersInfo){const subscribers=Number.parseInt(subscribersInfo,10),channel=this.getChannelFromCache(channelId);channel.subscribers_count=subscribers,channel.subscribed=!1,this.feedChannel.messages=[],this.retrieveLatests().then(()=>{this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.UNSUBSCRIBE,channelId)})}onDeleteChannel(channelId){this.removeChannelFromCache(channelId).then(()=>{this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.DELETE,channelId)})}onUserSubscribeEvent(channelId,userId){this.eventService.publish(this.CHANNEL_USER_SUBSCRIPTION_EVENT,this.LIST_EVENT_TYPE.SUBSCRIBE,channelId,userId)}onUserUnsubscribeEvent(channelId,userId){this.eventService.publish(this.CHANNEL_USER_SUBSCRIPTION_EVENT,this.LIST_EVENT_TYPE.UNSUBSCRIBE,channelId,userId)}getChannelPublishers(channel){return new Promise((resolve,reject)=>{if(channel.publishersRetreived)return resolve();this.getChannelUsers(channel.id,{format:"full",types:"owner publisher"}).then(usersData=>{usersData.data.forEach(userData=>{let contact=this.contactService.getContactByJid(userData.jid_im);contact||(contact=this.contactService.createContact(),contact.updateFromUserData(userData),this.contactService.updateContactRichStatus(contact),this.contactService.contacts[contact.id]=contact,this.contactService.dbContacts[contact.dbId]=contact,this.contactService.jtelContacts[contact.jidtel]=contact),channel.users.push(contact)}),channel.publishersRetreived=!0,this.logger.info("[channelService] getChannelPublishers ("+channel.id+") -- success -- find "+usersData.length+" publisher(s)"),resolve()}).catch(err=>{reject(this.channelErrorHandler("getChannelPublishers ("+channel.id+")",err))})})}retrieveLatests(beforeDate=null){return this.getLatestMessages(10,beforeDate,null).then(messagesData=>{const channelMessages=messagesData.reduce((acc,messageData)=>(this.feedChannel.messages.find(message=>message.id===messageData.id)||acc.push(channelMessage_model_1.ChannelMessage.createFromData(this.getChannelFromCache(messageData.channelId),messageData)),acc),[]);return this.feedChannel.messages.push.apply(this.feedChannel.messages,channelMessages),channelMessages.length})}async getChannelMessages(channel,beforeDate){try{let provider=null;provider="AGGREGATE"===channel.type?this.getLatestMessages(10,beforeDate):this.getChannelItems(channel.id,ChannelService.PAGE_SIZE,beforeDate);const messagesData=await provider,messages=messagesData.reduce((acc,messageData)=>(channel.messages.find(message=>message.id===messageData.id)||acc.push(channelMessage_model_1.ChannelMessage.createFromData(this.getChannelFromCache(messageData.channelId),messageData)),acc),[]);return channel.messages.push.apply(channel.messages,messages),{nbMessagesLoaded:messagesData.length,nbMessagesAdded:messages.length}}catch(error){throw this.channelErrorHandler("getChannelMessages ("+channel.id+")",error)}}async getChannelNextPage(channel,deferLoadNextPageIndex,reset=!1){const logChannelName="AGGREGATE"===channel.type?"feedChannel":channel.id;try{if(channel.isLoading)return this.logger.info("-- getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- ignored (isLoading)"),{};channel.isLoading=!0,reset&&(channel.pageIndex=0,deferLoadNextPageIndex=-1);const askedMessagesNumber=(channel.pageIndex+1)*ChannelService.PAGE_SIZE;if(askedMessagesNumber<=channel.messages.length)return this.logger.info("-- getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- success from cache"),channel.pageIndex+=1,channel.isLoading=!1,deferLoadNextPageIndex+=ChannelService.PAGE_SIZE,{messages:channel.messages,nbMessages:askedMessagesNumber,deferLoadNextPageIndex:deferLoadNextPageIndex};if(channel.complete)return this.logger.info("-- getChannelNextPage("+logChannelName+", "+channel.pageIndex+") -- success from cache (complete)"),channel.isLoading=!1,deferLoadNextPageIndex=-1,{messages:channel.messages,nbMessages:channel.messages.length,deferLoadNextPageIndex:deferLoadNextPageIndex};const messages=channel.messages,lastMessageDate=messages.length?messages[messages.length-1].timestamp:null,response=await this.getChannelMessages(channel,lastMessageDate);deferLoadNextPageIndex+=response.nbMessagesAdded,response.nbMessagesLoaded<ChannelService.PAGE_SIZE&&(channel.complete=!0,deferLoadNextPageIndex=-1);const msgComplete=channel.complete?"(Complete)":"(Not complete)";return this.logger.info(`[channelService] getChannelNextPage(${logChannelName}, ${channel.pageIndex}) -- success from server ${msgComplete}`),this.logger.info(`[channelService] getChannelNextPage(${logChannelName}, ${channel.pageIndex}) -- Message(s):  retrieved ${response.nbMessagesLoaded} - added ${response.nbMessagesAdded} - DeferLoadIndex ${deferLoadNextPageIndex}`),channel.pageIndex+=1,channel.loaded=!0,channel.isLoading=!1,{messages:channel.messages,nbMessages:channel.messages.length,deferLoadNextPageIndex:deferLoadNextPageIndex}}catch(error){throw channel.isLoading=!1,this.channelErrorHandler("getChannelNextPage("+logChannelName+", "+channel.pageIndex+")",error)}}async getMyChannels(){try{const url=this.portalURL+"?format=full",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw this.logger.debug(`Request ${responseData.headers.get("x-rainbow-request-id")} failed with status ${responseData.status}`),new Error(responseData.statusText);return(await responseData.json()).data.forEach(channelData=>{const channel=channel_1.Channel.create(channelData);this.updateDisplayInfo(channel),channel.invited&&this.incrementInvitationCounter(),(channel.subscribed||channel.invited)&&(this.channels[channel.id]=channel)}),this.updateChannelsList(),this.attachHandlers(),this.isStarted=!0,this.serviceStatusSubject.next(event_model_1.RBEvent.create("CHANNEL_SERVICE_STARTED")),this.channelsList}catch(error){throw this.channelErrorHandler("getMyChannels",error)}}async getChannel(channelId){try{const url=this.portalURL+"/"+channelId,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] getChannel -- "+channelId+" -- success");const responseData=await response.json(),channel=channel_1.Channel.create(responseData.data);return this.updateDisplayInfo(channel),channel}catch(error){throw this.channelErrorHandler("getChannel ("+channelId+")",error)}}getChannelFromCache(channelId){const channel=this.channels[channelId];return void 0!==channel?channel:null}async createChannel(name,mode,topic="",category="globalnews",autoProvisionning=!1,maxItems=100){try{const url=this.portalURL+(autoProvisionning?"?auto_provisioning=true":""),body=JSON.stringify({name:name,mode:mode,topic:topic,category:category,max_items:maxItems}),headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] createChannel -- "+name+" -- "+mode+" -- success");const responseData=await response.json(),channel=channel_1.Channel.create(responseData.data);return this.updateDisplayInfo(channel),channel}catch(error){throw this.channelErrorHandler("createChannel -- "+name+" -- "+mode,error)}}async deleteChannel(channelId){try{const url=this.portalURL+"/"+channelId,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw new Error(response.statusText);return this.logger.info("[channelService] deleteChannel -- "+channelId+" -- success"),response}catch(error){throw this.channelErrorHandler("deleteChannel ("+channelId+")",error)}}async findChannels(filter){const options={};filter.sortOrder&&1===filter.sortOrder?options.sortOrder="1":options.sortOrder="-1",void 0!==filter.subscribed&&(options.subscribed=filter.subscribed),filter.name&&(options.name=filter.name),filter.topic&&(options.topic=filter.topic),filter.limit&&(options.limit=filter.limit),filter.offset&&(options.offset=filter.offset),filter.sortField&&(options.sortField=filter.sortField),filter.category&&(options.category=filter.category);const urlParams=new URLSearchParams(options).toString();try{const url=new URL(this.portalURL+"/search"),headers=this.authService.getRequestHeader();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] findChannels ("+urlParams+") -- success");const responseData=await response.json(),channels=[];return responseData.data.forEach(channelData=>{const channel=channel_1.Channel.create(channelData);this.updateDisplayInfo(channel),channels.push(channel)}),channels}catch(error){throw this.channelErrorHandler("findChannels ("+urlParams+")",error)}}async browseChannels(filter){const options={};filter.sortOrder&&1===filter.sortOrder?options.sortOrder="1":options.sortOrder="-1",filter.category&&(options.category=filter.category),filter.excluded_category&&(options.excluded_category=filter.excluded_category),void 0!==filter.subscribed&&(options.subscribed=filter.subscribed),filter.limit&&(options.limit=filter.limit),filter.offset&&(options.offset=filter.offset),filter.sortField&&(options.sortField=filter.sortField);const urlParams=new URLSearchParams(options).toString();try{const url=new URL(this.portalURL+"/browse"),headers=this.authService.getRequestHeader();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] browseChannels ("+urlParams+") -- success");const responseData=await response.json(),channels=[];return responseData.data.forEach(channelData=>{const channel=channel_1.Channel.create(channelData);this.updateDisplayInfo(channel),channels.push(channel)}),channels}catch(error){throw this.channelErrorHandler("browseChannels ("+urlParams+")",error)}}async publishToChannel(channelId,itemId,type,message,title,images,video,attachments){try{const headers=this.authService.getPostHeader(),queryParam=itemId?"?itemId="+itemId:"",url=this.portalURL+"/"+channelId+"/publish"+queryParam,body={type:type,title:title||"",message:message||"",images:images||[],attachments:attachments||[]};video&&(body.video=video);const response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify(body)});if(!response.ok)throw new Error(response.statusText);return this.logger.info("[channelService] publishToChannel -- "+channelId+" -- "+type+" -- success"),response}catch(error){throw this.channelErrorHandler("publishToChannel ("+channelId+")",error)}}async subscribeToChannel(channel){try{const url=this.portalURL+"/"+channel.id+"/subscribe",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw new Error(response.statusText);return this.logger.info("[channelService] subscribeToChannel -- "+channel.id+" -- success"),channel.subscribed=!0,channel.users_count+=1,channel.updateSubject.next(),response}catch(error){throw this.channelErrorHandler("subscribeToChannel ("+channel.id+")",error)}}async unsubscribeToChannel(channel){try{const url=this.portalURL+"/"+channel.id+"/subscribe",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw new Error(response.statusText);return this.logger.info("[channelService] unsubscribeToChannel -- success"),channel.subscribed=!1,channel.users_count-=1,channel.userRole=this.USER_ROLE.NONE,channel.updateSubject.next(),response}catch(error){throw this.channelErrorHandler("unsubscribeToChannel",error)}}async updateChannel(channelId,options){try{const url=this.portalURL+"/"+channelId,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(options)});if(!response.ok)throw new Error(response.statusText);const responseData=await response.json(),channel=this.getChannelFromCache(channelId);return channel.name=responseData.data.name,channel.topic=responseData.data.topic,channel.category=responseData.data.category,this.updateDisplayInfo(channel),this.logger.info("[channelService] updateChannel ( "+channelId+") -- success"),this.eventService.publish(this.CHANNEL_UPDATE_EVENT,this.LIST_EVENT_TYPE.UPDATE,channel.id),channel.updateSubject.next(),channel}catch(error){throw this.channelErrorHandler("updateChannel ("+channelId+")",error)}}async getChannelItems(channelId,maxMessages,beforeDate=null,afterDate=null){try{const url=new URL(`${this.portalURL}/${channelId}/items`),headers=this.authService.getRequestHeader(),options={};options.max=maxMessages,beforeDate&&null!==beforeDate&&(options.before=beforeDate),afterDate&&null!==afterDate&&(options.after=afterDate);const urlParams=new URLSearchParams(options).toString();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] getChannelItems -- success");const responseData=await response.json(),messageChannel=this.getChannelFromCache(channelId);return messageChannel.messagesCount=responseData.data.status.count,messageChannel.updateSubject.next(),this.chewReceivedItems(responseData.data.items),responseData.data.items}catch(error){throw this.channelErrorHandler("getChannelItems ("+channelId+")",error)}}async deleteChannelItem(channelId,itemId){try{const url=this.portalURL+"/"+channelId+"/items/"+itemId,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw new Error(response.statusText);return void this.logger.info("[channelService] deleteChannelItem ("+channelId+") -- success")}catch(error){throw this.channelErrorHandler("deleteChannel ("+channelId+")",error)}}async getChannelUsers(channelId,options){const filter={};options&&(options.format&&"string"==typeof options.format&&options.format.length&&(filter.format=options.format),options.limit&&"number"==typeof options.limit&&options.limit>0&&(filter.limit=options.limit),options.offset&&"number"==typeof options.offset&&options.offset>0&&(filter.offset=options.offset),options.sortField&&"string"==typeof options.sortField&&options.sortField.length&&(filter.sortField=options.sortField),!options.sortOrder||"-1"!==options.sortOrder&&"1"!==options.sortOrder||(filter.sortOrder=options.sortOrder),options.types&&"string"==typeof options.types&&options.types.length&&(filter.types=options.types),options.invited&&"boolean"==typeof options.invited&&(filter.invited=options.invited));const urlParams=new URLSearchParams(filter).toString();try{const url=new URL(`${this.portalURL}/${channelId}/users`),headers=this.authService.getRequestHeader();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] getChannelUsers ("+channelId+") -- success");return await response.json()}catch(error){throw this.channelErrorHandler("getChannelUsers ("+channelId+")",error)}}async searchUsersByName(channelId,displayName,options){options.displayName=displayName;try{const url=new URL(`${this.portalURL}/${channelId}//users/search`),headers=this.authService.getRequestHeader(),urlParams=new URLSearchParams(options).toString();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] searchUsersByName ("+channelId+" -- success");return(await response.json()).data}catch(error){throw this.channelErrorHandler("searchUsersByName ("+channelId+")",error)}}async deleteChannelAvatar(channel){try{const url=this.portalURL+"/"+channel.id+"/avatar",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw new Error(response.statusText);return channel.avatar=null,channel.lastAvatarUpdateDate=null,channel.updateSubject.next(),response}catch(error){throw this.channelErrorHandler("deleteChannelAvatar "+channel.id,error)}}async uploadChannelAvatar(channel,avatar,avatarSize){try{const resizedImage=await imageUtils_service_1.resizeImage(avatar,avatarSize,avatarSize),binaryData=imageUtils_service_1.getBinaryData(resizedImage),url=this.portalURL+"/"+channel.id+"/avatar",headers=this.authService.getPostHeader("image/"+binaryData.type),data=binaryData.data,response=await fetch(url,{method:"POST",headers:headers,body:data});if(!response.ok)throw new Error(response.statusText);const responseData=await response.json();return this.logger.info("[channelService] uploadChannelAvatar "+channel.id+" -- success"),channel.avatar=resizedImage.src,channel.lastAvatarUpdateDate=new Date,channel.updateSubject.next(),responseData}catch(error){throw this.channelErrorHandler("uploadChannelAvatar",error)}}async updateChannelUsers(channelId,users,userType){const members=users.map(user=>({id:user.dbId,type:userType}));try{const url=this.portalURL+"/"+channelId+"/users",headers=this.authService.getPostHeader(),body=JSON.stringify({data:members}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] updateChannelUsers -- success");const usersLists=(await response.json()).data;return this.usersUpdateHandler(null,channelId,usersLists),usersLists}catch(error){throw this.channelErrorHandler("updateChannelUsers",error)}}usersUpdateHandler(__event,channelId,users){const channel=this.getChannelFromCache(channelId);if(null!==users){if(channel.users_count+=users.added.length-users.removed.length,channel.users.length){for(let i=0;i<users.added.length;i++)this.contactService.getContactByDBId(users.added[i]).then(contact=>{channel.users.push(contact)});for(let i=0;i<users.removed.length;i++)for(let j=channel.users.length-1;j>=0;j--)if(channel.users[j].dbId===users.removed[i]){channel.users.splice(j,1);break}}if(users.invalidUsers&&users.invalidUsers.length&&"409005"===users.invalidUsers[0].errorDetailsCode){const message=this.i18n.translate("inviteUsersError");this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}this.rxSubject.next(new event_model_1.RBEvent("CHANNEL_USERS_UPDATE_EVENT",{channelId:channelId,users:users}))}async removeAllUsersFromChannel(channelId){try{const url=this.portalURL+"/"+channelId+"/users",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw new Error(response.statusText);return this.logger.info("[channelService] Removed all users from channel -- success"),this.usersUpdateHandler(null,channelId,null),response}catch(error){throw this.channelErrorHandler("removeAllUsersFromChannel",error)}}async getPortalInfos(){try{const url=config.restServerUrl+"/api/rainbow/channels/v1.0/about",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);this.logger.info("[channelService] successfully retrieved portal infos -- success");return await response.json()}catch(error){throw this.channelErrorHandler("getPortalInfos",error)}}async getLatestMessages(maxMessages,beforeDate=null,afterDate=null){try{const url=new URL(this.portalURL+"/latest-items"),headers=this.authService.getRequestHeader(),options={};options.max=maxMessages,beforeDate&&null!==beforeDate&&(options.before=beforeDate),afterDate&&null!==afterDate&&(options.after=afterDate);const urlParams=new URLSearchParams(options).toString();url.search=urlParams;const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw new Error(response.statusText);const responseData=await response.json();return this.chewReceivedItems(responseData.data.items),responseData.data.items}catch(error){throw this.channelErrorHandler("getLatestMessages",error)}}async acceptInvitation(channelId){try{const url=this.portalURL+"/"+channelId+"/accept",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw new Error(response.statusText);const responseData=await response.json();return this.logger.info("[channelService] acceptInvitation ("+channelId+") -- success"),this.decrementInvitationCounter(),responseData}catch(error){throw this.channelErrorHandler("acceptInvitation",error)}}async declineInvitation(channelId){try{const url=this.portalURL+"/"+channelId+"/decline",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw new Error(response.statusText);const responseData=await response.json();return this.logger.info("[channelService] declineInvitation ("+channelId+") -- success"),responseData}catch(error){throw this.channelErrorHandler("declineInvitation",error)}}addChannelToCache(channel){this.logger.debug("[channelService] addChannelToCache: channelId = "+channel.id),this.channels[channel.id]=channel,this.updateChannelsList()}async removeChannelFromCache(channelId){const channelToRemove=this.getChannelFromCache(channelId);if(channelToRemove){this.logger.debug(`[channelService] removeChannelFromCache: channelId ${channelId} found in cache`);const channelName=channelToRemove.name;return channelToRemove.invited&&this.decrementInvitationCounter(),delete this.channels[channelId],this.updateChannelsList(),this.feedChannel.messages=[],await this.retrieveLatests(),channelName}return null}removeUnsubscribedChannelFromCache(channelId){const channelToRemove=this.getChannelFromCache(channelId);channelToRemove?(this.logger.debug(`[channelService]  removeUnsubscribedChannelFromCache: channel ${channelId} found in cache, subscribed = ${channelToRemove.subscribed}`),channelToRemove.subscribed||(delete this.channels[channelId],this.updateChannelsList())):this.logger.debug(`[channelService]  removeUnsubscribedChannelFromCache: channel ${channelId} not found in cache`)}async likeChannelItem(channel,message,appreciation){try{const url=`${this.portalURL}/${channel.id}/items/${message.id}/like`,body=JSON.stringify({appreciation:appreciation}),responseData=await fetch(url,{method:"POST",headers:this.authService.getPostHeader(),body:body});if(!responseData.ok)throw new Error(responseData.statusText);this.logger.info(`[channelService] likeChannelItem ${channel.id} ${message.id} -- success`);return(await responseData.json()).data}catch(error){const errorMessage="getChannelItemReactions -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}async getChannelMessageReactions(channelMessage,reaction){try{let url=`${this.portalURL}/${channelMessage.channel.id}/items/${channelMessage.id}/likes?limit=400`;reaction&&(url+="&appreciation="+reaction);const headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw new Error(responseData.statusText);return(await responseData.json()).data.items.map(data=>{let contact=this.contactService.getContactById(data.id);contact||(contact=this.contactService.createContact(data.id,data.firstName,data.lastName),contact.createTextAvatarImage());let info=data.companyName;return contact.jobTitle&&(info=contact.jobTitle+" - "+info),{reaction:data.appreciation,contact:contact,info:info}})}catch(error){const errorMessage="getChannelItemReactions -- FAILURE -- "+error.message;throw this.logger.error(errorMessage),new Error(errorMessage)}}incrementMessagesCounter(){this.messageCounter+=1,this.updateNotificationCounter()}decrementMessagesCounter(){this.messageCounter-=1,this.messageCounter<0&&(this.messageCounter=0),this.updateNotificationCounter()}incrementInvitationCounter(){this.invitationCounter+=1,this.updateNotificationCounter()}decrementInvitationCounter(){this.invitationCounter-=1,this.invitationCounter<0&&(this.invitationCounter=0),this.updateNotificationCounter()}ackMessages(){this.messageCounter=0,this.updateNotificationCounter(),this.feedChannel.messages.forEach(message=>{message.isNew=!1})}ackMessage(messageId){this.feedChannel.messages.forEach(message=>{message.id===messageId&&(message.isNew=!1)}),this.decrementMessagesCounter()}updateNotificationCounter(){this.notificationCounter=this.messageCounter+this.invitationCounter,this.notificationCounter<0&&(this.notificationCounter=0),this.eventService.publish(this.CHANNEL_NOTIFICATION_NUMBER_UPDATED,this.notificationCounter)}getChannelInvitations(){return this.channelsList.filter(channel=>!channel.deleted&&channel.invited)}chewReceivedItems(items){items.forEach(item=>{"urn:xmpp:channels:simple"===item.type&&(item.entry={message:item.message},delete item.message),item.modified=void 0!==item.creation})}updateChannelsList(){this.channelsList=Object.keys(this.channels).map(key=>this.channels[key])}updateDisplayInfo(channel){channel.displayName=lodash_escape_1.default(channel.name),channel.displayTopic=lodash_escape_1.default(channel.topic)}}ChannelService.PAGE_SIZE=10,exports.ChannelService=ChannelService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class ThemeColor{static create(displayName,cssVariableName,cssValue,configurable){return new ThemeColor(displayName,cssVariableName,cssValue,configurable)}static createFromThemeColor(refThemeColor){return new ThemeColor(refThemeColor.displayName,refThemeColor.cssVariableName,refThemeColor.cssValue,refThemeColor.configurable)}constructor(displayName,cssVariableName,cssValue,configurable){this.displayName=displayName,this.cssVariableName=cssVariableName,this.cssValue=cssValue,this.configurable=configurable}}exports.ThemeColor=ThemeColor},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),event_service_1=__webpack_require__(11),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12);class CalendarRegistrationData{static create(){return new CalendarRegistrationData}}exports.CalendarRegistrationData=CalendarRegistrationData;class AbstractCalendarService{}exports.AbstractCalendarService=AbstractCalendarService;class CalendarService extends AbstractCalendarService{constructor(){super(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventSubject=new rxjs_1.Subject,this.subscriptions=[],this.xmppConnectionSubscription=null,this.messageHandlerRef=null,this.calendarPresenceStateListener=null,this.intervalID=null,this.msTeamsSyncFeatureEnabled=!1,this.serviceActivated=!1,this.msTeamsSyncPresenceActivated=!1,this.serviceState=null,this.calendarState={},this.calendarPresenceEnabled=!1,this.officeCalendarPresenceEnabled=!1,this.googleCalendarPresenceEnabled=!1,this.disableCalendarPresencePrompt=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.calendarService||(win.rainbow.calendarService=new CalendarService),win.rainbow.calendarService}async start(conversationService=null){try{if(this.logger.info(""),this.logger.info("[calendarService] === STARTING ==="),this.conversationService=conversationService,this.logger.info("[calendarService] listen 'out of office' status for roster contacts"),setTimeout(()=>{this.getMailAutoReplyForConversationContacts()},15e3),this.intervalID=setInterval(()=>{this.updateMailAutoReplyForEachContact()},9e5),this.officeCalendarPresenceEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MSO365_CALENDAR_PRESENCE),this.googleCalendarPresenceEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.GOOGLE_CALENDAR_PRESENCE),this.msTeamsSyncFeatureEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.MSO365_TEAMS_PRESENCE),this.calendarPresenceEnabled=this.officeCalendarPresenceEnabled||this.googleCalendarPresenceEnabled,this.logger.info("[calendarService] calendar presence status from profileService: "+this.calendarPresenceEnabled),this.disableCalendarPresencePrompt="true"===this.settingsService.getSetting("disableCalendarPresence"),this.logger.info("[calendarService] calendar presence prompt status from userSettings: "+!this.disableCalendarPresencePrompt),this.logger.info("[calendarService] === STARTED ==="),this.attachHandlers(),this.subscriptions.push(this.xmppService.subscribeToContactEvents(event=>{"ON_CONTACT_PRESENCE_EVENT"===event.name&&this.onCalendarPresenceChange(event.data)})),this.calendarPresenceEnabled&&!this.contactService.userContact.guestMode){this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChange(event)});try{await this.getCalendarState(this.contactService.userContact.dbId),"enabled"===this.serviceState&&this.handleEnableState()}catch(error){this.serviceActivated=!1,this.serviceState="failed",this.logger.error("[calendarService] === STARTING FAILURE ===  "+error.message)}}this.calendarPresenceStateListener&&this.calendarPresenceStateListener(),this.calendarPresenceStateListener=this.eventService.subscribe("EXIT_CALENDAR_PRESENCE_STATE",()=>{this.exitCalendarPresenceState()})}catch(error){this.logger.error("[calendarService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info("[calendarService] === STOPPING ==="),this.serviceActivated=!1,this.msTeamsSyncPresenceActivated=!1,this.calendarState={},this.serviceState=null,this.subscriptions&&this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.intervalID&&clearTimeout(this.intervalID),this.calendarPresenceStateListener&&this.calendarPresenceStateListener(),this.logger.info("[calendarService] === STOPPED ===")}async reconnect(){this.attachHandlers(),this.logger.info("[calendarService] reconnect -- success")}attachHandlers(){this.logger.info("[calendarService] attachHandlers"),this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.messageHandlerRef=this.xmppService.addHandler(stanza=>(this.onUpdateMessageReceived(stanza),!0),"jabber:iq:configuration","message",null)}async onConnectionStateChange(event){if("ON_XMPP_CONNECTED"===event.name){if(event.data&&"PRESENCE"===event.data.reason)return;this.logger.info("[calendarService] onConnectionStateChange state: "+event.name);try{await this.getCalendarState(),"enabled"===this.serviceState&&this.handleEnableState(),"consent_required"===this.serviceState&&this.handleConsentRequiredState()}catch(error){this.serviceActivated=!1,this.serviceState="failed",this.logger.error(`[calendarService] onConnectionStateChange failure on event ${event.name}: ${error.message}`)}}}handleEnableState(){const sinceDate=this.calendarState.since?new Date(this.calendarState.since):null,untilDate=this.calendarState.until?new Date(this.calendarState.until):null,status=this.calendarState.busy?"dnd":"online",message=this.calendarState.busy?"busy":"";this.updateContactCalendarPresence(this.contactService.userContact.jid,status,sinceDate,untilDate,message,this.contactService.userContact.calendarState.applyCalendarPresence)}async handleConsentRequiredState(){const registrationParams=await this.getRegistrationParams(!1);this.eventService.publish("ON_OPEN_POPUP","calendar",registrationParams)}onUpdateMessageReceived(stanza){const info=$(stanza).find("calendar");if(info.length){this.serviceState=info.attr("status");const provider=info.attr("provider");this.serviceActivated="enabled"===this.serviceState,this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:this.serviceActivated}),this.logger.info("[calendarService] onUpdateMessageReceived with state: "+this.serviceState),"consent_required"===this.serviceState&&this.handleConsentRequiredState(),this.calendarState||(this.calendarState={}),this.calendarState.provider=provider,this.eventSubject.next({action:"ON_CALENDAR_PROVIDER_UPDATE"})}const presence=$(stanza).find("presence");if(presence.length&&-1!==$(stanza).attr("from").indexOf("/presence")){const status=presence.attr("status");this.msTeamsSyncPresenceActivated="enabled"===status,this.calendarState||(this.calendarState={}),this.calendarState.provider="office365",this.eventSubject.next({action:"ON_CALENDAR_MSTEAMS_STATUS_CHANGE",data:this.msTeamsSyncPresenceActivated})}}onCalendarPresenceChange(attr){if(this.contactService.isTelJid(attr.jid)){const jidIM=this.contactService.getImJid(attr.jid);jidIM&&"calendar"===this.contactService.getResourceFromJid(attr.jid)?(this.logger.info(`[calendarService] onCalendarPresenceChange -- status: ${attr.status} -- until: ${attr.until} -- message: ${attr.message} -- auto dnd: ${attr.applyCalendarPresence}`),this.updateContactCalendarPresence(jidIM,attr.status,attr.since,attr.until,attr.message,attr.applyCalendarPresence)):jidIM&&"presence"===this.contactService.getResourceFromJid(attr.jid)&&this.msTeamsSyncFeatureEnabled&&(this.logger.info(`[calendarService] onCalendarPresenceChange MS Teams presence status update for ${jidIM} -- ${attr.status} -- ${attr.message}`),this.eventService.publish("ON_CONTACT_MSTEAMS_STATUS_CHANGE",jidIM,attr.status,attr.message))}}async exitCalendarPresenceState(){try{const url=config.restServerUrl+"/api/rainbow/calendar/v1.0/control?ignore=current",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info("[calendarService] exitCalendarPresenceState success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"exitCalendarPresenceState");throw this.logger.error("[calendarService] exitCalendarPresenceState failure: "+errorInfo.error.message),errorInfo.error}}getCurrentProvider(){return this.calendarState&&this.calendarState.provider?this.calendarState.provider:""}isCalendarSharingActivated(){return this.logger.info("[calendarService] isCalendarSharingActivated --  "+this.serviceActivated),this.serviceActivated}async getRegistrationParams(fromSettings){const promiseArray=[];let autorizationGoogleLink=null,autorizationMicrosoftLink=null;this.logger.info("[calendarService] getRegistrationParams"),this.officeCalendarPresenceEnabled&&promiseArray.push(this.getCalendarRegistrationInfo("office365").then(url=>{autorizationMicrosoftLink=url})),this.googleCalendarPresenceEnabled&&promiseArray.push(this.getCalendarRegistrationInfo("googleCalendar").then(url=>{autorizationGoogleLink=url}));try{await Promise.all(promiseArray);const registrationParamsData=CalendarRegistrationData.create();return autorizationGoogleLink||autorizationMicrosoftLink?(this.logger.info("[calendarService] getRegistrationParams -- At least one calendar is available, show registration popup or tooltip"),registrationParamsData.authentMicrosoftUrl=autorizationMicrosoftLink,registrationParamsData.authentGoogleUrl=autorizationGoogleLink):this.logger.error("[calendarService] getRegistrationParams -- no reponse from calendar provider "),null!==fromSettings&&(registrationParamsData.fromSettings=fromSettings),registrationParamsData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getRegistrationParams");throw this.logger.error("[calendarService] getRegistrationParams failure -- "+errorInfo.error.message),errorInfo.error}}async deactivateCalendarSharing(){this.logger.info("[calendarService] deactivateCalendarSharing");try{const disableAlsoMSTeams=this.calendarState&&"office365"===this.calendarState.provider,url=config.restServerUrl+"/api/rainbow/calendar/v1.0",response=await fetch(url,{method:"DELETE",headers:this.authService.getRequestHeader()});if(!response.ok)throw response;if(this.logger.info("[calendarService] deactivateCalendarSharing success for user "+this.contactService.userContact.jid),disableAlsoMSTeams&&this.msTeamsSyncFeatureEnabled){const url2=config.restServerUrl+"/api/rainbow/msteamspresence/v1.0";await fetch(url2,{method:"DELETE",headers:this.authService.getRequestHeader()}),this.msTeamsSyncPresenceActivated=!1}this.serviceActivated=!1,this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:this.serviceActivated})}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deactivateCalendarSharing");throw this.logger.error("[calendarService] deactivateCalendarSharing failure -- "+errorInfo.error.message),errorInfo.error}}calendarCancelCallback(){this.logger.info("[calendarService] calendarCancelCallback for user "+this.contactService.userContact.jid),this.serviceActivated=!1,this.settingsService.setSetting("disableCalendarPresence","true"),this.contactService.setUserSettings({promptForCalendarPresence:!1}),this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:this.serviceActivated})}calendarLaterCallback(){this.logger.info("[calendarService] calendarLaterCallback for user "+this.contactService.userContact.jid),this.serviceActivated=!1,this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:!1})}async getCalendarState(userId=null){this.logger.info("[calendarService] getCalendarState");try{this.msTeamsSyncFeatureEnabled&&this.getMsTeamsStateFromServer()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getMsTeamsStateFromServer");this.logger.error("[calendarService] getMsTeamsStateFromServer failure -- CalendarService portal not responding: "+errorInfo.error.message)}try{const calendarInfo=await this.getCalendarStateFromServer(userId);"busy"===calendarInfo.status||"free"===calendarInfo.status||"out_of_office"===calendarInfo.status?(this.serviceState="enabled",this.calendarState=calendarInfo,this.logger.info(`[calendarService] getCalendarState success -- Service state: ${this.serviceState}  Calendar status: ${this.calendarState.status}`)):(this.serviceState=calendarInfo.status,this.calendarState=null,this.logger.info("[calendarService] getCalendarState success -- Service state: "+this.serviceState))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCalendarState");throw this.logger.error("[calendarService] getCalendarState failure -- CalendarService portal not responding: "+errorInfo.error.message),errorInfo.error}}async getMsTeamsStateFromServer(){this.logger.info("[calendarService] getMsTeamsStateFromServer");try{const url=config.restServerUrl+"/api/rainbow/msteamspresence/v1.0",headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const calendarInfo=await responseData.json();return this.logger.info("[calendarService] getMsTeamsStateFromServer success -- Calendar status: "+calendarInfo.status),this.msTeamsSyncPresenceActivated="disabled"!==calendarInfo.status&&"none"!==calendarInfo.status&&"consent_required"!==calendarInfo.status&&"subscription_error"!==calendarInfo.status,this.msTeamsSyncPresenceActivated&&(this.calendarState||(this.calendarState={}),this.calendarState.provider="office365"),this.msTeamsSyncPresenceActivated}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCalendarStateFromServer");throw this.logger.error("[calendarService] getCalendarStateFromServer failure -- CalendarService portal not responding: "+errorInfo.error.message),errorInfo.error}}async getCalendarStateFromServer(userId=null){this.logger.info("[calendarService] getCalendarStateFromServer");try{let url=config.restServerUrl+"/api/rainbow/calendar/v1.0";null!==userId&&(url=url+"?userid="+userId);const headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const calendarInfo=await responseData.json();return this.logger.info("[calendarService] getCalendarStateFromServer success -- Calendar status: "+calendarInfo.status),calendarInfo}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCalendarStateFromServer");throw this.logger.error("[calendarService] getCalendarStateFromServer failure -- CalendarService portal not responding: "+errorInfo.error.message),errorInfo.error}}async getCalendarRegistrationInfo(type){let calendarRedirect="o365",calendarType="office365";"googleCalendar"===type&&(calendarRedirect="gcal",calendarType="google");try{const lang=this.settingsService.getAppliLanguage().code;let url=config.restServerUrl+"/api/rainbow/calendar/v1.0/register";"office365"===calendarType&&this.msTeamsSyncFeatureEnabled&&(url=config.restServerUrl+"/api/rainbow/office365/v1.0/register");const headers=this.authService.getPostHeader(),body=JSON.stringify({type:calendarType,callback:window.location.origin+"/redirectO365.html?provider="+calendarRedirect+"&lang="+lang}),responseData=await fetch(url,{method:"POST",headers:headers,body:body});if(!responseData.ok)throw responseData;const linkdata=await responseData.json();return this.logger.info(`[calendarService] getCalendarRegistrationInfo for ${type} -- success`),linkdata.url}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCalendarRegistrationInfo");throw this.logger.error("[calendarService] getCalendarRegistrationInfo failure -- "+errorInfo.error.message),errorInfo.error}}async updateContactCalendarPresence(jid,status,sinceDate,untilDate,message,applyCalendarPresence){const contact=await this.contactService.getOrCreateContact(jid);try{contact.calendarState.status=status,contact.calendarState.message=message,contact.calendarState.applyCalendarPresence=applyCalendarPresence;let mdate=null;"online"===status||untilDate||(untilDate=new Date),untilDate&&(mdate=moment(untilDate)),contact.calendarState.mdate=mdate,mdate?mdate.isSame(moment(),"d")?(contact.calendarState.until=mdate.format("LT"),contact.calendarState.untilDate=!1):(contact.calendarState.until=mdate.format("ll"),contact.calendarState.untilDate=!0):(untilDate||(untilDate=new Date),contact.calendarState.until=untilDate,contact.calendarState.untilDate=!1),this.contactService.isUserContact(contact)?(this.logger.info(`[calendarService] updateContactCalendarPresence for my user with: ${status} until ${untilDate} auto dnd ${applyCalendarPresence}`),this.serviceActivated||"offline"===status||(this.serviceActivated=!0,this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:this.serviceActivated})),this.getContactMailAutoReply(this.contactService.userContact)):this.logger.info(`[calendarService] updateContactCalendarPresence for user ${jid} with: ${status} until ${untilDate} auto dnd ${applyCalendarPresence}`),contact.calendarStateRaw.status=status,contact.calendarStateRaw.message=message,contact.calendarStateRaw.calendarPresenceDND=applyCalendarPresence,untilDate&&(contact.calendarStateRaw.untilDate=untilDate),sinceDate&&(contact.calendarStateRaw.sinceDate=sinceDate),this.eventService.publish("ON_CONTACT_CALENDAR_STATUS_CHANGE",contact)}catch(error){this.logger.error(`[calendarService] updateContactCalendarPresence failure for user ${jid} with error ${error}`)}}getMailAutoReplyForConversationContacts(){this.logger.info("[calendarService] getMailAutoReplyForConversationContacts"),this.conversationService.getConversations().forEach(conversation=>{null!==conversation.contact&&this.getContactMailAutoReply(conversation.contact)})}updateMailAutoReplyForEachContact(){this.logger.info("[calendarService] updateMailAutoReplyForEachContact"),this.getContactMailAutoReply(this.contactService.userContact),this.getMailAutoReplyForConversationContacts()}async getContactMailAutoReply(contact){this.logger.info("[calendarService] getContactMailAutoReply");try{const userContactCompanyId=this.contactService.userContact.company.id;if(!contact.company||contact.company.id!==userContactCompanyId)return;if(!contact.calendarState.status)return void this.logger.info(`[calendarService] getContactMailAutoReply user ${contact.dbId} has no calendar state`);if(contact.calendarState.lastUpdate){const duration=moment.duration(contact.calendarState.lastUpdate.diff(moment()));if(Math.abs(Math.floor(duration.asMinutes()))<15)return void this.logger.info("[calendarService] getContactMailAutoReply state has been updated in the last 15min for user "+contact.dbId)}contact.calendarState.lastUpdate=moment();const url=config.restServerUrl+"/api/rainbow/calendar/v1.0/automatic_reply?userid="+contact.dbId,headers=this.authService.getRequestHeader(),responseData=await fetch(url,{method:"GET",headers:headers});if(!responseData.ok)throw responseData;const response=await responseData.json();return this.updateContactMailAutoReply(response,contact),void this.logger.info("[calendarService] getContactMailAutoReply success for contact "+contact.dbId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getContactMailAutoReply");throw this.logger.error("[calendarService] getContactMailAutoReply failure: "+errorInfo.error.message),errorInfo.error}}updateContactMailAutoReply(autoReplyData,contact){if(this.logger.info(`[calendarService] updateContactMailAutoReply for user ${contact.jid} with data enabled ${autoReplyData.enabled} and date end ${autoReplyData.end}`),autoReplyData.enabled){if(contact.calendarState.autoReplyOn=!0,contact.calendarState.autoReplyInfos={},autoReplyData.message_text&&(contact.calendarState.autoReplyInfos.message=autoReplyData.message_text),autoReplyData.end){const mdate=moment(autoReplyData.end);contact.calendarState.autoReplyInfos.mdate=mdate,mdate?mdate.isSame(moment(),"d")?(contact.calendarState.autoReplyInfos.until=mdate.format("LT"),contact.calendarState.autoReplyInfos.untilDate=!1):(contact.calendarState.autoReplyInfos.until=mdate.format("ll"),contact.calendarState.autoReplyInfos.untilDate=!0):(contact.calendarState.autoReplyInfos.until=autoReplyData.end,contact.calendarState.autoReplyInfos.untilDate=!0)}contact.calendarStateRaw.autoReplyEnabled=!0,contact.calendarStateRaw.autoReplyInfos={},autoReplyData.start&&(contact.calendarStateRaw.autoReplyInfos.startDate=autoReplyData.start),autoReplyData.end&&(contact.calendarStateRaw.autoReplyInfos.endDate=autoReplyData.end),autoReplyData.message_html&&(contact.calendarStateRaw.autoReplyInfos.messageHtml=autoReplyData.message_html),autoReplyData.message_text&&(contact.calendarStateRaw.autoReplyInfos.messageText=autoReplyData.message_text)}else contact.calendarState.autoReplyOn=!1,contact.calendarState.autoReplyInfos={},contact.calendarStateRaw.autoReplyEnabled=!1,contact.calendarStateRaw.autoReplyInfos={};this.eventService.publish("ON_CONTACT_CALENDAR_STATUS_CHANGE",contact),this.eventSubject.next({action:"ON_CALENDAR_STATUS_CHANGE",data:this.serviceActivated})}}exports.CalendarService=CalendarService},function(module,exports,__webpack_require__){"use strict";(function(Buffer){Object.defineProperty(exports,"__esModule",{value:!0});const ts_ebml_1=__webpack_require__(478),call_model_1=__webpack_require__(29),rxjs_1=__webpack_require__(7),xmpp_service_1=__webpack_require__(9),fileStorage_service_1=__webpack_require__(34),event_service_1=__webpack_require__(11),fileServer_service_1=__webpack_require__(47),conversation_service_1=__webpack_require__(63),errorHelper_service_1=__webpack_require__(12),logger_service_1=__webpack_require__(4),i18n_service_1=__webpack_require__(38),ringing_service_1=__webpack_require__(487),main_service_1=__webpack_require__(15);class CallAreaRecordContext{constructor(callType,recordingFeature){this.callType="",this.recordingFeature=!1,this.conversation=null,this.webrtcCallRef=null,this.isRecorded=!1,this.displayRecordTime=null,this.pauseRecord=null,this.recorder=null,this.updateTimer=null,this.actualRecordTime=0,this.durationTimer=null,this.callType=callType,this.recordingFeature=recordingFeature}static create(callType,recordingFeature){return new CallAreaRecordContext(callType,recordingFeature)}getWebrtcCallRef(){return this.webrtcCallRef}setWebrtcCallRef(webrtcCallRef){this.webrtcCallRef=webrtcCallRef}getConversation(){return this.conversation}setConversation(conversation){this.conversation=conversation}}exports.CallAreaRecordContext=CallAreaRecordContext;class AbstractWebrtcP2PRecordingService{}exports.AbstractWebrtcP2PRecordingService=AbstractWebrtcP2PRecordingService;class WebrtcP2PRecordingService extends AbstractWebrtcP2PRecordingService{constructor(){super(),this.started=!1,this.recording=!1,this.upload=!1,this.filename="",this.recordStopOrigin="LOCAL",this.xmppService=xmpp_service_1.XmppService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.centralizedService=null,this.mainService=main_service_1.MainService.getInstance(),this.ringingService=ringing_service_1.RingingService.getInstance(),this.durationTimer=null,this.metadataBuf=new ArrayBuffer(0),this.last_duration=0,this.clusterPtrs=[],this.recordedStartedEvent=null,this.conversationEndedEvent=null,this.tempUploadedFileDescriptor=null}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.webrtcP2PRecordingService||(win.rainbow.webrtcP2PRecordingService=new WebrtcP2PRecordingService),win.rainbow.webrtcP2PRecordingService}async start(){this.started=!1,this.recording=!1,this.recorder=null,this.chunk=null,this.writeStream=null,this.data=new Blob([],{type:"video/webm"}),this.audioContext=null,this.recordFile=null,this.logger.info("[WebrtcP2PRecordingService] === STARTING ==="),this.centralizedService=this.mainService.inject("centralizedService"),this.decoder=new ts_ebml_1.Decoder,this.initConversationRecordContext(),this.startListeners(),this.started=!0,this.logger.info("[WebrtcP2PRecordingService] === STARTED ===")}async stop(){this.logger.info("[WebrtcP2PRecordingService] === STOPPING ==="),this.started&&(this.started=!1),this.recordedStartedEvent&&(this.recordedStartedEvent(),this.recordedStartedEvent=null),this.conversationEndedEvent&&(this.conversationEndedEvent(),this.conversationEndedEvent=null),this.logger.info("[WebrtcP2PRecordingService] === STOPPED ===")}startListeners(){this.recordedStartedEvent&&(this.recordedStartedEvent(),this.recordedStartedEvent=null),this.recordedStartedEvent=this.eventService.subscribe("ON_RECORDING_START_MSG_RECEIVED",()=>{this.ringingService.playRecordTone()}),this.conversationEndedEvent&&(this.conversationEndedEvent(),this.conversationEndedEvent=null),this.conversationEndedEvent=this.eventService.subscribe("ON_CONVERSATION_CALL_UPDATED_EVENT",(__evt,conversationCallEvent)=>{this.conversationRecordContext&&conversationCallEvent.conversation&&this.conversationRecordContext.conversationId===conversationCallEvent.conversation.id?conversationCallEvent.conversation.videoCall&&"Unknown"===conversationCallEvent.conversation.videoCall.status.value&&(this.setRecordStopOrigin("LOCAL"),this.stopRecording(),this.conversationService.sendRecordingMessage(conversationCallEvent.conversation,"stop")):this.conversationRecordContext&&conversationCallEvent.call&&this.conversationRecordContext.conversationId===conversationCallEvent.call.conversationId&&"Unknown"===conversationCallEvent.call.status.value&&(this.setRecordStopOrigin("LOCAL"),this.stopRecording())})}getConversationRecordContext(conversationId){return conversationId===this.conversationRecordContext.conversationId?this.conversationRecordContext:null}setConversationRecordContext(conversationId,recorder,pause,actualRecordTime,recordStopSource){conversationId&&""!==conversationId&&(this.conversationRecordContext.conversationId=conversationId,this.conversationRecordContext.recorder=recorder&&this.recording,this.conversationRecordContext.pause=pause,this.conversationRecordContext.actualRecordTime=actualRecordTime,this.conversationRecordContext.recordStopSource=recordStopSource)}canRecord(){try{return!!MediaRecorder}catch(e){return!1}}createRecord(callID,callID2,sourceStream="REMOTE",upload=!1,filename="",onlyAudio=!1,mimeType){let options=null,localStreams=null,remoteStreams=null,stream=null,videoStream=null,audioStream=null;const tracks=[];this.recorder=null,this.upload=upload,this.filename=filename;let streamsAvailable=!1,localIndexSharing=null,remoteIndexSharing=null,remoteIndexAudioVideo=null;const isSafari="safari"===adapter.default.browserDetails.browser,isFirefox="firefox"===adapter.default.browserDetails.browser;if(this.decoder=new ts_ebml_1.Decoder,this.data=new Blob([],{type:"video/webm"}),isSafari&&(mimeType="audio/wave"),mimeType&&MediaRecorder.isTypeSupported(mimeType)?options={mimeType:mimeType}:onlyAudio?MediaRecorder.isTypeSupported("audio/webm")&&(options={mimeType:"audio/webm"}):MediaRecorder.isTypeSupported("video/webm;codecs=vp8")?options={mimeType:"video/webm; codecs=vp8"}:MediaRecorder.isTypeSupported("video/webm;codecs=vp9")?options={mimeType:"video/webm; codecs=vp9"}:MediaRecorder.isTypeSupported("video/webm;codecs=h264")?options={mimeType:"video/webm; codecs=h264"}:MediaRecorder.isTypeSupported("video/mpeg")&&(options={mimeType:"video/mpeg"}),isFirefox&&(options={}),null===options)return this.logger.error("[WebrtcP2PRecordingService] Codecs : "+mimeType+" are not available for the navigator"),!1;{this.logger.info("[WebrtcP2PRecordingService] createRecord -- mimeType used "+options.mimeType);let sess=null;if(callID){if(sess=this.xmppService.connection.jingle.sessions[callID],sess&&(localStreams=this.xmppService.connection.jingle.sessions[callID].localStreams,sess.remoteStreams&&sess.remoteStreams.length?remoteStreams=sess.remoteStreams:sess.remoteStreams&&sess.remoteStreams.length||!sess.remoteStreamsObject||(remoteStreams=Object.values(sess.remoteStreamsObject))),callID2){const sess2=this.xmppService.connection.jingle.sessions[callID2];localStreams=localStreams?localStreams.concat(this.xmppService.connection.jingle.sessions[callID2].localStreams):this.xmppService.connection.jingle.sessions[callID2].localStreams,sess2.remoteStream&&sess2.remoteStreams.length?remoteStreams=remoteStreams?remoteStreams.concat(sess2.remoteStreams):sess2.remoteStreams:sess2.remoteStreams&&sess2.remoteStreams.length||!sess2.remoteStreamsObject||(remoteStreams=remoteStreams?remoteStreams.concat(Object.values(sess2.remoteStreamsObject)):Object.values(sess2.remoteStreamsObject))}}else{if(!callID2)return this.logger.error("[WebrtcP2PRecordingService] no callId"),!1;sess=this.xmppService.connection.jingle.sessions[callID2],localStreams=this.xmppService.connection.jingle.sessions[callID2].localStreams,sess.remoteStream&&sess.remoteStreams.length?remoteStreams=sess.remoteStreams:sess.remoteStreams&&sess.remoteStreams.length||!sess.remoteStreamsObject||(remoteStreams=Object.values(sess.remoteStreamsObject))}if(streamsAvailable=localStreams&&localStreams.length&&null!==localStreams[0]||remoteStreams&&remoteStreams.length&&null!==remoteStreams[0],null!==this.recorder||!streamsAvailable)return this.logger.error("[WebrtcP2PRecordingService] Cannot get Stream"),!1;{let i,tmpIndexSharing=null;for(i=0;i<remoteStreams.length;i++)remoteStreams[i]&&null!==remoteStreams[i]&&(tmpIndexSharing=i,remoteStreams[i].getAudioTracks().forEach(element=>{tracks.push(element),remoteIndexAudioVideo=i,tmpIndexSharing=null}),null!==tmpIndexSharing&&(remoteIndexSharing=tmpIndexSharing));for(tmpIndexSharing=null,i=0;i<localStreams.length;i++)localStreams[i]&&null!==localStreams[i]&&(tmpIndexSharing=i,localStreams[i].getAudioTracks().forEach(element=>{tracks.push(element),tmpIndexSharing=null}),null!==tmpIndexSharing&&(localIndexSharing=tmpIndexSharing));if(this.audioContext&&(this.logger.error("[WebrtcP2PRecordingService] anomaly audio Context not previously released"),this.closeAudioContext()),tracks.length)if(isSafari)audioStream=new MediaStream,tracks.forEach(track=>{audioStream.addTrack(track)});else{this.audioContext=new AudioContext;const sources=tracks.map(t=>this.audioContext.createMediaStreamSource(new MediaStream([t]))),dest=this.audioContext.createMediaStreamDestination();sources.forEach(source=>source.connect(dest)),audioStream=dest.stream}if(!onlyAudio&&!isSafari)if(videoStream=new MediaStream,"LOCAL"===sourceStream&&null!==localIndexSharing){localStreams[localIndexSharing].getVideoTracks().forEach(element=>{videoStream.addTrack(element)})}else null!==remoteIndexSharing?remoteStreams[remoteIndexSharing].getVideoTracks().forEach(element=>{videoStream.addTrack(element)}):remoteStreams[remoteIndexAudioVideo].getVideoTracks().forEach(element=>{videoStream.addTrack(element)});stream=audioStream&&videoStream?new MediaStream([...audioStream.getTracks(),...videoStream.getTracks()]):audioStream&&!videoStream?audioStream:videoStream,this.centralizedService&&this.centralizedService.fileSystem&&this.centralizedService.fileSystem.createWriteStream&&this.centralizedService.fileSystem.unlink&&(this.fullFileName=this.centralizedService.fileSaver.getFolderPath()+"/"+filename,this.centralizedService.fileSystem.createWriteStream(this.fullFileName+".temp").then(writeStream=>{this.writeStream=writeStream,this.writeStream.on("error",()=>{this.logger.error("[WebrtcP2PRecordingService] WriteStream error event")}),this.writeStream.on("drain",()=>{this.logger.info("[WebrtcP2PRecordingService] WriteStream drain event")})})),isSafari?(this.recorder=new MediaRecorder(stream),this.recorder.addEventListener("dataavailable",function(error){this.onCreateFileFromBlobForSafari(error.data)}.bind(this)),this.recorder.onstop=this.onStop.bind(this),this.recorder.onerror=this.onError.bind(this)):(this.recorder=new MediaRecorder(stream,options),this.recorder.ondataavailable=this.onDataAvailable.bind(this),this.recorder.onstop=this.onStop.bind(this),this.recorder.onerror=this.onError.bind(this))}}return!0}setRecordStopOrigin(recordStopSource){recordStopSource&&""!==recordStopSource&&(this.recordStopOrigin=recordStopSource)}startRecording(timeslice){null!==this.recorder&&(timeslice?this.recorder.start(timeslice):this.recorder.start(),this.recording=!0,this.startConvTimer(),this.eventService.publish("ON_USER_START_RECORDING"))}stopRecording(){null!==this.recorder&&(this.recorder.stop(),this.recording=!1,this.closeAudioContext()),this.stopConvTimer(),this.initConversationRecordContext(),this.eventService.publish("ON_USER_STOP_RECORDING")}pauseResumeRecording(){null!==this.recorder&&("recording"===this.recorder.state?(this.recorder.pause(),this.conversationRecordContext.pause=!0,this.stopConvTimer()):(this.recorder.resume(),this.conversationRecordContext.pause=!1,this.startConvTimer()),this.eventService.publish("ON_USER_PAUSE_OR_RESUME_RECORDING"))}pauseRecording(){null!==this.recorder&&"recording"===this.recorder.state&&(this.recorder.pause(),this.conversationRecordContext.pause=!0,this.stopConvTimer(),this.eventService.publish("ON_USER_PAUSE_OR_RESUME_RECORDING"))}pauseOrResumeRecording(callAreaRecordContext){callAreaRecordContext.recorder&&this.pauseResumeRecording()}startRecord(callAreaRecordContext){if(!callAreaRecordContext.recorder){callAreaRecordContext.recorder=!0;const conv=callAreaRecordContext.conversation;let filename,videoCallId=null,MPCallId=null;if("PHONE_MP"===callAreaRecordContext.callType){const contactTel=callAreaRecordContext.getConversation().contact;filename="conv_"+contactTel.firstname.substr(0,1)+"_"+contactTel.lastname+"_"+moment().format("DD-MM-YYYY_H_mm_ss")+".mp4"}else filename="conv_"+conv.contact.firstname.substr(0,1)+"_"+conv.contact.lastname+"_"+moment().format("DD-MM-YYYY_H_mm_ss")+".mp4";const sourceStream=conv.videoCall.localMedia&call_model_1.Call.Media.SHARING?"LOCAL":"REMOTE";if(conv.videoCall&&conv.videoCall.id&&(videoCallId=conv.videoCall.id),callAreaRecordContext.webrtcCallRef&&callAreaRecordContext.webrtcCallRef.id&&(MPCallId=callAreaRecordContext.webrtcCallRef.id),!videoCallId&&!MPCallId)return void(callAreaRecordContext.recorder=!1);this.createRecord(videoCallId,MPCallId,sourceStream,!0,filename)?(this.startRecording(),this.setConversationRecordContext(conv.id,callAreaRecordContext.recorder,!1,0,"LOCAL"),this.conversationService.sendRecordingMessage(conv,"start")):callAreaRecordContext.recorder=!1}}stopRecord(callAreaRecordContext,__buttons,origin="LOCAL"){callAreaRecordContext.recorder&&(this.setRecordStopOrigin(origin),this.stopRecording(),callAreaRecordContext.recorder=!1,callAreaRecordContext.displayRecordTime=null,callAreaRecordContext.updateTimer&&(this.stopRecordTimer(callAreaRecordContext),callAreaRecordContext.updateTimer=null),this.conversationService.sendRecordingMessage(callAreaRecordContext.conversation,"stop"))}manageActiveRecorder(callAreaRecordContext){if(!callAreaRecordContext.updateTimer){this.setOnPauseCallback(()=>{this.handleRecordPauseResume(callAreaRecordContext)}),this.setOnResumeCallback(()=>{this.handleRecordPauseResume(callAreaRecordContext)});const recordContext=this.getConversationRecordContext(callAreaRecordContext.conversation.id);recordContext&&recordContext.recorder&&(callAreaRecordContext.pauseRecord=recordContext.pause,callAreaRecordContext.actualRecordTime=recordContext.actualRecordTime,callAreaRecordContext.updateTimer=null,callAreaRecordContext.pauseRecord||this.initRecordTimer(callAreaRecordContext),callAreaRecordContext.displayRecordTime=this.getDurationTime(callAreaRecordContext.actualRecordTime))}}downloadFile(blob,conversationId,messageId,filename,browse){this.logger.info("[WebrtcP2PRecordingService] downloadFile -- default function"),this.centralizedService&&this.centralizedService.fileSaver&&this.centralizedService.fileSaver.fileDownload(blob,conversationId,messageId,filename,browse)}async uploadFile(){try{const buffer=this.updatedBlob?this.updatedBlob:this.data,file=this.recordFile;if(!1!==this.recording)throw this.logger.error("[WebrtcP2PRecordingService] uploadFile -- Unexpected uploading file when recording not stopped"),new Error("[WebrtcP2PRecordingService] uploadFile -- Recording not stopped pb");if(0===file.size)throw this.logger.error("[WebrtcP2PRecordingService] uploadFile -- Error uploading empty file"),new Error("[WebrtcP2PRecordingService] uploadFile -- Empty file pb");try{const fileDescriptor=await this.fileStorageService.createFileDescriptor(file);return await this.fileServerService.uploadAFileByChunk(fileDescriptor,buffer),this.logger.info("[WebrtcP2PRecordingService] uploadFile success"),void this.cleanRecord()}catch(errorUpload){const errorInfo=await this.errorHelperService.getErrorInfo(errorUpload,"createBackupFile");throw this.logger.error("[WebrtcP2PRecordingService] createBackupFile -- Unexpected error while creating file descriptor/uploading file -- "+errorUpload),errorInfo.error}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"uploadFile");throw this.logger.error("[WebrtcP2PRecordingService] uploadFile -- Unexpected error while uploading file -- "+error),errorInfo.error}}localSaveFile(){const buffer=this.updatedBlob?this.updatedBlob:this.data,file=this.recordFile;!1===this.recording?(this.downloadFile(buffer,null,null,file.name,!0),this.cleanRecord()):this.logger.error("[WebrtcP2PRecordingService] Unexpected file local storage when recording not stopped")}async createBackupFile(){try{const buffer=this.data,file=this.recordFile;if(!1!==this.recording)throw this.logger.error("[WebrtcP2PRecordingService] createBackupFile -- Unexpected backup file when recording not stopped"),new Error("[WebrtcP2PRecordingService] createBackupFile -- Recording not stopped pb");if(0===file.size)throw this.logger.error("[WebrtcP2PRecordingService] createBackupFile -- Error backing-up empty file"),new Error("[WebrtcP2PRecordingService] createBackupFile -- Empty file pb");try{const fileDescriptor=await this.fileStorageService.createFileDescriptor(file);return await this.fileServerService.uploadAFileByChunk(fileDescriptor,buffer),this.logger.info("[WebrtcP2PRecordingService] createBackupFile success"),fileDescriptor}catch(errorUpload){const errorInfo=await this.errorHelperService.getErrorInfo(errorUpload,"createBackupFile");throw this.logger.error("[WebrtcP2PRecordingService] createBackupFile -- Unexpected error while creating file descriptor/uploading file -- "+errorUpload),errorInfo.error}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createBackupFile");throw this.logger.error("[WebrtcP2PRecordingService] createBackupFile -- Unexpected error -- "+error),errorInfo.error}}setOnDataAvailableCallback(callback){null!==this.recorder&&(this.recorder.ondataavailable=callback)}setOnErrorCallback(callback){null!==this.recorder&&(this.recorder.onerror=callback)}setOnPauseCallback(callback){null!==this.recorder&&(this.recorder.onpause=callback)}setOnResumeCallback(callback){null!==this.recorder&&(this.recorder.onresume=callback)}setOnStartCallback(callback){null!==this.recorder&&(this.recorder.onstart=callback)}setOnStopCallback(callback){null!==this.recorder&&(this.recorder.onstop=callback)}initConversationRecordContext(){this.conversationRecordContext={conversationId:"",recorder:!1,pause:!1,actualRecordTime:0,updateTimer:null,recordStopSource:"LOCAL"}}async onDataAvailable(event){if(this.logger.info("[WebrtcP2PRecordingService] onDataAvailable: size = "+event.data.size),event.data.size>0){if(this.chunk=event.data,this.writeStream){this.writeStream.on("finish",()=>{this.logger.info("[WebrtcP2PRecordingService] WriteStream finish event")});const chunkArrayBuffer=await this.chunk.arrayBuffer(),chunkBuffer=Buffer.from(chunkArrayBuffer),result=this.writeStream.write(chunkBuffer);this.writeStream.end(),this.logger.info("[WebrtcP2PRecordingService] write result = "+result)}this.data=new Blob([this.data,this.chunk],{type:this.chunk.type}),this.chunk=null}}async onStop(){this.durationTimer=rxjs_1.interval(1e3).subscribe(async()=>{if(this.logger.info("[WebrtcP2PRecordingService] On stop recording"),this.durationTimer.unsubscribe(),this.durationTimer=null,this.data&&this.data.size>1e7){const message=this.i18n.translate("recordingInProgress");this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}if(this.writeStream)this.durationTimer=rxjs_1.interval(3e3).subscribe(async()=>{this.logger.info("[WebrtcP2PRecordingService] Destroy WriteStream"),this.writeStream.destroy(),this.writeStream=null,this.durationTimer.unsubscribe(),this.durationTimer=null,this.updatedBlob=await this.injectMetadata(this.data),this.onStopCreateFileFromBlob(this.updatedBlob)});else if(navigator.mediaDevices.getUserMedia&&window.mozRTCPeerConnection)this.onStopCreateFileFromBlob(this.data);else if(navigator.mediaDevices.getUserMedia&&window.webkitRTCPeerConnection){this.logger.info("[WebrtcP2PRecordingService] On stop recording for Chrome with size "+this.data.size),this.recordFile={name:this.filename,extension:"mp4",size:this.data.size};try{this.tempUploadedFileDescriptor=await this.createBackupFile(),this.logger.info("[WebrtcP2PRecordingService] backup created"),this.updatedBlob=await this.injectMetadata(this.data),this.onStopCreateFileFromBlob(this.updatedBlob)}catch(_err){this.updatedBlob=await this.injectMetadata(this.data),this.onStopCreateFileFromBlob(this.updatedBlob)}}})}onCreateFileFromBlobForSafari(blob){this.updatedBlob=blob,this.logger.info("[WebrtcP2PRecordingService] onCreateFileFromBlobForSafari -- Size of updatedBlob : "+blob.size),this.filename=this.filename.replace("mp4","wav"),this.recordFile={name:this.filename,extension:"wav",size:blob.size},this.recording=!1,this.recorder=null,this.chunk=null,this.eventService.publish("ON_OPEN_RECORDINGFILESTORAGE_POPUP",this.recordFile,this.recordStopOrigin),this.eventService.publish("ON_WEBRTC_RECORD_SAVED",this.recordFile,blob,this.recordStopOrigin),this.recordStopOrigin="LOCAL"}onStopCreateFileFromBlob(blob){this.logger.info("[WebrtcP2PRecordingService] onStopCreateFileFromBlob -- Size of updatedBlob : "+blob.size),this.recordFile={name:this.filename,extension:"mp4",size:blob.size},this.centralizedService&&this.centralizedService.fileSystem&&this.centralizedService.fileSystem.unlink&&this.centralizedService.fileSystem.unlink(this.fullFileName+".temp"),this.tempUploadedFileDescriptor&&(this.fileStorageService.deleteFileDescriptor(this.tempUploadedFileDescriptor.id),this.tempUploadedFileDescriptor=null),this.recording=!1,this.recorder=null,this.chunk=null,this.eventService.publish("ON_OPEN_RECORDINGFILESTORAGE_POPUP",this.recordFile,this.recordStopOrigin),this.eventService.publish("ON_WEBRTC_RECORD_SAVED",this.recordFile,blob,this.recordStopOrigin),this.recordStopOrigin="LOCAL"}readAsArrayBuffer(blob){return new Promise((resolve,reject)=>{const reader=new FileReader;reader.readAsArrayBuffer(blob),reader.onloadend=()=>{resolve(reader.result)},reader.onerror=()=>{reject()}})}async injectMetadata(blob){this.logger.info("[WebrtcP2PRecordingService] injectMetadata");const type=blob.type,buffer=await this.readAsArrayBuffer(blob);return blob=null,this.data=null,this.injectMetadataFromArrayBuffer(buffer,type)}injectMetadataFromArrayBuffer(arrayBuf,type){this.logger.info("[WebrtcP2PRecordingService] injectMetadataFromArrayBuffer");const decoder=new ts_ebml_1.Decoder,reader=new ts_ebml_1.Reader;reader.logging=!1,reader.drop_default_duration=!1;decoder.decode(arrayBuf).forEach(elm=>{reader.read(elm)}),reader.stop();const refinedMetadataBuf=ts_ebml_1.tools.makeMetadataSeekable(reader.metadatas,reader.duration,reader.cues),body=arrayBuf.slice(reader.metadataSize);return new Blob([refinedMetadataBuf,body],{type:type})}closeAudioContext(){this.audioContext&&(this.audioContext.destination&&this.audioContext.destination.disconnect(),"closed"!==this.audioContext.state&&(this.audioContext.close(),this.audioContext=null))}cleanRecord(){!1!==this.recording?this.logger.error("[WebrtcP2PRecordingService] Unexpected record cleaning while recording not stopped"):(this.updatedBlob=null,this.recordFile=null,this.data=null)}onError(event){this.logger.error("[WebrtcP2PRecordingService] error : "+event.message||!1),this.recording=!1,this.stopConvTimer(),this.eventService.publish("ON_WEBRTC_RECORD_ERROR")}startConvTimer(){this.conversationRecordContext.updateTimer=setInterval(()=>{this.conversationRecordContext.actualRecordTime++},1e3)}stopConvTimer(){null!==this.conversationRecordContext.updateTimer&&(clearTimeout(this.conversationRecordContext.updateTimer),this.conversationRecordContext.updateTimer=null)}initRecordTimer(callAreaRecordContext){callAreaRecordContext.updateTimer=setInterval(()=>{callAreaRecordContext.actualRecordTime++,callAreaRecordContext.displayRecordTime=this.getDurationTime(callAreaRecordContext.actualRecordTime)},1e3)}stopRecordTimer(callAreaRecordContext){null!==callAreaRecordContext.updateTimer&&(clearTimeout(callAreaRecordContext.updateTimer),callAreaRecordContext.updateTimer=null)}getDurationTime(durationTime){if(!durationTime)return"";let tempTime=durationTime;const tempDisplay={};return tempDisplay.hour=Math.trunc(tempTime/3600),tempTime-=3600*tempDisplay.hour,tempDisplay.minute=Math.trunc(tempTime/60),tempTime-=60*tempDisplay.minute,tempDisplay.seconde=tempTime,0===tempDisplay.hour?moment(tempDisplay.minute+":"+tempDisplay.seconde,"mm:ss").format("mm:ss"):moment(tempDisplay.hour+":"+tempDisplay.minute+":"+tempDisplay.seconde,"HH:mm:ss").format("HH:mm:ss")}handleRecordPauseResume(callAreaRecordContext){const recordContext=this.getConversationRecordContext(callAreaRecordContext.conversation.id);callAreaRecordContext.recorder&&recordContext&&(callAreaRecordContext.pauseRecord=recordContext.pause,callAreaRecordContext.pauseRecord?(clearTimeout(callAreaRecordContext.updateTimer),callAreaRecordContext.updateTimer=null):callAreaRecordContext.updateTimer||this.initRecordTimer(callAreaRecordContext))}}exports.WebrtcP2PRecordingService=WebrtcP2PRecordingService}).call(this,__webpack_require__(98).Buffer)},function(module,exports,__webpack_require__){(function(Buffer){!function(exports){var storage,BUFFER=void 0!==Buffer&&Buffer,UINT8ARRAY="undefined"!=typeof Uint8Array&&Uint8Array,ARRAYBUFFER="undefined"!=typeof ArrayBuffer&&ArrayBuffer,ZERO=[0,0,0,0,0,0,0,0],isArray=Array.isArray||function(val){return!!val&&"[object Array]"==Object.prototype.toString.call(val)},BIT32=4294967296;function factory(name,bigendian,unsigned){var posH=bigendian?0:4,posL=bigendian?4:0,pos0=bigendian?0:3,pos1=bigendian?1:2,pos2=bigendian?2:1,pos3=bigendian?3:0,fromPositive=bigendian?fromPositiveBE:fromPositiveLE,fromNegative=bigendian?fromNegativeBE:fromNegativeLE,proto=Int64.prototype,isName="is"+name,_isInt64="_"+isName;return proto.buffer=void 0,proto.offset=0,proto[_isInt64]=!0,proto.toNumber=toNumber,proto.toString=function(radix){var buffer=this.buffer,offset=this.offset,high=readInt32(buffer,offset+posH),low=readInt32(buffer,offset+posL),str="",sign=!unsigned&&2147483648&high;sign&&(high=~high,low=BIT32-low);radix=radix||10;for(;;){var mod=high%radix*BIT32+low;if(high=Math.floor(high/radix),low=Math.floor(mod/radix),str=(mod%radix).toString(radix)+str,!high&&!low)break}sign&&(str="-"+str);return str},proto.toJSON=toNumber,proto.toArray=toArray,BUFFER&&(proto.toBuffer=toBuffer),UINT8ARRAY&&(proto.toArrayBuffer=toArrayBuffer),Int64[isName]=function(b){return!(!b||!b[_isInt64])},exports[name]=Int64,Int64;function Int64(buffer,offset,value,raddix){return this instanceof Int64?function(that,buffer,offset,value,raddix){UINT8ARRAY&&ARRAYBUFFER&&(buffer instanceof ARRAYBUFFER&&(buffer=new UINT8ARRAY(buffer)),value instanceof ARRAYBUFFER&&(value=new UINT8ARRAY(value)));if(!(buffer||offset||value||storage))return void(that.buffer=newArray(ZERO,0));if(!isValidBuffer(buffer,offset)){raddix=offset,value=buffer,offset=0,buffer=new(storage||Array)(8)}if(that.buffer=buffer,that.offset=offset|=0,void 0===value)return;"string"==typeof value?function(buffer,offset,str,raddix){var pos=0,len=str.length,high=0,low=0;"-"===str[0]&&pos++;var sign=pos;for(;pos<len;){var chr=parseInt(str[pos++],raddix);if(!(chr>=0))break;low=low*raddix+chr,high=high*raddix+Math.floor(low/BIT32),low%=BIT32}sign&&(high=~high,low?low=BIT32-low:high++);writeInt32(buffer,offset+posH,high),writeInt32(buffer,offset+posL,low)}(buffer,offset,value,raddix||10):isValidBuffer(value,raddix)?fromArray(buffer,offset,value,raddix):"number"==typeof raddix?(writeInt32(buffer,offset+posH,value),writeInt32(buffer,offset+posL,raddix)):value>0?fromPositive(buffer,offset,value):value<0?fromNegative(buffer,offset,value):fromArray(buffer,offset,ZERO,0)}(this,buffer,offset,value,raddix):new Int64(buffer,offset,value,raddix)}function toNumber(){var buffer=this.buffer,offset=this.offset,high=readInt32(buffer,offset+posH),low=readInt32(buffer,offset+posL);return unsigned||(high|=0),high?high*BIT32+low:low}function writeInt32(buffer,offset,value){buffer[offset+pos3]=255&value,value>>=8,buffer[offset+pos2]=255&value,value>>=8,buffer[offset+pos1]=255&value,value>>=8,buffer[offset+pos0]=255&value}function readInt32(buffer,offset){return 16777216*buffer[offset+pos0]+(buffer[offset+pos1]<<16)+(buffer[offset+pos2]<<8)+buffer[offset+pos3]}}function toArray(raw){var buffer=this.buffer,offset=this.offset;return storage=null,!1!==raw&&0===offset&&8===buffer.length&&isArray(buffer)?buffer:newArray(buffer,offset)}function toBuffer(raw){var buffer=this.buffer,offset=this.offset;if(storage=BUFFER,!1!==raw&&0===offset&&8===buffer.length&&Buffer.isBuffer(buffer))return buffer;var dest=new BUFFER(8);return fromArray(dest,0,buffer,offset),dest}function toArrayBuffer(raw){var buffer=this.buffer,offset=this.offset,arrbuf=buffer.buffer;if(storage=UINT8ARRAY,!1!==raw&&0===offset&&arrbuf instanceof ARRAYBUFFER&&8===arrbuf.byteLength)return arrbuf;var dest=new UINT8ARRAY(8);return fromArray(dest,0,buffer,offset),dest.buffer}function isValidBuffer(buffer,offset){var len=buffer&&buffer.length;return offset|=0,len&&offset+8<=len&&"string"!=typeof buffer[offset]}function fromArray(destbuf,destoff,srcbuf,srcoff){destoff|=0,srcoff|=0;for(var i=0;i<8;i++)destbuf[destoff++]=255&srcbuf[srcoff++]}function newArray(buffer,offset){return Array.prototype.slice.call(buffer,offset,offset+8)}function fromPositiveBE(buffer,offset,value){for(var pos=offset+8;pos>offset;)buffer[--pos]=255&value,value/=256}function fromNegativeBE(buffer,offset,value){var pos=offset+8;for(value++;pos>offset;)buffer[--pos]=255&-value^255,value/=256}function fromPositiveLE(buffer,offset,value){for(var end=offset+8;offset<end;)buffer[offset++]=255&value,value/=256}function fromNegativeLE(buffer,offset,value){var end=offset+8;for(value++;offset<end;)buffer[offset++]=255&-value^255,value/=256}factory("Uint64BE",!0,!0),factory("Int64BE",!0,!1),factory("Uint64LE",!1,!0),factory("Int64LE",!1,!1)}("string"!=typeof exports.nodeName?exports:this||{})}).call(this,__webpack_require__(98).Buffer)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tools=__webpack_require__(81),tools_1=__webpack_require__(81),byEbmlID=__webpack_require__(328).byEbmlID,EBMLEncoder=function(){function EBMLEncoder(){this._schema=byEbmlID,this._buffers=[],this._stack=[]}return EBMLEncoder.prototype.encode=function(elms){var _this=this;return tools.concat(elms.reduce((function(lst,elm){return lst.concat(_this.encodeChunk(elm))}),[])).buffer},EBMLEncoder.prototype.encodeChunk=function(elm){return"m"===elm.type?elm.isEnd?this.endTag(elm):this.startTag(elm):this.writeTag(elm),this.flush()},EBMLEncoder.prototype.flush=function(){var ret=this._buffers;return this._buffers=[],ret},EBMLEncoder.prototype.getSchemaInfo=function(tagName){for(var tagNums=Object.keys(this._schema).map(Number),i=0;i<tagNums.length;i++){var tagNum=tagNums[i];if(this._schema[tagNum].name===tagName)return new tools_1.Buffer(tagNum.toString(16),"hex")}return null},EBMLEncoder.prototype.writeTag=function(elm){var tagName=elm.name,tagId=this.getSchemaInfo(tagName),tagData=elm.data;if(null==tagId)throw new Error("No schema entry found for "+tagName);var data=tools.encodeTag(tagId,tagData);this._stack.length>0?this._stack[this._stack.length-1].children.push({tagId:tagId,elm:elm,children:[],data:data}):this._buffers=this._buffers.concat(data)},EBMLEncoder.prototype.startTag=function(elm){var tagName=elm.name,tagId=this.getSchemaInfo(tagName);if(null==tagId)throw new Error("No schema entry found for "+tagName);if(elm.unknownSize){var data=tools.encodeTag(tagId,new tools_1.Buffer(0),elm.unknownSize);this._buffers=this._buffers.concat(data)}else{var tag={tagId:tagId,elm:elm,children:[],data:null};this._stack.length>0&&this._stack[this._stack.length-1].children.push(tag),this._stack.push(tag)}},EBMLEncoder.prototype.endTag=function(elm){elm.name;var tag=this._stack.pop();if(null==tag)throw new Error("EBML structure is broken");if(tag.elm.name!==elm.name)throw new Error("EBML structure is broken");var childTagDataBuffers=tag.children.reduce((function(lst,child){if(null===child.data)throw new Error("EBML structure is broken");return lst.concat(child.data)}),[]),childTagDataBuffer=tools.concat(childTagDataBuffers);"m"===tag.elm.type?tag.data=tools.encodeTag(tag.tagId,childTagDataBuffer,tag.elm.unknownSize):tag.data=tools.encodeTag(tag.tagId,childTagDataBuffer),this._stack.length<1&&(this._buffers=this._buffers.concat(tag.data))},EBMLEncoder}();exports.default=EBMLEncoder},function(module,exports,__webpack_require__){"use strict";var byEbmlID={128:{name:"ChapterDisplay",level:4,type:"m",multiple:!0,minver:1,webm:!0,description:"Contains all possible strings to use for the chapter display."},131:{name:"TrackType",level:3,type:"u",mandatory:!0,minver:1,range:"1-254",description:"A set of track types coded on 8 bits (1: video, 2: audio, 3: complex, 0x10: logo, 0x11: subtitle, 0x12: buttons, 0x20: control)."},133:{name:"ChapString",cppname:"ChapterString",level:5,type:"8",mandatory:!0,minver:1,webm:!0,description:"Contains the string to use as the chapter atom."},134:{name:"CodecID",level:3,type:"s",mandatory:!0,minver:1,description:"An ID corresponding to the codec, see the codec page for more info."},136:{name:"FlagDefault",cppname:"TrackFlagDefault",level:3,type:"u",mandatory:!0,minver:1,default:1,range:"0-1",description:"Set if that track (audio, video or subs) SHOULD be active if no language found matches the user preference. (1 bit)"},137:{name:"ChapterTrackNumber",level:5,type:"u",mandatory:!0,multiple:!0,minver:1,webm:!1,range:"not 0",description:"UID of the Track to apply this chapter too. In the absense of a control track, choosing this chapter will select the listed Tracks and deselect unlisted tracks. Absense of this element indicates that the Chapter should be applied to any currently used Tracks."},145:{name:"ChapterTimeStart",level:4,type:"u",mandatory:!0,minver:1,webm:!0,description:"Timestamp of the start of Chapter (not scaled)."},146:{name:"ChapterTimeEnd",level:4,type:"u",minver:1,webm:!1,description:"Timestamp of the end of Chapter (timestamp excluded, not scaled)."},150:{name:"CueRefTime",level:5,type:"u",mandatory:!0,minver:2,webm:!1,description:"Timestamp of the referenced Block."},151:{name:"CueRefCluster",level:5,type:"u",mandatory:!0,webm:!1,description:"The Position of the Cluster containing the referenced Block."},152:{name:"ChapterFlagHidden",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If a chapter is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"},16980:{name:"ContentCompAlgo",level:6,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The compression algorithm used. Algorithms that have been specified so far are: 0 - zlib,   3 - Header Stripping"},16981:{name:"ContentCompSettings",level:6,type:"b",minver:1,webm:!1,description:"Settings that might be needed by the decompressor. For Header Stripping (ContentCompAlgo=3), the bytes that were removed from the beggining of each frames of the track."},17026:{name:"DocType",level:1,type:"s",mandatory:!0,default:"matroska",minver:1,description:"A string that describes the type of document that follows this EBML header. 'matroska' in our case or 'webm' for webm files."},17029:{name:"DocTypeReadVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The minimum DocType version an interpreter has to support to read this file."},17030:{name:"EBMLVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The version of EBML parser used to create the file."},17031:{name:"DocTypeVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The version of DocType interpreter used to create the file."},17476:{name:"SegmentFamily",level:2,type:"b",multiple:!0,minver:1,webm:!1,bytesize:16,description:"A randomly generated unique ID that all segments related to each other must use (128 bits)."},17505:{name:"DateUTC",level:2,type:"d",minver:1,description:"Date of the origin of timestamp (value 0), i.e. production date."},17540:{name:"TagDefault",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"0-1",description:"Indication to know if this is the default/original language to use for the given tag. (1 bit)"},17541:{name:"TagBinary",level:4,type:"b",minver:1,webm:!1,description:"The values of the Tag if it is binary. Note that this cannot be used in the same SimpleTag as TagString."},17543:{name:"TagString",level:4,type:"8",minver:1,webm:!1,description:"The value of the Element."},17545:{name:"Duration",level:2,type:"f",minver:1,range:"> 0",description:"Duration of the segment (based on TimecodeScale)."},17816:{name:"ChapterFlagEnabled",level:4,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"0-1",description:"Specify wether the chapter is enabled. It can be enabled/disabled by a Control Track. When disabled, the movie should skip all the content between the TimeStart and TimeEnd of this chapter (see flag notes). (1 bit)"},18016:{name:"FileMimeType",level:3,type:"s",mandatory:!0,minver:1,webm:!1,description:"MIME type of the file."},18017:{name:"FileUsedStartTime",level:3,type:"u",divx:!0,description:"DivX font extension"},18018:{name:"FileUsedEndTime",level:3,type:"u",divx:!0,description:"DivX font extension"},18037:{name:"FileReferral",level:3,type:"b",webm:!1,description:"A binary value that a track/codec can refer to when the attachment is needed."},20529:{name:"ContentEncodingOrder",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"Tells when this modification was used during encoding/muxing starting with 0 and counting upwards. The decoder/demuxer has to start with the highest order number it finds and work its way down. This value has to be unique over all ContentEncodingOrder elements in the segment."},20530:{name:"ContentEncodingScope",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"not 0",description:"A bit field that describes which elements have been modified in this way. Values (big endian) can be OR'ed. Possible values: 1 - all frame contents, 2 - the track's private data, 4 - the next ContentEncoding (next ContentEncodingOrder. Either the data inside ContentCompression and/or ContentEncryption)"},20531:{name:"ContentEncodingType",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"A value describing what kind of transformation has been done. Possible values: 0 - compression, 1 - encryption"},20532:{name:"ContentCompression",level:5,type:"m",minver:1,webm:!1,description:"Settings describing the compression used. Must be present if the value of ContentEncodingType is 0 and absent otherwise. Each block must be decompressable even if no previous block is available in order not to prevent seeking."},20533:{name:"ContentEncryption",level:5,type:"m",minver:1,webm:!1,description:"Settings describing the encryption used. Must be present if the value of ContentEncodingType is 1 and absent otherwise."},21368:{name:"CueBlockNumber",level:4,type:"u",minver:1,default:1,range:"not 0",description:"Number of the Block in the specified Cluster."},22100:{name:"ChapterStringUID",level:4,type:"8",mandatory:!1,minver:3,webm:!0,description:"A unique string ID to identify the Chapter. Use for WebVTT cue identifier storage."},22337:{name:"WritingApp",level:2,type:"8",mandatory:!0,minver:1,description:'Writing application ("mkvmerge-0.3.3").'},22612:{name:"SilentTracks",cppname:"ClusterSilentTracks",level:2,type:"m",minver:1,webm:!1,description:"The list of tracks that are not used in that part of the stream. It is useful when using overlay tracks on seeking. Then you should decide what track to use."},25152:{name:"ContentEncoding",level:4,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Settings for one content encoding like compression or encryption."},25188:{name:"BitDepth",cppname:"AudioBitDepth",level:4,type:"u",minver:1,range:"not 0",description:"Bits per sample, mostly used for PCM."},25906:{name:"SignedElement",level:3,type:"b",multiple:!0,webm:!1,description:"An element ID whose data will be used to compute the signature."},26148:{name:"TrackTranslate",level:3,type:"m",multiple:!0,minver:1,webm:!1,description:"The track identification for the given Chapter Codec."},26897:{name:"ChapProcessCommand",cppname:"ChapterProcessCommand",level:5,type:"m",multiple:!0,minver:1,webm:!1,description:"Contains all the commands associated to the Atom."},26914:{name:"ChapProcessTime",cppname:"ChapterProcessTime",level:6,type:"u",mandatory:!0,minver:1,webm:!1,description:"Defines when the process command should be handled (0: during the whole chapter, 1: before starting playback, 2: after playback of the chapter)."},26916:{name:"ChapterTranslate",level:2,type:"m",multiple:!0,minver:1,webm:!1,description:"A tuple of corresponding ID used by chapter codecs to represent this segment."},26931:{name:"ChapProcessData",cppname:"ChapterProcessData",level:6,type:"b",mandatory:!0,minver:1,webm:!1,description:"Contains the command information. The data should be interpreted depending on the ChapProcessCodecID value. For ChapProcessCodecID = 1, the data correspond to the binary DVD cell pre/post commands."},26948:{name:"ChapProcess",cppname:"ChapterProcess",level:4,type:"m",multiple:!0,minver:1,webm:!1,description:"Contains all the commands associated to the Atom."},26965:{name:"ChapProcessCodecID",cppname:"ChapterProcessCodecID",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"Contains the type of the codec used for the processing. A value of 0 means native Matroska processing (to be defined), a value of 1 means the DVD command set is used. More codec IDs can be added later."},29555:{name:"Tag",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Element containing elements specific to Tracks/Chapters."},29572:{name:"SegmentFilename",level:2,type:"8",minver:1,webm:!1,description:"A filename corresponding to this segment."},29766:{name:"AttachmentLink",cppname:"TrackAttachmentLink",level:3,type:"u",minver:1,webm:!1,range:"not 0",description:"The UID of an attachment that is used by this codec."},2459272:{name:"CodecName",level:3,type:"8",minver:1,description:"A human-readable string specifying the codec."},408125543:{name:"Segment",level:"0",type:"m",mandatory:!0,multiple:!0,minver:1,description:"This element contains all other top-level (level 1) elements. Typically a Matroska file is composed of 1 segment."},17530:{name:"TagLanguage",level:4,type:"s",mandatory:!0,minver:1,webm:!1,default:"und",description:"Specifies the language of the tag specified, in the Matroska languages form."},17827:{name:"TagName",level:4,type:"8",mandatory:!0,minver:1,webm:!1,description:"The name of the Tag that is going to be stored."},26568:{name:"SimpleTag",cppname:"TagSimple",level:3,recursive:"1",type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Contains general information about the target."},25542:{name:"TagAttachmentUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Attachment(s) the tags belong to. If the value is 0 at this level, the tags apply to all the attachments in the Segment."},25540:{name:"TagChapterUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Chapter(s) the tags belong to. If the value is 0 at this level, the tags apply to all chapters in the Segment."},25545:{name:"TagEditionUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the EditionEntry(s) the tags belong to. If the value is 0 at this level, the tags apply to all editions in the Segment."},25541:{name:"TagTrackUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,default:0,description:"A unique ID to identify the Track(s) the tags belong to. If the value is 0 at this level, the tags apply to all tracks in the Segment."},25546:{name:"TargetType",cppname:"TagTargetType",level:4,type:"s",minver:1,webm:!1,strong:"informational",description:'An  string that can be used to display the logical level of the target like "ALBUM", "TRACK", "MOVIE", "CHAPTER", etc (see TargetType).'},26826:{name:"TargetTypeValue",cppname:"TagTargetTypeValue",level:4,type:"u",minver:1,webm:!1,default:50,description:"A number to indicate the logical level of the target (see TargetType)."},25536:{name:"Targets",cppname:"TagTargets",level:3,type:"m",mandatory:!0,minver:1,webm:!1,description:"Contain all UIDs where the specified meta data apply. It is empty to describe everything in the segment."},307544935:{name:"Tags",level:1,type:"m",multiple:!0,minver:1,webm:!1,description:"Element containing elements specific to Tracks/Chapters. A list of valid tags can be found here."},17677:{name:"ChapProcessPrivate",cppname:"ChapterProcessPrivate",level:5,type:"b",minver:1,webm:!1,description:'Some optional data attached to the ChapProcessCodecID information. For ChapProcessCodecID = 1, it is the "DVD level" equivalent.'},17278:{name:"ChapCountry",cppname:"ChapterCountry",level:5,type:"s",multiple:!0,minver:1,webm:!1,description:"The countries corresponding to the string, same 2 octets as in Internet domains."},17276:{name:"ChapLanguage",cppname:"ChapterLanguage",level:5,type:"s",mandatory:!0,multiple:!0,minver:1,webm:!0,default:"eng",description:"The languages corresponding to the string, in the bibliographic ISO-639-2 form."},143:{name:"ChapterTrack",level:4,type:"m",minver:1,webm:!1,description:"List of tracks on which the chapter applies. If this element is not present, all tracks apply"},25539:{name:"ChapterPhysicalEquiv",level:4,type:"u",minver:1,webm:!1,description:'Specify the physical equivalent of this ChapterAtom like "DVD" (60) or "SIDE" (50), see complete list of values.'},28348:{name:"ChapterSegmentEditionUID",level:4,type:"u",minver:1,webm:!1,range:"not 0",description:"The EditionUID to play from the segment linked in ChapterSegmentUID."},28263:{name:"ChapterSegmentUID",level:4,type:"b",minver:1,webm:!1,range:">0",bytesize:16,description:"A segment to play in place of this chapter. Edition ChapterSegmentEditionUID should be used for this segment, otherwise no edition is used."},29636:{name:"ChapterUID",level:4,type:"u",mandatory:!0,minver:1,webm:!0,range:"not 0",description:"A unique ID to identify the Chapter."},182:{name:"ChapterAtom",level:3,recursive:"1",type:"m",mandatory:!0,multiple:!0,minver:1,webm:!0,description:"Contains the atom information to use as the chapter atom (apply to all tracks)."},17885:{name:"EditionFlagOrdered",level:3,type:"u",minver:1,webm:!1,default:0,range:"0-1",description:"Specify if the chapters can be defined multiple times and the order to play them is enforced. (1 bit)"},17883:{name:"EditionFlagDefault",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If a flag is set (1) the edition should be used as the default one. (1 bit)"},17853:{name:"EditionFlagHidden",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,range:"0-1",description:"If an edition is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"},17852:{name:"EditionUID",level:3,type:"u",minver:1,webm:!1,range:"not 0",description:"A unique ID to identify the edition. It's useful for tagging an edition."},17849:{name:"EditionEntry",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!0,description:"Contains all information about a segment edition."},272869232:{name:"Chapters",level:1,type:"m",minver:1,webm:!0,description:"A system to define basic menus and partition data. For more detailed information, look at the Chapters Explanation."},18094:{name:"FileUID",level:3,type:"u",mandatory:!0,minver:1,webm:!1,range:"not 0",description:"Unique ID representing the file, as random as possible."},18012:{name:"FileData",level:3,type:"b",mandatory:!0,minver:1,webm:!1,description:"The data of the file."},18030:{name:"FileName",level:3,type:"8",mandatory:!0,minver:1,webm:!1,description:"Filename of the attached file."},18046:{name:"FileDescription",level:3,type:"8",minver:1,webm:!1,description:"A human-friendly name for the attached file."},24999:{name:"AttachedFile",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"An attached file."},423732329:{name:"Attachments",level:1,type:"m",minver:1,webm:!1,description:"Contain attached files."},235:{name:"CueRefCodecState",level:5,type:"u",webm:!1,default:0,description:"The position of the Codec State corresponding to this referenced element. 0 means that the data is taken from the initial Track Entry."},21343:{name:"CueRefNumber",level:5,type:"u",webm:!1,default:1,range:"not 0",description:"Number of the referenced Block of Track X in the specified Cluster."},219:{name:"CueReference",level:4,type:"m",multiple:!0,minver:2,webm:!1,description:"The Clusters containing the required referenced Blocks."},234:{name:"CueCodecState",level:4,type:"u",minver:2,webm:!1,default:0,description:"The position of the Codec State corresponding to this Cue element. 0 means that the data is taken from the initial Track Entry."},178:{name:"CueDuration",level:4,type:"u",mandatory:!1,minver:4,webm:!1,description:"The duration of the block according to the segment time base. If missing the track's DefaultDuration does not apply and no duration information is available in terms of the cues."},240:{name:"CueRelativePosition",level:4,type:"u",mandatory:!1,minver:4,webm:!1,description:"The relative position of the referenced block inside the cluster with 0 being the first possible position for an element inside that cluster.",position:"clusterRelative"},241:{name:"CueClusterPosition",level:4,type:"u",mandatory:!0,minver:1,description:"The position of the Cluster containing the required Block.",position:"segment"},247:{name:"CueTrack",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"The track for which a position is given."},183:{name:"CueTrackPositions",level:3,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contain positions for different tracks corresponding to the timestamp."},179:{name:"CueTime",level:3,type:"u",mandatory:!0,minver:1,description:"Absolute timestamp according to the segment time base."},187:{name:"CuePoint",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains all information relative to a seek point in the segment."},475249515:{name:"Cues",level:1,type:"m",minver:1,description:'A top-level element to speed seeking access. All entries are local to the segment. Should be mandatory for non "live" streams.'},18406:{name:"ContentSigHashAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The hash algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values: 1 - SHA1-160 2 - MD5"},18405:{name:"ContentSigAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values: 1 - RSA"},18404:{name:"ContentSigKeyID",level:6,type:"b",minver:1,webm:!1,description:"This is the ID of the private key the data was signed with."},18403:{name:"ContentSignature",level:6,type:"b",minver:1,webm:!1,description:"A cryptographic signature of the contents."},18402:{name:"ContentEncKeyID",level:6,type:"b",minver:1,webm:!1,description:"For public key algorithms this is the ID of the public key the the data was encrypted with."},18401:{name:"ContentEncAlgo",level:6,type:"u",minver:1,webm:!1,default:0,description:"The encryption algorithm used. The value '0' means that the contents have not been encrypted but only signed. Predefined values: 1 - DES, 2 - 3DES, 3 - Twofish, 4 - Blowfish, 5 - AES"},28032:{name:"ContentEncodings",level:3,type:"m",minver:1,webm:!1,description:"Settings for several content encoding mechanisms like compression or encryption."},196:{name:"TrickMasterTrackSegmentUID",level:3,type:"b",divx:!0,bytesize:16,description:"DivX trick track extenstions"},199:{name:"TrickMasterTrackUID",level:3,type:"u",divx:!0,description:"DivX trick track extenstions"},198:{name:"TrickTrackFlag",level:3,type:"u",divx:!0,default:0,description:"DivX trick track extenstions"},193:{name:"TrickTrackSegmentUID",level:3,type:"b",divx:!0,bytesize:16,description:"DivX trick track extenstions"},192:{name:"TrickTrackUID",level:3,type:"u",divx:!0,description:"DivX trick track extenstions"},237:{name:"TrackJoinUID",level:5,type:"u",mandatory:!0,multiple:!0,minver:3,webm:!1,range:"not 0",description:"The trackUID number of a track whose blocks are used to create this virtual track."},233:{name:"TrackJoinBlocks",level:4,type:"m",minver:3,webm:!1,description:"Contains the list of all tracks whose Blocks need to be combined to create this virtual track"},230:{name:"TrackPlaneType",level:6,type:"u",mandatory:!0,minver:3,webm:!1,description:"The kind of plane this track corresponds to (0: left eye, 1: right eye, 2: background)."},229:{name:"TrackPlaneUID",level:6,type:"u",mandatory:!0,minver:3,webm:!1,range:"not 0",description:"The trackUID number of the track representing the plane."},228:{name:"TrackPlane",level:5,type:"m",mandatory:!0,multiple:!0,minver:3,webm:!1,description:"Contains a video plane track that need to be combined to create this 3D track"},227:{name:"TrackCombinePlanes",level:4,type:"m",minver:3,webm:!1,description:"Contains the list of all video plane tracks that need to be combined to create this 3D track"},226:{name:"TrackOperation",level:3,type:"m",minver:3,webm:!1,description:"Operation that needs to be applied on tracks to create this virtual track. For more details look at the Specification Notes on the subject."},32123:{name:"ChannelPositions",cppname:"AudioPosition",level:4,type:"b",webm:!1,description:"Table of horizontal angles for each successive channel, see appendix."},159:{name:"Channels",cppname:"AudioChannels",level:4,type:"u",mandatory:!0,minver:1,default:1,range:"not 0",description:"Numbers of channels in the track."},30901:{name:"OutputSamplingFrequency",cppname:"AudioOutputSamplingFreq",level:4,type:"f",minver:1,default:"Sampling Frequency",range:"> 0",description:"Real output sampling frequency in Hz (used for SBR techniques)."},181:{name:"SamplingFrequency",cppname:"AudioSamplingFreq",level:4,type:"f",mandatory:!0,minver:1,default:8e3,range:"> 0",description:"Sampling frequency in Hz."},225:{name:"Audio",cppname:"TrackAudio",level:3,type:"m",minver:1,description:"Audio settings."},2327523:{name:"FrameRate",cppname:"VideoFrameRate",level:4,type:"f",range:"> 0",strong:"Informational",description:"Number of frames per second.  only."},3126563:{name:"GammaValue",cppname:"VideoGamma",level:4,type:"f",webm:!1,range:"> 0",description:"Gamma Value."},3061028:{name:"ColourSpace",cppname:"VideoColourSpace",level:4,type:"b",minver:1,webm:!1,bytesize:4,description:"Same value as in AVI (32 bits)."},21683:{name:"AspectRatioType",cppname:"VideoAspectRatio",level:4,type:"u",minver:1,default:0,description:"Specify the possible modifications to the aspect ratio (0: free resizing, 1: keep aspect ratio, 2: fixed)."},21682:{name:"DisplayUnit",cppname:"VideoDisplayUnit",level:4,type:"u",minver:1,default:0,description:"How DisplayWidth & DisplayHeight should be interpreted (0: pixels, 1: centimeters, 2: inches, 3: Display Aspect Ratio)."},21690:{name:"DisplayHeight",cppname:"VideoDisplayHeight",level:4,type:"u",minver:1,default:"PixelHeight",range:"not 0",description:"Height of the video frames to display. The default value is only valid when DisplayUnit is 0."},21680:{name:"DisplayWidth",cppname:"VideoDisplayWidth",level:4,type:"u",minver:1,default:"PixelWidth",range:"not 0",description:"Width of the video frames to display. The default value is only valid when DisplayUnit is 0."},21725:{name:"PixelCropRight",cppname:"VideoPixelCropRight",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove on the right of the image."},21708:{name:"PixelCropLeft",cppname:"VideoPixelCropLeft",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove on the left of the image."},21691:{name:"PixelCropTop",cppname:"VideoPixelCropTop",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove at the top of the image."},21674:{name:"PixelCropBottom",cppname:"VideoPixelCropBottom",level:4,type:"u",minver:1,default:0,description:"The number of video pixels to remove at the bottom of the image (for HDTV content)."},186:{name:"PixelHeight",cppname:"VideoPixelHeight",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"Height of the encoded video frames in pixels."},176:{name:"PixelWidth",cppname:"VideoPixelWidth",level:4,type:"u",mandatory:!0,minver:1,range:"not 0",description:"Width of the encoded video frames in pixels."},21433:{name:"OldStereoMode",level:4,type:"u",maxver:"0",webm:!1,divx:!1,description:"DEPRECATED, DO NOT USE. Bogus StereoMode value used in old versions of libmatroska. (0: mono, 1: right eye, 2: left eye, 3: both eyes)."},21440:{name:"AlphaMode",cppname:"VideoAlphaMode",level:4,type:"u",minver:3,webm:!0,default:0,description:"Alpha Video Mode. Presence of this element indicates that the BlockAdditional element could contain Alpha data."},21432:{name:"StereoMode",cppname:"VideoStereoMode",level:4,type:"u",minver:3,webm:!0,default:0,description:"Stereo-3D video mode (0: mono, 1: side by side (left eye is first), 2: top-bottom (right eye is first), 3: top-bottom (left eye is first), 4: checkboard (right is first), 5: checkboard (left is first), 6: row interleaved (right is first), 7: row interleaved (left is first), 8: column interleaved (right is first), 9: column interleaved (left is first), 10: anaglyph (cyan/red), 11: side by side (right eye is first), 12: anaglyph (green/magenta), 13 both eyes laced in one Block (left eye is first), 14 both eyes laced in one Block (right eye is first)) . There are some more details on 3D support in the Specification Notes."},154:{name:"FlagInterlaced",cppname:"VideoFlagInterlaced",level:4,type:"u",mandatory:!0,minver:2,webm:!0,default:0,range:"0-1",description:"Set if the video is interlaced. (1 bit)"},224:{name:"Video",cppname:"TrackVideo",level:3,type:"m",minver:1,description:"Video settings."},26277:{name:"TrackTranslateTrackID",level:4,type:"b",mandatory:!0,minver:1,webm:!1,description:"The binary value used to represent this track in the chapter codec data. The format depends on the ChapProcessCodecID used."},26303:{name:"TrackTranslateCodec",level:4,type:"u",mandatory:!0,minver:1,webm:!1,description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."},26364:{name:"TrackTranslateEditionUID",level:4,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify an edition UID on which this translation applies. When not specified, it means for all editions found in the segment."},22203:{name:"SeekPreRoll",level:3,type:"u",mandatory:!0,multiple:!1,default:0,minver:4,webm:!0,description:"After a discontinuity, SeekPreRoll is the duration in nanoseconds of the data the decoder must decode before the decoded data is valid."},22186:{name:"CodecDelay",level:3,type:"u",multiple:!1,default:0,minver:4,webm:!0,description:"CodecDelay is The codec-built-in delay in nanoseconds. This value must be subtracted from each block timestamp in order to get the actual timestamp. The value should be small so the muxing of tracks with the same actual timestamp are in the same Cluster."},28587:{name:"TrackOverlay",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify that this track is an overlay track for the Track specified (in the u-integer). That means when this track has a gap (see SilentTracks) the overlay track should be used instead. The order of multiple TrackOverlay matters, the first one is the one that should be used. If not found it should be the second, etc."},170:{name:"CodecDecodeAll",level:3,type:"u",mandatory:!0,minver:2,webm:!1,default:1,range:"0-1",description:"The codec can decode potentially damaged data (1 bit)."},2536e3:{name:"CodecDownloadURL",level:3,type:"s",multiple:!0,webm:!1,description:"A URL to download about the codec used."},3883072:{name:"CodecInfoURL",level:3,type:"s",multiple:!0,webm:!1,description:"A URL to find information about the codec used."},3839639:{name:"CodecSettings",level:3,type:"8",webm:!1,description:"A string describing the encoding setting used."},25506:{name:"CodecPrivate",level:3,type:"b",minver:1,description:"Private data only known to the codec."},2274716:{name:"Language",cppname:"TrackLanguage",level:3,type:"s",minver:1,default:"eng",description:"Specifies the language of the track in the Matroska languages form."},21358:{name:"Name",cppname:"TrackName",level:3,type:"8",minver:1,description:"A human-readable track name."},21998:{name:"MaxBlockAdditionID",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The maximum value of BlockAdditions for this track."},21375:{name:"TrackOffset",level:3,type:"i",webm:!1,default:0,description:"A value to add to the Block's Timestamp. This can be used to adjust the playback offset of a track."},2306383:{name:"TrackTimecodeScale",level:3,type:"f",mandatory:!0,minver:1,maxver:"3",webm:!1,default:1,range:"> 0",description:"DEPRECATED, DO NOT USE. The scale to apply on this track to work at normal speed in relation with other tracks (mostly used to adjust video speed when the audio length differs)."},2313850:{name:"DefaultDecodedFieldDuration",cppname:"TrackDefaultDecodedFieldDuration",level:3,type:"u",minver:4,range:"not 0",description:"The period in nanoseconds (not scaled by TimcodeScale)\nbetween two successive fields at the output of the decoding process (see the notes)"},2352003:{name:"DefaultDuration",cppname:"TrackDefaultDuration",level:3,type:"u",minver:1,range:"not 0",description:"Number of nanoseconds (not scaled via TimecodeScale) per frame ('frame' in the Matroska sense -- one element put into a (Simple)Block)."},28152:{name:"MaxCache",cppname:"TrackMaxCache",level:3,type:"u",minver:1,webm:!1,description:"The maximum cache size required to store referenced frames in and the current frame. 0 means no cache is needed."},28135:{name:"MinCache",cppname:"TrackMinCache",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"The minimum number of frames a player should be able to cache during playback. If set to 0, the reference pseudo-cache system is not used."},156:{name:"FlagLacing",cppname:"TrackFlagLacing",level:3,type:"u",mandatory:!0,minver:1,default:1,range:"0-1",description:"Set if the track may contain blocks using lacing. (1 bit)"},21930:{name:"FlagForced",cppname:"TrackFlagForced",level:3,type:"u",mandatory:!0,minver:1,default:0,range:"0-1",description:"Set if that track MUST be active during playback. There can be many forced track for a kind (audio, video or subs), the player should select the one which language matches the user preference or the default + forced track. Overlay MAY happen between a forced and non-forced track of the same kind. (1 bit)"},185:{name:"FlagEnabled",cppname:"TrackFlagEnabled",level:3,type:"u",mandatory:!0,minver:2,webm:!0,default:1,range:"0-1",description:"Set if the track is usable. (1 bit)"},29637:{name:"TrackUID",level:3,type:"u",mandatory:!0,minver:1,range:"not 0",description:"A unique ID to identify the Track. This should be kept the same when making a direct stream copy of the Track to another file."},215:{name:"TrackNumber",level:3,type:"u",mandatory:!0,minver:1,range:"not 0",description:"The track number as used in the Block Header (using more than 127 tracks is not encouraged, though the design allows an unlimited number)."},174:{name:"TrackEntry",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Describes a track with all elements."},374648427:{name:"Tracks",level:1,type:"m",multiple:!0,minver:1,description:"A top-level block of information with many tracks described."},175:{name:"EncryptedBlock",level:2,type:"b",multiple:!0,webm:!1,description:"Similar to EncryptedBlock Structure)"},202:{name:"ReferenceTimeCode",level:4,type:"u",multiple:!1,mandatory:!0,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},201:{name:"ReferenceOffset",level:4,type:"u",multiple:!1,mandatory:!0,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},200:{name:"ReferenceFrame",level:3,type:"m",multiple:!1,minver:0,webm:!1,divx:!0,description:"DivX trick track extenstions"},207:{name:"SliceDuration",level:5,type:"u",default:0,description:"The (scaled) duration to apply to the element."},206:{name:"Delay",cppname:"SliceDelay",level:5,type:"u",default:0,description:"The (scaled) delay to apply to the element."},203:{name:"BlockAdditionID",cppname:"SliceBlockAddID",level:5,type:"u",default:0,description:"The ID of the BlockAdditional element (0 is the main Block)."},205:{name:"FrameNumber",cppname:"SliceFrameNumber",level:5,type:"u",default:0,description:"The number of the frame to generate from this lace with this delay (allow you to generate many frames from the same Block/Frame)."},204:{name:"LaceNumber",cppname:"SliceLaceNumber",level:5,type:"u",minver:1,default:0,divx:!1,description:"The reverse number of the frame in the lace (0 is the last frame, 1 is the next to last, etc). While there are a few files in the wild with this element, it is no longer in use and has been deprecated. Being able to interpret this element is not required for playback."},232:{name:"TimeSlice",level:4,type:"m",multiple:!0,minver:1,divx:!1,description:"Contains extra time information about the data contained in the Block. While there are a few files in the wild with this element, it is no longer in use and has been deprecated. Being able to interpret this element is not required for playback."},142:{name:"Slices",level:3,type:"m",minver:1,divx:!1,description:"Contains slices description."},30114:{name:"DiscardPadding",level:3,type:"i",minver:4,webm:!0,description:"Duration in nanoseconds of the silent data added to the Block (padding at the end of the Block for positive value, at the beginning of the Block for negative value). The duration of DiscardPadding is not calculated in the duration of the TrackEntry and should be discarded during playback."},164:{name:"CodecState",level:3,type:"b",minver:2,webm:!1,description:"The new codec state to use. Data interpretation is private to the codec. This information should always be referenced by a seek entry."},253:{name:"ReferenceVirtual",level:3,type:"i",webm:!1,description:"Relative position of the data that should be in position of the virtual block."},251:{name:"ReferenceBlock",level:3,type:"i",multiple:!0,minver:1,description:"Timestamp of another frame used as a reference (ie: B or P frame). The timestamp is relative to the block it's attached to."},250:{name:"ReferencePriority",cppname:"FlagReferenced",level:3,type:"u",mandatory:!0,minver:1,webm:!1,default:0,description:"This frame is referenced and has the specified cache priority. In cache only a frame of the same or higher priority can replace this frame. A value of 0 means the frame is not referenced."},155:{name:"BlockDuration",level:3,type:"u",minver:1,default:"TrackDuration",description:'The duration of the Block (based on TimecodeScale). This element is mandatory when DefaultDuration is set for the track (but can be omitted as other default values). When not written and with no DefaultDuration, the value is assumed to be the difference between the timestamp of this Block and the timestamp of the next Block in "display" order (not coding order). This element can be useful at the end of a Track (as there is not other Block available), or when there is a break in a track like for subtitle tracks. When set to 0 that means the frame is not a keyframe.'},165:{name:"BlockAdditional",level:5,type:"b",mandatory:!0,minver:1,webm:!1,description:"Interpreted by the codec as it wishes (using the BlockAddID)."},238:{name:"BlockAddID",level:5,type:"u",mandatory:!0,minver:1,webm:!1,default:1,range:"not 0",description:"An ID to identify the BlockAdditional level."},166:{name:"BlockMore",level:4,type:"m",mandatory:!0,multiple:!0,minver:1,webm:!1,description:"Contain the BlockAdditional and some parameters."},30113:{name:"BlockAdditions",level:3,type:"m",minver:1,webm:!1,description:"Contain additional blocks to complete the main one. An EBML parser that has no knowledge of the Block structure could still see and use/skip these data."},162:{name:"BlockVirtual",level:3,type:"b",webm:!1,description:"A Block with no data. It must be stored in the stream at the place the real Block should be in display order. (see Block Virtual)"},161:{name:"Block",level:3,type:"b",mandatory:!0,minver:1,description:"Block containing the actual data to be rendered and a timestamp relative to the Cluster Timecode. (see Block Structure)"},160:{name:"BlockGroup",level:2,type:"m",multiple:!0,minver:1,description:"Basic container of information containing a single Block or BlockVirtual, and information specific to that Block/VirtualBlock."},163:{name:"SimpleBlock",level:2,type:"b",multiple:!0,minver:2,webm:!0,divx:!0,description:"Similar to SimpleBlock Structure"},171:{name:"PrevSize",cppname:"ClusterPrevSize",level:2,type:"u",minver:1,description:"Size of the previous Cluster, in octets. Can be useful for backward playing.",position:"prevCluster"},167:{name:"Position",cppname:"ClusterPosition",level:2,type:"u",minver:1,webm:!1,description:"The Position of the Cluster in the segment (0 in live broadcast streams). It might help to resynchronise offset on damaged streams.",position:"segment"},22743:{name:"SilentTrackNumber",cppname:"ClusterSilentTrackNumber",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"One of the track number that are not used from now on in the stream. It could change later if not specified as silent in a further Cluster."},231:{name:"Timecode",cppname:"ClusterTimecode",level:2,type:"u",mandatory:!0,minver:1,description:"Absolute timestamp of the cluster (based on TimecodeScale)."},524531317:{name:"Cluster",level:1,type:"m",multiple:!0,minver:1,description:"The lower level element containing the (monolithic) Block structure."},19840:{name:"MuxingApp",level:2,type:"8",mandatory:!0,minver:1,description:'Muxing application or library ("libmatroska-0.4.3").'},31657:{name:"Title",level:2,type:"8",minver:1,webm:!1,description:"General name of the segment."},2807730:{name:"TimecodeScaleDenominator",level:2,type:"u",mandatory:!0,minver:4,default:"1000000000",description:"Timestamp scale numerator, see TimecodeScale."},2807729:{name:"TimecodeScale",level:2,type:"u",mandatory:!0,minver:1,default:"1000000",description:"Timestamp scale in nanoseconds (1.000.000 means all timestamps in the segment are expressed in milliseconds)."},27045:{name:"ChapterTranslateID",level:3,type:"b",mandatory:!0,minver:1,webm:!1,description:"The binary value used to represent this segment in the chapter codec data. The format depends on the ChapProcessCodecID used."},27071:{name:"ChapterTranslateCodec",level:3,type:"u",mandatory:!0,minver:1,webm:!1,description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."},27132:{name:"ChapterTranslateEditionUID",level:3,type:"u",multiple:!0,minver:1,webm:!1,description:"Specify an edition UID on which this correspondance applies. When not specified, it means for all editions found in the segment."},4096955:{name:"NextFilename",level:2,type:"8",minver:1,webm:!1,description:"An escaped filename corresponding to the next segment."},4110627:{name:"NextUID",level:2,type:"b",minver:1,webm:!1,bytesize:16,description:"A unique ID to identify the next chained segment (128 bits)."},3965867:{name:"PrevFilename",level:2,type:"8",minver:1,webm:!1,description:"An escaped filename corresponding to the previous segment."},3979555:{name:"PrevUID",level:2,type:"b",minver:1,webm:!1,bytesize:16,description:"A unique ID to identify the previous chained segment (128 bits)."},29604:{name:"SegmentUID",level:2,type:"b",minver:1,webm:!1,range:"not 0",bytesize:16,description:"A randomly generated unique ID to identify the current segment between many others (128 bits)."},357149030:{name:"Info",level:1,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains miscellaneous general information and statistics on the file."},21420:{name:"SeekPosition",level:3,type:"u",mandatory:!0,minver:1,description:"The position of the element in the segment in octets (0 = first level 1 element).",position:"segment"},21419:{name:"SeekID",level:3,type:"b",mandatory:!0,minver:1,description:"The binary ID corresponding to the element name.",type2:"ebmlID"},19899:{name:"Seek",cppname:"SeekPoint",level:2,type:"m",mandatory:!0,multiple:!0,minver:1,description:"Contains a single seek entry to an EBML element."},290298740:{name:"SeekHead",cppname:"SeekHeader",level:1,type:"m",multiple:!0,minver:1,description:"Contains the position of other level 1 elements."},32379:{name:"SignatureElementList",level:2,type:"m",multiple:!0,webm:!1,i:"Cluster|Block|BlockAdditional",description:"A list consists of a number of consecutive elements that represent one case where data is used in signature. Ex:  means that the BlockAdditional of all Blocks in all Clusters is used for encryption."},32347:{name:"SignatureElements",level:1,type:"m",webm:!1,description:"Contains elements that will be used to compute the signature."},32437:{name:"Signature",level:1,type:"b",webm:!1,description:"The signature of the data (until a new."},32421:{name:"SignaturePublicKey",level:1,type:"b",webm:!1,description:"The public key to use with the algorithm (in the case of a PKI-based signature)."},32410:{name:"SignatureHash",level:1,type:"u",webm:!1,description:"Hash algorithm used (1=SHA1-160, 2=MD5)."},32394:{name:"SignatureAlgo",level:1,type:"u",webm:!1,description:"Signature algorithm used (1=RSA, 2=elliptic)."},458458727:{name:"SignatureSlot",level:-1,type:"m",multiple:!0,webm:!1,description:"Contain signature of some (coming) elements in the stream."},191:{name:"CRC-32",level:-1,type:"b",minver:1,webm:!1,description:"The CRC is computed on all the data of the Master element it's in. The CRC element should be the first in it's parent master for easier reading. All level 1 elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian",crc:!0},236:{name:"Void",level:-1,type:"b",minver:1,description:"Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content is discarded. Also used to reserve space in a sub-element for later use."},17139:{name:"EBMLMaxSizeLength",level:1,type:"u",mandatory:!0,default:8,minver:1,description:"The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not override the element size indicated at the beginning of an element. Elements that have an indicated size which is larger than what is allowed by EBMLMaxSizeLength shall be considered invalid."},17138:{name:"EBMLMaxIDLength",level:1,type:"u",mandatory:!0,default:4,minver:1,description:"The maximum length of the IDs you'll find in this file (4 or less in Matroska)."},17143:{name:"EBMLReadVersion",level:1,type:"u",mandatory:!0,default:1,minver:1,description:"The minimum EBML version a parser has to support to read this file."},440786851:{name:"EBML",level:"0",type:"m",mandatory:!0,multiple:!0,minver:1,description:"Set the EBML characteristics of the data to follow. Each EBML document has to start with this."}},byName={},schema={byEbmlID:byEbmlID,byName:byName};for(var ebmlID in byEbmlID){byName[byEbmlID[ebmlID].name.replace("-","_")]=parseInt(ebmlID,10)}module.exports=schema},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),__webpack_require__(315);const rxjs_1=__webpack_require__(7),callLog_model_1=__webpack_require__(488),contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),logger_service_1=__webpack_require__(4),telephony_service_1=__webpack_require__(57),event_service_1=__webpack_require__(11),webrtcGateway_service_1=__webpack_require__(71),personal_directory_service_1=__webpack_require__(314),main_service_1=__webpack_require__(15);class CallLogService{constructor(){this.RAINBOW_ONCALLLOGUPDATED="rainbowcalllogupdated",this.RAINBOW_ONCALLLOGMISSEDNUMBERUPDATED="rainbowcalllogmissednumberupdated",this.RAINBOW_ONCALLLOGACKUPDATED="rainbowcalllogackupdated",this.RAINBOW_ONCALLLOGINFOSUPDATED="rainbowcallloginfosupdated",this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.centralizedService=null,this.mainService=main_service_1.MainService.getInstance(),this.personalDirectoryService=personal_directory_service_1.PersonalDirectoryService.getInstance(),this.initialized=!1,this.rxSubject=new rxjs_1.Subject,this.xmppConnectionSubscription=null,this.personalDirSubscriptions=[],this.callLogHandlerRef=null,this.callLogMessageAckRef=null,this.callLogNotificationRef=null,this.usePhonebookDirectory=!1,this.callLogPromises=[],this.numberMissedCallLogs=0,this.numberTotalCallLogs=0,this.callLogs=[],this.aggregatedCallLogs=[],this.ackAllCallLogsInDBDone=!1,this.fetchingCallLogs=!1,this.userFetchRequest=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.callLogService||(win.rainbow.callLogService=new CallLogService),win.rainbow.callLogService}async start(){try{this.logger.info(""),this.logger.info("[CallLogService] === STARTING ==="),this.centralizedService=this.mainService.inject("centralizedService"),this.usePhonebookDirectory=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK)||config.permitSearchFromPhoneBook,this.attachHandlers(),this.logger.info("[CallLogService] === STARTED ===")}catch(error){this.logger.error("[CallLogService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info("[CallLogService] === STOPPING ==="),this.numberMissedCallLogs=0,this.callLogs=[],this.aggregatedCallLogs=[],this.initialized=!1,this.ackAllCallLogsInDBDone=!1,this.removeXMPPListeners(),this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.logger.info("[CallLogService] === STOPPED ===")}attachHandlers(){this.logger.info("[CallLogService] attachHandlers"),this.xmppService.connected&&(this.attachXMPPListeners(),this.getNumberMissedCallLogsFromServer()),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{"ON_XMPP_CONNECTED"===event.name&&(this.attachXMPPListeners(),this.getNumberMissedCallLogsFromServer(),"RECONNECTION"===event.data.reason&&this.initialized&&this.getCallLogHistoryPage(this.lastTimestamp)),"ON_XMPP_DISCONNECTED"===event.name&&"LOGOUT"===event.data.reason&&(this.numberMissedCallLogs=0,this.callLogs=[],this.aggregatedCallLogs=[],this.initialized=!1,this.ackAllCallLogsInDBDone=!1)}),this.personalDirSubscriptions.push(this.personalDirectoryService.subscribe(event=>{this.onPersonalContactEvent(event)}))}removeXMPPListeners(){this.callLogHandlerRef&&(this.xmppService.connection.deleteHandler(this.callLogHandlerRef),this.callLogHandlerRef=null),this.callLogNotificationRef&&(this.xmppService.connection.deleteHandler(this.callLogNotificationRef),this.callLogNotificationRef=null),this.callLogMessageAckRef&&(this.xmppService.connection.deleteHandler(this.callLogMessageAckRef),this.callLogMessageAckRef=null),this.personalDirSubscriptions&&this.personalDirSubscriptions.forEach(subscription=>{subscription.unsubscribe()})}attachXMPPListeners(){this.logger.info("[CallLogService] attachXMPPListeners"),this.removeXMPPListeners(),this.callLogHandlerRef=this.xmppService.connection.addHandler(stanza=>this.onHistoryCallLogMessageReceived(stanza),CallLogService.CALL_LOG_NAMESPACE,null,null),this.callLogNotificationRef=this.xmppService.connection.addHandler(stanza=>this.onCallLogNotificationReceived(stanza),CallLogService.CALL_LOG_NOTIF_NAMESPACE,null,null),this.callLogMessageAckRef=this.xmppService.connection.addHandler(stanza=>this.onCallLogAckReceived(stanza),CallLogService.CALL_LOG_ACK_NAMESPACE,null,null)}subscribe(observer){return this.rxSubject.subscribe(observer)}async initialize(initFetchOptions={}){return this.initialized?Promise.resolve():(this.logger.info("[CallLogService] initialize -- Not yet initialized, fetch first call logs from server"),this.startPromise||(this.startPromise=new Promise(resolve=>{this.startPromiseResolve=resolve,this.logger.info(`[CallLogService] initialize -- initFetchOptions: Number=${initFetchOptions.numberOfElementsToGet} - before=${initFetchOptions.useBefore} - useAfter=${initFetchOptions.useAfter}`),this.fetchCallLogsFromServer(initFetchOptions),this.logger.info("[CallLogService] initialize -- numberMissedCallLogs = "+this.numberMissedCallLogs),this.logger.info("[CallLogService] initialize -- ackAllCallLogsInDBDone = "+this.ackAllCallLogsInDBDone),this.numberMissedCallLogs>14&&!this.ackAllCallLogsInDBDone&&this.ackAllCallLogsInDB()})),this.startPromise)}async getNumberMissedCallLogsFromServer(){const message=$iq({from:this.xmppService.jid,type:"set"});message.c("query",{xmlns:CallLogService.CALL_LOG_NAMESPACE}),message.c("set",{xmlns:"http://jabber.org/protocol/rsm"}),message.c("max").t(0).up().up(),message.c("x",{xmlns:"jabber:x:data",type:"submit"}),message.c("field",{var:"read"}).c("value").t("false").up().up();const stanza=await this.xmppService.sendIQ(message);return this.numberMissedCallLogs=parseInt($(stanza).find("count").text(),10),this.logger.info("[CallLogService] getNumberMissedCallLogsFromServer -- numberMissedCallLogs = "+this.numberMissedCallLogs),this.rxSubject.next({type:this.RAINBOW_ONCALLLOGMISSEDNUMBERUPDATED,value:this.numberMissedCallLogs}),this.numberMissedCallLogs}async getCallLogHistoryPage(useAfter=null){this.logger.debug("[CallLogService] getCallLogHistoryPage");const fetchOptions={};fetchOptions.numberOfElementsToGet=CallLogService.DEFAULT_CALL_LOG_FETCHED,useAfter&&(fetchOptions.useAfter=useAfter),await this.fetchCallLogsFromServer(fetchOptions)}async fetchCallLogsFromServer(options){this.logger.debug(`[CallLogService] fetchCallLogsFromServer -- FetchOptions: NbElem=${options.numberOfElementsToGet} - before=${options.useBefore} - useAfter=${options.useAfter}`);const message=$iq({from:this.xmppService.jid,type:"set"});message.c("query",{xmlns:CallLogService.CALL_LOG_NAMESPACE}),message.c("set",{xmlns:"http://jabber.org/protocol/rsm"}),options.numberOfElementsToGet?(options.numberOfElementsToGet>CallLogService.MAX_CALL_LOG_FETCHED&&(options.numberOfElementsToGet=CallLogService.MAX_CALL_LOG_FETCHED),message.c("max").t(options.numberOfElementsToGet).up()):message.c("max").t(CallLogService.DEFAULT_CALL_LOG_FETCHED).up(),options.useAfter?message.c("after").t(options.useAfter).up():options.useBefore&&this.firstTimeStamp?message.c("before").t(this.firstTimeStamp).up():message.c("before").t("").up(),await this.xmppService.sendIQ(message)}async onHistoryCallLogMessageReceived(stanza){const stanzaElem=$(stanza);if(stanzaElem.find("call_log").length>0)stanzaElem.find("call_log").each((__index,call_log)=>{const callLogElem=$(call_log);callLogElem.attr("xmlns")===CallLogService.CALL_LOG_NOTIF_NAMESPACE&&callLogElem.length>0&&this.callLogPromises.push(this.createCallLogFromStanza(stanzaElem,callLogElem))});else if(stanzaElem.find("count").length>0&&0===$(stanza).find("last").length&&0===$(stanza).find("first").length)this.logger.info("[CallLogService] onHistoryCallLogMessageReceived -- IQ count received"),this.startPromise&&(this.initialized=!0,this.startPromiseResolve(),this.startPromiseResolve=null,this.startPromise=null);else if(stanzaElem.find("count").length>0&&stanzaElem.find("query").length>0&&($(stanza).find("last").length>0||"0"===stanzaElem.find("count").text()||$(stanza).find("first").length>0))$(stanza).find("last").length&&(this.lastTimestamp=$(stanza).find("last").text()),$(stanza).find("first").length&&(this.firstTimeStamp=$(stanza).find("first").text()),this.logger.info("[CallLogService] onHistoryCallLogMessageReceived -- all calllogs received"),await Promise.all(this.callLogPromises).catch(()=>{}),this.callLogPromises=[],this.orderCallLogs(),this.startPromise&&(this.initialized=!0,this.startPromiseResolve(),this.startPromiseResolve=null,this.startPromise=null),$(stanza).find("count").length&&(this.numberTotalCallLogs=parseInt($(stanza).find("count").text(),10)),setTimeout(async()=>{const unreadMessages=await this.getNumberMissedCallLogsFromServer();unreadMessages&&(this.logger.info("[CallLogService] onHistoryCallLogMessageReceived -- all calllogs received - still unread = "+unreadMessages),this.ackAllCallLogsInDB())},5e3);else if(stanzaElem.find("deleted").length>0){const nbDeleted=stanzaElem.find("deleted").attr("count");nbDeleted&&(this.numberTotalCallLogs-=parseInt(nbDeleted,10)),this.orderCallLogs()}return!0}onCallLogAckReceived(stanza){try{if($(stanza).find("read").length>0){const msgId=$(stanza).find("read").attr("call_id");this.callLogs.forEach(callLog=>{callLog.id!==msgId||(callLog.read=!0)});const numberMissedCallLogs=this.getMissedCallLogCounter();numberMissedCallLogs!==this.numberMissedCallLogs&&(this.numberMissedCallLogs=numberMissedCallLogs,this.rxSubject.next({type:this.RAINBOW_ONCALLLOGMISSEDNUMBERUPDATED,value:this.numberMissedCallLogs}),this.eventService.publish(this.RAINBOW_ONCALLLOGACKUPDATED,this.numberMissedCallLogs),this.rxSubject.next({type:this.RAINBOW_ONCALLLOGACKUPDATED,value:this.numberMissedCallLogs}))}}catch(error){return this.logger.error("[CallLogService] onCallLogAckReceived -- failure with error "+error),!0}return!0}async onCallLogNotificationReceived(stanza){const stanzaElem=$(stanza);try{if(stanzaElem.find("deleted_call_log").length>0){const peer=stanzaElem.find("deleted_call_log").attr("peer"),callId=stanzaElem.find("deleted_call_log").attr("call_id");peer?this.removeCallLogsForUser(peer):callId?this.removeOneCallLog(callId):(this.callLogs=[],await this.getCallLogHistoryPage())}else stanzaElem.find("updated_call_log").length>0&&(await this.createCallLogFromStanza(stanzaElem,null).catch(()=>{}),this.orderCallLogs())}catch(error){return this.logger.error("[CallLogService] onCallLogAckReceived -- failure with error "+error),!0}return!0}onPersonalContactEvent(event){try{let callLogsUpdated=!1;switch(event.name){case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_ADD:if(event.data){const addedContact=event.data;this.logger.debug(`[CallLogService] onPersonalContactEvent PERSONAL_DIRECTORY_ADD: Id = ${addedContact.id} -- Display name = ${addedContact.displayName}`),this.callLogs.forEach(callLog=>{if(!callLog.directoryContactId&&callLog.contact.temp){const jid=callLog.contact.id,persoContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(jid);persoContact&&(this.logger.debug(`[CallLogService] onPersonalContactEvent -- Update display of Call log number '${callLog.contact.displayName}' to name '${persoContact.displayName}'`),callLog.contact.displayName=persoContact.displayName,callLog.directoryContactId=persoContact.id,callLogsUpdated=!0)}}),callLogsUpdated&&this.rxSubject.next({type:this.RAINBOW_ONCALLLOGINFOSUPDATED})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_UPDATE:if(event.data){const updatedContact=event.data;this.logger.debug(`[CallLogService] onPersonalContactEvent PERSONAL_DIRECTORY_UPDATE: Id = ${updatedContact.id} -- Display name = ${updatedContact.displayName}`),this.callLogs.forEach(callLog=>{const jid=callLog.contact.id,persoContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(jid);persoContact?(this.logger.debug(`[CallLogService] onPersonalContactEvent -- Update display of Call log name '${callLog.contact.displayName}' to '${persoContact.displayName}'`),callLog.contact.displayName=persoContact.displayName,callLog.directoryContactId=persoContact.id,callLogsUpdated=!0):callLog.directoryContactId&&(this.logger.debug(`[CallLogService] onPersonalContactEvent -- Reinit display of Call log name '${callLog.contact.displayName}' to number '${callLog.contact.phoneProCan}'`),callLog.contact.displayName=callLog.contact.phoneProCan,callLog.directoryContactId=null,callLogsUpdated=!0)}),callLogsUpdated&&this.rxSubject.next({type:this.RAINBOW_ONCALLLOGINFOSUPDATED})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE:if(event.data){const deletedContactId=event.data;this.logger.debug("[CallLogService] onPersonalContactEvent PERSONAL_DIRECTORY_DELETE: Id =  "+deletedContactId),this.callLogs.forEach(callLog=>{callLog.directoryContactId===deletedContactId&&(this.logger.debug(`[CallLogService] onPersonalContactEvent -- Reinit display of Call log name '${callLog.contact.displayName}' to number '${callLog.contact.phoneProCan}'`),callLog.contact.displayName=callLog.contact.phoneProCan,callLog.directoryContactId=null,callLogsUpdated=!0)}),callLogsUpdated&&this.rxSubject.next({type:this.RAINBOW_ONCALLLOGINFOSUPDATED})}break;case personal_directory_service_1.PersonalDirectoryEvent.PERSONAL_DIRECTORY_DELETE_ALL:this.logger.debug("[CallLogService] onPersonalContactEvent PERSONAL_DIRECTORY_DELETE_ALL"),this.callLogs.forEach(callLog=>{callLog.directoryContactId&&(this.logger.debug(`[CallLogService] onPersonalContactEvent -- Reinit display of Call log name '${callLog.contact.displayName}' to number '${callLog.contact.phoneProCan}'`),callLog.contact.displayName=callLog.contact.phoneProCan,callLog.directoryContactId=null,callLogsUpdated=!0)}),callLogsUpdated&&this.rxSubject.next({type:this.RAINBOW_ONCALLLOGINFOSUPDATED})}}catch(error){return this.logger.error("[CallLogService] onPersonalContactEvent -- failure with error "+error),!0}return!0}isInitialized(){return this.initialized}async getCalllogs(){return this.logger.info("[CallLogService] getCalllogs -- init status = "+this.initialized),await this.initialize(),this.callLogs}async getAggregatedCalllogs(){return this.logger.info("[CallLogService] getAggregatedCalllogs -- init status = "+this.initialized),await this.initialize(),this.aggregatedCallLogs}async getSimplifiedCallLogs(numberOfCallLogs=200){this.logger.info(`[CallLogService] getSimplifiedCallLogs -- init status = ${this.initialized}, number requested = ${numberOfCallLogs}`);const fetchOptions={};return fetchOptions.numberOfElementsToGet=numberOfCallLogs,await this.initialize(fetchOptions),await this.orderAndSimplifyCallLogs()}async fetchNextPage(numberOfElementsPerPage=CallLogService.DEFAULT_CALL_LOG_FETCHED){this.logger.info(`[CallLogService] fetchNextPage -- init status = ${this.initialized}, number requested = ${numberOfElementsPerPage}`);const fetchOptions={};if(!this.initialized){const error=new Error("[CallLogService] Fetch next page error - The service is not initialized through one of the APIs authorized to do so");return this.logger.error(error.message),Promise.reject(error)}if(this.fetchingCallLogs){const error=new Error("[CallLogService] Fetch next page error - A fetch of call logs is already is currently in progress. This request is ignored.");return this.logger.error(error.message),Promise.reject(error)}return this.fetchingCallLogs=!0,fetchOptions.numberOfElementsToGet=numberOfElementsPerPage,this.firstTimeStamp&&(fetchOptions.useBefore=this.firstTimeStamp),await this.fetchCallLogsFromServer(fetchOptions),this.fetchingCallLogs=!1,await this.orderAndSimplifyCallLogs()}async orderAndSimplifyCallLogs(){return this.logger.debug("[CallLogService] orderAndSimplifyCallLogs"),await Promise.all(this.callLogPromises).catch(()=>{}),this.callLogPromises=[],this.callLogs=this.callLogs.sort((a,b)=>b.date.getTime()-a.date.getTime()),this.callLogs.map(callLog=>({contact:callLog.contact.id,contactDisplayName:callLog.contact.displayName,read:callLog.read,contactInitials:callLog.contact.initials,id:callLog.id,state:callLog.state,date:callLog.date,duration:callLog.durationInfos,direction:callLog.direction,type:callLog.type,phonePro:callLog.contact.phoneProCan,calledNumber:callLog.calledNumber}))}prettifyCallLogs(logs){this.logger.debug("[CallLogService] prettifyCallLogs"),logs.sort((elementA,elementB)=>Number(elementB.date)-Number(elementA.date));for(let i=0;i<logs.length;i++){let durationMs=0,hmmss=logs[i].duration;if(hmmss&&"string"==typeof hmmss&&hmmss.match(/^(?:(?:([01]?\d|2[0-3])H )?([0-5]?\d)m )?([0-5]?\ds)$/)){hmmss=hmmss.replace(/[hms]/g,"");const parts=hmmss.split(" ").reverse();for(let j=0;j<parts.length;j++)durationMs+=parts[j]*Math.pow(60,j);logs[i].duration=1e3*durationMs}}return logs}getNumberMissedCallLogs(){return this.logger.debug("[CallLogService] getNumberMissedCallLogs -- Number returned = "+this.numberMissedCallLogs),this.numberMissedCallLogs}getNumberTotalCallLogs(){return this.logger.debug("[CallLogService] getNumberTotalCallLogs -- Number returned = "+this.numberTotalCallLogs),this.numberTotalCallLogs}getMissedCallLogCounter(){let num=0;return this.callLogs.forEach(callLog=>{callLog.read||"missed"!==callLog.state||"incoming"!==callLog.direction||num++}),this.logger.debug("[CallLogService] getMissedCallLogCounter -- Number returned = "+num),num}markCallLogAsRead(id){this.logger.info("[CallLogService] markCallLogAsRead -- id = "+id);const message=$msg({from:this.xmppService.jid,to:this.xmppService.jid});message.c("read",{xmlns:CallLogService.CALL_LOG_ACK_NAMESPACE,call_id:id}),this.xmppService.send(message)}markAllCallsLogsAsRead(){this.logger.info("[CallLogService] markAllCallsLogsAsRead"),this.callLogs.forEach(callLog=>{if(!callLog.read){const message=$msg({from:this.xmppService.jid,to:this.xmppService.jid});message.c("read",{xmlns:CallLogService.CALL_LOG_ACK_NAMESPACE,call_id:callLog.id}),this.xmppService.send(message)}})}async ackAllCallLogsInDB(){try{if(this.ackAllCallLogsInDBDone)return void this.logger.info("ackAllCallLogsInDB --- aready done -- ignore");this.ackAllCallLogsInDBDone=!0,this.logger.warn(`ackAllCallLogsInDB --- used for ${this.numberMissedCallLogs} call-logs`);const message=$iq({from:this.xmppService.jid,type:"set"});message.c("markallread",{xmlns:CallLogService.CALL_LOG_NAMESPACE});const stanza=await this.xmppService.sendIQ(message);if($(stanza).find("error").length)return void this.logger.warn("ackAllCallLogsInDB --- error ...");await this.getNumberMissedCallLogsFromServer()}catch{return void this.logger.warn("ackAllCallLogsInDB --- error ...")}}async deleteCallLogsForContact(jid){this.logger.info("[CallLogService] deleteCallLogsForContact -- contact jid = "+jid);const message=$iq({from:this.xmppService.jid,to:this.xmppService.jid,type:"set"});return message.c("delete",{xmlns:CallLogService.CALL_LOG_NAMESPACE,peer:jid}),this.xmppService.sendIQ(message)}async deleteOneCallLog(id){this.logger.info("[CallLogService] deleteOneCallLog -- call log id = "+id);const msg=$iq({from:this.xmppService.jid,to:this.xmppService.jid,type:"set"}).c("delete",{xmlns:CallLogService.CALL_LOG_NAMESPACE,call_id:id});return this.xmppService.sendIQ(msg)}async deleteAllCallLogs(){this.logger.info("[CallLogService] deleteAllCallLogs");const message=$iq({from:this.xmppService.jid,to:this.xmppService.jid,type:"set"});return message.c("delete",{xmlns:CallLogService.CALL_LOG_NAMESPACE}),this.xmppService.sendIQ(message)}removeCallLogsForUser(jid){this.logger.debug("[CallLogService] removeCallLogsForUser -- user jid = "+jid),jid.endsWith("@_")&&(jid=jid.substring(0,jid.length-2));const newLogs=[];for(let i=0;i<this.callLogs.length;i++)(!this.callLogs[i].contact||this.callLogs[i].contact.jid!==jid&&this.callLogs[i].contact.id!==jid)&&newLogs.push(this.callLogs[i]);this.callLogs=newLogs}removeOneCallLog(callId){this.logger.debug("[CallLogService] removeOneCallLog --  Call log id = "+callId),this.callLogs=this.callLogs.filter(el=>el.id!==callId)}async createCallLogFromStanza(stanzaElem,callLogElem){let trueCallLogElem=!1;callLogElem?trueCallLogElem=!0:callLogElem=stanzaElem;const id=callLogElem.find("call_id").text(),state=callLogElem.find("state").text();if(this.callLogs.some(callLog=>callLog.id===id||"failed"===state||"ongoing"===state))return this.logger.debug("[CallLogService] createCallLogFromStanza --- ignore existing of wrong call-log"),null;const callerJid=callLogElem.find("caller").text(),calleeJid=callLogElem.find("callee").text();if(callerJid&&-1!==callerJid.indexOf("janusgateway")||calleeJid&&-1!==calleeJid.indexOf("janusgateway"))return this.logger.debug("[CallLogService] createCallLogFromStanza --- ignore janusgateway call-log"),null;if(callerJid&&this.webrtcGatewayService.isMediaPillarJid(callerJid)||calleeJid&&this.webrtcGatewayService.isMediaPillarJid(calleeJid))return this.logger.debug("[CallLogService] createCallLogFromStanza --- ignore mediapillar call-log"),null;let type="webrtc",otherParticipantJid=null,otherParticipantNumber=null,calledNumber=null;const isUserContactCaller=this.xmppService.isConnectedJid(callerJid),direction=isUserContactCaller?"outgoing":"incoming";let conference=!1;if(conference=trueCallLogElem?"conference"===callLogElem.attr("service"):"conference"===stanzaElem.find("call_log").attr("service"),conference)type="conference",otherParticipantJid=callerJid,-1===otherParticipantJid.indexOf("@")&&(otherParticipantNumber=otherParticipantJid,otherParticipantJid=null);else{let typeCall;typeCall=trueCallLogElem?callLogElem.attr("type"):stanzaElem.find("call_log").attr("type"),typeCall||(typeCall=stanzaElem.find("type").text()),"chat"===typeCall&&stanzaElem.find("call_log").attr("type"),"phone"===typeCall&&(type="telephone"),otherParticipantJid=isUserContactCaller?calleeJid:callerJid,-1===otherParticipantJid.indexOf("@")&&(otherParticipantNumber=otherParticipantJid,otherParticipantJid=null,type="telephone")}if(otherParticipantJid||otherParticipantNumber)try{let checkPersonalDir=!1,contact=await this.contactService.getOrCreateContact(otherParticipantJid,otherParticipantNumber);if(!conference&&!otherParticipantJid&&contact.temp&&otherParticipantNumber){const foundContactByNumber=this.contactService.getContactByPhoneNumber(otherParticipantNumber);foundContactByNumber&&(contact=foundContactByNumber)}if(!conference&&!otherParticipantJid&&contact.temp){checkPersonalDir=!0;let identityFoundAndValid=!1;const foundIdentity=this.usePhonebookDirectory?callLogElem.find("identity"):null;if(foundIdentity&&foundIdentity.length){const foundFirstName=foundIdentity.attr("firstName"),foundLastName=foundIdentity.attr("lastName"),foundDisplayName=foundIdentity.attr("displayName"),identityFirstName=foundFirstName||"";let identityLastName=foundLastName||"";""===identityLastName&&""===identityFirstName&&foundDisplayName&&0!==foundDisplayName.length&&foundDisplayName!==otherParticipantNumber&&(identityLastName=foundDisplayName,identityFoundAndValid=!0),(identityFirstName.length||identityLastName.length)&&(this.logger.debug("[CallLogService] createCallLogFromStanza xNames updated from phonebook for contact "+contact.id),identityFoundAndValid=!0,contact.updateName(identityFirstName,identityLastName),checkPersonalDir=!1)}if(!identityFoundAndValid&&this.centralizedService)try{await this.centralizedService.outlook.updateContactFromOutlookInfos(contact,otherParticipantNumber,!0)?(checkPersonalDir=!1,this.logger.debug("[CallLogService] createCallLogFromStanza xNames updated from outlook for contact "+contact.id)):this.logger.debug("[CallLogService] createCallLogFromStanza no update from outlook for contact "+contact.id)}catch(error){this.logger.debug("[CallLogService] createCallLogFromMessage no outlook service for contact "+contact.id)}let displayNameisAPhoneNumber=!1;const phoneNumberRegex=/^[0-9A-D #\-\+\*\(\)\./]{1,32}$/;if(this.telephonyService.started){displayNameisAPhoneNumber=contact.displayName.match(phoneNumberRegex)&&this.telephonyService.startAsPhoneNumber(contact.displayName)}displayNameisAPhoneNumber&&contact.phoneProCan&&""!==contact.phoneProCan&&(contact.displayName=contact.phoneProCan)}"telephone"!==type||otherParticipantNumber||(isUserContactCaller&&stanzaElem.find("callee_info").length?otherParticipantNumber=stanzaElem.find("callee_info").attr("number"):!isUserContactCaller&&stanzaElem.find("caller_info").length&&(otherParticipantNumber=stanzaElem.find("caller_info").attr("number"))),"telephone"===type&&isUserContactCaller&&stanzaElem.find("callee_info")&&(calledNumber=stanzaElem.find("callee_info").attr("calledNumber")),conference||contact.temp||contact.phoneProCan||contact.phonePbx||!otherParticipantNumber&&!calledNumber||(contact.phoneProCan=otherParticipantNumber||calledNumber,contact.phonePro||(contact.phonePro=contact.phoneProCan),contact.phoneNumbersInitialized=!0,this.eventService.publish("ON_CONTACT_UPDATED_EVENT",contact));const read="true"===callLogElem.find("ack").attr("read");let duration=parseInt(callLogElem.find("duration").text(),10);duration=duration>0?moment.duration(duration,"ms").format("h[H] mm[m] ss[s]"):0;let date=stanzaElem.find("delay").attr("stamp");date&&(date=new Date(date));const callSubject=stanzaElem.find("subject").text(),callLog=callLog_model_1.CallLog.create(id,contact,state,duration,type,read,date,direction,callSubject,!1,calledNumber);if(checkPersonalDir){const persoDirContact=this.personalDirectoryService.getPersonalDirectoryContactFromNumber(otherParticipantNumber);persoDirContact&&(callLog.contact.displayName=persoDirContact.displayName,callLog.directoryContactId=persoDirContact.id)}return this.callLogs.push(callLog),this.numberTotalCallLogs++,"answered"!==state||read||this.markCallLogAsRead(id),!0}catch(error){return this.logger.error("[CallLogService] createCallLogFromStanza -- failure --- "+error),error}return!1}orderCallLogs(){this.callLogs.sort((a,b)=>callLog_model_1.CallLog.getDate(b)-callLog_model_1.CallLog.getDate(a)),this.aggregateCalllogs(),this.userFetchRequest||(this.logger.debug("[CallLogService] orderCallLogs -- Send event RAINBOW_ONCALLLOGUPDATED"),this.eventService.publish(this.RAINBOW_ONCALLLOGUPDATED),this.rxSubject.next({type:this.RAINBOW_ONCALLLOGUPDATED}));const missedCallLog=this.getMissedCallLogCounter();missedCallLog!==this.numberMissedCallLogs&&(this.numberMissedCallLogs=missedCallLog,this.rxSubject.next({type:this.RAINBOW_ONCALLLOGMISSEDNUMBERUPDATED,value:this.numberMissedCallLogs}),this.eventService.publish(this.RAINBOW_ONCALLLOGACKUPDATED,this.numberMissedCallLogs),this.rxSubject.next({type:this.RAINBOW_ONCALLLOGACKUPDATED,value:this.numberMissedCallLogs}))}aggregateCalllogs(){let current=0;this.aggregatedCallLogs=[];const passed={};this.callLogs.forEach((callLog,ind)=>{const jid=callLog.contact.id;if("conference"===callLog.type)0!==ind&&current++,this.aggregatedCallLogs[current]=callLog,this.aggregatedCallLogs[current].count=1,this.aggregatedCallLogs[current].editable=!1;else if(0===ind)passed[jid]=1,this.aggregatedCallLogs[current]=callLog,this.aggregatedCallLogs[current].count=1,this.aggregatedCallLogs[current].editable=!0,"missed"===callLog.state&&"incoming"===callLog.direction?this.aggregatedCallLogs[current].isMissed=!0:"missed"===callLog.state&&"outgoing"===callLog.direction&&(this.aggregatedCallLogs[current].isNotAnswered=!0);else if(passed[jid]){const index=passed[jid],element=this.aggregatedCallLogs[index-1];element.editable&&(element.isMissed&&"missed"===callLog.state&&"incoming"===callLog.direction||element.isNotAnswered&&"missed"===callLog.state&&"outgoing"===callLog.direction?element.count++:element.editable=!1)}else current++,passed[jid]=current+1,this.aggregatedCallLogs[current]=callLog,this.aggregatedCallLogs[current].count=1,this.aggregatedCallLogs[current].editable=!0,"missed"===callLog.state&&"incoming"===callLog.direction?this.aggregatedCallLogs[current].isMissed=!0:"missed"===callLog.state&&"outgoing"===callLog.direction&&(this.aggregatedCallLogs[current].isNotAnswered=!0)})}async fetchCallLogs(numberOfCallLogs=100){this.logger.info("[CallLogService] fetchPaginatedCallLogs --  number requested = "+numberOfCallLogs),this.userFetchRequest=!0,numberOfCallLogs>CallLogService.MAX_CALL_LOG_FETCHED&&(numberOfCallLogs=CallLogService.MAX_CALL_LOG_FETCHED);let callLogs=await this.getSimplifiedCallLogs(numberOfCallLogs);return callLogs=this.prettifyCallLogs(callLogs),this.userFetchRequest=!1,callLogs}async fetchPaginatedCallLogs(numberOfElementsPerPage=100){this.logger.info("[CallLogService] fetchPaginatedCallLogs -- number requested = "+numberOfElementsPerPage),this.userFetchRequest=!0;let callLogs=await this.fetchNextPage(numberOfElementsPerPage);return callLogs=this.prettifyCallLogs(callLogs),this.userFetchRequest=!1,callLogs}}CallLogService.CALL_LOG_NAMESPACE="jabber:iq:telephony:call_log",CallLogService.CALL_LOG_ACK_NAMESPACE="urn:xmpp:telephony:call_log:receipts",CallLogService.CALL_LOG_NOTIF_NAMESPACE="jabber:iq:notification:telephony:call_log",CallLogService.DEFAULT_CALL_LOG_FETCHED=75,CallLogService.MAX_CALL_LOG_FETCHED=250,exports.CallLogService=CallLogService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),webrtcGateway_service_1=__webpack_require__(71),telephony_service_1=__webpack_require__(57),profile_service_1=__webpack_require__(13),telephonyAbstract_model_1=__webpack_require__(489),forwardMode_model_1=__webpack_require__(490),event_service_1=__webpack_require__(11),event_model_1=__webpack_require__(19),directory_service_1=__webpack_require__(151);class TelephonyAbstractService{constructor(){this.telephonyMode=telephonyAbstract_model_1.TelephonyMode.create(),this.previousTelephonyMode=telephonyAbstract_model_1.TelephonyMode.create(),this.forwardMode={immediate:forwardMode_model_1.ForwardMode.create(),busy:forwardMode_model_1.ForwardMode.create(),noreply:forwardMode_model_1.ForwardMode.create()},this.previousForwardMode={immediate:forwardMode_model_1.ForwardMode.create(),busy:forwardMode_model_1.ForwardMode.create(),noreply:forwardMode_model_1.ForwardMode.create()},this.currentTelephonyMode="",this.rxSubject=new rxjs_1.Subject,this.logger=logger_service_1.LoggerService.getInstance(),this.isTelephonyStarted=!1,this.isNomadicFeatureAllowed=!1,this.isNomadicFeatureActivated=!1,this.isSipWise=!1,this.isMediaPillarAvailable=!1,this.contactService=contact_service_1.ContactService.getInstance(),this.contact=null,this.isTelephonyAllowed=!1,this.areTelephonySettingsEnabled=!1,this.eventUnregisters=[],this.eventService=event_service_1.EventService.getInstance(),this.mediaPillarNumber="",this.isMediaPillarConfigured=!1,this.profileService=profile_service_1.ProfileService.getInstance(),this.is3dPartyFeatureActivated=!1,this.isForwardFeatureAllowed=!1,this.isNomadicModeActivated=!1,this.isMakeCallInitiatorIsMain=!1,this.nomadicPhone="",this.nomadicToNumber="",this.isCCDAgentProfilEnabled=!1,this.isCCDAgentEnabled=!1,this.webRTCDevice=null,this.sipDevice=null,this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.directoryService=directory_service_1.DirectoryService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.handleNomadicState=(__event,nomadicObject)=>{if(this.isNomadicFeatureActivated=nomadicObject.featureActivated,this.isNomadicFeatureActivated)if(this.mediaPillarNumber=this.webrtcGatewayService.getMyMediaPillarRemoteExtension(),this.isNomadicModeActivated=nomadicObject.modeActivated,this.isMakeCallInitiatorIsMain=nomadicObject.makeCallInitiatorIsMain,this.isMakeCallInitiatorIsMain)this.nomadicPhone="phonePro";else{const destination=nomadicObject.destination;this.contact.phoneProCan===destination&&""!==destination?this.nomadicPhone="phonePro":this.contact.mobileProCan===destination&&""!==destination?this.nomadicPhone="mobilePro":this.contact.phonePersoCan===destination&&""!==destination?this.nomadicPhone="phonePerso":this.contact.mobilePersoCan===destination&&""!==destination?this.nomadicPhone="mobilePerso":this.mediaPillarNumber===destination?(this.nomadicPhone="mediaPillar",this.webrtcGatewayService.mediaPillarUserSelectAndPolling(!0)):this.nomadicPhone="callNomadicToNumber",this.nomadicToNumber=destination}this.isSipWise||(this.telephonyMode.computerModeAvailable=Boolean(this.isMediaPillarConfigured),this.telephonyMode.officePhoneModeAvailable=Boolean(!this.contact.isVirtualTerm)),this.telephonyMode.mobileProModeAvailable=Boolean(this.contact.mobilePro),this.telephonyMode.mobilePersoModeAvailable=Boolean(this.contact.mobilePerso),this.telephonyMode.phonePersoModeAvailable=Boolean(this.contact.phonePerso),this.telephonyMode.otherPhoneModeAvailable=Boolean(!this.is3dPartyFeatureActivated&&!this.isCCDAgentEnabled),this.computeMode()}}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.telephonyAbstractService||(win.rainbow.telephonyAbstractService=new TelephonyAbstractService),win.rainbow.telephonyAbstractService}async start(){try{this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.logger.info("[TelephonyAbstractService] === STARTING ==="),this.previousTelephonyMode.setFromData(this.previousTelephonyMode,{currentMode:"dummyInit"}),this.computeTelephonySituation(),this.logger.info("[TelephonyAbstractService] === STARTED ===")}catch(error){}}async reconnect(){try{this.logger.info("[TelephonyAbstractService] reconnect"),this.computeTelephonySituation()}catch(error){this.logger.error("[TelephonyAbstractService] reconnect -- failure -- "+error.message)}}async stop(){this.logger.info("[TelephonyAbstractService] === STOPPING ==="),this.clearSubscriptions(),this.logger.info("=== STOPPED ===")}subscribe(observer){return this.rxSubject.subscribe(observer)}mediaPillarPollingManagement(selectedMode){this.isMediaPillarConfigured&&selectedMode!==telephonyAbstract_model_1.TelephonyMode.modeType.COMPUTER&&this.webrtcGatewayService.mediaPillarUserSelectAndPolling(!1)}async handleCallForwardedState(__event,forwardObject,callForwardType="immediate"){if(!forwardObject)return this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.NOFORWARD,void(this.forwardMode[callForwardType].destination="");if("immediate"===callForwardType&&(void 0===forwardObject.forwardType||"Desactivation"===forwardObject.forwardType||void 0===forwardObject.forwardTo)||!forwardObject.activate&&"immediate"!==callForwardType)this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.NOFORWARD,this.forwardMode[callForwardType].destination="";else if("immediate"===callForwardType){switch(forwardObject.forwardTo){case"VOICEMAILBOX":this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.VOICEMAIL,this.forwardMode[callForwardType].destination="";break;case this.contact.mobileProCan:this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO,this.forwardMode[callForwardType].destination=forwardObject.forwardTo;break;case this.contact.phonePersoCan:this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO,this.forwardMode[callForwardType].destination=forwardObject.forwardTo;break;case this.contact.mobilePersoCan:this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO,this.forwardMode[callForwardType].destination=forwardObject.forwardTo;break;default:this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.OTHERPHONE,this.forwardMode[callForwardType].destination=forwardObject.forwardTo}}else if("voicemail"===forwardObject.destinationType||"overflowvoicemail"===forwardObject.destinationType)this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.VOICEMAIL,this.forwardMode[callForwardType].destination="";else{let selectedContact;this.contact.mobileProCan===forwardObject.number?this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO:this.contact.phonePersoCan===forwardObject.number?this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO:this.contact.mobilePersoCan===forwardObject.number?this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO:(selectedContact=await this.directoryService.searchUserByPhoneNumber(forwardObject.number))?(this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.CONTACT,this.forwardMode[callForwardType].destination=selectedContact.displayName):"internalnumber"===forwardObject.destinationType?(this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.CONTACT,this.forwardMode[callForwardType].destination=forwardObject.number):(this.forwardMode[callForwardType].currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.OTHERPHONE,this.forwardMode[callForwardType].destination=forwardObject.number)}this.forwardMode[callForwardType].changeModePossible=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CALL_FORWARD),this.forwardMode[callForwardType].voiceMailModeAvailable=Boolean(this.telephonyService.voiceMailFeatureEnabled&&this.telephonyService.voicemailNumber),this.forwardMode[callForwardType].mobileProModeAvailable=Boolean(this.contact.mobilePro),this.forwardMode[callForwardType].mobilePersoModeAvailable=Boolean(this.contact.mobilePerso),this.forwardMode[callForwardType].phonePersoModeAvailable=Boolean(this.contact.phonePerso),this.forwardMode[callForwardType].otherPhoneModeAvailable=!0,this.computeMode()}evalChangeModePossible(){this.telephonyMode.changeModePossible=this.telephonyMode.currentMode!==telephonyAbstract_model_1.TelephonyMode.modeType.NOTELEPHONY&&!("EVT_SERVICE_INITIATED"===this.contact.telStatus||"EVT_ESTABLISHED"===this.contact.telStatus)}handleCallSipWiseState(__event,currentDeviceType,routingObject){currentDeviceType||this.logger.debug("[TelephonyAbstractService] handleCallSipWiseState : anomaly currentDeviceType"),this.webRTCDevice=routingObject.devicesList.find(device=>"webrtc"===device.type),this.sipDevice=routingObject.devicesList.find(device=>"sip"===device.type),this.telephonyMode.computerModeAvailable=Boolean(this.webRTCDevice),this.telephonyMode.officePhoneModeAvailable=Boolean(this.sipDevice),this.computeMode()}clearSubscriptions(){this.eventUnregisters&&this.eventUnregisters.length&&(this.eventUnregisters.forEach(listener=>{listener()}),this.eventUnregisters=[])}computeTelephonySituation(){this.clearSubscriptions(),this.contact=this.contactService.userContact,this.isSipWise=this.telephonyService.isSipWiseRoot(),this.isTelephonyAllowed=null!==this.contact.pbxId&&""!==this.contact.pbxId&&(null!==this.contact.phoneInternalNumber||this.contact.hasPhoneProDdiNumber),this.areTelephonySettingsEnabled=this.contact.telephonySettingsEnabled,this.isTelephonyAllowed&&(this.isTelephonyStarted=this.telephonyService.started,this.eventUnregisters.push(this.eventService.subscribe("ON_TELEPHONY_STATUS_CHANGED_EVENT",()=>{this.isTelephonyStarted=this.telephonyService.started,this.mediaPillarNumber=this.webrtcGatewayService.getMyMediaPillarRemoteExtension(),this.handleNomadicState(null,this.telephonyService.nomadicObject)})),this.isMediaPillarConfigured=this.webrtcGatewayService.isMediaPillarConfigured(),this.isMediaPillarAvailable=this.webrtcGatewayService.isMediaPillarAvailable(),this.mediaPillarNumber=this.webrtcGatewayService.getMyMediaPillarRemoteExtension(),this.eventUnregisters.push(this.eventService.subscribe("ON_WEBRTCGATEWAY_STATE_CHG",(__event,mediaPillarAlive)=>{this.isMediaPillarAvailable=mediaPillarAlive,this.isMediaPillarConfigured=this.webrtcGatewayService.isMediaPillarConfigured(),this.mediaPillarNumber=this.webrtcGatewayService.getMyMediaPillarRemoteExtension(),this.computeMode()})),this.isNomadicFeatureAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_NOMADIC),this.is3dPartyFeatureActivated=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_3DPARTY_WEBRTC_PSTN_CALLING),this.isCCDAgentProfilEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CCD_AGENT),this.isCCDAgentEnabled=this.isCCDAgentProfilEnabled&&this.contact.isCCDAgentEnabled,this.eventUnregisters.push(this.eventService.subscribe("ON_CALL_NOMADIC_EVENT",this.handleNomadicState)),this.isSipWise?(this.eventUnregisters.push(this.eventService.subscribe("ON_SIPWISE_ROUTING_EVENT",(_event,currentDeviceType,sipWiseObject)=>{this.handleCallSipWiseState(_event,currentDeviceType,sipWiseObject)})),this.telephonyService.getSipWiseRoutingInfo(),this.handleNomadicState(null,this.telephonyService.nomadicObject)):(this.eventUnregisters.push(this.eventService.subscribe("ON_PROFILE_UPDATED_EVENT",()=>{this.handleNomadicState(null,this.telephonyService.nomadicObject)})),this.handleNomadicState(null,this.telephonyService.nomadicObject)),this.isForwardFeatureAllowed=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_CALL_FORWARD),this.eventUnregisters.push(this.eventService.subscribe("ON_CALL_FORWARDED_EVENT",(_event,fowardObject)=>{this.handleCallForwardedState(_event,fowardObject)})),this.eventUnregisters.push(this.eventService.subscribe("ON_CALL_FORWARDED_CONDI_EVENT",(_event,forwardObjectAdapter)=>{this.onConditionalCallForwardedEvent(_event,forwardObjectAdapter)})),this.handleCallForwardedState(null,this.telephonyService.forwardObject),this.telephonyService.isSipWise()&&this.onConditionalCallForwardedEvent(null,this.telephonyService.getForwardObject()),this.eventUnregisters.push(this.eventService.subscribe("ON_UPDATE_MYTELEPHONY_STATUS_EVENT",()=>{this.computeMode()})),this.eventUnregisters.push(this.eventService.subscribe("ON_UPDATE_TELEPHONY_ICON_EVENT",()=>{this.computeMode()})))}computeMode(){this.isTelephonyStarted?this.isForwardFeatureAllowed||this.isNomadicFeatureAllowed||this.isNomadicFeatureActivated||this.isSipWise?this.isNomadicFeatureActivated&&!this.isSipWise?this.isMakeCallInitiatorIsMain&&!this.contact.isVirtualTerm?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE:this.contact.isVirtualTerm&&""===this.nomadicToNumber||this.contact.isVirtualTerm&&this.isMakeCallInitiatorIsMain&&!this.isNomadicModeActivated?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.HELP:"mediaPillar"===this.nomadicPhone?this.isMediaPillarAvailable?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.COMPUTER:this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.CALLWARN:"mobilePro"===this.nomadicPhone?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO:"phonePerso"===this.nomadicPhone?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO:"mobilePerso"===this.nomadicPhone?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO:this.telephonyMode.currentMode=this.nomadicToNumber:this.isSipWise?this.webRTCDevice&&this.webRTCDevice.main?this.isMediaPillarAvailable?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.COMPUTER:this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.NOTELEPHONY:this.sipDevice&&this.sipDevice.main&&(this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE):!this.isNomadicFeatureActivated&&this.contact.isVirtualTerm?this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.HELP:this.currentTelephonyMode=telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE:this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE:this.telephonyMode.currentMode=telephonyAbstract_model_1.TelephonyMode.modeType.NOTELEPHONY,this.evalChangeModePossible(),this.pullTelephonyMode(),this.pullForwardMode()}pullTelephonyMode(){JSON.stringify(this.telephonyMode)!==JSON.stringify(this.previousTelephonyMode)&&(this.logger.debug("[TelephonyAbstractService] pullTelephonyMode : evt trigged : "+JSON.stringify(this.telephonyMode)),this.rxSubject.next(new event_model_1.RBEvent("TELEPHONY_MODE_UPDATED",this.telephonyMode)),this.previousTelephonyMode.setFromData(this.previousTelephonyMode,this.telephonyMode))}async setTelephonyMode(selectedMode,destination=""){if(this.telephonyMode.changeModePossible){if(!this.isSipWise)switch(selectedMode){case telephonyAbstract_model_1.TelephonyMode.modeType.COMPUTER:this.telephonyService.nomadicLogin(this.mediaPillarNumber);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO:this.telephonyService.nomadicLogin(this.contact.mobilePro);break;case telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO:this.telephonyService.nomadicLogin(this.contact.phonePerso);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO:this.telephonyService.nomadicLogin(this.contact.mobilePerso);break;case telephonyAbstract_model_1.TelephonyMode.modeType.OTHERPHONE:this.telephonyService.nomadicLogin(destination);break;case telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE:if(this.contact.mobilePro||this.contact.mobilePerso){const defaultNumber=this.contact.mobilePro?this.contact.mobilePro:this.contact.mobilePerso;await this.telephonyService.nomadicLogin(defaultNumber,!1,!0),await this.telephonyService.nomadicLoginOnOfficePhone()}else this.telephonyService.nomadicLogout()}this.isSipWise&&(selectedMode===telephonyAbstract_model_1.TelephonyMode.modeType.COMPUTER&&this.telephonyMode.computerModeAvailable?this.telephonyService.setSipWiseCurrentDevice(this.webRTCDevice.deviceId):selectedMode===telephonyAbstract_model_1.TelephonyMode.modeType.OFFICEPHONE&&this.telephonyMode.officePhoneModeAvailable&&this.telephonyService.setSipWiseCurrentDevice(this.sipDevice.deviceId),this.mediaPillarPollingManagement(selectedMode))}}getTelephonyMode(){return this.telephonyMode}pullForwardMode(){JSON.stringify(this.forwardMode)!==JSON.stringify(this.previousForwardMode)&&(this.logger.debug("[TelephonyAbstractService] pullForwardMode : evt trigged : "+JSON.stringify(this.forwardMode)),this.rxSubject.next(new event_model_1.RBEvent("FORWARD_MODE_UPDATED",this.forwardMode)),this.previousForwardMode.immediate.setFromData(this.previousForwardMode.immediate,this.forwardMode.immediate),this.previousForwardMode.busy.setFromData(this.previousForwardMode.busy,this.forwardMode.busy),this.previousForwardMode.noreply.setFromData(this.previousForwardMode.busy,this.forwardMode.busy))}async setForwardMode(selectedMode,destination="",callForwardType=forwardMode_model_1.ForwardMode.conditionalForwardType.IMMEDIATE){if(this.forwardMode[callForwardType].changeModePossible)try{if(this.telephonyService.isSipWise()){if(this.telephonyService.isSipWise())switch(selectedMode){case telephonyAbstract_model_1.TelephonyMode.modeType.VOICEMAIL:await this.telephonyService.forwardToVoicemail(callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.CONTACT:await this.telephonyService.sipWiseForwardToDevice(destination,"internalNumber",callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO:await this.telephonyService.sipWiseForwardToDevice(this.contact.mobilePro,"externalNumber",callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO:await this.telephonyService.sipWiseForwardToDevice(this.contact.phonePerso,"externalNumber",callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO:await this.telephonyService.sipWiseForwardToDevice(this.contact.mobilePerso,"externalNumber",callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.OTHERPHONE:await this.telephonyService.sipWiseForwardToDevice(destination,"externalNumber",callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.NOFORWARD:await this.telephonyService.sipWiseCancelForward(callForwardType)}}else switch(selectedMode){case telephonyAbstract_model_1.TelephonyMode.modeType.VOICEMAIL:await this.telephonyService.forwardToVoicemail(callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPRO:await this.telephonyService.forwardToDevice(this.contact.mobilePro,callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.PHONEPERSO:await this.telephonyService.forwardToDevice(this.contact.phonePerso,callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.MOBILEPERSO:await this.telephonyService.forwardToDevice(this.contact.mobilePerso,callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.OTHERPHONE:await this.telephonyService.forwardToDevice(destination,callForwardType);break;case telephonyAbstract_model_1.TelephonyMode.modeType.NOFORWARD:await this.telephonyService.cancelForward()}}catch(error){throw this.logger.error("[TelephonyAbstractService] setForwardMode : error "+error),error}}async onConditionalCallForwardedEvent(__event,forwardObjectAdapter){this.handleCallForwardedState(null,forwardObjectAdapter.busy,forwardMode_model_1.ForwardMode.conditionalForwardType.BUSY),this.handleCallForwardedState(null,forwardObjectAdapter.noreply,forwardMode_model_1.ForwardMode.conditionalForwardType.NOREPLY)}getForwardMode(){return this.forwardMode}}exports.TelephonyAbstractService=TelephonyAbstractService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),personalRoutine_model_1=__webpack_require__(109),xmpp_service_1=__webpack_require__(9),Subject_1=__webpack_require__(77),profile_service_1=__webpack_require__(13),i18n_service_1=__webpack_require__(38);var PersonalRoutineEvent;!function(PersonalRoutineEvent){PersonalRoutineEvent.RAINBOW_ONACTIVATINGPERSONALROUTINE="onactivatingpersonalroutine",PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEACTIVATED="onpersonalroutineactivated",PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEUPDATED="onpersonalroutineupdated",PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINECREATED="onpersonalroutinecreated",PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEDELETED="onpersonalroutinedeleted"}(PersonalRoutineEvent=exports.PersonalRoutineEvent||(exports.PersonalRoutineEvent={}));class PersonalRoutinesService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.i18nService=i18n_service_1.I18nService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.portalURL=config.restServerUrl+"/api/rainbow/voice/v1.0/personalroutines",this.listeners=[],this.xmppMessageHandler=null,this._personalRoutines=[],this._activatingRoutine=!1,this.rxSubject=new Subject_1.Subject}get personalRoutines(){return this._personalRoutines}set personalRoutines(value){this._personalRoutines=value}get activatingRoutine(){return this._activatingRoutine}set activatingRoutine(value){this._activatingRoutine=value,value&&this.sendEvent(PersonalRoutineEvent.RAINBOW_ONACTIVATINGPERSONALROUTINE,null)}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.personalRoutinesService||(win.rainbow.personalRoutinesService=new PersonalRoutinesService),win.rainbow.personalRoutinesService}subscribe(callback){return this.rxSubject.subscribe(callback)}sendEvent(type,value){this.rxSubject.next({type:type,value:value})}async start(fromSDK=!1){try{this.logger.info(""),this.logger.info("[PersonalRoutinesService] === STARTING ==="),this.portalURL=config.restServerUrl+"/api/rainbow/voice/v1.0/personalroutines",this.attachHandlers(),(fromSDK||this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CLOUD_PBX_PERSONAL_ROUTINES))&&await this.retrieveAllPersonalRoutinesFromServer(!0),this.logger.info("[PersonalRoutinesService] === STARTED ===")}catch(error){this.logger.error("[PersonalRoutinesService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info(""),this.logger.info("[PersonalRoutinesService] === STOPPING ==="),this.listeners.forEach(listener=>{listener()}),this.personalRoutines=[],this.logger.info("[PersonalRoutinesService] === STOPPED ===")}async reconnect(attempt=0){if(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CLOUD_PBX_PERSONAL_ROUTINES))try{this.logger.info("[PersonalRoutinesService] reconnect"),attempt++,this.attachHandlers(),await this.retrieveAllPersonalRoutinesFromServer(!0),this.logger.info("[PersonalRoutinesService] reconnect success")}catch(error){this.logger.error("[PersonalRoutinesService] reconnect failure -- "+error.message),1===attempt&&this.reconnect(attempt)}else this.logger.info("[PersonalRoutinesService] === Reconnect skipped ")}attachHandlers(){this.logger.info("[PersonalRoutinesService] attachHandlers"),this.xmppMessageHandler&&(this.xmppService.connection.deleteHandler(this.xmppMessageHandler),this.xmppMessageHandler=null),this.xmppMessageHandler=this.xmppService.connection.addHandler(stanza=>this.onHeadlineMessageReceived(stanza),"","message","headline")}onHeadlineMessageReceived(stanza){try{const personalRoutinesElem=$(stanza).find("personalRoutines"),personalRoutinesModificationElem=personalRoutinesElem.find("personalRoutinesModification");if(personalRoutinesElem&&personalRoutinesElem.length&&personalRoutinesModificationElem&&personalRoutinesModificationElem.length){const routineId=personalRoutinesModificationElem.attr("routineId"),action=personalRoutinesModificationElem.attr("action");switch(this.logger.debug(`[PersonalRoutinesService] onHeadlineMessageReceived -- headline personalRoutines event - ${routineId} - action: ${action}`),action){case"activate":this.onPersonalRoutineActivation(routineId);break;case"update":this.onPersonalRoutineUpdate(routineId);break;case"create":this.onPersonalRoutineCreated(routineId);break;case"delete":this.onPersonalRoutineDeleted(routineId)}}return!0}catch(err){return this.logger.error("[PersonalRoutinesService] onHeadlineMessageReceived -- failure -- "+err.message),!0}}onPersonalRoutineActivation(routineId){this.personalRoutines.forEach(routine=>{routine.id===routineId&&this.logger.info(`[PersonalRoutinesService] Routine "${routine.name}" of type "${routine.type}" activated`),routine.active=routine.id===routineId}),this.activatingRoutine=!1,this.sendEvent(PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEACTIVATED,routineId)}async onPersonalRoutineUpdate(routineId){try{await this.retrievePersonalRoutineFromServer(routineId,!0),this.sendEvent(PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEUPDATED,routineId)}catch(error){this.logger.error("[PersonalRoutinesService] Error retrieving update for routine "+routineId)}}async onPersonalRoutineCreated(routineId){try{this.personalRoutines.some(personalRoutine=>personalRoutine.id===routineId)||await this.retrievePersonalRoutineFromServer(routineId,!0),this.sendEvent(PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINECREATED,routineId)}catch(error){this.logger.error("[PersonalRoutinesService] Error creating routine "+routineId)}}async onPersonalRoutineDeleted(routineId){try{const existingRoutineIndex=this.personalRoutines.findIndex(personalRoutine=>personalRoutine.id===routineId);existingRoutineIndex&&this.personalRoutines.splice(existingRoutineIndex,1),this.sendEvent(PersonalRoutineEvent.RAINBOW_ONPERSONALROUTINEDELETED,routineId)}catch(error){this.logger.error("[PersonalRoutinesService] Error creating routine "+routineId)}}getActiveRoutine(){const activeRoutineIndex=this.personalRoutines.findIndex(routine=>routine.active);return this.personalRoutines[activeRoutineIndex]}getFirstNoWorkRoutine(){const noWorkRoutineIndex=this.personalRoutines.findIndex(routine=>routine.type!==personalRoutine_model_1.PersonalRoutineType.PERSONALROUTINE_ATWORK);return this.personalRoutines[noWorkRoutineIndex]}getPersonalRoutinesExceptWork(){const atWorkRoutineIndex=this.personalRoutines.findIndex(routine=>routine.type===personalRoutine_model_1.PersonalRoutineType.PERSONALROUTINE_ATWORK),allRoutines=[...this.personalRoutines];return allRoutines.splice(atWorkRoutineIndex,1),allRoutines}getRoutineById(routineId){return this.personalRoutines.find(routine=>routine.id===routineId)}async activatePersonalRoutine(routineId,userId){try{if(!routineId)throw new Error("[PersonalRoutinesService] activatePersonalRoutine -- no routineID for activation ");const url=new URL(`${this.portalURL}/${routineId}/activate`);userId&&url.searchParams.set("userId",userId),this.activatingRoutine=!0;const headers=this.authService.getPostHeader(),response=await fetch(url.toString(),{method:"POST",headers:headers});if(!response.ok)throw response;const routinesData=(await response.json()).data;return this.logger.debug("[PersonalRoutinesService] activatePersonalRoutine -- SUCCESS -- "),routinesData}catch(error){this.activatingRoutine=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"activatePersonalRoutine");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}async retrievePersonalRoutineFromServer(routineId,updateLocalData=!1){try{const url=`${this.portalURL}/${routineId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const personalRoutineData=(await response.json()).data;if(updateLocalData){personalRoutineData&&personalRoutineData.name&&(personalRoutineData.type===personalRoutine_model_1.PersonalRoutineType.PERSONALROUTINE_CUSTOM?personalRoutineData.displayName=personalRoutineData.name:personalRoutineData.displayName=this.i18nService.translate(personalRoutineData.name)?this.i18nService.translate(personalRoutineData.name):this.i18nService.translate("atWork"));const personalRoutineIndex=this.personalRoutines.findIndex(personalRoutine=>personalRoutine.id===personalRoutineData.id);if(personalRoutineIndex>-1)this.personalRoutines[personalRoutineIndex].updateRoutineFromData(personalRoutineData),this.logger.info("[PersonalRoutinesService] retrievePersonalRoutineFromServer - updated:\n"+JSON.stringify(this.personalRoutines[personalRoutineIndex]));else{const newRoutine=personalRoutine_model_1.PersonalRoutine.createRoutineFromData(personalRoutineData);this.personalRoutines.push(newRoutine),this.logger.info("[PersonalRoutinesService] retrievePersonalRoutineFromServer - Created:\n"+JSON.stringify(newRoutine))}}return this.logger.debug("[PersonalRoutinesService] retrievePersonalRoutineFromServer -- SUCCESS -- "),personalRoutineData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getPersonalRoutine");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}async retrieveAllPersonalRoutinesFromServer(updateLocalData=!1){try{this.logger.info("[PersonalRoutinesService] retrieveAllPersonalRoutinesFromServer");const url=""+this.portalURL,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const personalRoutinesData=(await response.json()).data;if(updateLocalData&&personalRoutinesData.routines&&personalRoutinesData.routines.length){this.personalRoutines=[];const promiseChain=[];personalRoutinesData.routines.forEach(routineInfo=>{routineInfo.id&&promiseChain.push(this.retrievePersonalRoutineFromServer(routineInfo.id,!0))}),await Promise.all(promiseChain)}return personalRoutinesData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAllPersonalRoutines");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}async updatePersonalRoutine(routineId,data){try{if(!routineId)throw new Error("[PersonalRoutinesService] updatePersonalRoutine -- no routineID for update ");const url=`${this.portalURL}/${routineId}`,headers=this.authService.getPostHeader();data&&data.immediateCallForward&&"doNotForward"===data.immediateCallForward.destinationType?(data.immediateCallForward.destinationType=null,data.immediateCallForward.activate=!1):data&&data.busyCallForward&&"doNotForward"===data.busyCallForward.destinationType?(data.busyCallForward.destinationType=null,data.busyCallForward.activate=!1):data&&data.noreplyCallForward&&"doNotForward"===data.noreplyCallForward.destinationType?(data.noreplyCallForward.destinationType=null,data.noreplyCallForward.activate=!1):data&&data.cliOptions&&""===data.cliOptions.phoneNumberId&&delete data.cliOptions.phoneNumberId;const response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw response;const routinesData=(await response.json()).data;return this.logger.debug("[PersonalRoutinesService] updatePersonalRoutine -- SUCCESS -- "),routinesData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updatePersonalRoutine");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}async createCustomPersonalRoutine(name){try{if(!name)throw new Error("[PersonalRoutinesService] createCustomPersonalRoutine -- mandatory namle for custom routine");const url=""+this.portalURL,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify({name:name})});if(!response.ok)throw response;const personalRoutineData=(await response.json()).data;return this.logger.debug("[PersonalRoutinesService] updatePersonalRoutine -- SUCCESS -- "),personalRoutineData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createCustomPersonalRoutine");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}async deleteCustomPersonalRoutine(routineId){try{if(!routineId)throw new Error("[PersonalRoutinesService] deleteCustomPersonalRoutine -- no routineID for delete ");const url=`${this.portalURL}/${routineId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteCustomPersonalRoutine");throw this.logger.error("[PersonalRoutinesService] "+errorInfo.message),errorInfo.error}}}exports.PersonalRoutinesService=PersonalRoutinesService},function(module,exports){Strophe.addConnectionPlugin("ping",{_c:null,init:function(conn){this._c=conn,Strophe.addNamespace("PING","urn:xmpp:ping")},ping:function(jid,success,error,timeout){const id=this._c.getUniqueId("ping"),iq=$iq({type:"get",to:jid,id:id}).c("ping",{xmlns:Strophe.NS.PING});this._c.sendIQ(iq,success,error,timeout)},pong:function(ping){const from=ping.getAttribute("from"),id=ping.getAttribute("id"),iq=$iq({type:"result",to:from,id:id});this._c.sendIQ(iq)},addPingHandler:function(handler){return this._c.addHandler(handler,Strophe.NS.PING,"iq","get")}})},function(module,exports){Strophe.addConnectionPlugin("lastactivity",{_c:null,_n:0,init:function(conn){this._c=conn,Strophe.addNamespace("LAST_ACTIVITY","jabber:iq:last")},query:function(jid,options){const attr={type:"get",id:"lastActivityId"+this._n++,from:this._c.jid,to:jid},lastActivityAttr={xmlns:Strophe.NS.LAST_ACTIVITY},iq=$iq(attr).c("query",lastActivityAttr),onResponse=options.onResponse;return delete options.onResponse,this._c.addHandler(null,Strophe.NS.LAST_ACTIVITY,"message",null),this._c.sendIQ(iq,onResponse)}})},function(module,exports){Strophe.addConnectionPlugin("mam",{_c:null,_p:["with","start","end"],init:function(conn){this._c=conn,Strophe.addNamespace("MAM","urn:xmpp:mam:1")},query:function(jid,options){const _p=this._p,attr={type:"set",id:jid},mamAttr={xmlns:Strophe.NS.MAM};options.queryid&&(mamAttr.queryid=options.queryid,delete options.queryid);const iq=$iq(attr).c("query",mamAttr).c("x",{xmlns:"jabber:x:data",type:"submit"});let i;for(iq.c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up(),i=0;i<this._p.length;i++){const pn=_p[i],p=options[pn];delete options[pn],p&&iq.c("field",{var:pn}).c("value").t(p).up().up()}iq.up(),delete options.onMessage;const onComplete=options.onComplete;return delete options.onComplete,iq.cnode(new Strophe.RSM(options).toXML()),this._c.sendIQ(iq,onComplete)},querymuc:function(jid,to,options){const _p=this._p,attr={to:to,type:"set",id:jid},mamAttr={xmlns:Strophe.NS.MAM};options.queryid&&(mamAttr.queryid=options.queryid,delete options.queryid);const iq=$iq(attr).c("query",mamAttr).c("x",{xmlns:"jabber:x:data",type:"submit"});let i;for(iq.c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t(Strophe.NS.MAM).up().up(),i=0;i<this._p.length;i++){const pn=_p[i],p=options[pn];delete options[pn],p&&iq.c("field",{var:pn}).c("value").t(p).up().up()}iq.up();const onComplete=options.onComplete;return delete options.onComplete,iq.cnode(new Strophe.RSM(options).toXML()),this._c.sendIQ(iq,onComplete)},delete:function(queryId,options){const _p=this._p,attr={type:"set",id:queryId},mamAttr={xmlns:Strophe.NS.MAM};options.queryid&&(mamAttr.queryid=options.queryid,delete options.queryid);const iq=$iq(attr).c("delete",mamAttr).c("x",{xmlns:"jabber:x:data",type:"submit"});let i;for(iq.c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t(Strophe.NS.MAM).up().up(),i=0;i<this._p.length;i++){const attribKey=_p[i],attribValue=options[attribKey];attribValue&&iq.c("field",{var:attribKey}).c("value").t(attribValue).up().up()}iq.up(),delete options.onMessage;const onComplete=options.onComplete;return delete options.onComplete,iq.cnode(new Strophe.RSM(options).toXML()),this._c.sendIQ(iq,onComplete)}})},function(module,exports){Strophe.addConnectionPlugin("calllog",{_c:null,_p:["with"],init:function(conn){this._c=conn,Strophe.addNamespace("CALLLOG","jabber:iq:telephony:call:log")},query:function(jid,options){const _p=this._p,attr={type:"set",id:130,from:jid},mamAttr={xmlns:Strophe.NS.CALLLOG},iq=$iq(attr).c("query",mamAttr).c("x",{xmlns:"jabber:x:data",type:"submit"});let i;for(iq.c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("jabber:iq:telephony:call:log").up().up(),i=0;i<this._p.length;i++){const pn=_p[i],p=options[pn];delete options[pn],p&&iq.c("field",{var:pn}).c("value").t(p).up().up()}iq.up(),options.onMessage,delete options.onMessage;const onComplete=options.onComplete;return delete options.onComplete,iq.cnode(new Strophe.RSM(options).toXML()),this._c.sendIQ(iq,onComplete)}})},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_logger_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(14);Strophe.addConnectionPlugin("jingle",{connection:null,sessions:{},jid2session:{},ice_config:{iceServers:[]},company_config:{},pc_constraints:{rtcpMuxPolicy:"require",bundlePolicy:"max-bundle"},media_constraints:{},localStream:null,connectionRef:null,jingleIqTimeout:15e3,init:function(conn){this.connection=conn,this.connection.disco&&(this.connection.disco.addFeature("urn:xmpp:jingle:1"),this.connection.disco.addFeature("urn:xmpp:jingle:apps:rtp:1"),this.connection.disco.addFeature("urn:xmpp:jingle:transports:ice-udp:1"),this.connection.disco.addFeature("urn:xmpp:jingle:apps:rtp:audio"),this.connection.disco.addFeature("urn:xmpp:jingle:apps:rtp:video"),this.connection.disco.addFeature("urn:ietf:rfc:5761")),this.connectionRef&&(this.connection.deleteHandler(this.connectionRef),this.connectionRef=null),config&&config.jingleIqTimeout?this.jingleIqTimeout=config.jingleIqTimeout:this.jingleIqTimeout=15e3,this.connectionRef=this.connection.addHandler(this.onJingle.bind(this),"urn:xmpp:jingle:1","iq","set",null,null);for(const key in this.sessions)if(this.sessions.hasOwnProperty(key)){this.sessions[key].connection=this.connection}this.rxSubject||(this.rxSubject=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a),this.logger=rainbow_sdk_services_core_logger_service__WEBPACK_IMPORTED_MODULE_0__.LoggerService.getInstance()},attachHandlers:function(){this.connectionRef&&(this.connection.deleteHandler(this.connectionRef),this.connectionRef=null),this.connectionRef=this.connection.addHandler(this.onJingle.bind(this),"urn:xmpp:jingle:1","iq","set",null,null)},onJingle:function(iq){console.log("[Strophe.jingle] onJingle");try{const sid=$(iq).find("jingle").attr("sid"),action=$(iq).find("jingle").attr("action"),ack=$iq({type:"result",to:iq.getAttribute("from"),id:iq.getAttribute("id")});let sess=this.sessions[sid];if("session-initiate"!==action){if(null==sess)return ack.type="error",ack.c("error",{type:"cancel"}).c("item-not-found",{xmlns:"urn:ietf:params:xml:ns:xmpp-stanzas"}).up().c("unknown-session",{xmlns:"urn:xmpp:jingle:errors:1"}),this.connection.send(ack),$(document).trigger("callterminated.jingle",[sid]),this.rxSubject.next({name:"callterminated.jingle",data:{sid:sid}}),!0;if(Strophe.getBareJidFromJid(iq.getAttribute("from"))!=Strophe.getBareJidFromJid(sess.peerjid))return console.warn("[Strophe.jingle] jid mismatch for session id",sid,iq.getAttribute("from"),sess.peerjid),ack.type="error",ack.c("error",{type:"cancel"}).c("item-not-found",{xmlns:"urn:ietf:params:xml:ns:xmpp-stanzas"}).up().c("unknown-session",{xmlns:"urn:xmpp:jingle:errors:1"}),this.connection.send(ack),!0}else if(void 0!==sess)return ack.type="error",ack.c("error",{type:"cancel"}).c("service-unavailable",{xmlns:"urn:ietf:params:xml:ns:xmpp-stanzas"}).up(),console.warn("[Strophe.jingle] duplicate session id",sid),this.connection.send(ack),!0;switch("transport-replace"!==action&&this.connection.send(ack),action){case"session-initiate":var remoteType=$(iq).find("jingle").attr("localType");console.log("REMOTE TYPE || "+remoteType),sess=new JingleSession($(iq).attr("to"),$(iq).find("jingle").attr("sid"),this.connection,this.jingleIqTimeout),sess.media_constraints=this.media_constraints,sess.pc_constraints=this.pc_constraints,sess.ice_config=this.ice_config,sess.company_config=this.company_config,sess.logger=this.logger;var conference_id=$(iq).find("conference").attr("id");conference_id&&(sess.conference_id=conference_id),sess.initiate($(iq).attr("from"),!1),sess.remoteType=remoteType,sess.confId=$(iq).find("jingle").attr("confId"),sess.publisherId=$(iq).find("conference").attr("publisherId"),sess.replaceSid=$(iq).find("replaces").attr("sid"),sess.setRemoteDescription($(iq).find(">jingle"),"offer"),this.sessions[sess.sid]=sess,this.jid2session[sess.peerjid]=sess,$(document).trigger("callincoming.jingle",[sess.sid]),this.rxSubject.next({name:"jingleSessionInvitation",data:{sid:sess.sid}});break;case"transport-replace":sess.isReconnecting=!0,console.log("[strophe jingle] Transport replace");remoteType=$(iq).find("jingle").attr("localType");console.log("REMOTE TYPE || "+remoteType),sess.media_constraints=this.media_constraints,sess.pc_constraints=this.pc_constraints,sess.ice_config=this.ice_config,sess.company_config=this.company_config,sess.remoteType=remoteType,this.sessions[sess.sid]=sess,this.jid2session[sess.peerjid]=sess,sess.hasSentTransportReplace?(console.log("[strophe jingle] Transport replace -- put on hold"),sess.saveIncomingTransportReplace($(iq).find(">jingle"),"offer",ack)):(console.log("[strophe jingle] Transport replace is accepted"),this.connection.send(ack),sess.setRemoteDescription($(iq).find(">jingle"),"offer"),this.rxSubject.next({name:"transportreplace.jingle",data:{sid:sess.sid}}));break;case"session-accept":sess.setRemoteDescription($(iq).find(">jingle"),"answer");remoteType=$(iq).find(">jingle").attr("localType");sess.remoteType=remoteType,console.log("REMOTE TYPE || session-accept remoteType "+sess.remoteType),console.log("REMOTE TYPE || session-accept localType "+sess.localType),sess.accept(),this.rxSubject.next({name:"callaccepted.jingle",data:{sid:sess.sid}});break;case"transport-accept":sess.setRemoteDescription($(iq).find(">jingle"),"answer"),sess.isReconnecting=!1;remoteType=$(iq).find(">jingle").attr("localType");sess.remoteType=remoteType,console.log("REMOTE TYPE || transport-accept remoteType "+sess.remoteType),console.log("REMOTE TYPE || transport-accept localType "+sess.localType),this.rxSubject.next({name:"callaccepted.jingle",data:{sid:sess.sid}});break;case"session-terminate":sess.terminate(),this.terminate(sess.sid),$(iq).find(">jingle>conference").length&&$(iq).find(">jingle>conference").attr("reason")?($(document).trigger("callterminated.jingle",[sess.sid,"multi-device"]),this.rxSubject.next({name:"callterminated.jingle",data:{sid:sess.sid,confId:sess.conference_id,reason:"multi-device"}})):$(iq).find(">jingle>reason").length?($(document).trigger("callterminated.jingle",[sess.sid,$(iq).find(">jingle>reason>:first")[0].tagName,$(iq).find(">jingle>reason>text").text()]),this.rxSubject.next({name:"callterminated.jingle",data:{sid:sess.sid,confId:sess.conference_id,reason:$(iq).find(">jingle>reason>:first")[0].tagName,reasonText:$(iq).find(">jingle>reason>text").text()}})):($(document).trigger("callterminated.jingle",[sess.sid]),this.rxSubject.next({name:"callterminated.jingle",data:{sid:sess.sid,confId:sess.conference_id}}));break;case"transport-info":console.log("[JINGLE] transport-info"),sess.addIceCandidate($(iq).find(">jingle>content"));break;case"session-info":if($(iq).find('>jingle>ringing[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length)this.rxSubject.next({name:"ringing.jingle",data:{sid:sess.sid}});else if($(iq).find('>jingle>iceFailed[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length)this.logger.warn("[JINGLE] remoteIceFailed.jingle for "+sess.sid);else if($(iq).find('>jingle>hold[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length)this.rxSubject.next({name:"hold.jingle",data:{sid:sess.sid}});else if($(iq).find('>jingle>unhold[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length)this.rxSubject.next({name:"unhold.jingle",data:{sid:sess.sid}});else if($(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length){const status=$(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("status"),confEndpointId=$(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("confEndpointId"),referTo=$(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("referTo"),method=$(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("method"),otherSid=$(iq).find('>jingle>refer[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("sid");$(document).trigger("refer.jingle",[sess.sid,status,confEndpointId,referTo,method]),this.rxSubject.next({name:"refer.jingle",data:{sid:sess.sid,status:status,confEndpointId:confEndpointId,referTo:referTo,method:method,otherSid:otherSid}})}else if($(iq).find('>jingle>slowlink[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').length){const direction=$(iq).find('>jingle>slowlink[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("direction"),media=$(iq).find('>jingle>slowlink[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("media"),lost=$(iq).find('>jingle>slowlink[xmlns="urn:xmpp:jingle:apps:rtp:info:1"]').attr("lost");this.rxSubject.next({name:"slowlink.jingle",data:{sid:sess.sid,direction:direction,media:media,lost:lost}})}break;case"content-add":console.log("[Strophe Jingle] Content-add");var mediaType=$(iq).find(">jingle").attr("mediaType");sess.remoteType=mediaType,console.log("REMOTE TYPE || content-add remoteType "+sess.remoteType),console.log("REMOTE TYPE || content-add localType "+sess.localType),sess.setRemoteDescription($(iq).find(">jingle"),"offer"),sess.mediaModified(),"BUNDLE"===$(iq).find("group").attr("semantics")&&sess.conference_id&&-1!==sess.conference_id?this.rxSubject.next({name:"jingleContentAdd",data:{sid:sess.sid,mediaType:mediaType}}):this.rxSubject.next({name:"mediamodified.jingle",data:{sid:sess.sid,mediaType:mediaType}});break;case"content-modify":console.log("[Strophe Jingle] Content-modify");mediaType=$(iq).find(">jingle").attr("mediaType");if(sess.remoteType=mediaType,console.log("REMOTE TYPE || content-modify remoteType "+sess.remoteType),console.log("REMOTE TYPE || content-modify localType "+sess.localType),sess.setRemoteDescription($(iq).find(">jingle"),"offer"),sess.mediaModified(),"BUNDLE"===$(iq).find("group").attr("semantics")&&sess.conference_id&&-1!==sess.conference_id){const medias={};$(iq).find("jingle").find("content").each((__index,contentElem)=>{medias[$(contentElem).attr("name")]="none"!==$(contentElem).attr("senders")}),this.connection.jingle.rxSubject.next({name:"jingleUpdateStream",data:{sid:sess.sid,medias:medias}})}else this.rxSubject.next({name:"mediamodified.jingle",data:{sid:sess.sid,mediaType:mediaType}});break;case"content-remove":console.log("[Strophe Jingle] Content-remove");mediaType=$(iq).find(">jingle").attr("mediaType");sess.remoteType=mediaType,console.log("REMOTE TYPE || Content-remove remoteType "+sess.remoteType),console.log("REMOTE TYPE || Content-remove localType "+sess.localType),sess.setRemoteDescription($(iq).find(">jingle"),"offer"),sess.mediaModified(!0),this.rxSubject.next({name:"mediamodified.jingle",data:{sid:sess.sid,mediaType:mediaType}}),this.rxSubject.next({name:"contentRemove.jingle",data:{sid:sess.sid,mediaType:mediaType}});break;case"content-accept":console.log("[Strophe Jingle] Content-accept"),sess.isReconnecting=!1,sess.setRemoteDescription($(iq).find(">jingle"),"answer");break;case"addsource":sess.addSource($(iq).find(">jingle>content"));break;case"removesource":sess.removeSource($(iq).find(">jingle>content"));break;default:console.warn("[Strophe.jingle] jingle action not implemented",action)}}catch(error){return console.error("[Strophe.jingle] On Jingle error catch: "+error),!0}return!0},initiate:function(peerjid,myjid,localType,streams,sid,confid,phoneNumber,forceTurn,isEchoTest,otherSid){const id=sid||"web_"+Math.random().toString(36).substr(2,12),sess=new JingleSession(myjid||this.connection.jid,id,this.connection,this.jingleIqTimeout);if(streams&&streams.length)for(let i=0;i<streams.length;i++)sess.localStreams.push(streams[i]);return this.ice_config.iceTransportPolicy=forceTurn?"relay":"all",sess.media_constraints=this.media_constraints,sess.ice_config=this.ice_config,sess.company_config=this.company_config,sess.logger=this.logger,sess.replaceSid=otherSid,localType&&(sess.localType=localType),void 0!==confid&&(sess.conference_id=confid),sess.calledNumber=phoneNumber&&""!==phoneNumber?phoneNumber:null,isEchoTest&&(sess.isEchoTest=!0),sess.initiate(peerjid,!0),this.sessions[sess.sid]=sess,this.jid2session[sess.peerjid]=sess,window.setTimeout(()=>{sess.sendOffer(!0)},100),sess},initiateBundle:function(peerjid,myjid,mediaStream,confId){return(async(jingleJid,userJid,stream,conferenceId)=>{const id=Math.random().toString(36).slice(2,12),session=new JingleSession(userJid,id,this.connection,this.jingleIqTimeout);return session.localType="audio+video",session.media_constraints=this.media_constraints,session.ice_config=this.ice_config,session.company_config=this.company_config,session.logger=this.logger,session.conference_id=conferenceId,session.localStreams.push(stream),this.ice_config.iceTransportPolicy="all",session.initiate(jingleJid,!0,!1),await session.addBundleStream(stream),this.sessions[session.sid]=session,this.jid2session[session.peerjid]=session,session.sendOffer(!0),session})(peerjid,myjid,mediaStream,confId)},terminate:function(sid,reason,text){if(null==sid)for(sid in this.sessions)"ended"!=this.sessions[sid].state&&(this.sessions[sid].sendTerminate(reason||(this.sessions[sid].active()?null:"cancel"),text),this.sessions[sid].terminate()),delete this.jid2session[this.sessions[sid].peerjid],delete this.sessions[sid];else this.sessions.hasOwnProperty(sid)&&("ended"!=this.sessions[sid].state&&(this.sessions[sid].sendTerminate(reason||(this.sessions[sid].active()?null:"cancel"),text),this.sessions[sid].terminate()),delete this.jid2session[this.sessions[sid].peerjid],delete this.sessions[sid])},terminateByJid:function(jid){if(this.jid2session.hasOwnProperty(jid)){const sess=this.jid2session[jid];sess&&(sess.terminate(),delete this.sessions[sess.sid],delete this.jid2session[jid],$(document).trigger("callterminated.jingle",[sess.sid,"gone"]),this.rxSubject.next({name:"callterminated.jingle",data:{sid:sess.sid,confId:sess.conference_id,reason:"gone"}}))}}})},function(module,exports){window.SDP=function(sdp){this.media=sdp.split("\r\nm=");for(let i=1;i<this.media.length;i++)this.media[i]="m="+this.media[i],i!=this.media.length-1&&(this.media[i]+="\r\n");this.session=this.media.shift()+"\r\n",this.raw=this.session+this.media.join("")},SDP.prototype.mangle=function(){let i,j,mline,lines,rtpmap,newdesc;for(i=0;i<this.media.length;i++)if(lines=this.media[i].split("\r\n"),lines.pop(),mline=SDPUtil.parse_mline(lines.shift()),"audio"==mline.media){for(newdesc="",mline.fmt.length=0,j=0;j<lines.length;j++)if("a=rtpmap:"==lines[j].substr(0,9)){if(rtpmap=SDPUtil.parse_rtpmap(lines[j]),"CN"==rtpmap.name||"ISAC"==rtpmap.name)continue;mline.fmt.push(rtpmap.id),newdesc+=lines[j]+"\r\n"}else newdesc+=lines[j]+"\r\n";this.media[i]=SDPUtil.build_mline(mline)+"\r\n",this.media[i]+=newdesc}this.raw=this.session+this.media.join("")},SDP.prototype.removeSessionLines=function(prefix){const self=this,lines=SDPUtil.find_lines(this.session,prefix);return lines.forEach((function(line){self.session=self.session.replace(line+"\r\n","")})),this.raw=this.session+this.media.join(""),lines},SDP.prototype.removeMediaLines=function(mediaindex,prefix){const self=this,lines=SDPUtil.find_lines(this.media[mediaindex],prefix);return lines.forEach((function(line){self.media[mediaindex]=self.media[mediaindex].replace(line+"\r\n","")})),this.raw=this.session+this.media.join(""),lines},SDP.prototype.toJingle=function(elem,thecreator,confId,bandwidthLimit){let i,j,k,mline,ssrc,rtpmap,tmp,lines,simulcast,indexMline=0;if(SDPUtil.find_line(this.session,"a=group:"))for(lines=SDPUtil.find_lines(this.session,"a=group:"),i=0;i<lines.length;i++){tmp=lines[i].split(" ");const semantics=tmp.shift().substr(8);for(elem.c("group",{xmlns:"urn:xmpp:jingle:apps:grouping:0",semantics:semantics}),j=0;j<tmp.length;j++)elem.c("content",{name:tmp[j]}).up();elem.up()}let bundle=[];for(SDPUtil.find_line(this.session,"a=group:BUNDLE")&&(bundle=SDPUtil.find_line(this.session,"a=group:BUNDLE ").split(" "),bundle.shift()),i=0;i<this.media.length;i++)if(mline=SDPUtil.parse_mline(this.media[i].split("\r\n")[0]),"audio"==mline.media||"video"==mline.media){if(ssrc=!!SDPUtil.find_line(this.media[i],"a=ssrc:")&&SDPUtil.find_line(this.media[i],"a=ssrc:").substring(7).split(" ")[0],simulcast=!!SDPUtil.find_line(this.media[i],"a=simulcast:")&&SDPUtil.find_line(this.media[i],"a=simulcast:").substring(12).trim(),elem.c("content",{creator:thecreator,name:mline.media}),SDPUtil.find_line(this.media[i],"a=mid:")){const mid=SDPUtil.parse_mid(SDPUtil.find_line(this.media[i],"a=mid:"));elem.attrs({name:mid})}if(SDPUtil.find_line(this.media[i],"a=rtpmap:").length){if(elem.c("description",{xmlns:"urn:xmpp:jingle:apps:rtp:1",media:mline.media}),ssrc&&elem.attrs({ssrc:ssrc}),(!confId||-1===confId)&&"video"===mline.media){const value=0===indexMline?bandwidthLimit.video:bandwidthLimit.sharing;indexMline+=1,elem.c("bandwidth",{type:"AS"}).t(value),elem.up()}for(j=0;j<mline.fmt.length;j++)if(rtpmap=SDPUtil.find_line(this.media[i],"a=rtpmap:"+mline.fmt[j]+" "),rtpmap){if(elem.c("payload-type",SDPUtil.parse_rtpmap(rtpmap)),SDPUtil.find_line(this.media[i],"a=fmtp:"+mline.fmt[j]+" "))for(tmp=SDPUtil.parse_fmtp(SDPUtil.find_line(this.media[i],"a=fmtp:"+mline.fmt[j]+" ")),k=0;k<tmp.length;k++)elem.c("parameter",tmp[k]).up();this.RtcpFbToJingle(i,elem,mline.fmt[j]),elem.up()}if(SDPUtil.find_line(this.media[i],"a=crypto:",this.session)){elem.c("encryption",{required:1});SDPUtil.find_lines(this.media[i],"a=crypto:",this.session).forEach((function(line){elem.c("crypto",SDPUtil.parse_crypto(line)).up()})),elem.up()}if(ssrc){elem.c("source",{ssrc:ssrc,xmlns:"urn:xmpp:jingle:apps:rtp:ssma:0"});SDPUtil.find_lines(this.media[i],"a=ssrc:").forEach((function(line){const idx=line.indexOf(" "),linessrc=line.substr(0,idx).substr(7);linessrc!=ssrc&&(elem.up(),ssrc=linessrc,elem.c("source",{ssrc:ssrc,xmlns:"urn:xmpp:jingle:apps:rtp:ssma:0"}));const kv=line.substr(idx+1);elem.c("parameter"),-1==kv.indexOf(":")?elem.attrs({name:kv}):(elem.attrs({name:kv.split(":",2)[0]}),elem.attrs({value:kv.split(":",2)[1]})),elem.up()})),elem.up()}if(simulcast){elem.c("simulcast",{rids:simulcast,xmlns:"urn:xmpp:jingle:apps:rtp:sim:0"});SDPUtil.find_lines(this.media[i],"a=rid:").forEach((function(line){const idx=line.indexOf(" "),ridName=line.substr(0,idx).substr(6);elem.c("rid",{xmlns:"urn:xmpp:jingle:apps:rtp:rid:0",name:ridName}),elem.up()})),elem.up()}if(SDPUtil.find_lines(this.media[i],"a=ssrc-group").forEach((function(line){let idx=line.indexOf(" ");const semantics=line.substr(0,idx).substr(13);elem.c("ssrc-group",{xmlns:"urn:xmpp:jingle:apps:rtp:ssma:0",semantics:semantics});let kv=line.substr(idx+1);for(;kv.length>0;){var ssrc_gr;idx=kv.indexOf(" "),idx>0?(ssrc_gr=kv.substr(0,idx),kv=kv.substr(idx+1)):(ssrc_gr=kv.substr(0,kv.length),kv=""),elem.c("source",{ssrc:ssrc_gr}).up()}elem.up()})),SDPUtil.find_line(this.media[i],"a=rtcp-mux")&&elem.c("rtcp-mux").up(),this.RtcpFbToJingle(i,elem,"*"),SDPUtil.find_line(this.media[i],"a=extmap:"))for(lines=SDPUtil.find_lines(this.media[i],"a=extmap:"),j=0;j<lines.length;j++){if(tmp=SDPUtil.parse_extmap(lines[j]),elem.c("rtp-hdrext",{xmlns:"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0",uri:tmp.uri,id:tmp.value}),tmp.hasOwnProperty("direction"))switch(tmp.direction){case"sendonly":elem.attrs({senders:"responder"});break;case"recvonly":elem.attrs({senders:"initiator"});break;case"sendrecv":elem.attrs({senders:"both"});break;case"inactive":elem.attrs({senders:"none"})}elem.up()}elem.up()}this.TransportToJingle(i,elem),SDPUtil.find_line(this.media[i],"a=sendrecv",this.session)?elem.attrs({senders:"both"}):SDPUtil.find_line(this.media[i],"a=sendonly",this.session)?elem.attrs({senders:"initiator"}):SDPUtil.find_line(this.media[i],"a=recvonly",this.session)?elem.attrs({senders:"responder"}):SDPUtil.find_line(this.media[i],"a=inactive",this.session)&&elem.attrs({senders:"none"}),"0"!=mline.port||SDPUtil.find_line(this.media[i],"a=bundle-only",this.session)||elem.attrs({senders:"rejected"}),elem.up()}return confId&&-1!==confId&&(elem.c("conference",{xmlns:"urn:xmpp:janus:1",id:confId}),elem.up()),elem.up(),elem},SDP.prototype.TransportToJingle=function(mediaindex,elem){let tmp;const self=this;elem.c("transport");if(SDPUtil.find_lines(this.media[mediaindex],"a=fingerprint:",this.session).forEach((function(line){tmp=SDPUtil.parse_fingerprint(line),tmp.xmlns="urn:xmpp:jingle:apps:dtls:0",elem.c("fingerprint").t(tmp.fingerprint),delete tmp.fingerprint,(line=SDPUtil.find_line(self.media[mediaindex],"a=setup:",self.session))&&(tmp.setup=line.substr(8)),elem.attrs(tmp),elem.up()})),tmp=SDPUtil.iceparams(this.media[mediaindex],this.session),tmp&&(tmp.xmlns="urn:xmpp:jingle:transports:ice-udp:1",elem.attrs(tmp),SDPUtil.find_line(this.media[mediaindex],"a=candidate:",this.session))){SDPUtil.find_lines(this.media[mediaindex],"a=candidate:",this.session).forEach((function(line){elem.c("candidate",SDPUtil.candidateToJingle(line)).up()}))}elem.up()},SDP.prototype.RtcpFbToJingle=function(mediaindex,elem,payloadtype){SDPUtil.find_lines(this.media[mediaindex],"a=rtcp-fb:"+payloadtype).forEach((function(line){const tmp=SDPUtil.parse_rtcpfb(line);"trr-int"==tmp.type?(elem.c("rtcp-fb-trr-int",{xmlns:"urn:xmpp:jingle:apps:rtp:rtcp-fb:0",value:tmp.params[0]}),elem.up()):(elem.c("rtcp-fb",{xmlns:"urn:xmpp:jingle:apps:rtp:rtcp-fb:0",type:tmp.type}),tmp.params.length>0&&elem.attrs({subtype:tmp.params[0]}),elem.up())}))},SDP.prototype.RtcpFbFromJingle=function(elem,payloadtype){let media="",tmp=elem.find('>rtcp-fb-trr-int[xmlns="urn:xmpp:jingle:apps:rtp:rtcp-fb:0"]');return tmp.length&&(media+="a=rtcp-fb:* trr-int ",tmp.attr("value")?media+=tmp.attr("value"):media+="0",media+="\r\n"),tmp=elem.find('>rtcp-fb[xmlns="urn:xmpp:jingle:apps:rtp:rtcp-fb:0"]'),tmp.each((function(){media+="a=rtcp-fb:"+payloadtype+" "+$(this).attr("type"),$(this).attr("subtype")&&(media+=" "+$(this).attr("subtype")),media+="\r\n"})),media},SDP.prototype.fromJingle=function(jingle){const self=this;if(this.raw="v=0\r\no=- 1923518516 2 IN IP4 0.0.0.0\r\ns=-\r\nt=0 0\r\n",$(jingle).find('>group[xmlns="urn:xmpp:jingle:apps:grouping:0"]').length)$(jingle).find('>group[xmlns="urn:xmpp:jingle:apps:grouping:0"]').each((function(idx,group){const contents=$(group).find(">content").map((function(idx,content){return content.getAttribute("name")})).get();contents.length>0&&(self.raw+="a=group:"+(group.getAttribute("semantics")||group.getAttribute("type"))+" "+contents.join(" ")+"\r\n")}));else if($(jingle).find('>group[xmlns="urn:ietf:rfc:5888"]').length)$(jingle).find('>group[xmlns="urn:ietf:rfc:5888"]').each((function(idx,group){const contents=$(group).find(">content").map((function(idx,content){return content.getAttribute("name")})).get();null!==group.getAttribute("type")&&contents.length>0&&(self.raw+="a=group:"+group.getAttribute("type")+" "+contents.join(" ")+"\r\n")}));else{const bundle=$(jingle).find(">content").filter((function(idx,content){return $(content).find(">bundle").length>0})).map((function(idx,content){return content.getAttribute("name")})).get();bundle.length&&(this.raw+="a=group:BUNDLE "+bundle.join(" ")+"\r\n")}this.raw+="a=ice-options:trickle\r\n",this.session=this.raw,jingle.find(">content").each((function(){const m=self.jingle2media($(this));self.media.push(m)}));const msid=SDPUtil.parse_ssrc(this.raw);msid.hasOwnProperty("mslabel")&&msid.mslabel&&(this.session+="a=msid-semantic: WMS "+msid.mslabel+"\r\n"),this.raw=this.session+this.media.join("")},SDP.prototype.jingle2media=function(content){let media="";const desc=content.find("description"),self=(desc.attr("ssrc"),this);let tmp;tmp={media:desc.attr("media")},tmp.port="1","rejected"==content.attr("senders")&&(tmp.port="0"),content.find(">transport>fingerprint").length||desc.find("encryption").length?tmp.proto="RTP/SAVPF":tmp.proto="RTP/AVPF",tmp.fmt=desc.find("payload-type").map((function(){return this.getAttribute("id")})).get();let bandwidthLimit=desc.find("bandwidth").map((function(){return $(this).text()}));if(bandwidthLimit=bandwidthLimit.length?bandwidthLimit[0]:null,media+=SDPUtil.build_mline(tmp)+"\r\n",media+="c=IN IP4 0.0.0.0\r\n",bandwidthLimit){bandwidthLimit=parseInt(bandwidthLimit);let modifier="AS";"firefox"===adapter.default.browserDetails.browser&&(bandwidthLimit=1e3*(bandwidthLimit>>>0),modifier="TIAS"),media+="b="+modifier+":"+bandwidthLimit+"\r\n"}if(media+="a=rtcp:1 IN IP4 0.0.0.0\r\n",tmp=content.find('>transport[xmlns="urn:xmpp:jingle:transports:ice-udp:1"]'),tmp.length&&(tmp.attr("ufrag")&&(media+=SDPUtil.build_iceufrag(tmp.attr("ufrag"))+"\r\n"),tmp.attr("pwd")&&(media+=SDPUtil.build_icepwd(tmp.attr("pwd"))+"\r\n"),tmp.find(">fingerprint").each((function(){media+="a=fingerprint:"+this.getAttribute("hash"),media+=" "+$(this).text(),media+="\r\n",this.getAttribute("setup")&&(media+="a=setup:"+this.getAttribute("setup")+"\r\n")}))),tmp=content.find('description>simulcast[xmlns="urn:xmpp:jingle:apps:rtp:sim:0"]'),tmp.length){const rids=tmp.attr("rids");rids&&(media+="a=simulcast: "+rids+"\r\n"),tmp.find(">rid").each((function(){media+="a=rid:"+this.getAttribute("name")+" recv",media+="\r\n"}))}switch(content.attr("senders")){case"initiator":media+="a=sendonly\r\n";break;case"responder":media+="a=recvonly\r\n";break;case"none":media+="a=inactive\r\n";break;case"both":media+="a=sendrecv\r\n"}return media+="a=mid:"+content.attr("name")+"\r\n",desc.find("rtcp-mux").length&&(media+="a=rtcp-mux\r\n"),desc.find("encryption").length&&desc.find("encryption>crypto").each((function(){media+="a=crypto:"+this.getAttribute("tag"),media+=" "+this.getAttribute("crypto-suite"),media+=" "+this.getAttribute("key-params"),this.getAttribute("session-params")&&(media+=" "+this.getAttribute("session-params")),media+="\r\n"})),desc.find("payload-type").each((function(){media+=SDPUtil.build_rtpmap(this)+"\r\n",$(this).find(">parameter").length&&(media+="a=fmtp:"+this.getAttribute("id")+" ",media+=$(this).find("parameter").map((function(){return(this.getAttribute("name")?this.getAttribute("name")+"=":"")+this.getAttribute("value")})).get().join(";"),media+="\r\n"),media+=self.RtcpFbFromJingle($(this),this.getAttribute("id"))})),media+=self.RtcpFbFromJingle(desc,"*"),tmp=desc.find('>rtp-hdrext[xmlns="urn:xmpp:jingle:apps:rtp:rtp-hdrext:0"]'),tmp.each((function(){media+="a=extmap:"+this.getAttribute("id")+" "+this.getAttribute("uri")+"\r\n"})),content.find('>transport[xmlns="urn:xmpp:jingle:transports:ice-udp:1"]>candidate').each((function(){media+=SDPUtil.candidateFromJingle(this)})),tmp=content.find('description>source[xmlns="urn:xmpp:jingle:apps:rtp:ssma:0"]'),tmp.each((function(){const ssrc=this.getAttribute("ssrc");$(this).find(">parameter").each((function(){this.getAttribute("name")&&this.getAttribute("name").length&&this.getAttribute("value")&&this.getAttribute("value").length&&(media+="a=ssrc:"+ssrc+" "+this.getAttribute("name")+":"+this.getAttribute("value")),media+="\r\n"}))})),tmp=content.find('description>ssrc-group[xmlns="urn:xmpp:jingle:apps:rtp:ssma:0"]'),tmp.each((function(){const semantics=this.getAttribute("semantics");media+="a=ssrc-group:"+semantics,$(this).find(">source").each((function(){media+=" "+this.getAttribute("ssrc")})),media+="\r\n"})),media},window.SDPUtil={iceparams:function(mediadesc,sessiondesc){let data=null;return SDPUtil.find_line(mediadesc,"a=ice-ufrag:",sessiondesc)&&SDPUtil.find_line(mediadesc,"a=ice-pwd:",sessiondesc)&&(data={ufrag:SDPUtil.parse_iceufrag(SDPUtil.find_line(mediadesc,"a=ice-ufrag:",sessiondesc)),pwd:SDPUtil.parse_icepwd(SDPUtil.find_line(mediadesc,"a=ice-pwd:",sessiondesc))}),data},parse_iceufrag:function(line){return line.substring(12)},build_iceufrag:function(frag){return"a=ice-ufrag:"+frag},parse_icepwd:function(line){return line.substring(10)},build_icepwd:function(pwd){return"a=ice-pwd:"+pwd},parse_mid:function(line){return line.substring(6)},parse_mline:function(line){const parts=line.substring(2).split(" "),data={};return data.media=parts.shift(),data.port=parts.shift(),data.proto=parts.shift(),""===parts[parts.length-1]&&parts.pop(),data.fmt=parts,data},build_mline:function(mline){return"m="+mline.media+" "+mline.port+" "+mline.proto+" "+mline.fmt.join(" ")},parse_rtpmap:function(line){let parts=line.substring(9).split(" ");const data={};return data.id=parts.shift(),parts=parts[0].split("/"),data.name=parts.shift(),data.clockrate=parts.shift(),data.channels=parts.length?parts.shift():"1",data},build_rtpmap:function(el){let line="a=rtpmap:"+el.getAttribute("id")+" "+el.getAttribute("name")+"/"+el.getAttribute("clockrate");return el.getAttribute("channels")&&"1"!=el.getAttribute("channels")&&(line+="/"+el.getAttribute("channels")),line},parse_simulcast:function(line){const parts=line.substr(13).split(" "),data={};return data.direction=parts.shift(),data.rid=parts.shift().substr(4),data},parse_crypto:function(line){const parts=line.substring(9).split(" "),data={};return data.tag=parts.shift(),data["crypto-suite"]=parts.shift(),data["key-params"]=parts.shift(),parts.length&&(data["session-params"]=parts.join(" ")),data},parse_fingerprint:function(line){const parts=line.substring(14).split(" "),data={};return data.hash=parts.shift(),data.fingerprint=parts.shift(),data},parse_fmtp:function(line){let i,key,value,parts=line.split(" ");const data=[];for(parts.shift(),parts=parts.join(" ").split(";"),i=0;i<parts.length;i++){for(key=parts[i].split("=")[0];key.length&&" "==key[0];)key=key.substring(1);value=parts[i].split("=")[1],key&&value?data.push({name:key,value:value}):key&&data.push({name:"",value:key})}return data},parse_icecandidate:function(line){console.log("[Strophe.jingle] jingle.sdp.parse_icecandidate "+line);const candidate={},elems=line.split(" ");candidate.foundation=elems[0].substring(12),candidate.component=elems[1],candidate.protocol=elems[2].toLowerCase(),candidate.priority=elems[3],candidate.ip=elems[4],candidate.port=elems[5],candidate.type=elems[7],candidate.generation=0;for(let i=8;i<elems.length;i+=2)switch(elems[i]){case"raddr":candidate["rel-addr"]=elems[i+1];break;case"rport":candidate["rel-port"]=elems[i+1];break;case"generation":candidate.generation=elems[i+1];break;case"tcptype":candidate.tcptype=elems[i+1]}return candidate.network="1",candidate.id=Math.random().toString(36).substr(2,10),candidate},build_icecandidate:function(cand){let line=["a=candidate:"+cand.foundation,cand.component,cand.protocol,cand.priority,cand.ip,cand.port,"typ",cand.type].join(" ");switch(line+=" ",cand.type){case"srflx":case"prflx":case"relay":cand.hasOwnAttribute("rel-addr")&&cand.hasOwnAttribute("rel-port")&&(line+="raddr",line+=" ",line+=cand["rel-addr"],line+=" ",line+="rport",line+=" ",line+=cand["rel-port"],line+=" ")}return cand.hasOwnAttribute("tcptype")&&(line+="tcptype",line+=" ",line+=cand.tcptype,line+=" "),line+="generation",line+=" ",line+=cand.hasOwnAttribute("generation")?cand.generation:"0",console.log("[Strophe.jingle] jingle.sdp.build_icecandidate "+line),line},parse_ssrc:function(desc){const lines=desc.split("\r\n"),data={};for(let i=0;i<lines.length;i++)if("a=ssrc:"==lines[i].substring(0,7)){const idx=lines[i].indexOf(" ");data[lines[i].substr(idx+1).split(":",2)[0]]=lines[i].substr(idx+1).split(":",2)[1]}return data},parse_rtcpfb:function(line){const parts=line.substr(10).split(" "),data={};return data.pt=parts.shift(),data.type=parts.shift(),data.params=parts,data},parse_extmap:function(line){const parts=line.substr(9).split(" "),data={};return data.value=parts.shift(),-1!=data.value.indexOf("/")?(data.direction=data.value.substr(data.value.indexOf("/")+1),data.value=data.value.substr(0,data.value.indexOf("/"))):data.direction="both",data.uri=parts.shift(),data.params=parts,data},find_line:function(haystack,needle,sessionpart){let lines=haystack.split("\r\n");for(let i=0;i<lines.length;i++)if(lines[i].substring(0,needle.length)==needle)return lines[i];if(!sessionpart)return!1;lines=sessionpart.split("\r\n");for(let j=0;j<lines.length;j++)if(lines[j].substring(0,needle.length)==needle)return lines[j];return!1},find_lines:function(haystack,needle,sessionpart){let lines=haystack.split("\r\n");const needles=[];for(let i=0;i<lines.length;i++)lines[i].substring(0,needle.length)==needle&&needles.push(lines[i]);if(needles.length||!sessionpart)return needles;lines=sessionpart.split("\r\n");for(let j=0;j<lines.length;j++)lines[j].substring(0,needle.length)==needle&&needles.push(lines[j]);return needles},candidateToJingle:function(line){if(console.log("[Strophe.jingle] !!! jingle.sdp.candidateToJingle "+line),0===line.indexOf("candidate:"))line="a="+line;else if("a=candidate:"!=line.substring(0,12))return console.log("[Strophe.jingle] parseCandidate called with a line that is not a candidate line"),console.log("[Strophe.jingle] "+line),null;"\r\n"==line.substring(line.length-2)&&(line=line.substring(0,line.length-2));const candidate={},elems=line.split(" ");let i;if("typ"!=elems[6])return console.log("[Strophe.jingle] did not find typ in the right place"),console.log("[Strophe.jingle] "+line),null;for(candidate.foundation=elems[0].substring(12),candidate.component=elems[1],candidate.protocol=elems[2].toLowerCase(),candidate.priority=elems[3],candidate.ip=elems[4],candidate.port=elems[5],candidate.type=elems[7],candidate.generation="0",i=8;i<elems.length;i+=2)switch(elems[i]){case"raddr":candidate["rel-addr"]=elems[i+1];break;case"rport":candidate["rel-port"]=elems[i+1];break;case"generation":candidate.generation=elems[i+1];break;case"tcptype":candidate.tcptype=elems[i+1];break;case"network-cost":candidate.cost=elems[i+1];break;case"network-id":candidate.network=elems[i+1];break;default:console.log('[Strophe.jingle] not translating "'+elems[i]+'" = "'+elems[i+1]+'"')}return candidate.id=Math.random().toString(36).substr(2,10),candidate},candidateFromJingle:function(cand,ufrag,pwd){const parts=["a=candidate:"+cand.getAttribute("foundation"),cand.getAttribute("component"),cand.getAttribute("protocol"),cand.getAttribute("priority"),cand.getAttribute("ip"),cand.getAttribute("port"),"typ",cand.getAttribute("type")];switch(cand.getAttribute("type")){case"srflx":case"prflx":case"relay":cand.getAttribute("rel-addr")&&cand.getAttribute("rel-port")&&(parts.push("raddr"),parts.push(cand.getAttribute("rel-addr")),parts.push("rport"),parts.push(cand.getAttribute("rel-port")))}return parts.push("generation"),parts.push(cand.getAttribute("generation")||"0"),cand.getAttribute("network")&&(parts.push("network-id"),parts.push(cand.getAttribute("network"))),cand.getAttribute("cost")&&(parts.push("network-cost"),parts.push(cand.getAttribute("cost"))),ufrag&&(parts.push("ufrag"),parts.push(ufrag)),pwd&&(parts.push("pwd"),parts.push(pwd)),parts.join(" ")+"\r\n"}}},function(module,exports){window.JingleSession=function(me,sid,connection,jingleIqTimeout){this.me=me,this.sid=sid,this.connection=connection,this.initiator=null,this.responder=null,this.isInitiator=null,this.peerjid=null,this.state=null,this.peerconnection=null,this.remoteStream=null,this.localSDP=null,this.remoteSDP=null,this.localStreams=[],this.localTransceivers=[],this.remoteStreams=[],this.remoteStreamsObject={},this.media_constraints=null,this.pc_constraints=null,this.ice_config={},this.company_config={},this.hadstuncandidate=!1,this.hadturncandidate=!1,this.hqEncodingEnabled=!0,this.statsinterval=null,this.reason=null,this.addssrc=[],this.removessrc=[],this.pendingop=null,this.wait=!0,this.isRenegotiating=!1,this.remoteType=null,this.localType=null,this.videoSender=null,this.simulcastSettings={high:13e5,medium:4e5,low:15e4},this.bandwidthLimitSettings={video:1200,sharing:1500},this.jingleIqTimeout=15e3,jingleIqTimeout&&(this.jingleIqTimeout=jingleIqTimeout),this.conference_id=-1,this.calledNumber=null,this.DTX=!1,this.hasSentTransportReplace=!1,this.iceFilterList=[],this.onHold=!1,this.logger=null,this.isEchoTest=!1,this.transceiverStats={framesReceivedDelta:-1,framesReceivedDeltaErrorCount:0,lastPacketLostValue:0},this.transceiverStatsframesReceivedDeltaErrorCount=0,this.transceiverStatsPacketLostErrorCount=0,this.transceiverStatsPacketLostOKCount=0,this.qualityLimitation=!1,this.reconnectionOptions=null,this.sendIceCandidatesPromise=null,this.replaceSid=""},JingleSession.prototype.initiate=function(peerjid,isInitiator,addStreams){const self=this;if(self.logger.log("[Strophe.jingle] initiate"),null!==this.state)return void self.logger.log("[Strophe.jingle] attempt to initiate on session "+this.sid+"in state "+this.state);this.isInitiator=isInitiator,this.initiator=isInitiator?this.me:peerjid,this.responder=isInitiator?peerjid:this.me,this.peerjid=peerjid;const constraints={optional:[{googScreencastMinBitrate:100},{googCpuOveruseDetection:!0}]};this.ice_config.sdpSemantics="unified-plan",self.logger.log("[Strophe.jingle] SDP activated: "+this.ice_config.sdpSemantics),this.ice_config.enableDSCP&&(self.logger.log("[Strophe.jingle] googDscp activated"),constraints.optional.push({googDscp:!0})),this.ice_config.dtx&&(self.logger.log("[Strophe.jingle] Discontinuous Transmission (DTX) activated"),this.DTX=!0),this.company_config&&(this.company_config.negotiation&&this.company_config.negotiation.iceFiltering&&(this.iceFilterList=this.company_config.negotiation.iceFiltering.length?this.company_config.negotiation.iceFiltering:[]),this.company_config.videoExt&&(this.company_config.videoExt.simulcastProfileBandwidth&&(this.simulcastSettings.low=this.company_config.videoExt.simulcastProfileBandwidth.low?this.company_config.videoExt.simulcastProfileBandwidth.low:this.simulcastSettings.low,this.simulcastSettings.medium=this.company_config.videoExt.simulcastProfileBandwidth.medium?this.company_config.videoExt.simulcastProfileBandwidth.medium:this.simulcastSettings.medium,this.simulcastSettings.high=this.company_config.videoExt.simulcastProfileBandwidth.high?this.company_config.videoExt.simulcastProfileBandwidth.high:this.simulcastSettings.high),this.bandwidthLimitSettings.video=this.company_config.videoExt.maxBandwidth?this.company_config.videoExt.maxBandwidth:this.bandwidthLimitSettings.video),this.company_config.sharingExt&&(this.bandwidthLimitSettings.sharing=this.company_config.sharingExt.maxBandwidth?this.company_config.sharingExt.maxBandwidth:this.bandwidthLimitSettings.sharing));try{this.peerconnection=new window.RTCPeerConnection(this.ice_config,constraints)}catch(e){self.logger.log("[Strophe.jingle] Failed to create PeerConnection, exception: ",e.message),self.logger.log(e);try{this.peerconnection=new window.RTCPeerConnection,this.peerconnection.setConfiguration&&this.peerconnection.setConfiguration(this.ice_config)}catch(error){return self.logger.log("[Strophe.jingle] Failed to create PeerConnection, exception: ",e.message),void self.logger.log(error)}}this.sendIceCandidatesPromise=new Promise(resolve=>{setTimeout(()=>{resolve(),this.sendIceCandidatesPromise=null},500)}),this.peerconnection.onicecandidate=function(event){self&&!self.isRenegotiating?self.sendIceCandidatesPromise?(self.logger.log("[Strophe.jingle] onicecandidate on standby..."),self.sendIceCandidatesPromise.then(()=>{self.sendIceCandidate(event.candidate)})):self.sendIceCandidate(event.candidate):self.logger.log("[Strophe.jingle] onicecandidate not added due to renegotiation")},this.peerconnection.onicecandidateerror=function(event){event&&(event.errorCode>=300&&event.errorCode<=699?self.logger.debug("[Strophe.jingle] onicecandidateerror -- TURN/STUN error received : ".concat(event.address," ").concat(event.port," ").concat(event.errorCode," ").concat(event.url," ").concat(event.errorText)):event.errorCode>=700&&event.errorCode<=799&&self.logger.debug("[Strophe.jingle] onicecandidateerror -- Server could not be reached error received : ".concat(event.address," ").concat(event.port," ").concat(event.errorCode," ").concat(event.url," ").concat(event.errorText)))},this.peerconnection.ontrack=function(trackEvent){self.conference_id&&-1!==self.conference_id?self.createRemoteStreamForConference(trackEvent.transceiver):self.createOrUpdateRemoteStreams(trackEvent.transceiver)},this.peerconnection.onremovetrack=function(trackEvent){self.logger.log("[Strophe.jingle] peer.onremovetrack")},this.peerconnection.onremovestream=function(event){self.logger.log("[Strophe.jingle] peer.onremovestream"),self.connection.jingle.rxSubject.next({name:"remotestreamremoved.jingle",data:{sid:self.sid}})},this.peerconnection.onsignalingstatechange=function(){self&&self.peerconnection&&($(document).trigger("iceconnectionstatechange.jingle",[self.sid,self]),self.connection.jingle.rxSubject.next({name:"iceconnectionstatechange.jingle",data:{sid:self.sid,session:self}}))},this.peerconnection.onconnectionstatechange=()=>{this&&this.peerconnection&&(this.logger.debug("[Strophe.jingle] onconnectionstatechange for session ".concat(this.sid," -- ").concat(this.peerconnection.connectionState)),self.connection.jingle.rxSubject.next({name:"iceconnectionstatechange.jingle",data:{sid:self.sid,session:self}}))},adapter&&adapter.default&&"firefox"===adapter.default.browserDetails.browser&&(this.peerconnection.oniceconnectionstatechange=function(){self&&self.peerconnection&&($(document).trigger("iceconnectionstatechange.jingle",[self.sid,self]),self.connection.jingle.rxSubject.next({name:"iceconnectionstatechange.jingle",data:{sid:self.sid,session:self}}))}),!this.localStreams.length&&-1!==this.conference_id&&this.conference_id&&(this.localTransceivers[0]||(this.localTransceivers[0]=self.peerconnection.addTransceiver("audio"),this.localTransceivers[0].direction="recvonly")),!1!==addStreams&&this.localStreams.forEach((function(stream){self.addStream(stream)}))},JingleSession.prototype.createRemoteStreamForConference=function(transceiver){let stream=this.remoteStreamsObject[0];stream||(stream=this.remoteStreamsObject[0]=new MediaStream);let existingTrack=null;"audio"===transceiver.receiver.track.kind&&(existingTrack=stream.getAudioTracks()[0]),"video"===transceiver.receiver.track.kind&&(existingTrack=stream.getVideoTracks()[0]),existingTrack&&stream.removeTrack(existingTrack),stream.addTrack(transceiver.receiver.track);const medias={audio:void 0!==stream.getAudioTracks()[0],video:void 0!==stream.getVideoTracks()[0]};this.connection.jingle.rxSubject.next({name:"jingleUpdateStream",data:{sid:this.sid,medias:medias,confId:this.conference_id}})},JingleSession.prototype.createOrUpdateRemoteStreams=function(transceiver){let mid=parseInt(transceiver.mid,10);isNaN(mid)&&(mid=0);const stream=new MediaStream;this.remoteStreamsObject[mid]?(this.remoteStreamsObject[mid].removeTrack(this.remoteStreamsObject[mid].getTracks()[0]),this.remoteStreamsObject[mid].addTrack(transceiver.receiver.track)):(stream.addTrack(transceiver.receiver.track),this.remoteStreamsObject[mid]=stream),this.connection.jingle.rxSubject.next({name:"jingleP2PUpdateStream",data:{sid:this.sid}})},JingleSession.prototype.updateRemoteStreams=function(){const self=this;this.localTransceivers.forEach((function(transceiver){transceiver.currentDirection&&"sendonly"!==transceiver.currentDirection&&"inactive"!==transceiver.currentDirection||(self.remoteStreamsObject[transceiver.mid]=null)}))},JingleSession.prototype.replaceVideoTrack=function(videoTrack){this.localTransceivers[1]&&(this.localTransceivers[1].sender.replaceTrack(videoTrack),this.localTransceivers[1].direction="sendonly")},JingleSession.prototype.replaceTransceiverTrack=function(track,id){return new Promise((resolve,reject)=>{try{id||(id=0),this.localTransceivers[id]&&this.localTransceivers[id].sender.replaceTrack(track).then(()=>{resolve()}).catch(()=>{reject()})}catch(_unused){reject()}})},JingleSession.prototype.addBundleStream=function(mediaStream){return(async stream=>{try{this.logger.log("[Strophe.jingle.session] addBundleStream"),this.localTransceivers[0]||(this.localTransceivers[0]=this.peerconnection.addTransceiver("audio")),this.localTransceivers[1]||(this.localTransceivers[1]=this.peerconnection.addTransceiver("video",{sendEncodings:[{rid:"l",active:!0,maxBitrate:this.simulcastSettings.low,scaleResolutionDownBy:4},{rid:"m",active:!0,maxBitrate:this.simulcastSettings.medium,scaleResolutionDownBy:2},{rid:"h",active:!0,maxBitrate:this.simulcastSettings.high}]})),await this.localTransceivers[0].sender.replaceTrack(stream.getAudioTracks()[0]),this.localTransceivers[0].direction="sendonly";const videoSender=this.localTransceivers[1].sender,videoTrack=stream.getVideoTracks()[0]?stream.getVideoTracks()[0]:null;await videoSender.replaceTrack(videoTrack),await this.enableHQEncoding(!0),this.localTransceivers[1].direction=videoTrack?"sendonly":"inactive"}catch(error){throw this.logger.error("[Strophe.jingle.session] addBundleStream"+error.message),error}})(mediaStream)},JingleSession.prototype.addStream=function(stream){let sfuBundle=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const self=this;if(self.conference_id&&-1!==self.conference_id){if(sfuBundle||"audio+video"===self.localType)return void self.addBundleStream(stream);if("sharing"===self.localType)self.localTransceivers[0]=self.peerconnection.addTransceiver("video"),self.localTransceivers[0].sender.replaceTrack(stream.getVideoTracks()[0]),self.localTransceivers[0].direction="sendonly",stream.getAudioTracks().length&&(self.localTransceivers[1]=self.peerconnection.addTransceiver("audio"),self.localTransceivers[1].sender.replaceTrack(stream.getAudioTracks()[0]),self.localTransceivers[1].direction="sendonly");else{const type=stream.getAudioTracks().length?"audio":"video";self.localTransceivers[0]||(self.ice_config.simulcast&&adapter&&adapter.default&&"chrome"===adapter.default.browserDetails.browser&&adapter.default.browserDetails.version>=70&&"video"===type&&"video"===self.localType?(self.logger.log("[Strophe.jingle] Enabling Simulcasting for Chrome (via transceiver configuration)"),self.localTransceivers[0]=self.peerconnection.addTransceiver(type,{sendEncodings:[{rid:"l",active:!0,maxBitrate:self.simulcastSettings.low,scaleResolutionDownBy:4},{rid:"m",active:!0,maxBitrate:self.simulcastSettings.medium,scaleResolutionDownBy:2},{rid:"h",active:!0,maxBitrate:self.simulcastSettings.high}]})):self.localTransceivers[0]=self.peerconnection.addTransceiver(type)),self.localTransceivers[0].sender.replaceTrack("audio"===type?stream.getAudioTracks()[0]:stream.getVideoTracks()[0]),self.localTransceivers[0].direction="audio"===type?"sendrecv":"sendonly"}}else stream.getAudioTracks().length>0&&(self.localTransceivers[0]||(self.localTransceivers[0]=self.peerconnection.addTransceiver("audio")),self.localTransceivers[0].sender.replaceTrack(stream.getAudioTracks()[0]),self.localTransceivers[0].direction="sendrecv"),stream.getVideoTracks().length>0&&stream.getAudioTracks().length>0&&(self.localTransceivers[0]||(self.localTransceivers[0]=self.peerconnection.addTransceiver("audio",{direction:"recvonly"})),self.localTransceivers[1]||(self.localTransceivers[1]=self.peerconnection.addTransceiver("video")),self.localTransceivers[1].sender.replaceTrack(stream.getVideoTracks()[0]),self.localTransceivers[1].direction="sendrecv"),stream.getVideoTracks().length>0&&!stream.getAudioTracks().length&&(self.localTransceivers[0]||(self.localTransceivers[0]=self.peerconnection.addTransceiver("audio",{direction:"recvonly"})),self.localTransceivers[1]||self.localTransceivers.push(self.peerconnection.addTransceiver("video",{direction:"recvonly"})),"videoOnly"===self.localType?(self.localTransceivers[1].sender.replaceTrack(stream.getVideoTracks()[0]),self.localTransceivers[1].direction="sendrecv"):(self.localTransceivers[2]||self.localTransceivers.push(self.peerconnection.addTransceiver("video")),self.localTransceivers[2].sender.replaceTrack(stream.getVideoTracks()[0]),self.localTransceivers[2].direction="sendrecv"))},JingleSession.prototype.removeStream=function(stream,RTC){this.logger.log("[Strophe.jingle] removeStream API"),this.peerconnection.getTransceivers().forEach((function(transceiver){transceiver.sender.replaceTrack(null),transceiver.direction="recvonly"})),this.localTransceivers=this.peerconnection.getTransceivers()},JingleSession.prototype.accept=function(){try{const self=this;this.state="active";let pranswer=this.peerconnection.localDescription;if(!pranswer||"pranswer"!=pranswer.type)return;for(self.logger.log("[Strophe.jingle] going from pranswer to answer");SDPUtil.find_line(pranswer.sdp,"a=inactive");)pranswer.sdp=pranswer.sdp.replace("a=inactive","a=sendrecv");pranswer=this.hackMsLabelSDP(pranswer);const prsdp=new SDP(pranswer.sdp),accept=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-accept",initiator:this.initiator,responder:this.responder,sid:this.sid,localType:this.localType});prsdp.toJingle(accept,this.initiator==this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.connection.sendIQ(accept,(function(){const ack={source:"answer"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="answer",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout);let sdp=this.peerconnection.localDescription.sdp;for(;SDPUtil.find_line(sdp,"a=inactive");)sdp=sdp.replace("a=inactive","a=sendrecv");this.peerconnection.setLocalDescription(new window.RTCSessionDescription({type:"answer",sdp:sdp}),(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] setLocalDescription success, try to update the RTP Sender "),self.ice_config.enableDSCP&&self.peerconnection.getSenders().forEach((function(rtpSender){if(rtpSender.getParameters&&rtpSender.setParameters){const params=rtpSender.getParameters();params.encodings.forEach((function(encoding){encoding.priority="high",encoding.networkPriority="high"})),rtpSender.setParameters(params),self.logger.log("[Strophe.jingle] RTP Sender parameters are updated "+rtpSender.getParameters())}}))}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] JingleSession.prototype.accept -- setLocalDescription failed -- "+msg)}))}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.accept failed: "+error)}},JingleSession.prototype.terminate=function(reason){if(this.state="ended",this.reason=reason,this.peerconnection&&"closed"!==this.peerconnection.signalingState&&this.peerconnection.close(),this.peerconnection&&(this.peerconnection.onicecandidate=null,this.peerconnection.onconnectionstatechange=null,this.peerconnection.onicecandidateerror=null,this.peerconnection.onsignalingstatechange=null,this.peerconnection.oniceconnectionstatechange=null,this.peerconnection.onremovetrack=null,this.peerconnection.onaddstream=null,this.peerconnection.onaddtrack=null,this.peerconnection.ontrack=null,this.peerconnection.onremovestream=null),this.logger.log("[Strophe.jingle] Clear peerconnection"),this.peerconnection=null,null!==this.statsinterval&&(window.clearInterval(this.statsinterval),this.statsinterval=null),this.localStreams&&this.localStreams.length)for(;this.localStreams.length;){let stream=this.localStreams.pop();stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null}if(this.localTransceivers&&this.localTransceivers.length)for(;this.localTransceivers.length;){let transceiver=this.localTransceivers.pop();transceiver&&transceiver.sender&&transceiver.sender.track&&transceiver.sender.track.stop&&transceiver.sender.track.stop(),transceiver&&transceiver.receiver&&transceiver.receiver.track&&transceiver.receiver.track.stop&&transceiver.receiver.track.stop(),transceiver=null}Object.keys(this.remoteStreamsObject).forEach(key=>{this.remoteStreamsObject[key]&&(this.remoteStreamsObject[key].getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),this.remoteStreamsObject[key]=null)}),this.remoteStreamsObject={},this.localTransceivers=[],this.transceiverStats={}},JingleSession.prototype.active=function(){return"active"==this.state},JingleSession.prototype.sendIceCandidate=function(candidate){const self=this;if(candidate&&self.iceFilterList&&self.iceFilterList.length&&-1!==self.iceFilterList.indexOf(candidate.type))self.logger.log("[Strophe.jingle] ICE candidate "+candidate.type+" is filtered");else if(candidate){const ice=SDPUtil.iceparams(this.localSDP.media[candidate.sdpMLineIndex],this.localSDP.session),jcand=SDPUtil.candidateToJingle(candidate.candidate);if(!ice||!jcand)return void self.logger.log("[Strophe.jingle] failed to get ice && jcand");ice.xmlns="urn:xmpp:jingle:transports:ice-udp:1",self.logger.log("[Strophe.jingle] sending single candidate"),self.isRenegotiating?self.logger.log("[Strophe.jingle] NOT sending candidate due to Renegotiation"):self.sendIceCandidates([candidate])}},JingleSession.prototype.sendIceCandidates=function(candidates){const self=this;try{const cand=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"transport-info",initiator:this.initiator,sid:this.sid,localType:this.localType});for(var mid=0;mid<this.localSDP.media.length;mid++){const cands=candidates.filter((function(el){return el.sdpMLineIndex==mid})),mline=SDPUtil.parse_mline(this.localSDP.media[mid].split("\r\n")[0]);if(cands.length>0){const ice=SDPUtil.iceparams(this.localSDP.media[mid],this.localSDP.session);ice.xmlns="urn:xmpp:jingle:transports:ice-udp:1",cand.c("content",{creator:this.initiator==this.me?"initiator":"responder",name:cands[0].sdpMid?cands[0].sdpMid:mline.media}).c("transport",ice);for(let i=0;i<cands.length;i++)cand.c("candidate",SDPUtil.candidateToJingle(cands[i].candidate)).up();if(SDPUtil.find_line(this.localSDP.media[mid],"a=fingerprint:",this.localSDP.session)){const tmp=SDPUtil.parse_fingerprint(SDPUtil.find_line(this.localSDP.media[mid],"a=fingerprint:",this.localSDP.session));tmp.required=!0,tmp.xmlns="urn:xmpp:jingle:apps:dtls:0",cand.c("fingerprint").t(tmp.fingerprint),delete tmp.fingerprint,cand.attrs(tmp),cand.up()}cand.up(),cand.up()}}if(config.turnOn&&!(cand.node.innerHTML.indexOf('type="relay')>-1))return void self.logger.log("[Strophe.jingle] Debug flag turnOn : Ignore candidate");this.connection.sendIQ(cand,(function(){const ack={source:"transportinfo"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="transportinfo",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout)}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.sendIceCandidates failed: "+error)}},JingleSession.prototype.hackOfferSDP=function(offer){return"firefox"!==adapter.default.browserDetails.browser&&(offer.sdp=offer.sdp.replace(/a=sendonly/g,"a=sendrecv")),!this.conference_id||-1===this.conference_id||"video"!==this.localType&&"sharing"!==this.localType||(offer.sdp=offer.sdp.replace(/a=sendrecv/g,"a=sendonly")),this.conference_id&&-1!==this.conference_id&&"audio+video"===this.localType&&(offer.sdp=offer.sdp.replace(/a=sendrecv/g,"a=sendonly")),navigator.platform.toUpperCase().indexOf("MAC")>=0&&(offer.sdp=this.forceCodecTo(offer.sdp,"H264/90000","video")),this.conference_id&&-1!==this.conference_id||"firefox"!==adapter.default.browserDetails.browser||(offer.sdp=this.removeSsrcGroupFidForFirefox(offer.sdp)),offer},JingleSession.prototype.hackMsLabelSDP=function(offer){try{const res=offer.sdp.split("\r\n");for(let i=0;i<res.length;i++)if("a=ssrc:"==res[i].substring(0,7)){const idx=res[i].indexOf(" ");!res[i].substr(idx+1).split(":",2)[0]||void 0!==res[i].substr(idx+1).split(":",2)[1]&&""!==res[i].substr(idx+1).split(":",2)[1]||res.splice(i,1)}return offer.sdp=res.join("\r\n"),offer}catch(error){return offer}},JingleSession.prototype.sendTransportReplace=function(){const self=this;self.logger.log("[Strophe.jingle] sendTransportReplace");const options={iceRestart:!0};self.isReconnecting?self.logger.log("[Strophe.jingle] sendTransportReplace ignored because we're already connecting"):(self.isReconnecting=!0,this.peerconnection.createOffer((function(sdp){self.createdOffer(sdp,"transport-replace")}),(function(e){self.logger.log("[Strophe.jingle] createOffer failed",e)}),options))},JingleSession.prototype.reconnectSession=function(){const self=this;self.logger.log("[Strophe.jingle] reconnectSession");let options={iceRestart:!0},readdStreamFlag=!1;if(self.isReconnecting)self.logger.log("[Strophe.jingle] reconnectSession ignored because we're already connecting");else{if(self.isReconnecting=!0,self.hasSentTransportReplace=!0,self.reconnectionOptions&&(options=self.reconnectionOptions),-1!==self.peerjid.indexOf("mp_rvcp"))if("plan-b"===self.ice_config.sdpSemantics){self.checkIfRemoteSdpHasSendonlyAudioMedia(self.remoteSDP.raw)&&(self.removeStream(self.localStreams[0]),readdStreamFlag=!0)}else"recvonly"===self.localTransceivers[0].currentDirection&&(self.localTransceivers[0].direction="recvonly");this.peerconnection.createOffer((function(sdp){self.sendCreatedOfferWithAckWait(sdp,"transport-replace"),readdStreamFlag&&self.peerconnection.addStream(self.localStreams[0])}),(function(e){self.logger.log("[Strophe.jingle] createOffer failed",e)}),options)}},JingleSession.prototype.saveIncomingTransportReplace=function(elem,desctype,ack){this.logger.log("[Strophe.jingle] saveIncomingTransportReplace"),this.savedIncomingTransportReplace={elem:elem,desctype:desctype,ack:ack}},JingleSession.prototype.acceptSavedIncomingTransportReplace=function(){this.logger.log("[Strophe.jingle] acceptSavedIncomingTransportReplace"),this.connection.send(this.savedIncomingTransportReplace.ack),this.setRemoteDescription(this.savedIncomingTransportReplace.elem,this.savedIncomingTransportReplace.desctype),this.connection.jingle.rxSubject.next({name:"transportreplace.jingle",data:{sid:this.sid}}),this.savedIncomingTransportReplace=null},JingleSession.prototype.rejectSavedIncomingTransportReplace=function(){if(this.logger.log("[Strophe.jingle] rejectSavedIncomingTransportReplace"),this.savedIncomingTransportReplace&&this.savedIncomingTransportReplace.ack){const ack=this.savedIncomingTransportReplace.ack;ack.type="error",ack.c("error",{type:"reject"}),this.connection.send(ack)}this.savedIncomingTransportReplace=null},JingleSession.prototype.sendCreatedOfferWithAckWait=function(offer,actionName){try{offer=this.hackMsLabelSDP(offer);const self=this;this.localSDP=new SDP(offer.sdp);const action=actionName||"session-initiate";self.logger.log("[Strophe.jingle] sendCreatedOfferWithAckWait with SDP : "+offer.sdp+" and action : "+action);let init=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:action,initiator:this.initiator,sid:this.sid,localType:this.localType});this.calledNumber&&""!==this.calledNumber&&(init=init.c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("callednumber").t(this.calledNumber),init.up(),init.up()),this.localSDP.toJingle(init,this.initiator==this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.createdOfferTimeout=setTimeout(()=>{this.logger.log("[Strophe.jingle] sendCreatedOfferWithAckWait -- timeout expires -- reset all"),this.hasSentTransportReplace=!1,this.savedIncomingTransportReplace?this.acceptSavedIncomingTransportReplace():this.isReconnecting=!1},this.jingleIqTimeout+1e3),this.connection.sendIQ(init,(function(stanza){if(self.createdOfferTimeout&&(clearTimeout(self.createdOfferTimeout),self.createdOfferTimeout=null),stanza&&$(stanza).find("error").length)return self.logger.log("[Strophe.jingle] sendCreatedOfferWithAckWait -- IQ ACK with error"),self.hasSentTransportReplace=!1,void(self.savedIncomingTransportReplace&&self.acceptSavedIncomingTransportReplace());if(self.logger.log("[Strophe.jingle] sendCreatedOfferWithAckWait -- IQ ACK received, set local description"),self.hasSentTransportReplace=!1,self.savedIncomingTransportReplace){if(!self.isInitiator)return void self.acceptSavedIncomingTransportReplace();self.rejectSavedIncomingTransportReplace()}offer.sdp=self.localSDP.raw,self.peerconnection.setLocalDescription(offer,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] setLocalDescription success")}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] sendCreatedOfferWithAckWait -- setLocalDescription failed -- "+msg),self.logger.error(e)}))}),(function(){self.createdOfferTimeout&&(clearTimeout(this.createdOfferTimeout),self.createdOfferTimeout=null),self.logger.log("[Strophe.jingle] sendCreatedOfferWithAckWait -- IQ rejected"),self.hasSentTransportReplace=!1,self.savedIncomingTransportReplace?self.acceptSavedIncomingTransportReplace():self.isReconnecting=!1}),this.jingleIqTimeout)}catch(error){self.createdOfferTimeout&&(clearTimeout(this.createdOfferTimeout),self.createdOfferTimeout=null),self.logger.log("[Strophe.jingle] JingleSession.prototype.createdOffer failed: "+error)}},JingleSession.prototype.sendOffer=function(restart){const self=this;if(self.logger.log("[Strophe.jingle] sendOffer"),restart){self.logger.log("[Strophe.jingle] ice restart");const options={};if((-1===this.conference_id&&!this.calledNumber||"video"!==this.localType)&&(options.iceRestart=!0),-1!==this.conference_id&&(options.iceRestart=!0),this.ice_config.simulcast&&-1!==this.conference_id&&"video"===this.localType&&adapter&&adapter.default&&"firefox"===adapter.default.browserDetails.browser){self.logger.log("[Strophe.jingle] Enabling Simulcasting for Firefox (RID)");const sender=this.peerconnection.getSenders().find((function(s){return"video"==s.track.kind}));if(sender){let parameters=sender.getParameters();parameters||(parameters={}),parameters.encodings=[{rid:"l",active:!0,maxBitrate:self.simulcastSettings.low,scaleResolutionDownBy:4},{rid:"m",active:!0,maxBitrate:self.simulcastSettings.medium,scaleResolutionDownBy:2},{rid:"h",active:!0,maxBitrate:self.simulcastSettings.high}],sender.setParameters(parameters)}}this.peerconnection.createOffer((function(offer){self.createdOffer(offer)}),(function(e){self.logger.log("[Strophe.jingle] createOffer failed "+e),self.logger.log(e)}),options)}else this.peerconnection.createOffer((function(offer){self.createdOffer(offer)}),(function(e){self.logger.log("[Strophe.jingle] createOffer failed "+e),self.logger.log(e)}),this.media_constraints)},JingleSession.prototype.createdOffer=function(offer,actionName){try{const self=this;offer=this.hackOfferSDP(offer),offer=this.hackMsLabelSDP(offer),this.localSDP=new SDP(offer.sdp);const action=actionName||"session-initiate";self.logger.log("[Strophe.jingle] createdOffer with SDP : "+offer.sdp+" and action : "+action);let init=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:action,initiator:this.initiator,sid:this.sid,localType:this.localType});this.calledNumber&&""!==this.calledNumber&&(init=init.c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("callednumber").t(this.calledNumber),init.up(),init.up()),this.isEchoTest&&(init=init.c("echotest",{xmlns:"urn:xmpp:janus:1"}),init.up()),this.replaceSid&&(init=init.c("replaces",{sid:this.replaceSid}),init.up()),this.localSDP.toJingle(init,this.initiator===this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.connection.sendIQ(init,(function(){const ack={source:"offer"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){self.state="error",self.peerconnection&&"closed"!==self.peerconnection.signalingState&&(self.logger.log("[Strophe.jingle] Clear peerconnection"),self.peerconnection.close(),self.peerconnection=null);const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="offer",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout),offer.sdp=this.localSDP.raw,this.peerconnection.setLocalDescription(offer,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] setLocalDescription success")}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] createdOffer -- setLocalDescription failed -- "+msg),self.logger.log("[Strophe.jingle] setLocalDescription failed "+e)}))}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.createdOffer failed: "+error)}},JingleSession.prototype.contentRemoveOld=function(streamType){let addLocalType=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const self=this;self.logger.log("[Strophe.jingle] contentRemove"),this.peerconnection.createOffer((function(sdp){self.contentUpdateOffer(sdp,streamType,"remove",addLocalType)}),(function(e){self.logger.log("[Strophe.jingle] contentRemove failed "+e),self.logger.log(e)}),this.media_constraints)},JingleSession.prototype.contentAdd=function(mediaStreamType){let addMediaLocalType=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(async(streamType,addLocalType)=>{try{this.logger.log("[Strophe.jingle] contentAdd");const sdp=await this.peerconnection.createOffer(this.media_constraints);this.contentUpdateOffer(sdp,streamType,"add",addLocalType)}catch(error){this.logger.log("[Strophe.jingle] contentAdd failed "+error.message)}})(mediaStreamType,addMediaLocalType)},JingleSession.prototype.contentRemove=function(mediaStreamType){let addMediaLocalType=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(async(streamType,addLocalType)=>{try{this.logger.log("[Strophe.jingle] contentRemove");const sdp=await this.peerconnection.createOffer(this.media_constraints);this.contentUpdateOffer(sdp,streamType,"remove",addLocalType)}catch(error){this.logger.log("[Strophe.jingle] contentRemove failed "+error.message)}})(mediaStreamType,addMediaLocalType)},JingleSession.prototype.contentModify=function(streamType,options){const self=this;self.logger.log("[Strophe.jingle] contentModify");let readdStreamFlag=!1;if(!options&&self.reconnectionOptions&&(options={offerToReceiveAudio:self.reconnectionOptions.offerToReceiveAudio}),options||(options={}),-1!==self.peerjid.indexOf("mp_rvcp"))if("plan-b"===self.ice_config.sdpSemantics){self.checkIfRemoteSdpHasSendonlyAudioMedia(self.remoteSDP.raw)&&(self.removeStream(self.localStreams[0]),readdStreamFlag=!0)}else"recvonly"===self.localTransceivers[0].currentDirection&&(self.localTransceivers[0].direction="recvonly");this.peerconnection.createOffer((function(sdp){self.contentUpdateOffer(sdp,streamType,"modify"),readdStreamFlag&&self.peerconnection.addStream(self.localStreams[0])}),(function(e){self.logger.log("[Strophe.jingle] contentModify failed "+e),self.logger.error(e)}),options)},JingleSession.prototype.contentUpdateOffer=function(sdp,streamType,actionType){let addLocalType=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const self=this;try{if(sdp=this.hackMsLabelSDP(sdp),self.conference_id&&-1!==self.conference_id||"firefox"!==adapter.default.browserDetails.browser||(sdp.sdp=this.removeSsrcGroupFidForFirefox(sdp.sdp)),self.logger.log("[Strophe.jingle] contentUpdateOffer: "+sdp.sdp),this.localSDP=new SDP(sdp.sdp),"audio"===streamType?self.localType="audio":"video"===streamType?self.localType="audio+video":"sharing"===streamType?self.localType="sharing":"sharing+video"===streamType&&(self.localType="sharing+video"),addLocalType)var init=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"content-"+actionType,initiator:this.initiator,sid:this.sid,mediaType:streamType,localType:self.localType});else init=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"content-"+actionType,initiator:this.initiator,sid:this.sid,mediaType:streamType});this.calledNumber&&""!==this.calledNumber&&((init=init.c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("callednumber").t(this.calledNumber)).up(),init.up()),this.localSDP.toJingle(init,this.initiator==this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.connection.sendIQ(init,(function(){const ack={source:"offer"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){self.state="error",self.peerconnection&&(self.logger.log("[Strophe.jingle] Clear peerconnection"),self.peerconnection.close(),self.peerconnection=null);const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="offer",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout),sdp.sdp=this.localSDP.raw,this.peerconnection.setLocalDescription(sdp,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] setLocalDescription success")}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] contentUpdateOffer -- setLocalDescription failed -- "+msg),self.logger.error(e)}))}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.contentUpdateOffer failed: "+error)}},JingleSession.prototype.contentChangeAnswer=function(sdp,updateStreams){const self=this;try{self.logger.log("[Strophe.jingle] contentChangeAnswer: "+sdp.sdp),sdp=this.hackMsLabelSDP(sdp),self.conference_id&&-1!==self.conference_id||"firefox"!==adapter.default.browserDetails.browser||(sdp.sdp=this.removeSsrcGroupFidForFirefox(sdp.sdp)),this.localSDP=new SDP(sdp.sdp);let init=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"content-accept",initiator:this.initiator,sid:this.sid});this.calledNumber&&""!==this.calledNumber&&(init=init.c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("callednumber").t(this.calledNumber),init.up(),init.up()),this.localSDP.toJingle(init,this.initiator==this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.connection.sendIQ(init,(function(){const ack={source:"offer"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){self.state="error",self.peerconnection&&(self.logger.log("[Strophe.jingle] Clear peerconnection"),self.peerconnection.close(),self.peerconnection=null);const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="offer",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout),sdp.sdp=this.localSDP.raw,this.peerconnection.setLocalDescription(sdp,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] setLocalDescription success"),updateStreams&&self.updateRemoteStreams()}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] contentChangeAnswer -- setLocalDescription failed -- "+msg),self.logger.error(e)}))}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.contentChangeAnswer failed: "+error)}},JingleSession.prototype.setRemoteDescription=function(elem,desctype){const self=this;self.logger.log("[Strophe.jingle] setRemoteDescription "+desctype),this.remoteSDP=new SDP(""),this.remoteSDP.fromJingle(elem),this.isInitiator?this.remoteSDP.raw=this.remoteSDP.raw.replace(/a=setup:passive/g,"a=setup:active"):this.remoteSDP.raw=this.remoteSDP.raw.replace(/a=setup:active/g,"a=setup:passive"),navigator.platform.toUpperCase().indexOf("MAC")>=0&&(this.remoteSDP.raw=this.forceCodecTo(this.remoteSDP.raw,"H264/90000","video")),this.DTX&&(self.logger.log("[Strophe.jingle] activate Discontinuous Transmission (DTX)"),this.remoteSDP.raw=this.remoteSDP.raw.replace("useinbandfec=1","useinbandfec=1;usedtx=1")),self.logger.log("[Strophe.jingle] setRemoteDescription after parsing for session "+this.sid+" : "+this.remoteSDP.raw);const remotedesc=new window.RTCSessionDescription({type:desctype,sdp:this.remoteSDP.raw});this.peerconnection.setRemoteDescription(remotedesc,(function(){self.logger.log("[Strophe.jingle] setRemoteDescription success"),self.localTransceivers=self.peerconnection.getTransceivers()}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] setRemoteDescription -- setRemoteDescription failed -- "+msg),self.logger.error(e)})),this.ice_config.enableDSCP&&(self.logger.log("[Strophe.jingle] setRemoteDescription is setting, try to update the RTP Sender "),this.peerconnection.getSenders().forEach((function(rtpSender){if(rtpSender.getParameters&&rtpSender.setParameters){const params=rtpSender.getParameters();params.encodings.forEach((function(encoding){encoding.priority="high",encoding.networkPriority="high"})),rtpSender.setParameters(params)}})))},JingleSession.prototype.addIceCandidate=function(elem){const self=this;self.logger.log("[Strophe.jingle] addIceCandidate"),elem.each((function(){let i,idx=-1;for(i=0;i<self.remoteSDP.media.length;i++)if(SDPUtil.find_line(self.remoteSDP.media[i],"a=mid:"+$(this).attr("name"))||0===self.remoteSDP.media[i].indexOf("m="+$(this).attr("name"))){idx=i;break}if(-1==idx)for(i=0;i<self.localSDP.media.length;i++)if(SDPUtil.find_line(self.localSDP.media[i],"a=mid:"+$(this).attr("name"))||0===self.localSDP.media[i].indexOf("m="+$(this).attr("name"))){idx=i;break}const name=$(this).attr("name");let ufrag,pwd;$(this).find("content>transport").each((function(){ufrag=this.getAttribute("ufrag"),pwd=this.getAttribute("pwd")})),$(this).find("transport>candidate").each((function(){let line,candidate;line=SDPUtil.candidateFromJingle(this,ufrag,pwd),candidate=new window.RTCIceCandidate({sdpMLineIndex:idx,sdpMid:name,candidate:line});try{if(candidate&&self.iceFilterList&&self.iceFilterList.length&&-1!==self.iceFilterList.indexOf(candidate.type))return void self.logger.log("[Strophe.jingle] Received ICE candidate "+candidate.type+" is filtered");self.peerconnection.addIceCandidate(candidate)}catch(e){self.logger.error("[Strophe.jingle] addIceCandidate failed "+e.toString())}}))}))},JingleSession.prototype.sendAnswer=function(provisional,type){const self=this;self.logger.log("[Strophe.jingle] sendAnswer: "+provisional),this.peerconnection.createAnswer((function(sdp){self.createdAnswer(sdp,provisional,type)}),(function(e){self.logger.error("[Strophe.jingle] createAnswer failed: "+e)}),this.media_constraints)},JingleSession.prototype.createdAnswer=function(sdp,provisional,type){const self=this;try{self.logger.log("[Strophe.jingle] createdAnswer"),sdp=this.hackMsLabelSDP(sdp),self.conference_id&&-1!==self.conference_id||"firefox"!==adapter.default.browserDetails.browser||(sdp.sdp=this.removeSsrcGroupFidForFirefox(sdp.sdp)),this.localSDP=new SDP(sdp.sdp),this.usepranswer=!0===provisional;const action=type||"session-accept";type&&(self.isReconnecting=!1),self.logger.log("[Strophe.jingle] createdAnswer -- sdp is "+sdp.sdp);let accept=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:action,initiator:this.initiator,responder:this.responder,sid:this.sid,localType:this.localType});this.calledNumber&&""!==this.calledNumber&&(accept=accept.c("mediapillar",{xmlns:"urn:xmpp:janus:1"}).c("callednumber").t(this.calledNumber),accept.up(),accept.up()),this.localSDP.toJingle(accept,this.initiator==this.me?"initiator":"responder",this.conference_id,this.bandwidthLimitSettings),this.connection.sendIQ(accept,(function(){const ack={source:"answer"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};error.source="answer",$(document).trigger("error.jingle",{sid:self.sid,error:error}),self.connection.jingle.rxSubject.next({name:"error.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout),sdp.sdp=this.localSDP.raw,this.peerconnection.setLocalDescription(sdp,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}}),self.logger.log("[Strophe.jingle] createdAnswer -- setLocalDescription success, try to update the RTP Sender "),self.ice_config.enableDSCP&&self.peerconnection.getSenders().forEach((function(rtpSender){if(rtpSender.getParameters&&rtpSender.setParameters){const params=rtpSender.getParameters();params.encodings.forEach((function(encoding){encoding.priority="high",encoding.networkPriority="high"})),rtpSender.setParameters(params),self.logger.log("[Strophe.jingle] RTP Sender parameters are updated "+rtpSender.getParameters())}}))}),(function(e){const msg=e&&e.toString?e.toString():e;self.logger.error("[Strophe.jingle] createdAnswer -- setLocalDescription failed -- "+msg),self.logger.error(e)}));const cands=SDPUtil.find_lines(this.localSDP.raw,"a=candidate:");for(let j=0;j<cands.length;j++){const cand=SDPUtil.parse_icecandidate(cands[j]);"srflx"==cand.type?this.hadstuncandidate=!0:"relay"==cand.type&&(this.hadturncandidate=!0)}}catch(error){self.logger.error("[Strophe.jingle] JingleSession.prototype.createdAnswer failed: "+error)}},JingleSession.prototype.sendTerminate=function(reason,text){const self=this;try{const term=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-terminate",initiator:this.initiator,sid:this.sid}).c("reason").c(reason||"success");text&&term.up().c("text").t(text),this.connection.sendIQ(term,(function(){!self.peerconnection||"closed"===self.peerconnection.signalingState&&"undefined"!=self.peerconnection.signalingState||(self.peerconnection.close(),self.terminate()),self.logger.log("[Strophe.jingle] Clear peerconnection"),self.peerconnection=null;const ack={source:"terminate"};$(document).trigger("ack.jingle",[self.sid,ack]),self.connection.jingle.rxSubject.next({name:"ack.jingle",data:{sid:self.sid,ack:ack}})}),(function(stanza){const error=$(stanza).find("error").length?{code:$(stanza).find("error").attr("code"),reason:$(stanza).find("error :first")[0].tagName}:{};$(document).trigger("ack.jingle",[self.sid,error]),self.connection.jingle.rxSubject.next({name:"add.jingle",data:{sid:self.sid,error:error}})}),this.jingleIqTimeout),null!==this.statsinterval&&(window.clearInterval(this.statsinterval),this.statsinterval=null)}catch(error){self.logger.log("[Strophe.jingle] JingleSession.prototype.sendTerminate failed: "+error)}},JingleSession.prototype.mediaModified=function(updateStreams){const self=this;this.peerconnection.createAnswer((function(sdp){self.contentChangeAnswer(sdp,updateStreams)}),(function(e){self.logger.error("[Strophe.jingle] contentChange failed "+e)}),this.media_constraints)},JingleSession.prototype.addSource=function(elem){const self=this;self.logger.log("[Strophe.jingle] addssrc",(new Date).getTime()),self.logger.log("[Strophe.jingle] ice",this.peerconnection.iceConnectionState);const sdp=new SDP(this.peerconnection.remoteDescription.sdp);$(elem).each((function(idx,content){const name=$(content).attr("name");let lines="";tmp=$(content).find('>source[xmlns="urn:xmpp:jingle:apps:rtp:ssma:0"]'),tmp.each((function(){const ssrc=$(this).attr("ssrc");$(this).find(">parameter").each((function(){lines+="a=ssrc:"+ssrc+" "+$(this).attr("name"),$(this).attr("value")&&$(this).attr("value").length&&(lines+=":"+$(this).attr("value")),lines+="\r\n"}))})),sdp.media.forEach((function(media,idx){SDPUtil.find_line(media,"a=mid:"+name)&&(sdp.media[idx]+=lines,self.addssrc[idx]||(self.addssrc[idx]=""),self.addssrc[idx]+=lines)})),sdp.raw=sdp.session+sdp.media.join("")})),this.modifySources()},JingleSession.prototype.removeSource=function(elem){const self=this;self.logger.log("[Strophe.jingle] removessrc",(new Date).getTime()),self.logger.log("[Strophe.jingle] ice",this.peerconnection.iceConnectionState);const sdp=new SDP(this.peerconnection.remoteDescription.sdp);$(elem).each((function(idx,content){const name=$(content).attr("name");let lines="";tmp=$(content).find('>source[xmlns="urn:xmpp:jingle:apps:rtp:ssma:0"]'),tmp.each((function(){const ssrc=$(this).attr("ssrc");$(this).find(">parameter").each((function(){lines+="a=ssrc:"+ssrc+" "+$(this).attr("name"),$(this).attr("value")&&$(this).attr("value").length&&(lines+=":"+$(this).attr("value")),lines+="\r\n"}))})),sdp.media.forEach((function(media,idx){SDPUtil.find_line(media,"a=mid:"+name)&&(sdp.media[idx]+=lines,self.addssrc[idx]||(self.removessrc[idx]=""),self.removessrc[idx]+=lines)})),sdp.raw=sdp.session+sdp.media.join("")})),this.modifySources()},JingleSession.prototype.modifySources=function(){const self=this;if(!this.peerconnection||"closed"==this.peerconnection.signalingState)return;if(!this.addssrc.length&&!this.removessrc.length&&null===this.pendingop)return;if(!this.wait&&("stable"!=this.peerconnection.signalingState||"connected"!=this.peerconnection.iceConnectionState&&"completed"!=this.peerconnection.iceConnectionState))return self.logger.warn("[Strophe.jingle] modifySources not yet "+this.peerconnection.signalingState+" "+this.peerconnection.iceConnectionState),this.wait=!0,void window.setTimeout((function(){self.modifySources()}),1500);if(this.wait)return window.setTimeout((function(){self.modifySources()}),2500),void(this.wait=!1);const sdp=new SDP(this.peerconnection.remoteDescription.sdp);this.addssrc.forEach((function(lines,idx){sdp.media[idx]+=lines})),this.addssrc=[],this.removessrc.forEach((function(lines,idx){(lines=lines.split("\r\n")).pop(),lines.forEach((function(line){sdp.media[idx]=sdp.media[idx].replace(line+"\r\n","")}))})),this.removessrc=[],sdp.raw=sdp.session+sdp.media.join(""),this.peerconnection.setRemoteDescription(new window.RTCSessionDescription({type:"offer",sdp:sdp.raw}),(function(){self.peerconnection.createAnswer((function(modifiedAnswer){if(null!==self.pendingop){const sdp=new SDP(modifiedAnswer.sdp);if(sdp.media.length>1){switch(self.pendingop){case"mute":sdp.media[1]=sdp.media[1].replace("a=sendrecv","a=recvonly");break;case"unmute":sdp.media[1]=sdp.media[1].replace("a=recvonly","a=sendrecv")}sdp.raw=sdp.session+sdp.media.join(""),modifiedAnswer.sdp=sdp.raw}self.pendingop=null}self.peerconnection.setLocalDescription(modifiedAnswer,(function(){$(document).trigger("setLocalDescription.jingle",[self.sid]),self.connection.jingle.rxSubject.next({name:"setLocalDescription.jingle",data:{sid:self.sid}})}),(function(error){self.logger.log("[Strophe.jingle] modified setLocalDescription failed")}))}),(function(error){self.logger.log("[Strophe.jingle] modified answer failed")}))}),(function(error){self.logger.log("[Strophe.jingle] modify failed")}))},JingleSession.prototype.hardMuteVideo=function(muted){this.connection.jingle.localStream&&(this.pendingop=muted?"mute":"unmute",this.modifySources(),this.connection.jingle.localStream.getVideoTracks().forEach((function(track){track.enabled=!muted})))},JingleSession.prototype.muteAudio=function(muted){this.connection.jingle.localStream&&this.connection.jingle.localStream.getAudioTracks().forEach((function(track){track.enabled=!muted})),this.localStreams.length>=1&&this.localStreams.forEach((function(stream){stream.getAudioTracks().forEach((function(track){track.enabled=!muted}))}))},JingleSession.prototype.sendMute=function(muted,content){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c(muted?"mute":"unmute",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),info.attrs({creator:this.me==this.initiator?"creator":"responder"}),content&&info.attrs({name:content}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendMute failed: "+error)}},JingleSession.prototype.sendRefer=function(confendpointId,referTo){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("refer",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),info.attrs({confEndpointId:confendpointId,referTo:referTo}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendRefer failed: "+error)}},JingleSession.prototype.sendP2PTrasnferCallRefer=function(replaceSid,referTo){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("refer",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),info.attrs({sid:replaceSid,referTo:referTo}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendP2PTrasnferCallRefer failed: "+error)}},JingleSession.prototype.sendReferStatus=function(status){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("refer",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),info.attrs({status:status}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendReferStatus failed: "+error)}},JingleSession.prototype.sendReferTransfer=function(method,referTo){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("refer",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),info.attrs({method:method,referTo:referTo}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendRefertransfer failed: "+error)}},JingleSession.prototype.sendHold=function(hold){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c(hold?"hold":"unhold",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),this.connection.sendIQ(info),this.onHold=hold}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendMute failed: "+error)}},JingleSession.prototype.sendIceFailed=function(){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("iceFailed",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendIceFailed failed: "+error)}},JingleSession.prototype.sendRinging=function(){try{const info=$iq({to:this.peerjid,type:"set"}).c("jingle",{xmlns:"urn:xmpp:jingle:1",action:"session-info",initiator:this.initiator,sid:this.sid});info.c("ringing",{xmlns:"urn:xmpp:jingle:apps:rtp:info:1"}),this.connection.sendIQ(info)}catch(error){this.logger.error("[Strophe.jingle] JingleSession.prototype.sendRinging failed: "+error)}},JingleSession.prototype.modifyEncodingState=function(state,customMuteAction){this.logger.log("[Strophe.jingle] modifyEncodingState "+state);const videoSender=this.peerconnection.getSenders().find(sender=>"video"===sender.track.kind),parameters=videoSender.getParameters();let index=2;parameters.encodings[0].rid&&"h"===parameters.encodings[0].rid&&(index=0),parameters.encodings[index].active=state,customMuteAction&&(parameters.encodings[0].active=state,parameters.encodings[2].active=state),videoSender.setParameters(parameters)},JingleSession.prototype.enableHQEncoding=function(enableHQEncoding){return(async enable=>{try{this.logger.log("[Strophe.jingle.session] enableHQEncoding "+enable);const videoSender=this.peerconnection.getSenders()[1];if(videoSender){const parameters=videoSender.getParameters();this.hqEncodingEnabled=enable,parameters.encodings.forEach(encoding=>{"l"!==encoding.rid&&(encoding.active=enable)}),await videoSender.setParameters(parameters)}}catch(error){this.logger.error("[Strophe.jingle.session] enableHQEncoding("+enable+") -- failure -- "+error.message)}})(enableHQEncoding)},JingleSession.prototype.disableSubStreamLevel=function(levelIndex){const videoSender=this.peerconnection.getSenders().find(sender=>"video"===sender.track.kind),parameters=videoSender.getParameters();2===levelIndex&&parameters.encodings[0].rid&&"h"===parameters.encodings[0].rid?levelIndex=0:0===levelIndex&&parameters.encodings[2].rid&&"l"===parameters.encodings[2].rid&&(levelIndex=2),this.logger.log("[Strophe.jingle] disableSubStreamLevel "+levelIndex+" state: "+!parameters.encodings[levelIndex].active),this.logger.log(parameters.encodings[levelIndex].rid),parameters.encodings[levelIndex].active=!parameters.encodings[levelIndex].active,videoSender.setParameters(parameters)},JingleSession.prototype.forceCodecTo=function(sdp,codecToForce,media){try{const splittedSDP=sdp.split("\r\n");let indexVideo=-1,indexPos=-1;const codec=[];let from,to,codecName,indexFound,j,list=[];for(let i=0,l=splittedSDP.length;i<l;i++){const line=splittedSDP[i];if(line.indexOf("m="+media)>-1&&(indexVideo=i,indexPos=line.indexOf("RTP/SAVPF")+10,list=line.substring(indexPos).split(" ")),line.indexOf(codecToForce)>-1){for(from=line.indexOf(":"),to=line.indexOf(" "),codecName=line.substring(from+1,to),indexFound=-1,codec.push(codecName),j=0;j<list.length;j++)if(list[j]===codecName){indexFound=j;break}indexFound>-1&&list.splice(indexFound,1)}if("PCMU/8000"===codecToForce&&line.indexOf("PCMA/8000")>-1){for(from=line.indexOf(":"),to=line.indexOf(" "),codecName=line.substring(from+1,to),indexFound=-1,codec.push(codecName),j=0;j<list.length;j++)if(list[j]===codecName){indexFound=j;break}indexFound>-1&&list.splice(indexFound,1)}}if(-1!==indexVideo){splittedSDP[indexVideo]=splittedSDP[indexVideo].substr(0,indexPos-1);for(let k=0;k<codec.length;k++)splittedSDP[indexVideo]+=" "+codec[k];list.length>0&&(splittedSDP[indexVideo]+=" "+list.join(" ")),sdp=splittedSDP.join("\r\n")}return sdp}catch(err){return sdp}},JingleSession.prototype.removeSsrcGroupFidForFirefox=function(sdp){this.logger.log("[Strophe.jingle] session -- removeSsrcGroupFidForFirefox");const lines=sdp.split("\r\n");let mediaLine=!1;for(let i=0;i<lines.length;i++){if(lines[i]&&-1!==lines[i].indexOf("m=video")&&(mediaLine=!0),mediaLine&&-1!==lines[i].indexOf("a=ssrc:")){const j=i+1;lines[j]&&-1!==lines[j].indexOf("a=ssrc:")&&lines.splice(j,1)}mediaLine&&lines[i]&&-1!==lines[i].indexOf("a=ssrc-group:FID")&&lines.splice(i,1)}return(sdp=lines.join("\r\n")).endsWith("\r\n")||(sdp+="\r\n"),sdp},JingleSession.prototype.checkIfRemoteSdpHasSendonlyAudioMedia=function(sdp){this.logger.log("[Strophe.jingle] session -- checkIfRemoteSdpHasSendonlyAudioMedia");const lines=sdp.split("\r\n");let result=!1;for(let i=0;i<lines.length;i++)lines[i]&&"a=mid:audio"===lines[i]&&lines[i-1]&&"a=sendonly"===lines[i-1]&&(result=!0);return result},JingleSession.prototype.getStats=function(interval){const self=this;return this.statsinterval&&(window.clearInterval(this.statsinterval),this.statsinterval=null),this.ice_config.debugWeRTC&&(interval=1e3),this.statsinterval=window.setInterval((function(){self&&self.peerconnection?self.localTransceivers&&self.localTransceivers.length&&self.localTransceivers.forEach(transceiver=>{!transceiver||"sendrecv"!==transceiver.currentDirection&&"sendonly"!==transceiver.currentDirection||transceiver.sender.track&&"video"===transceiver.sender.track.kind&&transceiver.sender.getStats&&transceiver.sender.getStats().then(stats=>{const data={},results=stats.entries();let result=results.next();for(;!result.done;)-1!==result.value[0].indexOf("RTCMediaStreamTrack_sender")&&(data[result.value[0]]={frameWidth:result.value[1].frameWidth,frameHeight:result.value[1].frameHeight,framesSent:result.value[1].framesSent,mediaSourceId:result.value[1].mediaSourceId}),-1!==result.value[0].indexOf("RTCOutboundRTPVideoStream")&&(data[result.value[0]]={rid:result.value[1].rid,mediaSourceId:result.value[1].mediaSourceId,frameWidth:result.value[1].frameWidth,frameHeight:result.value[1].frameHeight,framesPerSecond:result.value[1].framesPerSecond,framesSent:result.value[1].framesSent,qualityLimitationReason:result.value[1].qualityLimitationReason},self.connection.jingle.rxSubject.next({name:"RTCOutboundRTPVideoStats",data:{sid:self.sid,transceiverStats:data[result.value[0]]}})),result=results.next();self.logger.log("RTC Sender stats for session "+self.sid+" : "+JSON.stringify(data))}),!transceiver||"sendrecv"!==transceiver.currentDirection&&"recvonly"!==transceiver.currentDirection||transceiver.receiver.track&&"video"===transceiver.receiver.track.kind&&transceiver.receiver.getStats&&transceiver.receiver.getStats().then(stats=>{const results=stats.entries();let result=results.next();const data={};let deltaCalculated=!1;for(;!result.done;)-1!==result.value[0].indexOf("RTCInboundRTPVideoStream")&&(data[result.value[0]]={frameWidth:result.value[1].frameWidth,frameHeight:result.value[1].frameHeight,framesPerSecond:result.value[1].framesPerSecond,framesReceived:result.value[1].framesReceived,nackCount:result.value[1].nackCount,pliCount:result.value[1].pliCount,firCount:result.value[1].firCount,packetsLost:result.value[1].packetsLost},!deltaCalculated&&self.transceiverStats&&(data[result.value[0]].framesReceived?void 0===self.transceiverStats.framesReceived||0===self.transceiverStats.framesReceived?(self.transceiverStats.framesReceivedDelta=data[result.value[0]].framesReceived,deltaCalculated=!0):self.transceiverStats.framesReceived&&(self.transceiverStats.framesReceivedDelta=data[result.value[0]].framesReceived-self.transceiverStats.framesReceived,self.transceiverStats.framesReceivedDelta<0&&(self.transceiverStats.framesReceivedDelta=-1),deltaCalculated=!0):0===self.transceiverStats.framesReceived&&0===data[result.value[0]].framesReceived&&(self.transceiverStats.framesReceivedDelta=0)),self.transceiverStats.frameWidth=void 0!==data[result.value[0]].frameWidth?data[result.value[0]].frameWidth:self.transceiverStats.frameWidth,self.transceiverStats.frameHeight=void 0!==data[result.value[0]].frameHeight?data[result.value[0]].frameHeight:self.transceiverStats.frameHeight,self.transceiverStats.framesPerSecond=void 0!==data[result.value[0]].framesPerSecond?data[result.value[0]].framesPerSecond:self.transceiverStats.framesPerSecond,self.transceiverStats.framesReceived=void 0!==data[result.value[0]].framesReceived?data[result.value[0]].framesReceived:self.transceiverStats.framesReceived,self.transceiverStats.nackCount=void 0!==data[result.value[0]].nackCount?data[result.value[0]].nackCount:self.transceiverStats.nackCount,self.transceiverStats.pliCount=void 0!==data[result.value[0]].pliCount?data[result.value[0]].pliCount:self.transceiverStats.pliCount,self.transceiverStats.firCount=void 0!==data[result.value[0]].firCount?data[result.value[0]].firCount:self.transceiverStats.firCount,self.transceiverStats.packetsLost=void 0!==data[result.value[0]].packetsLost?data[result.value[0]].packetsLost:self.transceiverStats.packetsLost),-1!==result.value[0].indexOf("RTCMediaStreamTrack_receiver")&&(data[result.value[0]]={frameWidth:result.value[1].frameWidth,frameHeight:result.value[1].frameHeight,framesPerSecond:result.value[1].framesPerSecond,framesReceived:result.value[1].framesReceived},!deltaCalculated&&self.transceiverStats&&(data[result.value[0]].framesReceived?void 0===self.transceiverStats.framesReceived||0===self.transceiverStats.framesReceived?(self.transceiverStats.framesReceivedDelta=data[result.value[0]].framesReceived,deltaCalculated=!0):self.transceiverStats.framesReceived&&(self.transceiverStats.framesReceivedDelta=data[result.value[0]].framesReceived-self.transceiverStats.framesReceived,self.transceiverStats.framesReceivedDelta<0&&(self.transceiverStats.framesReceivedDelta=-1),deltaCalculated=!0):0===self.transceiverStats.framesReceived&&0===data[result.value[0]].framesReceived&&(self.transceiverStats.framesReceivedDelta=0)),self.transceiverStats.frameWidth=void 0!==data[result.value[0]].frameWidth?data[result.value[0]].frameWidth:self.transceiverStats.frameWidth,self.transceiverStats.frameHeight=void 0!==data[result.value[0]].frameHeight?data[result.value[0]].frameHeight:self.transceiverStats.frameHeight,self.transceiverStats.framesReceived=void 0!==data[result.value[0]].framesReceived?data[result.value[0]].framesReceived:self.transceiverStats.framesReceived),result=results.next();if(data.framesReceivedDelta=self.transceiverStats.framesReceivedDelta,self.logger.log("RTC Receiver stats for session "+self.sid+" with hold state ("+self.onHold+") / qualityLimitation ("+self.qualityLimitation+") : "+JSON.stringify(data)),self.onHold)self.transceiverStats.framesReceivedDelta=-1;else if(self.connection.jingle.rxSubject.next({name:"transceiverStats",data:{sid:self.sid,transceiverStats:self.transceiverStats}}),0===self.transceiverStats.framesReceivedDelta?(self.transceiverStatsframesReceivedDeltaErrorCount+=1,self.transceiverStatsframesReceivedDeltaErrorCount>=5&&self.connection.jingle.rxSubject.next({name:"resubscriptionNeeded",data:{sid:self.sid,confId:this.conference_id}})):self.transceiverStatsframesReceivedDeltaErrorCount=0,void 0!==self.transceiverStats.packetsLost&&self.transceiverStats.packetsLost>0&&!self.isInitiator&&"video"===self.remoteType){if(self.transceiverStats.packetsLost!==self.transceiverStats.lastPacketLostValue){const deltaLost=self.transceiverStats.packetsLost-self.transceiverStats.lastPacketLostValue;deltaLost>0&&self.transceiverStats.framesReceivedDelta>0&&Math.round(self.transceiverStats.framesReceivedDelta/100*5)<deltaLost?(self.transceiverStatsPacketLostErrorCount+=1,self.transceiverStatsPacketLostOKCount=0):(self.transceiverStatsPacketLostErrorCount=0,self.transceiverStatsPacketLostOKCount+=1)}else self.transceiverStatsPacketLostOKCount+=1;self.transceiverStatsPacketLostOKCount>=10&&(self.transceiverStatsPacketLostOKCount=0,self.connection.jingle.rxSubject.next({name:"packetLostQualityImpactEvent",data:{decreaseQuality:!1,sid:self.sid,confId:this.conference_id}})),self.transceiverStatsPacketLostErrorCount>=2&&(self.transceiverStatsPacketLostErrorCount=0,self.connection.jingle.rxSubject.next({name:"packetLostQualityImpactEvent",data:{decreaseQuality:!0,sid:self.sid,confId:this.conference_id}})),self.transceiverStats.lastPacketLostValue=self.transceiverStats.packetsLost}})}):self.logger.log("[Strophe.jingle] getStats no peerconnection")}),interval||1e3),this.statsinterval}},function(module,exports){!function(){function noop(){}function inVals(stanza,ns){let ok=!1;return $('si feature x field[var="stream-method"] value',stanza).each((function(i,m){$(m).text()===ns&&(ok=!0)})),ok}Strophe.addConnectionPlugin("si_filetransfer",{_c:null,_cb:null,init:function(c){this._c=c,Strophe.addNamespace("SI","http://jabber.org/protocol/si"),Strophe.addNamespace("SI_FILE_TRANSFER",Strophe.NS.SI+"/profile/file-transfer"),Strophe.addNamespace("FEATURE_NEG","http://jabber.org/protocol/feature-neg"),c.addHandler(this._receive.bind(this),Strophe.NS.SI,"iq","set")},_receive:function(m){const $m=$(m),from=$m.attr("from"),id=$m.attr("id"),sid=$("si",$m).attr("id");if(Object.hasOwnProperty.call(this._c,"ibb")&&inVals(m,Strophe.NS.IBB))var $file=$("file",$m);const filename=$file.attr("name"),size=$file.attr("size"),mime=$("si",$m).attr("mime-type"),desc=$("desc",$m).text();return"function"==typeof this._cb&&this._cb(from,sid,filename,size,mime,id,desc),!0},_success:function(cb,stanza){let err;inVals(stanza,Strophe.NS.IBB)||(err=new Error("In-Band Bytestream not supported")),cb(err)},_fail:function(cb,stanza){let err="timed out";stanza&&(err=stanza),cb(new Error(err))},_send:function(iq,success,fail){this._c.sendIQ(iq,success,fail,18e4)},send:function(to,sid,filename,size,mime,description,cb){if(!Object.hasOwnProperty.call(this._c,"ibb"))return void Strophe.warn("The In-Band Bytestream plugin is required.");const iq=$iq({type:"set",to:to,id:this._c.getUniqueId("si-filetransfer")}).c("si",{xmlns:Strophe.NS.SI,id:sid,profile:Strophe.NS.SI_FILE_TRANSFER,"mime-type":mime}).c("file",{xmlns:Strophe.NS.SI_FILE_TRANSFER,name:filename,size:size}).c("desc").t(description).up().c("feature",{xmlns:Strophe.NS.FEATURE_NEG}).c("x",{xmlns:"jabber:x:data",type:"form"}).c("field",{var:"stream-method",type:"list-single"}).c("option").c("value").t(Strophe.NS.IBB);this._send(iq,this._success.bind(this,cb),this._fail.bind(this,cb))},responseOk:function(to,sid,id){const iq=$iq({type:"result",to:to,id:id}).c("si",{xmlns:Strophe.NS.SI,id:sid}).c("file",{xmlns:Strophe.NS.SI_FILE_TRANSFER}).up().c("feature",{xmlns:Strophe.NS.FEATURE_NEG}).c("x",{xmlns:"jabber:x:data",type:"submit"}).c("field",{var:"stream-method"});iq.c("value").t(Strophe.NS.IBB),this._send(iq,noop,noop)},responseError:function(to,sid,id,errorCode){const iq=$iq({type:"error",to:to,id:id}).c("error",{code:errorCode,type:"cancel"}).c("forbidden",{xmlns:"urn:ietf:params:xml:ns:xmpp-stanzas"}).up().c("text",{xmlns:"urn:ietf:params:xml:ns:xmpp-stanzas"});iq.c("value").t(Strophe.NS.IBB),this._send(iq,noop,noop)},addFileHandler:function(fn){this._cb=fn}})}()},function(module,exports,__webpack_require__){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}Object.defineProperty(exports,"__esModule",{value:!0}),__export(__webpack_require__(496)),__export(__webpack_require__(501)),__export(__webpack_require__(502))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const message_sdk_1=__webpack_require__(342);exports.ConversationSDK=class{constructor(conversation){this.isFavorite=!1,this.messages=[],this.id=conversation.dbId,this.type=conversation.type,this.contactId=conversation.contact?conversation.contact.dbId:null,this.bubbleId=conversation.room?conversation.room.dbId:null,this.name=conversation.name?conversation.name.value:null,this.bubbleName=conversation.room?conversation.room.name:null,this.creationDate=conversation.creationDate,this.lastModificiationDate=conversation.lastModification,this.isFavorite=conversation.isFavorite,this.messages=conversation.messages?conversation.messages.map(message=>new message_sdk_1.MessageSDK(message)):[],this.lastMessage=conversation.lastMessageText}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.MessageSDK=class{constructor(message,fileDescriptor=null){this.shortFileDescriptor=null,this.additionalContent=message.additionalContent,this.answeredMsgId=message.answeredMsgId,this.id=message.id,this.type=message.type.value,this.data=message.data,this.date=message.date,this.senderId=message.from?message.from.dbId:"",this.isForwarded=message.isForwarded,this.receiptStatus=message.receiptStatus,this.status=message.status,this.urgency=message.urgency,this.shortFileDescriptor=fileDescriptor,this.fileId=message.fileId||"",this.messageHistory=message.replaceMsgs,this.side=message.side,this.urlMetadata=message.urlMetadata}}},function(module,exports,__webpack_require__){"use strict";var SDPUtils=__webpack_require__(92);function writeMediaSection(transceiver,caps,type,stream,dtlsRole){var sdp=SDPUtils.writeRtpDescription(transceiver.kind,caps);if(sdp+=SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()),sdp+=SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(),"offer"===type?"actpass":dtlsRole||"active"),sdp+="a=mid:"+transceiver.mid+"\r\n",transceiver.rtpSender&&transceiver.rtpReceiver?sdp+="a=sendrecv\r\n":transceiver.rtpSender?sdp+="a=sendonly\r\n":transceiver.rtpReceiver?sdp+="a=recvonly\r\n":sdp+="a=inactive\r\n",transceiver.rtpSender){var trackId=transceiver.rtpSender._initialTrackId||transceiver.rtpSender.track.id;transceiver.rtpSender._initialTrackId=trackId;var msid="msid:"+(stream?stream.id:"-")+" "+trackId+"\r\n";sdp+="a="+msid,sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" "+msid,transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" "+msid,sdp+="a=ssrc-group:FID "+transceiver.sendEncodingParameters[0].ssrc+" "+transceiver.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].ssrc+" cname:"+SDPUtils.localCName+"\r\n",transceiver.rtpSender&&transceiver.sendEncodingParameters[0].rtx&&(sdp+="a=ssrc:"+transceiver.sendEncodingParameters[0].rtx.ssrc+" cname:"+SDPUtils.localCName+"\r\n"),sdp}function getCommonCapabilities(localCapabilities,remoteCapabilities){var commonCapabilities={codecs:[],headerExtensions:[],fecMechanisms:[]},findCodecByPayloadType=function(pt,codecs){pt=parseInt(pt,10);for(var i=0;i<codecs.length;i++)if(codecs[i].payloadType===pt||codecs[i].preferredPayloadType===pt)return codecs[i]},rtxCapabilityMatches=function(lRtx,rRtx,lCodecs,rCodecs){var lCodec=findCodecByPayloadType(lRtx.parameters.apt,lCodecs),rCodec=findCodecByPayloadType(rRtx.parameters.apt,rCodecs);return lCodec&&rCodec&&lCodec.name.toLowerCase()===rCodec.name.toLowerCase()};return localCapabilities.codecs.forEach((function(lCodec){for(var i=0;i<remoteCapabilities.codecs.length;i++){var rCodec=remoteCapabilities.codecs[i];if(lCodec.name.toLowerCase()===rCodec.name.toLowerCase()&&lCodec.clockRate===rCodec.clockRate){if("rtx"===lCodec.name.toLowerCase()&&lCodec.parameters&&rCodec.parameters.apt&&!rtxCapabilityMatches(lCodec,rCodec,localCapabilities.codecs,remoteCapabilities.codecs))continue;(rCodec=JSON.parse(JSON.stringify(rCodec))).numChannels=Math.min(lCodec.numChannels,rCodec.numChannels),commonCapabilities.codecs.push(rCodec),rCodec.rtcpFeedback=rCodec.rtcpFeedback.filter((function(fb){for(var j=0;j<lCodec.rtcpFeedback.length;j++)if(lCodec.rtcpFeedback[j].type===fb.type&&lCodec.rtcpFeedback[j].parameter===fb.parameter)return!0;return!1}));break}}})),localCapabilities.headerExtensions.forEach((function(lHeaderExtension){for(var i=0;i<remoteCapabilities.headerExtensions.length;i++){var rHeaderExtension=remoteCapabilities.headerExtensions[i];if(lHeaderExtension.uri===rHeaderExtension.uri){commonCapabilities.headerExtensions.push(rHeaderExtension);break}}})),commonCapabilities}function isActionAllowedInSignalingState(action,type,signalingState){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[type][action].indexOf(signalingState)}function maybeAddCandidate(iceTransport,candidate){var alreadyAdded=iceTransport.getRemoteCandidates().find((function(remoteCandidate){return candidate.foundation===remoteCandidate.foundation&&candidate.ip===remoteCandidate.ip&&candidate.port===remoteCandidate.port&&candidate.priority===remoteCandidate.priority&&candidate.protocol===remoteCandidate.protocol&&candidate.type===remoteCandidate.type}));return alreadyAdded||iceTransport.addRemoteCandidate(candidate),!alreadyAdded}function makeError(name,description){var e=new Error(description);return e.name=name,e.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[name],e}module.exports=function(window,edgeVersion){function addTrackToStreamAndFireEvent(track,stream){stream.addTrack(track),stream.dispatchEvent(new window.MediaStreamTrackEvent("addtrack",{track:track}))}function fireAddTrack(pc,track,receiver,streams){var trackEvent=new Event("track");trackEvent.track=track,trackEvent.receiver=receiver,trackEvent.transceiver={receiver:receiver},trackEvent.streams=streams,window.setTimeout((function(){pc._dispatchEvent("track",trackEvent)}))}var RTCPeerConnection=function(config){var pc=this,_eventTarget=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach((function(method){pc[method]=_eventTarget[method].bind(_eventTarget)})),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState="stable",this.iceConnectionState="new",this.connectionState="new",this.iceGatheringState="new",config=JSON.parse(JSON.stringify(config||{})),this.usingBundle="max-bundle"===config.bundlePolicy,"negotiate"===config.rtcpMuxPolicy)throw makeError("NotSupportedError","rtcpMuxPolicy 'negotiate' is not supported");switch(config.rtcpMuxPolicy||(config.rtcpMuxPolicy="require"),config.iceTransportPolicy){case"all":case"relay":break;default:config.iceTransportPolicy="all"}switch(config.bundlePolicy){case"balanced":case"max-compat":case"max-bundle":break;default:config.bundlePolicy="balanced"}if(config.iceServers=function(iceServers,edgeVersion){var hasTurn=!1;return(iceServers=JSON.parse(JSON.stringify(iceServers))).filter((function(server){if(server&&(server.urls||server.url)){var urls=server.urls||server.url;server.url&&!server.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var isString="string"==typeof urls;return isString&&(urls=[urls]),urls=urls.filter((function(url){return 0===url.indexOf("turn:")&&-1!==url.indexOf("transport=udp")&&-1===url.indexOf("turn:[")&&!hasTurn?(hasTurn=!0,!0):0===url.indexOf("stun:")&&edgeVersion>=14393&&-1===url.indexOf("?transport=udp")})),delete server.url,server.urls=isString?urls[0]:urls,!!urls.length}}))}(config.iceServers||[],edgeVersion),this._iceGatherers=[],config.iceCandidatePoolSize)for(var i=config.iceCandidatePoolSize;i>0;i--)this._iceGatherers.push(new window.RTCIceGatherer({iceServers:config.iceServers,gatherPolicy:config.iceTransportPolicy}));else config.iceCandidatePoolSize=0;this._config=config,this.transceivers=[],this._sdpSessionId=SDPUtils.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(RTCPeerConnection.prototype,"localDescription",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(RTCPeerConnection.prototype,"remoteDescription",{configurable:!0,get:function(){return this._remoteDescription}}),RTCPeerConnection.prototype.onicecandidate=null,RTCPeerConnection.prototype.onaddstream=null,RTCPeerConnection.prototype.ontrack=null,RTCPeerConnection.prototype.onremovestream=null,RTCPeerConnection.prototype.onsignalingstatechange=null,RTCPeerConnection.prototype.oniceconnectionstatechange=null,RTCPeerConnection.prototype.onconnectionstatechange=null,RTCPeerConnection.prototype.onicegatheringstatechange=null,RTCPeerConnection.prototype.onnegotiationneeded=null,RTCPeerConnection.prototype.ondatachannel=null,RTCPeerConnection.prototype._dispatchEvent=function(name,event){this._isClosed||(this.dispatchEvent(event),"function"==typeof this["on"+name]&&this["on"+name](event))},RTCPeerConnection.prototype._emitGatheringStateChange=function(){var event=new Event("icegatheringstatechange");this._dispatchEvent("icegatheringstatechange",event)},RTCPeerConnection.prototype.getConfiguration=function(){return this._config},RTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams},RTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams},RTCPeerConnection.prototype._createTransceiver=function(kind,doNotAdd){var hasBundleTransport=this.transceivers.length>0,transceiver={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:kind,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&hasBundleTransport)transceiver.iceTransport=this.transceivers[0].iceTransport,transceiver.dtlsTransport=this.transceivers[0].dtlsTransport;else{var transports=this._createIceAndDtlsTransports();transceiver.iceTransport=transports.iceTransport,transceiver.dtlsTransport=transports.dtlsTransport}return doNotAdd||this.transceivers.push(transceiver),transceiver},RTCPeerConnection.prototype.addTrack=function(track,stream){if(this._isClosed)throw makeError("InvalidStateError","Attempted to call addTrack on a closed peerconnection.");var transceiver;if(this.transceivers.find((function(s){return s.track===track})))throw makeError("InvalidAccessError","Track already exists.");for(var i=0;i<this.transceivers.length;i++)this.transceivers[i].track||this.transceivers[i].kind!==track.kind||(transceiver=this.transceivers[i]);return transceiver||(transceiver=this._createTransceiver(track.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(stream)&&this.localStreams.push(stream),transceiver.track=track,transceiver.stream=stream,transceiver.rtpSender=new window.RTCRtpSender(track,transceiver.dtlsTransport),transceiver.rtpSender},RTCPeerConnection.prototype.addStream=function(stream){var pc=this;if(edgeVersion>=15025)stream.getTracks().forEach((function(track){pc.addTrack(track,stream)}));else{var clonedStream=stream.clone();stream.getTracks().forEach((function(track,idx){var clonedTrack=clonedStream.getTracks()[idx];track.addEventListener("enabled",(function(event){clonedTrack.enabled=event.enabled}))})),clonedStream.getTracks().forEach((function(track){pc.addTrack(track,clonedStream)}))}},RTCPeerConnection.prototype.removeTrack=function(sender){if(this._isClosed)throw makeError("InvalidStateError","Attempted to call removeTrack on a closed peerconnection.");if(!(sender instanceof window.RTCRtpSender))throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.");var transceiver=this.transceivers.find((function(t){return t.rtpSender===sender}));if(!transceiver)throw makeError("InvalidAccessError","Sender was not created by this connection.");var stream=transceiver.stream;transceiver.rtpSender.stop(),transceiver.rtpSender=null,transceiver.track=null,transceiver.stream=null,-1===this.transceivers.map((function(t){return t.stream})).indexOf(stream)&&this.localStreams.indexOf(stream)>-1&&this.localStreams.splice(this.localStreams.indexOf(stream),1),this._maybeFireNegotiationNeeded()},RTCPeerConnection.prototype.removeStream=function(stream){var pc=this;stream.getTracks().forEach((function(track){var sender=pc.getSenders().find((function(s){return s.track===track}));sender&&pc.removeTrack(sender)}))},RTCPeerConnection.prototype.getSenders=function(){return this.transceivers.filter((function(transceiver){return!!transceiver.rtpSender})).map((function(transceiver){return transceiver.rtpSender}))},RTCPeerConnection.prototype.getReceivers=function(){return this.transceivers.filter((function(transceiver){return!!transceiver.rtpReceiver})).map((function(transceiver){return transceiver.rtpReceiver}))},RTCPeerConnection.prototype._createIceGatherer=function(sdpMLineIndex,usingBundle){var pc=this;if(usingBundle&&sdpMLineIndex>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var iceGatherer=new window.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(iceGatherer,"state",{value:"new",writable:!0}),this.transceivers[sdpMLineIndex].bufferedCandidateEvents=[],this.transceivers[sdpMLineIndex].bufferCandidates=function(event){var end=!event.candidate||0===Object.keys(event.candidate).length;iceGatherer.state=end?"completed":"gathering",null!==pc.transceivers[sdpMLineIndex].bufferedCandidateEvents&&pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event)},iceGatherer.addEventListener("localcandidate",this.transceivers[sdpMLineIndex].bufferCandidates),iceGatherer},RTCPeerConnection.prototype._gather=function(mid,sdpMLineIndex){var pc=this,iceGatherer=this.transceivers[sdpMLineIndex].iceGatherer;if(!iceGatherer.onlocalcandidate){var bufferedCandidateEvents=this.transceivers[sdpMLineIndex].bufferedCandidateEvents;this.transceivers[sdpMLineIndex].bufferedCandidateEvents=null,iceGatherer.removeEventListener("localcandidate",this.transceivers[sdpMLineIndex].bufferCandidates),iceGatherer.onlocalcandidate=function(evt){if(!(pc.usingBundle&&sdpMLineIndex>0)){var event=new Event("icecandidate");event.candidate={sdpMid:mid,sdpMLineIndex:sdpMLineIndex};var cand=evt.candidate,end=!cand||0===Object.keys(cand).length;if(end)"new"!==iceGatherer.state&&"gathering"!==iceGatherer.state||(iceGatherer.state="completed");else{"new"===iceGatherer.state&&(iceGatherer.state="gathering"),cand.component=1,cand.ufrag=iceGatherer.getLocalParameters().usernameFragment;var serializedCandidate=SDPUtils.writeCandidate(cand);event.candidate=Object.assign(event.candidate,SDPUtils.parseCandidate(serializedCandidate)),event.candidate.candidate=serializedCandidate,event.candidate.toJSON=function(){return{candidate:event.candidate.candidate,sdpMid:event.candidate.sdpMid,sdpMLineIndex:event.candidate.sdpMLineIndex,usernameFragment:event.candidate.usernameFragment}}}var sections=SDPUtils.getMediaSections(pc._localDescription.sdp);sections[event.candidate.sdpMLineIndex]+=end?"a=end-of-candidates\r\n":"a="+event.candidate.candidate+"\r\n",pc._localDescription.sdp=SDPUtils.getDescription(pc._localDescription.sdp)+sections.join("");var complete=pc.transceivers.every((function(transceiver){return transceiver.iceGatherer&&"completed"===transceiver.iceGatherer.state}));"gathering"!==pc.iceGatheringState&&(pc.iceGatheringState="gathering",pc._emitGatheringStateChange()),end||pc._dispatchEvent("icecandidate",event),complete&&(pc._dispatchEvent("icecandidate",new Event("icecandidate")),pc.iceGatheringState="complete",pc._emitGatheringStateChange())}},window.setTimeout((function(){bufferedCandidateEvents.forEach((function(e){iceGatherer.onlocalcandidate(e)}))}),0)}},RTCPeerConnection.prototype._createIceAndDtlsTransports=function(){var pc=this,iceTransport=new window.RTCIceTransport(null);iceTransport.onicestatechange=function(){pc._updateIceConnectionState(),pc._updateConnectionState()};var dtlsTransport=new window.RTCDtlsTransport(iceTransport);return dtlsTransport.ondtlsstatechange=function(){pc._updateConnectionState()},dtlsTransport.onerror=function(){Object.defineProperty(dtlsTransport,"state",{value:"failed",writable:!0}),pc._updateConnectionState()},{iceTransport:iceTransport,dtlsTransport:dtlsTransport}},RTCPeerConnection.prototype._disposeIceAndDtlsTransports=function(sdpMLineIndex){var iceGatherer=this.transceivers[sdpMLineIndex].iceGatherer;iceGatherer&&(delete iceGatherer.onlocalcandidate,delete this.transceivers[sdpMLineIndex].iceGatherer);var iceTransport=this.transceivers[sdpMLineIndex].iceTransport;iceTransport&&(delete iceTransport.onicestatechange,delete this.transceivers[sdpMLineIndex].iceTransport);var dtlsTransport=this.transceivers[sdpMLineIndex].dtlsTransport;dtlsTransport&&(delete dtlsTransport.ondtlsstatechange,delete dtlsTransport.onerror,delete this.transceivers[sdpMLineIndex].dtlsTransport)},RTCPeerConnection.prototype._transceive=function(transceiver,send,recv){var params=getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities);send&&transceiver.rtpSender&&(params.encodings=transceiver.sendEncodingParameters,params.rtcp={cname:SDPUtils.localCName,compound:transceiver.rtcpParameters.compound},transceiver.recvEncodingParameters.length&&(params.rtcp.ssrc=transceiver.recvEncodingParameters[0].ssrc),transceiver.rtpSender.send(params)),recv&&transceiver.rtpReceiver&&params.codecs.length>0&&("video"===transceiver.kind&&transceiver.recvEncodingParameters&&edgeVersion<15019&&transceiver.recvEncodingParameters.forEach((function(p){delete p.rtx})),transceiver.recvEncodingParameters.length?params.encodings=transceiver.recvEncodingParameters:params.encodings=[{}],params.rtcp={compound:transceiver.rtcpParameters.compound},transceiver.rtcpParameters.cname&&(params.rtcp.cname=transceiver.rtcpParameters.cname),transceiver.sendEncodingParameters.length&&(params.rtcp.ssrc=transceiver.sendEncodingParameters[0].ssrc),transceiver.rtpReceiver.receive(params))},RTCPeerConnection.prototype.setLocalDescription=function(description){var sections,sessionpart,pc=this;if(-1===["offer","answer"].indexOf(description.type))return Promise.reject(makeError("TypeError",'Unsupported type "'+description.type+'"'));if(!isActionAllowedInSignalingState("setLocalDescription",description.type,pc.signalingState)||pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not set local "+description.type+" in state "+pc.signalingState));if("offer"===description.type)sections=SDPUtils.splitSections(description.sdp),sessionpart=sections.shift(),sections.forEach((function(mediaSection,sdpMLineIndex){var caps=SDPUtils.parseRtpParameters(mediaSection);pc.transceivers[sdpMLineIndex].localCapabilities=caps})),pc.transceivers.forEach((function(transceiver,sdpMLineIndex){pc._gather(transceiver.mid,sdpMLineIndex)}));else if("answer"===description.type){sections=SDPUtils.splitSections(pc._remoteDescription.sdp),sessionpart=sections.shift();var isIceLite=SDPUtils.matchPrefix(sessionpart,"a=ice-lite").length>0;sections.forEach((function(mediaSection,sdpMLineIndex){var transceiver=pc.transceivers[sdpMLineIndex],iceGatherer=transceiver.iceGatherer,iceTransport=transceiver.iceTransport,dtlsTransport=transceiver.dtlsTransport,localCapabilities=transceiver.localCapabilities,remoteCapabilities=transceiver.remoteCapabilities;if(!(SDPUtils.isRejected(mediaSection)&&0===SDPUtils.matchPrefix(mediaSection,"a=bundle-only").length)&&!transceiver.rejected){var remoteIceParameters=SDPUtils.getIceParameters(mediaSection,sessionpart),remoteDtlsParameters=SDPUtils.getDtlsParameters(mediaSection,sessionpart);isIceLite&&(remoteDtlsParameters.role="server"),pc.usingBundle&&0!==sdpMLineIndex||(pc._gather(transceiver.mid,sdpMLineIndex),"new"===iceTransport.state&&iceTransport.start(iceGatherer,remoteIceParameters,isIceLite?"controlling":"controlled"),"new"===dtlsTransport.state&&dtlsTransport.start(remoteDtlsParameters));var params=getCommonCapabilities(localCapabilities,remoteCapabilities);pc._transceive(transceiver,params.codecs.length>0,!1)}}))}return pc._localDescription={type:description.type,sdp:description.sdp},"offer"===description.type?pc._updateSignalingState("have-local-offer"):pc._updateSignalingState("stable"),Promise.resolve()},RTCPeerConnection.prototype.setRemoteDescription=function(description){var pc=this;if(-1===["offer","answer"].indexOf(description.type))return Promise.reject(makeError("TypeError",'Unsupported type "'+description.type+'"'));if(!isActionAllowedInSignalingState("setRemoteDescription",description.type,pc.signalingState)||pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not set remote "+description.type+" in state "+pc.signalingState));var streams={};pc.remoteStreams.forEach((function(stream){streams[stream.id]=stream}));var receiverList=[],sections=SDPUtils.splitSections(description.sdp),sessionpart=sections.shift(),isIceLite=SDPUtils.matchPrefix(sessionpart,"a=ice-lite").length>0,usingBundle=SDPUtils.matchPrefix(sessionpart,"a=group:BUNDLE ").length>0;pc.usingBundle=usingBundle;var iceOptions=SDPUtils.matchPrefix(sessionpart,"a=ice-options:")[0];return pc.canTrickleIceCandidates=!!iceOptions&&iceOptions.substr(14).split(" ").indexOf("trickle")>=0,sections.forEach((function(mediaSection,sdpMLineIndex){var lines=SDPUtils.splitLines(mediaSection),kind=SDPUtils.getKind(mediaSection),rejected=SDPUtils.isRejected(mediaSection)&&0===SDPUtils.matchPrefix(mediaSection,"a=bundle-only").length,protocol=lines[0].substr(2).split(" ")[2],direction=SDPUtils.getDirection(mediaSection,sessionpart),remoteMsid=SDPUtils.parseMsid(mediaSection),mid=SDPUtils.getMid(mediaSection)||SDPUtils.generateIdentifier();if(rejected||"application"===kind&&("DTLS/SCTP"===protocol||"UDP/DTLS/SCTP"===protocol))pc.transceivers[sdpMLineIndex]={mid:mid,kind:kind,protocol:protocol,rejected:!0};else{var transceiver,iceGatherer,iceTransport,dtlsTransport,rtpReceiver,sendEncodingParameters,recvEncodingParameters,localCapabilities,track;!rejected&&pc.transceivers[sdpMLineIndex]&&pc.transceivers[sdpMLineIndex].rejected&&(pc.transceivers[sdpMLineIndex]=pc._createTransceiver(kind,!0));var remoteIceParameters,remoteDtlsParameters,remoteCapabilities=SDPUtils.parseRtpParameters(mediaSection);rejected||(remoteIceParameters=SDPUtils.getIceParameters(mediaSection,sessionpart),(remoteDtlsParameters=SDPUtils.getDtlsParameters(mediaSection,sessionpart)).role="client"),recvEncodingParameters=SDPUtils.parseRtpEncodingParameters(mediaSection);var rtcpParameters=SDPUtils.parseRtcpParameters(mediaSection),isComplete=SDPUtils.matchPrefix(mediaSection,"a=end-of-candidates",sessionpart).length>0,cands=SDPUtils.matchPrefix(mediaSection,"a=candidate:").map((function(cand){return SDPUtils.parseCandidate(cand)})).filter((function(cand){return 1===cand.component}));if(("offer"===description.type||"answer"===description.type)&&!rejected&&usingBundle&&sdpMLineIndex>0&&pc.transceivers[sdpMLineIndex]&&(pc._disposeIceAndDtlsTransports(sdpMLineIndex),pc.transceivers[sdpMLineIndex].iceGatherer=pc.transceivers[0].iceGatherer,pc.transceivers[sdpMLineIndex].iceTransport=pc.transceivers[0].iceTransport,pc.transceivers[sdpMLineIndex].dtlsTransport=pc.transceivers[0].dtlsTransport,pc.transceivers[sdpMLineIndex].rtpSender&&pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport),pc.transceivers[sdpMLineIndex].rtpReceiver&&pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport)),"offer"!==description.type||rejected){if("answer"===description.type&&!rejected){iceGatherer=(transceiver=pc.transceivers[sdpMLineIndex]).iceGatherer,iceTransport=transceiver.iceTransport,dtlsTransport=transceiver.dtlsTransport,rtpReceiver=transceiver.rtpReceiver,sendEncodingParameters=transceiver.sendEncodingParameters,localCapabilities=transceiver.localCapabilities,pc.transceivers[sdpMLineIndex].recvEncodingParameters=recvEncodingParameters,pc.transceivers[sdpMLineIndex].remoteCapabilities=remoteCapabilities,pc.transceivers[sdpMLineIndex].rtcpParameters=rtcpParameters,cands.length&&"new"===iceTransport.state&&(!isIceLite&&!isComplete||usingBundle&&0!==sdpMLineIndex?cands.forEach((function(candidate){maybeAddCandidate(transceiver.iceTransport,candidate)})):iceTransport.setRemoteCandidates(cands)),usingBundle&&0!==sdpMLineIndex||("new"===iceTransport.state&&iceTransport.start(iceGatherer,remoteIceParameters,"controlling"),"new"===dtlsTransport.state&&dtlsTransport.start(remoteDtlsParameters)),!getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities).codecs.filter((function(c){return"rtx"===c.name.toLowerCase()})).length&&transceiver.sendEncodingParameters[0].rtx&&delete transceiver.sendEncodingParameters[0].rtx,pc._transceive(transceiver,"sendrecv"===direction||"recvonly"===direction,"sendrecv"===direction||"sendonly"===direction),!rtpReceiver||"sendrecv"!==direction&&"sendonly"!==direction?delete transceiver.rtpReceiver:(track=rtpReceiver.track,remoteMsid?(streams[remoteMsid.stream]||(streams[remoteMsid.stream]=new window.MediaStream),addTrackToStreamAndFireEvent(track,streams[remoteMsid.stream]),receiverList.push([track,rtpReceiver,streams[remoteMsid.stream]])):(streams.default||(streams.default=new window.MediaStream),addTrackToStreamAndFireEvent(track,streams.default),receiverList.push([track,rtpReceiver,streams.default])))}}else{(transceiver=pc.transceivers[sdpMLineIndex]||pc._createTransceiver(kind)).mid=mid,transceiver.iceGatherer||(transceiver.iceGatherer=pc._createIceGatherer(sdpMLineIndex,usingBundle)),cands.length&&"new"===transceiver.iceTransport.state&&(!isComplete||usingBundle&&0!==sdpMLineIndex?cands.forEach((function(candidate){maybeAddCandidate(transceiver.iceTransport,candidate)})):transceiver.iceTransport.setRemoteCandidates(cands)),localCapabilities=window.RTCRtpReceiver.getCapabilities(kind),edgeVersion<15019&&(localCapabilities.codecs=localCapabilities.codecs.filter((function(codec){return"rtx"!==codec.name}))),sendEncodingParameters=transceiver.sendEncodingParameters||[{ssrc:1001*(2*sdpMLineIndex+2)}];var stream,isNewTrack=!1;if("sendrecv"===direction||"sendonly"===direction){if(isNewTrack=!transceiver.rtpReceiver,rtpReceiver=transceiver.rtpReceiver||new window.RTCRtpReceiver(transceiver.dtlsTransport,kind),isNewTrack)track=rtpReceiver.track,remoteMsid&&"-"===remoteMsid.stream||(remoteMsid?(streams[remoteMsid.stream]||(streams[remoteMsid.stream]=new window.MediaStream,Object.defineProperty(streams[remoteMsid.stream],"id",{get:function(){return remoteMsid.stream}})),Object.defineProperty(track,"id",{get:function(){return remoteMsid.track}}),stream=streams[remoteMsid.stream]):(streams.default||(streams.default=new window.MediaStream),stream=streams.default)),stream&&(addTrackToStreamAndFireEvent(track,stream),transceiver.associatedRemoteMediaStreams.push(stream)),receiverList.push([track,rtpReceiver,stream])}else transceiver.rtpReceiver&&transceiver.rtpReceiver.track&&(transceiver.associatedRemoteMediaStreams.forEach((function(s){var nativeTrack=s.getTracks().find((function(t){return t.id===transceiver.rtpReceiver.track.id}));nativeTrack&&function(track,stream){stream.removeTrack(track),stream.dispatchEvent(new window.MediaStreamTrackEvent("removetrack",{track:track}))}(nativeTrack,s)})),transceiver.associatedRemoteMediaStreams=[]);transceiver.localCapabilities=localCapabilities,transceiver.remoteCapabilities=remoteCapabilities,transceiver.rtpReceiver=rtpReceiver,transceiver.rtcpParameters=rtcpParameters,transceiver.sendEncodingParameters=sendEncodingParameters,transceiver.recvEncodingParameters=recvEncodingParameters,pc._transceive(pc.transceivers[sdpMLineIndex],!1,isNewTrack)}}})),void 0===pc._dtlsRole&&(pc._dtlsRole="offer"===description.type?"active":"passive"),pc._remoteDescription={type:description.type,sdp:description.sdp},"offer"===description.type?pc._updateSignalingState("have-remote-offer"):pc._updateSignalingState("stable"),Object.keys(streams).forEach((function(sid){var stream=streams[sid];if(stream.getTracks().length){if(-1===pc.remoteStreams.indexOf(stream)){pc.remoteStreams.push(stream);var event=new Event("addstream");event.stream=stream,window.setTimeout((function(){pc._dispatchEvent("addstream",event)}))}receiverList.forEach((function(item){var track=item[0],receiver=item[1];stream.id===item[2].id&&fireAddTrack(pc,track,receiver,[stream])}))}})),receiverList.forEach((function(item){item[2]||fireAddTrack(pc,item[0],item[1],[])})),window.setTimeout((function(){pc&&pc.transceivers&&pc.transceivers.forEach((function(transceiver){transceiver.iceTransport&&"new"===transceiver.iceTransport.state&&transceiver.iceTransport.getRemoteCandidates().length>0&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),transceiver.iceTransport.addRemoteCandidate({}))}))}),4e3),Promise.resolve()},RTCPeerConnection.prototype.close=function(){this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&transceiver.iceTransport.stop(),transceiver.dtlsTransport&&transceiver.dtlsTransport.stop(),transceiver.rtpSender&&transceiver.rtpSender.stop(),transceiver.rtpReceiver&&transceiver.rtpReceiver.stop()})),this._isClosed=!0,this._updateSignalingState("closed")},RTCPeerConnection.prototype._updateSignalingState=function(newState){this.signalingState=newState;var event=new Event("signalingstatechange");this._dispatchEvent("signalingstatechange",event)},RTCPeerConnection.prototype._maybeFireNegotiationNeeded=function(){var pc=this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,window.setTimeout((function(){if(pc.needNegotiation){pc.needNegotiation=!1;var event=new Event("negotiationneeded");pc._dispatchEvent("negotiationneeded",event)}}),0))},RTCPeerConnection.prototype._updateIceConnectionState=function(){var newState,states={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&!transceiver.rejected&&states[transceiver.iceTransport.state]++})),newState="new",states.failed>0?newState="failed":states.checking>0?newState="checking":states.disconnected>0?newState="disconnected":states.new>0?newState="new":states.connected>0?newState="connected":states.completed>0&&(newState="completed"),newState!==this.iceConnectionState){this.iceConnectionState=newState;var event=new Event("iceconnectionstatechange");this._dispatchEvent("iceconnectionstatechange",event)}},RTCPeerConnection.prototype._updateConnectionState=function(){var newState,states={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(transceiver){transceiver.iceTransport&&transceiver.dtlsTransport&&!transceiver.rejected&&(states[transceiver.iceTransport.state]++,states[transceiver.dtlsTransport.state]++)})),states.connected+=states.completed,newState="new",states.failed>0?newState="failed":states.connecting>0?newState="connecting":states.disconnected>0?newState="disconnected":states.new>0?newState="new":states.connected>0&&(newState="connected"),newState!==this.connectionState){this.connectionState=newState;var event=new Event("connectionstatechange");this._dispatchEvent("connectionstatechange",event)}},RTCPeerConnection.prototype.createOffer=function(){var pc=this;if(pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not call createOffer after close"));var numAudioTracks=pc.transceivers.filter((function(t){return"audio"===t.kind})).length,numVideoTracks=pc.transceivers.filter((function(t){return"video"===t.kind})).length,offerOptions=arguments[0];if(offerOptions){if(offerOptions.mandatory||offerOptions.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==offerOptions.offerToReceiveAudio&&(numAudioTracks=!0===offerOptions.offerToReceiveAudio?1:!1===offerOptions.offerToReceiveAudio?0:offerOptions.offerToReceiveAudio),void 0!==offerOptions.offerToReceiveVideo&&(numVideoTracks=!0===offerOptions.offerToReceiveVideo?1:!1===offerOptions.offerToReceiveVideo?0:offerOptions.offerToReceiveVideo)}for(pc.transceivers.forEach((function(transceiver){"audio"===transceiver.kind?--numAudioTracks<0&&(transceiver.wantReceive=!1):"video"===transceiver.kind&&--numVideoTracks<0&&(transceiver.wantReceive=!1)}));numAudioTracks>0||numVideoTracks>0;)numAudioTracks>0&&(pc._createTransceiver("audio"),numAudioTracks--),numVideoTracks>0&&(pc._createTransceiver("video"),numVideoTracks--);var sdp=SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,pc._sdpSessionVersion++);pc.transceivers.forEach((function(transceiver,sdpMLineIndex){var track=transceiver.track,kind=transceiver.kind,mid=transceiver.mid||SDPUtils.generateIdentifier();transceiver.mid=mid,transceiver.iceGatherer||(transceiver.iceGatherer=pc._createIceGatherer(sdpMLineIndex,pc.usingBundle));var localCapabilities=window.RTCRtpSender.getCapabilities(kind);edgeVersion<15019&&(localCapabilities.codecs=localCapabilities.codecs.filter((function(codec){return"rtx"!==codec.name}))),localCapabilities.codecs.forEach((function(codec){"H264"===codec.name&&void 0===codec.parameters["level-asymmetry-allowed"]&&(codec.parameters["level-asymmetry-allowed"]="1"),transceiver.remoteCapabilities&&transceiver.remoteCapabilities.codecs&&transceiver.remoteCapabilities.codecs.forEach((function(remoteCodec){codec.name.toLowerCase()===remoteCodec.name.toLowerCase()&&codec.clockRate===remoteCodec.clockRate&&(codec.preferredPayloadType=remoteCodec.payloadType)}))})),localCapabilities.headerExtensions.forEach((function(hdrExt){(transceiver.remoteCapabilities&&transceiver.remoteCapabilities.headerExtensions||[]).forEach((function(rHdrExt){hdrExt.uri===rHdrExt.uri&&(hdrExt.id=rHdrExt.id)}))}));var sendEncodingParameters=transceiver.sendEncodingParameters||[{ssrc:1001*(2*sdpMLineIndex+1)}];track&&edgeVersion>=15019&&"video"===kind&&!sendEncodingParameters[0].rtx&&(sendEncodingParameters[0].rtx={ssrc:sendEncodingParameters[0].ssrc+1}),transceiver.wantReceive&&(transceiver.rtpReceiver=new window.RTCRtpReceiver(transceiver.dtlsTransport,kind)),transceiver.localCapabilities=localCapabilities,transceiver.sendEncodingParameters=sendEncodingParameters})),"max-compat"!==pc._config.bundlePolicy&&(sdp+="a=group:BUNDLE "+pc.transceivers.map((function(t){return t.mid})).join(" ")+"\r\n"),sdp+="a=ice-options:trickle\r\n",pc.transceivers.forEach((function(transceiver,sdpMLineIndex){sdp+=writeMediaSection(transceiver,transceiver.localCapabilities,"offer",transceiver.stream,pc._dtlsRole),sdp+="a=rtcp-rsize\r\n",!transceiver.iceGatherer||"new"===pc.iceGatheringState||0!==sdpMLineIndex&&pc.usingBundle||(transceiver.iceGatherer.getLocalCandidates().forEach((function(cand){cand.component=1,sdp+="a="+SDPUtils.writeCandidate(cand)+"\r\n"})),"completed"===transceiver.iceGatherer.state&&(sdp+="a=end-of-candidates\r\n"))}));var desc=new window.RTCSessionDescription({type:"offer",sdp:sdp});return Promise.resolve(desc)},RTCPeerConnection.prototype.createAnswer=function(){var pc=this;if(pc._isClosed)return Promise.reject(makeError("InvalidStateError","Can not call createAnswer after close"));if("have-remote-offer"!==pc.signalingState&&"have-local-pranswer"!==pc.signalingState)return Promise.reject(makeError("InvalidStateError","Can not call createAnswer in signalingState "+pc.signalingState));var sdp=SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,pc._sdpSessionVersion++);pc.usingBundle&&(sdp+="a=group:BUNDLE "+pc.transceivers.map((function(t){return t.mid})).join(" ")+"\r\n"),sdp+="a=ice-options:trickle\r\n";var mediaSectionsInOffer=SDPUtils.getMediaSections(pc._remoteDescription.sdp).length;pc.transceivers.forEach((function(transceiver,sdpMLineIndex){if(!(sdpMLineIndex+1>mediaSectionsInOffer)){if(transceiver.rejected)return"application"===transceiver.kind?"DTLS/SCTP"===transceiver.protocol?sdp+="m=application 0 DTLS/SCTP 5000\r\n":sdp+="m=application 0 "+transceiver.protocol+" webrtc-datachannel\r\n":"audio"===transceiver.kind?sdp+="m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n":"video"===transceiver.kind&&(sdp+="m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"),void(sdp+="c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:"+transceiver.mid+"\r\n");var localTrack;if(transceiver.stream)"audio"===transceiver.kind?localTrack=transceiver.stream.getAudioTracks()[0]:"video"===transceiver.kind&&(localTrack=transceiver.stream.getVideoTracks()[0]),localTrack&&edgeVersion>=15019&&"video"===transceiver.kind&&!transceiver.sendEncodingParameters[0].rtx&&(transceiver.sendEncodingParameters[0].rtx={ssrc:transceiver.sendEncodingParameters[0].ssrc+1});var commonCapabilities=getCommonCapabilities(transceiver.localCapabilities,transceiver.remoteCapabilities);!commonCapabilities.codecs.filter((function(c){return"rtx"===c.name.toLowerCase()})).length&&transceiver.sendEncodingParameters[0].rtx&&delete transceiver.sendEncodingParameters[0].rtx,sdp+=writeMediaSection(transceiver,commonCapabilities,"answer",transceiver.stream,pc._dtlsRole),transceiver.rtcpParameters&&transceiver.rtcpParameters.reducedSize&&(sdp+="a=rtcp-rsize\r\n")}}));var desc=new window.RTCSessionDescription({type:"answer",sdp:sdp});return Promise.resolve(desc)},RTCPeerConnection.prototype.addIceCandidate=function(candidate){var sections,pc=this;return candidate&&void 0===candidate.sdpMLineIndex&&!candidate.sdpMid?Promise.reject(new TypeError("sdpMLineIndex or sdpMid required")):new Promise((function(resolve,reject){if(!pc._remoteDescription)return reject(makeError("InvalidStateError","Can not add ICE candidate without a remote description"));if(candidate&&""!==candidate.candidate){var sdpMLineIndex=candidate.sdpMLineIndex;if(candidate.sdpMid)for(var i=0;i<pc.transceivers.length;i++)if(pc.transceivers[i].mid===candidate.sdpMid){sdpMLineIndex=i;break}var transceiver=pc.transceivers[sdpMLineIndex];if(!transceiver)return reject(makeError("OperationError","Can not add ICE candidate"));if(transceiver.rejected)return resolve();var cand=Object.keys(candidate.candidate).length>0?SDPUtils.parseCandidate(candidate.candidate):{};if("tcp"===cand.protocol&&(0===cand.port||9===cand.port))return resolve();if(cand.component&&1!==cand.component)return resolve();if((0===sdpMLineIndex||sdpMLineIndex>0&&transceiver.iceTransport!==pc.transceivers[0].iceTransport)&&!maybeAddCandidate(transceiver.iceTransport,cand))return reject(makeError("OperationError","Can not add ICE candidate"));var candidateString=candidate.candidate.trim();0===candidateString.indexOf("a=")&&(candidateString=candidateString.substr(2)),(sections=SDPUtils.getMediaSections(pc._remoteDescription.sdp))[sdpMLineIndex]+="a="+(cand.type?candidateString:"end-of-candidates")+"\r\n",pc._remoteDescription.sdp=SDPUtils.getDescription(pc._remoteDescription.sdp)+sections.join("")}else for(var j=0;j<pc.transceivers.length&&(pc.transceivers[j].rejected||(pc.transceivers[j].iceTransport.addRemoteCandidate({}),(sections=SDPUtils.getMediaSections(pc._remoteDescription.sdp))[j]+="a=end-of-candidates\r\n",pc._remoteDescription.sdp=SDPUtils.getDescription(pc._remoteDescription.sdp)+sections.join(""),!pc.usingBundle));j++);resolve()}))},RTCPeerConnection.prototype.getStats=function(selector){if(selector&&selector instanceof window.MediaStreamTrack){var senderOrReceiver=null;if(this.transceivers.forEach((function(transceiver){transceiver.rtpSender&&transceiver.rtpSender.track===selector?senderOrReceiver=transceiver.rtpSender:transceiver.rtpReceiver&&transceiver.rtpReceiver.track===selector&&(senderOrReceiver=transceiver.rtpReceiver)})),!senderOrReceiver)throw makeError("InvalidAccessError","Invalid selector.");return senderOrReceiver.getStats()}var promises=[];return this.transceivers.forEach((function(transceiver){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach((function(method){transceiver[method]&&promises.push(transceiver[method].getStats())}))})),Promise.all(promises).then((function(allStats){var results=new Map;return allStats.forEach((function(stats){stats.forEach((function(stat){results.set(stat.id,stat)}))})),results}))};["RTCRtpSender","RTCRtpReceiver","RTCIceGatherer","RTCIceTransport","RTCDtlsTransport"].forEach((function(ortcObjectName){var obj=window[ortcObjectName];if(obj&&obj.prototype&&obj.prototype.getStats){var nativeGetstats=obj.prototype.getStats;obj.prototype.getStats=function(){return nativeGetstats.apply(this).then((function(nativeStats){var mapStats=new Map;return Object.keys(nativeStats).forEach((function(id){var stat;nativeStats[id].type={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[(stat=nativeStats[id]).type]||stat.type,mapStats.set(id,nativeStats[id])})),mapStats}))}}}));var methods=["createOffer","createAnswer"];return methods.forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[0]||"function"==typeof args[1]?nativeMethod.apply(this,[arguments[2]]).then((function(description){"function"==typeof args[0]&&args[0].apply(null,[description])}),(function(error){"function"==typeof args[1]&&args[1].apply(null,[error])})):nativeMethod.apply(this,arguments)}})),(methods=["setLocalDescription","setRemoteDescription","addIceCandidate"]).forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[1]||"function"==typeof args[2]?nativeMethod.apply(this,arguments).then((function(){"function"==typeof args[1]&&args[1].apply(null)}),(function(error){"function"==typeof args[2]&&args[2].apply(null,[error])})):nativeMethod.apply(this,arguments)}})),["getStats"].forEach((function(method){var nativeMethod=RTCPeerConnection.prototype[method];RTCPeerConnection.prototype[method]=function(){var args=arguments;return"function"==typeof args[1]?nativeMethod.apply(this,arguments).then((function(){"function"==typeof args[1]&&args[1].apply(null)})):nativeMethod.apply(this,arguments)}})),RTCPeerConnection}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const uuid4=__webpack_require__(171),contact_service_1=__webpack_require__(6),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),room_service_1=__webpack_require__(25),logger_service_1=__webpack_require__(4),virtualBackground_service_1=__webpack_require__(68),main_service_1=__webpack_require__(15),errorHelper_service_1=__webpack_require__(12),webrtcConfigAndUtils_1=__webpack_require__(44),webrtcP2P_service_1=__webpack_require__(35),event_service_1=__webpack_require__(11),deviceManagement_service_1=__webpack_require__(56);class WebConferenceService{constructor($q,$rootScope,$log,$http,$interval,errorHelperService,ConferenceSession,Conference){this.$q=$q,this.$rootScope=$rootScope,this.$log=$log,this.$http=$http,this.$interval=$interval,this.errorHelperService=errorHelperService,this.ConferenceSession=ConferenceSession,this.Conference=Conference,this.MEDIATYPE={WEBRTC:"webrtc",WEBRTCSHARINGONLY:"webrtcSharingOnly",PSTNAUDIO:"pstnAudio"},this.xmppConnectionSubscription=null,this.deviceManagementSubscription=null,this.videoServiceSubscription=null,this.started=!1,this.webConferenceRoom=null,this.webrtcConferenceId=null,this.webrtcSharingOnlyRoom=null,this.webrtcSharingOnlyConferenceId=null,this.jingleJid=null,this.makingCall=!1,this.mozaicViewModeValue=!0,this.connected=!1,this.disconnecting=!1,this.reconnecting={},this.audioProfileChanging=!1,this.activeSpeaker=!1,this.disableAutoUpdateSubstreamLevels=!1,this.disableAutoFillForGalleryElements=!1,this.addingMedia=!1,this.settingsService=settings_service_1.SettingsService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.virtualBackgroundService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.newErrorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.conferenceEndpoints={},this.conferenceSessions={},this.rxSubject=new rxjs_1.Subject,this.logger=logger_service_1.LoggerService.getInstance(),this.defaultConferenceLayout="gallery_view",this.replaceBackgroundSubscription=null,this.attachLocalMediaStream=(attach,conferenceSession)=>{if(attach){let hasRemoteSessions=!1;if((conferenceSession.hasLocalVideo||conferenceSession.hasLocalSharing)&&(hasRemoteSessions=this.hasRemoteVideoOrSharingSession(conferenceSession.id)),conferenceSession.hasLocalVideo){const session=conferenceSession.sessions[conferenceSession.localVideoSessionId];if(session){const stream=conferenceSession.localStreams[session.localStreamId];hasRemoteSessions||conferenceSession.hasLocalSharing||this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),stream,session.sid),this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#conferenceVideoPip"),stream,session.sid)}}if(conferenceSession.hasLocalSharing){const session=conferenceSession.sessions[conferenceSession.localSharingSessionId];if(session){const stream=conferenceSession.localStreams[session.localStreamId];hasRemoteSessions?this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#conferenceSharingPip"),stream,session.sid):this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),stream,session.sid)}}}else this.webrtcP2PService.RTC.clearMediaStream(angular.element("#minivideo"),null)}}start(){return this.contactService.userContact&&!this.contactService.userContact.roomsEnabled?(this.$log.info("[WebConferenceService] === start skipped - roomsEnabled : "+this.contactService.userContact.roomsEnabled),this.$q.when()):this.$q(resolve=>{this.$log.info("[WebConferenceService] === STARTING ==="),this.confProvPortalURL=config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/",this.confPortalURL=config.restServerUrl+"/api/rainbow/conference/v1.0/conferences/",this.conferenceEndpoints={},this.conferenceSessions={},this.listeners=[],this.statsIntervals=[],this.connected=!0,this.disconnecting=!1,this.webConferenceRoom=null,this.webrtcConferenceId=null,this.webrtcSharingOnlyRoom=null,this.webrtcSharingOnlyConferenceId=null,this.jingleJid=null,this.makingCall=!1,this.videoGalleryElements=[],this.activeSpeaker=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.BUBBLE_ACTIVE_SPEAKER),this.attachHandlers(),this.videoGalleryElementsNumber=5,this.videoGridElementsNumber=12,this.started=!0,this.$log.info("[WebConferenceService] === STARTED ==="),resolve()})}stop(){return this.contactService.userContact&&!this.contactService.userContact.roomsEnabled?(this.$log.info("[WebConferenceService] === stop skipped - roomsEnabled : "+this.contactService.userContact.roomsEnabled),this.$q.when()):(this.$log.info("[WebConferenceService] === STOPPING ==="),this.started=!1,this.makingCall=!1,this.xmppConnectionSubscription&&this.xmppConnectionSubscription.unsubscribe(),this.deviceManagementSubscription&&this.deviceManagementSubscription.unsubscribe(),this.videoServiceSubscription&&(this.videoServiceSubscription.unsubscribe(),this.videoServiceSubscription=null),this.listeners&&this.listeners.forEach(listenerDestroy=>{listenerDestroy()}),this.$log.info("[WebConferenceService] === STOPPED ==="),this.$q.when())}attachHandlers(){this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : "+event.name);try{"ON_XMPP_DISCONNECTED"===event.name?(this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : disconnected"),this.connected=!1):"ON_XMPP_CONNECTED"===event.name&&(this.$log.info("[WebConferenceService] onConnectionStateChangeEvent : connected"),this.connected=!0,this.reconnectAllActiveConferenceSessions())}catch(error){this.$log.info("[WebConferenceService] onConnectionStateChangeEvent error : "+error)}}),this.replaceBackgroundSubscription&&(this.replaceBackgroundSubscription.unsubscribe(),this.replaceBackgroundSubscription=null),this.replaceBackgroundSubscription=this.virtualBackgroundService.rxSubject.subscribe(event=>{"UPDATE_STREAM"===event.name&&this.onReplaceBackgroundChangeEvent(event)}),this.deviceManagementSubscription&&(this.deviceManagementSubscription.unsubscribe(),this.deviceManagementSubscription=null),this.deviceManagementSubscription=this.deviceManagementService.subscribe(event=>{try{event.name===this.deviceManagementService.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED&&"audioinput"===event.data.kind&&this.onAudioProfileChangeEvent()}catch{}}),this.videoServiceSubscription&&(this.videoServiceSubscription.unsubscribe(),this.videoServiceSubscription=null),this.videoServiceSubscription=this.webrtcP2PService.subscribe(event=>{this.onWebrtcP2PService(event)})}onWebrtcP2PService(event){try{if("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED"===event.name){const webConference=this.getActiveConferenceSession();webConference&&webConference.localSharingSessionId&&this.removeMediaFromConferenceSession(webConference,"sharing")}}catch(error){}}reconnectAllActiveConferenceSessions(){Object.keys(this.conferenceSessions).forEach(conferenceSessionId=>{const conferenceSession=this.conferenceSessions[conferenceSessionId];if(conferenceSession.haveJoined&&conferenceSession.isActive())for(const[sessionId,session]of Object.entries(conferenceSession.sessions))"audio"===session.localType?(this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- try to reconnect the audio session : "+sessionId),this.sendTransportReplaceForSession(session,1e3)):conferenceSession.localVideoSessionId===sessionId?(this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- try to reconnect the local video session : "+sessionId),this.sendTransportReplaceForSession(session,2e3)):conferenceSession.localSharingSessionId===sessionId?(this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- try to reconnect the local sharing session : "+sessionId),this.sendTransportReplaceForSession(session,3e3)):"video"===session.remoteType?setTimeout((confSession,videoSession)=>{videoSession&&this.connected&&confSession&&confSession.isActive()?(confSession.videoGallery||(this.createVideoGalleryElements(confSession.conferenceView),confSession.videoGallery=this.videoGalleryElements),!videoSession.peerconnection||"stable"!==videoSession.peerconnection.signalingState||"failed"!==videoSession.peerconnection.iceConnectionState&&"disconnected"!==videoSession.peerconnection.iceConnectionState?this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- video session is already connected "+videoSession.sid):(this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- try to reconnect the video session : "+videoSession.sid),this.xmppService.connection.jingle.terminate(videoSession.sid),this.updateStatisticsForSession(confSession.id,videoSession.sid),delete this.webrtcConfigAndUtils.callsStats[videoSession.sid],confSession.videoGallery.forEach(element=>{element.sessionId===videoSession.sid&&(element.sessionId="")}),delete confSession.sessions[videoSession.sid],this.resubscribeToSessions(confSession))):this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- : missing conference or video session")},3e3,conferenceSession,session):"sharing"===session.remoteType&&setTimeout((confSession,sharingSession)=>{sharingSession&&this.connected&&confSession&&confSession.isActive()?!sharingSession.peerconnection||"stable"!==sharingSession.peerconnection.signalingState||"failed"!==sharingSession.peerconnection.iceConnectionState&&"disconnected"!==sharingSession.peerconnection.iceConnectionState?this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- sharing session is already connected "+sharingSession.sid):(this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- try to reconnect the sharing session : "+sharingSession.sid),this.xmppService.connection.jingle.terminate(sharingSession.sid,"icefailed"),this.updateStatisticsForSession(confSession.id,sharingSession.sid),delete this.webrtcConfigAndUtils.callsStats[sharingSession.sid],this.removeSessionFromVideoGallery(confSession,sharingSession.sid),delete conferenceSession.sessions[sharingSession.sid],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",confSession)):this.$log.info("[WebConferenceService] -- reconnectAllActiveConferenceSessions -- : missing conference or sharing session")},2e3,conferenceSession,session)})}onReplaceBackgroundChangeEvent(event){try{const confSession=this.getActiveConferenceSession();if(confSession&&confSession.localVideoSessionId){const session=confSession.sessions[confSession.localVideoSessionId];if(session){this.logger.info("[WebconferenceService] onReplaceBackgroundChangeEvent");let sessionStream=session.localStreams.pop();event.data.type===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.NONE&&(sessionStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),sessionStream.stop&&sessionStream.stop(),sessionStream=null),delete confSession.localStreams[session.localStreamId];const stream=event.data.stream;session.localStreams.push(stream),confSession.localStreams.push(stream),session.localStreamId=confSession.localStreams.length-1,session.addStream(stream),session.sendTransportReplace(),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",confSession)}}}catch(error){}}subscribe(handler){return this.rxSubject.subscribe(handler)}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}retrieveWebConferences(mediaType=this.MEDIATYPE.WEBRTC){return this.$log.info("[WebConferenceService] retrieveWebConferences with mediaType="+mediaType),this.$q((resolve,reject)=>{if(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED)&&!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_ADD_PARTICIPANT)&&mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY)return this.$log.warn("[WebConferenceService] retrieveWebConferences - user is not allowed"),void reject(new Error("notAllowed"));const urlQueryParameters="?scheduled=false&format=full&userId="+this.contactService.userContact.dbId;this.$http({method:"GET",url:this.confProvPortalURL+"conferences"+urlQueryParameters,headers:this.authService.getRequestHeader()}).then(response=>{const conferencesProvisionData=response.data.data;this.$log.info("[WebConferenceService] retrieveWebConferences successfully");for(const conferenceData of conferencesProvisionData)switch(conferenceData.mediaType){case this.MEDIATYPE.WEBRTC:case this.MEDIATYPE.WEBRTCSHARINGONLY:this.updateOrCreateWebConferenceEndpoint(conferenceData);break;case this.MEDIATYPE.PSTNAUDIO:}resolve(conferencesProvisionData)},response=>{const errorMessage="retrieveWebConferences failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}updateSubstreamLevelForPublisher(confId,participantId,subStreamLevel,galleryElement){return confId&&participantId&&subStreamLevel&&galleryElement?galleryElement.simulcast&&galleryElement.subStreamLevel!==subStreamLevel?(this.$log.info("[WebConferenceService] updateSubstreamLevelForPublisher(confId="+confId+" participantId="+participantId+" publisherId="+galleryElement.publisherId+" level="+subStreamLevel+")"),this.$q((resolve,reject)=>{if(!this.conferenceSessions[confId])return this.$log.error("[WebConferenceService] updateSubstreamLevelForPublisher - no corresponding conference session to update"),void reject();const oldLevel=galleryElement.subStreamLevel;galleryElement.subStreamLevel=subStreamLevel;const data={option:"update",mediaType:"webrtc",publisherId:galleryElement.publisherId?galleryElement.publisherId:void 0,subStreamLevel:subStreamLevel};this.$http({method:"PUT",url:this.confPortalURL+confId+"/participants/"+participantId,headers:this.authService.getRequestHeader(),data:data}).then(response=>{const status=response.data;galleryElement.subStreamLevel=subStreamLevel,this.$log.info("[WebConferenceService] updateSubstreamLevelForPublisher( confId="+confId+" participantId="+participantId+" publisherId="+galleryElement.publisherId+" level="+subStreamLevel+") successfully"),resolve(status)},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="updateSubstreamLevelForPublisher( confId="+confId+" participantId="+participantId+") failure: "+msg;this.$log.error("[WebConferenceService] "+errorMessage),galleryElement.subStreamLevel=oldLevel,reject(new Error(errorMessage))})})):(this.$log.info("[WebConferenceService] updateSubstreamLevelForPublisher - already at same level "+(galleryElement.simulcast?"":"(no simulcast proposed)")),this.$q.resolve()):(this.$log.error("[WebConferenceService] updateSubstreamLevelForPublisher - missing a parameter"),this.$q.reject())}updateConference(confEndpointId,confData){return this.$log.info("[WebConferenceService] updateConference"),this.$q((resolve,reject)=>{if(confEndpointId)this.$http({method:"PUT",url:this.confProvPortalURL+"conferences/"+confEndpointId,headers:this.authService.getRequestHeader(),data:confData}).then(response=>{const conferenceData=response.data.data,conference=this.Conference.createFromData(conferenceData);conferenceData.hasOwnProperty("id")&&(this.conferenceEndpoints[conferenceData.id]&&delete this.conferenceEndpoints[conferenceData.id],this.conferenceEndpoints[conferenceData.id]=conference),this.$log.info("[WebConferenceService] updateConference successfully"),resolve(conference)},response=>{const errorMessage="updateConference failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))});else{const errorMessage="updateConference failure: No confEndpoint";this.$log.error("[WebConferenceService] updateConference failure : No confEndpoint"),reject(new Error(errorMessage))}})}createVideoGalleryElements(conferenceView="gallery_view"){this.videoGalleryElements=[];let index=0;if(index=conferenceView===this.ConferenceSession.ConferenceView.SpeakerView?0:conferenceView===this.ConferenceSession.ConferenceView.GalleryView?this.videoGalleryElementsNumber:this.videoGridElementsNumber,this.activeSpeaker){const obj={state:"free",sessionId:"",id:"videoGallery_0",publisherId:"",subStreamLevel:null,activeSpeaker:!0,hold:!1};this.videoGalleryElements.push(obj)}for(let i=1;i<=index;i++){const item={state:"free",sessionId:"",id:"videoGallery_"+i,publisherId:"",publisherJid:"",subStreamLevel:null,hold:!1};this.videoGalleryElements.push(item)}if(this.activeSpeaker&&this.mozaicViewModeValue)for(let i=index+1;i<=this.videoGridElementsNumber;i++){const item={state:"busy",sessionId:"",id:"videoGallery_"+i,publisherId:"",publisherJid:"",subStreamLevel:null,hold:!1};this.videoGalleryElements.push(item)}if("true"===this.settingsService.getSetting("sfuDisableVideos"))for(let i=0;i<this.videoGalleryElements.length;i++)this.videoGalleryElements[i].state="busy"}updateVideoGalleryElementsState(conferenceSession,videoGalleryElements,conferenceView){if(!this.activeSpeaker)return videoGalleryElements;if("true"===this.settingsService.getSetting("sfuDisableHold"))return videoGalleryElements;if("true"===this.settingsService.getSetting("sfuDisableVideos"))return videoGalleryElements;if(this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0))return videoGalleryElements;let startIndex=0,endIndex=0;conferenceView===this.ConferenceSession.ConferenceView.SpeakerView?(startIndex=0,endIndex=0):conferenceView===this.ConferenceSession.ConferenceView.GalleryView?(startIndex=0,endIndex=this.videoGalleryElementsNumber):(startIndex=1,endIndex=this.videoGridElementsNumber);for(let i=0;i<startIndex;i++)if("free"===videoGalleryElements[i].state)videoGalleryElements[i].state="busy";else if("busy"===videoGalleryElements[i].state&&videoGalleryElements[i].sessionId&&!videoGalleryElements[i].hold){const session=conferenceSession.sessions[videoGalleryElements[i].sessionId];session&&session.sendHold(!0),videoGalleryElements[i].hold=!0}for(let i=startIndex;i<=endIndex;i++)if("busy"!==videoGalleryElements[i].state||videoGalleryElements[i].sessionId||videoGalleryElements[i].publisherId){if("busy"===videoGalleryElements[i].state&&videoGalleryElements[i].sessionId&&videoGalleryElements[i].hold){videoGalleryElements[i].hold=!1;const session=conferenceSession.sessions[videoGalleryElements[i].sessionId];session&&session.sendHold(!1)}}else videoGalleryElements[i].state="free";for(let i=endIndex+1;i<=this.videoGridElementsNumber;i++)if("free"===videoGalleryElements[i].state)videoGalleryElements[i].state="busy";else if("busy"===videoGalleryElements[i].state&&videoGalleryElements[i].sessionId&&!videoGalleryElements[i].hold){videoGalleryElements[i].hold=!0;const session=conferenceSession.sessions[videoGalleryElements[i].sessionId];session&&session.sendHold(!0)}return videoGalleryElements}holdOrUnholdHiddenSessions(conferenceSession,videoGalleryElements,hold){if(!this.activeSpeaker)return videoGalleryElements;const endIndex=this.videoGalleryElementsNumber;for(let i=1;i<=endIndex;i++)if("busy"!==videoGalleryElements[i].state||videoGalleryElements[i].sessionId||videoGalleryElements[i].publisherId||(videoGalleryElements[i].state="free"),hold&&"busy"===videoGalleryElements[i].state&&videoGalleryElements[i].sessionId&&!videoGalleryElements[i].hold&&!videoGalleryElements[i].pinned){videoGalleryElements[i].hold=!0;const session=conferenceSession.sessions[videoGalleryElements[i].sessionId];session&&session.sendHold(!0)}else if(!hold&&"busy"===videoGalleryElements[i].state&&videoGalleryElements[i].sessionId&&videoGalleryElements[i].hold){videoGalleryElements[i].hold=!1;const session=conferenceSession.sessions[videoGalleryElements[i].sessionId];session&&session.sendHold(!1)}return videoGalleryElements}holdOrUnholdVideoSessionAndUpdateGalleryElement(conferenceSessionId,sessionId,hold){const conferenceSession=this.conferenceSessions[conferenceSessionId],session=conferenceSession.sessions[sessionId];if(conferenceSession&&conferenceSession.videoGallery&&sessionId&&session){if(!session||session.onHold!==hold){this.logger.info("holdOrUnholdVideoSessionAndUpdateGalleryElement for confId "+conferenceSessionId+" and sessId "+sessionId+" and hold state: "+hold);for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].sessionId===sessionId&&(session.sendHold(hold),conferenceSession.videoGallery[i].hold=hold);return conferenceSession}}else this.logger.warn("holdOrUnholdVideoSessionAndUpdateGalleryElement -- missing or wrong parameters")}setVideoGalleryElementsNumber(number){this.videoGalleryElementsNumber=number}setVideoGridElementsNumber(number){this.videoGridElementsNumber=number}setActiveSpeakerValue(value){this.activeSpeaker=value}setMozaicViewModeValue(value){this.mozaicViewModeValue=value}isActiveSpeakerEnabled(){return this.activeSpeaker}getConferenceSessions(){return this.conferenceSessions}getConferenceEndpoints(){return this.conferenceEndpoints}addConferenceEndpoint(conferenceEndpointId,conferenceEndpoint){conferenceEndpointId?this.conferenceEndpoints[conferenceEndpointId]=conferenceEndpoint:this.$log.warn("[WebConferenceService] addConferenceEndpoint - missing conferenceEndpointId")}getConferenceIdToUse(room,mediaType=this.MEDIATYPE.WEBRTC){const webPontConferenceId=this.getPontConfIdForRoom(room,mediaType);if(webPontConferenceId)return webPontConferenceId;switch(mediaType){case this.MEDIATYPE.WEBRTC:if(room.isUserModerator(this.contactService.userContact)&&this.webrtcConferenceId)return this.webrtcConferenceId;break;case this.MEDIATYPE.WEBRTCSHARINGONLY:if(room.owner&&this.webrtcSharingOnlyConferenceId)return this.webrtcSharingOnlyConferenceId}return""}isMyConference(conferenceId){return conferenceId&&(this.webrtcConferenceId&&conferenceId===this.webrtcConferenceId||this.webrtcSharingOnlyConferenceId&&conferenceId===this.webrtcSharingOnlyConferenceId)}bubbleDeclineInvitationForWebConference(room){return this.$q((resolve,reject)=>{if(!room){const error=new Error("[webConferenceService] bubbleDeclineInvitationForWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){const error=new Error("[webConferenceService] bubbleDeclineInvitationForWebConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}this.$http({method:"PUT",url:this.confPortalURL+webPontConferenceId+"/reject",headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTC,roomId:room.dbId}}).then(()=>{this.$log.debug("[webConferenceService] bubbleDeclineInvitationForWebConference - success -- "),resolve()},errorResponse=>{this.makingCall=!1;this.$log.error("[webConferenceService] bubbleDeclineInvitationForWebConference - error on server"),reject(this.errorHelperService.handleError(errorResponse))})})}bubbleStartOrJoinWebConference(room){return this.$q((resolve,reject)=>{if(!room){const error=new Error("[webConferenceService] bubbleStartOrJoinWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&this.setDefaultConferenceLayout("grid_view");const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);this.isMyConference(webPontConferenceId)?this.bubbleStartWebConference(room).then(()=>{resolve()}).catch(()=>{reject()}):this.bubbleJoinWebConference(room).then(()=>{resolve()}).catch(err=>{reject(err)})})}bubbleStartWebConference(room){return this.$q((resolve,reject)=>{if(!room){const error=new Error("[webConferenceService] bubbleStartWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){const error=new Error("[webConferenceService] bubbleStartWebConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}if(this.makingCall)return this.$log.warn("[webConferenceService] already starting a conference"),this.$q.resolve();this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&this.setDefaultConferenceLayout("grid_view"),this.$log.info("[WebConferenceService] bubbleStartWebConference "+webPontConferenceId),this.makingCall=!0;const confSession=this.conferenceSessions[webPontConferenceId];if(confSession&&confSession.active)return this.$log.info("[webConferenceService] bubbleStartWebConference - No need to start an already active conference"),void resolve(this.joinWebConference(webPontConferenceId,"moderator",!1));const conferenceSession=this.ConferenceSession.createFromData(webPontConferenceId,[],!1,"webrtc",this.defaultConferenceLayout);conferenceSession.status="ringing",conferenceSession.roomId=room.dbId,conferenceSession.isMyConference=!0,this.conferenceSessions[webPontConferenceId]=conferenceSession,this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]),this.$http({method:"PUT",url:this.confPortalURL+webPontConferenceId+"/start",headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTC,roomId:room.dbId}}).then(()=>(this.$log.info("[webConferenceService] startWebConference - success -- now joining the conference"),resolve(this.joinWebConference(webPontConferenceId,"moderator",!1))),errorResponse=>{this.makingCall=!1;let errorMsg="[webConferenceService] startWebConference - error on server, can't start conference -- ",msg="startMeetingFailure";errorResponse&&((403620===errorResponse.errorDetailsCode||errorResponse.data&&403620===errorResponse.data.errorDetailsCode)&&(msg="startMeetingConflict"),errorResponse.errorDetailsLabel?errorMsg+=errorResponse.errorDetailsLabel:errorResponse.data&&(errorMsg+=errorResponse.data.errorDetailsCode+" "+errorResponse.data.errorMsg)),this.$log.error(errorMsg),this.mainService.showGlobalPopupMessage({popupTitle:"startConference",popupBody:msg,okLabel:"ok"}),this.leaveWebConference(webPontConferenceId),this.removeConferenceSession(webPontConferenceId),reject(this.errorHelperService.handleError(errorResponse)),this.$log.error("[webConferenceService] startWebConference "+this.errorHelperService.getErrorFullMessage(errorResponse))})})}bubbleJoinWebConference(room){return this.$q((resolve,reject)=>{if(!room){const error=new Error("[webConferenceService] bubbleJoinWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){const error=new Error("[webConferenceService] bubbleJoinWebConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}if(this.makingCall)return this.$log.warn("[webConferenceService] already joining a conference"),this.$q.resolve();this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&this.setDefaultConferenceLayout("grid_view"),this.$log.info("[WebConferenceService] bubbleJoinWebConference "+webPontConferenceId),this.makingCall=!0,this.$rootScope.$broadcast("ON_CONFERENCE_ENDED_INVITATION",room);let confSession=this.conferenceSessions[webPontConferenceId];confSession||(confSession=this.ConferenceSession.createFromData(webPontConferenceId,[],!1,"webrtc",this.defaultConferenceLayout)),confSession.conferenceView=this.defaultConferenceLayout,confSession.status="ringing",confSession.roomId=room.dbId,this.conferenceSessions[webPontConferenceId]=confSession,this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]);const role=this.isMyConference(webPontConferenceId)?"moderator":"member";this.joinWebConference(webPontConferenceId,role).then(()=>{resolve()}).catch(error=>{reject(error)})})}async bubbleJoinWebConferenceByPhone(room,phoneNumber){if(!room||!phoneNumber){const error=new Error("[webConferenceService] bubbleJoinWebConferenceByPhone error - missing parameters");return this.$log.error(error.message),Promise.reject(error)}const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){const error=new Error("[webConferenceService] bubbleJoinWebConference error - no available pont conference");return this.$log.error(error.message),Promise.reject(error)}const url=this.confPortalURL+webPontConferenceId+"/join",params={participant:{role:"member",type:"unmuted"},mediaType:this.MEDIATYPE.WEBRTC,delegateCapability:!1,participantPhoneNumber:phoneNumber};return this.webrtcConfigAndUtils.webrtcConfig&&this.webrtcConfigAndUtils.webrtcConfig.dc&&(params.dc=this.webrtcConfigAndUtils.webrtcConfig.dc),this.$q((resolve,reject)=>{this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:params}).then(response=>{const data=response.data.data;console.error(data),resolve()},errorResponse=>{if(errorResponse){const msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="joinWebConference( confId="+webPontConferenceId+") failure: "+msg;this.$log.error("[webConferenceService] "+errorMessage)}this.makingCall=!1;const data={popupTitle:"warning",popupBody:"joinMeetingFailure",okLabel:"ok"};errorResponse&&errorResponse.data&&403615===errorResponse.data.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),errorResponse&&errorResponse.data&&403060===errorResponse.data.errorDetailsCode&&(data.popupBody="lockedConferenceError"),this.leaveWebConference(webPontConferenceId),delete this.conferenceSessions[webPontConferenceId],this.mainService.showGlobalPopupMessage(data),reject(this.errorHelperService.handleError(errorResponse))})})}startOrJoinWebConference(room){return this.$q((resolve,reject)=>{if(!room){const error=new Error("[webConferenceService] startOrJoinWebConference error - missing parameters for room");return this.$log.error(error.message),void reject(error)}const webPontConferenceId=this.getConferenceIdToUse(room,this.MEDIATYPE.WEBRTC);if(!webPontConferenceId){const error=new Error("[webConferenceService] startOrJoinWebConference error - no available pont conference");return this.$log.error(error.message),void reject(error)}if(this.$log.info("[WebConferenceService] startOrJoinWebConference -- "+webPontConferenceId),this.makingCall)return this.$log.warn("[webConferenceService] already starting a conference"),this.$q.resolve();this.makingCall=!0,this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC).then(()=>{const conferenceSession=this.conferenceSessions[webPontConferenceId];if(!(this.isMyConference(webPontConferenceId)||conferenceSession&&conferenceSession.active)){const error=new Error("[webConferenceService] startOrJoinWebConference error - no active conference to join");return this.$log.error(error.message),reject(error),void(this.makingCall=!1)}const role=this.isMyConference(webPontConferenceId)?"moderator":"member";conferenceSession&&conferenceSession.active?(this.$rootScope.$broadcast("ON_CONFERENCE_ENDED_INVITATION",room),resolve(this.joinWebConference(webPontConferenceId,role))):resolve(this.startWebConference(room,webPontConferenceId))},()=>{this.makingCall=!1;const error=new Error("[webConferenceService] startOrJoinWebConference error on snapshot");this.$log.error(error.message),reject(error)})})}startWebConference(room,webPontConferenceId,shouldSnapshotBeforeStart=!1){return webPontConferenceId&&room?(this.makingCall=!0,this.$log.info("[webConferenceService] startWebConference wtih ID "+webPontConferenceId),this.$q(resolve=>{shouldSnapshotBeforeStart?(this.$log.debug("[webConferenceService] startWebConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC))):resolve()}).then(()=>this.conferenceSessions[webPontConferenceId].active?(this.$log.info("[webConferenceService] startWebConference - No need to start an already active conference"),this.joinWebConference(webPontConferenceId,"moderator",!1)):(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]),this.$http({method:"PUT",url:this.confPortalURL+webPontConferenceId+"/start",headers:this.authService.getRequestHeader(),data:{mediaType:this.MEDIATYPE.WEBRTC,roomId:room.dbId}}).then(()=>(this.$log.info("[webConferenceService] startWebConference - success -- now joining the conference"),this.joinWebConference(webPontConferenceId,"moderator",!1)),errorResponse=>{throw this.makingCall=!1,this.$log.error("[webConferenceService] startWebConference wtih ID "+webPontConferenceId+" failure ... -- "+this.errorHelperService.getErrorFullMessage(errorResponse)),this.leaveWebConference(webPontConferenceId),this.removeConferenceSession(webPontConferenceId),this.errorHelperService.handleError(errorResponse)}))).catch(err=>{this.makingCall=!1;let errorMsg="[webConferenceService] startWebConference - error on server, can't start conference -- ",msg="startMeetingFailure";return err&&(403620===err.errorDetailsCode&&(msg="startMeetingConflict"),err.errorDetailsLabel&&(errorMsg+=err.errorDetailsLabel)),this.$log.error(errorMsg),this.mainService.showGlobalPopupMessage({popupTitle:"startConference",popupBody:msg,okLabel:"ok"}),this.$q.reject(err)})):(this.$log.error("[startWebConference] No webPontConferenceId or Room!"),this.mainService.showGlobalPopupMessage({popupTitle:"startConference",popupBody:"startMeetingFailure",okLabel:"ok"}),this.$q.reject())}joinWebConference(webPontConferenceId,role,shouldSnapshotBeforeJoin=!1){return this.$log.info("[webConferenceService] joinWebConference with ID "+webPontConferenceId+" and role "+role),webPontConferenceId?this.$q(resolve=>{shouldSnapshotBeforeJoin?(this.$log.debug("[webConferenceService] joinWebConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTC))):resolve()}).then(()=>this.$q((resolve,reject)=>{this.makingCall=!0,this.createVideoGalleryElements(this.conferenceSessions[webPontConferenceId].conferenceView),this.conferenceSessions[webPontConferenceId].videoGallery=this.videoGalleryElements,"ringing"!==this.conferenceSessions[webPontConferenceId].status&&(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]));const id="web_"+uuid4(),delegateCapability=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED),url=this.confPortalURL+webPontConferenceId+"/join",params={participant:{role:role,type:"unmuted"},mediaType:this.MEDIATYPE.WEBRTC,delegateCapability:delegateCapability};this.webrtcConfigAndUtils.webrtcConfig&&this.webrtcConfigAndUtils.webrtcConfig.dc&&(params.dc=this.webrtcConfigAndUtils.webrtcConfig.dc),this.getUserMediaForSession(webPontConferenceId).then(reason=>{reason&&"noMic"===reason&&(params.microphone=!1),this.conferenceSessions[webPontConferenceId].haveJoined=!0,this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:params}).then(response=>{const data=response.data.data;this.jingleJid=data.jingleJid;const forceTurn=data.transportTurn;this.initCall(this.jingleJid,webPontConferenceId,id,this.MEDIATYPE.WEBRTC,forceTurn),this.makingCall=!1,resolve()},errorResponse=>{if(errorResponse){const msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="joinWebConference( confId="+webPontConferenceId+") failure: "+msg;this.$log.error("[webConferenceService] "+errorMessage)}this.makingCall=!1,this.conferenceSessions[webPontConferenceId].haveJoined=!1;const data={popupTitle:"warning",popupBody:"joinMeetingFailure",okLabel:"ok"};errorResponse&&errorResponse.data&&403615===errorResponse.data.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),errorResponse&&errorResponse.data&&403060===errorResponse.data.errorDetailsCode&&(data.popupBody="lockedConferenceError"),this.leaveWebConference(webPontConferenceId),delete this.conferenceSessions[webPontConferenceId],this.mainService.showGlobalPopupMessage(data),reject(errorResponse)})}).catch(reason=>{this.$log.error("[webConferenceService] joinWebConference - getUserMediaForSession reject -- "+reason),this.makingCall=!1,"ignore"!==reason&&this.leaveWebConference(webPontConferenceId),reject()})})).catch(errorResponse=>(this.makingCall=!1,this.$log.error("[webConferenceService] joinWebConference - error on server, can't join conference"),this.$q.reject(errorResponse))):(this.$log.error("[webConferenceService] joinWebConference - No webPontConferenceId !"),this.$q.reject())}joinSharingOnlyConference(webPontConferenceId,role,shouldSnapshotBeforeJoin=!0){return this.$log.info("[webConferenceService] joinSharingOnlyConference with ID "+webPontConferenceId+" and role "+role),webPontConferenceId?this.$q(resolve=>{shouldSnapshotBeforeJoin?(this.$log.debug("[webConferenceService] joinSharingOnlyConference - trigger snapshot for "+webPontConferenceId),resolve(this.makeSnapshotForConfId(webPontConferenceId,this.MEDIATYPE.WEBRTCSHARINGONLY))):resolve()}).then(()=>this.$q((resolve,reject)=>{this.makingCall=!0,this.createVideoGalleryElements(),this.conferenceSessions[webPontConferenceId].videoGallery=this.videoGalleryElements,"ringing"!==this.conferenceSessions[webPontConferenceId].status&&(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[webPontConferenceId]));uuid4();const url=this.confPortalURL+webPontConferenceId+"/join",params={participant:{role:role,type:"muted"},mediaType:this.MEDIATYPE.WEBRTCSHARINGONLY};this.$http({method:"POST",url:url,headers:this.authService.getRequestHeader(),data:params}).then(response=>{const data=response.data.data;this.jingleJid=data.jingleJid,this.$log.info("[webConferenceService] joinSharingOnlyConference with ID success - jingleJid: "+this.jingleJid),this.conferenceSessions[webPontConferenceId].jingleJid=this.jingleJid,this.conferenceSessions[webPontConferenceId].haveJoined=!0,this.makingCall=!1,resolve()},errorResponse=>{if(errorResponse){const msg=errorResponse.data?errorResponse.data.errorDetails:errorResponse.data,errorMessage="joinSharingOnlyConference( confId="+webPontConferenceId+") failure: "+msg;this.$log.error("[conferenceService] "+errorMessage)}this.makingCall=!1;const data={popupTitle:"warning",popupBody:"joinMeetingFailure",okLabel:"ok"};errorResponse&&errorResponse.data&&403615===errorResponse.data.errorDetailsCode&&(data.popupBody="maximumNumberConferenceParticipantsReach"),this.leaveWebConference(webPontConferenceId),delete this.conferenceSessions[webPontConferenceId],reject(this.errorHelperService.handleError(errorResponse))})})).catch(()=>(this.makingCall=!1,this.$log.error("[webConferenceService] joinSharingOnlyConference - error on server, can't join conference"),this.$q.reject())):(this.$log.error("[webConferenceService] joinSharingOnlyConference - No webPontConferenceId !"),this.$q.reject())}getFreeVideoGalleryElement(confId){this.$log.info("[webConferenceService] getFreeVideoGalleryElement "+confId);const confSession=this.conferenceSessions[confId];let result=null;if(confSession){confSession.videoGallery||(this.createVideoGalleryElements(confSession.conferenceView),confSession.videoGallery=this.videoGalleryElements);for(let i=0;i<confSession.videoGallery.length;i++)if("free"===confSession.videoGallery[i].state){result=confSession.videoGallery[i];break}}return result}askToAddSharingToConferenceSession(conversation,conferenceSession){!this.webrtcP2PService.askToAddSharing(conversation.id)&&this.addMediaToConferenceSession(conferenceSession,"sharing")}addMediaToConferenceSession(conferenceSession,mediaType,existingStream=null){if(!conferenceSession)return;if(this.addingMedia)return;if("true"===this.settingsService.getSetting("sfuJoinBundle")&&"video"===mediaType)return void this.addBundleMediaToConferenceSession(conferenceSession);this.addingMedia=!0;const mediaToGet=[mediaType];"sharing"===mediaType&&this.contactService.setBusyState("dnd","sharing");const callBackFunction=existingStream?this.$q.when(existingStream):this.webrtcP2PService.getBrowserMedia(mediaToGet);this.$log.info("[webConferenceService] addMediaToConferenceSession to session "+conferenceSession.id+" with media "+mediaType),callBackFunction.then(async stream=>{let modifiedStream=stream;"video"===mediaType&&(conferenceSession.originalVideoStream=stream,modifiedStream=await this.virtualBackgroundService.startProcessStream(stream)),this.addingMedia=!1;const streams=[modifiedStream],session=this.xmppService.connection.jingle.initiate(conferenceSession.jingleJid,this.xmppService.connection.jid,mediaType,streams,null,conferenceSession.id,null);conferenceSession.sessions[session.sid]=session,conferenceSession.localStreams.push(modifiedStream),session.localStreamId=conferenceSession.localStreams.length-1,"video"===mediaType?(conferenceSession.hasLocalVideo=!0,conferenceSession.localVideoSessionId=session.sid):(conferenceSession.hasLocalSharing=!0,conferenceSession.localSharingSessionId=session.sid,this.sendEvent("startHighlighting")),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.webrtcConfigAndUtils.callsStats[session.sid]={},this.updateStatisticsForSession(conferenceSession.id,session.sid),this.statsIntervals.push(session.getStats(8e3))}).catch(()=>{this.addingMedia=!1,this.contactService.setBusyState("dnd","audio")})}removeMediaFromConferenceSession(conferenceSession,mediaType){if(!conferenceSession)return;"sharing"===mediaType&&this.contactService.setBusyState("dnd","audio"),"webrtcSharingOnly"===conferenceSession.type&&this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.$log.info("[webConferenceService] removeMediaFromConferenceSession from session "+conferenceSession.id);const sessionId="video"===mediaType?conferenceSession.localVideoSessionId:conferenceSession.localSharingSessionId;if(conferenceSession.sessions[sessionId]){const session=conferenceSession.sessions[sessionId];this.updateStatisticsForSession(conferenceSession.id,sessionId),this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.xmppService.connection.jingle.terminate(session.sid),delete conferenceSession.sessions[sessionId],delete conferenceSession.localStreams[session.localStreamId],delete this.webrtcConfigAndUtils.callsStats[sessionId],"video"===mediaType?(conferenceSession.hasLocalVideo=!1,conferenceSession.localVideoSessionId=null,conferenceSession.originalVideoStream&&this.disableMediaStream(conferenceSession.originalVideoStream),conferenceSession.originalVideoStream=null,this.virtualBackgroundService.stopProcessStream()):(conferenceSession.hasLocalSharing=!1,conferenceSession.localSharingSessionId=null,this.sendEvent("stopHighlighting"))}this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.updateSubStreamLevelsForConferenceSession(conferenceSession.id)}dropRemoteVideoSession(conferenceSession,sessionId){if(conferenceSession){if(this.$log.info("[webConferenceService] dropRemoteVideoSession fom conference "+conferenceSession.id+" and session "+sessionId),conferenceSession.sessions[sessionId]){const session=conferenceSession.sessions[sessionId];this.updateStatisticsForSession(conferenceSession.id,sessionId),this.xmppService.connection.jingle.terminate(session.sid),delete conferenceSession.sessions[sessionId],delete this.webrtcConfigAndUtils.callsStats[sessionId]}this.removeSessionFromVideoGallery(conferenceSession,sessionId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession)}}getUserMediaForSession(webPontConferenceId){return this.$q((resolve,reject)=>{const conference=this.conferenceSessions[webPontConferenceId];if(!conference)return void reject();"ringing"!==conference.status&&(this.conferenceSessions[webPontConferenceId].status="ringing",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference)),conference.haveJoined=!0;this.webrtcP2PService.getBrowserMedia(["audio"]).then(stream=>{this.$log.info("[webConferenceService] getUserMediaForSession -- sucess");const conf=this.conferenceSessions[webPontConferenceId];if(!conf||"ended"===conf.status)return this.$log.info("[webConferenceService] getUserMediaForSession -- missing conference"),this.disableMediaStream(stream),void reject("conference does not exist anymore");if(!this.makingCall)return this.$log.info("[webConferenceService] getUserMediaForSession -- already in the conference -- ignore"),this.disableMediaStream(stream),void reject("ignore");const streams=[stream];conf.localStreams=streams,resolve()}).catch(()=>{this.$log.error("[webConferenceService] getUserMediaForSession error -- getUserMedia failed"),this.sendEvent("joinWithoutAudio"),this.conferenceSessions[webPontConferenceId].localStreams=[],resolve("noMic")})})}disableMediaStream(stream){stream&&(stream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),stream.stop&&stream.stop(),stream=null)}initCall(jid,webPontConferenceId,callId,type,forceTurn=!1){const conference=this.conferenceSessions[webPontConferenceId];return this.$q(resolve=>{conference||(this.$log.warn("[webConferenceService] initCall - no conferenceSession as though we are trying to init call"),resolve(this.makeSnapshotForConfId(webPontConferenceId,type))),resolve()}).then(async()=>{await this.webrtcConfigAndUtils.setWebrtcConfiguration().catch(()=>{this.$log.error("[webConferenceService] initCall - setWebrtcConfiguration failed")});let media="audio";"true"===this.settingsService.getSetting("sfuJoinBundle")&&(media="audio+video");const session=this.xmppService.connection.jingle.initiate(jid,this.xmppService.connection.jid,media,conference.localStreams,callId,webPontConferenceId,null,forceTurn);return conference.jingleJid=jid,conference.sessions[session.sid]=session,conference.status="ringing",this.createStatisticsForSession(webPontConferenceId,session.sid),this.statsIntervals.push(session.getStats(3e3)),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference),conference})}async transferCall(oldSession,jid,webPontConferenceId,callId,type,myConference=!1,roomDbId,shouldMute=!1){try{if(this.conferenceSessions[webPontConferenceId]&&this.conferenceSessions[webPontConferenceId].haveJoined)throw this.$log.info("[webConferenceService] transferCall to "+webPontConferenceId+" -- already in progress or done"),new Error("Already making transfer call");this.makingCall=!0,this.$log.info("[webConferenceService] transferCall to "+webPontConferenceId),await this.makeSnapshotForConfId(webPontConferenceId,type,!0),await this.webrtcConfigAndUtils.setWebrtcConfiguration().catch(()=>{this.$log.error("[webConferenceService] transferCall - setWebrtcConfiguration failed")}),await this.getUserMediaForSession(webPontConferenceId);const conference=this.conferenceSessions[webPontConferenceId];conference.participants&&conference.participants.forEach(participant=>{myConference&&participant.jid_im!==this.contactService.userContact.jid?participant.role="member":myConference||participant.jid_im!==this.contactService.userContact.jid||(participant.role="member")});let media="audio";"true"===this.settingsService.getSetting("sfuJoinBundle")&&(media="audio+video");const session=this.xmppService.connection.jingle.initiate(jid,this.xmppService.connection.jid,media,conference.localStreams,callId,webPontConferenceId,null,!1);if(conference.jingleJid=jid,conference.haveJoined=!0,conference.sessions[session.sid]=session,conference.status="ringing",conference.roomId=roomDbId,conference.isMyConference=myConference,this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&(this.setDefaultConferenceLayout("grid_view"),conference.conferenceView=this.ConferenceSession.ConferenceView.GridView),this.createVideoGalleryElements(conference.conferenceView),conference.videoGallery=this.videoGalleryElements,!roomDbId){const rooms=this.roomService.findRoomsWithConfId(webPontConferenceId);rooms&&rooms[0]&&(conference.roomId=rooms[0].dbId)}this.conferenceSessions[webPontConferenceId]=conference,this.makingCall=!1,this.createStatisticsForSession(webPontConferenceId,session.sid),this.statsIntervals.push(session.getStats(3e3));try{if(oldSession&&-1!==oldSession.localType.indexOf("sharing")&&(!oldSession.remoteType||-1===oldSession.remoteType.indexOf("sharing")||myConference)){let index=oldSession.localStreams.length-1;oldSession.localStreams[oldSession.localStreams.length-1].getAudioTracks().length&&(index=0);const sharingStream=oldSession.localStreams[index].clone();this.$interval(()=>{this.addMediaToConferenceSession(this.conferenceSessions[webPontConferenceId],"sharing",sharingStream)},1500,1,!0,webPontConferenceId)}return oldSession&&oldSession.localType&&-1!==oldSession.localType.indexOf("video")&&this.$interval(()=>{this.addMediaToConferenceSession(this.conferenceSessions[webPontConferenceId],"video")},1500,1,!0,webPontConferenceId),shouldMute&&this.$interval(()=>{const webConferenceParticipant=this.conferenceSessions[webPontConferenceId].getConnectedParticipantByJid(this.contactService.userContact.jid);webConferenceParticipant&&this.muteParticipant(webPontConferenceId,webConferenceParticipant.participantId,"mute")},1e3,1,!0,webPontConferenceId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference),conference}catch(err){return this.$log.error("[webConferenceService] transferCall error on duplicate stream -- "+err),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conference),conference}}catch(error){this.makingCall=!1,this.$log.error("[webConferenceService] transferCall error -- "+error)}}muteParticipant(confId,participantId,option){return this.$log.info("[ConferenceService] muteParticipant( confId="+confId+"participantId="+participantId+" option="+option+")"),confId&&participantId&&option?this.$q((resolve,reject)=>{if(!this.conferenceSessions[confId])return this.$log.error("[ConferenceService] muteParticipant - no corresponding conference session to update"),void reject();const data={option:option,mediaType:"webrtc"};this.$http({method:"PUT",url:this.confPortalURL+confId+"/participants/"+participantId,headers:this.authService.getRequestHeader(),data:data}).then(response=>{const status=response.data;this.$log.info("[ConferenceService] muteParticipant( confId="+confId+"participantId="+participantId+") successfully"),resolve(status)},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="muteParticipant( confId="+confId+"participantId="+participantId+") failure: "+msg;this.$log.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.$log.error("[ConferenceService] muteParticipant - missing a parameter"),this.$q.reject())}createStatisticsForSession(webConfId,sessionId){if(this.$log.info("[webConferenceService] createStatisticsForSession for conf "+webConfId+" and session "+sessionId),!webConfId||!sessionId)return void this.$log.warn("[webConferenceService] createStatisticsForSession -- missing parameters");this.webrtcConfigAndUtils.callsStats[sessionId]={};[].push({connectionId:sessionId,stats:this.webrtcConfigAndUtils.callsStats[sessionId]}),this.webrtcConfigAndUtils.createStatisticsForSession(webConfId,webConfId,"pending").then(id=>{this.$log.info("[webConferenceService] createStatisticsForSession success "+id),this.webrtcConfigAndUtils.callsStats[sessionId].id=id,this.conferenceSessions[webConfId].metricsId=id,this.conferenceSessions[webConfId].metricsState="pending"}).catch(error=>{this.$log.error("[webConferenceService] createStatisticsForSession error for conf "+webConfId)})}updateStatisticsForSession(webConfId,sessionId){if(this.$log.info("[webConferenceService] updateStatisticsForSession for conf "+webConfId+" and session "+sessionId),!webConfId||!sessionId)return void this.$log.warn("[webConferenceService] updateStatisticsForSession -- missing parameters");const webConference=this.conferenceSessions[webConfId];if(!webConference||!webConference.metricsId)return void this.$log.warn("[webConferenceService] updateStatisticsForSession -- missing webConference or no metricsId");webConference.metricsState||(webConference.metricsState="pending");const metrics=[];this.webrtcConfigAndUtils.callsStats[sessionId]&&Object.keys(this.webrtcConfigAndUtils.callsStats[sessionId]).length&&(this.webrtcConfigAndUtils.callsStats[sessionId].RainMetrics&&this.webrtcConfigAndUtils.callsStats[sessionId].push(this.webrtcConfigAndUtils.callsStats[sessionId].RainMetrics),metrics.push({connectionId:sessionId,stats:this.webrtcConfigAndUtils.callsStats[sessionId]}),this.webrtcConfigAndUtils.updateStatisticsForCall(webConference.metricsId,webConfId,webConference.metricsState,metrics))}leaveWebConference(confId){if(this.$log.info("[WebConferenceService] leaveWebConference - "+confId),!confId)return;let hasAnotherActiveCall=this.webrtcP2PService.isUserContactInCall();Object.keys(this.conferenceSessions).forEach(key=>{key!==confId&&this.conferenceSessions[key]&&this.conferenceSessions[key].haveJoined&&this.conferenceSessions[key].isActive&&(hasAnotherActiveCall=!0,this.$log.info("[WebConferenceService] user has another active conference - "+key))}),hasAnotherActiveCall||(this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.sendEvent("stopHighlighting"),this.webrtcP2PService.clearSrcObjectsFromElements());const webConference=this.conferenceSessions[confId];if(!webConference)return void this.$log.warn("[WebConferenceService] leaveWebConference - webConference does not exist");webConference.metricsState="ended";for(const property in webConference.sessions)if(webConference.sessions.hasOwnProperty(property)){const session=webConference.sessions[property];this.updateStatisticsForSession(webConference.id,session.sid),this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.xmppService.connection.jingle.terminate(session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid]}let statsInterval;for(this.webrtcP2PService.disableStreams(webConference.localStreams),webConference.originalVideoStream&&this.disableMediaStream(webConference.originalVideoStream),webConference.cleanupSessionData(),this.createVideoGalleryElements(webConference.conferenceView),webConference.videoGallery=this.videoGalleryElements,webConference.sessions={};this.statsIntervals.length;)statsInterval=this.statsIntervals.pop(),statsInterval&&(window.clearInterval(statsInterval),statsInterval=null);this.makingCall=!1,this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference),this.contactService.userContact.guestMode&&this.$rootScope.$broadcast("ON_OPEN_POPUP","concludeInvitation"),this.virtualBackgroundService.stopProcessStream()}attachDistantMediaStream(attach,conferenceSession){if(attach){const bundleSession=this.getRemoteAudioVideoBundleSession(conferenceSession.id);if(bundleSession)return void this.attachDistantBundleSession(bundleSession);const sessions=this.getRemoteVideoSessions(conferenceSession.id),remoteSharingSession=this.getRemoteSharingSession(conferenceSession.id);let updatedMainSession=!1;if(remoteSharingSession&&!remoteSharingSession.showOnSecondPip||(updatedMainSession=this.updateMainSessionIfNeeded(conferenceSession,sessions)),this.$log.info("[WebConferenceService] attachDistantMediaStream for session "+conferenceSession.id),remoteSharingSession&&!remoteSharingSession.showOnSecondPip&&(remoteSharingSession.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,remoteSharingSession.sid)}),remoteSharingSession.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),remoteSharingSession.remoteStreamsObject[0],remoteSharingSession.sid)),sessions.length)for(const sessionId in sessions)if(sessions.hasOwnProperty(sessionId)&&(sessions[sessionId].remoteStreams&&sessions[sessionId].remoteStreams.forEach(track=>{if(track.getVideoTracks().length>0){remoteSharingSession&&!remoteSharingSession.showOnSecondPip||!sessions[sessionId].mainSession||this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,sessions[sessionId].sid);for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].sessionId===sessions[sessionId].sid){this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#"+conferenceSession.videoGallery[i].id),track,conferenceSession.videoGallery[i].sessionId);break}}}),sessions[sessionId].remoteStreamsObject[0])){remoteSharingSession&&!remoteSharingSession.showOnSecondPip||!sessions[sessionId].mainSession||this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),sessions[sessionId].remoteStreamsObject[0],sessions[sessionId].sid);for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].sessionId===sessions[sessionId].sid){this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#"+conferenceSession.videoGallery[i].id),sessions[sessionId].remoteStreamsObject[0],conferenceSession.videoGallery[i].sessionId);break}}const audioSession=this.getRemoteAudioSession(conferenceSession.id);audioSession&&audioSession.remoteStreams&&audioSession.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#globalAudioTag"),track,audioSession.sid)}),audioSession&&audioSession.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#globalAudioTag"),audioSession.remoteStreamsObject[0],audioSession.sid),updatedMainSession&&this.updateSubStreamLevelsForConferenceSession(conferenceSession.id)}}attachGalleryMediaStreams(conferenceSession){const sessions=this.getRemoteVideoSessions(conferenceSession.id);sessions.length&&sessions.forEach(session=>{for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].sessionId===session.sid){const windowRef=conferenceSession.isOnlySharingWindow?null:conferenceSession.externalWindowRef;this.attachSessionVideoToHtmlElement(session,conferenceSession.videoGallery[i].id,windowRef);break}})}attachMozaicVideos(conferenceSession,mozaicElements){const sessions=this.getRemoteVideoSessions(conferenceSession.id),windowRef=conferenceSession.isOnlySharingWindow?null:conferenceSession.externalWindowRef;sessions.length&&sessions.forEach(session=>{mozaicElements.forEach((element,index)=>{element.videoSessionId===session.sid&&this.attachSessionVideoToHtmlElement(session,"mozaic_videoGallery_"+index,windowRef)})});const sharingSession=this.getRemoteSharingSession(conferenceSession.id);sharingSession&&this.attachSessionVideoToHtmlElement(sharingSession,"mozaicSharingVideo",windowRef)}attachLocalPipVideo(conferenceSession){if(conferenceSession.hasLocalVideo){const session=conferenceSession.sessions[conferenceSession.localVideoSessionId];if(session){const windowRef=conferenceSession.isOnlySharingWindow?null:conferenceSession.externalWindowRef;this.attachSessionVideoToHtmlElement(session,"conferenceVideoPip",windowRef)}}}attachActiveTalkerLocalAndRemoteMediaStreams(conferenceSession){this.attachRemoteAudioStream(conferenceSession);const bundleSession=this.getRemoteAudioVideoBundleSession(conferenceSession.id);if(bundleSession)return void this.attachDistantBundleSession(bundleSession);const windowRef=conferenceSession.isOnlySharingWindow?null:conferenceSession.externalWindowRef,sessions=this.getRemoteVideoSessions(conferenceSession.id),remoteSharingSession=this.getRemoteSharingSession(conferenceSession.id);this.updateMainSessionIfNeededToDynamicFeed(conferenceSession,sessions),this.$log.info("[WebConferenceService] attachLocalAndRemoteMediaStreams for session "+conferenceSession.id);let mainScreenBusy=!1,hasSharingSession=!1;if(remoteSharingSession&&!remoteSharingSession.showOnSecondPip?(hasSharingSession=!0,this.attachSessionVideoToHtmlElement(remoteSharingSession,"largevideo",windowRef),mainScreenBusy=!0):remoteSharingSession&&remoteSharingSession.showOnSecondPip&&(hasSharingSession=!0,this.attachSessionVideoToHtmlElement(remoteSharingSession,"sfuActiveSpeakerSecondVideo",windowRef)),conferenceSession.hasLocalSharing){const session=conferenceSession.sessions[conferenceSession.localSharingSessionId];session&&(hasSharingSession=!0,session.showOnSecondPip?this.attachSessionVideoToHtmlElement(session,"sfuActiveSpeakerSecondVideo",windowRef):(this.attachSessionVideoToHtmlElement(session,"largevideo",windowRef),mainScreenBusy=!0))}if(sessions.length&&sessions.forEach(session=>{session.mainSession&&!mainScreenBusy?(mainScreenBusy=!0,this.attachSessionVideoToHtmlElement(session,"largevideo",windowRef)):(session.mainSession&&mainScreenBusy||!session.mainSession&&session.activeSpeaker&&!hasSharingSession)&&this.attachSessionVideoToHtmlElement(session,"sfuActiveSpeakerSecondVideo",windowRef)}),conferenceSession.hasLocalVideo){const session=conferenceSession.sessions[conferenceSession.localVideoSessionId];session&&this.attachSessionVideoToHtmlElement(session,"conferenceVideoPip",windowRef)}this.updateSubStreamLevelsForConferenceSession(conferenceSession.id)}attachRemoteAudioStream(conferenceSession){const audioSession=this.getRemoteAudioSession(conferenceSession.id);audioSession&&audioSession.remoteStreams&&audioSession.remoteStreams.forEach(track=>{track.getAudioTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#globalAudioTag"),track,audioSession.sid)}),audioSession&&audioSession.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#globalAudioTag"),audioSession.remoteStreamsObject[0],audioSession.sid);const sharingSession=this.getRemoteSharingSession(conferenceSession.id);sharingSession&&sharingSession.remoteStreamsObject[0]&&sharingSession.remoteStreamsObject[0].getAudioTracks().length&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#globalVideoTag"),sharingSession.remoteStreamsObject[0],sharingSession.sid)}attachMainMediaStream(session){session&&(this.$log.info("[webConferenceService] attachMainMediaStream"),session.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,session.sid)}),session&&session.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),session.remoteStreamsObject[0],session.sid))}attachDistantBundleSession(session){session&&(this.$log.info("[webConferenceService] attachDistantBundleSession"),session.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),track,session.sid),track.getAudioTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStream(angular.element("#globalAudioTag"),track)}),session&&session.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStream(angular.element("#globalAudioTag"),session.remoteStreamsObject[0]),session&&session.remoteStreamsObject[1]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(angular.element("#largevideo"),session.remoteStreamsObject[1],session.sid))}attachSessionVideoToHtmlElement(session,elementId,windowRef=null){const tag="#"+elementId,element=windowRef?windowRef.document.querySelectorAll(tag):angular.element(tag);session&&elementId?(this.$log.info("[webConferenceService] attachSessionVideoToHtmlElement"),session.remoteStreams.forEach(track=>{track.getVideoTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(element,track,session.sid)}),session&&session.remoteStreamsObject[0]&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(element,session.remoteStreamsObject[0],session.sid),session.localStreams.forEach(track=>{track.getVideoTracks().length>0&&this.webrtcP2PService.RTC.attachMediaStreamIfNeeded(element,track,session.sid)})):!session&&elementId&&this.webrtcP2PService.RTC.clearMediaStream(element,null)}updateMainSessionIfNeededToDynamicFeed(conferenceSession,sessions){this.$log.info("[webConferenceService] updateMainSessionIfNeededToDynamicFeed");let shouldUpdateMainScreen=!0;if(sessions&&sessions.length){let dynamicFeedSession=null,firstSession=null;Object.keys(sessions).forEach(key=>{const session=sessions[key];session&&(firstSession||(firstSession=session),!dynamicFeedSession&&session.activeSpeaker&&(dynamicFeedSession=session),session.mainSession&&(session.pinned||session.activeSpeaker)&&(shouldUpdateMainScreen=!1))}),shouldUpdateMainScreen&&(dynamicFeedSession?(dynamicFeedSession.mainSession=!0,dynamicFeedSession.pinned=!1,conferenceSession.videoGallery.forEach(element=>{element.pinned=!1,element.mainSession=!1})):firstSession&&(firstSession.mainSession=!0,firstSession.pinned=!1,conferenceSession.videoGallery.forEach(element=>{element.pinned=!1,element.sessionId===firstSession.sid?element.mainSession=!0:element.mainSession=!1})))}return shouldUpdateMainScreen}updateMainSessionIfNeeded(conferenceSession,sessions){this.$log.info("[webConferenceService] updateMainSessionIfNeeded");let shouldUpdateMainScreen=!0;if(sessions&&sessions.length){let firstSession=null;for(const property in sessions)sessions.hasOwnProperty(property)&&(firstSession||(firstSession=sessions[property]),sessions[property].mainSession&&(shouldUpdateMainScreen=!1));shouldUpdateMainScreen&&(firstSession.mainSession=!0,firstSession.pinned=!1,conferenceSession.videoGallery.forEach(element=>{element.pinned=!1,element.sessionId===firstSession.sid?element.mainSession=!0:element.mainSession=!1}))}return shouldUpdateMainScreen}getRelatedRoomToActiveConferenceSession(){return this.webConferenceRoom}getRelatedRoomToActiveSharingOnlyConferenceSession(){return this.webrtcSharingOnlyRoom}getConferenceBySessionId(sessionId){let result=null;return this.conferenceSessions?(Object.entries(this.conferenceSessions).forEach(([id,confSession])=>{if(confSession&&confSession.sessions){const sessions=confSession.sessions;for(const[__sessId,jingleSession]of Object.entries(sessions))if(jingleSession&&jingleSession.sid===sessionId){result=this.conferenceSessions[id];break}}}),result):result}getPontConfIdForRoom(room,mediaType=this.MEDIATYPE.WEBRTC){if(room.confEndpoints&&room.confEndpoints.length)for(let i=0;i<room.confEndpoints.length;i++)if(room.confEndpoints[i].mediaType===mediaType)return room.confEndpoints[i].confEndpointId;return""}getConferenceSessionById(confId){return this.conferenceSessions[confId]}getSfuConferenceSessionForRoom(room){let confSession=null;return room&&(confSession=this.conferenceSessions[room.getSFUConfEndpointId()]),confSession}updateWebConferenceInfos(endpoints){this.$log.info("[WebConferenceService] updateWebConferenceInfos"),Object.assign(this.conferenceEndpoints,endpoints),this.webrtcConferenceId=this.getWebRtcConfEndpointId(),this.webrtcConferenceId&&this.roomService.getRoomByConferenceEndpointId(this.webrtcConferenceId).then(conferenceRoom=>{let name="nothing";conferenceRoom&&(name=conferenceRoom.name),this.webConferenceRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebConferenceInfos : webrtcConferenceId is currently attached to "+name)},()=>{this.$log.info("[WebConferenceService] === updateWebConferenceInfos FAILURE ===")})}updateWebSharingOnlyConferenceInfos(endpoints){this.$log.info("[WebConferenceService] updateWebSharingOnlyConferenceInfos"),Object.assign(this.conferenceEndpoints,endpoints),this.webrtcSharingOnlyConferenceId=this.getWebRtcSharingOnlyConfEndpointId(),this.webrtcSharingOnlyConferenceId&&this.roomService.getRoomByConferenceEndpointId(this.webrtcSharingOnlyConferenceId).then(conferenceRoom=>{const name=conferenceRoom&&conferenceRoom.name?conferenceRoom.name:"nothing";this.webrtcSharingOnlyRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebSharingOnlyConferenceInfos : webrtcSharingOnlyConferenceId is currently attached to "+name)},()=>{this.$log.info("[WebConferenceService] === updateWebSharingOnlyConferenceInfos FAILURE ===")})}updateWebConferenceRoom(){return this.webrtcConferenceId=this.getWebRtcConfEndpointId(),this.$q((resolve,reject)=>{this.roomService.getRoomByConferenceEndpointId(this.webrtcConferenceId).then(conferenceRoom=>{let name="nothing";conferenceRoom&&(name=conferenceRoom.name),this.webConferenceRoom=conferenceRoom,this.$log.info("[WebConferenceService] === updateWebConferenceRoom : room is currently attached to "+name),resolve()},()=>{this.$log.info("[WebConferenceService] === updateWebConferenceRoom FAILURE==="),reject()})})}getWebRtcConfEndpointId(){for(const property in this.conferenceEndpoints)if(this.conferenceEndpoints.hasOwnProperty(property)&&this.conferenceEndpoints[property].mediaType===this.MEDIATYPE.WEBRTC)return this.conferenceEndpoints[property].id;return null}getWebRtcSharingOnlyConfEndpointId(){for(const property in this.conferenceEndpoints)if(this.conferenceEndpoints.hasOwnProperty(property)&&this.conferenceEndpoints[property].mediaType===this.MEDIATYPE.WEBRTCSHARINGONLY)return this.conferenceEndpoints[property].id;return null}isJoinWebConferenceAllowed(){return!0}getWebConference(confId){if(confId)return this.conferenceSessions[confId]}removeConferenceSession(confId){if(!confId)return;this.removeAllJingleSessionsForConferenceSession(confId);let statsInterval,confSession=this.conferenceSessions[confId];for(confSession&&confSession.cleanupSessionData(),delete this.conferenceSessions[confId],confSession=null;this.statsIntervals.length;)statsInterval=this.statsIntervals.pop(),statsInterval&&(window.clearInterval(statsInterval),statsInterval=null);this.makingCall=!1}removeAllJingleSessionsForConferenceSession(confId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession){conferenceSession.metricsState="ended";for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];this.updateStatisticsForSession(conferenceSession.id,session.sid),delete this.webrtcConfigAndUtils.callsStats[session.sid],this.webrtcConfigAndUtils.disableAllStreamsForSession(session),this.xmppService.connection.jingle.terminate(session.sid)}conferenceSession.sessions=[]}}hasActiveConferenceSession(){for(const property in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&this.conferenceSessions[property].haveJoined)return!0;return!1}hasActiveConferenceSessionWithAnyDevice(){for(const property in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&(this.conferenceSessions[property].haveJoined||this.conferenceSessions[property].joinedFromOtherDevice))return!0;return!1}getActiveConferenceSession(){let result=null;for(const property in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&this.conferenceSessions[property].haveJoined&&(result=this.conferenceSessions[property]);return result}getAllActiveNonJoinedConferenceSessions(){const result=[];for(const property in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTC&&this.conferenceSessions[property].isActive()&&!this.conferenceSessions[property].haveJoined&&result.push(this.conferenceSessions[property]);return result}hasActiveSharingOnlyConferenceSession(){for(const property in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTCSHARINGONLY&&this.conferenceSessions[property].isActive())return!0;return!1}getActiveSharingOnlyConferenceSession(){let result=null;for(const property in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(property)&&this.conferenceSessions[property]&&this.conferenceSessions[property].type===this.MEDIATYPE.WEBRTCSHARINGONLY&&this.conferenceSessions[property].isActive()&&(result=this.conferenceSessions[property]);return result}hasIncomingVideoStream(confId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if(!session.isInitiator&&("video"===session.remoteType||"sharing"===session.remoteType))return!0}return!1}getRemoteSessionsWithVideoOrSharingStreams(confId){const result=[];if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];session.isInitiator||"video"!==session.remoteType&&("sharing"!==session.remoteType||conferenceSession.isOnlySharingWindow)&&"audio+video"!==session.remoteType||result.push(session)}return result}getRemoteSharingSession(confId,isComingFromExternalPopUp=!1){let result=null;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession){if(conferenceSession.isOnlySharingWindow&&!isComingFromExternalPopUp)return result;for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if(!session.isInitiator&&"sharing"===session.remoteType){result=session;break}}}return result}getSharingSession(confId,isComingFromExternalPopUp=!1){let result=null;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession){if(conferenceSession.isOnlySharingWindow&&!isComingFromExternalPopUp)return result;for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if("sharing"===session.remoteType||"sharing"===session.localType){result=session;break}}}return result}hasRemoteVideoOrSharingSession(confId){let result=!1;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if(!session.isInitiator&&("video"===session.remoteType||"sharing"===session.remoteType||"audio+video"===session.remoteType)){result=!0;break}}return result}getRemoteVideoSessions(confId){const result=[];if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];session.isInitiator||"video"!==session.remoteType||result.push(session)}return result}getRemoteAudioVideoBundleSession(confId){let result;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if(!session.isInitiator&&"audio+video"===session.remoteType){result=session;break}}return result}getRemoteAudioSession(confId){let result;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if("audio"===session.localType){result=session;break}}return result}getRemoteMainVideoSession(confId){let sess;if(!confId)return sess;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if(!session.isInitiator&&"video"===session.remoteType&&session.mainSession){sess=session;break}}return sess}isAlreadySubscribedToDynamicFeed(confId){if(!confId)return!1;let result=!1;const conferenceSession=this.conferenceSessions[confId];return conferenceSession&&conferenceSession.videoGallery&&"videoGallery_0"===conferenceSession.videoGallery[0].id&&"busy"===conferenceSession.videoGallery[0].state&&(result=!0),result}isAlreadySubscribedToPublisher(confId,publisherId){if(!confId||!publisherId)return!1;let result=!1;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(!conferenceSession.videoGallery[i].activeSpeaker&&conferenceSession.videoGallery[i].publisherId===publisherId){result=!0;break}return result}getSessionIdForParticipantByPublisherId(confId,publisherId){let result="";if(!confId||!publisherId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisherId){result=conferenceSession.videoGallery[i].sessionId;break}return result}getSessionForParticipantByPublisherId(confId,publisherId){let result="";if(!confId||!publisherId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisherId){result=this.xmppService.connection.jingle.sessions[conferenceSession.videoGallery[i].sessionId];break}return result}relatePublisherToElement(confId,publisher,elementId,subStreamLevel,activeSpeaker=!1){if(!confId||!publisher||!elementId)return!1;this.$log.info("[WebConferenceService] relatePublisherToElement");const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)if(activeSpeaker)conferenceSession.videoGallery[0].state="busy",conferenceSession.videoGallery[0].publisherId="",conferenceSession.videoGallery[0].simulcast=publisher.simulcast,conferenceSession.videoGallery[0].subStreamLevel=subStreamLevel;else for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].id===elementId){conferenceSession.videoGallery[i].state="busy",conferenceSession.videoGallery[i].publisherId=publisher.participantId,conferenceSession.videoGallery[i].publisherJidIm=publisher.jid_im,conferenceSession.videoGallery[i].displayName=publisher.participantId,conferenceSession.videoGallery[i].simulcast=publisher.simulcast,conferenceSession.videoGallery[i].subStreamLevel=subStreamLevel;const contact=this.contactService.getContact(publisher.jid_im);contact&&(conferenceSession.videoGallery[i].displayName=contact.displayName,conferenceSession.videoGallery[i].avatarSrc=contact.avatar.src);break}this.updateSubStreamLevelsForConferenceSession(confId)}getRelatedPublisherToElement(confId,elementId){if(!confId||!elementId)return null;this.$log.info("[WebConferenceService] getRelatedPublisherToElement");let result=null;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(elementId===conferenceSession.videoGallery[i].id&&conferenceSession.videoGallery[i].publisherId){result=conferenceSession.videoGallery[i];break}return result}getRelatedElementToPublisher(confId,publisherId){if(!confId||!publisherId)return null;this.$log.info("[WebConferenceService] getRelatedPublisherToElement");let element=null;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.videoGallery)for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisherId){element=conferenceSession.videoGallery[i];break}return element}relateSessionToPublisher(confId,publisherId,sessionId){if(!confId||!publisherId||!sessionId)return!1;this.$log.info("[WebConferenceService] relateSessionToPublisher pubId "+publisherId+" sessionId "+sessionId);let result=!1;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession){for(let i=0;i<conferenceSession.videoGallery.length;i++)if(publisherId===conferenceSession.videoGallery[i].publisherId&&!conferenceSession.videoGallery[i].sessionId){conferenceSession.videoGallery[i].sessionId=sessionId,result=!0,"videoGallery_0"===conferenceSession.videoGallery[i].id&&(conferenceSession.sessions[sessionId].activeSpeaker=!0,conferenceSession.videoGallery[i].publisherId="");break}this.$log.info(conferenceSession.videoGallery)}return result}removeSessionFromVideoGallery(conferenceSession,sessionId){if(conferenceSession&&sessionId){conferenceSession.videoGallery||(this.createVideoGalleryElements(conferenceSession.conferenceView),conferenceSession.videoGallery=this.videoGalleryElements),this.$log.info("[WebConferenceService] removeSessionFromVideoGallery for conference "+conferenceSession.id+" sessionId "+sessionId);for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].sessionId===sessionId&&(conferenceSession.videoGallery[i].sessionId="",conferenceSession.videoGallery[i].state="free",conferenceSession.videoGallery[i].publisherId="",conferenceSession.videoGallery[i].publisherJidIm="",conferenceSession.videoGallery[i].displayName="",conferenceSession.videoGallery[i].avatarSrc="",conferenceSession.videoGallery[i].simulcast=null,conferenceSession.videoGallery[i].subStreamLevel=null,conferenceSession.videoGallery[i].mainSession=!1,conferenceSession.videoGallery[i].pinned=!1,conferenceSession.videoGallery[i].hold=!1);conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceSession.conferenceView)}}reInitialiseVideoGalleryElementById(conferenceSession,elementId){if(conferenceSession&&elementId){conferenceSession.videoGallery||(this.createVideoGalleryElements(conferenceSession.conferenceView),conferenceSession.videoGallery=this.videoGalleryElements),this.$log.info("[WebConferenceService] reInitialiseVideoGalleryElementById for conference "+conferenceSession.id+" elementId "+elementId);for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].id===elementId&&(conferenceSession.videoGallery[i].sessionId&&this.dropRemoteVideoSession(conferenceSession,conferenceSession.videoGallery[i].sessionId),conferenceSession.videoGallery[i].sessionId="",conferenceSession.videoGallery[i].state="free",conferenceSession.videoGallery[i].publisherId="",conferenceSession.videoGallery[i].publisherJidIm="",conferenceSession.videoGallery[i].displayName="",conferenceSession.videoGallery[i].avatarSrc="",conferenceSession.videoGallery[i].subStreamLevel=null,conferenceSession.videoGallery[i].simulcast=null,conferenceSession.videoGallery[i].hold=!1,conferenceSession.videoGallery[i].reconnecting=!1);conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceSession.conferenceView)}}updateMainScreenSession(confId,element=null){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession){for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const sess=conferenceSession.sessions[property];element&&element.sessionId===sess.sid?(sess.mainSession=!0,sess.pinned=!0):(sess.mainSession=!1,sess.pinned=!1)}return conferenceSession.videoGallery.forEach(galleryElement=>{element&&galleryElement.id===element.id?(galleryElement.mainSession=!0,galleryElement.pinned=!0):(galleryElement.mainSession=!1,galleryElement.pinned=!1)}),conferenceSession}}updateSubStreamLevelsForConferenceSessionV3(confId){const conferenceSession=this.conferenceSessions[confId],webConferenceParticipant=conferenceSession.getConnectedParticipantByJid(this.contactService.userContact.jid),sharingSession=this.getSharingSession(conferenceSession.id);if(conferenceSession.conferenceView===this.ConferenceSession.ConferenceView.GridView){const sessions=this.getRemoteVideoSessions(confId);let substreamLevel="0";const shouldLowerQuality=sharingSession&&!sharingSession.showOnSecondPip;sessions.length>1&&sessions.length<=3&&(substreamLevel=shouldLowerQuality?"1":"2"),sessions.length>3&&sessions.length<=7&&(substreamLevel=shouldLowerQuality?"0":"1"),conferenceSession.videoGallery.forEach(element=>{element.simulcast&&"videoGallery_0"!==element.id&&element.subStreamLevel!==substreamLevel&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,substreamLevel,element)})}else{const level=sharingSession?"2":"1";conferenceSession.videoGallery.forEach(element=>{element.simulcast&&"videoGallery_0"===element.id&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,level,element)}),conferenceSession.conferenceView===this.ConferenceSession.ConferenceView.GalleryView&&conferenceSession.videoGallery.forEach(element=>{element.simulcast&&"videoGallery_0"!==element.id&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,"0",element)})}}updateSubStreamLevelsForConferenceSession(confId){if(this.disableAutoUpdateSubstreamLevels)return;if(this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0))return void this.updateSubStreamLevelsForConferenceSessionV3(confId);this.$log.info("[WebConferenceService] updateSubStreamLevelsForConferenceSession");const conferenceSession=this.conferenceSessions[confId],webConferenceParticipant=conferenceSession.getConnectedParticipantByJid(this.contactService.userContact.jid),sharingSession=this.getSharingSession(conferenceSession.id);if(conferenceSession.conferenceView===this.ConferenceSession.ConferenceView.GridView){const sessions=this.getRemoteVideoSessions(confId);let substreamLevel="0";sessions.length>1&&sessions.length<=3&&(substreamLevel="2"),sessions.length>3&&sessions.length<=7&&(substreamLevel="1"),conferenceSession.videoGallery.forEach(element=>{element.simulcast&&"videoGallery_0"!==element.id&&element.subStreamLevel!==substreamLevel&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,substreamLevel,element)})}else sharingSession&&!sharingSession.showOnSecondPip?conferenceSession.videoGallery.forEach(element=>{element.simulcast&&"0"!==element.subStreamLevel&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,"0",element)}):conferenceSession.videoGallery.forEach(element=>{if(element.simulcast&&"videoGallery_0"===element.id&&this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,"2",element),element.simulcast&&"videoGallery_0"!==element.id){const session=conferenceSession.sessions[element.sessionId];if(session){const level=session.mainSession?"2":"0";this.updateSubstreamLevelForPublisher(conferenceSession.id,webConferenceParticipant.participantId,level,element)}}})}getListOfAvailableRemoteVideoPublishers(confId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];let publishers=[];return conferenceSession&&(conferenceSession.videoGallery||(this.createVideoGalleryElements(conferenceSession.conferenceView),conferenceSession.videoGallery=this.videoGalleryElements),publishers=conferenceSession.getListOfRemoteVideoPublishers(),publishers=publishers.filter(publisher=>{for(let i=0;i<conferenceSession.videoGallery.length;i++)if(conferenceSession.videoGallery[i].publisherId===publisher.participantId)return!1;return!0})),publishers}getListOfPublishersForElementsOnHold(confId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId],publishers=[];if(conferenceSession){conferenceSession.videoGallery||(this.createVideoGalleryElements(conferenceSession.conferenceView),conferenceSession.videoGallery=this.videoGalleryElements);const remotePublishers=conferenceSession.getListOfRemoteVideoPublishers();for(let i=0;i<conferenceSession.videoGallery.length;i++)"videoGallery_0"!==conferenceSession.videoGallery[i].id&&conferenceSession.videoGallery[i].publisherId&&conferenceSession.videoGallery[i].hold&&remotePublishers.forEach(pub=>{pub.participantId===conferenceSession.videoGallery[i].publisherId&&publishers.push(pub)})}return publishers}sendTransportReplaceForSession(sess,timeout){sess&&sess.sid?sess.peerconnection&&"stable"===sess.peerconnection.signalingState&&"failed"!==sess.peerconnection.iceConnectionState&&"disconnected"!==sess.peerconnection.iceConnectionState?this.$log.info("[WebConferenceService] sendTransportReplaceForSession not needed for "+sess.sid):this.reconnecting[sess.sid]?this.$log.info("[WebConferenceService] sendTransportReplaceForSession already reconnecting for session "+sess.sid):(this.reconnecting[sess.sid]=!0,timeout||(timeout=1e3),this.$interval(session=>{if(this.reconnecting[session.sid]=!1,delete this.reconnecting[session.sid],this.connected&&session&&session.peerconnection&&"stable"===session.peerconnection.signalingState&&("failed"===session.peerconnection.iceConnectionState||"disconnected"===session.peerconnection.iceConnectionState)){if(this.$log.info("[WebConferenceService] sendTransportReplaceForSession for session "+session.sid),session.connection=this.xmppService.connection,session.reconnectSession(),session.type!==this.MEDIATYPE.WEBRTCSHARINGONLY){const state=session.hasLocalSharing?"sharing":"audio";this.contactService.setBusyState("dnd",state)}}else this.$log.info("[WebConferenceService] sendTransportReplaceForSession for session "+session.sid+" is not send ...")},timeout,1,!0,sess)):this.$log.warn("[WebConferenceService] sendTransportReplaceForSession missing session !")}onAudioProfileChangeEvent(){if(this.$log.info("[WebConferenceService] onAudioProfileChangeEvent"),this.audioProfileChanging)this.$log.info("[WebConferenceService] onAudioProfileChangeEvent -- already changing");else for(const key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){const conferenceSession=this.conferenceSessions[key];for(const sessId in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(sessId)){const session=conferenceSession.sessions[sessId];"audio"===session.localType&&(this.audioProfileChanging=!0,this.$interval((sess,confSession)=>{this.audioProfileChanging=!1;this.webrtcP2PService.getBrowserMedia(["audio"]).then(stream=>{sess.removeStream(sess.localStreams[0]),this.webrtcP2PService.stopActiveAudioVideoStreams(sess),sess.localStreams.push(stream),sess.addStream(sess.localStreams[0]),sess.sendTransportReplace(),this.sendEvent("onAudioStreamAdded",confSession)}).catch(()=>{sess.removeStream(sess.localStreams[0]),this.webrtcP2PService.stopActiveAudioVideoStreams(sess),sess.sendTransportReplace(),this.sendEvent("onAudioStreamRemoved",confSession)})},500,1,!0,session,conferenceSession))}}}onJingleError(sessionId){this.$log.info("[WebConferenceService] onJingleError -- "+sessionId);const webConference=this.getConferenceBySessionId(sessionId);if(webConference&&webConference.sessions){"audio"===webConference.sessions[sessionId].localType?this.leaveWebConference(webConference.id):(this.updateStatisticsForSession(webConference.id,sessionId),webConference.localVideoSessionId===sessionId?this.removeMediaFromConferenceSession(webConference,"video"):webConference.localSharingSessionId===sessionId?this.removeMediaFromConferenceSession(webConference,"sharing"):(this.removeSessionFromVideoGallery(webConference,sessionId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference)))}}onIceConnectionDisconnectedForSession(conferenceSession,sessionId){if(this.$log.info("[WebConferenceService] onIceConnectionDisconnectedForSession -- "+sessionId),conferenceSession&&conferenceSession.sessions){const session=conferenceSession.sessions[sessionId];"audio"===session.localType?(conferenceSession.status="reconnecting",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.connected&&this.sendTransportReplaceForSession(session,5e3)):conferenceSession.localVideoSessionId!==sessionId&&conferenceSession.localSharingSessionId!==sessionId||this.connected&&this.sendTransportReplaceForSession(session,8e3)}}onIceConnectionFailedForSession(conferenceSession,sessionId){if(this.$log.info("[WebConferenceService] onIceConnectionFailedForSession -- "+sessionId),conferenceSession&&conferenceSession.sessions){const session=conferenceSession.sessions[sessionId];if(!session)return void this.$log.info("[WebConferenceService] onIceConnectionFailedForSession -- session is missing");"audio"===session.localType?(conferenceSession.status="reconnecting",this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.connected&&this.sendTransportReplaceForSession(session,500)):conferenceSession.localVideoSessionId===sessionId||conferenceSession.localSharingSessionId===sessionId?this.connected&&this.sendTransportReplaceForSession(session,500):"video"===session.remoteType?this.connected&&(this.xmppService.connection.jingle.terminate(sessionId),this.updateStatisticsForSession(conferenceSession.id,sessionId),delete this.webrtcConfigAndUtils.callsStats[sessionId],conferenceSession.videoGallery.forEach(element=>{element.sessionId===sessionId&&(element.sessionId="")}),delete conferenceSession.sessions[sessionId],this.resubscribeToSessions(conferenceSession)):this.connected&&(this.xmppService.connection.jingle.terminate(sessionId,"icefailed"),this.updateStatisticsForSession(conferenceSession.id,sessionId),delete this.webrtcConfigAndUtils.callsStats[sessionId],this.removeSessionFromVideoGallery(conferenceSession,sessionId),delete conferenceSession.sessions[sessionId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession))}}onIncomingCall(sessionId){this.$log.info("[WebConferenceService] onIncomingCall -- "+sessionId);const session=this.xmppService.connection.jingle.sessions[sessionId],pontConfId=session.confId,conferenceSession=this.conferenceSessions[pontConfId];if(conferenceSession){if(conferenceSession.sessions[sessionId]=session,session.localType=session.remoteType,session.sendAnswer(),session.accept(),"video"===session.remoteType){if(!this.activeSpeaker||session.publisherId&&conferenceSession.videoGallery[0].sessionId!==session.sid){if(!this.relateSessionToPublisher(pontConfId,session.publisherId,session.sid)){this.$log.info("[WebConferenceService] no gallery element related to session, attach to first available");const element=this.getFreeVideoGalleryElement(pontConfId);element&&!this.isAlreadySubscribedToPublisher(conferenceSession.id,session.publisherId)&&(element.state="busy",element.publisherId=session.publisherId,element.sessionId=session.sid)}}else conferenceSession.videoGallery[0].publisherId="",session.activeSpeaker=!0;this.updateSubStreamLevelsForConferenceSession(pontConfId)}"sharing"===session.remoteType&&(this.updateConferenceViewIfNeeded(pontConfId),this.updateSubStreamLevelsForConferenceSession(pontConfId)),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.webrtcConfigAndUtils.callsStats[session.sid]={},this.updateStatisticsForSession(conferenceSession.id,session.sid),this.statsIntervals.push(session.getStats(8e3))}else this.$log.error("[WebConferenceService] onIncomingCall no such conferenceSession "+pontConfId)}onTerminatedCall(sessionId){let session=this.xmppService.connection.jingle.sessions[sessionId],conferenceSession=null;session&&session.confId&&(conferenceSession=this.conferenceSessions[session.confId]),conferenceSession||(conferenceSession=this.getActiveConferenceSession()?this.getActiveConferenceSession():this.getActiveSharingOnlyConferenceSession()),conferenceSession?(this.$log.info("[WebConferenceService] onTerminatedCall -- "+sessionId),session||(session=conferenceSession.sessions[sessionId]),session&&"audio"===session.localType?this.leaveWebConference(conferenceSession.id):conferenceSession.localVideoSessionId===sessionId?this.removeMediaFromConferenceSession(conferenceSession,"video"):conferenceSession.localSharingSessionId===sessionId?(this.removeMediaFromConferenceSession(conferenceSession,"sharing"),this.updateSubStreamLevelsForConferenceSession(conferenceSession.id)):(this.removeSessionFromVideoGallery(conferenceSession,sessionId),this.webrtcConfigAndUtils.disableAllStreamsForSession(conferenceSession.sessions[sessionId]),delete conferenceSession.sessions[sessionId],delete this.webrtcConfigAndUtils.callsStats[sessionId],this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession),this.autoFillGalleryElementIfNecessary(conferenceSession),this.updateSubStreamLevelsForConferenceSession(conferenceSession.id))):this.$log.info("[WebConferenceService] onTerminatedCall no active conferenceSession for webrtc session "+sessionId)}onConferenceCallSwitched(sessionId){this.$log.info("[WebConferenceService] onConferenceCallSwitched -- "+sessionId);const conferenceSession=this.getActiveConferenceSession();conferenceSession&&this.leaveWebConference(conferenceSession.id)}onIceConnectionStateChange(sessionId,session){try{const webConference=this.getConferenceBySessionId(sessionId);webConference&&session.peerconnection&&(this.$log.info("[WebConferenceService] onIceConnectionStateChange for session "+sessionId),"stable"===session.peerconnection.signalingState&&"connected"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection established successfully"),"audio"===session.localType?(webConference.status="connected",webConference.startDuration(),this.attachRemoteAudioStream(webConference)):"video"===session.remoteType?webConference.videoGallery=this.updateVideoGalleryElementsState(webConference,webConference.videoGallery,webConference.conferenceView):"sharing"===session.localType&&this.updateSubStreamLevelsForConferenceSession(webConference.id),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference),this.sendEvent("peerConnectionEstablished",{sessionId:sessionId})),"stable"===session.peerconnection.signalingState&&"completed"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection completed successfully"),"connected"!==webConference.status&&("audio"===session.localType&&(webConference.status="connected",webConference.startDuration(),this.attachRemoteAudioStream(webConference)),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",webConference),this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",webConference),this.sendEvent("peerConnectionEstablished",{sessionId:sessionId}))),"stable"===session.peerconnection.signalingState&&"disconnected"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection State disconnected"),this.onIceConnectionDisconnectedForSession(webConference,sessionId)),"stable"===session.peerconnection.signalingState&&"failed"===session.peerconnection.iceConnectionState&&(this.$log.info("[WebConferenceService] ICE Connection State failed"),this.onIceConnectionFailedForSession(webConference,sessionId)))}catch(error){this.$log.error("[WebConferenceService] onIceConnectionStateChange error "+error)}}updateOrCreateConferenceSession(confId,snapshotData,type="webrtc"){if(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession for "+confId),!confId||!snapshotData||!snapshotData.data)return this.$log.error("[webConferenceService] updateOrCreateConferenceSession - Not enough data"),null;let conferenceSession=this.conferenceSessions[confId];return conferenceSession?snapshotData.data.active!==conferenceSession.active&&(this.$log.debug("active"),conferenceSession.updateActiveState(snapshotData.data.active),snapshotData.data.active?this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession):this.leaveWebConference(confId)):(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession - create new conferencesession with id "+confId+"and data: \n"+JSON.stringify(snapshotData.data)),this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&this.setDefaultConferenceLayout("grid_view"),conferenceSession=this.ConferenceSession.createFromData(confId,[],snapshotData.data.active,type,this.defaultConferenceLayout),this.conferenceSessions[confId]=conferenceSession,this.$rootScope.$broadcast("ON_CONFERENCE_STATE_EVENT",conferenceSession)),conferenceSession&&snapshotData.data.participants&&conferenceSession.active&&(this.$log.debug("[webConferenceService] updateOrCreateConferenceSession - (is active : "+conferenceSession.active+") update participants for "+confId+" with:\n"+JSON.stringify(snapshotData.data.participants)),conferenceSession.updateParticipants(snapshotData.data.participants).then(()=>{this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession)})),conferenceSession}updateOrCreateWebConferenceEndpoint(conferenceData){if(this.$log.info("[WebConferenceService] updateOrCreateWebConferenceEndpoint for "+conferenceData.id),!conferenceData)return this.$log.error("[WebConferenceService] updateOrCreateWebConferenceEndpoint - no conference data !"),null;if(conferenceData.mediaType!==this.MEDIATYPE.WEBRTC&&conferenceData.mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY)return this.$log.error("[WebConferenceService] updateOrCreateWebConferenceEndpoint - wrong mediaType:"+conferenceData.mediaType),null;const conference=this.Conference.createFromData(conferenceData);return this.conferenceEndpoints[conferenceData.id]=conference,conference.mediaType===this.MEDIATYPE.WEBRTC?this.updateWebConferenceInfos([conference]):this.updateWebSharingOnlyConferenceInfos([conference]),this.conferenceEndpoints[conferenceData.id]}makeSnapshotForConfId(confId=null,mediaType="webrtc",force=!1){if(!confId){const errorMsg="[webConferenceService] makeSnapshotForConfId - No confId !!";return this.$log.error(errorMsg),this.$q.reject(errorMsg)}const confSession=this.conferenceSessions[confId];return!force&&confSession&&confSession.active&&confSession.haveJoined?(this.$log.debug("[WebConferenceService] makeSnapshotForConfId skipped, already joined"),this.$q.resolve(confSession)):!force&&confSession&&this.makingCall?(this.$log.debug("[WebConferenceService] makeSnapshotForConfId skipped, we're currently joining the conference"),this.$q.resolve(confSession)):(this.$log.info("[webConferenceService] makeSnapshotForConfId for confId "+confId),this.$q((resolve,reject)=>{this.$http({method:"GET",url:this.confPortalURL+confId+"/snapshot?mediaType=webrtc",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[webConferenceService] makeSnapshotForConfId success for confId "+confId);const snapshotData=response.data;this.updateOrCreateConferenceSession(confId,snapshotData,mediaType),resolve(snapshotData.data)}).catch(errorResponse=>{this.$log.info("[webConferenceService] makeSnapshotForConfId failure for confID "+confId),404===errorResponse.status?this.$log.error("[webConferenceService] makeSnapshotForConfId - confId "+confId+" not found on server"):this.$log.error("[webConferenceService] makeSnapshotForConfId - inconsistent object on server"),this.conferenceSessions[confId]&&this.removeConferenceSession(confId),reject()})}))}refreshConferenceSessions(){return this.$log.info("[webConferenceService] refreshConferenceSessions"),this.$q((resolve,reject)=>{const promiseArray=[];for(const key in this.conferenceSessions)if(this.conferenceSessions.hasOwnProperty(key)){const conferenceSession=this.conferenceSessions[key];promiseArray.push(this.makeSnapshotForConfId(conferenceSession.id,conferenceSession.type))}this.$q.all(promiseArray).then(()=>{this.$log.info("[webConferenceService] refreshConferenceSessions -- success"),resolve()}).catch(()=>{this.$log.error("[webConferenceService] refreshConferenceSessions -- error -- some session are corrupted and deleted"),reject()})})}removeAllConferenceSessions(){this.$log.info("[webConferenceService] removeAllConferenceSessions");for(const key in this.conferenceSessions)this.conferenceSessions.hasOwnProperty(key)&&this.removeConferenceSession(key)}getConferenceSessionForRoom(roomConfEndpoints){let sfuSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].mediaType!==this.MEDIATYPE.WEBRTC&&roomConfEndpoints[i].mediaType!==this.MEDIATYPE.WEBRTCSHARINGONLY||(sfuSession=this.conferenceSessions[roomConfEndpoints[i].confEndpointId]);return sfuSession}setDefaultConferenceLayout(value){this.defaultConferenceLayout=value}setDisableAutoUpdateSubstreamLevels(value){this.disableAutoUpdateSubstreamLevels=value}setDisableAutoFillForGalleryElements(value){this.disableAutoFillForGalleryElements=value}removeVideoGalleryVideos(conferenceSession){conferenceSession&&conferenceSession.videoGallery&&conferenceSession.videoGallery.forEach(element=>{const session=conferenceSession.sessions[element.sessionId];session&&(this.updateStatisticsForSession(conferenceSession.id,session.sid),this.webrtcConfigAndUtils.disableAllStreamsForSession(session),delete conferenceSession.sessions[session.sid],delete conferenceSession.localStreams[session.localStreamId],delete this.webrtcConfigAndUtils.callsStats[session.sid],this.xmppService.connection.jingle.terminate(session.sid))})}relateSessionToActiveSpeakerElement(confId,sessionId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];conferenceSession&&conferenceSession.videoGallery&&(conferenceSession.videoGallery[0].sessionId=sessionId,conferenceSession.videoGallery[0].publisherId="")}resubscribeToSessions(conferenceSession){conferenceSession&&conferenceSession.publishers.length&&conferenceSession.videoGallery.forEach(element=>{if("videoGallery_0"!==element.id||"busy"!==element.state||element.reconnecting||element.sessionId){if("busy"===element.state&&!element.reconnecting&&!element.sessionId&&element.publisherId){element.reconnecting=!0;const publisher=conferenceSession.getPublisherById(element.publisherId);this.subscribeToPublisher(conferenceSession.id,publisher,element.id,element.subStreamLevel).then(()=>{this.$log.info("[ConferenceService] resubscribeToSession for element "+element.id+" and publisher id "+element.publisherId+" -- success"),element.reconnecting=!1}).catch(()=>{this.$log.error("[ConferenceService] subscribe to publisher failed, reset the video gallery element with id "+element.id),this.reInitialiseVideoGalleryElementById(conferenceSession,element.id)})}}else element.reconnecting=!0,this.subscribeToPublisher(conferenceSession.id,conferenceSession.publishers[0],element.id,"2",!0).then(()=>{this.$log.info("[ConferenceService] resubscribeToSession dynamic feed for element "+element.id+" -- success"),element.reconnecting=!1}).catch(()=>{this.$log.error("[ConferenceService] subscribe to publisher dynamic feed failed, reset the video gallery element with id "+element.id),this.reInitialiseVideoGalleryElementById(conferenceSession,element.id)})})}subscribeToPublishers(conferenceSession){conferenceSession&&conferenceSession.publishers.length&&conferenceSession.publishers.forEach(publisher=>{if("video"===publisher.mediaType&&!this.isAlreadySubscribedToPublisher(conferenceSession.id,publisher.participantId)){const element=this.getFreeVideoGalleryElement(conferenceSession.id);if(element){element.state="busy",element.publisherId=publisher.participantId;const subStreamLevel=publisher.simulcast?"0":null;this.subscribeToPublisher(conferenceSession.id,publisher,element.id,subStreamLevel).catch(()=>{this.$log.error("[ConferenceService] subscribe to publisher failed, reset the video gallery element with id "+element.id),this.reInitialiseVideoGalleryElementById(conferenceSession,element.id)})}}})}updateConferenceViewIfNeeded(confId){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];conferenceSession&&(this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)||conferenceSession.conferenceView===this.ConferenceSession.ConferenceView.GridView&&this.modifyConferenceView(confId,this.ConferenceSession.ConferenceView.GalleryView))}modifyConferenceView(confId,conferenceView){if(!confId)return;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession&&conferenceSession.conferenceView!==conferenceView){if(conferenceSession.conferenceView=conferenceView,conferenceView===this.ConferenceSession.ConferenceView.GalleryView){if(conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceView),!this.isAlreadySubscribedToDynamicFeed(conferenceSession.id)){let publisher=null;for(const pub of conferenceSession.publishers)if("video"===pub.mediaType){publisher=pub;break}this.subscribeToDynamicFeed(conferenceSession.id,publisher,conferenceSession.videoGallery[0].id,"2",!0)}this.subscribeToPublishers(conferenceSession)}else if(conferenceView===this.ConferenceSession.ConferenceView.SpeakerView){if(conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceView),!this.isAlreadySubscribedToDynamicFeed(conferenceSession.id)){let publisher=null;for(const pub of conferenceSession.publishers)if("video"===pub.mediaType){publisher=pub;break}this.subscribeToDynamicFeed(conferenceSession.id,publisher,conferenceSession.videoGallery[0].id,"2",!0)}}else conferenceView===this.ConferenceSession.ConferenceView.GridView&&(conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceView),this.subscribeToPublishers(conferenceSession));console.error(conferenceSession.videoGallery),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession)}}getActiveSpeakerSession(confId){let result=null;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];if(conferenceSession)for(const sessId in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(sessId)){const session=conferenceSession.sessions[sessId];if(session.activeSpeaker){result=session;break}}return result}getPinnedGalleryElement(confId){let result=null;if(!confId)return result;const conferenceSession=this.conferenceSessions[confId];return conferenceSession&&conferenceSession.videoGallery&&conferenceSession.videoGallery.forEach(element=>{element.pinned&&(result=element)}),result}subscribeToDynamicFeed(confId="",publisher=null,elementId="",subStreamLevel=null,activeSpeaker=!1){return this.$q((resolve,reject)=>{if(!confId||!publisher)return this.$log.warn("[WebConferenceService] subscribeToDynamicFeed missing parameters !! Ignore !"),void resolve();if(!this.activeSpeaker)return this.$log.warn("[WebConferenceService] subscribeToDynamicFeed -- feature not activated"),void resolve();if(this.conferenceSessions[confId].videoGallery[0].state="busy",(this.conferenceSessions[confId].conferenceView===this.ConferenceSession.ConferenceView.GalleryView||this.conferenceSessions[confId].conferenceView===this.ConferenceSession.ConferenceView.GridView||this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0))&&!this.isAlreadySubscribedToPublisher(confId,publisher.participantId)){const element=this.getFreeVideoGalleryElement(confId);element&&(element.state="busy",element.publisherId=publisher.participantId,this.$interval((conferenceId,newPublisher,elemToSubscribe)=>{"busy"===elemToSubscribe.state&&elemToSubscribe.publisherId===newPublisher.participantId&&this.subscribeToPublisher(conferenceId,newPublisher,elemToSubscribe.id,"0")},1500,1,!0,confId,publisher,element))}return this.subscribeToPublisher(confId,publisher,elementId,subStreamLevel,activeSpeaker)})}subscribeToPublisher(confId="",publisher=null,elementId="",subStreamLevel=null,activeSpeaker=!1){return this.$q((resolve,reject)=>{if(!confId||!publisher)return this.$log.warn("[WebConferenceService] subscribeToPublisher missing parameters !! Ignore !"),void resolve();this.$log.info("[WebConferenceService] subscribeToPublisher for confId "+confId+" and publisher "+publisher.participantId),elementId&&this.relatePublisherToElement(confId,publisher,elementId,subStreamLevel,activeSpeaker);const params=subStreamLevel?{subStreamLevel:subStreamLevel}:{};activeSpeaker&&(params.dynamicFeed=!0,"true"===this.settingsService.getSetting("dynamicFeedMediumStream")&&(params.subStreamLevel="1")),this.$http({method:"POST",url:this.confPortalURL+confId+"/participants/"+publisher.participantId+"/subscribe",headers:this.authService.getRequestHeader(),data:params}).then(response=>{this.$log.info("[WebConferenceService] subscribeToPublisher successfully"),activeSpeaker&&this.relateSessionToActiveSpeakerElement(confId,response.data.data.sid),resolve(response.data)},response=>{const errorMessage="subscribeToPublisher failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}onNetworkQualityChange(sessionId){const webConference=this.getConferenceBySessionId(sessionId);if(webConference&&webConference.sessions){const session=webConference.sessions[sessionId];session&&"audio"===session.localType&&(this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityFlag===webConference.networkQuality?(this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityIteration=this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityIteration?this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityIteration+1:1,0===webConference.networkQuality&&this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityIteration>=3&&this.$rootScope.$broadcast("ON_CONFERENCE_NETWORK_UPDATE_EVENT",webConference,"badNetworkQuality",webConference.networkQuality)):this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityIteration=1,webConference.networkQuality=this.webrtcConfigAndUtils.callsStatsSimplified[sessionId].networkQualityFlag,this.$rootScope.$broadcast("ON_CONFERENCE_NETWORK_UPDATE_EVENT",webConference,"networkQuality",webConference.networkQuality))}}delegateConferenceToParticipant(confId,participantId){return this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.confPortalURL+confId+"/participants/"+participantId+"/delegate",headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[WebConferenceService] delegateConferenceToParticipant successfully"),resolve(response.data)},response=>{const errorMessage="delegateConferenceToParticipant failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}onConferenceDelegated(oldConfId,newConfId,newOwnerJid=""){if(this.$log.info("[WebConferenceService] onConferenceDelegated from "+oldConfId+" to "+newConfId),this.conferenceSessions[newConfId]=this.conferenceSessions[oldConfId],!this.conferenceSessions[newConfId]||!this.conferenceSessions[oldConfId])return this.roomService.updateRoomConfEndpoint(oldConfId,newConfId),void this.$log.info("[WebConferenceService] onConferenceDelegated -- no active conference");if(oldConfId===newConfId&&newOwnerJid){const isMyConference=this.contactService.isUserContactJid(newOwnerJid);this.conferenceSessions[newConfId].isMyConference=isMyConference;let sendUpdateEvent=!1;const webConferenceParticipant=this.conferenceSessions[newConfId].getConnectedParticipantByJid(this.contactService.userContact.jid);return"moderator"!==(webConferenceParticipant?webConferenceParticipant.role:"")||isMyConference||(sendUpdateEvent=!0),this.conferenceSessions[newConfId].participants&&this.conferenceSessions[newConfId].participants.length&&this.conferenceSessions[newConfId].participants.forEach(participant=>{participant.jid_im!==newOwnerJid?participant.role="member":participant.jid_im===newOwnerJid&&(participant.role="moderator")}),sendUpdateEvent&&this.$rootScope.$broadcast("ON_CONFERENCE_DELEGATED_EVENT",oldConfId,newConfId,newOwnerJid),void this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[newConfId])}this.conferenceSessions[newConfId].id=newConfId,this.isMyConference(newConfId)&&(this.conferenceSessions[newConfId].isMyConference=!0,this.conferenceSessions[newConfId].participants&&this.conferenceSessions[newConfId].participants.length&&this.conferenceSessions[newConfId].participants.forEach(participant=>{participant.jid_im!==this.contactService.userContact.jid?participant.role="member":participant.jid_im===this.contactService.userContact.jid&&(participant.role="moderator")})),this.isMyConference(oldConfId)&&(this.conferenceSessions[newConfId].isMyConference=!1,this.conferenceSessions[newConfId].participants&&this.conferenceSessions[newConfId].participants.length&&this.conferenceSessions[newConfId].participants.forEach(participant=>{participant.jid_im===this.contactService.userContact.jid&&(participant.role="member")})),delete this.conferenceSessions[oldConfId],this.roomService.updateRoomConfEndpoint(oldConfId,newConfId),this.$rootScope.$broadcast("ON_CONFERENCE_DELEGATED_EVENT",oldConfId,newConfId),this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",this.conferenceSessions[newConfId]),!this.isMyConference(newConfId)&&this.conferenceSessions[newConfId].haveJoined&&this.$interval(async confId=>{const confInfos=await this.getConferenceEndpointInfos(confId);if(confInfos&&confInfos.data&&confInfos.data.userId){const user=this.contactService.getContactById(confInfos.data.userId);user&&this.conferenceSessions[newConfId].participants&&this.conferenceSessions[newConfId].participants.length&&this.conferenceSessions[newConfId].participants.forEach(participant=>{participant.jid_im===user.jid&&(participant.role="moderator")}),this.$rootScope.$broadcast("ON_CONFERENCE_PARTICIPANT_EVENT",this.conferenceSessions[newConfId])}},100,1,!0,newConfId)}getConferenceEndpointInfos(confEndpointId,format="small"){return this.$q((resolve,reject)=>{if(!confEndpointId)return this.$log.error("[WebConferenceService] getConferenceEndpointInfos -- missing endpointId "),void reject("[WebConferenceService] getConferenceEndpointInfos -- missing endpointId ");this.$http({method:"GET",url:this.confProvPortalURL+"conferences/"+confEndpointId+"?format="+format,headers:this.authService.getRequestHeader()}).then(response=>{this.$log.info("[WebConferenceService] getConferenceEndpointInfos successfully"),resolve(response.data)},response=>{const errorMessage="getConferenceEndpointInfos failure: "+(response.data?response.data.errorDetails:response.data);this.$log.error("[WebConferenceService] "+errorMessage),reject(new Error(errorMessage))})})}autoFillGalleryElementIfNecessary(conferenceSession){if(this.disableAutoFillForGalleryElements)return;if(!conferenceSession)return void this.$log.error("[WebConferenceService] autoFillGalleryElementIfNecessary -- missing conferenceSession");this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)?this.createVideoGalleryElements("grid_view"):this.createVideoGalleryElements(conferenceSession.conferenceView);let index=0;conferenceSession.videoGallery.forEach(element=>{"busy"===element.state&&element.sessionId&&(this.videoGalleryElements[index].activeSpeaker=element.activeSpeaker,this.videoGalleryElements[index].highlight=element.highlight,this.videoGalleryElements[index].hold=element.hold,this.videoGalleryElements[index].mainSession=element.mainSession,this.videoGalleryElements[index].pinned=element.pinned,this.videoGalleryElements[index].publisherId=element.publisherId,this.videoGalleryElements[index].publisherJidIm=element.publisherJidIm,this.videoGalleryElements[index].publisherJid=element.publisherJid,this.videoGalleryElements[index].sessionId=element.sessionId,this.videoGalleryElements[index].simulcast=element.simulcast,this.videoGalleryElements[index].state=element.state,this.videoGalleryElements[index].subStreamLevel=element.subStreamLevel,this.videoGalleryElements[index].displayName=element.displayName,this.videoGalleryElements[index].avatarSrc=element.avatarSrc,index+=1)}),conferenceSession.videoGallery=this.videoGalleryElements,conferenceSession.videoGallery=this.updateVideoGalleryElementsState(conferenceSession,conferenceSession.videoGallery,conferenceSession.conferenceView),this.updateSubStreamLevelsForConferenceSession(conferenceSession.id),setTimeout(()=>{this.subscribeToPublishers(conferenceSession)},500)}addBundleMediaToConferenceSession(conferenceSession){let audioSession;if(this.$log.info("[WebConferenceService] addBundleMediaToConferenceSession"),conferenceSession)for(const property in conferenceSession.sessions)if(conferenceSession.sessions.hasOwnProperty(property)){const session=conferenceSession.sessions[property];if("audio"===session.localType||"audio+video"===session.localType){audioSession=session;break}}if(audioSession){this.addingMedia=!0;const mediaToGet=["audio","video"],simulcast=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_SIMULCAST),frameRate=17,videoWidth=simulcast?1280:640,videoHeight=simulcast?720:480;this.webrtcP2PService.getBrowserMedia(mediaToGet,videoWidth,videoHeight,frameRate).then(stream=>{this.addingMedia=!1,this.webrtcP2PService.stopActiveAudioVideoStreams(audioSession),audioSession.removeStream(conferenceSession.localStreams[0]),audioSession.localStreams=[],conferenceSession.localStreams[0]=stream,audioSession.localStreams.push(stream),audioSession.addStream(conferenceSession.localStreams[0],!0),audioSession.contentAdd("video",!0),conferenceSession.hasLocalVideo=!0,conferenceSession.localVideoSessionId=audioSession.sid,audioSession.localStreamId=0,this.$rootScope.$broadcast("ON_CONFERENCE_UPDATED_EVENT",conferenceSession)}).catch(()=>{this.addingMedia=!1})}}async startMediaEchoTest(){this.$log.debug("[WebConferenceService] startMediaEchoTest");try{const url=config.restServerUrl+"/api/rainbow/conference/v1.0/echotest",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.$log.info("[WebConferenceService] startMediaEchoTest success");const containerdata=(await response.json()).data;if(containerdata.jingleJid)return containerdata.jingleJid;throw new Error("Something went wrong")}catch(error){const errorInfo=await this.newErrorHelperService.getErrorInfo(error,"startMediaEchoTest");throw errorInfo?(this.$log.error("[WebConferenceService] "+errorInfo.message),errorInfo.error):(this.$log.error("[WebConferenceService] "+error.message),error)}}async stopMediaEchoTest(){this.$log.debug("[WebConferenceService] stopMediaEchoTest");try{const url=config.restServerUrl+"/api/rainbow/conference/v1.0/stop-echotest",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.$log.info("[WebConferenceService] stopMediaEchoTest success")}catch(error){const errorInfo=await this.newErrorHelperService.getErrorInfo(error,"stopMediaEchoTest");throw errorInfo?(this.$log.error("[WebConferenceService] "+errorInfo.message),errorInfo.error):(this.$log.error("[WebConferenceService] "+error.message),error)}}createNewConferenceSessionFromStanza(stanza){const conferenceId=$(stanza).find("conference-id").text();this.settingsService.getBooleanSetting("newSfuAndP2P")&&this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_UI_3_0)&&this.setDefaultConferenceLayout("grid_view");const conferenceSession=this.ConferenceSession.createFromData(conferenceId,[],!1,"webrtc",this.defaultConferenceLayout);return this.conferenceSessions[conferenceId]=conferenceSession,conferenceSession}}WebConferenceService.$inject=["$q","$rootScope","$log","$http","$interval","errorHelperService","ConferenceSession","Conference"],exports.WebConferenceService=WebConferenceService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const conference_stats_model_1=__webpack_require__(464),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),utilities_service_1=__webpack_require__(113),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),profile_service_1=__webpack_require__(13),pgiConference_service_1=__webpack_require__(309),room_service_1=__webpack_require__(25),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),event_service_1=__webpack_require__(11),main_service_1=__webpack_require__(15),webConferenceV2_service_1=__webpack_require__(97),i18n_service_1=__webpack_require__(38);class ConferenceService{constructor($q,$interval,$http,webConferenceService){this.$q=$q,this.$interval=$interval,this.$http=$http,this.webConferenceService=webConferenceService,this.MEDIATYPE={PSTNAUDIO:"pstnAudio",WEBRTC:"webrtc",WEBRTCSHARINGONLY:"webrtcSharingOnly"},this.started=!1,this.rxUpdateSubject=new rxjs_1.Subject,this.hasConferenceRights=!1,this.maxNumberOfUsersSFU=0,this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.pgiConferenceService=pgiConference_service_1.PgiConferenceService.getInstance(),this.utilitiesService=utilities_service_1.UtilitiesService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.webConferenceServiceV2=webConferenceV2_service_1.WebConferenceServiceV2.getInstance(),this.i18nService=i18n_service_1.I18nService.getInstance(),this.stateMap={in_progress:"watching",ringing:"ringing",active:"connected",hangup:"disconnected"},this.listeners=[],this.conferenceRef=null}start(){return this.contactService.userContact&&!this.contactService.userContact.roomsEnabled?(this.logger.info("[ConferenceService] === start skipped - roomsEnabled : "+this.contactService.userContact.roomsEnabled),this.$q.when()):this.$q(resolve=>{this.logger.info("[ConferenceService] === STARTING ==="),this.hasConferenceRights=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED),this.maxNumberOfUsersSFU=this.profileService.getFeatureLimitMax(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_PARTICIPANT_COUNT),this.maxNumberOfUsersSFU||(this.maxNumberOfUsersSFU=20),this.confProvPortalURL=config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/",this.confPortalURL=config.restServerUrl+"/api/rainbow/conference/v1.0/conferences/",this.attachHandlers(),this.started=!0,this.logger.info("[ConferenceService] === STARTED ==="),resolve(),this.makeSnapshotsForAllRooms()})}stop(){return this.contactService.userContact&&!this.contactService.userContact.roomsEnabled?(this.logger.info("[ConferenceService] === stop skipped - roomsEnabled : "+this.contactService.userContact.roomsEnabled),this.$q.when()):this.$q(resolve=>{this.logger.info(""),this.logger.info("[ConferenceService] === STOPPING ==="),this.listeners&&this.listeners.forEach(listener=>{listener()}),this.started=!1,this.logger.info("[ConferenceService] === STOPPED ==="),resolve()})}reconnect(){this.reconnectService()}attachHandlers(){this.logger.info("[ConferenceService] attachHandlers"),this.conferenceRef&&(this.xmppService.connection.deleteHandler(this.conferenceRef),this.conferenceRef=null),this.conferenceRef=this.xmppService.connection.addHandler(stanza=>this.onConferenceUpdate(stanza),"jabber:iq:conference","message",null)}reconnectService(){!this.contactService.userContact||this.contactService.userContact.roomsEnabled?(this.logger.info("[ConferenceService] reconnectService"),this.attachHandlers(),this.refreshConferenceSessions()):this.logger.info("[ConferenceService] === reconnectService skipped - roomsEnabled : "+this.contactService.userContact.roomsEnabled)}subscribe(eventType,callback){return"update"===eventType?this.rxUpdateSubject.subscribe(callback):null}getWebConferenceEndpoints(){return this.webConferenceService.conferenceEndpoints}makeSnapshotsForAllRooms(){}makeSnapshotsForList(confEndpointsList){return this.$q(resolve=>{if(this.logger.info("[ConferenceService] makeSnapshotsForList"),!confEndpointsList||!confEndpointsList.length)return void resolve();const promiseArray=[];for(let i=0;i<confEndpointsList.length;i++)confEndpointsList[i].mediaType===this.MEDIATYPE.PSTNAUDIO?promiseArray.push(this.pgiConferenceService.makeSnapshotForConfId(confEndpointsList[i].confEndpointId)):promiseArray.push(this.webConferenceService.makeSnapshotForConfId(confEndpointsList[i].confEndpointId,confEndpointsList[i].mediaType));this.$q.all(promiseArray).finally(()=>{resolve(this.getConferenceSessionForRoom(confEndpointsList))})})}getConferenceSessionForRoom(roomConfEndpoints){let pstnSession=null,sfuSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].mediaType===this.MEDIATYPE.PSTNAUDIO?pstnSession=this.pgiConferenceService.getConferenceSessionById(roomConfEndpoints[i].confEndpointId):sfuSession=this.webConferenceService.conferenceSessions[roomConfEndpoints[i].confEndpointId];return pstnSession||sfuSession}getMatchingConferenceSession(roomConfEndpoints,id){let confSession=null;if(roomConfEndpoints&&roomConfEndpoints.length)for(let i=0;i<roomConfEndpoints.length;i++)roomConfEndpoints[i].confEndpointId===id&&(confSession=roomConfEndpoints[i].mediaType===this.MEDIATYPE.PSTNAUDIO?this.pgiConferenceService.getConferenceSessionById(id):this.webConferenceService.conferenceSessions[id]);return confSession}makeSnapshots(){return this.logger.info("[ConferenceService] makeSnapshots"),this.$q(resolve=>{const snapshotPromiseList=[];for(const property in this.webConferenceService.conferenceEndpoints)if(this.webConferenceService.conferenceEndpoints.hasOwnProperty(property)){const pontConf=this.webConferenceService.conferenceEndpoints[property];snapshotPromiseList.push(this.webConferenceService.makeSnapshotForConfId(pontConf.id,pontConf.mediaType))}this.$q.all(snapshotPromiseList).finally(()=>{this.logger.info("[ConferenceService] makeSnapshots done"),resolve()})})}onConferenceUpdate(stanza){try{const conferenceId=$(stanza).find("conference-id").text(),action=$(stanza).find("conference-info").length?$(stanza).find("conference-info").attr("action"):"";let conferenceSession=this.webConferenceService.conferenceSessions[conferenceId];if("reject"===action){const rooms=this.roomService.findRoomsWithConfId(conferenceId);return rooms&&rooms.length&&this.eventService.publish("ON_CONFERENCE_ENDED_INVITATION",rooms[0]),!0}if("delegate"===action){const newConfId=$(stanza).find("new-conference-id").text(),newOwnerJid=$(stanza).find("new-owner-jid-im").text();return this.webConferenceService.onConferenceDelegated(conferenceId,newConfId,newOwnerJid),!0}return conferenceSession||(conferenceSession=this.webConferenceService.createNewConferenceSessionFromStanza(stanza)),conferenceSession.haveJoined?this.updateConferenceSession(stanza,conferenceSession):(this.updateConferenceSessionActiveState(stanza,conferenceSession),this.checkIfUserHasJoinedConferenceFromOtherDevice(stanza,conferenceId,conferenceSession)),!0}catch(__error){return this.logger.info("[ConferenceService] onConferenceUpdate error --"+__error),!0}}checkIfUserHasJoinedConferenceFromOtherDevice(stanza,conferenceId,conferenceSession=null){try{const participants=$(stanza).find("participants");participants&&participants.length&&(conferenceSession&&(conferenceSession.joinedFromOtherDevice=!1),participants.find("participant").each((__index,participant)=>{if($(participant).find("jid-im").text()===this.contactService.userContact.jid){const rooms=this.roomService.findRoomsWithConfId(conferenceId);rooms&&rooms.length&&this.eventService.publish("ON_CONFERENCE_ENDED_INVITATION",rooms[0]),conferenceSession&&(conferenceSession.joinedFromOtherDevice=!0)}}))}catch(__error){return}}updateConferenceSession(stanza,conferenceSession){this.logger.info("[ConferenceService] updateConferenceSession");const stanzaElem=$(stanza);let currentTalker;const conferenceStateElem=stanzaElem.find("conference-state");if(conferenceStateElem.length){const isConferenceActive="true"===conferenceStateElem.find("active").text(),isTalkerActive="true"===conferenceStateElem.find("talker-active").text(),isLock="true"===conferenceStateElem.find("lock").text(),recordingText=conferenceStateElem.find("recording-state").text(),recordingUserId=conferenceStateElem.find("recording-user-id").text();let lockedBy=conferenceStateElem.find("locked-by").text();lockedBy||(lockedBy=conferenceStateElem.find("unlocked-by").text());let reason="";!isConferenceActive&&conferenceStateElem.find("reason")&&(reason=conferenceStateElem.find("reason").text()),this.updateState(conferenceSession,isConferenceActive,isTalkerActive,isLock,lockedBy,reason),"on"!==recordingText&&"pause"!==recordingText||(recordingUserId&&(conferenceSession.recordingUserId=recordingUserId),conferenceSession.recordingStarted=!0,conferenceSession.currentRecordingState=recordingText,this.eventService.publish("on"===recordingText?"ON_CONFERENCE_RECORDING_STARTED":"ON_CONFERENCE_RECORDING_PAUSED",conferenceSession))}const talkersElem=stanzaElem.find("talkers");if(talkersElem.length){const talkers=[];talkersElem.find("participant-id").each((__index,talker)=>{const talkerParticipantId=$(talker).text();talkers.push(talkerParticipantId)});const talkingTimeElement=talkersElem.find("talking-time");let talkingTimeValue=0;talkingTimeElement.length&&(talkingTimeValue=parseInt($(talkingTimeElement[0]).text(),10)),talkers.length&&talkingTimeValue&&conferenceSession.updateTalkingTimeForParticipant(talkers[0],talkingTimeValue);stanzaElem.find("conference-id").text();this.updateTalkers(conferenceSession,talkers)}const silentElem=stanzaElem.find("silents");if(silentElem.length){const silents=[];silentElem.find("participant-id").each((__index,silent)=>{const silentParticipantId=$(silent).text();silents.push(silentParticipantId)});const talkingTimeElement=silentElem.find("talking-time");let talkingTimeValue=0;talkingTimeElement.length&&(talkingTimeValue=parseInt($(talkingTimeElement[0]).text(),10)),silents.length&&talkingTimeValue&&conferenceSession.updateTalkingTimeForParticipant(silents[0],talkingTimeValue)}let participantsElem=stanzaElem.find("participants");if(0===participantsElem.length&&(participantsElem=stanzaElem.find("updated-participants")),participantsElem.length||(participantsElem=stanzaElem.find("added-participants")),participantsElem.length){const participants=[];participantsElem.find("participant").each((__index,participant)=>{const participantElem=$(participant),participantId=participantElem.find("participant-id").text(),jid_im=participantElem.find("jid-im").text(),phoneNumber=participantElem.find("phone-number").text(),role=participantElem.find("role").text(),mute=participantElem.find("mute").text(),hold=participantElem.find("hold").text(),cnxState=participantElem.find("cnx-state").text(),delegateCapability=participantElem.find("delegate-capability").text(),talkingTime=participantElem.find("talking-time").text();let microphone=participantElem.find("microphone").text();microphone||(microphone="true");const talking="true"===participantElem.find("talking").text();participants.push({participantId:participantId,jid_im:jid_im,phoneNumber:phoneNumber,participantRole:role,mute:"on"===mute,held:"on"===hold,participantState:cnxState,delegateCapability:"true"===delegateCapability,microphone:"true"===microphone}),talking&&(currentTalker=participantId);const talkingTimeValue=talkingTime?parseInt(talkingTime,10):0;conferenceSession.updateTalkingTimeForParticipant(participantId,talkingTimeValue,jid_im)}),participants.length>0&&(conferenceSession.conferenceStats&&(conferenceSession.conferenceStats.isUpdate=!1),this.createOrUpdateParticipants(conferenceSession,participants))}else{const participants=[];if(stanzaElem.find("participant").length){const participantId=stanzaElem.find("participant-id").text(),jid_im=stanzaElem.find("jid-im").text(),phoneNumber=stanzaElem.find("phone-number").text(),role="member",connectionState=stanzaElem.find("session-info").text(),cnxState=this.stateMap[connectionState],microphone="true";participants.push({participantId:participantId,jid_im:jid_im,phoneNumber:phoneNumber,participantRole:role,mute:!1,held:!1,participantState:cnxState,delegateCapability:!1,microphone:"connected"===cnxState&&"true"===microphone}),this.createOrUpdateParticipants(conferenceSession,participants)}}const removedParticipantsElem=stanzaElem.find("removed-participants");if(removedParticipantsElem.length){const removedParticipants=[];if(removedParticipantsElem.find("participant-id").each((__index,removedParticipant)=>{const removedParticipantId=$(removedParticipant).text();removedParticipants.push(removedParticipantId)}),this.removeParticipants(conferenceSession,removedParticipants),conferenceSession.participants.length<=1){stanzaElem.find("conference-id").text();this.updateTalkers(conferenceSession,[])}conferenceSession.conferenceStats&&(conferenceSession.conferenceStats.isUpdate=!1)}const updatedPublishers=stanzaElem.find("added-publishers");updatedPublishers.length&&(updatedPublishers.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("publisher-id").text(),mediaType=publisherElem.find("media-type").text(),jid_im=publisherElem.find("jid-im").text(),simulcast="true"===publisherElem.find("simulcast").text();this.addPublisher(conferenceSession,publisherId,mediaType,jid_im,simulcast)}),this.eventService.publish("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession));const removedPublishers=stanzaElem.find("removed-publishers");removedPublishers.length&&(removedPublishers.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("participant-id").text(),mediaType=publisherElem.find("media-type").text();for(let i=0;i<conferenceSession.publishers.length;i++){const pub=conferenceSession.publishers[i];if(pub.participantId===publisherId&&pub.mediaType===mediaType){conferenceSession.publishers.splice(i,1);break}}if("video"===mediaType&&this.webConferenceService.isAlreadySubscribedToPublisher(conferenceSession.id,publisherId)){this.logger.info("[ConferenceService] removed-publishers : subscribed to this publisher, so re-init the element");const element=this.webConferenceService.getRelatedElementToPublisher(conferenceSession.id,publisherId);element&&this.webConferenceService.reInitialiseVideoGalleryElementById(conferenceSession,element.id)}}),this.eventService.publish("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession));const publishers=stanzaElem.find("publishers");publishers.length&&(publishers.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("publisher-id").text(),mediaType=publisherElem.find("media-type").text(),jidIm=publisherElem.find("jid-im").text(),simulcast="true"===publisherElem.find("simulcast").text();this.addPublisher(conferenceSession,publisherId,mediaType,jidIm,simulcast)}),this.eventService.publish("ON_CONFERENCE_PUBLISHER_UPDATED",conferenceSession));const recordingUserIdElem=stanzaElem.find("recording-user-id");return recordingUserIdElem.text()&&(conferenceSession.recordingUserId=recordingUserIdElem.text(),this.eventService.publish("ON_CONFERENCE_RECORDING_STARTED",conferenceSession)),currentTalker&&this.updateTalkers(conferenceSession,[currentTalker]),!0}updateConferenceSessionActiveState(stanza,conferenceSession){const conferenceStateElem=$(stanza).find("conference-state");if(conferenceStateElem.length){this.logger.info("[ConferenceService] updateConferenceSessionActiveState");const isConferenceActive="true"===conferenceStateElem.find("active").text(),isTalkerActive="true"===conferenceStateElem.find("talker-active").text();let reason="";!isConferenceActive&&conferenceStateElem.find("reason")&&(reason=conferenceStateElem.find("reason").text()),this.updateState(conferenceSession,isConferenceActive,isTalkerActive,null,null,reason)}}updateState(conferenceSession,isConferenceActive,isTalkerActive,lock=!1,lockedBy="",reason=""){if(isConferenceActive||this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),conferenceSession.active&&!isConferenceActive){if(this.contactService.userContact.guestMode&&conferenceSession.type!==this.MEDIATYPE.WEBRTCSHARINGONLY)this.eventService.publish("ON_OPEN_POPUP","concludeInvitation");else{const rooms=this.roomService.findRoomsWithConfId(conferenceSession.id);if(rooms&&rooms.length&&!rooms[0].owner)switch(conferenceSession.type){case this.MEDIATYPE.WEBRTCSHARINGONLY:break;case this.MEDIATYPE.PSTNAUDIO:case this.MEDIATYPE.WEBRTC:default:if(conferenceSession.isParticipantConnectedByJid(this.contactService.userContact.dbId)){const displayName=_escape(rooms[0].ownerContact.displayName),roomName=_escape(rooms[0].name),message=this.i18nService.translate("meetingEndBy",{owner:displayName,meeting:roomName});this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}}conferenceSession.participants=[],conferenceSession.status="ended",conferenceSession.cleanupSessionData&&conferenceSession.cleanupSessionData(),reason&&"noOwnerFound"===reason&&this.mainService.showGlobalPopupMessage({popupTitle:"conference",popupBody:"autoDelegationNotPossible",okLabel:"ok"})}conferenceSession.updateStateFromData(isConferenceActive,isTalkerActive,lock),this.eventService.publish("ON_CONFERENCE_STATE_EVENT",conferenceSession),lockedBy&&this.eventService.publish("ON_CONFERENCE_LOCKED_EVENT",lock,lockedBy),isConferenceActive||this.eventService.publish("ON_CONVERSATIONS_UPDATED_EVENT")}updateTalkers(conferenceSession,talkers){conferenceSession.updateTalkers(talkers),this.eventService.publish("ON_CONFERENCE_TALKER_EVENT",conferenceSession)}async getServerConferenceStats(sessionId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/conferences/${sessionId}/talkingtime`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const responseData=await response.json();if(0===responseData.data.participants.length)return null;const stats=new conference_stats_model_1.ConferenceStats;if(await this.utilitiesService.asyncForEach(responseData.data.participants,async participant=>{if(participant.talkingTime>0){const statsParticipant=new conference_stats_model_1.ConferenceStatsParticipant(participant.userId);statsParticipant.contact=await this.contactService.getContactByDBId(participant.userId),statsParticipant.talkDuration=1e3*participant.talkingTime,stats.participants.push(statsParticipant),stats.talkDuration+=statsParticipant.talkDuration}}),stats.participants=stats.participants.sort((p1,p2)=>p2.talkDuration-p1.talkDuration),stats.participants.length>0){const maxPartTalkDuration=stats.participants[0].talkDuration;stats.participants.forEach(participant=>{participant.talkDisplay=Math.trunc(100*participant.talkDuration/maxPartTalkDuration)})}return stats}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getServerConferenceStats");throw this.logger.error("[ConferenceService] "+errorInfo.message),errorInfo.error}}createOrUpdateParticipants(conferenceSession,participants){conferenceSession.updateParticipants(participants).then(newParticipant=>{if(conferenceSession.participants.find(participant=>participant.jid_im===this.contactService.userContact.id&&"disconnected"!==participant.state)&&conferenceSession.type===this.MEDIATYPE.WEBRTC){const state=conferenceSession.hasLocalSharing?"sharing":"audio";this.contactService.setBusyState("dnd",state)}this.eventService.publish("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession),"webrtc"===conferenceSession.type&&newParticipant&&this.eventService.publish("ON_WEB_CONFENRECE_PARTICIPANT_JOINED_EVENT",conferenceSession,newParticipant)})}removeParticipants(conferenceSession,removedParticipants){if(conferenceSession.removeParticipants(removedParticipants),!conferenceSession.participants.find(participant=>participant.jid_im===this.contactService.userContact.id))switch(this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),conferenceSession.type){case this.MEDIATYPE.WEBRTC:if(this.webConferenceService.removeAllJingleSessionsForConferenceSession(conferenceSession.id),conferenceSession.active){const room=this.roomService.findRoomsWithConfId(conferenceSession.id);if(room.length&&!this.webConferenceService.isMyConference(conferenceSession.id)){const name=_escape(room[0].name),message=this.i18nService.translate("meetingDisconnect",{meeting:name});this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}}conferenceSession.cleanupSessionData(),this.eventService.publish("ON_CONFERENCE_UPDATED_EVENT",conferenceSession);break;case this.MEDIATYPE.WEBRTCSHARINGONLY:this.webConferenceService.removeAllJingleSessionsForConferenceSession(conferenceSession.id),conferenceSession.cleanupSessionData()}this.eventService.publish("ON_CONFERENCE_PARTICIPANT_EVENT",conferenceSession)}addPublisher(conferenceSession,publisherId,mediaType,jid,simulcast=!1){let toAdd=!0;for(let i=0;i<conferenceSession.publishers.length;i++){const pub=conferenceSession.publishers[i];if(pub.participantId===publisherId&&pub.mediaType===mediaType){toAdd=!1;break}}const publisher={participantId:publisherId,mediaType:mediaType,jid_im:jid,simulcast:simulcast};if(toAdd&&conferenceSession.publishers.push(publisher),toAdd&&"video"===mediaType){const element=this.webConferenceService.getFreeVideoGalleryElement(conferenceSession.id);let firstVideo=!1;this.webConferenceService.isActiveSpeakerEnabled()&&element&&"videoGallery_0"===element.id&&(firstVideo=!0),element&&!this.webConferenceService.isAlreadySubscribedToPublisher(conferenceSession.id,publisher.participantId)&&(this.logger.info("[ConferenceService] will subscribe in confId("+conferenceSession.id+") to publisher with id "+publisherId+" and element id "+element.id+" in few moments"),element.state="busy",element.publisherId=publisher.participantId,this.$interval((confSession,newPublisher,elemToSubscribe,isFirstVideo)=>{if("busy"===elemToSubscribe.state&&elemToSubscribe.publisherId===newPublisher.participantId){this.logger.info("[ConferenceService] subscribe in confId("+confSession.id+") to publisher with id "+newPublisher.participantId+"and element id "+elemToSubscribe.id);let subStreamLevel=null;newPublisher.simulcast&&(isFirstVideo?(subStreamLevel="2",elemToSubscribe.publisherId=""):subStreamLevel="0"),isFirstVideo?this.webConferenceService.subscribeToDynamicFeed(confSession.id,newPublisher,elemToSubscribe.id,subStreamLevel,isFirstVideo).catch(()=>{this.logger.error("[ConferenceService] subscribe to publisher failed, reset the video gallery element with id "+elemToSubscribe.id),this.webConferenceService.reInitialiseVideoGalleryElementById(confSession,elemToSubscribe.id)}):this.webConferenceService.subscribeToPublisher(confSession.id,newPublisher,elemToSubscribe.id,subStreamLevel,isFirstVideo).catch(()=>{this.logger.error("[ConferenceService] subscribe to publisher failed, reset the video gallery element with id "+elemToSubscribe.id),this.webConferenceService.reInitialiseVideoGalleryElementById(confSession,elemToSubscribe.id)})}},1500,1,!0,conferenceSession,publisher,element,firstVideo))}}stopConference(confId="",type=this.MEDIATYPE.WEBRTC,roomId=""){if(this.logger.info("[ConferenceService] stopConference( confId="+confId+", type="+type+")"),!confId||!roomId&&type!==this.MEDIATYPE.PSTNAUDIO)return this.logger.warn("[ConferenceService] stopConference missing conf ID or roomID"),this.$q.reject();const conferenceSession=this.webConferenceService.conferenceSessions[confId];return conferenceSession&&conferenceSession.isActive()?this.$q((resolve,reject)=>{this.$http({method:"PUT",url:this.confPortalURL+confId+"/stop",headers:this.authService.getPostHeader(),data:{mediaType:type,roomId:roomId}}).then(()=>{this.eventService.publish("CHECK_AND_RESET_BUSY_STATE");const session=this.webConferenceService.conferenceSessions[confId];session&&(this.updateState(session,!1,!1,!1),session.cleanupSessionData(),this.eventService.publish("ON_CONFERENCE_STATE_EVENT",session)),this.logger.info("[ConferenceService] stopConference( confId="+confId+") successfully"),resolve()},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="stopConference( confId="+confId+") failure: "+msg;if(this.logger.error("[ConferenceService] "+errorMessage),404e3!==response.data.errorDetailsCode)this.mainService.showGlobalPopupMessage({popupTitle:"warning",popupBody:"stopMeetingFailure",okLabel:"ok"});else{const session=this.webConferenceService.conferenceSessions[confId];session&&(session.active=!1,session.participants=[],this.removeConferenceSession(session),this.eventService.publish("ON_CONFERENCE_STATE_EVENT",session))}reject(new Error(errorMessage))})}):(this.logger.warn("[ConferenceService] stopConference - no active conference session to stop"),this.$q.reject())}removeConferenceSession(conferenceSession=null){conferenceSession&&(conferenceSession.type===this.MEDIATYPE.WEBRTC||conferenceSession.type===this.MEDIATYPE.WEBRTCSHARINGONLY?(this.webConferenceService.leaveWebConference(conferenceSession.id),this.webConferenceService.removeConferenceSession(conferenceSession.id)):this.pgiConferenceService.removeConferenceSession(conferenceSession.id))}disconnectsParticipant(confId,participantId,mediaType=this.MEDIATYPE.PSTNAUDIO){return confId&&participantId?this.$q((resolve,reject)=>{this.logger.info("[ConferenceService] disconnectsParticipant( confId="+confId+"participantId="+participantId+")"),this.$http({method:"DELETE",url:this.confPortalURL+confId+"/participants/"+participantId+"?mediaType="+mediaType,headers:this.authService.getRequestHeader()}).then(()=>{this.logger.info("[ConferenceService] disconnectsParticipant( confId="+confId+"participantId="+participantId+") successfully"),resolve()},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="disconnectsParticipant( confId="+confId+"participantId="+participantId+") failure: "+msg;this.logger.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.logger.warn("[ConferenceService] disconnectsParticipant missing conf ID or participantId"),this.$q.reject())}updateConference(confEndpointId,confData,mediaType=this.MEDIATYPE.PSTNAUDIO){return mediaType===this.MEDIATYPE.PSTNAUDIO?this.pgiConferenceService.updateConference(confEndpointId,confData):this.webConferenceService.updateConference(confEndpointId,confData)}updateConferenceState(confId,option,mediaType=this.MEDIATYPE.PSTNAUDIO){return this.logger.info("[ConferenceService] updateConferenceState( confId="+confId+", option="+option+" mediaType="+mediaType+")"),confId&&option?this.$q((resolve,reject)=>{let conferenceSession=null;if(conferenceSession=mediaType===this.MEDIATYPE.PSTNAUDIO?this.pgiConferenceService.getConferenceSessionById(confId):this.webConferenceService.conferenceSessions[confId],!conferenceSession)return this.logger.error("[ConferenceService] updateConferenceState - no corresponding conference session to update"),void reject();this.$http({method:"PUT",url:this.confPortalURL+confId+"/update",headers:this.authService.getRequestHeader(),data:{option:option,mediaType:conferenceSession.type}}).then(response=>{const conferenceData=response.data.data;this.logger.info("[ConferenceService] updateConferenceState( confId="+confId+") successfully"),resolve(conferenceData)},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="updatsConferenceState( confId="+confId+") failure: "+msg;this.logger.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.logger.error("[ConferenceService] updateConferenceState - missing a parameter"),this.$q.reject())}updateParticipantState(confId,participantId,option,mediaType=this.MEDIATYPE.PSTNAUDIO,media=null,bitRate=null,subStreamLevel=null,publisherId=null){return this.logger.info("[ConferenceService] updateParticipantState( confId="+confId+"participantId="+participantId+" option="+option+" mediaType="+mediaType+")"),confId&&participantId&&option?this.$q((resolve,reject)=>{let conferenceSession=null;if(conferenceSession=mediaType===this.MEDIATYPE.PSTNAUDIO?this.pgiConferenceService.getConferenceSessionById(confId):this.webConferenceService.conferenceSessions[confId],!conferenceSession)return this.logger.error("[ConferenceService] updateParticipantState - no corresponding conference session to update"),void reject();const data={option:option,mediaType:conferenceSession.type};media&&(data.media=media),bitRate&&(data.bitRate=bitRate),publisherId&&(data.publisherId=publisherId),subStreamLevel&&(data.subStreamLevel=subStreamLevel),this.$http({method:"PUT",url:this.confPortalURL+confId+"/participants/"+participantId,headers:this.authService.getRequestHeader(),data:data}).then(response=>{const status=response.data;this.logger.info("[ConferenceService] updateParticipantState( confId="+confId+"participantId="+participantId+") successfully"),resolve(status)},response=>{const msg=response.data?response.data.errorDetails:response.data,errorMessage="updateParticipantState( confId="+confId+"participantId="+participantId+") failure: "+msg;this.logger.error("[ConferenceService] "+errorMessage),reject(new Error(errorMessage))})}):(this.logger.error("[ConferenceService] updateParticipantState - missing a parameter"),this.$q.reject())}async addPSTNParticipantToConference(confId=null,participantPhoneNumber=null){this.logger.debug("[ConferenceService] addPSTNParticipantToConference - confId: "+confId+" - phoneNumber: "+participantPhoneNumber);try{const url=`${this.confPortalURL}${confId}/add`,headers=this.authService.getPostHeader(),body=JSON.stringify({participantPhoneNumber:participantPhoneNumber}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return void this.logger.info("[ConferenceService] addPSTNParticipantToConference success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addPSTNParticipantToConference");throw this.logger.error("[ConferenceService] "+errorInfo.message),errorInfo.error}}isUserContactInCall(){for(const property in this.webConferenceService.conferenceSessions)if(this.webConferenceService.conferenceSessions.hasOwnProperty(property)){if(this.webConferenceService.conferenceSessions[property].isParticipantConnectedByJid(this.contactService.userContact.jid))return!0}return!1}refreshConferenceSessions(){const promoseArray=[];return promoseArray.push(this.webConferenceService.refreshConferenceSessions()),this.$q.all(promoseArray)}computeJoinStartForSFUConference(conversation,confSession=null){const result={showStartButton:!1,showJoinButton:!1,isActionDisabled:!1,startOrJoinTooltip:""},me=conversation.room.getUserByJid(this.contactService.userContact.jid);if(me&&"unsubscribed"===me.status)return this.rxUpdateSubject.next(new event_model_1.RBEvent("CONFERENCE_BUTTON_STATUS",result)),result;if(!conversation.room.isMeetingRoom()&&!this.contactService.userContact.webrtcAudioEnabled)return result.showStartButton=!1,result.showJoinButton=!1,result;const conferenceSession=confSession||this.webConferenceService.getConferenceSessionForRoom(conversation.room.confEndpoints);if(conferenceSession&&conferenceSession.status&&"ended"!==conferenceSession.status)result.showStartButton=!1,result.showJoinButton=!1;else if(conferenceSession&&conferenceSession.isActive()&&!conferenceSession.haveJoined)result.showStartButton=!1,result.showJoinButton=!0;else if(conversation.room.isUserModerator(this.contactService.userContact)){if(result.showStartButton=!0,!this.hasConferenceRights)return result.isActionDisabled=!0,result.startOrJoinTooltip="startConferenceNoRights",this.rxUpdateSubject.next(new event_model_1.RBEvent("CONFERENCE_BUTTON_STATUS",result)),result;const filteredUsers=conversation.room.users.filter(user=>user.contact&&user.contact.initialized&&!user.contact.isAnonymousGuest()&&!user.contact.isBadGuest()&&!user.contact.isTerminated&&("invited"===user.status||"accepted"===user.status));let guestsUsersLength=0;return conversation.room.guestEmails&&(guestsUsersLength=conversation.room.guestEmails.length),conversation.room.guestPhoneNumbers&&(guestsUsersLength+=conversation.room.guestPhoneNumbers.length),filteredUsers.length+guestsUsersLength>this.maxNumberOfUsersSFU?(result.isActionDisabled=!0,result.startOrJoinTooltip=this.i18nService.translate("disabledStartConference",{number:this.maxNumberOfUsersSFU}),this.rxUpdateSubject.next(new event_model_1.RBEvent("CONFERENCE_BUTTON_STATUS",result)),result):(result.isActionDisabled=!1,result.startOrJoinTooltip="startConference",this.rxUpdateSubject.next(new event_model_1.RBEvent("CONFERENCE_BUTTON_STATUS",result)),result)}return this.rxUpdateSubject.next(new event_model_1.RBEvent("CONFERENCE_BUTTON_STATUS",result)),result}}ConferenceService.$inject=["$q","$interval","$http","webConferenceService"],exports.ConferenceService=ConferenceService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const jwt_decode_1=__webpack_require__(162),EventsService_1=__webpack_require__(28),main_service_1=__webpack_require__(15),settings_service_1=__webpack_require__(18),auth_service_1=__webpack_require__(8),event_service_1=__webpack_require__(11),xmpp_service_1=__webpack_require__(9),contact_service_1=__webpack_require__(6),fileStorage_service_1=__webpack_require__(34),invitation_service_1=__webpack_require__(317),profile_service_1=__webpack_require__(13),room_service_1=__webpack_require__(25),webrtcConfigAndUtils_1=__webpack_require__(44),telephonyKeys_service_1=__webpack_require__(319),webConferenceV2_service_1=__webpack_require__(97),group_service_1=__webpack_require__(320),bot_service_1=__webpack_require__(124),channel_service_1=__webpack_require__(322),webrtcP2P_service_1=__webpack_require__(35),calendar_service_1=__webpack_require__(324),telephony_service_1=__webpack_require__(57),conversation_service_1=__webpack_require__(63),presenceHelper_service_1=__webpack_require__(477),webrtcP2PRecording_service_1=__webpack_require__(325),deviceManagement_service_1=__webpack_require__(56),directory_service_1=__webpack_require__(151),fileServer_service_1=__webpack_require__(47),callLog_service_1=__webpack_require__(329),webrtcGlobalEventHandler_service_1=__webpack_require__(154),webrtcGateway_service_1=__webpack_require__(71),favorite_service_1=__webpack_require__(149),voiceMessage_service_1=__webpack_require__(123),sdkConfig_1=__webpack_require__(40),sdkConstant_1=__webpack_require__(39),telephonyAbstract_service_1=__webpack_require__(330),sdkErrorService_1=__webpack_require__(491),logger_service_1=__webpack_require__(4),ccdAgent_service_1=__webpack_require__(126),personal_routines_service_1=__webpack_require__(331),_configService=new WeakMap,_conferenceService=new WeakMap,_webConferenceService=new WeakMap,_adminCompanyService=new WeakMap,_adminUserService=new WeakMap;class ConnectionService{constructor($rootScope,configService,conferenceService,webConferenceService,adminCompanyService,adminUserService){this.eventService=event_service_1.EventService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.invitationService=invitation_service_1.InvitationService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.telephonyKeysService=telephonyKeys_service_1.TelephonyKeysService.getInstance(),this.webConferenceV2Service=webConferenceV2_service_1.WebConferenceServiceV2.getInstance(),this.groupService=group_service_1.GroupService.getInstance(),this.botService=bot_service_1.BotService.getInstance(),this.channelService=channel_service_1.ChannelService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.calendarService=calendar_service_1.CalendarService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.presenceHelperService=presenceHelper_service_1.PresenceHelperService.getInstance(),this.webrtcP2PRecordingService=webrtcP2PRecording_service_1.WebrtcP2PRecordingService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.directoryService=directory_service_1.DirectoryService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.callLogService=callLog_service_1.CallLogService.getInstance(),this.webrtcGlobalEventHandlerService=webrtcGlobalEventHandler_service_1.WebrtcGlobalEventHandlerService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.telephonyAbstractService=telephonyAbstract_service_1.TelephonyAbstractService.getInstance(),this.favoriteService=favorite_service_1.FavoriteService.getInstance(),this.voiceMessageService=voiceMessage_service_1.VoiceMessageService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.ccdAgentService=ccdAgent_service_1.CCDAgentService.getInstance(),this.personalRoutinesService=personal_routines_service_1.PersonalRoutinesService.getInstance(),this.logService="ConnectionService | ",this.state="disconnected",this.connecting=!1,this.RAINBOW_ONCONNECTIONSTATECHANGED="rainbowconnectionstatechanged",this.RAINBOW_ONSTARTED="started",this.RAINBOW_ONSIGNED="signed",this.RAINBOW_ONSTOPPED="stopped",this.RAINBOW_CONNECTIONINPROGRESS="inProgress",this.RAINBOW_ONUSERTOKENRENEW="userTokenRenew",this.RAINBOW_ONUSERTOKENRENEWFAILED="userTokenRenewFailed",this.RAINBOW_ONUSERTOKENWILLEXPIRE="userTokenWillExpire",this.RAINBOW_ONAPPTOKENRENEW="applicationTokenRenew",this.RAINBOW_ONAPPTOKENRENEWFAILED="applicationTokenRenewFailed",this.RAINBOW_CONNECTIONCONNECTED="connected",this.RAINBOW_CONNECTIONDISCONNECTED="disconnected",this.eventService.configure($rootScope),this.settingsService.configure("en"),this.settingsService.setSetting("apiMode","sdk"),_configService.set(this,configService),_conferenceService.set(this,conferenceService),_webConferenceService.set(this,webConferenceService),_adminCompanyService.set(this,adminCompanyService),_adminUserService.set(this,adminUserService),this.xmppService.subscribeToConnectionEvents(event=>{let status="connected";"ON_XMPP_CONNECTING"===event.name&&(status="inProgress"),"ON_XMPP_DISCONNECTED"===event.name&&(status="LOGOUT"===event.data.reason?"unlogged":"disconnected","RESOURCE_CONSTRAINTS"===event.data.reason&&(status="unlogged",this.signout())),"ON_XMPP_CONNECTED"===event.name&&(status="connected","RECONNECTION"===event.data.reason&&(EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONNECTIONSTATECHANGED,"reconnecting"),this.reconnectServices())),this.state=status,this.rainbowLogger.sdk(this.logService+"[onChange] :: Connection state changed to "+status),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONNECTIONSTATECHANGED,status)}),this.authService.subscribe(event=>{try{switch(event.name){case"ON_AUTH_TOKEN_RENEW":EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONUSERTOKENRENEW);break;case"ON_AUTH_TOKEN_EXPIRE":this.signout().then(()=>{EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONUSERTOKENRENEWFAILED)});break;case"ON_AUTH_TOKEN_WILL_EXPIRE":EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONUSERTOKENWILLEXPIRE);break;case"ON_APP_TOKEN_RENEW":EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONAPPTOKENRENEW);break;case"ON_APP_TOKEN_EXPIRE":EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONAPPTOKENRENEWFAILED)}}catch(error){this.rainbowLogger.error(this.logService+" failure "+error.message)}}),window.addEventListener("unload",()=>{this.webrtcP2PService.stop(),this.contactService.stop(),this.conversationService.stop(),this.groupService.stop(),this.telephonyService.stop(),this.telephonyKeysService.stop(),this.ccdAgentService.stop(),this.personalRoutinesService.stop(),this.webConferenceV2Service.stop(),this.fileServerService.stop(),this.fileStorageService.stop(),this.xmppService.stop(),this.profileService.stop(),this.webrtcP2PRecordingService.stop(),this.channelService.stop(),this.webrtcGatewayService.stop(),this.calendarService.stop(),this.presenceHelperService.stop(),this.deviceManagementService.stop(),this.callLogService.stop()})}static get $inject(){return["$rootScope","configService","conferenceService","webConferenceService","adminCompanyService","adminUserService"]}signin(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_SANDBOX_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowOfficial(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_OFFICIAL_HOST,window.config.webservices.currentServer=ConnectionService.RAINBOW_OFFICIAL_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowBeta(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_BETA_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowCPaasPreProd(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_CPAASPREPROD_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowDev(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_DEV_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowSandboxChina(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_CHINASANDBOX_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowChina(strLogin,strPassword){return ConnectionService.hostUsed=ConnectionService.RAINBOW_CHINA_HOST,this.signinToRainbow(strLogin,strPassword,null)}signinOnRainbowHosted(strLogin,strPassword,strHost){return ConnectionService.hostUsed=strHost,this.signinToRainbow(strLogin,strPassword,null)}async signinSandBoxWithToken(strToken){ConnectionService.hostUsed=ConnectionService.RAINBOW_SANDBOX_HOST;return await this.signinToRainbow(null,null,strToken)}async signinOnRainbowOfficialWithToken(strToken){ConnectionService.hostUsed=ConnectionService.RAINBOW_OFFICIAL_HOST,window.config.webservices.currentServer=ConnectionService.RAINBOW_OFFICIAL_HOST;return await this.signinToRainbow(null,null,strToken)}signinOnRainbowBetaWithToken(strToken){return ConnectionService.hostUsed=ConnectionService.RAINBOW_BETA_HOST,this.signinToRainbow(null,null,strToken)}signinOnRainbowDevWithToken(strToken){return ConnectionService.hostUsed=ConnectionService.RAINBOW_DEV_HOST,this.signinToRainbow(null,null,strToken)}signinOnRainbowHostedWithToken(strToken,strHost){return ConnectionService.hostUsed=strHost,this.signinToRainbow(null,null,strToken)}signinWithToken(strToken){return this.signinToRainbow(null,null,strToken)}setRenewedToken(strToken){strToken||this.rainbowLogger.error(this.logService+"[setRenewedToken] Argument 'strToken' is missing or empty"),this.authService.sdkSetRenewedToken(strToken)}signinOnRainbowWithOICD(strToken){let challenge="";const characters="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",charactersLength=characters.length;for(let i=0;i<30;i++)challenge+=characters.charAt(Math.floor(Math.random()*charactersLength));const url=`https://openrainbow.com/api/rainbow/authentication/v1.0/oidc-client/jwt?id_token=${strToken}&challenge=${challenge}`;return new Promise((resolve,reject)=>{if(!strToken)return this.rainbowLogger.sdk(this.logService+"[signinOnRainbowWithOICD] :: Argument strToken is null or undefined"),reject("Argument strToken is null or undefined");let headersXrainbowAppAuth=window.btoa(unescape(encodeURIComponent(window.sdk.key.appID+":"+window.SHA256(window.sdk.key.appSecret+challenge))));headersXrainbowAppAuth="Basic "+headersXrainbowAppAuth;const sdkHeaders=new Headers({"Content-Type":"application/x-www-form-urlencoded","X-Rainbow-App-Auth":headersXrainbowAppAuth,Accept:"application/json"});fetch(url,{method:"get",mode:"cors",headers:sdkHeaders}).then(response=>{response.json().then(data=>{this.signinOnRainbowBetaWithToken(data.token).then(account=>resolve(account)).catch(err=>reject(err))})}).catch(err=>reject(err))})}styleSignInWithRainbowButton(color,size){const el=document.querySelector(".SignInWithRainbow");if(!el)return this.rainbowLogger.sdk(this.logService+"[styleSignInWithRainbowButton] :: Could not find a corresponding HTML element"),!1;let width,height,backgroundSize,fontSize,backgroundColor,textColor;return size||(size="medium"),color||(color="blue"),"blue"===color?(backgroundColor="#1b85e0",textColor="#FFFFFF"):"white"===color&&(backgroundColor="#FFFFFF",textColor="#1b85e0"),"small"===size?(width="200px",height="20px",backgroundSize="18px",fontSize="12px"):"medium"===size?(width="250px",height="30px",backgroundSize="26px",fontSize="16px"):"large"===size&&(width="350px",height="40px",backgroundSize="34px",fontSize="22px"),el.style.backgroundColor=backgroundColor,el.style.color=textColor,el.style.width=width,el.style.height=height,el.style.fontSize=fontSize,el.style.border="0px",el.style.borderRadius="5px",el.innerHTML="Sign in with Rainbow",el.style.backgroundImage="url('https://developers.openrainbow.com/android-chrome-48x48.png')",el.style.backgroundPosition="left",el.style.backgroundRepeat="no-repeat",el.style.verticalAlign="middle",el.style.backgroundSize=backgroundSize,el.style.backgroundOrigin="content-box",el.style.paddingLeft="13px",this.rainbowLogger.sdk(this.logService+"[styleSignInWithRainbowButton] :: Styled a corresponding HTML element"),!0}async signout(){try{const result={code:sdkConstant_1.SDK.OK,label:"OK"};return this.rainbowLogger.sdk(this.logService+"[signout] :: Trying to sign out"),await this.stopServices(),this.rainbowLogger.sdk(this.logService+"[signout] :: Services Successfully unloaded!"),this.authService.loggedInUser=null,EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONSTOPPED,null),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONNECTIONSTATECHANGED,this.state),result}catch(error){throw this.rainbowLogger.sdk(this.logService+"[signout] :: An error occurred during signout -- "+error),error}}async stopServices(){const conferenceService=_conferenceService.get(this),webConferenceService=_webConferenceService.get(this);try{this.webrtcP2PService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: webrtcP2P service stopped"),this.favoriteService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Favorite service stopped"),this.voiceMessageService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: VoiceMessage service stopped"),this.webrtcGlobalEventHandlerService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: webrtcGlobalEventHandler service stopped"),this.telephonyService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Telephony service stopped"),this.contactService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Contact service stopped"),this.botService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Bot service stopped"),this.profileService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Profile service stopped"),this.conversationService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Conversation service stopped"),conferenceService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Conference service stopped"),this.webConferenceV2Service.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Web ConferenceV2 service stopped"),webConferenceService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Web Conference service stopped"),this.channelService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: ChannelService service stopped"),this.fileServerService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: FileServer service stopped"),this.fileStorageService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: FileStorage service stopped"),this.invitationService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Invitation service stopped"),this.groupService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Group service stopped"),this.roomService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Room service stopped"),this.deviceManagementService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: DeviceManagement Service stopped"),this.webrtcGatewayService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: webrtcGateway service stopped"),this.webrtcP2PRecordingService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: webrtcP2PRecording Service stopped"),this.calendarService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: Calendar service stopped"),this.presenceHelperService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: PresenceHelper Service stopped"),this.callLogService.stop(),this.rainbowLogger.sdk(this.logService+"[signout] :: CallLog service Service stopped"),this.xmppService.connected?await this.xmppService.stop():(this.state="unlogged",this.xmppService.resetAllObjects(),this.rainbowLogger.sdk(this.logService+"[signout] :: xmppService already stopped, update pnly state"))}catch(error){throw this.rainbowLogger.sdk(this.logService+"[stopServices] :: An error occurred during signout -- "+error),new Error(error)}}updateUserPassword(oldPassword,newPassword){return this.contactService.updateUserPassword(oldPassword,newPassword,!1)}getState(){return this.state}getToken(){return this.authService.token}async refreshToken(){await this.authService.renewAuthToken(!1)}signinToRainbow(login,password,token){const conferenceService=_conferenceService.get(this),webConferenceService=_webConferenceService.get(this),adminCompanyService=_adminCompanyService.get(this),adminUserService=_adminUserService.get(this);if(this.rainbowLogger.sdk("Auth"),this.connecting)throw new sdkErrorService_1.default("Connection already in progress",sdkConstant_1.SDK.ERRORBADREQUEST);if(this.authService.loggedInUser)throw new sdkErrorService_1.default("User already connected. Sign out before signing in again.",sdkConstant_1.SDK.ERRORBADREQUEST);this.connecting=!0;let withToken=!1;return new Promise((resolve,reject)=>{if(token)withToken=!0,login=null,password=null;else{if(!login)return this.connecting=!1,reject({code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'login' is missing or empty"});if(!password)return this.connecting=!1,reject({code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'password' is missing or empty"})}this.mainService.configure(null,sdkConfig_1.sdkConfig),this.rainbowLogger.sdk(this.logService+"[signin] :: Rainbow host used "+ConnectionService.hostUsed),withToken?this.rainbowLogger.sdk(this.logService+"[signin] :: Trying to sign-in with given token"):this.rainbowLogger.sdk(this.logService+"[signin] :: Trying to sign-in");const result={code:sdkConstant_1.SDK.OK,label:"",account:null},appToken={appID:window.sdk.key.appID,appSecret:window.sdk.key.appSecret};if(this.authService.removeCredentials(),this.rainbowLogger.sdk("RainbowSDK Performance - sdkLogOn"),token&&!ConnectionService.hostUsed){let hostUrl=jwt_decode_1.default(token).environment.environmentApiUrl;if(hostUrl&&"https://"===hostUrl.substring(0,8))hostUrl=hostUrl.substring(8),ConnectionService.hostUsed=hostUrl;else if(!hostUrl&&"https://"!==hostUrl.substring(0,8))throw this.connecting=!1,new Error("Could not get a Rainbow Environment from the token. Please use one of the existing methods to connect to a specific Rainbow environment.")}this.authService.sdkLogOn(login,password,ConnectionService.hostUsed,appToken,token).then(()=>{this.rainbowLogger.sdk("RainbowSDK Performance - sdkLogOn"),result.account={},result.label="ok",result.account.userId=this.authService.userId,result.account.companyId=this.authService.companyId,result.account.loginEmail=this.authService.login,result.account.roles=this.authService.loggedInUser.roles,result.token=this.authService.token,result.userData=this.authService.loggedInUser,this.rainbowLogger.sdk(this.logService+"[signin] :: Successfully sign-in with  | "+this.authService.jidIm),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONSIGNED,result),this.authService.startTokenSurvey(),this.rainbowLogger.sdk(this.logService+"[signin] :: Start services..."),this.rainbowLogger.sdk("RainbowSDK Performance - XMPPService"),this.xmppService.start().then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - companyService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Company service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - adminCompanyService"),adminCompanyService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - adminCompanyService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Admin company service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - adminUserService"),adminUserService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - adminUserService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Admin user service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - contactService"),this.contactService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - contactService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Contact service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - profileService"),sdkConfig_1.sdkConfig.features.profileService)return this.profileService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - profileService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Profile service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - invitationService"),this.invitationService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - invitationService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Invitation service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - fileServerService"),this.fileServerService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - fileServerService"),this.rainbowLogger.sdk(this.logService+"[signin] :: FileServer service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - fileStorageService"),this.fileStorageService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - fileStorageService"),this.rainbowLogger.sdk(this.logService+"[signin] :: FileStorage service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - roomService"),sdkConfig_1.sdkConfig.features.roomService)return this.roomService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - roomService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Room service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - groupService"),this.groupService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - groupService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Group service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - favoriteService"),sdkConfig_1.sdkConfig.features.favoriteService)return this.favoriteService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - favoriteService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Favorite service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - voiceMessageService"),this.voiceMessageService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - voiceMessageService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Voice Message service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - webrtcP2PService"),this.webrtcP2PService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - webrtcP2PService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Video service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - webrtcGlobalEventHandlerService"),this.webrtcGlobalEventHandlerService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - webrtcGlobalEventHandlerService"),this.rainbowLogger.sdk(this.logService+"[signin] :: WebRTCEventHandler service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - telephonyService"),sdkConfig_1.sdkConfig.features.telephony)return this.telephonyService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - telephonyService"),this.rainbowLogger.sdk(this.logService+"[signin] :: telephonyService service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - presenceHelperService"),this.presenceHelperService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - presenceHelperService"),this.rainbowLogger.sdk(this.logService+"[signin] :: PresenceHelper service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - directoryService"),this.directoryService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - directoryService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Directory service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - webrtcGatewayService"),this.webrtcGatewayService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - webrtcGatewayService"),this.rainbowLogger.sdk(this.logService+"[signin] :: WebrtcGateway service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - telephonyAbstractService"),this.telephonyAbstractService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - telephonyAbstractService"),this.rainbowLogger.sdk(this.logService+"[signin] :: TelephonyAbstract service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - telephonyKeysService"),sdkConfig_1.sdkConfig.features.telephony)return this.telephonyKeysService.start()}).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - telephonyAbstractService"),this.rainbowLogger.sdk(this.logService+"[signin] :: TelephonyAbstract service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - ccdAgentService"),sdkConfig_1.sdkConfig.features.telephony)return this.ccdAgentService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - ccdAgentService"),this.rainbowLogger.sdk(this.logService+"[signin] :: ccdAgentService service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - webConferenceService"),webConferenceService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - webConferenceService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Web Conference service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - calendarService"),sdkConfig_1.sdkConfig.features.calendarService)return this.calendarService.start(this.conversationService)}).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - calendarService"),this.rainbowLogger.sdk(this.logService+"[signin] :: calendarService service ready!"),this.webConferenceV2Service.start(),webConferenceService.setActiveSpeakerValue(!1),this.rainbowLogger.sdk("RainbowSDK Performance - conversationService"),sdkConfig_1.sdkConfig.features.conversationService)return this.conversationService.start(webConferenceService)}).then(()=>{this.rainbowLogger.sdk("RainbowSDK Performance - conversationService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Conversation service ready!"),this.rainbowLogger.sdk(this.logService+"[signin] :: Send initial presence"),this.rainbowLogger.sdk("RainbowSDK Performance - sendPresenceFromConfiguration"),this.contactService.sendPresenceFromConfiguration()}).then(()=>{this.rainbowLogger.sdk("RainbowSDK Performance - sendPresenceFromConfiguration"),this.rainbowLogger.sdk(this.logService+"[signin] :: Initial presence sent !")}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - deviceManagementService"),this.deviceManagementService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - deviceManagementService"),this.rainbowLogger.sdk(this.logService+"[signin] :: deviceManagement service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - botService"),sdkConfig_1.sdkConfig.features.bots)return this.botService.start()}).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - botService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Bot service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - conferenceService"),sdkConfig_1.sdkConfig.features.conference)return conferenceService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - conferenceService"),this.rainbowLogger.sdk(this.logService+"[signin] :: Conference service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - webrtcP2PRecordingService"),this.webrtcP2PRecordingService.start())).then(()=>{if(this.rainbowLogger.sdk("RainbowSDK Performance - webrtcP2PRecordingService"),this.rainbowLogger.sdk(this.logService+"[signin] :: webrtc P2P Recording service ready!"),this.rainbowLogger.sdk("RainbowSDK Performance - channelService"),sdkConfig_1.sdkConfig.features.channels)return this.channelService.start()}).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - Channel service"),this.rainbowLogger.sdk(this.logService+"[signin] :: Channel service ready!"),this.rainbowLogger.sdk(this.logService+"[signin] :: Services Successfully loaded!"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONSTARTED,result),this.rainbowLogger.sdk("Auth"),this.connecting=!1,resolve(result))).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - callLogService"),this.callLogService.start())).then(()=>(this.rainbowLogger.sdk("RainbowSDK Performance - personalRoutinesService"),this.personalRoutinesService.start(!0))).catch(()=>(this.rainbowLogger.sdk(this.logService+"[signin] :: Error during signin"),result.code=sdkConstant_1.SDK.ERRORXMPP,result.label="errorXMPP",result.account=null,this.connecting=!1,reject(result)))}).catch(()=>(this.rainbowLogger.sdk(this.logService+"[signin] :: Error during signin"),result.code=sdkConstant_1.SDK.ERRORUNAUTHORIZED,result.label="errorUnauthorized",this.connecting=!1,reject(result)))})}async reconnectServices(){const conferenceService=_conferenceService.get(this),configService=_configService.get(this);try{return configService.setVideoQuality(),sdkConfig_1.sdkConfig.features.conversationService&&this.conversationService.reconnect(),sdkConfig_1.sdkConfig.features.telephony&&(this.telephonyService.reconnect(),this.telephonyKeysService.reconnect(),this.ccdAgentService.reconnect(),this.personalRoutinesService.reconnect()),sdkConfig_1.sdkConfig.features.roomService&&this.roomService.reconnect(),this.groupService.reconnect(),this.contactService.reconnect(),this.invitationService.reconnect(),this.webrtcP2PService.reconnect(),this.webrtcGlobalEventHandlerService.reconnect(),sdkConfig_1.sdkConfig.features.conference&&conferenceService.reconnect(),this.fileServerService.reconnect(),sdkConfig_1.sdkConfig.features.channels&&this.channelService.reconnect(),this.profileService.reconnect(),this.voiceMessageService.reconnect(),await this.fileStorageService.reinit(!1),sdkConfig_1.sdkConfig.features.conversationService&&await this.conversationService.reinit(),sdkConfig_1.sdkConfig.features.favoriteService&&this.favoriteService.connect(),sdkConfig_1.sdkConfig.features.calendarService&&this.calendarService.reconnect(),void await this.contactService.resendInitialPresenceOnReconnect()}catch(error){this.rainbowLogger.error("[launcherService] reconnectServices failure "+error.message)}}}ConnectionService.hostUsed="",ConnectionService.RAINBOW_OFFICIAL_HOST="openrainbow.com",ConnectionService.RAINBOW_BETA_HOST="openrainbow.net",ConnectionService.RAINBOW_DEV_HOST="openrainbow.org",ConnectionService.RAINBOW_SANDBOX_HOST="sandbox.openrainbow.com",ConnectionService.RAINBOW_CPAASPREPROD_HOST="cpaaspreprod.openrainbow.net",ConnectionService.RAINBOW_CHINA_HOST="myopenrainbow.com.cn",ConnectionService.RAINBOW_CHINASANDBOX_HOST="sandbox.myopenrainbow.com.cn",exports.ConnectionService=ConnectionService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_service_1=__webpack_require__(6),sdkConfig_1=__webpack_require__(40),webrtcConfigAndUtils_1=__webpack_require__(44),main_service_1=__webpack_require__(15),rainbow_sdk_1=__webpack_require__(492);class ConfigService{constructor(){this.contactService=contact_service_1.ContactService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.loggerService=rainbow_sdk_1.LoggerService.getInstance()}setSimulcast(value){return this.webrtcConfigAndUtils.webrtcConfig.simulcast=value,value}setVideoQuality(value){return value||(value=sdkConfig_1.sdkConfig.videoQuality),"low"===value?(sdkConfig_1.sdkConfig.videoQuality="low",this.webrtcConfigAndUtils.videoQualityConfiguration={video:{fixedFrameRate:15,fixedVideoWidth:320,fixedVideoHeight:180},sharing:{fixedFrameRate:5,fixedVideoWidth:1280,fixedVideoHeight:720}}):"middle"===value?(sdkConfig_1.sdkConfig.videoQuality="middle",this.webrtcConfigAndUtils.videoQualityConfiguration={video:{fixedFrameRate:20,fixedVideoWidth:640,fixedVideoHeight:360},sharing:{fixedFrameRate:5,fixedVideoWidth:1280,fixedVideoHeight:720}}):"high"===value&&(sdkConfig_1.sdkConfig.videoQuality="high",this.webrtcConfigAndUtils.videoQualityConfiguration={video:{fixedFrameRate:25,fixedVideoWidth:1280,fixedVideoHeight:720},sharing:{fixedFrameRate:5,fixedVideoWidth:1920,fixedVideoHeight:1080}}),value}setVerboseLog(value){return sdkConfig_1.sdkConfig.verboseLog=value,this.loggerService.setVerboseLog(value),sdkConfig_1.sdkConfig.verboseLog}useNewModels(value){return sdkConfig_1.sdkConfig.newModels=value,sdkConfig_1.sdkConfig.newModels}setDisplayOrder(value){if("FL"!==value&&"LF"!==value)throw new Error("Value should be set to either 'FL' or 'LF'");return sdkConfig_1.sdkConfig.displayOrder=value,this.contactService.setDisplayOrder(value),sdkConfig_1.sdkConfig.displayOrder}setCustomLogger(logger){sdkConfig_1.sdkConfig.customLogger=logger}setAutoAway(value){sdkConfig_1.sdkConfig.autoAway=value,this.mainService.configure(null,sdkConfig_1.sdkConfig)}setAutoAwayDelay(value){if(value<0)throw new Error("Value should be higher than 0");value>0&&!sdkConfig_1.sdkConfig.autoAway?(sdkConfig_1.sdkConfig.autoAway=!0,sdkConfig_1.sdkConfig.autoAwayDelay=value):value&&0!==value?sdkConfig_1.sdkConfig.autoAwayDelay=value:(sdkConfig_1.sdkConfig.autoAway=!1,sdkConfig_1.sdkConfig.autoAwayDelay=0),this.mainService.configure(null,sdkConfig_1.sdkConfig)}getCurrentConfig(){return sdkConfig_1.sdkConfig}}ConfigService.logService="ConfigService | ",exports.ConfigService=ConfigService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),contact_sdk_1=__webpack_require__(152),sdkConstant_1=__webpack_require__(39),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class PresenceService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_PRESENCE_ONLINE="online",this.RAINBOW_PRESENCE_AWAY="away",this.RAINBOW_PRESENCE_DONOTDISTURB="dnd",this.RAINBOW_PRESENCE_OFFLINE="xa",this.RAINBOW_PRESENCE_BUSY="busy",this.RAINBOW_PRESENCE_UNKNOW="unknow",this.RAINBOW_ONCONTACTPRESENCECHANGED="rainbowcontactpresencechanged",this.RAINBOW_ONPRESENCECHANGED="rainbowpresencechanged",this.RAINBOW_ONCONTACTRICHPRESENCECHANGED="rainbowcontactrichpresencechanged",this.RAINBOW_ONRICHPRESENCECHANGED="rainbowrichpresencechanged",this.RAINBOW_ONMYCONTACTPRESENCECHANGED="rainbowonmycontactpresencechanged",_$rootScope.set(this,$rootScope),this.xmppService.subscribeToContactEvents(event=>{"ON_CONTACT_PRESENCE_EVENT"===event.name&&this.onPresenceChangedEvent(event.name,event.data)}),$rootScope.$on("$destroy",$rootScope.$on("ON_UPDATE_CONTACT_RICH_STATUS_EVENT",(event,contact)=>this.onRichPresenceChangedEvent(event,contact))),$rootScope.$on("$destroy",$rootScope.$on("ON_UPDATE_MYCONTACT_EVENT",(event,contact)=>this.onMyContactPresenceChangedEvent(event,contact)))}static get $inject(){return["$rootScope"]}setPresenceTo(strPresenceState){if(strPresenceState!==this.RAINBOW_PRESENCE_DONOTDISTURB&&strPresenceState!==this.RAINBOW_PRESENCE_AWAY&&strPresenceState!==this.RAINBOW_PRESENCE_OFFLINE&&strPresenceState!==this.RAINBOW_PRESENCE_ONLINE)throw new Error("Parameter 'strPresenceState' should be 'dnd', 'away', 'xa' (invisible) or 'online'");return this.rainbowLogger.sdk(PresenceService.logService+"[setPresenceTo] :: Set presence to "+strPresenceState),this.contactService.changeMyPresence(strPresenceState),{code:sdkConstant_1.SDK.OK,label:"OK"}}onPresenceChangedEvent(__event,json){const message=json.message||"''";json.jid===this.xmppService.fullJid?(this.rainbowLogger.sdk(PresenceService.logService+"[onPresenceChangedEvent] :: Presence changed for me ("+json.jid+") to  "+json.status+" | "+message),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONPRESENCECHANGED,json)):(this.rainbowLogger.sdk(PresenceService.logService+"[onPresenceChangedEvent] :: Presence changed for contact ("+json.jid+") to  "+json.status+" | "+message),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTPRESENCECHANGED,json))}onRichPresenceChangedEvent(__event,contact){const message=contact.message||"''",telStatus=contact.telStatus||"''";if(contact=new contact_sdk_1.ContactSDK(contact),this.xmppService.fullJid.includes(contact.jid)){this.rainbowLogger.sdk(PresenceService.logService+"[onPresenceChangedEvent] :: Rich Presence changed for myself to status "+contact.status+", message "+message+" and telStatus "+telStatus);const sdkEvent=new CustomEvent(this.RAINBOW_ONRICHPRESENCECHANGED,{detail:contact});document.dispatchEvent(sdkEvent)}else{this.rainbowLogger.sdk(PresenceService.logService+"[onPresenceChangedEvent] :: Rich Presence changed for contact ("+contact.jid+") to status "+contact.status+", message "+message+" and telStatus "+telStatus);const sdkEvent=new CustomEvent(this.RAINBOW_ONCONTACTRICHPRESENCECHANGED,{detail:contact});document.dispatchEvent(sdkEvent)}}onMyContactPresenceChangedEvent(__event,contact){const message=contact.message?contact.message:"",json={status:contact.status,message:message};this.rainbowLogger.sdk(PresenceService.logService+"[onPresenceChangedEvent] :: Presence changed for me to  status: "+json.status+" and message "+message),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONMYCONTACTPRESENCECHANGED,json)}}PresenceService.logService="PresenceService | ",exports.PresenceService=PresenceService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),contact_service_1=__webpack_require__(6),profile_service_1=__webpack_require__(13),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap,_adminUserService=new WeakMap;class UserProfileService{constructor($rootScope,adminUserService){this.authService=auth_service_1.AuthService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),_$rootScope.set(this,$rootScope),_adminUserService.set(this,adminUserService)}static get $inject(){return["$rootScope","adminUserService"]}getProfile(){return this.authService.loggedInUser}getProfileOffer(){return this.profileService.getMyProfileName()}getOptions(){const profiles=this.profileService.getMyProfiles(),options=[];return profiles.map(profile=>{profile.isExclusive||profile.isDefault||options.find(option=>option===profile.profileName)||options.push(profile.profileName)}),options}async updateUserInformations(firstName="",lastName="",title="",nickName="",jobTitle="",country="",workEmail="",personalEmail=""){const param={};if(firstName&&(param.firstName=firstName),lastName&&(param.lastName=lastName),title&&(param.title=title),nickName&&(param.nickName=nickName),jobTitle&&(param.jobTitle=jobTitle),country&&(param.country=country),personalEmail||workEmail){const userData=this.authService.loggedInUser;let emailExists=!1;if(personalEmail)if(userData.emails.length){for(let i=0;i<userData.emails.length;i++)"home"===userData.emails[i].type&&(userData.emails[i].email=personalEmail,emailExists=!0);emailExists||userData.emails.push({email:personalEmail,type:"home"})}else userData.emails=[{email:personalEmail,type:"home"}];if(workEmail)if(emailExists=!1,userData.emails.length){for(let i=0;i<userData.emails.length;i++)"work"===userData.emails[i].type&&(userData.emails[i].email=workEmail,emailExists=!0);emailExists||userData.emails.push({email:workEmail,type:"work"})}else userData.emails=[{email:workEmail,type:"work"}];param.emails=userData.emails}return await this.contactService.updateUserContact(param)}async updateFirstName(strFirstname){if(!strFirstname||"string"!=typeof strFirstname||strFirstname.length<1)throw new Error("Parameter 'strFirstname' is missing, empty or null");const param={firstName:strFirstname},userData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateFirstName] :: First name updated"),userData.data}async updateLastName(strLastName){if(!strLastName||"string"!=typeof strLastName||strLastName.length<1)throw new Error("Parameter 'strFirstname' is missing, empty or null");const param={lastName:strLastName},userData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateFirstName] :: First name updated"),userData.data}async updatePhoneNumber(type,deviceType,strPhoneNumber,country){if(!type||"string"!=typeof type||["home","work","other"].indexOf(type)<0)throw new Error("Parameter 'type' is missing or not matching one of the following types: 'home', 'work', 'other'");if(!deviceType||"string"!=typeof deviceType||["landline","mobile","fax","other"].indexOf(deviceType)<0)throw new Error("Parameter 'deviceType' is missing or not matching one of the following types 'landline', 'mobile', 'fax', 'other'");if("string"!=typeof strPhoneNumber)throw new Error("Parameter 'strPhoneNumber' must be of type 'string' ");const phoneNumber={type:type,deviceType:deviceType,number:strPhoneNumber};country&&"string"==typeof country&&(phoneNumber.country=country);const userData=this.authService.loggedInUser;if(userData.phoneNumbers.length){let existingNumberIndex=-1;existingNumberIndex=userData.phoneNumbers.findIndex(number=>number.type===type&&number.deviceType===deviceType),-1===existingNumberIndex?userData.phoneNumbers.push(phoneNumber):userData.phoneNumbers[existingNumberIndex]=phoneNumber}else userData.phoneNumbers.push(phoneNumber);const res=await this.profileService.setUserData(userData);return this.rainbowLogger.sdk(UserProfileService.logService+"[updatePhoneNumber] :: Phone number updated"),res.data}async deletePhoneNumber(type,deviceType){if(!type||"string"!=typeof type||["home","work","other"].indexOf(type)<0)throw new Error("Parameter 'type' is missing or not matching one of the following types: 'home', 'work', 'other'");if(!deviceType||"string"!=typeof deviceType||["landline","mobile","fax","other"].indexOf(deviceType)<0)throw new Error("Parameter 'deviceType' is missing or not matching one of the following types 'landline', 'mobile', 'fax', 'other'");const userData=this.authService.loggedInUser;let res;if(!userData.phoneNumbers.length)throw new Error("No phone numbers associated with the user profile");{const newPhoneNumbers=userData.phoneNumbers.filter(number=>!(number.type===type&&number.deviceType===deviceType));userData.phoneNumbers=newPhoneNumbers,res=await this.profileService.setUserData(userData),this.rainbowLogger.sdk(UserProfileService.logService+"[deletePhoneNumber] :: Phone number deleted")}return res.data}async updatePhotoFromUrl(imgUrl){if(!imgUrl||"string"!=typeof imgUrl||imgUrl.length<1)throw new Error("Parameter 'imgUrl' is missing, empty or null");await this.contactService.pushAvatarImage(imgUrl),this.rainbowLogger.sdk(UserProfileService.logService+"[updatePhotoFromUrl] :: Photo updated")}async updateWorkEmail(strEmail){if(!strEmail||"string"!=typeof strEmail||strEmail.length<1)throw new Error("Parameter 'strEmail' is missing, empty or null");const userData=this.authService.loggedInUser;let emailExists=!1;if(userData.emails.length){for(let i=0;i<userData.emails.length;i++)"work"===userData.emails[i].type&&(userData.emails[i].email=strEmail,emailExists=!0);emailExists||userData.emails.push({email:strEmail,type:"work"})}else userData.emails=[{email:strEmail,type:"work"}];const param={emails:userData.emails},res=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateWorkEmail] :: work email updated"),res.data}async updatePersonalEmail(strEmail){if(!strEmail||"string"!=typeof strEmail||strEmail.length<1)throw new Error("Parameter 'strEmail' is missing, empty or null");const userData=this.authService.loggedInUser;let emailExists=!1;if(userData.emails.length){for(let i=0;i<userData.emails.length;i++)"home"===userData.emails[i].type&&(userData.emails[i].email=strEmail,emailExists=!0);emailExists||userData.emails.push({email:strEmail,type:"home"})}else userData.emails=[{email:strEmail,type:"home"}];const param={emails:userData.emails},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updatePersonalEmail] :: work email updated"),updatedUserData.data}async deleteWorkEmail(){const param={emails:this.authService.loggedInUser.emails.filter(element=>"work"!==element.type)},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[deleteWorkEmails] :: work emails deleted"),updatedUserData.data}async deletePersonalEmail(){const param={emails:this.authService.loggedInUser.emails.filter(element=>"home"!==element.type)},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[deletePersonalEmails] :: personal emails deleted"),updatedUserData.data}async updateCountry(countryStr){const param={country:countryStr},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateCountry] :: Country updated"),updatedUserData.data}async updateLanguage(languageStr){const param={language:languageStr},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateLanguage] :: Language updated"),updatedUserData.data}async updateTitle(titleStr){const param={title:titleStr},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateTitle] :: title updated"),updatedUserData.data}async updateNickName(nickNameStr){const param={nickName:nickNameStr},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateNickName] :: nickname updated"),updatedUserData.data}async updateJobTitle(jobTitleStr){const param={jobTitle:jobTitleStr},updatedUserData=await this.profileService.setUserData(param);return this.rainbowLogger.sdk(UserProfileService.logService+"[updateJobTitle] :: job title updated"),updatedUserData.data}}UserProfileService.logService="UserProfileService | ",exports.UserProfileService=UserProfileService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sdkConstant_1=__webpack_require__(39),EventsService_1=__webpack_require__(28),contact_sdk_1=__webpack_require__(152),invitation_sdk_1=__webpack_require__(503),sdkConfig_1=__webpack_require__(40),contact_service_1=__webpack_require__(6),invitation_service_1=__webpack_require__(317),office365ad_service_1=__webpack_require__(316),profile_service_1=__webpack_require__(13),company_directory_service_1=__webpack_require__(125),calendar_service_1=__webpack_require__(324),directory_service_1=__webpack_require__(151),phonebook_service_1=__webpack_require__(153),_$rootScope=new WeakMap;class ContactsService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.invitationService=invitation_service_1.InvitationService.getInstance(),this.office365AdService=office365ad_service_1.Office365AdService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.directoryService=directory_service_1.DirectoryService.getInstance(),this.companyDirectoryService=company_directory_service_1.CompanyDirectoryService.getInstance(),this.calendarService=calendar_service_1.CalendarService.getInstance(),this.phonebookService=phonebook_service_1.PhonebookService.getInstance(),this.RAINBOW_ONCONTACTINFORMATIONCHANGED="rainbowcontactinformationchanged",this.RAINBOW_ONINFORMATIONCHANGED="rainbowinformationchanged",this.RAINBOW_ONCONTACTINVITATIONNUMBERCHANGED="rainbowsubscriptionnumberchanged",this.RAINBOW_ONCONTACTINVITATIONRECEIVED="rainbowinvitationreceived",this.RAINBOW_ONCONTACTCALENDARINFORMATIONCHANGE="rainbowoncontactcalendarinformationchange",this.RAINBOW_ONCONTACTCALENDARSTATECHANGE="rainbowoncontactcalendarstatechange",this.RAINBOW_ONMYCONTACTSETTINGSCHANGED="rainbowonmycontactsettingschanged",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_CONTACT_UPDATED_EVENT",(event,contact)=>this.onContactInformationUpdated(event,contact))),$rootScope.$on("$destroy",$rootScope.$on("ON_USER_CONTACT_UPDATED_EVENT",(event,contact)=>this.onInformationUpdated(event,contact))),$rootScope.$on("$destroy",$rootScope.$on("ON_INVITATIONS_NUMBER_UPDATED",()=>this.onInvitationNumberChanged())),$rootScope.$on("$destroy",$rootScope.$on("ON_INVITATION_CHANGED",(event,invitation)=>this.onInvitationReceived(event,invitation))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONTACT_CALENDAR_STATUS_CHANGE",(event,contact)=>this.onContactCalendarPresenceChange(event,contact))),$rootScope.$on("$destroy",$rootScope.$on("ON_MY_CONTACT_SETTINGS_CHANGE",()=>this.onMyContactSettingsChange())),this.calendarService.eventSubject.subscribe(event=>{"ON_CALENDAR_STATUS_CHANGE"===event.action&&EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTCALENDARSTATECHANGE,{status:this.calendarService.serviceActivated})})}static get $inject(){return["$rootScope"]}onContactInformationUpdated(__event,contact){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTINFORMATIONCHANGED,new contact_sdk_1.ContactSDK(contact)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTINFORMATIONCHANGED,contact)}onInformationUpdated(__event,contact){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONINFORMATIONCHANGED,new contact_sdk_1.ContactSDK(contact)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONINFORMATIONCHANGED,contact)}onInvitationNumberChanged(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTINVITATIONNUMBERCHANGED,null)}onInvitationReceived(__event,invitation){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTINVITATIONRECEIVED,new invitation_sdk_1.InvitationSDK(invitation)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTINVITATIONRECEIVED,invitation)}onContactCalendarPresenceChange(__event,contact){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONTACTCALENDARINFORMATIONCHANGE,new contact_sdk_1.ContactSDK(contact))}onMyContactSettingsChange(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONMYCONTACTSETTINGSCHANGED)}getContactByJID(strJID){if(!strJID)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'strJID' is missing or empty"};const contact=this.contactService.getContactByJid(strJID);return sdkConfig_1.sdkConfig.newModels&&contact?new contact_sdk_1.ContactSDK(contact):contact}async getContactById(contactId){if(!contactId)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'strId' is missing or empty"};const contact=await this.contactService.getContactByDBId(contactId);return sdkConfig_1.sdkConfig.newModels?new contact_sdk_1.ContactSDK(contact):contact}async getNetworkContacts(){const contacts=this.contactService.getContacts().filter(contact=>contact.id!==this.contactService.userContact.id&&!contact.isBot&&contact.roster);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}getAll(){const contacts=this.contactService.getContacts().filter(contact=>contact.id!==this.contactService.userContact.id&&!contact.isBot);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}getConnectedUser(){const contact=this.contactService.userContact;return sdkConfig_1.sdkConfig.newModels&&contact?new contact_sdk_1.ContactSDK(contact):contact||null}getConnectedUserPhone(){return this.contactService.userContact?0===this.contactService.userContact.pbxId.length?null:{phoneNumber:this.contactService.userContact.phonePbx,pbxId:this.contactService.userContact.pbxId}:null}async searchByName(strName,limit,addRosters=!1,companyId="",excludeCompanyId=""){if(!strName)throw new Error("Parameter 'strName' is missing or empty");limit||(limit=20);const contacts=await this.directoryService.search(strName,addRosters,Math.min(limit,1e3),companyId,excludeCompanyId);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}async searchPhonebook(strPattern){const featureEnabled=this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK);if(!strPattern)throw new Error("Parameter 'strPattern' is missing or empty");if(!featureEnabled)throw new Error("The feature is not enabled for connected user");const contacts=await this.phonebookService.search(strPattern);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}async searchOffice365(strPattern){if(!strPattern)throw new Error("Parameter 'strPattern' is missing or empty");const contacts=await this.office365AdService.search(strPattern);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}async searchCompanyDirectory(strPattern,companyId){if(!strPattern)throw new Error("Parameter 'strPattern' is missing or empty");if(!companyId)throw new Error("Parameter 'companyId' is missing or empty");const contacts=await this.companyDirectoryService.search(strPattern,companyId);return sdkConfig_1.sdkConfig.newModels?contacts.map(contact=>new contact_sdk_1.ContactSDK(contact)):contacts}async searchByLogin(strLogin){if(!strLogin)throw new Error("Parameter 'strLogin' is missing or empty");const contact=await this.directoryService.searchUserByLogin(strLogin);return contact?sdkConfig_1.sdkConfig.newModels?new contact_sdk_1.ContactSDK(contact):contact:null}async searchByJid(strJid){if(!strJid)throw new Error("Parameter 'strJid' is missing or empty");const contact=await this.directoryService.searchUserByJid(strJid);return sdkConfig_1.sdkConfig.newModels?new contact_sdk_1.ContactSDK(contact):contact}async searchById(strId){if(!strId)throw new Error("Parameter 'strId' is missing or empty");const contact=await this.contactService.getContactByDBId(strId,!0);return contact?sdkConfig_1.sdkConfig.newModels?new contact_sdk_1.ContactSDK(contact):contact:null}async acceptInvitation(invitationId){if(!invitationId)return new Error("Parameter 'invitationId' is missing or null");const invitation=this.invitationService.getInvitation(invitationId);return await this.invitationService.acceptInvitation(invitation),{code:sdkConstant_1.SDK.OK,label:"OK"}}async declineInvitation(invitationId){if(!invitationId)throw new Error("Parameter 'invitationId' is missing or null");const invitation=this.invitationService.getInvitation(invitationId);return await this.invitationService.declineInvitation(invitation),{code:sdkConstant_1.SDK.OK,label:"OK"}}async addToNetwork(contactId){if(!contactId)throw new Error("Parameter 'contactId' is missing or null");const contact=await this.contactService.getContactByDBId(contactId);return await this.invitationService.joinContactInvitation(contact)}async sendInvitationByEmail(email,customMessage){if(!email)throw new Error("Parameter 'email' is missing or null");return await this.invitationService.sendInvitationByEmail(email,customMessage)}async removeFromNetwork(contactId){if(!contactId)throw new Error("Parameter 'contactId' is missing or null");const contact=await this.contactService.getContactByDBId(contactId);return await this.contactService.removeContact(contact),{code:sdkConstant_1.SDK.OK,label:"OK"}}getInvitationById(invitationId){if(!invitationId)throw new Error("Parameter 'invitationId' is missing or null");return this.invitationService.getInvitation(invitationId)}getInvitationsReceived(){const invitationsReceived=this.invitationService.getReceivedInvitations();return sdkConfig_1.sdkConfig.newModels&&invitationsReceived.length?invitationsReceived.map(invitation=>new invitation_sdk_1.InvitationSDK(invitation)):invitationsReceived}async cancelInvitation(invitationId){if(!invitationId)throw new Error("Parameter 'invitationId' is missing or null");const invitation=this.invitationService.getInvitation(invitationId);await this.invitationService.cancelOneSendInvitation(invitation)}getInvitationsSent(){const invitationsSent=this.invitationService.getSentInvitations();return sdkConfig_1.sdkConfig.newModels&&invitationsSent.length?invitationsSent.map(invitation=>new invitation_sdk_1.InvitationSDK(invitation)):invitationsSent}async updateUserCustomData(customData){if(!customData)throw new Error("Parameter 'customData' is missing or null");return await this.contactService.updateUserContact({customData:customData}),this.getConnectedUser()}async updateUserAutoDndCalendarSetting(activate){return await this.contactService.setUserSettings({applyCalendarPresence:activate}),activate}getUserAutoDndCalendarSetting(){return"true"===this.contactService.getUserSettingFromSettingsService("applyCalendarPresence")}async updateUserMSTeamsPresenceSetting(activate){return await this.contactService.setUserSettings({applyMsTeamsPresence:activate}),activate}getUserMSTeamsPresenceSetting(){return"true"===this.contactService.getUserSettingFromSettingsService("applyMsTeamsPresence")}isCalendarSharingActivated(){return this.calendarService.serviceActivated}}ContactsService.logService="ContactService | ",exports.ContactsService=ContactsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),contact_service_1=__webpack_require__(6),sdkConstant_1=__webpack_require__(39),telephonyAbstract_service_1=__webpack_require__(330),webrtcP2P_service_1=__webpack_require__(35),telephony_service_1=__webpack_require__(57),ccdAgent_service_1=__webpack_require__(126),webrtcGateway_service_1=__webpack_require__(71),voiceMessage_service_1=__webpack_require__(123),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class PbxService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.telephonyAbstractService=telephonyAbstract_service_1.TelephonyAbstractService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.telephonyService=telephony_service_1.TelephonyService.getInstance(),this.ccdAgentService=ccdAgent_service_1.CCDAgentService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.voiceMessageService=voiceMessage_service_1.VoiceMessageService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONTELEPHONYCALLSTATECHANGED="rainbowontelephonycallstatechanged",this.RAINBOW_ONVOIPCALLSTATECHANGED="rainbowonvoipcallstatechanged",this.RAINBOW_ONTELEPHONYSTARTED="rainbowontelephonystarted",this.RAINBOW_ONTELEPHONYSTOPPED="rainbowontelephonystopped",this.RAINBOW_ONTELEPHONYFORWARDSTATECHANGED="rainbowontelephonyforwardstatechanged",this.RAINBOW_ONCALLNOMADICEVENT="rainbowoncallnomadicevent",this.RAINBOW_ONVOIPSTARTED="rainbowonvoipstarted",this.RAINBOW_ONVOIPSTOPPED="rainbowonvoipstopped",this.RAINBOW_ONVOICEMESSAGEUPDATED="rainbowonvoicemessageupdated",this.RAINBOW_TELEPHONYDIALING="dialing",this.RAINBOW_TELEPHONYRINGINGOUTGOING="ringingOutgoing",this.RAINBOW_TELEPHONYINCOMING="incomingCall",this.RAINBOW_TELEPHONYACTIVE="active",this.RAINBOW_TELEPHONYRELEASING="releasing",this.RAINBOW_TELEPHONYUNKNOW="Unknown",this.RAINBOW_TELEPHONYMUTE="rainbowtelephonymute",this.RAINBOW_ONTELEPHONYMODEUPDATED="rainbowontelephonymodeupdated",this.RAINBOW_ONFORWARDMODEUPDATED="rainbow_onforwardmodeupdated",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_TELEPHONY_STATUS_CHANGED_EVENT",(event,state)=>this.onTelephonyStateChanged(event,state))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_NOMADIC_EVENT",(event,nomadicObject)=>this.onCallNomadicEvent(event,nomadicObject))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_UPDATED_EVENT",(event,call)=>this.onTelephonyCallChanged(event,call))),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_FORWARDED_EVENT",(event,forwardStatus)=>this.onCallForwardChanged(event,forwardStatus))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTCGATEWAY_STATE_CHG",(event,state)=>this.onVoIPStateChanged(event,state))),$rootScope.$on("$destroy",$rootScope.$on("ON_VOICE_MESSAGE_UPDATE_EVENT",(event,counters)=>this.onVoiceMessageUpdated(event,counters))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_CALL_MUTED_UPDATED_EVENT",(event,counters)=>this.onCallMuteEvent(event,counters))),this.telephonyAbstractService.subscribe(event=>{"TELEPHONY_MODE_UPDATED"===event.name&&this.onTelephonyModeUpdated(event.data)}),this.telephonyAbstractService.subscribe(event=>{"FORWARD_MODE_UPDATED"===event.name&&this.onForwardModeUpdated(event.data)})}static get $inject(){return["$rootScope"]}onTelephonyStateChanged(__event,state){this.rainbowLogger.sdk(PbxService.logService+"[onTelephonyStateChanged] :: PBX state changed to "+state),"started"===state?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONTELEPHONYSTARTED,null):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONTELEPHONYSTOPPED,null)}onCallNomadicEvent(__event,nomadicObject){this.rainbowLogger.sdk(PbxService.logService+"[onCallNomadicEvent] :: Nomadic event received"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCALLNOMADICEVENT,nomadicObject)}onTelephonyCallChanged(__event,call){const isMediaPillarCallSituation=this.webrtcGatewayService.isMediaPillarCallSituation(call);"Phone"!==call.type.value||isMediaPillarCallSituation?isMediaPillarCallSituation&&(this.rainbowLogger.sdk(PbxService.logService+"[onTelephonyCallChanged] :: VoIP state changed to "+call),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONVOIPCALLSTATECHANGED,call)):(this.rainbowLogger.sdk(PbxService.logService+"[onTelephonyCallChanged] :: Telephony state changed to "+call),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONTELEPHONYCALLSTATECHANGED,call))}onCallForwardChanged(__event,forwardStatus){this.rainbowLogger.sdk(PbxService.logService+"[onCallForwardChanged] :: Forward state changed to "+forwardStatus),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONTELEPHONYFORWARDSTATECHANGED,forwardStatus)}onVoIPStateChanged(__event,state){this.rainbowLogger.sdk(PbxService.logService+"[onVoIPStateChanged] :: VoIP state changed to "+state?"true":"false"),state?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONVOIPSTARTED,null):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONVOIPSTOPPED,null)}onVoiceMessageUpdated(__event,counters){this.rainbowLogger.sdk(PbxService.logService+"[onVoiceMessageUpdated] :: New Voice Message event received"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONVOICEMESSAGEUPDATED,counters)}onCallMuteEvent(__event,data){this.rainbowLogger.sdk(PbxService.logService+"[onCallMuteEvent] :: New Mute Event received"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_TELEPHONYMUTE,data)}onTelephonyModeUpdated(telephonyMode){this.rainbowLogger.sdk(PbxService.logService+"[onTelephonyModeUpdated] :: New Telephony Mode event received"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONTELEPHONYMODEUPDATED,telephonyMode)}onForwardModeUpdated(forwardMode){this.rainbowLogger.sdk(PbxService.logService+"[onForwardModeUpdated] :: New Forward Mode event received"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONFORWARDMODEUPDATED,forwardMode)}isTelephonyAvailable(){return this.telephonyService.started}isVoiceMailConfigured(){return Boolean(this.telephonyService.voiceMailFeatureEnabled&&this.telephonyService.voicemailNumber)}getAgentVersion(){return this.telephonyService.agentStatus.agentVersion||"unknown"}getXMPPAgentStatus(){return this.telephonyService.agentStatus.xmppAgent||"unknown"}getPhoneAPIStatus(){return this.telephonyService.agentStatus.phoneApi||"unknown"}async makeCall1PCC(strPhoneNumber,contactId){if(!strPhoneNumber)throw new Error("Parameter 'strPhoneNumber' is missing or empty");const contact=await this.contactService.getContactByDBId(contactId);return this.webrtcGatewayService.mediaPillarMakeCall1PCC(strPhoneNumber,contact)}async makeCall(contactId,strPhoneNumber,callSubject,correlatorData,correlatorDataHex){if(!strPhoneNumber)throw new Error("Parameter 'strPhoneNumber' is missing or empty");if(contactId){const contact=await this.contactService.getContactByDBId(contactId);await this.telephonyService.makeCall(contact,strPhoneNumber,callSubject,correlatorData,correlatorDataHex)}else await this.telephonyService.makeCallByPhoneNumber(strPhoneNumber,callSubject,correlatorData,correlatorDataHex);return{code:sdkConstant_1.SDK.OK,label:"OK"}}async callByNumber(strPhoneNumber){if(!strPhoneNumber)throw new Error("Parameter 'strPhoneNumber' is missing or empty");return await this.telephonyService.makeCallByPhoneNumber(strPhoneNumber),{code:sdkConstant_1.SDK.OK,label:"OK"}}async callWithMessage(contactId,strPhoneNumber,callSubject,correlatorData){if(!strPhoneNumber)throw new Error("Parameter 'phoneNumber' is missing or empty");if(!callSubject)throw new Error("Parameter 'callSubject' is missing or empty");if(contactId){const contact=await this.contactService.getContactByDBId(contactId);await this.telephonyService.makeCall(contact,strPhoneNumber,callSubject,correlatorData)}else await this.telephonyService.makeCallByPhoneNumber(strPhoneNumber,callSubject,correlatorData);return{code:sdkConstant_1.SDK.OK,label:"OK"}}async callWithSubject(contactId,phoneNumber,callSubject){if(!contactId)throw new Error("Parameter 'contact' is missing or empty");if(!phoneNumber)throw new Error("Parameter 'phoneNumber' is missing or empty");if(!callSubject)throw new Error("Parameter 'callSubject' is missing or empty");const contact=await this.contactService.getContactByDBId(contactId);return await this.telephonyService.makeCall(contact,phoneNumber,callSubject),{code:sdkConstant_1.SDK.OK,label:"OK"}}calls(){return this.telephonyService.calls}getActiveCall(){return this.telephonyService.getActiveCall()}async release(call){if(!call)throw new Error("Parameter 'call' is missing or null");return await this.telephonyService.releaseCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}async deflectToVM(call){if(!call)throw new Error("Parameter 'call' is missing or null");if(!call.connectionId)throw new Error("Property 'connectionId' of the object 'call' is missing or null");if("Phone"!==call.type.value)throw new Error("Call must be of type 'Phone' (see call.type.value)");return await this.telephonyService.deflectCallToVM(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}async forwardToDevice(strPhoneNumber,strForwardType="immediate"){if(!strPhoneNumber||"string"!=typeof strPhoneNumber||0===strPhoneNumber.length)throw new Error("Parameter 'strPhoneNumber' is missing or empty");return this.telephonyService.forwardToDevice(strPhoneNumber,strForwardType),{code:sdkConstant_1.SDK.OK,label:"OK"}}async forwardToVoicemail(strForwardType="immediate"){return await this.telephonyService.forwardToVoicemail(strForwardType),{code:sdkConstant_1.SDK.OK,label:"OK"}}async cancelForward(){return await this.telephonyService.cancelForward(),{code:sdkConstant_1.SDK.OK,label:"OK"}}async getForwardStatusFromServer(){await this.telephonyService.getForwardStatus().then(()=>({code:sdkConstant_1.SDK.OK,label:"OK"}))}getForwardStatus(){return this.telephonyService.getForwardObject()}async answer(call){if(!call)throw new Error("Parameter 'call' is missing or null");return call.mediaPillarCall?this.webrtcGatewayService.answerCall(call):await this.telephonyService.answerCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}async hold(call){if(!call)throw new Error("Parameter 'call' is missing or null");return await this.telephonyService.holdCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}async retrieve(call){if(!call)throw new Error("Parameter 'call' is missing or null");return await this.telephonyService.retrieveCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}async transferCall(activeCall,heldCall){if(!activeCall)throw new Error("Parameter 'activeCall' is missing or null");if(!heldCall)throw new Error("Parameter 'heldCall' is missing or null");return await this.telephonyService.transfertCall(activeCall,heldCall),{code:sdkConstant_1.SDK.OK,label:"OK"}}async conferenceCall(activeCall,heldCall){if(!activeCall)throw new Error("Parameter 'activeCall' is missing or null");if(!heldCall)throw new Error("Parameter 'heldCall' is missing or null");return await this.telephonyService.conferenceCall(activeCall,heldCall),{code:sdkConstant_1.SDK.OK,label:"OK"}}async fetchVoiceMailMessagesNumber(){return await this.voiceMessageService.getVoiceMessagesCounters()}muteCall(call,conversation){if(!call)throw new Error("Parameter 'call' is missing or null");this.webrtcGatewayService.muteAudio(call,!0,conversation)}unmuteCall(call,conversation){if(!call)throw new Error("Parameter 'call' is missing or null");this.webrtcGatewayService.muteAudio(call,!1,conversation)}getTelephonyMode(){return this.telephonyAbstractService.getTelephonyMode()}setTelephonyMode(telephonyMode){return this.telephonyAbstractService.setTelephonyMode(telephonyMode)}async nomadicLogin(phoneNumber,isUnchangeableNumber,notTakeIntoAccount){if(!phoneNumber)throw new Error("Parameter 'phoneNumber' is missing or null");await this.telephonyService.nomadicLogin(phoneNumber,isUnchangeableNumber,notTakeIntoAccount)}async nomadicLogout(){await this.telephonyService.nomadicLogout()}async getNomadicState(){this.isCloudPbxUser()?await this.telephonyService.getSipWiseRoutingInfo():await this.telephonyService.getNomadicStatus()}async setExternalNomadicNumber(phoneNumber){if(!phoneNumber)throw new Error("Parameter 'phoneNumber' is missing or null");if("string"!=typeof phoneNumber)throw new Error("Parameter 'phoneNumber' is not a string");await this.telephonyService.nomadicLogin(phoneNumber)}async setNomadicOfficePhone(ringOnlyOfficePhone=!0){if(this.isCloudPbxUser()){const sipDeviceId=this.telephonyService.telephonyServiceSipWise.getDeviceIdWithType("sip");if(!sipDeviceId)throw new Error("Error: no Cloud PBX office phone device found");await this.telephonyService.setSipWiseCurrentDevice(sipDeviceId)}else await this.telephonyService.nomadicLoginOnOfficePhone(),ringOnlyOfficePhone&&this.telephonyService.nomadicLogout()}async setNomadicVoIP(){if(this.telephonyService.isSipWiseRoot()){const webRtcDeviceId=this.telephonyService.telephonyServiceSipWise.getDeviceIdWithType("webrtc");await this.telephonyService.setSipWiseCurrentDevice(webRtcDeviceId)}else{const mediapillar=this.webrtcGatewayService.getMyMediaPillarRemoteExtension();await this.telephonyService.nomadicLogin(mediapillar)}}isDeskPhoneAvailable(){return!this.contactService.userContact.isVirtualTerm}isVoIPAvailable(){return this.webrtcGatewayService.isMediaPillarAvailable()}async logonCCD(endpointTel,agentId,password,groupId,routingDestination,routing){if(!endpointTel)throw new Error("Parameter 'endpointTel' is missing or empty");return await this.ccdAgentService.ccdAgentLogOn(endpointTel,agentId,password,groupId,routingDestination,routing)}async logoffCCD(endpointTel,agentId,password,groupId){if(!endpointTel)throw new Error("Parameter 'endpointTel' is missing or empty");return await this.ccdAgentService.ccdAgentLogOff(endpointTel,agentId,password,groupId)}async withdrawalCCD(agentId,groupId,status){return await this.ccdAgentService.ccdAgentWithdrawal(agentId,groupId,status)}async wrapupCCD(agentId,groupId,password,status){return this.ccdAgentService.ccdAgentWrapup(agentId,groupId,password,status)}subscribeToCCDEvents(handler){return this.ccdAgentService.subscribe(handler)}getCurrentCCDAgentStatus(){return this.ccdAgentService.getCurrentCCDAgentStatus()}async getCCDGroupStatus(groupId){if(!groupId)throw new Error("getCCDGroupStatus -- missing groupId parameter");return this.ccdAgentService.getCCDGroupStatus(groupId)}async sendDTMF(dialString,call){if(!dialString)throw new Error("Parameter 'dialString' is missing or empty");if(!call)throw new Error("Parameter 'call' is missing or empty");if("Video"===call.type.value)return this.webrtcP2PService.sendDTMF(dialString,call.mediaPillarCall.webrtcCallRef,!1);if("Phone"===call.type.value)return call.mediaPillarCall?this.webrtcP2PService.sendDTMF(dialString,call.mediaPillarCall.webrtcCallRef,!1):this.telephonyService.sendDtmf(call,dialString);if("Video"!==call.type.value||"Phone"!==call.type.value)throw new Error("Parameter 'call' must be of type 'Video' or 'Phone'");return!0}getPbxType(){return this.telephonyService.isSipWiseRoot()?"Cloud":this.telephonyService.isOxo?"OXO":this.telephonyService.isOxe?"OXE":this.telephonyService.isThirdParty?"ThirdParty":"None"}isOxoUser(){return!this.telephonyService.isSipWiseRoot()&&Boolean(this.telephonyService.isOxo)}isOxeUser(){return!this.telephonyService.isSipWiseRoot()&&Boolean(this.telephonyService.isOxe)}isCloudPbxUser(){return Boolean(this.telephonyService.isSipWiseRoot())}isThirdPartyPbxUser(){return!this.telephonyService.isSipWiseRoot()&&Boolean(this.telephonyService.isThirdParty)}getForwardMode(){return this.telephonyAbstractService.getForwardMode()}async setForwardMode(selectedMode,destination,callForwardType){return await this.telephonyAbstractService.setForwardMode(selectedMode,destination,callForwardType)}}PbxService.logService="telephonyService | ",exports.PbxService=PbxService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sdkConfig_1=__webpack_require__(40),EventsService_1=__webpack_require__(28),conversation_sdk_1=__webpack_require__(341),contact_service_1=__webpack_require__(6),room_service_1=__webpack_require__(25),conversation_service_1=__webpack_require__(63),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class ConversationsService{constructor($rootScope){this.RAINBOW_ONCONVERSATIONSMISSEDCOUNTERCHANGED="rainbowconversationsmissedcounterchanged",this.contactService=contact_service_1.ContactService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONCONVERSATIONSCHANGED="rainbowconversationschanged",this.RAINBOW_ONCONVERSATIONREMOVED="rainbowconversationremoved",this.RAINBOW_ONCONVERSATIONCHANGED="rainbowconversationchanged",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATIONS_UPDATED_EVENT",(event,conversation)=>this.onConversationsChanged(event,conversation))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_REMOVE_EVENT",(event,conversation)=>this.onConversationsRemoved(event,conversation))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_UPDATED_EVENT",(event,conversation)=>this.onConversationChanged(event,conversation))),this.conversationService.missedInfoCounters.subscribe(missedInfoCounters=>{this.onConversationsCounterChanged(missedInfoCounters)})}static get $inject(){return["$rootScope"]}onConversationsChanged(__event,conversation){conversation&&(sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONSCHANGED,new conversation_sdk_1.ConversationSDK(conversation)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONSCHANGED,conversation))}onConversationsRemoved(__event,conversation){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONREMOVED,new conversation_sdk_1.ConversationSDK(conversation)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONREMOVED,conversation)}onConversationChanged(__event,conversationId){const conversation=this.conversationService.getConversation(conversationId);sdkConfig_1.sdkConfig.newModels,EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONCHANGED,new conversation_sdk_1.ConversationSDK(conversation))}onConversationsCounterChanged(json){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCONVERSATIONSMISSEDCOUNTERCHANGED,json)}async getAllConversations(){const allConversations=this.conversationService.getConversations();return sdkConfig_1.sdkConfig.newModels?allConversations.map(conversation=>new conversation_sdk_1.ConversationSDK(conversation)):allConversations}getCallById(strCallId){if(!strCallId)throw new Error("Parameter 'strCallId' is missing or empty");const allConversations=this.conversationService.getConversations();let call=null;return allConversations.forEach((function(conversation){conversation.videoCall&&conversation.videoCall.id===strCallId?call=conversation.videoCall:conversation.audioCall&&conversation.audioCall.id===strCallId&&(call=conversation.audioCall)})),call}getConversationById(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or empty");const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Could not find a conversation with the following ID: "+conversationId);return sdkConfig_1.sdkConfig.newModels?new conversation_sdk_1.ConversationSDK(conversation):conversation}getConversationByIdDeprecated(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or empty");return this.conversationService.getConversation(conversationId)}async getConversationByBubbleId(bubbleId){try{if(!bubbleId)throw new Error("Parameter 'bubbleId' is missing or empty");const bubble=this.roomService.getRoomById(bubbleId),conversation=await this.conversationService.getOrCreateConversation(bubble.jid,"room");return sdkConfig_1.sdkConfig.newModels?new conversation_sdk_1.ConversationSDK(conversation):conversation}catch(err){return err}}async openConversationForContact(contact){if(!contact)throw new Error("Parameter 'contact' is missing or null");this.rainbowLogger.sdk(ConversationsService.logService+"[openConversationForContact] :: Trying to open a conversation for a contact");return await this.conversationService.getOrCreateConversation(contact.jid,"contact")}async getConversationByContactId(contactId){if(!contactId)throw new Error("Parameter 'contactId' is missing or null");this.rainbowLogger.sdk(ConversationsService.logService+"[openConversationForContact] :: Trying to get conversation by contactId");const contact=await this.contactService.getContactByDBId(contactId),conversation=await this.conversationService.getOrCreateConversation(contact.jid,"contact");return sdkConfig_1.sdkConfig.newModels?new conversation_sdk_1.ConversationSDK(conversation):conversation}async openConversationForBubble(bubble){if(!bubble)throw new Error("Prameter 'bubble' is missing or null");this.rainbowLogger.sdk(ConversationsService.logService+"[openConversationForBubble] :: Try to create or get a conversation for a bubble ");const conversation=await this.conversationService.getOrCreateConversation(bubble.jid,"room");return sdkConfig_1.sdkConfig.newModels?new conversation_sdk_1.ConversationSDK(conversation):conversation}async closeConversation(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=this.getConversationById(conversationId);await this.conversationService.closeConversation(conversation)}async closeConversationDeprecated(conversation){if(!conversation)throw new Error("Parametr 'conversation' is missing or null");await this.conversationService.closeConversation(conversation)}}ConversationsService.logService="ConversationsService | ",exports.ConversationsService=ConversationsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),message_1=__webpack_require__(67),sdkConstant_1=__webpack_require__(39),fileStorage_service_1=__webpack_require__(34),room_service_1=__webpack_require__(25),sdkConfig_1=__webpack_require__(40),conversation_sdk_1=__webpack_require__(341),message_sdk_1=__webpack_require__(342),conversation_service_1=__webpack_require__(63),conversation_model_1=__webpack_require__(96),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class ImService{constructor($rootScope){this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONNEWIMMESSAGERECEIVED="rainbownewimmessagereceived",this.RAINBOW_ONNEWIMRECEIPTRECEIVED="rainbownewimreceiptreceived",this.RAINBOW_ONNEWPARTICIPANTSTATUS="rainbownewparticipantstatus",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_MESSAGE_RECEIVED",(event,message,conversation,cc)=>this.onNewImMessageReceived(event,message,conversation,cc))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATION_RECEIPT_RECEIVED",(event,message,conversation,evt)=>this.onNewImReceiptReceived(event,message,conversation,evt))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONVERSATIONS_STATUS_MESSAGE_EVENT",(event,conversation,participant,status)=>this.onNewParticipantStatus(event,conversation,participant,status)))}static get $inject(){return["$rootScope"]}onNewImMessageReceived(__event,message,conversation,cc){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWIMMESSAGERECEIVED,{message:new message_sdk_1.MessageSDK(message),conversation:new conversation_sdk_1.ConversationSDK(conversation),cc:cc}):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWIMMESSAGERECEIVED,{message:message,conversation:conversation,cc:cc})}onNewImReceiptReceived(__event,message,conversation,evt){sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWIMRECEIPTRECEIVED,{message:new message_sdk_1.MessageSDK(message),conversation:new conversation_sdk_1.ConversationSDK(conversation),evt:evt}):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWIMRECEIPTRECEIVED,{message:message,conversation:conversation,evt:evt})}onNewParticipantStatus(__event,participant,conversation,status){status&&status.value&&(sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWPARTICIPANTSTATUS,{participant:participant,conversation:new conversation_sdk_1.ConversationSDK(conversation),status:status.value}):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONNEWPARTICIPANTSTATUS,{participant:participant,conversation:conversation,status:status.value}))}async getMessagesFromConversation(conversationId,intNbMessage=30){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");intNbMessage=intNbMessage?Math.min(intNbMessage,100):30;const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Could not find the conversation with the following ID: "+conversationId);try{await this.conversationService.conversationServiceBulkHistoryHandler.getHistoryPage(conversation,intNbMessage)}catch(err){}return sdkConfig_1.sdkConfig.newModels?new conversation_sdk_1.ConversationSDK(conversation):conversation}getMessageFromConversationById(conversationId,strMessageId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!strMessageId)throw new Error("Parameter 'strMessageId' is missing or empty");const message=this.conversationService.getConversation(conversationId).getMessageById(strMessageId);let fileDescriptor;return message&&message.fileId&&(message.shortFileDescriptor=this.fileStorageService.getFileDescriptorById(message.fileId),fileDescriptor=message.shortFileDescriptor),sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message,fileDescriptor):message}getMessageFromBubbleById(bubble,strMessageId){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");if(!strMessageId)throw new Error("Parameter 'strMessageId' is missing or empty");const conversation=this.conversationService.getConversation(bubble.dbId);if(!conversation)throw new Error("Parameter 'bubble' don't have a conversation");if(conversation.type!==conversation_model_1.Conversation.Type.ROOM)throw new Error("Parameter 'conversation' is not a bubble conversation");const message=conversation.getMessageById(strMessageId);let fileDescriptor;return message&&message.fileId&&(message.shortFileDescriptor=this.fileStorageService.getFileDescriptorById(message.fileId),fileDescriptor=message.shortFileDescriptor),sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message,fileDescriptor):message}async forwardMessageToConversation(conversationId,messageToForward,originalConversationId,additionalText){const conversation=this.conversationService.getConversation(conversationId),origConv=this.conversationService.getConversation(originalConversationId);if(!conversation)throw new Error("Parameter 'conversation' is missing or null");return await this.conversationService.sendChatForwardMessage(conversation,additionalText,messageToForward,origConv)}sendMessageToConversation(conversationId,strMessage,additionalContentType,additionalContentMessage,urgency="std",urlMetadata){const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Parameter 'conversation' is missing or null");if(!strMessage)throw new Error("Parameter 'strMessage' is missing or empty");if("string"!=typeof strMessage)throw new Error("Parameter 'strMessage' must be a string");if(strMessage.length>1024)throw new Error("Parameter 'strMessage' should be shorter than 1024 characters");let additionalContent=null;if(additionalContentMessage){if(additionalContentMessage.length>1024)throw new Error("Parameter 'additionalContent.message' should be shorter than 1024 characters");if(!additionalContentType||"text/markdown"!==additionalContentType&&"form/json"!==additionalContentType&&"rainbow/json"!==additionalContentType)throw new Error("Parameter 'additionalContent.type' should be set to either 'text/markdown', 'form/json' or 'rainbow/json'");"rainbow/json"!==additionalContentType&&"form/json"!==additionalContentType||(additionalContentMessage=JSON.stringify(additionalContentMessage)),additionalContent={type:additionalContentType,message:additionalContentMessage}}if("high"!==urgency&&"middle"!==urgency&&"low"!==urgency&&"std"!==urgency)throw new Error("Parameter 'urgency' should be set to either 'high', 'middle', 'low' or 'std'");const message=this.conversationService.sendChatMessage(conversation,strMessage,additionalContent,null,null,urgency,null,urlMetadata);return sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message):message}sendCorrectedChatMessage(conversationId,strMessage,messageId){if(this.rainbowLogger.sdk(ImService.logService+"[sendCorrectedChatMessage] :: Trying to send a corrected message"),!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!strMessage)throw new Error("Parameter 'strMessage' is missing or empty");if(strMessage.length>1024)throw new Error("Parameter 'strMessage' should be shorter than 1024 characters");if(!messageId)throw new Error("Parameter 'messageId' is missing or empty");const conversation=this.conversationService.getConversation(conversationId);this.conversationService.sendCorrectedChatMessage(conversation,messageId,strMessage);const message=conversation.getMessageById(messageId);return sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message):message}async replyToMessage(conversationId,strMessage,answerMessageId,urgency="std"){if(conversationId){if(strMessage){if(answerMessageId){const conversation=this.conversationService.getConversation(conversationId),answerMessage=conversation.getMessageById(answerMessageId);if("high"!==urgency&&"middle"!==urgency&&"low"!==urgency&&"std"!==urgency)throw new Error("Parameter 'urgency' should be set to either 'high', 'middle', 'low' or 'std'");const message=this.conversationService.sendChatMessage(conversation,strMessage,null,answerMessage,null,urgency);return sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message):message}throw new Error("Parameter 'answerMessageId' is missing or null")}throw new Error("Parameter 'strMessage' is missing or null")}throw new Error("Parameter 'conversationId' is missing or null")}deleteMessage(conversationId,messageId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!messageId)throw new Error("Parameter 'messageId' is missing or empty");const conversation=this.conversationService.getConversation(conversationId);this.conversationService.sendCorrectedChatMessage(conversation,messageId,"");const message=conversation.getMessageById(messageId);return sdkConfig_1.sdkConfig.newModels?new message_sdk_1.MessageSDK(message):message}getLastModifiedText(conversationId,messageId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!messageId)throw new Error("Parameter 'messageId' is missing or null");const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Couldn't find a conversation with the provided ID");const message=conversation.getMessageById(messageId);if(!message)throw new Error("Couldn't find a message with the provided ID");return message.getLastTextModified()}isMessageDeleted(conversationId,messageId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!messageId)throw new Error("Parameter 'messageId' is missing or null");const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Couldn't find a conversation with the provided ID");const message=conversation.getMessageById(messageId);if(!message)throw new Error("Couldn't find a message with the provided ID");return message.isDeleted()}async sendIsTypingStateInConversation(conversationId,status){if(conversationId){if("boolean"!=typeof status)throw new Error("Parameter 'status' is missing or null - should be a boolean");{const conversation=this.conversationService.getConversation(conversationId);if(!conversation)throw new Error("Parameter 'conversationId': this conversation doesn't exist");let newStatus=conversation_model_1.Conversation.Status.ACTIVE;return status&&(newStatus=conversation_model_1.Conversation.Status.COMPOSING),void this.conversationService.sendChatStatus(conversation,newStatus)}}throw new Error("Parameter 'conversationId' is missing or null")}async sendMessageToBubble(bubble,strMessage,additionalContentType,additionalContentMessage,urgency){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");if(!strMessage)throw new Error("Parameter 'strMessage' is missing or empty");if(strMessage.length>1024)throw new Error("Parameter 'strMessage' should be shorter than 1024 characters");const conversation=await this.conversationService.getOrCreateConversation(bubble.jid,"room");if(!conversation)throw new Error("No 'conversation' found");return bubble.isActive||await this.roomService.sendInitialRoomPresenceSync(bubble),await this.sendMessageToConversation(conversation.dbId,strMessage,additionalContentType,additionalContentMessage,urgency)}async sendIsTypingStateInBubble(bubble,status){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");if("boolean"!=typeof status)throw new Error("Parameter 'status' is missing or null");if(!bubble.jid)throw new Error("Parameter 'bubble': this bubble is not a valid one");const conversation=await this.conversationService.getOrCreateConversation(bubble.jid,"room");if(!conversation)throw new Error("No 'conversation' found for this bubble");let newStatus=conversation_model_1.Conversation.Status.ACTIVE;status&&(newStatus=conversation_model_1.Conversation.Status.COMPOSING),this.conversationService.sendChatStatus(conversation,newStatus)}async removeAllMessagesFromConversation(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=this.conversationService.getConversation(conversationId);if(conversation.type!==conversation_model_1.Conversation.Type.ONE_TO_ONE&&conversation.type!==conversation_model_1.Conversation.Type.BOT)throw new Error("Parameter 'conversation' is not a one-to-one conversation");return await this.conversationService.removeAllMessages(conversation),{code:sdkConstant_1.SDK.OK,label:"OK"}}markMessageFromConversationAsRead(conversationId,messageId){if(!messageId)throw new Error("Parameter 'messageId' is missing or empty");if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=this.conversationService.getConversation(conversationId),message=conversation.getMessageById(messageId);if(message.receiptStatus===message_1.Message.ReceiptStatus.READ)throw new Error("Parameter 'message' is aldready marked as read");return this.conversationService.sendAckReadMessage(conversation,message),message.receiptStatus===message_1.Message.ReceiptStatus.READ&&this.conversationService.decreaseMissedIMCounterForConversation(conversation),{code:sdkConstant_1.SDK.OK,label:"OK"}}markAllMessagesFromConversationAsRead(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=this.conversationService.getConversation(conversationId);return this.conversationService.sendAckReadMessages(conversation),{code:sdkConstant_1.SDK.OK,label:"OK"}}}ImService.logService="IMService | ",exports.ImService=ImService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sdkConfig_1=__webpack_require__(40),settings_service_1=__webpack_require__(18),xmpp_service_1=__webpack_require__(9),call_model_1=__webpack_require__(29),EventsService_1=__webpack_require__(28),sdkConstant_1=__webpack_require__(39),contact_service_1=__webpack_require__(6),webrtcConfigAndUtils_1=__webpack_require__(44),call_sdk_1=__webpack_require__(504),webrtcP2P_service_1=__webpack_require__(35),conversation_service_1=__webpack_require__(63),webrtcP2PRecording_service_1=__webpack_require__(325),webrtcGateway_service_1=__webpack_require__(71),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class WebRTCService{constructor($rootScope){this.DetectRTC=window.DetectRTC,this.settingsService=settings_service_1.SettingsService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.webrtcP2PRecordingService=webrtcP2PRecording_service_1.WebrtcP2PRecordingService.getInstance(),this.webrtcGatewayService=webrtcGateway_service_1.WebrtcGatewayService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONWEBRTCCALLSTATECHANGED="rainbowonwebrtccallstatechanged",this.RAINBOW_ONWEBRTCMEDIADEVICECHANGED="rainbowonwebrtcmediadevicechanged",this.RAINBOW_ONWEBRTCERRORHANDLED="rainbowonwebrtcerrorhandled",this.RAINBOW_ONWEBRTCSTREAMADDED="rainbowonwebrtcstreamadded",this.RAINBOW_ONWEBRTCTRACKCHANGED="rainbowonwebrtctrackchanged",this.RAINBOW_ONCHROMESTOPSCREENSHARINGTRIGGERED="rainbowonchromestopscreensharingtriggered",this.RAINBOW_ONWEBRTCTMEDIAERROROCCURED="rainbowonwebrtcmediaerroroccured",this.RAINBOW_ONWEBRTCTRECORDSTARTED="rainbowonwebrtcrecordstarted",this.RAINBOW_ONWEBRTCTRECORDSTOPPED="rainbowonwebrtcrecordstopped",this.RAINBOW_ONWEBRTCTRECORDPAUSED="rainbowonwebrtcrecordpaused",this.RAINBOW_ONWEBRTCTRECORDREMOTESTARTED="rainbowonwebrtcrecordremotestarted",this.RAINBOW_ONWEBRTCTRECORDREMOTESTOPPED="rainbowonwebrtcrecordremotestopped",this.RAINBOW_ONWEBRTCTRECORDDONE="rainbowonwebrtcrecorddone",this.RAINBOW_ONWEBRTCTRECORDERROR="rainbowonwebrtcrecorderror",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_CALL_UPDATED_EVENT",(event,call)=>this.onWebRTCCallChanged(event,call))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_CALL_ERROR_EVENT",(event,error)=>this.onWebRTCErrorHandled(event,error))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_REMOTE_STREAM_ADDED",(event,streams)=>this.onWebRTCRemoteStreamAdded(event,streams))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_CALL_ESCALATION_SUCCESS",(event,call)=>this.onWebRTCEscalation(event,call))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_CALL_ESCALATION",(event,call)=>this.onWebRTCEscalation(event,call))),$rootScope.$on("$destroy",$rootScope.$on("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED",()=>this.onChromeStopScreenSharingTrigerred())),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_RECORD_SAVED",(event,description,data,source)=>this.onWebRTCRecordingData(event,description,data,source))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_RECORD_ERROR",()=>this.onWebRTCRecordingError())),$rootScope.$on("$destroy",$rootScope.$on("ON_RECORDING_START_MSG_RECEIVED",()=>this.onWebRTCRecordingStartedByRemote())),$rootScope.$on("$destroy",$rootScope.$on("ON_RECORDING_STOP_MSG_RECEIVED",()=>this.onWebRTCRecordingStoppedByRemote()))}static get $inject(){return["$rootScope"]}onWebRTCCallChanged(__event,call){call&&call.type.value===call_model_1.Call.Type.WEBRTC.value&&!this.webrtcGatewayService.isMediaPillarCallSituation(call)&&(sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCCALLSTATECHANGED,new call_sdk_1.CallSDK(call)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCCALLSTATECHANGED,call),"active"===call.status.value&&this.webrtcP2PService.attachDistantMediaStreamsUnifiedPlan(call),"active"===call.status.value&&call.remoteMedia>1&&this.showRemoteVideo(call.id))}onWebRTCErrorHandled(__event,error){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCERRORHANDLED,error)}onWebRTCRemoteStreamAdded(__event,streams){setTimeout(()=>{EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCSTREAMADDED,streams)},100)}onWebRTCEscalation(__event,call){setTimeout(()=>{sdkConfig_1.sdkConfig.newModels?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCCALLSTATECHANGED,new call_sdk_1.CallSDK(call)):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCCALLSTATECHANGED,call),"active"===call.status.value&&call.remoteMedia>1&&this.showRemoteVideo(call.id)},100)}onChromeStopScreenSharingTrigerred(){setTimeout(()=>{EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHROMESTOPSCREENSHARINGTRIGGERED,null)},100)}onWebRTCRecordingData(__event,description,data,source){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDDONE,[description,data,source])}onWebRTCRecordingError(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDERROR,null)}onWebRTCRecordingStartedByRemote(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDREMOTESTARTED,null)}onWebRTCRecordingStoppedByRemote(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDREMOTESTOPPED,null)}canMakeAudioVideoCall(){return("https:"===location.protocol||"chrome-extension:"===location.protocol)&&this.DetectRTC.isWebRTCSupported&&this.DetectRTC.isGetUserMediaSupported}hasAMicrophone(){return this.DetectRTC.hasMicrophone}hasACamera(){return this.DetectRTC.hasWebcam}async callInAudio(contactId,subject){if(!contactId)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'contactId' is missing or null"};if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};let contact;return contact=-1!==contactId.indexOf("@")?await this.contactService.getOrCreateContact(contactId):await this.contactService.getContactByDBId(contactId),await this.webrtcP2PService.makeCall(contact,"audio",subject),{code:sdkConstant_1.SDK.OK,label:"OK"}}async callInVideo(contactId,subject){if(!contactId)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'contactId' is missing or null"};if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};let contact;return contact=-1!==contactId.indexOf("@")?await this.contactService.getOrCreateContact(contactId):await this.contactService.getContactByDBId(contactId),this.webrtcP2PService.makeCall(contact,"video",subject),{code:sdkConstant_1.SDK.OK,label:"OK"}}async callInSharing(contactId){if(contactId){if(navigator.userAgent.indexOf("Chrome")>-1){const contact=await this.contactService.getContactByDBId(contactId),raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);return parseInt(raw[2],10)>72?(this.webrtcP2PService.makeDesktopSharingCall(contact,"sharingOnly"),{code:sdkConstant_1.SDK.OK,label:"OK"}):(await this.canMakeDesktopSharingCall(),this.webrtcP2PService.makeDesktopSharingCall(contact,"sharingOnly"),{code:sdkConstant_1.SDK.OK,label:"OK"})}{const contact=await this.contactService.getContactByDBId(contactId);return this.webrtcP2PService.makeDesktopSharingCall(contact,"sharingOnly"),{code:sdkConstant_1.SDK.OK,label:"OK"}}}throw new Error("Parameter 'contactId' is missing or null")}async callinAudioWithSharing(contactId){const userAgent=navigator.userAgent;if(!contactId)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'contactId' is missing or null"};if(userAgent.indexOf("Chrome")>-1){const contact=await this.contactService.getContactByDBId(contactId),raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return this.webrtcP2PService.makeDesktopSharingCall(contact),{code:sdkConstant_1.SDK.OK,label:"OK"};await this.canMakeDesktopSharingCall(),this.webrtcP2PService.makeDesktopSharingCall(contact)}else{const contact=await this.contactService.getContactByDBId(contactId);this.webrtcP2PService.makeDesktopSharingCall(contact)}return{code:sdkConstant_1.SDK.OK,label:"OK"}}answerInAudio(callId){if(!callId)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Parameter 'callId' is missing or null"};if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.webrtcP2PService.answerCall(call,"audio"),{code:sdkConstant_1.SDK.OK,label:"OK"}}answerInVideo(callId){if(!callId)throw new Error("Parameter callId is missing or empty");if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Could not find a call with the following ID: "+callId);return this.webrtcP2PService.answerCall(call,"video"),{code:sdkConstant_1.SDK.OK,label:"OK"}}getPeerConnectionForCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or empty");return this.xmppService.connection.jingle.sessions[callId].peerconnection}showLocalVideo(){return this.canMakeAudioVideoCall()?(this.webrtcP2PService.attachLocalMediaStreams(!0),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}hideLocalVideo(){return this.canMakeAudioVideoCall()?(this.webrtcP2PService.attachLocalMediaStreams(!1),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}showRemoteVideo(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.canMakeAudioVideoCall()?(this.webrtcP2PService.attachDistantMediaStreams(!0,call),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}hideRemoteVideo(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.canMakeAudioVideoCall()?(this.webrtcP2PService.attachDistantMediaStreams(!1,call),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}addVideoToCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.canMakeAudioVideoCall()?(this.webrtcP2PService.addVideoToCall(call,!1),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}async addSharingToCall(callId){const userAgent=navigator.userAgent;if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);if(userAgent.indexOf("Chrome")>-1){const raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);return parseInt(raw[2],10)>72?(this.webrtcP2PService.addSharingToCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}):(await this.canMakeDesktopSharingCall(),this.webrtcP2PService.addSharingToCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"})}return this.webrtcP2PService.addSharingToCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}removeVideoFromCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.canMakeAudioVideoCall()?(this.webrtcP2PService.removeVideoFromCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}):{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"}}removeSharingFromCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.webrtcP2PService.removeSharingFromCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}release(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");this.canMakeAudioVideoCall()||this.rainbowLogger.sdk(WebRTCService.logService+"release called but WebRTC is not supported by your browser");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);return this.webrtcP2PService.rejectCall(call),{code:sdkConstant_1.SDK.OK,label:"OK"}}muteAudioCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);const conversation=this.conversationService.getConversation(call.conversationId);if(!conversation)throw new Error("Couldn't find a conversation associated to the call with the following ID: "+callId);if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};const mutedCall=this.webrtcP2PService.muteAudio(conversation,!0);return sdkConfig_1.sdkConfig.newModels?new call_sdk_1.CallSDK(mutedCall):mutedCall}unmuteAudioCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);const conversation=this.conversationService.getConversation(call.conversationId);if(!conversation)throw new Error("Couldn't find a conversation associated to the call with the following ID: "+callId);if(!this.canMakeAudioVideoCall())return{code:sdkConstant_1.SDK.ERRORUNSUPPORTED,label:"WebRTC is not supported by your browser"};const unmutedCall=this.webrtcP2PService.muteAudio(conversation,!1);return sdkConfig_1.sdkConfig.newModels?new call_sdk_1.CallSDK(unmutedCall):unmutedCall}getLocalStreamsFromCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);if(call.type!==call_model_1.Call.Type.WEBRTC)throw new Error("This call is not a WebRTC audio or audio/video call");const session=this.xmppService.connection.jingle.sessions[callId];return session?session.localStreams:[]}getRemoteStreamsFromCall(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);const session=this.xmppService.connection.jingle.sessions[call.id];return session?session.remoteStreamsObject:[]}getCallById(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);return call?sdkConfig_1.sdkConfig.newModels?new call_sdk_1.CallSDK(call):call:null}async canMakeDesktopSharingCall(){const userAgent=navigator.userAgent;if(userAgent.indexOf("Firefox")>-1)return{code:sdkConstant_1.SDK.OK,label:"OK"};if(userAgent.indexOf("Chrome")>-1){const raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(parseInt(raw[2],10)>72)return{code:sdkConstant_1.SDK.OK,label:"OK"}}throw new Error("Not Chrome Extension installed for desktop sharing")}startRecording(callId,fileName,recordRemote,toUpload,onlyAudio,mimeType){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);if(this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: Enter"),!fileName)throw new Error("Parameter 'fileName' is missing or null");recordRemote=null==recordRemote||recordRemote,toUpload=null==toUpload||toUpload,onlyAudio=null!=onlyAudio&&onlyAudio,mimeType=null==mimeType?"video/webm;codecs=vp9":mimeType,this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: Prepare recording...");if(this.webrtcP2PRecordingService.createRecord(call.id,null,recordRemote?"REMOTE":"LOCAL",toUpload,fileName,onlyAudio,mimeType)){this.webrtcP2PRecordingService.setOnPauseCallback(()=>{this.rainbowLogger.sdk(WebRTCService.logService+"[onRTCChange] :: WebRTC recording paused"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDPAUSED,null)}),this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: Start recording"),this.webrtcP2PRecordingService.startRecording();const conversation=this.conversationService.getConversation(call.conversationId);return conversation?(this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: Notify remote peer"),this.conversationService.sendRecordingMessage(conversation,"start")):this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: No conversation found - can't notify remote peer"),this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: WebRTC recording started"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDSTARTED,null),{code:sdkConstant_1.SDK.OK,label:"OK"}}return this.rainbowLogger.sdk(WebRTCService.logService+"[startRecording] :: can't start a webRTC recording"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDERROR,null),{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"Can't record the conversation"}}stopRecording(callId){if(!callId)throw new Error("Parameter 'callId' is missing or null");const call=this.webrtcP2PService.getCallById(callId);if(!call)throw new Error("Couldn't find a call with the following ID: "+callId);this.rainbowLogger.sdk(WebRTCService.logService+"[stopRecording] :: Stop current WebRTC recording"),this.webrtcP2PRecordingService.setOnPauseCallback(null),this.webrtcP2PRecordingService.stopRecording();const conversation=this.conversationService.getConversation(call.conversationId);return conversation?(this.rainbowLogger.sdk(WebRTCService.logService+"[stopRecording] :: Notify remote peer"),this.conversationService.sendRecordingMessage(conversation,"stop")):this.rainbowLogger.sdk(WebRTCService.logService+"[stopRecording] :: No conversation found - can't notify remote peer"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCTRECORDSTOPPED,null),{code:sdkConstant_1.SDK.OK,label:"OK"}}}WebRTCService.logService="WebRTCService | ",WebRTCService.isChromeExtensionInstalled=!1,exports.WebRTCService=WebRTCService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),room_model_1=__webpack_require__(144),promiseQueue_1=__webpack_require__(107),contact_service_1=__webpack_require__(6),room_service_1=__webpack_require__(25),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class BubblesService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONBUBBLEINVITATIONTOJOINRECEIVED="rainbowbubblerequesttojoin",this.RAINBOW_ONBUBBLEUPDATED="rainbowbubbleupdated",this.RAINBOW_ONBUBBLEAVATARUPDATED="rainbowbubbleavatarupdated",this.RAINBOW_ONBUBBLEDEACTIVATED="rainbowonbubbledeactivated",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on(this.roomService.ROOM_UPDATE_EVENT,(event,room)=>this.onBubbleUpdatedEvent(event,room))),$rootScope.$on("$destroy",$rootScope.$on(this.roomService.ROOM_AVATAR_UPDATE_EVENT,()=>this.onAvatarUpdatedEvent())),$rootScope.$on("$destroy",$rootScope.$on("ROOM_INVITATION",(event,room)=>this.onRoomInvitationEvent(event,room)))}static get $inject(){return["$rootScope"]}onBubbleUpdatedEvent(__event,room){room&&!1===room.isActive?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLEDEACTIVATED,room):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLEUPDATED,room)}onAvatarUpdatedEvent(){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLEAVATARUPDATED,null)}onRoomInvitationEvent(__event,room){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLEINVITATIONTOJOINRECEIVED,room)}async createBubble(strName,strDescription,boolWithHistory=!1,disableNotifications=!1,urlAvatar=null,autoAcceptInvitation=!1){let bubble=null;const description=strDescription||"",history=Boolean(boolWithHistory),notifications=Boolean(disableNotifications),autoAccept=Boolean(autoAcceptInvitation);if(!strName)throw new Error("Parameter 'strName' is missing or empty");return bubble=await this.roomService.createRoom(strName,description,history,urlAvatar,notifications,!1,!1,autoAccept),this.rainbowLogger.sdk(BubblesService.logService+"[createBubble] :: New bubble "+strName+" created successfully"),bubble}async deleteBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or null");const closedBubble=await this.closeBubble(bubble);return this.roomService.ownerDeleteRoom(closedBubble)}async deleteAllBubbles(){const deleteallBubblePromiseQueue=promiseQueue_1.PromiseQueue.create();this.roomService.getMyRooms().forEach(bubble=>{deleteallBubblePromiseQueue.add(()=>this.deleteBubble(bubble))})}async inviteContactToBubble(contactId,bubble,boolAsModerator=!1,boolWithInvitation=!0){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!bubble)throw new Error("Parameter 'bubble' is missing or null");let privilege=room_model_1.Room.Privilege.USER;boolAsModerator&&(privilege=room_model_1.Room.Privilege.MODERATOR);let withoutInvitation=!1;"boolean"==typeof boolWithInvitation&&(withoutInvitation=!boolWithInvitation);let isActive=!1,isAway=!1,isInvited=!1,isRejected=!1,isDeleted=!1;bubble.users.forEach(user=>{if(user.contact.dbId===contactId)switch(user.status){case"invited":isInvited=!0;break;case"accepted":isActive=!0;break;case"unsubscribed":isAway=!0;break;case"rejected":isRejected=!0;break;case"deleted":isDeleted=!0}});const contact=await this.contactService.getContactByDBId(contactId);if(isActive||isInvited)throw new Error("Contact has been already invited or is already a member of the room");if(isAway||isRejected){const updatedBubble=await this.roomService.ownerReinviteRejectedUser(bubble,contact,null,privilege,withoutInvitation);return updatedBubble.updateAvatarInfo(),updatedBubble}if(isDeleted){const updatedBubble=await this.roomService.ownerReinviteDeletedUser(bubble,contact,null,privilege);return updatedBubble.updateAvatarInfo(),updatedBubble}const updatedBubble=await this.roomService.addRoomUser(bubble,contact,null,privilege,withoutInvitation);return updatedBubble.updateAvatarInfo(),updatedBubble}async removeContactFromBubble(contactId,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!bubble)throw new Error("Parameter 'bubble' is missing or is null");let contactStatus="";bubble.users.forEach(user=>{user.contact.dbId===contactId&&(contactStatus=user.status)});const contact=await this.contactService.getContactByDBId(contactId);switch(contactStatus){case this.roomService.RoomUserStatus.INVITED:{const updatedBubble=await this.roomService.ownerDeletesUserFromRoom(bubble,contact);return updatedBubble.updateAvatarInfo(),updatedBubble}case this.roomService.RoomUserStatus.ACCEPTED:{const updatedBubble=await this.roomService.unsubscribeUserFromRoom(bubble,contact);return updatedBubble.updateAvatarInfo(),updatedBubble}default:return bubble}}async promoteContactToModerator(contactId,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!bubble)throw new Error("Parameter 'bubble' is missing or is null");const contact=await this.contactService.getContactByDBId(contactId),updatedBubble=await this.roomService.updateRoomUser(bubble,contact,null,"moderator");return updatedBubble.updateAvatarInfo(),updatedBubble}async demoteContactFromModerator(contactId,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!bubble)throw new Error("Parameter 'bubble' is missing or is null");const contact=await this.contactService.getContactByDBId(contactId),updatedBubble=await this.roomService.updateRoomUser(bubble,contact,null,"user");return updatedBubble.updateAvatarInfo(),updatedBubble}async changeOwner(contactId,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!bubble)throw new Error("Parameter 'bubble' is missing or is null");const contact=await this.contactService.getContactByDBId(contactId),updatedBubble=await this.roomService.changeRoomOwner(bubble,contact);return updatedBubble.updateAvatarInfo(),updatedBubble}async acceptInvitationToJoinBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or null");return await this.roomService.acceptRoomInvitation(bubble),bubble}async declineInvitationToJoinBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or null");return await this.roomService.declineRoomInvitation(bubble)}async leaveBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or null");let hasOtherModerator=!1;if(bubble.users.forEach(user=>{this.contactService.isUserContact(user)||"moderator"===user.privilege&&"accepted"===user.status&&(hasOtherModerator=!0)}),!hasOtherModerator)throw new Error("Can't leave the bubble. No other moderator");switch(bubble.status){case this.roomService.RoomUserStatus.UNSUBSCRIBED:return await this.roomService.participantCloseRoom(bubble);default:return await this.roomService.unsubscribeMeFromRoom(bubble)}}async closeBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or null");return this.isBubbleArchived(bubble)||await this.roomService.ownerArchiveRoom(bubble),bubble}isBubbleArchived(bubble){let isArchived=!0;return(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null)?bubble.status!==this.roomService.RoomUserStatus.UNSUBSCRIBED?isArchived=!1:bubble.users.forEach(user=>{user.status!==this.roomService.RoomUserStatus.UNSUBSCRIBED&&user.status!==this.roomService.RoomUserStatus.DELETED&&(isArchived=!1)}):isArchived=!1,isArchived}getAllBubbles(){return this.roomService.getRooms()}getAllOwnedBubbles(){return this.roomService.getMyRooms()}getAllPendingBubbles(){return this.roomService.getRooms().filter(bubble=>"invited"===bubble.status)}getAllInactiveBubbles(){return this.roomService.getRooms().filter(bubble=>!1===bubble.isActive)}getBubbleById(strBubbleId){if(!strBubbleId)throw new Error("Parameter 'strBubbleId' is missing or empty");return this.roomService.getRoomById(strBubbleId)}async updateNameForBubble(strName,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!strName)throw new Error("Parameter 'strName' is missing or empty");if(!bubble)throw new Error("Parameter 'bubble' is missing or empty");return bubble.name=strName,await this.roomService.ownerUpdateRoom(bubble)}async updateDescriptionForBubble(strDescription,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!strDescription)throw new Error("Parameter 'strDescription' is missing or empty");if(!bubble)throw new Error("Parameter 'bubble' is missing or empty");return bubble.desc=strDescription,await this.roomService.ownerUpdateRoom(bubble)}async updateBubbleConfiguration(bubble,muteUponEntry=!1,roomName="",roomDescription=""){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or empty");return bubble.setMuteUponEntry(muteUponEntry),roomName&&(bubble.name=roomName),roomDescription&&(bubble.desc=roomDescription),await this.roomService.moderatorUpdateRoomConfig(bubble)}async updateAvatarForBubble(urlAvatar,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!urlAvatar)throw new Error("Parameter 'urlAvatar' is missing or empty");if(!bubble)throw new Error("Parameter 'bubble' is missing or empty");return bubble.id=bubble.dbId,await this.roomService.setAvatarRoom(bubble,urlAvatar)}async deleteAvatarFromBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or empty");await this.roomService.deleteAvatarRoom(bubble.dbId)}async updateCustomDataForBubble(customData,bubble){if(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null,!customData)throw new Error("Parameter 'customData' is missing or empty");if(!bubble)throw new Error("Parameter 'bubble' is missing or empty");bubble.customData=customData;const updatedCustomData=await this.roomService.ownerUpdateRoomCustomData(bubble);return bubble.customData=updatedCustomData,bubble}async deleteCustomDataForBubble(bubble){if(!(bubble=bubble&&bubble.dbId?this.roomService.getRoomById(bubble.dbId):null))throw new Error("Parameter 'bubble' is missing or empty");bubble.customData={};const updatedCustomData=await this.roomService.ownerUpdateRoomCustomData(bubble);return bubble.customData=updatedCustomData,bubble}async getBubbleFromServer(bubble){if(!bubble||!bubble.dbId)throw new Error("Parameter 'bubble' missing or not correct");return await this.roomService.getServerRoom(bubble.dbId)}async createPublicUrl(bubbleId){if(!bubbleId)throw new Error("Parameter 'bubbleId' is missing or null");const bubble=bubbleId?this.roomService.getRoomById(bubbleId):null;if(!bubble)throw new Error("Cannot find a bubble with the given ID");return await this.roomService.bindOpenInviteIdToRoom(bubble),this.roomService.getOpenInviteIdLinkForRoom(bubbleId)}async retrievePublicUrl(bubbleId){if(bubbleId)throw new Error("Parameter 'bubbleId' is missing or empty");return await this.roomService.retrieveOpenInviteLinkForRoom(bubbleId)}async joinBubbleUsingPublicUrl(publicUrl){if(!publicUrl)throw new Error("Parameter 'publicUrl' is missing or empty");const openInviteId=this.getOpenInviteIdFromUrl(publicUrl);return await this.roomService.joinRoomUsingOpenInviteId(openInviteId)}async reactivateInactiveBubble(bubbleId){if(!bubbleId)throw new Error("Parameter 'bubbleId' is missing or empty");const bubble=this.roomService.getRoomById(bubbleId);if(!bubble)throw new Error("Bubble does not exist");return bubble.isActive?Promise.resolve():await this.roomService.sendInitialRoomPresenceSync(bubble)}getOpenInviteIdFromUrl(publicUrl){const publicUrlElements=publicUrl.split("/");if(0===publicUrlElements.length)throw new Error("Can not extract openInviteId from Public URL");return publicUrlElements[publicUrlElements.length-1]}}BubblesService.logService="BubblesService | ",exports.BubblesService=BubblesService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sdkConstant_1=__webpack_require__(39),EventsService_1=__webpack_require__(28),contact_service_1=__webpack_require__(6),profile_service_1=__webpack_require__(13),room_service_1=__webpack_require__(25),webrtcP2P_service_1=__webpack_require__(35),_conferenceService=new WeakMap,_webConferenceService=new WeakMap,_$rootScope=new WeakMap;exports.ConferencesService=class{constructor(conferenceService,webConferenceService,$rootScope){this.confBubble=null,this.confBubbleType="",this.contactService=contact_service_1.ContactService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.RAINBOW_ONWEBCONFERENCEUPDATED="rainbowwebconferenceupdated",this.RAINBOW_ONWEBRTCMEDIAERROROCCURED="rainbowwebrtcmediaerroroccured",this.RAINBOW_ONBUBBLESHARINGCONFERENCESTARTED="rainbowbubblesharingconferencestarted",this.RAINBOW_ONBUBBLECONFERENCESTARTED="rainbowbubbleconferencestarted",this.RAINBOW_ONBUBBLECONFERENCETALKERACTIVE="rainbowonwebconferencetalkeractive",this.RAINBOW_ONWEBCONFERENCEDELEGATED="rainbowonwebconferencedelegated",_conferenceService.set(this,conferenceService),_webConferenceService.set(this,webConferenceService),_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_CONFERENCE_UPDATED_EVENT",(event,conferenceSession)=>this.onConferenceUpdated(event,conferenceSession))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBRTC_GETUSERMEDIA_ERROR",(event,conferenceSession)=>this.onWebRtcGetUserMediaError(event,conferenceSession))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONFERENCE_PARTICIPANT_EVENT",(event,conferenceSession)=>this.onConferenceParticipantEvent(event,conferenceSession))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONFERENCE_STARTED_INVITATION",(event,room)=>this.onConferenceStartedInvitation(event,room))),$rootScope.$on("$destroy",$rootScope.$on("ON_WEBCONFERENCE_STARTED_INVITATION",(event,room)=>this.onConferenceStartedInvitation(event,room))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONFERENCE_TALKER_EVENT",(event,conferenceSession)=>this.onConferenceTalkerEvent(event,conferenceSession))),$rootScope.$on("$destroy",$rootScope.$on("ON_CONFERENCE_DELEGATED_EVENT",(event,oldConfId,newConfId)=>this.onWebConferenceDelegated(event,oldConfId,newConfId)))}static get $inject(){return["conferenceService","webConferenceService","$rootScope"]}onConferenceUpdated(__event,conferenceSession){conferenceSession&&EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBCONFERENCEUPDATED,conferenceSession)}onWebRtcGetUserMediaError(__event,conferenceSession){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBRTCMEDIAERROROCCURED,conferenceSession)}onConferenceParticipantEvent(__event,conferenceSession){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBCONFERENCEUPDATED,conferenceSession)}onConferenceStartedInvitation(__event,room){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLECONFERENCESTARTED,room)}onConferenceTalkerEvent(__event,conferenceSession){conferenceSession&&EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONBUBBLECONFERENCETALKERACTIVE,conferenceSession)}onWebConferenceDelegated(__event,oldConfId,newConfId){const detail={oldConferenceId:oldConfId,newConferenceId:newConfId};EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONWEBCONFERENCEDELEGATED,detail)}isWebConferenceAllowed(){return this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.WEBRTC_CONFERENCE_ALLOWED)}hasActiveWebConferenceSession(){return _webConferenceService.get(this).hasActiveConferenceSession()}getWebConferenceBubble(){return _webConferenceService.get(this).getRelatedRoomToActiveConferenceSession()}setActiveSpeakerValue(value){return _webConferenceService.get(this).setActiveSpeakerValue(value),value}async startOrJoinWebConference(bubble){const webConferenceService=_webConferenceService.get(this);if(!bubble)throw new Error("Parameter 'bubble' is missing or empty");if(this.hasActiveWebConferenceSession())throw new Error("Already in a conference");if(!bubble)throw new Error("Could not find the bubble");return bubble.confEndpoints.length&&await webConferenceService.makeSnapshotForConfId(bubble.confEndpoints[0].confEndpointId,"webrtc",!0),await webConferenceService.bubbleStartOrJoinWebConference(bubble),this.confBubble=bubble,this.confBubbleType="webrtc",this.roomService.getRoomById(bubble.dbId)}async stopWebConference(){const webConferenceService=_webConferenceService.get(this),conferenceService=_conferenceService.get(this);if(this.confBubble=this.confBubble&&this.confBubble.dbId?this.roomService.getRoomById(this.confBubble.dbId):null,!this.hasActiveWebConferenceSession()||!this.confBubble)throw new Error("No known conference in a Bubble");let id="";id="webrtc"===this.confBubbleType?this.confBubble.getSFUConfEndpointId():this.confBubble.getSFUSharingConfEndpointId();const sharingConfSession=webConferenceService.getConferenceSessionById(id),participant=sharingConfSession?sharingConfSession.getParticipantByJid(this.contactService.userContact.jid):null;if("moderator"!==participant.role)return await conferenceService.disconnectsParticipant(id,participant.participantId,this.confBubbleType),this.confBubble=null,void(this.confBubbleType=null);await conferenceService.stopConference(id,"webrtc",this.confBubble.dbId),this.confBubble=null,this.confBubbleType=null}async muteConferenceAudio(conferenceSession){const conferenceService=_conferenceService.get(this),participantId=conferenceSession.getConnectedParticipantByJid(this.contactService.userContact.jid).participantId;if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!participantId)throw new Error("Couldn't retrieve participant ID - make sure the conference is active and you are connected");await conferenceService.updateParticipantState(conferenceSession.id,participantId,"mute","webrtc")}async unmuteConferenceAudio(conferenceSession){const conferenceService=_conferenceService.get(this),participantId=conferenceSession.getConnectedParticipantByJid(this.contactService.userContact.jid).participantId;if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!participantId)throw new Error("Couldn't retrieve participant ID - make sure the conference is active and you are connected");await conferenceService.updateParticipantState(conferenceSession.id,participantId,"unmute","webrtc")}async muteConferenceParticipant(conferenceSession,participantId){const conferenceService=_conferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!participantId)throw new Error("Parameter 'participantId' is missing or empty");await conferenceService.updateParticipantState(conferenceSession.id,participantId,"mute","webrtc")}async unmuteConferenceParticipant(conferenceSession,participantId){const conferenceService=_conferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!participantId)throw new Error("Parameter 'participantId' is missing or empty");await conferenceService.updateParticipantState(conferenceSession.id,participantId,"unmute","webrtc")}async muteAllConferenceParticipants(conferenceSession){const conferenceService=_conferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");const participants=conferenceSession.participants;for(let i=0;i<participants.length;i++)"moderator"!==participants[i].role&&await conferenceService.updateParticipantState(conferenceSession.id,participants[i].participantId,"mute","webrtc")}async unmuteAllConferenceParticipants(conferenceSession){const conferenceService=_conferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");const participants=conferenceSession.participants;for(let i=0;i<participants.length;i++)"moderator"!==participants[i].role&&await conferenceService.updateParticipantState(conferenceSession.id,participants[i].participantId,"unmute","webrtc")}addVideoToConference(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.addMediaToConferenceSession(conferenceSession,"video")}addSharingToConference(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.addMediaToConferenceSession(conferenceSession,"sharing")}removeVideoFromConference(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.removeMediaFromConferenceSession(conferenceSession,"video"),conferenceSession}removeSharingFromConference(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.removeMediaFromConferenceSession(conferenceSession,"sharing"),conferenceSession}showLocalVideo(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.attachLocalMediaStream(!0,conferenceSession),webConferenceService.isActiveSpeakerEnabled(),conferenceSession}showRemoteVideo(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");return webConferenceService.isActiveSpeakerEnabled()?webConferenceService.attachGalleryMediaStreams(conferenceSession):webConferenceService.attachDistantMediaStream(!0,conferenceSession),conferenceSession}getConferenceSessionById(conferenceId){const webConferenceService=_webConferenceService.get(this);if(!conferenceId)throw new Error("Parameter 'conferenceId' is missing or empty");return webConferenceService.getConferenceSessionById(conferenceId)}async updateGalleryPublisher(conferenceSession,galleryElementId,newPublisher){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!galleryElementId)throw new Error("Parameter 'galleryElementId' is missing or empty");if(!newPublisher)throw new Error("Parameter 'newPublisher' is missing or empty");if(webConferenceService.getRelatedPublisherToElement(conferenceSession.id,galleryElementId))for(let i=0;i<conferenceSession.videoGallery.length;i++)conferenceSession.videoGallery[i].id===galleryElementId&&(conferenceSession.videoGallery[i].sessionId?webConferenceService.dropRemoteVideoSession(conferenceSession,conferenceSession.videoGallery[i].sessionId):webConferenceService.reInitialiseVideoGalleryElementById(conferenceSession,galleryElementId));await webConferenceService.subscribeToPublisher(conferenceSession.id,newPublisher,galleryElementId)}removeGalleryPublisher(conferenceSession,galleryElementId){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");if(!galleryElementId)throw new Error("Parameter 'galleryElementId' is missing or empty");return webConferenceService.dropRemoteVideoSession(conferenceSession,galleryElementId),{code:sdkConstant_1.SDK.OK,label:`Publisher from ${galleryElementId} successfully removed`}}setVideoGalleryElementsNumber(elementsNumber){return _webConferenceService.get(this).setVideoGalleryElementsNumber(elementsNumber),elementsNumber}removePipVideo(){return this.webrtcP2PService.removeConferencePip()}updateMainVideoSession(conferenceId,sessionId){const webConferenceService=_webConferenceService.get(this);if(conferenceId){if(sessionId){webConferenceService.updateMainScreenSession(conferenceId,sessionId);const conferenceSession=webConferenceService.getConferenceSessionById(conferenceId);return webConferenceService.attachDistantMediaStream(!0,conferenceSession),webConferenceService.getConferenceSessionById(conferenceId)}throw new Error("Parameter 'sessionId' is missing or empty")}throw new Error("Parameter 'conferenceId' is missing or empty")}async disconnectParticipant(conferenceId,participantId,mediaType="webrtc"){const conferenceService=_conferenceService.get(this);if(!conferenceId)throw new Error("Parameter 'conferenceId' is missing or empty");if(!participantId)throw new Error("Parameter 'participantId' is missing or empty");await conferenceService.disconnectsParticipant(conferenceId,participantId,mediaType)}getListOfAvailableRemoteVideoPublishers(conferenceSession){const webConferenceService=_webConferenceService.get(this);if(!conferenceSession)throw new Error("Parameter 'conferenceSession' is missing or empty");const publishers={all:[],notActive:[]};return publishers.all=conferenceSession.getListOfRemoteVideoPublishers(),publishers.notActive=webConferenceService.getListOfAvailableRemoteVideoPublishers(conferenceSession.id),publishers}async delegateConferenceToParticipant(conferenceId,participantId){const webConferenceService=_webConferenceService.get(this);if(!conferenceId)throw new Error("Parameter 'conferenceId' is missing or empty");if(!participantId)throw new Error("Parameter 'participantId' is missing or empty");return await webConferenceService.delegateConferenceToParticipant(conferenceId,participantId)}toggleAutoStreamQuality(value){return _webConferenceService.get(this).setDisableAutoUpdateSubstreamLevels(!value),value}getElementStreamQuality(elementId){const videoElement=document.getElementById(elementId);if(videoElement&&"video"===videoElement.localName)return{height:videoElement.videoHeight,width:videoElement.videoWidth};throw new Error("Can not find the video stream attached to an element with the following ID: "+elementId)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),group_model_1=__webpack_require__(321),sdkConstant_1=__webpack_require__(39),contact_service_1=__webpack_require__(6),group_service_1=__webpack_require__(320),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class GroupsService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.groupService=group_service_1.GroupService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONGROUPCREATED="rainbowgroupcreated",this.RAINBOW_ONGROUPUPDATED="rainbowgroupupdated",this.RAINBOW_ONGROUPDELETED="rainbowgroupdeleted",this.RAINBOW_ONGROUPUSERADDED="rainbowgroupuseradded",this.RAINBOW_ONGROUPUSERREMOVED="rainbowgroupuserdeleted",_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on(this.groupService.ON_UPDATE_GROUP_EVENT,(event,groupId)=>this.onGroupUpdated(event,groupId))),$rootScope.$on("$destroy",$rootScope.$on(this.groupService.ON_CREATED_GROUP_EVENT,(event,groupId)=>this.onGroupCreated(event,groupId))),$rootScope.$on("$destroy",$rootScope.$on(this.groupService.ON_REMOVED_GROUP_EVENT,(event,groupId)=>this.onGroupDeleted(event,groupId))),$rootScope.$on("$destroy",$rootScope.$on(this.groupService.ON_ADD_GROUP_USER_EVENT,(event,groupId,userId)=>this.onGroupUserAdded(event,groupId,userId))),$rootScope.$on("$destroy",$rootScope.$on(this.groupService.ON_REMOVE_GROUP_USER_EVENT,(event,groupId,userId)=>this.onGroupUserRemoved(event,groupId,userId)))}static get $inject(){return["$rootScope"]}async onGroupUpdated(__event,groupId){const group=await this.groupService.getGroup(groupId);EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONGROUPUPDATED,group)}async onGroupCreated(__event,groupId){const group=await this.groupService.getGroup(groupId);EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONGROUPCREATED,group)}onGroupDeleted(__event,groupId){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONGROUPDELETED,groupId)}async onGroupUserAdded(__event,groupId,userId){const group=await this.groupService.getGroup(groupId);EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONGROUPUSERADDED,{group:group,userId:userId})}async onGroupUserRemoved(__event,groupId,userId){const group=await this.groupService.getGroup(groupId);EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONGROUPUSERREMOVED,{group:group,userId:userId})}async createGroup(strName,strDescription,isFavorite){let group=null;const comment=strDescription||"";let boolFavorite=!1;if("boolean"==typeof isFavorite&&(boolFavorite=isFavorite),!strName)throw new Error("Parameter 'strName' is missing or empty");group=new group_model_1.Group(null,strName,comment,boolFavorite);const newGroup=await this.groupService.addGroup(group);return this.rainbowLogger.sdk(GroupsService.logService+"[createGroup] :: New group created successfully"),newGroup}async deleteGroup(group){if(!group)throw new Error("Parameter 'group' is missing or empty");return await this.groupService.removeGroup(group.id),this.rainbowLogger.sdk(GroupsService.logService+"[deleteGroup] :: Group deleted successfully"),{code:sdkConstant_1.SDK.OK,label:"OK"}}async deleteAllGroups(){const PromiseQueue=[],groups=this.groupService.getGroups(),deleteGroupPromise=group=>this.groupService.removeGroup(group.id);return groups.forEach(group=>{PromiseQueue.push(deleteGroupPromise(group))}),await Promise.all(PromiseQueue),this.rainbowLogger.sdk(GroupsService.logService+"[deleteAllGroups] :: All groups deleted successfully"),{code:sdkConstant_1.SDK.OK,label:"OK"}}getAll(){return this.groupService.getGroups()}getFavoritesGroups(){return this.groupService.getGroups().filter(group=>group.isFavorite)}async setGroupAsFavorite(group){return group.isFavorite=!0,await this.groupService.updateGroup(group),group}async unsetGroupAsFavorite(group){return group.isFavorite=!1,await this.groupService.updateGroup(group),group}getGroupById(groupId){let theGroup=null;return this.groupService.getGroups().some(group=>groupId===group.id&&(theGroup=group,!0)),theGroup}async getDetailedGroupById(id){if(!id)throw new Error("Parameter 'id' is missing or empty");return await this.groupService.getGroup(id)}async addContactInGroup(contactId,group){if(!contactId)throw new Error("Parameter 'contactId' is missing or null");if(!group)throw new Error("Parameter 'group' is missing or null");const contact=await this.contactService.getContactByDBId(contactId),updatedGroup=await this.groupService.addGroupUser(group,contact);return this.rainbowLogger.sdk(GroupsService.logService+"[addContactInGroup] :: Contact added successfully"),updatedGroup}async removeContactFromGroup(contactId,group){if(!contactId)throw new Error("Parameter 'contact' is missing or null");if(!group)throw new Error("Parameter 'group' is missing or null");const contact=await this.contactService.getContactByDBId(contactId);return this.groupService.removeGroupUser(group.id,contact)}}GroupsService.logService="GroupService  | ",exports.GroupsService=GroupsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),callLog_service_1=__webpack_require__(329),_$rootScope=new WeakMap;exports.CallsLogService=class{constructor($rootScope){this.fetchingCallLogs=!1,this.callLogService=callLog_service_1.CallLogService.getInstance(),this.RAINBOW_ONCALLLOGUPDATED="rainbowcalllogupdated",this.RAINBOW_ONCALLLOGACKUPDATED="rainbowcalllogackupdated",this.initialized=!1,_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on(this.callLogService.RAINBOW_ONCALLLOGUPDATED,()=>this.onCallLogUpdated())),$rootScope.$on("$destroy",$rootScope.$on(this.callLogService.RAINBOW_ONCALLLOGACKUPDATED,(event,data)=>this.onCallLogAckUpdated(event,data)))}static get $inject(){return["$rootScope"]}onCallLogUpdated(){this.fetchingCallLogs||EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCALLLOGUPDATED,null)}onCallLogAckUpdated(__event,data){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCALLLOGACKUPDATED,data)}async fetchCallLogs(numberOfCallLogs=100){numberOfCallLogs>250&&(numberOfCallLogs=250),this.fetchingCallLogs=!0;const callLogs=await this.callLogService.getSimplifiedCallLogs(numberOfCallLogs);return this.fetchingCallLogs=!1,this.prettifyCallLogs(callLogs)}async fetchPaginatedCallLogs(numberOfElementsPerPage=100){numberOfElementsPerPage>250&&(numberOfElementsPerPage=250),this.fetchingCallLogs=!0;const callLogs=await this.callLogService.fetchNextPage(numberOfElementsPerPage);return this.fetchingCallLogs=!1,this.prettifyCallLogs(callLogs)}prettifyCallLogs(callLogs){callLogs.sort((elementA,elementB)=>Number(elementB.date)-Number(elementA.date));for(let i=0;i<callLogs.length;i++){let durationMs=0,hmmss=callLogs[i].duration;if(hmmss&&"string"==typeof hmmss&&hmmss.match(/^(?:(?:([01]?\d|2[0-3])H )?([0-5]?\d)m )?([0-5]?\ds)$/)){hmmss=hmmss.replace(/[hms]/g,"");const parts=hmmss.split(" ").reverse();for(let j=0;j<parts.length;j++)durationMs+=parts[j]*Math.pow(60,j);callLogs[i].duration=1e3*durationMs}}return callLogs}getMissedCallLogCounter(){return this.callLogService.getMissedCallLogCounter()}getMissedCallLogNumber(){return this.callLogService.getNumberMissedCallLogs()}deleteOneCallLog(id){return this.callLogService.deleteOneCallLog(id),!0}deleteCallLogsForContact(jid){return this.callLogService.deleteCallLogsForContact(jid),!0}deleteAllCallLogs(){this.callLogService.deleteAllCallLogs()}markCallLogAsRead(id){return this.callLogService.markCallLogAsRead(id)}markAllCallsLogsAsRead(){return this.callLogService.markAllCallsLogsAsRead()}isInitialized(){return this.callLogService.initialized}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),favorite_service_1=__webpack_require__(149),logger_service_1=__webpack_require__(4);class FavoritesService{constructor(){this.favoriteService=favorite_service_1.FavoriteService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONFAVORITECREATED="rainbowonfavoritecreated",this.RAINBOW_ONFAVORITEDELETED="rainbowonfavoritedeleted",window.addEventListener("ON_FAVORITE_CREATED",event=>this.onFavoriteCreated(event)),window.addEventListener("ON_FAVORITE_DELETED",event=>this.onFavoriteDeleted(event))}onFavoriteCreated(event){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONFAVORITECREATED,event.detail)}onFavoriteDeleted(event){EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONFAVORITEDELETED,event.detail)}async fetchAllFavorites(){const favorites=await this.favoriteService.getServerFavorites();return this.rainbowLogger.sdk(FavoritesService.logService+"[fetchAllFavorites] :: Successfully fetched the Favorites"),favorites}async createFavorite(id,favoriteType){if(!id)throw new Error(FavoritesService.logService+"[createFavorite] :: Error: parameter 'id' is missing or null. Needs to be an id of an user or a bubble");if(!favoriteType)throw new Error(FavoritesService.logService+"[createFavorite] :: Error: parameter 'favoriteType' is missing or null");if("bubble"!==favoriteType&&"user"!==favoriteType)throw new Error(FavoritesService.logService+'[createFavorite] :: Error: favoriteType should be set to "user" or "bubble"');"bubble"===favoriteType&&(favoriteType="room"),await this.favoriteService.addServerFavorite(id,favoriteType)}async deleteFavorite(id){if(!id)throw this.rainbowLogger.sdk(FavoritesService.logService+"[deleteFavorite] :: Error: parameter 'id' is missing or null"),new Error(FavoritesService.logService+"[deleteFavorite] :: Error: parameter 'id' is missing or null");return await this.favoriteService.removeServerFavorite(id)}}FavoritesService.logService="FavoritesService | ",exports.FavoritesService=FavoritesService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),contact_service_1=__webpack_require__(6),fileStorage_service_1=__webpack_require__(34),conversation_service_1=__webpack_require__(63),conversation_model_1=__webpack_require__(96),fileServer_service_1=__webpack_require__(47),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class FilesStorageService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.conversationService=conversation_service_1.ConversationService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONFILEUPLOADED_ERROR="rainbowfileuploadederror",this.RAINBOW_ONFILEDOWNLOADED="rainbowonfiledownloaded",this.RAINBOW_ONFILEDOWNLOADED_ERROR="rainbowfiledownloadederror",this.RAINBOW_ONCHUNKLOADMESSAGE="rainbowonchunkloadmessage",this.RAINBOW_ONFILEUPLOADED="rainbowfileuploaded",this.eventsMap={success:{download:this.RAINBOW_ONFILEDOWNLOADED,upload:this.RAINBOW_ONFILEUPLOADED},error:{download:this.RAINBOW_ONFILEDOWNLOADED_ERROR,upload:this.RAINBOW_ONFILEUPLOADED_ERROR}},_$rootScope.set(this,$rootScope),$rootScope.$on("$destroy",$rootScope.$on("ON_FILE_TRANSFER_EVENT",(event,data)=>this.onFileTransferChanged(event,data)))}static get inject(){return["$rootScope"]}onFileTransferChanged(__event,data){data.result&&data.type?(this.rainbowLogger.sdk(FilesStorageService.logService+"[onFileTransferChanged] ::  File transfered"),EventsService_1.eventsService.dispatchEvent(this.eventsMap[data.result][data.type],data)):"uploading"!==(data=data.fileDesc).state&&"downloading"!==data.state||EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHUNKLOADMESSAGE,data)}addFileToConversation(conversation,file,data,urgency="std"){return new Promise(resolve=>{if("string"==typeof file){const xhr=new XMLHttpRequest;xhr.open("GET",file,!0),xhr.onreadystatechange=()=>{if(xhr.readyState===XMLHttpRequest.DONE){const blob=xhr.response,_file=new File([blob],file.replace(/^.*[\\/]/,""));this.conversationService.sendFSMessage(conversation,_file,data||_file.name,null,null,urgency).then(message=>resolve(message))}},xhr.responseType="blob",xhr.send()}else this.conversationService.sendFSMessage(conversation,file,data||file.name,null,null,urgency).then(message=>resolve(message))})}async uploadFileToConversation(conversationId,file,message,urgency="std"){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");if(!file)throw new Error("Parameter 'file' is missing or null");const conversation=await this.conversationService.getConversation(conversationId);if(conversation.type!==conversation_model_1.Conversation.Type.ONE_TO_ONE)throw new Error("Parameter 'conversation' is not a one-to-one conversation");this.rainbowLogger.sdk(FilesStorageService.logService+"[uploadFileToConversation] ::  Add file to the conversation "+conversation.id);return await this.addFileToConversation(conversation,file,message,urgency)}async uploadFile(file){if(!file)throw new Error("Parameter 'file' is missing or null");const fileDescriptor=await this.fileStorageService.createFileDescriptor(file,[],!1);return await this.fileServerService.uploadAFileByChunk(fileDescriptor,file)}async uploadExistingFileToConversation(conversationId,fileDescriptor,message=""){if(!conversationId)throw new Error("Parameter 'conversation' is missing or null");if(!fileDescriptor)throw new Error("Parameter 'fileDescriptor' is missing or null");this.rainbowLogger.sdk(FilesStorageService.logService+"[uploadExistingFileToConversation] ::  Upload existing file to conversation "+conversationId);const conversation=this.conversationService.getConversation(conversationId);return await this.conversationService.sendEFSMessage(conversation,fileDescriptor,message)}async uploadFileToBubble(bubble,file,message,urgency="std"){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");if(!file)throw new Error("Parameter 'file' is missing or null");const conversation=this.conversationService.getConversation(bubble.dbId);if(!conversation)throw new Error("Parameter 'bubble' doesn't have a conversation");if(conversation.type!==conversation_model_1.Conversation.Type.ROOM)throw new Error("Conversation found is not a conversation of type 'room'. It might be a problem with a bubble.");this.rainbowLogger.sdk(FilesStorageService.logService+"[uploadFileToBubble] ::  Trying to add a file to the bubble "+bubble.dbId);return await this.addFileToConversation(conversation,file,message,urgency)}async downloadFile(fileDescriptor){if(!fileDescriptor)throw new Error("Parameter 'fileDescriptor' is missing or null");this.rainbowLogger.sdk(FilesStorageService.logService+"[downloadFile] ::  Trying to get a file");return await this.fileServerService.getBlobFromFileDescriptor(fileDescriptor,!0)}async removeFile(fileDescriptor){if(!fileDescriptor)throw new Error("Parameter 'fileDescriptor' is missing or null");if(fileDescriptor.id||fileDescriptor.url){this.rainbowLogger.sdk(FilesStorageService.logService+"[removeFile] ::  Trying to remove a file");let fileDescriptorId=fileDescriptor.id;if(!fileDescriptorId){const parts=fileDescriptor.url.split("/");fileDescriptorId=parts.pop()||parts.pop()}return await this.fileStorageService.deleteFileDescriptor(fileDescriptorId),void this.rainbowLogger.sdk(FilesStorageService.logService+"[removeFile] ::  File removed")}throw new Error("Parameter 'fileDescriptor' does not contain sufficient information to remove the file - no id or url property")}getFileDescriptorFromId(fileId){return this.rainbowLogger.sdk(FilesStorageService.logService+"[getFileDescriptorFromId] ::  Get file descriptor "+fileId),this.fileStorageService.getFileDescriptorById(fileId)}retrieveFileDescriptorById(fileId){return this.rainbowLogger.sdk(FilesStorageService.logService+"[retrieveFileDescriptorById] ::  Get file descriptor "+fileId),this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId)}async getFileDescriptorUrl(fileDescriptor,thumbnail){return await this.fileServerService.getFileDescriptorUrl(fileDescriptor,thumbnail)}async getFilesReceivedInConversation(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=await this.conversationService.getConversation(conversationId);if(conversation.type!==conversation_model_1.Conversation.Type.ONE_TO_ONE)throw new Error("Parameter 'conversation' is not a one-to-one conversation");this.rainbowLogger.sdk(FilesStorageService.logService+"[getFilesReceivedInConversation] ::  Get files received in conversation "+conversation.id+"...");const files=await this.fileStorageService.retrieveFilesReceivedFromPeer(this.contactService.userContact.dbId,conversation.contact.dbId);return this.rainbowLogger.sdk(FilesStorageService.logService+"[getFilesReceivedInConversation] ::  Shared "+files.length),files}async getFilesReceivedInBubble(bubble){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");this.rainbowLogger.sdk(FilesStorageService.logService+"[getFilesReceivedInBubble] ::  Get files received in bubble "+bubble.dbId);return await this.fileStorageService.retrieveReceivedFilesForRoom(bubble.dbId)}async getFilesSentInConversation(conversationId){if(!conversationId)throw new Error("Parameter 'conversationId' is missing or null");const conversation=await this.conversationService.getConversation(conversationId);if(conversation.type!==conversation_model_1.Conversation.Type.ONE_TO_ONE)throw new Error("Parameter 'conversation' is not a one-to-one conversation");this.rainbowLogger.sdk(FilesStorageService.logService+"[getFilesSentInConversation] :: Get files sent in conversation "+conversation.id);return this.fileStorageService.retrieveSentFiles(conversation.contact.dbId)}async getFilesSentInBubble(bubble){if(!bubble)throw new Error("Parameter 'bubble' is missing or null");this.rainbowLogger.sdk(FilesStorageService.logService+"[getFilesSentInBubble] :: Get files sent in bubble "+bubble.dbId);return this.fileStorageService.retrieveSentFiles(bubble.dbId)}async getUserQuotaConsumption(){return this.fileStorageService.retrieveUserConsumption()}getAllFilesSent(){return this.fileStorageService.getDocuments("date",!1)}getAllFilesReceived(){return this.fileStorageService.getDocuments("date",!0)}async cancelCurrentFileTransfer(id){if(!id)throw new Error("Parameter 'id' is missing or null");const fileDescriptor=this.fileStorageService.getFileDescriptorById(id);if(null===fileDescriptor)throw new Error("Could not find a file with the id "+id);if("downloading"!==fileDescriptor.state&&"uploading"!==fileDescriptor.state)throw new Error("File Status is not set to 'downloading' or 'uploading'");return this.fileServerService.cancelCurrentFiletransfer(id),"not_uploaded"!==fileDescriptor.state&&"uploading"!==fileDescriptor.state?(fileDescriptor.state="uploaded",fileDescriptor):"not_uploaded"!==fileDescriptor.state&&"uploading"===fileDescriptor.state?(fileDescriptor.state="not_uploaded",fileDescriptor):fileDescriptor}}FilesStorageService.logService="FilesStorageService | ",exports.FilesStorageService=FilesStorageService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const profile_service_1=__webpack_require__(13);exports.CapabilitiesService=class{constructor(){this.profileService=profile_service_1.ProfileService.getInstance()}getAll(){return this.profileService.getMyProfileFeatures()}getUserSubscription(){return this.profileService.getMyProfileName()}isFeatureEnabled(featureString){return this.profileService.isFeatureEnabled(featureString)}hasS4BExtensionEnabled(){return this.profileService.isFeatureEnabled("MS_SKYPE_PLUGIN")}hasOutlookExtensionEnabled(){return this.profileService.isFeatureEnabled("MS_OUTLOOK_PLUGIN")}hasCalendarPresenceEnabled(){return this.profileService.isFeatureEnabled("MSO365_CALENDAR_PRESENCE")}hasTelephonyBasicCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_BASIC_CALL")}hasTelephonySecondCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_SECOND_CALL")}hasTelephonyTransferCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_TRANSFER_CALL")}hasTelephonyConferenceCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_CONFERENCE_CALL")}hasTelephonyDeflectCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_DEFLECT_CALL")}hasTelephonyForwardCallEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_FORWARD_CALL")}hasTelephonyPhoneBookEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_PHONE_BOOK")}hasTelephonyVoiceMailEnabled(){return this.profileService.isFeatureEnabled("TELEPHONY_VOICE_MAIL")}hasWebRTCAudioMobileEnabled(){return this.profileService.isFeatureEnabled("WEBRTC_FOR_MOBILE")}hasWebRTCVideoMobileEnabled(){return this.profileService.isFeatureEnabled("WEBRTC_FOR_MOBILE_VIDEO")}hasBridgeConferenceEnabled(){return this.profileService.isFeatureEnabled("CONFERENCE_ALLOWED")}hasBridgeConferenceRecordEnabled(){return this.profileService.isFeatureEnabled("CONFERENCE_RECORDING")}hasBridgeConferenceDialOutEnabled(){return this.profileService.isFeatureEnabled("CONFERENCE_DIAL_OUT")}maxParticipantsPerBubbleAllowed(){return this.profileService.getFeatureLimitMax("BUBBLE_PARTICIPANT_COUNT")}maxParticipantsPerBridgeConferenceAllowed(){return this.profileService.getFeatureLimitMax("CONFERENCE_PARTICIPANT_COUNT")}maxFileStorageQuotaAllowed(){return this.profileService.getFeatureLimitMax("FILE_SHARING_QUOTA_GB")}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const _User=new WeakMap,_adminCompanyService=new WeakMap,_adminUserService=new WeakMap,company_model_1=__webpack_require__(24);exports.SdkAdminService=class{constructor(User,adminCompanyService,adminUserService){this.logService="SdkAdminService | ",_User.set(this,User),_adminCompanyService.set(this,adminCompanyService),_adminUserService.set(this,adminUserService)}static get $inject(){return["User","adminCompanyService","adminUserService"]}async createEssentialCompany(strName,strCountry){const adminCompanyService=_adminCompanyService.get(this),company=company_model_1.Company.create(null,"");return company.name=strName,company.country=strCountry,await adminCompanyService.createCompanyEndUser(company)}async createCompany(strName,strCountry,strState){const adminCompanyService=_adminCompanyService.get(this),company=company_model_1.Company.create(null,"");return company.name=strName,company.country=strCountry,strState&&(company.state=strState),company.economicActivityClassification="",await adminCompanyService.createCompany(company)}async removeCompany(companyId){const adminCompanyService=_adminCompanyService.get(this);return await adminCompanyService.deleteCompany(companyId)}async removeCompanyDeprecated(company){const adminCompanyService=_adminCompanyService.get(this);return await adminCompanyService.deleteCompany(company.id)}async createUserForCompany(strLogin,strFirstName,strLastName,strPassword,companyId,tags){const User=_User.get(this),adminUserService=_adminUserService.get(this),user=User.create();user.loginEmail=strLogin,user.firstName=strFirstName,user.lastName=strLastName,user.password=strPassword,user.language="en",user.companyId=companyId,user.adminType="undefined",user.isActive=!0,user.isInitialized=!0,tags&&(user.tags=tags&&Array.isArray(tags)?tags:[tags]);return await adminUserService.createUser(user)}async createUserForCompanyDeprecated(strLogin,strFirstName,strLastName,strPassword,companyId,tags){const User=_User.get(this),adminUserService=_adminUserService.get(this),user=User.create();user.loginEmail=strLogin,user.firstName=strFirstName,user.lastName=strLastName,user.password=strPassword,user.language="en",user.companyId=companyId,user.adminType="undefined",user.isActive=!0,user.isInitialized=!0,tags&&(user.tags=tags&&Array.isArray(tags)?tags:[tags]);return await adminUserService.createUser(user)}async removeUserFromCompany(user){const adminUserService=_adminUserService.get(this);return await adminUserService.deleteUser(user)}async fetchUsersByPattern(searchPattern,page=1,pageSize=10){const adminUserService=_adminUserService.get(this);return await adminUserService.getUsers(null,page,pageSize,searchPattern,!1,null,!1)}async fetchUsersByTag(tag,page=1,pageSize=10){const adminUserService=_adminUserService.get(this);return await adminUserService.getUsers(null,page,pageSize,"",!1,null,!1,tag)}async updateUserTags(user,tags){const adminUserService=_adminUserService.get(this);if(!user)throw new Error(this.logService+"[updateUserTags] :: Error: parameter 'user' is missing or null");if(!user.id)throw new Error(this.logService+"[updateUserTags] :: Error: parameter 'user.id' is missing or null");if(tags instanceof Array!=!0)throw new Error(this.logService+"[updateUserTags] :: Error: parameter 'tags' must be an array");if(tags instanceof Array&&(tags.length<1||tags.length>5))throw new Error(this.logService+"[updateUserTags] :: Error: parameter 'tags' must be an array with at least 1 and maximum 5 elements");return user.tags=tags,await adminUserService.updateUser(user)}async setVisibilityForCompany(company,visibleByCompany){const adminCompanyService=_adminCompanyService.get(this);return await adminCompanyService.addVisibility(company.id,visibleByCompany.id)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),sdkConstant_1=__webpack_require__(39),sdkConfig_1=__webpack_require__(40),channel_sdk_1=__webpack_require__(505),contact_service_1=__webpack_require__(6),channel_service_1=__webpack_require__(322),logger_service_1=__webpack_require__(4),_$rootScope=new WeakMap;class ChannelsService{constructor($rootScope){this.contactService=contact_service_1.ContactService.getInstance(),this.channelService=channel_service_1.ChannelService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.RAINBOW_ONCHANNELUPDATED="rainbowchannelupdate",this.RAINBOW_ONCHANNELMESSAGERECEIVED="rainbowchannelmessagereceived",this.RAINBOW_ONCHANNELRETRACTMESSAGERECEIVED="rainbowchannelretractmessage",this.RAINBOW_ONCHANNELDELETED="rainbowchanneldeleted",this.RAINBOW_ONCHANNELAVATARUPDATED="rainbowchannelavatarupdate",this.RAINBOW_ONCHANNELUSERSUBSCRIBED="rainbowchannelusersubscribed",this.RAINBOW_ONCHANNELUSERUNSUBSCRIBED="rainbowchanneluserunsubscribed",_$rootScope.set(this,$rootScope),this.channelService.subscribe(event=>{"CHANNEL_USERS_UPDATE_EVENT"===event.name&&this.onChannelUsersUpdated(event.data.channelId,event.data.users),"CHANNEL_MESSAGE_RECEIVED"===event.name&&this.onMessageReceived(event.data.action,event.data.message)}),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_UPDATE_EVENT",(event,updateType,id)=>this.onChannelUpdated(event,updateType,id))),$rootScope.$on("$destroy",$rootScope.$on("ON_UPDATE_CHANNEL_AVATAR",(event,id)=>this.onChannelAvatarUpdated(event,id))),$rootScope.$on("$destroy",$rootScope.$on("CHANNEL_USER_SUBSCRIPTION_EVENT",(event,userType,channelId,userId)=>this.onUserSubscriptionChange(event,userType,channelId,userId)))}static get $inject(){return["$rootScope"]}onMessageReceived(messageType,message){const channelId=message&&message.channelId?message.channelId:message;this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onMessageReceived"),this.fetchChannel(channelId).then(channel=>{0===messageType?EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELMESSAGERECEIVED,message):(this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onMessageReceived - retracted message"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELRETRACTMESSAGERECEIVED,{channel:channel,message:message}))})}onChannelUpdated(__event,updateType,id){this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT: onChannelUpdated("+updateType+") id:"+id),3!==updateType?this.fetchChannel(id).then(channel=>{EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELUPDATED,{channel:channel,updateType:updateType})}):EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELDELETED,id)}onChannelUsersUpdated(id,users){this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onChannelUsersUpdated:"+id),this.fetchChannel(id).then(channel=>{EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELUPDATED,{channel:channel,users:users})})}onChannelAvatarUpdated(__event,id){this.fetchChannel(id).then(channel=>{this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onChannelAvatarUpdated"+channel.id),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELAVATARUPDATED,channel)})}onUserSubscriptionChange(__event,userType,channelId,userId){let channel=null;this.fetchChannel(channelId).then(channelFound=>(channel=channelFound,this.contactService.getContactByDBId(userId,!0))).then(user=>{user=user||userId,4===userType?(this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onUserSubscriptionChange: user subscribed to a channel: "+channelId),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELUSERSUBSCRIBED,{channel:channel,user:user})):(this.rainbowLogger.sdk(ChannelsService.logService+"[ChannelsService] :: EVENT onUserSubscriptionChange: user unsubscribed from a channel: "+channelId),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONCHANNELUSERUNSUBSCRIBED,{channel:channel,user:user}))})}async fetchMyChannels(){const channels=await this.channelService.getMyChannels();return sdkConfig_1.sdkConfig.newModels?channels.map(channel=>new channel_sdk_1.ChannelSDK(channel)):await this.channelService.getMyChannels()}async createPublicChannel(channelName,channelTopic="",category=""){if(this.rainbowLogger.sdk(ChannelsService.logService+"[createPublicChannel] :: Trying to create a new public channel"),!channelName)throw new Error("Parameter 'channelName' is missing or empty");const channel=await this.channelService.createChannel(channelName,"company_public",channelTopic,category,!1);return this.rainbowLogger.sdk(ChannelsService.logService+"[createPublicChannel] :: Public Channel created: "+channel.id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(channel):channel}async createClosedChannel(channelName,channelTopic="",category=""){if(this.rainbowLogger.sdk(ChannelsService.logService+"[createClosedChannel] :: Trying to create a new closed channel"),!channelName)throw new Error("Parameter 'channelName' is missing or empty");const channel=await this.channelService.createChannel(channelName,"company_closed",channelTopic,category,!1);return this.rainbowLogger.sdk(ChannelsService.logService+"[createClosedChannel] :: created: "+channel.id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(channel):channel}async deleteChannel(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[deleteChannel] :: Trying to delete a channel"),!id)throw new Error("Parameter 'id' is missing or empty");return await this.channelService.deleteChannel(id),this.rainbowLogger.sdk(ChannelsService.logService+"[deleteChannel] :: deleted: "+id),{code:sdkConstant_1.SDK.OK,label:"OK"}}async fetchChannelsByName(name){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByName] :: Trying to fetch channels by name"),!name)throw new Error("Parameter 'name' is missing or empty");const filter={};filter.name=name;const channels=await this.channelService.findChannels(filter);return this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByName] :: fetched: "+channels.length),sdkConfig_1.sdkConfig.newModels?channels.map(channel=>new channel_sdk_1.ChannelSDK(channel)):channels}async fetchChannelsByTopic(topic){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByTopic] :: Trying to fetch channels by topic"),!topic)throw new Error("Parameter 'topic' is missing or empty");const filter={};filter.topic=topic;const channels=await this.channelService.findChannels(filter);return this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByTopic] :: fetched: "+channels.length),sdkConfig_1.sdkConfig.newModels?channels.map(channel=>new channel_sdk_1.ChannelSDK(channel)):channels}async fetchChannelsByCategory(category){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByCategory] :: Trying to fetch channels by category"),!category)throw new Error("Parameter 'category' is missing or empty");const filter={};filter.category=category;const channels=await this.channelService.findChannels(filter);return this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannelsByCategory] :: fetched: "+channels.length),sdkConfig_1.sdkConfig.newModels?channels.map(channel=>new channel_sdk_1.ChannelSDK(channel)):channels}async fetchChannel(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannel] :: Trying to fetch a channel..."),!id)throw new Error("Parameter 'id' is missing or empty");const channel=await this.channelService.getChannel(id);return this.rainbowLogger.sdk(ChannelsService.logService+"[fetchChannel] :: fetched: "+channel.id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(channel):channel}async createItem(channelId,message,title,itemType){if(this.rainbowLogger.sdk(ChannelsService.logService+"[createItem] :: Trying to create item"),!channelId)throw new Error("Parmeter 'channelId' is missing or empty");if(!message)throw new Error("Parmeter 'message' is missing or empty");if(itemType&&-1===["basic","markdown","html","data"].indexOf(itemType))throw new Error("Parameter 'itemType' could be 'basic', 'markdown', 'html' or 'data'");return title=title||"",itemType=itemType?"urn:xmpp:channels:"+itemType:"urn:xmpp:channels:basic",await this.channelService.publishToChannel(channelId,null,itemType,message,title,null,null,null),this.rainbowLogger.sdk(ChannelsService.logService+"[createItem] :: created: "+channelId),{code:sdkConstant_1.SDK.OK,label:"OK"}}async subscribeToChannelById(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[subscribeToChannelById] :: Trying to subscribe to a channel..."),!id)throw new Error("Parameter 'id' is missing or null");const channel=this.channelService.getChannelFromCache(id);if(channel)await this.channelService.subscribeToChannel(channel),this.rainbowLogger.sdk(ChannelsService.logService+"[subscribeToChannelById] :: subscribed: "+id);else{const channelFound=await this.channelService.getChannel(id);if(!channelFound)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"No channel found with id "+id};await this.channelService.subscribeToChannel(channelFound),this.rainbowLogger.sdk(ChannelsService.logService+"[subscribeToChannelById] :: subscribed: "+id)}return{code:sdkConstant_1.SDK.OK,label:"OK"}}async subscribeToChannel(channel){if(this.rainbowLogger.sdk(ChannelsService.logService+"[subscribeToChannel] :: Trying to subscribe to a channel..."),!channel)throw new Error("Paameter 'channel' is missing or null");await this.channelService.subscribeToChannel(channel)}async unsubscribeFromChannelById(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[unsubscribeFromChannelById] :: Trying to unsubscribe from a channel..."),!id)throw new Error("Parameter 'id' is missing or empty");const channel=this.channelService.getChannelFromCache(id);if(channel)await this.channelService.unsubscribeToChannel(channel),this.rainbowLogger.sdk(ChannelsService.logService+"[unsubscribeFromChannelById] :: unsubscribed: "+id);else{const channelFound=await this.channelService.getChannel(id);if(!channelFound)return{code:sdkConstant_1.SDK.ERRORBADREQUEST,label:"No channel found with id "+id};await this.channelService.unsubscribeToChannel(channelFound),this.rainbowLogger.sdk(ChannelsService.logService+"[unsubscribeFromChannelById] :: unsubscribed: "+id)}return{code:sdkConstant_1.SDK.OK,label:"OK"}}async unsubscribeFromChannel(channel){if(this.rainbowLogger.sdk(ChannelsService.logService+"[unsubscribeFromChannel] :: Trying to unsubscribe from a channel..."),!channel)throw new Error("Parameter 'channel' is missing or null");return await this.channelService.unsubscribeToChannel(channel),this.rainbowLogger.sdk(ChannelsService.logService+"[unsubscribeFromChannel] :: unsubscribed: "+channel.id),{code:sdkConstant_1.SDK.OK,label:"OK"}}async updateChannel(id,channelTopic="",visibility="public",maxItems=30,maxPayloadSize=6e4,channelName=null,category=""){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannel] :: Trying to update a channel..."),!id)throw new Error("Parameter 'id' is missing or empty");const options={};null!==channelTopic&&(options.topic=channelTopic),null!==visibility&&(options.mode="company"===visibility?"company_public":"company_closed"),null!==maxItems&&(options.maxItems=maxItems),null!==maxPayloadSize&&(options.maxPayloadSize=maxPayloadSize),null!==channelName&&(options.name=channelName),null!==category&&(options.cateogry=category);const updatedChannel=await this.channelService.updateChannel(id,options);return updatedChannel.visibility=options.visibility,this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannel] :: updated: "+id),updatedChannel}async updateChannelVisibility(id,visibility){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibility] :: Trying to update visibility of a channel..."),!id)throw new Error("Parameter 'id' is missing or empty");if(!visibility)throw new Error("Parameter 'visibility' is missing or empty");const options={};null!==visibility&&(options.mode="company"===visibility?"company_public":"company_closed");const updatedChannel=await this.channelService.updateChannel(id,options);return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibility] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelVisibilityToPublic(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibilityToPublic] :: Trying to update visibility to visible for a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const updatedChannel=await this.channelService.updateChannel(id,{mode:"company_public"});return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibilityToPublic] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelVisibilityToClosed(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibilityToPublic] :: Trying to update visibility to visible for a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const updatedChannel=await this.channelService.updateChannel(id,{mode:"company_closed"});return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelVisibilityToPublic] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelName(id,channelName){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelName] :: Trying to update the name of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const options={};null!==channelName&&(options.name=channelName);const updatedChannel=await this.channelService.updateChannel(id,options);return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelName] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelTopic(id,channelTopic){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelTopic] :: Try to update the topic of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const options={};null!==channelTopic&&(options.topic=channelTopic);const updatedChannel=await this.channelService.updateChannel(id,options);return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelTopic] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelCategory(id,category){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelCategory] :: Try to update the category of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const options={};null!==category&&(options.category=category);const updatedChannel=await this.channelService.updateChannel(id,options);return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelCategory] :: updated: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelAvatar(id,urlAvatar){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelAvatar] :: Try to update the avatar of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");if(!urlAvatar)throw new Error("Parameter 'urlAvatar' is missing or empty");const channel=await this.fetchChannel(id);return this.channelService.uploadChannelAvatar(channel,urlAvatar,512),this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelAvatar] :: updated: "+channel.id),{code:sdkConstant_1.SDK.OK,label:"OK"}}async deleteChannelAvatar(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[deleteChannelAvatar] :: Try to delete the avatar of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const channel=await this.fetchChannel(id);return this.channelService.deleteChannelAvatar(channel),this.rainbowLogger.sdk(ChannelsService.logService+"[deleteChannelAvatar] :: updated: "+id),{code:sdkConstant_1.SDK.OK,label:"OK"}}async fetchUsers(id,options){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchUsers] :: Trying to fetch users of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");return(await this.channelService.getChannelUsers(id,options)).data}async deleteAllUsersFromChannel(id){if(this.rainbowLogger.sdk(ChannelsService.logService+"[deleteAllUsersFromChannel] :: Trying to get delete all users of a channel..."),!id)throw new Error("Parameter 'id' is missing or empty");await this.channelService.removeAllUsersFromChannel(id);const updatedChannel=await this.channelService.getChannel(id);return this.rainbowLogger.sdk(ChannelsService.logService+"[deleteAllUsersFromChannel] :: deleted: "+id),sdkConfig_1.sdkConfig.newModels?new channel_sdk_1.ChannelSDK(updatedChannel):updatedChannel}async updateChannelUsers(id,users,userType="member"){if(this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelUsers] :: Trying to update users of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const usersData=await this.channelService.updateChannelUsers(id,users,userType);return this.rainbowLogger.sdk(ChannelsService.logService+"[updateChannelUsers] :: updated: "+id),usersData}async addMembersToChannel(id,users){if(this.rainbowLogger.sdk(ChannelsService.logService+"[addMembersToChannel] :: Trying to add members to a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const usersData=await this.channelService.updateChannelUsers(id,users,"member");return this.rainbowLogger.sdk(ChannelsService.logService+"[addMembersToChannel] :: added: "+id),usersData}async addPublishersToChannel(id,users){if(this.rainbowLogger.sdk(ChannelsService.logService+"[addPublishersToChannel] :: Trying to add publishers to a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const usersData=await this.channelService.updateChannelUsers(id,users,"publisher");return this.rainbowLogger.sdk(ChannelsService.logService+"[addPublishersToChannel] :: added: "+id),usersData}async addOwnersToChannel(id,users){if(this.rainbowLogger.sdk(ChannelsService.logService+"[addOwnersToChannel] :: Trying to add owners to a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const usersData=await this.channelService.updateChannelUsers(id,users,"owner");return this.rainbowLogger.sdk(ChannelsService.logService+"[addOwnersToChannel] :: added: "+id),usersData}async deleteUsersFromChannel(id,users){if(this.rainbowLogger.sdk(ChannelsService.logService+"[deleteUsersFromChannel] :: Trying to delete users from a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const usersData=await this.channelService.updateChannelUsers(id,users,"none");return this.rainbowLogger.sdk(ChannelsService.logService+"[deleteUsersFromChannel] :: deleted: "+id),usersData}async fetchItems(id,maxMessages=10,beforeDate,afterDate){if(this.rainbowLogger.sdk(ChannelsService.logService+"[fetchItems] :: Try to fetch items of a channel"),!id)throw new Error("Parameter 'id' is missing or empty");const messages=this.channelService.getChannelItems(id,maxMessages,beforeDate,afterDate);return this.rainbowLogger.sdk(ChannelsService.logService+"[fetchItems] :: fetched: "+id),messages}async deleteItem(id,itemId){if(this.rainbowLogger.sdk(ChannelsService.logService+"[deleteItem] :: Trying to delete an item."),!id)throw new Error("Parameter 'id' is missing or empty");if(!itemId)throw new Error("Parameter 'itemId' is missing or empty");await this.channelService.deleteChannelItem(id,itemId),this.rainbowLogger.sdk(ChannelsService.logService+"[deleteItem] :: Item deleted: "+itemId)}}ChannelsService.logService="ChannelsService | ",exports.ChannelsService=ChannelsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const EventsService_1=__webpack_require__(28),settings_service_1=__webpack_require__(18),telephonyKeys_service_1=__webpack_require__(319),sdkConfig_1=__webpack_require__(40),webConferenceV2_service_1=__webpack_require__(97),deviceManagement_service_1=__webpack_require__(56),virtualBackground_service_1=__webpack_require__(68),conferenceRecording_service_1=__webpack_require__(506),logger_service_1=__webpack_require__(4),suggestion_service_1=__webpack_require__(507),personal_routines_service_1=__webpack_require__(331),_connectionService=new WeakMap,_configService=new WeakMap,_presenceService=new WeakMap,_contactsService=new WeakMap,_conversationsService=new WeakMap,_imService=new WeakMap,_pbxService=new WeakMap,_webRTCService=new WeakMap,_bubblesService=new WeakMap,_conferencesService=new WeakMap,_groupsService=new WeakMap,_callsLogService=new WeakMap,_userProfileService=new WeakMap,_favoritesService=new WeakMap,_filesStorageService=new WeakMap,_capabilitiesService=new WeakMap,_channelsService=new WeakMap,_sdkAdminService=new WeakMap;exports.SdkService=class{constructor(connectionService,configService,presenceService,contactsService,conversationsService,imService,pbxService,webRTCService,bubblesService,conferencesService,groupsService,callsLogService,userProfileService,favoritesService,filesStorageService,capabilitiesService,channelsService,sdkAdminService){this.settingsService=settings_service_1.SettingsService.getInstance(),this.rainbowLogger=logger_service_1.LoggerService.getInstance(),this.logService="SDKService | ",this.RAINBOW_ONREADY="ready",this.RAINBOW_ONLOADED="loaded",_connectionService.set(this,connectionService),_configService.set(this,configService),_presenceService.set(this,presenceService),_contactsService.set(this,contactsService),_conversationsService.set(this,conversationsService),_imService.set(this,imService),_pbxService.set(this,pbxService),_webRTCService.set(this,webRTCService),_bubblesService.set(this,bubblesService),_conferencesService.set(this,conferencesService),_groupsService.set(this,groupsService),_callsLogService.set(this,callsLogService),_userProfileService.set(this,userProfileService),_favoritesService.set(this,favoritesService),_filesStorageService.set(this,filesStorageService),_capabilitiesService.set(this,capabilitiesService),_channelsService.set(this,channelsService),_sdkAdminService.set(this,sdkAdminService),this.connection=connectionService,this.config=configService,this.presence=presenceService,this.contacts=contactsService,this.conversations=conversationsService,this.im=imService,this.telephony=pbxService,this.telephonyKeys=telephonyKeys_service_1.TelephonyKeysService.getInstance(),this.webRTC=webRTCService,this.bubbles=bubblesService,this.conferences=conferencesService,this.groups=groupsService,this.callsLog=callsLogService,this.userProfile=userProfileService,this.favorites=favoritesService,this.fileStorage=filesStorageService,this.caps=capabilitiesService,this.channels=channelsService,this.admin=sdkAdminService,this.webConference=webConferenceV2_service_1.WebConferenceServiceV2.getInstance(),this.deviceManagement=deviceManagement_service_1.DeviceManagementService.getInstance(),this.virtualBackgrounds=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.conferenceRecording=conferenceRecording_service_1.ConferenceRecordingService.getInstance(),this.suggestionsService=suggestion_service_1.SuggestionsService.getInstance(),this.personalRoutines=personal_routines_service_1.PersonalRoutinesService.getInstance(),this.detectRTC=this.detectRTC.bind(this),this.load=this.load.bind(this),this.ready=this.ready.bind(this),this.initializeAuto=this.initializeAuto.bind(this),this.start=this.start.bind(this)}static get $inject(){return["connectionService","configService","presenceService","contactsService","conversationsService","imService","pbxService","webRTCService","bubblesService","conferencesService","groupsService","callsLogService","userProfileService","favoritesService","filesStorageService","capabilitiesService","channelsService","sdkAdminService"]}version(){return window.sdkversion}mode(){return this.settingsService.getSetting("apiMode")}setVerboseLog(boolHasVerboseLog){return sdkConfig_1.sdkConfig.verboseLog=boolHasVerboseLog,sdkConfig_1.sdkConfig.verboseLog}setKeyFromConfig(strApplicationID,strApplicationSecret){return this.rainbowLogger.sdk(this.logService+"[setKeyFromConfig] :: Linked to application ID "+strApplicationID+" from configuration file"),sdkConfig_1.sdkConfig.credentials.appID=strApplicationID,sdkConfig_1.sdkConfig.credentials.appSecret=strApplicationSecret,!0}hasBeenLaunchedFromConfig(boolFromConfig){const fromConfig=boolFromConfig?"YES":"NO";return this.rainbowLogger.sdk(this.logService+"[hasBeenLaunchedFromConfig] :: SDK launched from a configuration file "+fromConfig),sdk.hasBeenLaunchedFromConfig=boolFromConfig,sdk.hasBeenLaunchedFromConfig}async initialize(strApplicationID,strApplicationSecret){return strApplicationID&&strApplicationID.length>0?(sdk.key.appID=strApplicationID,this.rainbowLogger.sdk(this.logService+"[initialize] :: Initialize the SDK for the application "+sdk.key.appID)):this.rainbowLogger.sdk(this.logService+"[initialize] :: Initialize the SDK without an application key"),strApplicationSecret&&strApplicationSecret.length>0&&(sdk.key.appSecret=strApplicationSecret),await this.detectRTC(),this.rainbowLogger.sdk(this.logService+"[initialize] :: SDK Initialized successfully!"),!0}async detectRTC(){const DetectRTC=window.DetectRTC;await DetectRTC.load(),this.initializeAuto()}load(customConfig){customConfig&&(this.rainbowLogger.sdk(this.logService+"Loading Rainbow Web SDK with custom config"),Object.assign(sdkConfig_1.sdkConfig,customConfig),this.settingsService.setSetting("displayOrder",sdkConfig_1.sdkConfig.displayOrder)),this.start(),this.rainbowLogger.sdk(this.logService+"[load] :: Rainbow SDK loaded!"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONLOADED,null)}ready(){this.rainbowLogger.sdk(this.logService+"[ready] :: Rainbow SDK ready!"),EventsService_1.eventsService.dispatchEvent(this.RAINBOW_ONREADY,null)}initializeAuto(){const sdkversion=window.sdkversion,DetectRTC=window.DetectRTC,config=window.config;this.rainbowLogger.sdk(this.logService+"[initialize ] :: Initializing the Rainbow SDK..."),this.rainbowLogger.sdk(this.logService+"[initialize ] :: -----------------------------"),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Platform    | "+DetectRTC.osName+" "+DetectRTC.osVersion),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Screen      | "+window.screen.width+"x"+window.screen.height),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Cookie      | "+navigator.cookieEnabled),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Server      | "+config.webservices.server),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Version WEB | "+version),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Version SDK | "+sdkversion),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Browser     | "+DetectRTC.browser.name+" "+DetectRTC.browser.fullVersion),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Microphone  | "+DetectRTC.hasMicrophone),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Camera      | "+DetectRTC.hasWebcam),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Speakers    | "+DetectRTC.hasSpeakers),this.rainbowLogger.sdk(this.logService+"[initialize ] :: WebRTC      | "+DetectRTC.isWebRTCSupported),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Mode        | "+this.mode()),this.rainbowLogger.sdk(this.logService+"[initialize ] :: verboseLog  | "+sdkConfig_1.sdkConfig.verboseLog),this.rainbowLogger.sdk(this.logService+"[initialize ] :: appID       | "+sdk.key.appID),this.rainbowLogger.sdk(this.logService+"[initialize ] :: -----------------------------"),this.rainbowLogger.sdk(this.logService+"[initialize ] :: Initialized!"),this.ready()}start(){window.config.webservices.currentServer=window.config.webservices.server}}},function(module,exports){window.version="2.112.12"},function(module,exports){window.sdkversion="v4.0.4-lts"},function(module,exports){window.config={xmpp:{protocol:"wss",server:"sandbox.openrainbow.com",port:"443",pingInterval:"60000"},webservices:{protocol:"https",server:"sandbox.openrainbow.com",port:"443"},cpaas:{protocol:"https",server:"",port:"8887"}}},function(module,exports){window.app=angular.module("rainbow",[]),window.rainbowAdmin=angular.module("rainbowAdmin",[]),window.rainbowModule=angular.module("rainbow",["rainbowAdmin"])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _app_src_services_voiceMessage_voiceMessage_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(123),_app_src_services_phonebook_phonebook_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(153),_app_src_services_bot_bot_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(124),_app_src_services_webrtc_webrtcP2P_service__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(35),_app_src_services_webrtc_webrtcGlobalEventHandler_service__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(154),_app_src_services_telephony_telephony_service__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(57),_app_src_services_deviceManagement_deviceManagement_service__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(56),rainbow_sdk_services_core_logger_service__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(4),_app_src_services_core_ccdAgent_service__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(126),_app_src_services_files_fileServer_service__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(47),_app_src_services_company_company_directory_service__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(125),_app_services_conference_webConferenceService__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(344),_app_services_conference_conferenceService__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(345);angular.module("rainbow").moduleIds=[],__webpack_require__(370),__webpack_require__(156),__webpack_require__(76),__webpack_require__(106),__webpack_require__(380),__webpack_require__(381),__webpack_require__(382),__webpack_require__(383),__webpack_require__(384),__webpack_require__(388),__webpack_require__(141),__webpack_require__(110),__webpack_require__(389),__webpack_require__(108),__webpack_require__(67),__webpack_require__(29),__webpack_require__(102),__webpack_require__(142),__webpack_require__(390),__webpack_require__(391),__webpack_require__(164),__webpack_require__(133),__webpack_require__(392),__webpack_require__(393),__webpack_require__(394),__webpack_require__(395),__webpack_require__(396),__webpack_require__(397),__webpack_require__(398),__webpack_require__(399),__webpack_require__(400),__webpack_require__(166),__webpack_require__(313);_app_src_services_voiceMessage_voiceMessage_service__WEBPACK_IMPORTED_MODULE_0__.VoiceMessageService.getInstance(),rainbow_sdk_services_core_logger_service__WEBPACK_IMPORTED_MODULE_7__.LoggerService.getInstance(),_app_src_services_bot_bot_service__WEBPACK_IMPORTED_MODULE_2__.BotService.getInstance(),_app_src_services_webrtc_webrtcP2P_service__WEBPACK_IMPORTED_MODULE_3__.WebrtcP2PService.getInstance(),_app_src_services_webrtc_webrtcGlobalEventHandler_service__WEBPACK_IMPORTED_MODULE_4__.WebrtcGlobalEventHandlerService.getInstance(),_app_src_services_telephony_telephony_service__WEBPACK_IMPORTED_MODULE_5__.TelephonyService.getInstance(),_app_src_services_deviceManagement_deviceManagement_service__WEBPACK_IMPORTED_MODULE_6__.DeviceManagementService.getInstance(),_app_src_services_phonebook_phonebook_service__WEBPACK_IMPORTED_MODULE_1__.PhonebookService.getInstance(),_app_src_services_core_ccdAgent_service__WEBPACK_IMPORTED_MODULE_8__.CCDAgentService.getInstance();angular.module("rainbow").service("fileServerService",_app_src_services_files_fileServer_service__WEBPACK_IMPORTED_MODULE_9__.FileServerService),angular.module("rainbow").service("companyDirectoryService",_app_src_services_company_company_directory_service__WEBPACK_IMPORTED_MODULE_10__.CompanyDirectoryService),angular.module("rainbow").service("webConferenceService",_app_services_conference_webConferenceService__WEBPACK_IMPORTED_MODULE_11__.WebConferenceService),angular.module("rainbow").service("conferenceService",_app_services_conference_conferenceService__WEBPACK_IMPORTED_MODULE_12__.ConferenceService),__webpack_require__(465),__webpack_require__(466),__webpack_require__(467),__webpack_require__(468),__webpack_require__(469)},function(module,exports,__webpack_require__){"use strict";(function(process,global){var __WEBPACK_AMD_DEFINE_RESULT__;!function(){function retry(isDone,next){var currentTrial=0,isTimeout=!1,id=window.setInterval((function(){isDone()&&(window.clearInterval(id),next(isTimeout)),currentTrial++>50&&(window.clearInterval(id),next(isTimeout=!0))}),10)}var that,browserFakeUserAgent="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";if(isNodejs="object"==typeof process&&"object"==typeof process.versions&&process.versions.node&&!process.browser){var version=process.versions.node.toString().replace("v","");browserFakeUserAgent="Nodejs/"+version+" (NodeOS) AppleWebKit/"+version+" (KHTML, like Gecko) Nodejs/"+version+" Nodejs/"+version}that=void 0!==global?global:window,"undefined"==typeof window&&("undefined"==typeof window&&void 0!==global&&(global.navigator={userAgent:browserFakeUserAgent,getUserMedia:function(){}},that.window=global),"undefined"==typeof location&&(that.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(that.screen={width:0,height:0}));var navigator=window.navigator;void 0!==navigator?(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia)):navigator={getUserMedia:function(){},userAgent:browserFakeUserAgent};var ua,match,isMobileDevice=!!/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent||""),isEdge=!(-1===navigator.userAgent.indexOf("Edge")||!navigator.msSaveOrOpenBlob&&!navigator.msSaveBlob),isOpera=!!window.opera||navigator.userAgent.indexOf(" OPR/")>=0,isFirefox=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),isChrome=!!window.chrome&&!isOpera,isIE="undefined"!=typeof document&&!!document.documentMode&&!isEdge,isMobile={Android:function(){return navigator.userAgent.match(/Android/i)},BlackBerry:function(){return navigator.userAgent.match(/BlackBerry|BB10/i)},iOS:function(){return navigator.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return navigator.userAgent.match(/Opera Mini/i)},Windows:function(){return navigator.userAgent.match(/IEMobile/i)},any:function(){return isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Opera()||isMobile.Windows()},getOsName:function(){var osName="Unknown OS";return isMobile.Android()&&(osName="Android"),isMobile.BlackBerry()&&(osName="BlackBerry"),isMobile.iOS()&&(osName="iOS"),isMobile.Opera()&&(osName="Opera Mini"),isMobile.Windows()&&(osName="Windows"),osName}},osName="Unknown OS",osVersion="Unknown OS Version",osInfo=function(){for(var cs,nVer=navigator.appVersion,nAgt=navigator.userAgent,os="-",clientStrings=[{s:"Chrome OS",r:/CrOS/},{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}],i=0;cs=clientStrings[i];i++)if(cs.r.test(nAgt)){os=cs.s;break}var osVersion="-";switch(/Windows/.test(os)&&(/Windows (.*)/.test(os)&&(osVersion=/Windows (.*)/.exec(os)[1]),os="Windows"),os){case"Mac OS X":/Mac OS X (10[\.\_\d]+)/.test(nAgt)&&(osVersion=/Mac OS X (10[\.\_\d]+)/.exec(nAgt)[1]);break;case"Android":/Android ([\.\_\d]+)/.test(nAgt)&&(osVersion=/Android ([\.\_\d]+)/.exec(nAgt)[1]);break;case"iOS":/OS (\d+)_(\d+)_?(\d+)?/.test(nAgt)&&(osVersion=(osVersion=/OS (\d+)_(\d+)_?(\d+)?/.exec(nVer))[1]+"."+osVersion[2]+"."+(0|osVersion[3]))}return{osName:os,osVersion:osVersion}}();osInfo&&osInfo.osName&&"-"!=osInfo.osName?(osName=osInfo.osName,osVersion=osInfo.osVersion):isMobile.any()&&("Android"==(osName=isMobile.getOsName())&&(osVersion=!!(match=(ua=(ua||navigator.userAgent).toLowerCase()).match(/android\s([0-9\.]*)/))&&match[1]));var isNodejs="object"==typeof process&&"object"==typeof process.versions&&process.versions.node;"Unknown OS"===osName&&isNodejs&&(osName="Nodejs",osVersion=process.versions.node.toString().replace("v",""));var isCanvasSupportsStreamCapturing=!1,isVideoSupportsStreamCapturing=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach((function(item){"undefined"!=typeof document&&"function"==typeof document.createElement&&(!isCanvasSupportsStreamCapturing&&item in document.createElement("canvas")&&(isCanvasSupportsStreamCapturing=!0),!isVideoSupportsStreamCapturing&&item in document.createElement("video")&&(isVideoSupportsStreamCapturing=!0))}));var regexIpv4Local=/^(192\.168\.|169\.254\.|10\.|172\.(1[6-9]|2\d|3[01]))/,regexIpv4=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,regexIpv6=/[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/,MediaDevices=[],audioInputDevices=[],audioOutputDevices=[],videoInputDevices=[];navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&(navigator.enumerateDevices=function(callback){var enumerateDevices=navigator.mediaDevices.enumerateDevices();enumerateDevices&&enumerateDevices.then?navigator.mediaDevices.enumerateDevices().then(callback).catch((function(){callback([])})):callback([])});var canEnumerate=!1;("undefined"!=typeof MediaStreamTrack&&"getSources"in MediaStreamTrack||navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)&&(canEnumerate=!0);var hasMicrophone=!1,hasSpeakers=!1,hasWebcam=!1,isWebsiteHasMicrophonePermissions=!1,isWebsiteHasWebcamPermissions=!1,DetectRTC=window.DetectRTC||{};DetectRTC.browser=function(){var nameOffset,verOffset,ix,nAgt=(navigator.appVersion,navigator.userAgent),browserName=navigator.appName,fullVersion=""+parseFloat(navigator.appVersion),majorVersion=parseInt(navigator.appVersion,10);if(isOpera){browserName="Opera";try{majorVersion=(fullVersion=navigator.userAgent.split("OPR/")[1].split(" ")[0]).split(".")[0]}catch(e){fullVersion="0.0.0.0",majorVersion=0}}else isIE?((verOffset=nAgt.indexOf("rv:"))>0?fullVersion=nAgt.substring(verOffset+3):(verOffset=nAgt.indexOf("MSIE"),fullVersion=nAgt.substring(verOffset+5)),browserName="IE"):isChrome?(verOffset=nAgt.indexOf("Chrome"),browserName="Chrome",fullVersion=nAgt.substring(verOffset+7)):isSafari?-1!==nAgt.indexOf("CriOS")?(verOffset=nAgt.indexOf("CriOS"),browserName="Chrome",fullVersion=nAgt.substring(verOffset+6)):-1!==nAgt.indexOf("FxiOS")?(verOffset=nAgt.indexOf("FxiOS"),browserName="Firefox",fullVersion=nAgt.substring(verOffset+6)):(verOffset=nAgt.indexOf("Safari"),browserName="Safari",fullVersion=nAgt.substring(verOffset+7),-1!==(verOffset=nAgt.indexOf("Version"))&&(fullVersion=nAgt.substring(verOffset+8)),-1!==navigator.userAgent.indexOf("Version/")&&(fullVersion=navigator.userAgent.split("Version/")[1].split(" ")[0])):isFirefox?(verOffset=nAgt.indexOf("Firefox"),browserName="Firefox",fullVersion=nAgt.substring(verOffset+8)):(nameOffset=nAgt.lastIndexOf(" ")+1)<(verOffset=nAgt.lastIndexOf("/"))&&(browserName=nAgt.substring(nameOffset,verOffset),fullVersion=nAgt.substring(verOffset+1),browserName.toLowerCase()===browserName.toUpperCase()&&(browserName=navigator.appName));return isEdge&&(browserName="Edge",fullVersion=navigator.userAgent.split("Edge/")[1]),-1!==(ix=fullVersion.search(/[; \)]/))&&(fullVersion=fullVersion.substring(0,ix)),majorVersion=parseInt(""+fullVersion,10),isNaN(majorVersion)&&(fullVersion=""+parseFloat(navigator.appVersion),majorVersion=parseInt(navigator.appVersion,10)),{fullVersion:fullVersion,version:majorVersion,name:browserName,isPrivateBrowsing:!1}}(),function(callback){var isPrivate;try{if(window.webkitRequestFileSystem)window.webkitRequestFileSystem(window.TEMPORARY,1,(function(){isPrivate=!1}),(function(e){isPrivate=!0}));else if(window.indexedDB&&/Firefox/.test(window.navigator.userAgent)){var db;try{(db=window.indexedDB.open("test")).onerror=function(){return!0}}catch(e){isPrivate=!0}void 0===isPrivate&&retry((function(){return"done"===db.readyState}),(function(isTimeout){isTimeout||(isPrivate=!db.result)}))}else if(function(userAgent){var ua=userAgent.toLowerCase();if(0===ua.indexOf("msie")&&0===ua.indexOf("trident"))return!1;var match=/(?:msie|rv:)\s?([\d\.]+)/.exec(ua);return!!(match&&parseInt(match[1],10)>=10)}(window.navigator.userAgent)){isPrivate=!1;try{window.indexedDB||(isPrivate=!0)}catch(e){isPrivate=!0}}else if(window.localStorage&&/Safari/.test(window.navigator.userAgent)){try{window.localStorage.setItem("test",1)}catch(e){isPrivate=!0}void 0===isPrivate&&(isPrivate=!1,window.localStorage.removeItem("test"))}}catch(e){isPrivate=!1}retry((function(){return void 0!==isPrivate}),(function(isTimeout){callback(isPrivate)}))}((function(isPrivateBrowsing){DetectRTC.browser.isPrivateBrowsing=!!isPrivateBrowsing})),DetectRTC.browser["is"+DetectRTC.browser.name]=!0,DetectRTC.osName=osName,DetectRTC.osVersion=osVersion;var isWebRTCSupported=("object"==typeof process&&"object"==typeof process.versions&&process.versions["node-webkit"],!1);["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCIceGatherer"].forEach((function(item){isWebRTCSupported||item in window&&(isWebRTCSupported=!0)})),DetectRTC.isWebRTCSupported=isWebRTCSupported,DetectRTC.isORTCSupported="undefined"!=typeof RTCIceGatherer;var isScreenCapturingSupported=!1;((DetectRTC.browser.isChrome&&DetectRTC.browser.version>=35||DetectRTC.browser.isFirefox&&DetectRTC.browser.version>=34||DetectRTC.browser.isEdge&&DetectRTC.browser.version>=17||"Android"===DetectRTC.osName&&DetectRTC.browser.isChrome)&&(isScreenCapturingSupported=!0),(navigator.getDisplayMedia||navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)&&(isScreenCapturingSupported=!0),/^(https:|chrome-extension:)$/g.test(location.protocol||""))||("undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(DetectRTC.browser.isChrome||DetectRTC.browser.isEdge||DetectRTC.browser.isOpera)||DetectRTC.browser.isFirefox)&&(isScreenCapturingSupported=!1);DetectRTC.isScreenCapturingSupported=isScreenCapturingSupported;var webAudio={isSupported:!1,isCreateMediaStreamSourceSupported:!1};["AudioContext","webkitAudioContext","mozAudioContext","msAudioContext"].forEach((function(item){webAudio.isSupported||item in window&&(webAudio.isSupported=!0,window[item]&&"createMediaStreamSource"in window[item].prototype&&(webAudio.isCreateMediaStreamSourceSupported=!0))})),DetectRTC.isAudioContextSupported=webAudio.isSupported,DetectRTC.isCreateMediaStreamSourceSupported=webAudio.isCreateMediaStreamSourceSupported;var isRtpDataChannelsSupported=!1;DetectRTC.browser.isChrome&&DetectRTC.browser.version>31&&(isRtpDataChannelsSupported=!0),DetectRTC.isRtpDataChannelsSupported=isRtpDataChannelsSupported;var isSCTPSupportd=!1;(DetectRTC.browser.isFirefox&&DetectRTC.browser.version>28||DetectRTC.browser.isChrome&&DetectRTC.browser.version>25||DetectRTC.browser.isOpera&&DetectRTC.browser.version>=11)&&(isSCTPSupportd=!0),DetectRTC.isSctpDataChannelsSupported=isSCTPSupportd,DetectRTC.isMobileDevice=isMobileDevice;var isGetUserMediaSupported=!1;(navigator.getUserMedia||navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)&&(isGetUserMediaSupported=!0),DetectRTC.browser.isChrome&&DetectRTC.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&"undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(isGetUserMediaSupported="Requires HTTPs"),"Nodejs"===DetectRTC.osName&&(isGetUserMediaSupported=!1),DetectRTC.isGetUserMediaSupported=isGetUserMediaSupported;var w,h,r,displayResolution="";screen.width&&(displayResolution+=(screen.width?screen.width:"")+" x "+(screen.height?screen.height:""));DetectRTC.displayResolution=displayResolution,DetectRTC.displayAspectRatio=(w=screen.width,h=screen.height,r=function gcd(a,b){return 0==b?a:gcd(b,a%b)}(w,h),w/r/(h/r)).toFixed(2),DetectRTC.isCanvasSupportsStreamCapturing=isCanvasSupportsStreamCapturing,DetectRTC.isVideoSupportsStreamCapturing=isVideoSupportsStreamCapturing,"Chrome"==DetectRTC.browser.name&&DetectRTC.browser.version>=53&&(DetectRTC.isCanvasSupportsStreamCapturing||(DetectRTC.isCanvasSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features"),DetectRTC.isVideoSupportsStreamCapturing||(DetectRTC.isVideoSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features")),DetectRTC.DetectLocalIPAddress=function(callback,stream){if(DetectRTC.isWebRTCSupported){var isPublic=!0,isIpv4=!0;!function(callback,stream){function handleCandidate(candidate){if(candidate){var match=regexIpv4.exec(candidate);if(match){var ipAddress=match[1],isPublic=candidate.match(regexIpv4Local);void 0===ipDuplicates[ipAddress]&&callback(ipAddress,isPublic,!0),ipDuplicates[ipAddress]=!0}}else callback()}function afterCreateOffer(){pc.localDescription.sdp.split("\n").forEach((function(line){line&&0===line.indexOf("a=candidate:")&&handleCandidate(line)}))}if("undefined"!=typeof document&&"function"==typeof document.getElementById){var ipDuplicates={},RTCPeerConnection=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;if(!RTCPeerConnection){var iframe=document.getElementById("iframe");if(!iframe)return;var win=iframe.contentWindow;RTCPeerConnection=win.RTCPeerConnection||win.mozRTCPeerConnection||win.webkitRTCPeerConnection}if(RTCPeerConnection){var peerConfig=null;"Chrome"===DetectRTC.browser&&DetectRTC.browser.version<58&&(peerConfig={optional:[{RtpDataChannels:!0}]});var pc=new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]},peerConfig);if(stream&&(pc.addStream?pc.addStream(stream):pc.addTrack&&stream.getTracks()[0]&&pc.addTrack(stream.getTracks()[0],stream)),pc.onicecandidate=function(event){event.candidate&&event.candidate.candidate?handleCandidate(event.candidate.candidate):handleCandidate()},!stream)try{pc.createDataChannel("sctp",{})}catch(e){}DetectRTC.isPromisesSupported?pc.createOffer().then((function(result){pc.setLocalDescription(result).then(afterCreateOffer)})):pc.createOffer((function(result){pc.setLocalDescription(result,afterCreateOffer,(function(){}))}),(function(){}))}}}((function(ip){ip?ip.match(regexIpv4Local)?callback("Local: "+ip,isPublic=!1,isIpv4):ip.match(regexIpv6)?callback("Public: "+ip,isPublic,isIpv4=!1):callback("Public: "+ip,isPublic,isIpv4):callback()}),stream)}},DetectRTC.isWebSocketsSupported="WebSocket"in window&&2===window.WebSocket.CLOSING,DetectRTC.isWebSocketsBlocked=!DetectRTC.isWebSocketsSupported,"Nodejs"===DetectRTC.osName&&(DetectRTC.isWebSocketsSupported=!0,DetectRTC.isWebSocketsBlocked=!1),DetectRTC.checkWebSocketsSupport=function(callback){callback=callback||function(){};try{var starttime,websocket=new WebSocket("wss://echo.websocket.org:443/");websocket.onopen=function(){DetectRTC.isWebSocketsBlocked=!1,starttime=(new Date).getTime(),websocket.send("ping")},websocket.onmessage=function(){DetectRTC.WebsocketLatency=(new Date).getTime()-starttime+"ms",callback(),websocket.close(),websocket=null},websocket.onerror=function(){DetectRTC.isWebSocketsBlocked=!0,callback()}}catch(e){DetectRTC.isWebSocketsBlocked=!0,callback()}},DetectRTC.load=function(callback){(function(callback){if(canEnumerate)if(!navigator.enumerateDevices&&window.MediaStreamTrack&&window.MediaStreamTrack.getSources&&(navigator.enumerateDevices=window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack)),!navigator.enumerateDevices&&navigator.enumerateDevices&&(navigator.enumerateDevices=navigator.enumerateDevices.bind(navigator)),navigator.enumerateDevices){MediaDevices=[],audioInputDevices=[],audioOutputDevices=[],videoInputDevices=[],hasMicrophone=!1,hasSpeakers=!1,hasWebcam=!1,isWebsiteHasMicrophonePermissions=!1,isWebsiteHasWebcamPermissions=!1;var alreadyUsedDevices={};navigator.enumerateDevices((function(devices){MediaDevices=[],audioInputDevices=[],audioOutputDevices=[],videoInputDevices=[],devices.forEach((function(_device){var device={};for(var d in _device)try{"function"!=typeof _device[d]&&(device[d]=_device[d])}catch(e){}alreadyUsedDevices[device.deviceId+device.label+device.kind]||("audio"===device.kind&&(device.kind="audioinput"),"video"===device.kind&&(device.kind="videoinput"),device.deviceId||(device.deviceId=device.id),device.id||(device.id=device.deviceId),device.label?("videoinput"!==device.kind||isWebsiteHasWebcamPermissions||(isWebsiteHasWebcamPermissions=!0),"audioinput"!==device.kind||isWebsiteHasMicrophonePermissions||(isWebsiteHasMicrophonePermissions=!0)):(device.isCustomLabel=!0,"videoinput"===device.kind?device.label="Camera "+(videoInputDevices.length+1):"audioinput"===device.kind?device.label="Microphone "+(audioInputDevices.length+1):"audiooutput"===device.kind?device.label="Speaker "+(audioOutputDevices.length+1):device.label="Please invoke getUserMedia once.",void 0!==DetectRTC&&DetectRTC.browser.isChrome&&DetectRTC.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&"undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(device.label="HTTPs is required to get label of this "+device.kind+" device.")),"audioinput"===device.kind&&(hasMicrophone=!0,-1===audioInputDevices.indexOf(device)&&audioInputDevices.push(device)),"audiooutput"===device.kind&&(hasSpeakers=!0,-1===audioOutputDevices.indexOf(device)&&audioOutputDevices.push(device)),"videoinput"===device.kind&&(hasWebcam=!0,-1===videoInputDevices.indexOf(device)&&videoInputDevices.push(device)),MediaDevices.push(device),alreadyUsedDevices[device.deviceId+device.label+device.kind]=device)})),void 0!==DetectRTC&&(DetectRTC.MediaDevices=MediaDevices,DetectRTC.hasMicrophone=hasMicrophone,DetectRTC.hasSpeakers=hasSpeakers,DetectRTC.hasWebcam=hasWebcam,DetectRTC.isWebsiteHasWebcamPermissions=isWebsiteHasWebcamPermissions,DetectRTC.isWebsiteHasMicrophonePermissions=isWebsiteHasMicrophonePermissions,DetectRTC.audioInputDevices=audioInputDevices,DetectRTC.audioOutputDevices=audioOutputDevices,DetectRTC.videoInputDevices=videoInputDevices),callback&&callback()}))}else callback&&callback();else callback&&callback()})(callback=callback||function(){})},DetectRTC.MediaDevices=void 0!==MediaDevices?MediaDevices:[],DetectRTC.hasMicrophone=hasMicrophone,DetectRTC.hasSpeakers=hasSpeakers,DetectRTC.hasWebcam=hasWebcam,DetectRTC.isWebsiteHasWebcamPermissions=isWebsiteHasWebcamPermissions,DetectRTC.isWebsiteHasMicrophonePermissions=isWebsiteHasMicrophonePermissions,DetectRTC.audioInputDevices=audioInputDevices,DetectRTC.audioOutputDevices=audioOutputDevices,DetectRTC.videoInputDevices=videoInputDevices;var isSetSinkIdSupported=!1;"undefined"!=typeof document&&"function"==typeof document.createElement&&"setSinkId"in document.createElement("video")&&(isSetSinkIdSupported=!0),DetectRTC.isSetSinkIdSupported=isSetSinkIdSupported;var isRTPSenderReplaceTracksSupported=!1;DetectRTC.browser.isFirefox&&"undefined"!=typeof mozRTCPeerConnection?"getSenders"in mozRTCPeerConnection.prototype&&(isRTPSenderReplaceTracksSupported=!0):DetectRTC.browser.isChrome&&"undefined"!=typeof webkitRTCPeerConnection&&"getSenders"in webkitRTCPeerConnection.prototype&&(isRTPSenderReplaceTracksSupported=!0),DetectRTC.isRTPSenderReplaceTracksSupported=isRTPSenderReplaceTracksSupported;var isRemoteStreamProcessingSupported=!1;DetectRTC.browser.isFirefox&&DetectRTC.browser.version>38&&(isRemoteStreamProcessingSupported=!0),DetectRTC.isRemoteStreamProcessingSupported=isRemoteStreamProcessingSupported;var isApplyConstraintsSupported=!1;"undefined"!=typeof MediaStreamTrack&&"applyConstraints"in MediaStreamTrack.prototype&&(isApplyConstraintsSupported=!0),DetectRTC.isApplyConstraintsSupported=isApplyConstraintsSupported;var isMultiMonitorScreenCapturingSupported=!1;DetectRTC.browser.isFirefox&&DetectRTC.browser.version>=43&&(isMultiMonitorScreenCapturingSupported=!0),DetectRTC.isMultiMonitorScreenCapturingSupported=isMultiMonitorScreenCapturingSupported,DetectRTC.isPromisesSupported=!!("Promise"in window),DetectRTC.version="1.4.0",void 0===DetectRTC&&(window.DetectRTC={});var MediaStream=window.MediaStream;void 0===MediaStream&&"undefined"!=typeof webkitMediaStream&&(MediaStream=webkitMediaStream),DetectRTC.MediaStream=void 0!==MediaStream&&"function"==typeof MediaStream&&Object.keys(MediaStream.prototype),"undefined"!=typeof MediaStreamTrack?DetectRTC.MediaStreamTrack=Object.keys(MediaStreamTrack.prototype):DetectRTC.MediaStreamTrack=!1;var RTCPeerConnection=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;DetectRTC.RTCPeerConnection=void 0!==RTCPeerConnection&&Object.keys(RTCPeerConnection.prototype),window.DetectRTC=DetectRTC,module.exports=DetectRTC,void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return DetectRTC}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()}).call(this,__webpack_require__(371),__webpack_require__(134))},function(module,exports){var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(fun){if(cachedSetTimeout===setTimeout)return setTimeout(fun,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(fun,0);try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=runTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,function(marker){if(cachedClearTimeout===clearTimeout)return clearTimeout(marker);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(marker);try{cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(name){return[]},process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Subscriber_1=__webpack_require__(95);exports.canReportError=function(observer){for(;observer;){var _a=observer,closed_1=_a.closed,destination=_a.destination,isStopped=_a.isStopped;if(closed_1||isStopped)return!1;observer=destination&&destination instanceof Subscriber_1.Subscriber?destination:null}return!0}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isArray=Array.isArray||function(x){return x&&"number"==typeof x.length}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isObject=function(x){return null!==x&&"object"==typeof x}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var UnsubscriptionErrorImpl=function(){function UnsubscriptionErrorImpl(errors){return Error.call(this),this.message=errors?errors.length+" errors occurred during unsubscription:\n"+errors.map((function(err,i){return i+1+") "+err.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=errors,this}return UnsubscriptionErrorImpl.prototype=Object.create(Error.prototype),UnsubscriptionErrorImpl}();exports.UnsubscriptionError=UnsubscriptionErrorImpl},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Subscriber_1=__webpack_require__(95),rxSubscriber_1=__webpack_require__(137),Observer_1=__webpack_require__(158);exports.toSubscriber=function(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber_1.Subscriber)return nextOrObserver;if(nextOrObserver[rxSubscriber_1.rxSubscriber])return nextOrObserver[rxSubscriber_1.rxSubscriber]()}return nextOrObserver||error||complete?new Subscriber_1.Subscriber(nextOrObserver,error,complete):new Subscriber_1.Subscriber(Observer_1.empty)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.observable="function"==typeof Symbol&&Symbol.observable||"@@observable"},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var identity_1=__webpack_require__(379);function pipeFromArray(fns){return 0===fns.length?identity_1.identity:1===fns.length?fns[0]:function(input){return fns.reduce((function(prev,fn){return fn(prev)}),input)}}exports.pipe=function(){for(var fns=[],_i=0;_i<arguments.length;_i++)fns[_i]=arguments[_i];return pipeFromArray(fns)},exports.pipeFromArray=pipeFromArray},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.identity=function(x){return x}},function(module,exports){angular.module("rainbow").factory("CompanyRequest",[function(){"use strict";function CompanyRequest(id,requestingUserId,requestingUserLoginEmail,requestedCompanyId,requestedCompanyName,status,requestingDate,requestedNotificationLanguage,lastNotificationDate,requestedToCompanyAdmin,requestedCompanyInvitationId){this.id=id,this.requestingUserId=requestingUserId,this.requestingUserLoginEmail=requestingUserLoginEmail,this.requestedCompanyId=requestedCompanyId,this.requestedCompanyName=requestedCompanyName,this.status=status,this.requestingDate=requestingDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.lastNotificationDate=lastNotificationDate,this.requestedToCompanyAdmin=requestedToCompanyAdmin,this.requestedCompanyInvitationId=requestedCompanyInvitationId}return CompanyRequest.createFromData=function(data){return new CompanyRequest(data.id,data.requestingUserId,data.requestingUserLoginEmail,data.requestedCompanyId,data.requestedCompanyName,data.status,data.requestingDate,data.requestedNotificationLanguage,data.lastNotificationDate,data.requestedToCompanyAdmin,data.requestedCompanyInvitationId)},CompanyRequest}])},function(module,exports){angular.module("rainbow").factory("CompanyBpLinkInvitation",[function(){"use strict";function CompanyBpLinkInvitation(id,invitedCompanyId,invitedCompanyName,invitedToBeBpIr,invitingAdminId,invitingAdminLoginEmail,invitingCompanyId,invitingCompanyName,invitationDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,cancelationDate,declinationDate){this.id=id,this.invitedCompanyId=invitedCompanyId,this.invitedCompanyName=invitedCompanyName,this.invitedToBeBpIr=invitedToBeBpIr,this.invitingAdminId=invitingAdminId,this.invitingAdminLoginEmail=invitingAdminLoginEmail,this.invitingCompanyId=invitingCompanyId,this.invitingCompanyName=invitingCompanyName,this.invitationDate=invitationDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.cancelationDate=cancelationDate,this.declinationDate=declinationDate}return CompanyBpLinkInvitation.createFromData=function(data){return new CompanyBpLinkInvitation(data.id,data.invitedCompanyId,data.invitedCompanyName,data.invitedToBeBpIr,data.invitingAdminId,data.invitingAdminLoginEmail,data.invitingCompanyId,data.invitingCompanyName,data.invitationDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.cancelationDate,data.declinationDate)},CompanyBpLinkInvitation}])},function(module,exports){angular.module("rainbow").factory("CompanyBpLinkRequest",[function(){"use strict";function CompanyBpLinkRequest(id,requestingAdminId,requestingAdminLoginEmail,requestingCompanyId,requestingCompanyName,requestedCompanyId,requestedCompanyName,requestedToBeBpIr,requestDate,lastNotificationDate,requestedNotificationLanguage,status,acceptationDate,cancelationDate,declinationDate){this.id=id,this.requestingAdminId=requestingAdminId,this.requestingAdminLoginEmail=requestingAdminLoginEmail,this.requestingCompanyId=requestingCompanyId,this.requestingCompanyName=requestingCompanyName,this.requestedCompanyId=requestedCompanyId,this.requestedCompanyName=requestedCompanyName,this.requestedToBeBpIr=requestedToBeBpIr,this.requestDate=requestDate,this.lastNotificationDate=lastNotificationDate,this.requestedNotificationLanguage=requestedNotificationLanguage,this.status=status,this.acceptationDate=acceptationDate,this.cancelationDate=cancelationDate,this.declinationDate=declinationDate}return CompanyBpLinkRequest.createFromData=function(data){return new CompanyBpLinkRequest(data.id,data.requestingAdminId,data.requestingAdminLoginEmail,data.requestingCompanyId,data.requestingCompanyName,data.requestedCompanyId,data.requestedCompanyName,data.requestedToBeBpIr,data.requestDate,data.lastNotificationDate,data.requestedNotificationLanguage,data.status,data.acceptationDate,data.cancelationDate,data.declinationDate)},CompanyBpLinkRequest}])},function(module,exports){angular.module("rainbow").factory("Conference",[function(){"use strict";function Conference(companyId,id,mediaType,name,passCodes,scheduled,lastUpdateDate,userId,confDialOutDisabled,playEntryTone,muteUponEntry){this.companyId=companyId,this.id=id,this.mediaType=mediaType,this.name=name,this.passCodes=passCodes||[],this.scheduled=scheduled,this.lastUpdateDate=lastUpdateDate,this.userId=userId,this.confDialOutDisabled=confDialOutDisabled,this.playEntryTone=playEntryTone,this.muteUponEntry=muteUponEntry,this.updateFromData=function(data){this.companyId=data.companyId,this.id=data.id,this.mediaType=data.mediaType,this.name=data.name,this.passCodes=data.passCodes,this.scheduled=data.scheduled,this.lastUpdateDate=data.lastUpdateDate,this.userId=data.userId,this.confDialOutDisabled=data.confDialOutDisabled,this.playEntryTone=data.playEntryTone,this.muteUponEntry=data.muteUponEntry}}return Conference.createFromData=function(data){return new Conference(data.companyId,data.id,data.mediaType,data.name,data.passCodes,data.scheduled,data.lastUpdateDate,data.userId,data.confDialOutDisabled,data.playEntryTone,data.muteUponEntry)},Conference}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(6),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(100);angular.module("rainbow").factory("ConferenceSession",["$log","ConferenceParticipant","$q","$interval",function($log,ConferenceParticipant,$q,$interval){const contactService=rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_0__.ContactService.getInstance();function ConferenceSession(_id,_participants,_active,_type,_defaultLayout){const that=this;that.id=_id,that.participants=_participants,that.active=_active,that.talkerActive=void 0,that.recordingStarted=!1,that.recordingUserId="",that.currentRecordingState="",that.talkers=void 0,that.talkerSubject=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(this.talkers),that.isLeaderAlreadyConnected=!1,that.status=null,that.localStreams=[],that.sessions={},that.publishers=[],that.type=_type,that.callId=null,that.hasLocalVideo=!1,that.jingleJid=null,that.localVideoSessionId=null,that.localSharingSessionId=null,that.haveJoined=!1,that.lock=!1,that.duration=0,that.durationTimer=null,that.conferenceStats=null,that.control={activeControl:!1,hasRemoteControlling:!1,controller:null,controlled:null},that.conferenceView=_defaultLayout||ConferenceSession.ConferenceView.GalleryView,that.networkQuality=0,that.isMyConference=!1,that.isInExternalWindow=!1,that.externalWindowRef=null,that.noMicrophone=!1,that.isOnlySharingWindow=!1,that.record={isRecording:!1,recordingIsPaused:!1},that.talkingTimeStats={},that.conferenceLayoutSize={},that.dimLocalSharingScreen=!0,that.lastTalkerId="",that.cleanupSessionData=function(){$log.debug("[ConferenceSession] Cleanup for conferenceSession "+that.id),that.participants=[],that.talkerActive=void 0,that.talkers=void 0,that.isLeaderAlreadyConnected=!1,that.localStreams=[],that.sessions={},that.publishers=[],that.hasLocalVideo=!1,that.metricsState="",that.recordingStarted=!1,that.recordingUserId="",that.currentRecordingState="",that.status="ended",that.hasLocalSharing=!1,that.reversedVideos=!1,that.jingleJid=null,that.localVideoSessionId=null,that.localSharingSessionId=null,that.haveJoined=!1,that.lock=!1,that.duration=0,that.conferenceStats=null,that.durationTimer&&($interval.cancel(that.durationTimer),that.durationTimer=null),that.conferenceView=ConferenceSession.ConferenceView.GalleryView,that.joinedFromOtherDevice=!1,that.isInExternalWindow=!1,that.isOnlySharingWindow=!1,that.externalWindowRef=null,that.noMicrophone=!1,that.talkingTimeStats={},that.lastTalkerId=""},that.updateFromData=function(id,participants,active){that.id=id,that.participants=participants,that.active=active},that.updateActiveState=function(active){that.active=active},that.updateStateFromData=function(active,talkerActive,lock){that.active=active,that.talkerActive=talkerActive,that.lock=lock},that.updateTalkingTimeForParticipant=function(participantId,talkingTime){let jid_im=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;jid_im&&Object.keys(that.talkingTimeStats).forEach(key=>{const stats=that.talkingTimeStats[key];stats.jid_im&&stats.jid_im===jid_im&&key!==participantId&&(that.talkingTimeStats[participantId]=stats,delete that.talkingTimeStats[key])}),that.talkingTimeStats[participantId]||(that.talkingTimeStats[participantId]={talkingTime:talkingTime}),jid_im&&(that.talkingTimeStats[participantId].jid_im=jid_im),that.talkingTimeStats[participantId].talkingTime=talkingTime},that.updateParticipants=function(participantsData){return $q((function(resolve){let result=!1;participantsData||resolve(!1),that.participants||(that.participants=[]),0===participantsData.length&&(that.participants=[]),participantsData.forEach((function(participantData){if(!participantData.participantId)return;$log.debug("[conferenceSession] updateParticipants participantId="+participantData.participantId);const existingParticipant=that.getParticipantById(participantData.participantId)?that.getParticipantById(participantData.participantId):participantData.jid_im?that.getParticipantByJid(participantData.jid_im):null;if(existingParticipant)$log.debug("[conferenceSession] updateParticipants update participantId="+participantData.participantId),existingParticipant.updateFromData(participantData);else{$log.debug("[conferenceSession] updateParticipants create participantId="+participantData.participantId);const newParticipant=ConferenceParticipant.createFromData(participantData);that.participants.push(newParticipant),result=newParticipant}})),resolve(result)}))},that.removeParticipants=function(removedParticipants){removedParticipants&&removedParticipants.forEach((function(removedParticipantId){const removedParticipantIndex=that.getParticipantIndexById(removedParticipantId);-1!==removedParticipantIndex&&($log.debug("[conferenceSession] removeParticipants remove participantId="+removedParticipantId),that.participants.splice(removedParticipantIndex,1))}))},that.removePublisher=function(removedPublisherId){if(!removedPublisherId)return;const removedPublisherIndex=that.getPublisherIndexById(removedPublisherId);-1!==removedPublisherIndex&&($log.debug("[conferenceSession] removePublisher remove participantId="+removedPublisherId),that.publishers.splice(removedPublisherIndex,1))},that.updateTalkers=function(talkers){$log.debug("[conferenceSession] updateTalkers talkers="+talkers),talkers&&talkers.length&&(that.lastTalkerId=talkers[0]),that.talkers=talkers,that.talkerSubject.next(that.talkers)},that.isActive=function(){return void 0!==that.active&&that.active},that.isTalkerActive=function(){return void 0!==that.talkerActive&&that.talkerActive},that.isRecordingStarted=function(){return void 0!==that.recordingStarted&&that.recordingStarted},that.getParticipants=function(){return that.participants},that.getConnectedParticipants=function(){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getWatchingParticipants=function(){return that.participants?that.participants.filter((function(participant){return"watching"===participant.state})):void 0},that.getConnectedParticipantsExceptLeader=function(){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"watching"!==participant.state&&"moderator"!==participant.role})):void 0},that.getConnectedLeaderParticipantsExcept=function(jid){return that.participants?that.participants.filter((function(participant){return"disconnected"!==participant.state&&"moderator"===participant.role&&participant.jid_im!==jid})):void 0},that.getConnectedParticipantsExcept=function(jid){return that.participants?that.participants.filter((function(participant){return participant.jid_im!==jid&&"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getLeaderParticipant=function(){return that.participants?that.participants.find((function(participant){return"moderator"===participant.role&&"disconnected"!==participant.state&&"watching"!==participant.state})):void 0},that.getLeaderParticipantById=function(jid){return that.participants?that.participants.find((function(participant){return"moderator"===participant.role&&"disconnected"!==participant.state&&"watching"!==participant.state&&participant.jid_im===jid})):void 0},that.getParticipantById=function(participantId){return that.participants?that.participants.find((function(participant){return participant.participantId===participantId})):void 0},that.getParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid})):void 0},that.getNonDisconnectedParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"disconnected"!==participant.state})):void 0},that.getConnectedParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"connected"===participant.state})):void 0},that.getWatchingParticipantByJid=function(jid){return that.participants?that.participants.find((function(participant){return participant.jid_im===jid&&"watching"===participant.state})):void 0},that.getParticipantIndexById=function(participantId){return that.participants?that.participants.findIndex((function(participant){return participant.participantId===participantId})):-1},that.getPublisherIndexById=function(publisherId){return that.publishers?that.publishers.findIndex((function(publisher){return publisher.participantId===publisherId})):-1},that.getPublisherById=function(publisherId){return that.publishers?that.publishers.find((function(publisher){return publisher.participantId===publisherId})):void 0},that.isParticipantConnectedByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"connected"===participant.state}))},that.isParticipantWatchingByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"watching"===participant.state}))},that.isParticipantRingingByJid=function(jid){return void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"ringing"===participant.state}))},that.isParticipantConnectedWithThisUAByJid=function(jid){return that.haveJoined&&void 0!==that.participants&&that.participants.some((function(participant){return participant.jid_im===jid&&"connected"===participant.state}))},that.checkIfParticipantHasVideoByPublisherId=function(publisherId){let result=!1;if(that.publishers)for(let i=0;i<that.publishers.length;i++)if("video"===that.publishers[i].mediaType&&that.publishers[i].participantId===publisherId){result=!0;break}return result},that.getCurrentSharingParticipant=function(){let participantId=null;if(that.publishers)for(let i=0;i<that.publishers.length;i++)if("sharing"===that.publishers[i].mediaType){participantId=that.publishers[i].participantId;break}return participantId&&that.participants?that.participants.find((function(participant){return participant.participantId===participantId})):void 0},that.getDelegateParticipantsListExcept=function(jid){const result=[],participants=this.getConnectedParticipantsExcept(jid);if(participants)for(let i=0;i<participants.length;i++)participants[i].delegateCapability&&result.push(participants[i]);return result},that.getTalkers=function(){return that.talkers},that.setCallId=function(callId){that.callId=callId},that.getListOfRemoteVideoPublishers=function(){const result=[];if(that.publishers)for(let i=0;i<that.publishers.length;i++)"video"===that.publishers[i].mediaType&&that.publishers[i].jid_im!==contactService.userContact.jid&&result.push(that.publishers[i]);return result},that.startDuration=function(){that.durationTimer||(that.durationTimer=$interval((function(){that.duration++}),1e3))},that.stopDuration=function(){that.durationTimer&&($interval.cancel(that.durationTimer),that.durationTimer=null,that.duration=0)},that.isInConferenceWithDesktopApp=function(){const remoteSharing=that.getCurrentSharingParticipant();return!(!remoteSharing||!remoteSharing.contact)&&-1!==remoteSharing.contact.fullJid.indexOf("desk_")}}return ConferenceSession.createFromData=function(id,participants,active,type,defaultLayout){type||(type="pstnAudio");return new ConferenceSession(id,participants,active,type,defaultLayout)},ConferenceSession.ConferenceView={GalleryView:"gallery_view",SpeakerView:"speaker_view",GridView:"grid_view"},ConferenceSession}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"MD5Algo",(function(){return MD5Algo})),__webpack_require__.d(__webpack_exports__,"MD5",(function(){return MD5})),__webpack_require__.d(__webpack_exports__,"HmacMD5",(function(){return HmacMD5}));var _core_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(43);const T=[];for(let i=0;i<64;i+=1)T[i]=4294967296*Math.abs(Math.sin(i+1))|0;const FF=(a,b,c,d,x,s,t)=>{const n=a+(b&c|~b&d)+x+t;return(n<<s|n>>>32-s)+b},GG=(a,b,c,d,x,s,t)=>{const n=a+(b&d|c&~d)+x+t;return(n<<s|n>>>32-s)+b},HH=(a,b,c,d,x,s,t)=>{const n=a+(b^c^d)+x+t;return(n<<s|n>>>32-s)+b},II=(a,b,c,d,x,s,t)=>{const n=a+(c^(b|~d))+x+t;return(n<<s|n>>>32-s)+b};class MD5Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher{_doReset(){this._hash=new _core_js__WEBPACK_IMPORTED_MODULE_0__.WordArray([1732584193,4023233417,2562383102,271733878])}_doProcessBlock(M,offset){const _M=M;for(let i=0;i<16;i+=1){const offset_i=offset+i,M_offset_i=M[offset_i];_M[offset_i]=16711935&(M_offset_i<<8|M_offset_i>>>24)|4278255360&(M_offset_i<<24|M_offset_i>>>8)}const H=this._hash.words,M_offset_0=_M[offset+0],M_offset_1=_M[offset+1],M_offset_2=_M[offset+2],M_offset_3=_M[offset+3],M_offset_4=_M[offset+4],M_offset_5=_M[offset+5],M_offset_6=_M[offset+6],M_offset_7=_M[offset+7],M_offset_8=_M[offset+8],M_offset_9=_M[offset+9],M_offset_10=_M[offset+10],M_offset_11=_M[offset+11],M_offset_12=_M[offset+12],M_offset_13=_M[offset+13],M_offset_14=_M[offset+14],M_offset_15=_M[offset+15];let a=H[0],b=H[1],c=H[2],d=H[3];a=FF(a,b,c,d,M_offset_0,7,T[0]),d=FF(d,a,b,c,M_offset_1,12,T[1]),c=FF(c,d,a,b,M_offset_2,17,T[2]),b=FF(b,c,d,a,M_offset_3,22,T[3]),a=FF(a,b,c,d,M_offset_4,7,T[4]),d=FF(d,a,b,c,M_offset_5,12,T[5]),c=FF(c,d,a,b,M_offset_6,17,T[6]),b=FF(b,c,d,a,M_offset_7,22,T[7]),a=FF(a,b,c,d,M_offset_8,7,T[8]),d=FF(d,a,b,c,M_offset_9,12,T[9]),c=FF(c,d,a,b,M_offset_10,17,T[10]),b=FF(b,c,d,a,M_offset_11,22,T[11]),a=FF(a,b,c,d,M_offset_12,7,T[12]),d=FF(d,a,b,c,M_offset_13,12,T[13]),c=FF(c,d,a,b,M_offset_14,17,T[14]),b=FF(b,c,d,a,M_offset_15,22,T[15]),a=GG(a,b,c,d,M_offset_1,5,T[16]),d=GG(d,a,b,c,M_offset_6,9,T[17]),c=GG(c,d,a,b,M_offset_11,14,T[18]),b=GG(b,c,d,a,M_offset_0,20,T[19]),a=GG(a,b,c,d,M_offset_5,5,T[20]),d=GG(d,a,b,c,M_offset_10,9,T[21]),c=GG(c,d,a,b,M_offset_15,14,T[22]),b=GG(b,c,d,a,M_offset_4,20,T[23]),a=GG(a,b,c,d,M_offset_9,5,T[24]),d=GG(d,a,b,c,M_offset_14,9,T[25]),c=GG(c,d,a,b,M_offset_3,14,T[26]),b=GG(b,c,d,a,M_offset_8,20,T[27]),a=GG(a,b,c,d,M_offset_13,5,T[28]),d=GG(d,a,b,c,M_offset_2,9,T[29]),c=GG(c,d,a,b,M_offset_7,14,T[30]),b=GG(b,c,d,a,M_offset_12,20,T[31]),a=HH(a,b,c,d,M_offset_5,4,T[32]),d=HH(d,a,b,c,M_offset_8,11,T[33]),c=HH(c,d,a,b,M_offset_11,16,T[34]),b=HH(b,c,d,a,M_offset_14,23,T[35]),a=HH(a,b,c,d,M_offset_1,4,T[36]),d=HH(d,a,b,c,M_offset_4,11,T[37]),c=HH(c,d,a,b,M_offset_7,16,T[38]),b=HH(b,c,d,a,M_offset_10,23,T[39]),a=HH(a,b,c,d,M_offset_13,4,T[40]),d=HH(d,a,b,c,M_offset_0,11,T[41]),c=HH(c,d,a,b,M_offset_3,16,T[42]),b=HH(b,c,d,a,M_offset_6,23,T[43]),a=HH(a,b,c,d,M_offset_9,4,T[44]),d=HH(d,a,b,c,M_offset_12,11,T[45]),c=HH(c,d,a,b,M_offset_15,16,T[46]),b=HH(b,c,d,a,M_offset_2,23,T[47]),a=II(a,b,c,d,M_offset_0,6,T[48]),d=II(d,a,b,c,M_offset_7,10,T[49]),c=II(c,d,a,b,M_offset_14,15,T[50]),b=II(b,c,d,a,M_offset_5,21,T[51]),a=II(a,b,c,d,M_offset_12,6,T[52]),d=II(d,a,b,c,M_offset_3,10,T[53]),c=II(c,d,a,b,M_offset_10,15,T[54]),b=II(b,c,d,a,M_offset_1,21,T[55]),a=II(a,b,c,d,M_offset_8,6,T[56]),d=II(d,a,b,c,M_offset_15,10,T[57]),c=II(c,d,a,b,M_offset_6,15,T[58]),b=II(b,c,d,a,M_offset_13,21,T[59]),a=II(a,b,c,d,M_offset_4,6,T[60]),d=II(d,a,b,c,M_offset_11,10,T[61]),c=II(c,d,a,b,M_offset_2,15,T[62]),b=II(b,c,d,a,M_offset_9,21,T[63]),H[0]=H[0]+a|0,H[1]=H[1]+b|0,H[2]=H[2]+c|0,H[3]=H[3]+d|0}_doFinalize(){const data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32;const nBitsTotalH=Math.floor(nBitsTotal/4294967296),nBitsTotalL=nBitsTotal;dataWords[15+(nBitsLeft+64>>>9<<4)]=16711935&(nBitsTotalH<<8|nBitsTotalH>>>24)|4278255360&(nBitsTotalH<<24|nBitsTotalH>>>8),dataWords[14+(nBitsLeft+64>>>9<<4)]=16711935&(nBitsTotalL<<8|nBitsTotalL>>>24)|4278255360&(nBitsTotalL<<24|nBitsTotalL>>>8),data.sigBytes=4*(dataWords.length+1),this._process();const hash=this._hash,H=hash.words;for(let i=0;i<4;i+=1){const H_i=H[i];H[i]=16711935&(H_i<<8|H_i>>>24)|4278255360&(H_i<<24|H_i>>>8)}return hash}clone(){const clone=super.clone.call(this);return clone._hash=this._hash.clone(),clone}}const MD5=_core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher._createHelper(MD5Algo),HmacMD5=_core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher._createHmacHelper(MD5Algo)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SHA256Algo",(function(){return SHA256Algo})),__webpack_require__.d(__webpack_exports__,"SHA256",(function(){return SHA256})),__webpack_require__.d(__webpack_exports__,"HmacSHA256",(function(){return HmacSHA256}));var _core_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(43);const H=[],K=[],isPrime=n=>{const sqrtN=Math.sqrt(n);for(let factor=2;factor<=sqrtN;factor+=1)if(!(n%factor))return!1;return!0},getFractionalBits=n=>4294967296*(n-(0|n))|0;let n=2,nPrime=0;for(;nPrime<64;)isPrime(n)&&(nPrime<8&&(H[nPrime]=getFractionalBits(n**.5)),K[nPrime]=getFractionalBits(n**(1/3)),nPrime+=1),n+=1;const W=[];class SHA256Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher{_doReset(){this._hash=new _core_js__WEBPACK_IMPORTED_MODULE_0__.WordArray(H.slice(0))}_doProcessBlock(M,offset){const _H=this._hash.words;let a=_H[0],b=_H[1],c=_H[2],d=_H[3],e=_H[4],f=_H[5],g=_H[6],h=_H[7];for(let i=0;i<64;i+=1){if(i<16)W[i]=0|M[offset+i];else{const gamma0x=W[i-15],gamma0=(gamma0x<<25|gamma0x>>>7)^(gamma0x<<14|gamma0x>>>18)^gamma0x>>>3,gamma1x=W[i-2],gamma1=(gamma1x<<15|gamma1x>>>17)^(gamma1x<<13|gamma1x>>>19)^gamma1x>>>10;W[i]=gamma0+W[i-7]+gamma1+W[i-16]}const maj=a&b^a&c^b&c,sigma0=(a<<30|a>>>2)^(a<<19|a>>>13)^(a<<10|a>>>22),t1=h+((e<<26|e>>>6)^(e<<21|e>>>11)^(e<<7|e>>>25))+(e&f^~e&g)+K[i]+W[i];h=g,g=f,f=e,e=d+t1|0,d=c,c=b,b=a,a=t1+(sigma0+maj)|0}_H[0]=_H[0]+a|0,_H[1]=_H[1]+b|0,_H[2]=_H[2]+c|0,_H[3]=_H[3]+d|0,_H[4]=_H[4]+e|0,_H[5]=_H[5]+f|0,_H[6]=_H[6]+g|0,_H[7]=_H[7]+h|0}_doFinalize(){const data=this._data,dataWords=data.words,nBitsTotal=8*this._nDataBytes,nBitsLeft=8*data.sigBytes;return dataWords[nBitsLeft>>>5]|=128<<24-nBitsLeft%32,dataWords[14+(nBitsLeft+64>>>9<<4)]=Math.floor(nBitsTotal/4294967296),dataWords[15+(nBitsLeft+64>>>9<<4)]=nBitsTotal,data.sigBytes=4*dataWords.length,this._process(),this._hash}clone(){const clone=super.clone.call(this);return clone._hash=this._hash.clone(),clone}}const SHA256=_core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher._createHelper(SHA256Algo),HmacSHA256=_core_js__WEBPACK_IMPORTED_MODULE_0__.Hasher._createHmacHelper(SHA256Algo)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=(url,options,timeout=1e4)=>Promise.race([fetch(url,options),new Promise((__,reject)=>setTimeout(()=>reject(new Error("timeout")),timeout))])},function(module,exports){angular.module("rainbow").factory("ConferenceParticipant",[function(){function ConferenceParticipant(participantId,userId,jid_im,jid_tel,role,mute,held,confStartDate,startDate,phoneNumber,state,delegateCapability){let microphone=!(arguments.length>12&&void 0!==arguments[12])||arguments[12];this.participantId=participantId,this.userId=userId,this.jid_im=jid_im,this.jid_tel=jid_tel,this.role=role,this.mute=mute,this.held=held,this.confStartDate=confStartDate,this.startDate=startDate,this.phoneNumber=phoneNumber,this.state=state,this.delegateCapability=delegateCapability,this.noMicrophone=!microphone,this.updateFromData=function(data){data.participantId&&(this.participantId=data.participantId),data.userId&&(this.userId=data.userId),this.jid_im=data.jid_im,data.jid_tel&&(this.jid_tel=data.jid_tel),this.role=data.participantRole?data.participantRole:this.role,this.confStartDate=data.confStartDate?data.confStartDate:this.confStartDate,this.startDate=data.startDate?data.startDate:this.startDate,this.phoneNumber=data.phoneNumber?data.phoneNumber:this.phoneNumber,this.state=data.participantState?data.participantState:this.state,this.noMicrophone=!data.microphone,this.mute=data.mute,this.held=data.held,this.delegateCapability=data.delegateCapability}}return ConferenceParticipant.createFromData=function(data){return new ConferenceParticipant(data.participantId,data.userId,data.jid_im,data.jid_tel,data.participantRole,data.mute,data.held,data.confStartDate,data.startDate,data.phoneNumber,data.participantState,data.delegateCapability,data.microphone)},ConferenceParticipant}])},function(module,exports){angular.module("rainbowAdmin").factory("Offer",[function(){function Offer(id,name,description,groupName,offerReference,profileId,canBeSold,businessModel,isDefault,isExclusive,isPrepaid,prepaidDuration,autoSubscribe,hasConference,hasVoice,isDemo,isBundle,isChinaOffer){this.id=id,this.name=name||"",this.displayName=this.name,isDemo&&(this.name=this.name.replace(new RegExp("\\bDemo\\b"),"Custom")),this.description=description||"Rainbow "+this.name,this.groupName=hasConference?"Conference":groupName||name,this.offerReference=offerReference,this.profileId=profileId,this.canBeSold=canBeSold||!1,this.businessModel=businessModel,this.isDefault=isDefault,this.isExclusive=isExclusive,this.isPrepaid=isPrepaid,this.prepaidDuration=prepaidDuration,this.autoSubscribe=autoSubscribe,this.hasConference=hasConference,this.hasVoice=hasVoice,this.isDemo=void 0===isDemo?!this.isDefault&&!this.canBeSold&&this.name.toLowerCase().includes("custom"):isDemo,this.isBundle=isBundle,this.isChinaOffer=isChinaOffer,this.disallowUnsubscribeWithAllocatedLicences=this.hasVoice||"Room"===this.groupName,this.disallowAllocationToUsers="Room"===this.groupName,this.isEssential=function(){return this.isDefault},this.isBusiness=function(){return this.groupName.toLowerCase().includes("business")},this.isEnterprise=function(){return this.groupName.toLowerCase().includes("enterprise")},this.isAttendant=function(){return this.groupName.toLowerCase().includes("attendant")},this.isPremium=function(){return this.groupName.toLowerCase().includes("premium")},this.getLogoSvgId=function(){return Offer.getLogoSvgId()},this.getLogoColorName=function(){let color="default";return color=this.isEssential()?"essential":this.isExclusive?this.hasConference?"conference":this.isBusiness()?"business":this.isEnterprise()?"enterprise":this.isAttendant()?"attendant":this.isPremium()?"premium":"default":"default",color},this.isTrial=function(){return this.isDemo},this.isUserLicense=function(){return this.isDefault||"nb_users"===this.businessModel||"usage"===this.businessModel},this.isDeviceLicense=function(deviceType){return"nb_users"===this.businessModel&&"TV"===deviceType&&"Room"===this.groupName},this.isServiceLicense=function(){return"nb_services"===this.businessModel},this.isFixedLicense=function(){return"flat_fee"===this.businessModel},this.isUserBasedLicense=function(){return"nb_users"===this.businessModel},this.isUsageBasedLicense=function(){return"usage"===this.businessModel}}return Offer.createFromData=function(data){return new Offer(data.id,data.name,data.description,data.groupName,data.offerReference,data.profileId,data.canBeSold,data.businessModel,data.isDefault,data.isExclusive,data.isPrepaid,data.prepaidDuration,data.autoSubscribe,data.hasConference,data.hasVoice,data.isDemo,data.isBundle,data.isChinaOffer)},Offer.createFromSubscriptionData=function(subscription){return new Offer(subscription.offerId,subscription.offerName,subscription.offerDescription,subscription.groupName,subscription.offerReference,subscription.profileId,subscription.canBeSold,subscription.businessModel,subscription.isDefault,subscription.isExclusive,subscription.isPrepaid,subscription.prepaidDuration,subscription.autoSubscribe,subscription.hasConference,subscription.hasVoice,subscription.isDemo,subscription.isBundle,subscription.isChinaOffer)},Offer.createFromSubscriptionCountersData=function(subscriptionCounters){return new Offer(subscriptionCounters.offerId,subscriptionCounters.offerName,void 0,subscriptionCounters.groupName,subscriptionCounters.offerReference,void 0,subscriptionCounters.canBeSold,subscriptionCounters.businessModel,subscriptionCounters.isDefault,subscriptionCounters.isExclusive,subscriptionCounters.isPrepaid,subscriptionCounters.prepaidDuration,void 0,subscriptionCounters.hasConference,subscriptionCounters.hasVoice,subscriptionCounters.isDemo,subscriptionCounters.isBundle)},Offer.createFromProfileData=function(profile){return new Offer(profile.offerId,profile.offerName,void 0,void 0,void 0,profile.profileId,!1,void 0,profile.isDefault,profile.isExclusive,profile.isPrepaid,profile.prepaidDuration,void 0,profile.hasConference,profile.hasVoice,profile.isDemo,profile.isBundle)},Offer.createFromOperationLog=function(operationLog){const data="delete"===operationLog.operationType?operationLog.previousData:operationLog.newData;return new Offer(data.offerId,data.offerName,data.offerDescription,void 0,data.offerReference,data.profileId,data.canBeSold,data.businessModel,data.isDefault,data.isExclusive,data.isPrepaid,data.prepaidDuration,void 0,data.hasConference,data.hasVoice,data.isDemo,data.isBundle)},Offer.getLogoSvgId=function(){return"rainbow-offer--filled"},Offer.offerComparator=function(offer1,offer2){const offerOrder=["Essential","Business","Enterprise","Conference","Voice Business","Voice Enterprise","Voice Attendant","Voice Premium","Voice","Webinar"];if(offer1.isDefault)return-1;if(offer2.isDefault)return 1;let orderIndex1=offerOrder.findIndex((function(order){return offer1.groupName.startsWith(order)})),orderIndex2=offerOrder.findIndex((function(order){return offer2.groupName.startsWith(order)}));return orderIndex1=-1===orderIndex1?offerOrder.length:orderIndex1,orderIndex2=-1===orderIndex2?offerOrder.length:orderIndex2,orderIndex1<orderIndex2?-1:orderIndex1>orderIndex2?1:offer1.groupName<offer2.groupName?-1:offer1.groupName>offer2.groupName||offer1.isPrepaid&&!offer2.isPrepaid?1:!offer1.isPrepaid&&offer2.isPrepaid||offer1.name<offer2.name?-1:offer1.name>offer2.name?1:0},Offer.isExclusive=function(offer){return offer.isDefault||offer.isExclusive},Offer.isOptional=function(offer){return!Offer.isExclusive(offer)},Offer.isEssential=function(offer){return offer.isDefault},Offer.isNotEssential=function(offer){return!offer.isDefault},Offer.isModelByNbUsers=function(offer){return"nb_users"===offer.businessModel},Offer.isPrepaid=function(offer){return offer.isPrepaid},Offer.isNotPrepaid=function(offer){return!offer.isPrepaid},Offer.isUserLicense=function(offer){return offer.isUserLicense()},Offer.isUsageBasedLicense=function(offer){return offer.isUsageBasedLicense()},Offer}])},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.RBNotification=class{constructor(date){this.date=date}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_profile_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(13);angular.module("rainbow").factory("VoiceMail",[function(){function VoiceMail(){const profileService=rainbow_sdk_services_core_profile_service__WEBPACK_IMPORTED_MODULE_0__.ProfileService.getInstance();this.VMFlag=!1,this.VMCounter=0,this.infoMsg="",this.voiceMailFeatureEnabled=profileService.isFeatureEnabled(profileService.FeaturesEnum.TELEPHONY_VOICE_MAIL),this.setVMFlag=function(flag){this.VMFlag=flag},this.getVMFlag=function(){return this.VMFlag},this.setVMCounter=function(ct){ct>0?(this.VMFlag=!0,this.VMCounter=ct):this.VMCounter=0},this.getVMCounter=function(){return this.VMCounter},this.setInfoMsg=function(msg){this.infoMsg=msg},this.getInfoMsg=function(){return this.infoMsg},this.getDisplayState=function(){return this.voiceMailFeatureEnabled}}return VoiceMail.create=function(){return new VoiceMail},VoiceMail}])},function(module,exports){angular.module("rainbowAdmin").factory("Bot",[function(){"use strict";function Bot(jid,name,id,avatarId,lastAvatarUpdateDate,isBotAvatarCustomized){this.jid=jid,this.name=name,this.id=id,this.avatarId=avatarId||id,this.lastAvatarUpdateDate=lastAvatarUpdateDate,this.isAvatarCustomized=isBotAvatarCustomized}return Bot.create=function(data){return new Bot(data.jid,data.name,data.id,data.avatarId,data.lastAvatarUpdateDate,data.isBotAvatarCustomized)},Bot}])},function(module,exports){angular.module("rainbow").factory("Site",[function(){"use strict";function Site(id,name,status,companyId,settings,isCentrex){this.id=id,this.name=name||"",this.status=status||"",this.companyId=companyId||"",this.settings=settings||"",angular.isDefined(isCentrex)&&(this.isCentrex=isCentrex)}return Site.createFromData=function(data){return new Site(data.id,data.name,data.status,data.companyId,data.settings,data.isCentrex)},Site.create=function(id,name,status,companyId){return new Site(id,name,status,companyId)},Site.StatusValues=["active","alerting","hold","terminated"],Site}])},function(module,exports){angular.module("rainbow").factory("System",[function(){function System(id,pbxId,jid_pbxagent,jid_password,pbxMainBundlePrefix,serverPingTimeout,type,status,version,siteId,country,name,jid_pbxagent_password,jid_pbxagent_password_activating,usePbxMainBundlePrefix,pbxNumberingTranslator,isCentrex,isShared,bpId,cloudpbx,hasMediaPillar,isOxoManaged,oxopbx,pbxNationalPrefix,pbxInternationalPrefix,hasVnaLocation,pbxLdapId,blockedBy){this.id=id||null,this.type=type||null,this.type!==System.TypeEnum.CLOUD_PBX&&(this.jid_pbxagent=jid_pbxagent||"",this.jid_password=jid_password||"",this.jid_pbxagent_password=jid_pbxagent_password||"",this.jid_pbxagent_password_activating=jid_pbxagent_password_activating||"",this.pbxMainBundlePrefix=pbxMainBundlePrefix||["0"],this.usePbxMainBundlePrefix=!angular.isDefined(usePbxMainBundlePrefix)||usePbxMainBundlePrefix,this.pbxNumberingTranslator=pbxNumberingTranslator||[],this.pbxNationalPrefix=pbxNationalPrefix,this.pbxInternationalPrefix=pbxInternationalPrefix),this.country=country||"FRA",this.name=name||"",siteId&&(this.siteId=siteId),pbxId&&(this.pbxId=pbxId),serverPingTimeout&&(this.serverPingTimeout=serverPingTimeout),status&&(this.status=status),version&&(this.version=version),angular.isDefined(isCentrex)&&(this.isCentrex=isCentrex),angular.isDefined(isShared)&&(this.isShared=isShared),bpId&&(this.bpId=bpId),angular.isDefined(hasMediaPillar)&&(this.hasMediaPillar=hasMediaPillar),angular.isDefined(hasVnaLocation)&&(this.hasVnaLocation=hasVnaLocation),angular.isDefined(isOxoManaged)&&(this.isOxoManaged=isOxoManaged),pbxLdapId&&(this.pbxLdapId=pbxLdapId),angular.isDefined(blockedBy)&&(this.blockedBy=blockedBy),cloudpbx?(cloudpbx.domainName&&(this.domainName=cloudpbx.domainName),cloudpbx.numberingDigits&&(this.numberingDigits=cloudpbx.numberingDigits),cloudpbx.numberingPrefixes&&(this.numberingPrefixes=cloudpbx.numberingPrefixes),cloudpbx.outgoingPrefix&&(this.outgoingPrefix=cloudpbx.outgoingPrefix),cloudpbx.externalTrunkId&&(this.externalTrunkId=cloudpbx.externalTrunkId),cloudpbx.installationNumber&&(this.installationNumber=cloudpbx.installationNumber),cloudpbx.installationNumberId&&(this.installationNumberId=cloudpbx.installationNumberId),cloudpbx.language&&(this.language=cloudpbx.language),cloudpbx.customSipHeader_1&&(this.customSipHeader_1=cloudpbx.customSipHeader_1),cloudpbx.customSipHeader_2&&(this.customSipHeader_2=cloudpbx.customSipHeader_2),cloudpbx.overflowSubscribersToVoicemail&&(angular.isDefined(cloudpbx.overflowSubscribersToVoicemail.activate)&&(this.callOverflowToVMActivate=cloudpbx.overflowSubscribersToVoicemail.activate),cloudpbx.overflowSubscribersToVoicemail.noReplyDelay&&(this.callOverflowToVMNoReplyDelay=cloudpbx.overflowSubscribersToVoicemail.noReplyDelay),angular.isDefined(cloudpbx.overflowSubscribersToVoicemail.activateUnavailableOverflow)&&(this.callUnavailableOverflowToVMActivate=cloudpbx.overflowSubscribersToVoicemail.activateUnavailableOverflow)),cloudpbx.barringOptions&&(cloudpbx.barringOptions.permissions&&(this.barringOptionsPermission=cloudpbx.barringOptions.permissions),cloudpbx.barringOptions.restrictions&&(this.barringOptionsRestriction=cloudpbx.barringOptions.restrictions)),cloudpbx.cliOptions&&(this.cliOptions=cloudpbx.cliOptions),cloudpbx.emergencyOptions&&(this.emergencyOptions=cloudpbx.emergencyOptions),cloudpbx.callForwardOptions&&(this.callForwardOptions=cloudpbx.callForwardOptions),angular.isDefined(cloudpbx.routeInternalCallsToPeer)&&(this.routeInternalCallsToPeer=cloudpbx.routeInternalCallsToPeer),cloudpbx.peerAuthenticationOptions&&(this.peerAuthenticationOptions=cloudpbx.peerAuthenticationOptions),cloudpbx.callForkingToPstnNumber&&(this.callForkingToPstnNumber=cloudpbx.callForkingToPstnNumber),angular.isDefined(cloudpbx.monolineIncomingMode)&&(this.monolineIncomingMode=cloudpbx.monolineIncomingMode)):isOxoManaged&&oxopbx?(oxopbx.numberingDigits&&(this.numberingDigits=oxopbx.numberingDigits),oxopbx.numberingPrefix&&(this.numberingPrefix=oxopbx.numberingPrefix),oxopbx.outgoingPrefix&&(this.outgoingPrefix=oxopbx.outgoingPrefix),oxopbx.target&&(this.target=oxopbx.target),oxopbx.installationNumber&&(this.installationNumber=oxopbx.installationNumber),oxopbx.installationNumberId&&(this.installationNumberId=oxopbx.installationNumberId)):(this.numberingDigits=3,this.numberingPrefixes=["1"]),this.isExternalCallForwardAuthorized=function(){return this.callForwardOptions&&"authorized"===this.callForwardOptions.externalCallForward}}return System.createFromData=function(data){return new System(data.id,data.pbxId,data.jid_pbxagent,data.jid_password,data.pbxMainBundlePrefix,data.serverPingTimeout,data.type,data.status,data.version,data.siteId,data.country,data.name,data.jid_pbxagent_password,data.jid_pbxagent_password_activating,data.usePbxMainBundlePrefix,data.pbxNumberingTranslator,data.isCentrex,data.isShared,data.bpId,data.cloudpbx,data.hasMediaPillar,data.isOxoManaged,data.oxopbx,data.pbxNationalPrefix,data.pbxInternationalPrefix,data.hasVnaLocation,data.pbxLdapId,data.blockedBy)},System.create=function(){return new System},System.TypeValues=["oxe","oxo","third_party","cloud_pbx","oxo_managed"],System.TypeEnum={OXE:"oxe",OXO:"oxo",THIRD_PARTY:"third_party",CLOUD_PBX:"cloud_pbx",OXO_MANAGED:"oxo_managed"},System.StatusValues=["created","activating","activated"],System.CliPolicy={USER_DDI_NUMBER:"user_ddi_number",INSTALLATION_DDI_NUMBER:"installation_ddi_number"},System.CliPolicyValues=[System.CliPolicy.USER_DDI_NUMBER,System.CliPolicy.INSTALLATION_DDI_NUMBER],System}]),angular.module("rainbow").filter("serverTypeFilter",[function(){return function(input){return"oxo"===input?"OXO Connect":"oxe"===input?"OmniPCX Enterprise":"third_party"===input?"Third party PBX":"cloud_pbx"===input?"Cloud PBX":"oxo_managed"===input?"Managed OXO Connect":input}}]),angular.module("rainbow").filter("systemStateFilter",[function(){return function(input){return"created"===input||"activating"===input?"pending":"activated"===input?"systemStatusActivated":"connected"===input?"systemStatusConnected":"disconnected"===input?"systemStatusDisonnected":"degraded"===input?"systemStatusDegraded":"unknown"===input?"unknown":input}}]),angular.module("rainbow").filter("systemStateColorFilter",[function(){return function(input){return"created"===input||"activating"===input||"activated"===input?"color_blue":"connected"===input?"color_green":"disconnected"===input?"color_error":"degraded"===input||"unknown"===input?"color_warning":""}}]),angular.module("rainbow").filter("thirdPartySystemStateFilter",[function(){return function(input){return"created"===input||"activating"===input?"pending":"activated"===input?"systemStatusConnected":input}}]),angular.module("rainbow").filter("thirdPartySystemStateColorFilter",[function(){return function(input){return"created"===input||"activating"===input?"color_blue":"activated"===input?"color_green":""}}]),angular.module("rainbow").filter("cloudPbxStateFilter",[function(){return function(input){return"created"===input||"activated"===input?"systemStatusConnected":"disconnected"===input?"systemStatusDisonnected":"blocked"===input?"systemStatusBlocked":input}}]),angular.module("rainbow").filter("cloudPbxStateColorFilter",[function(){return function(input){return"created"===input||"activated"===input?"color_green":"disconnected"===input||"blocked"===input?"color_error":""}}]),angular.module("rainbow").filter("cloudPbxBarringOptionPermissionFilter",[function(){return function(input){return"default"===input?"same_than_company":"local"===input?"intraPBXCallsOnly":"nat_local"===input?"nationalAndIntraPBXCalls":"int_nat_local"===input?"internationalNationalAndIntraPBXCalls":input}}]),angular.module("rainbow").filter("cloudPbxBarringOptionRestrictionFilter",[function(){return function(input){return"default"===input?"same_than_company":"no_restriction"===input?"none":"surcharged_numbers"===input?"surchargedNumbers":"custom_numbers"===input?"customizedProhibitedNumbers":input}}]),angular.module("rainbow").filter("cloudPbxCliPolicyFilter",[function(){return function(input){return"user_ddi_number"===input?"userDDINumber":"installation_ddi_number"===input?"companyPhoneNumber":"other_ddi_number"===input?"otherDDINumber":input}}]),angular.module("rainbow").filter("ivrStateFilter",[function(){return function(input){return"active"===input?"systemStatusActive":"unknown"}}]),angular.module("rainbow").filter("ivrStateClassFilter",[function(){return function(input){return"active"===input?"color_green":"color_error"}}]),angular.module("rainbow").filter("cloudPbxAnnouncementProfileFilter",[function(){return function(input){return"all"===input?"allCalls":"external_only"===input?"externalCallsOnly":"internal_only"===input?"internalCallsOnly":input}}])},function(module,exports){angular.module("rainbow").factory("SystemsGroup",[function(){"use strict";function SystemsGroup(id,name,companies,systems){this.id=id||null,this.name=name,this.companies=companies||[],this.systems=systems,this.containsSystem=function(systemId){return!!this.systems&&this.systems.some((function(system){return system.systemId===systemId}))}}return SystemsGroup.createFromData=function(data){return new SystemsGroup(data.id,data.name,data.companies,data.systems)},SystemsGroup.create=function(id,name,companies,systems){return new SystemsGroup(id,name,companies,systems)},SystemsGroup}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_userInfo_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(58);angular.module("rainbow").factory("User",["Subscription",function(Subscription){const userInfoService=rainbow_sdk_services_core_userInfo_service__WEBPACK_IMPORTED_MODULE_0__.UserInfoService.getInstance();function User(data,noDefaultValues){const _this=this;User.attributes.forEach((function(attribute){data&&angular.isDefined(data[attribute.name])?_this[attribute.name]=data[attribute.name]:!noDefaultValues&&angular.isDefined(attribute.defaultValue)&&(_this[attribute.name]=attribute.defaultValue)})),this.subscriptions=[],this.updateFromData=function(newData){User.attributes.forEach((function(attribute){angular.isDefined(newData[attribute.name])&&(_this[attribute.name]=newData[attribute.name])}))},this.fillSubscriptionMap=function(){const subscriptionMap={};this.subscriptions.forEach((function(subscription){subscriptionMap[subscription.id]=subscription})),this.subscriptionMap=subscriptionMap},this.fillMainSubscriptionField=function(){const exclusiveSubscriptions=this.subscriptions.filter(Subscription.isExclusive).sort(Subscription.subscriptionComparator);let exclusiveSubscriptionNames;exclusiveSubscriptions.length>0&&(this.mainSubscription=exclusiveSubscriptions[exclusiveSubscriptions.length-1],this.mainSubscriptionName=this.mainSubscription.offerName,exclusiveSubscriptionNames=this.mainSubscriptionName,exclusiveSubscriptions.length>1&&(exclusiveSubscriptionNames=exclusiveSubscriptions.filter(Subscription.isNotEssential).map((function(optionalSubscription){return optionalSubscription.offerName})).join(", ")));const optionalSubscriptions=this.subscriptions.filter(Subscription.isOptional);let optionalSubscriptionNames;optionalSubscriptions.length>0&&(optionalSubscriptionNames=optionalSubscriptions.map((function(optionalSubscription){return optionalSubscription.offerName})).join(", ")),exclusiveSubscriptionNames?(this.subscriptionNames=exclusiveSubscriptionNames,optionalSubscriptionNames&&(this.subscriptionNames+=", "+optionalSubscriptionNames)):this.subscriptionNames=optionalSubscriptionNames||""},this.getMainSubscription=function(){return this.mainSubscription||this.fillMainSubscriptionField(),this.mainSubscription},this.getOptionalSubscriptions=function(){return this.subscriptions.filter(Subscription.isOptional)},this.getMainSubscriptionName=function(){return this.mainSubscriptionName||this.fillMainSubscriptionField(),this.mainSubscriptionName},this.hasUserRoleOnly=function(){return 1===this.roles.length&&-1!==this.roles.indexOf(User.RoleValues.USER)},this.isGuest=function(){return-1!==this.roles.indexOf(User.RoleValues.GUEST)||this.guestMode},this.isAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.ADMIN)},this.isOrganizationAdmin=function(){return!!this.isAdmin()&&"organization_admin"===this.adminType},this.isSiteAdmin=function(){return!!this.isAdmin()&&"site_admin"===this.adminType},this.isCompanyAdmin=function(){return!!this.isAdmin()&&"company_admin"===this.adminType},this.isBPAdmin=function(){return this.isBPAdminOperations()||this.isBPAdminFinance()},this.isBPAdminOperations=function(){return-1!==this.roles.indexOf(User.RoleValues.BP_ADMIN_OPERATIONS)},this.isBPAdminFinance=function(){return-1!==this.roles.indexOf(User.RoleValues.BP_ADMIN_FINANCE)},this.isSuperadmin=function(){return-1!==this.roles.indexOf(User.RoleValues.SUPERADMIN)},this.isBusinessAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.BUSINESS_ADMIN)},this.isCustomerSuccessAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.CUSTOMER_SUCCESS_ADMIN)},this.isPublicChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.PUBLIC_CHANNELS_ADMIN)},this.isAllCompanyChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.ALL_COMPANY_CHANNELS_ADMIN)},this.isClosedChannelsAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.CLOSED_CHANNELS_ADMIN)},this.isWebinarHost=function(){return-1!==this.roles.indexOf(User.RoleValues.WEBINAR_HOST)},this.isDirectoryAdmin=function(){return-1!==this.roles.indexOf(User.RoleValues.DIRECTORY_ADMIN)},this.isGroupSupervisor=function(){return-1!==this.roles.indexOf(User.RoleValues.GROUP_SUPERVISOR)},this.isAttendantConsole=function(){return-1!==this.roles.indexOf(User.RoleValues.ATTENDANT_CONSOLE)},this.isRainbowTv=function(){return this.isTv||-1!==this.roles.indexOf(User.RoleValues.TV)},this.computeDisplayName=function(){const nameInfo=userInfoService.getNameInformation(this.firstName,this.lastName);this.displayName=nameInfo.displayName,this.initials=nameInfo.initials},this.getPhoneNumbers=function(type,deviceType,linkedToSystem){return(this.phoneNumbers||[]).filter(phoneNumber=>phoneNumber.type===type&&phoneNumber.deviceType===deviceType).filter(phoneNumber=>!angular.isDefined(linkedToSystem)||Boolean(phoneNumber.systemId)===linkedToSystem)},this.getSystemPhoneNumber=function(){return this.phoneNumbers?this.phoneNumbers.find((function(phoneNumber){return angular.isDefined(phoneNumber.systemId)&&phoneNumber.isFromSystem})):void 0},this.isRvcpSubscriber=function(){const userSystemPhoneNumber=this.getSystemPhoneNumber();return userSystemPhoneNumber&&"RVCP Subscriber"===userSystemPhoneNumber.deviceName},this.isOxoSubscriber=function(){return this.getSystemPhoneNumber()},this.getActivePhoneNumber=function(type,deviceType,linkedToSystem){const filteredPhoneNumbers=this.getPhoneNumbers(type,deviceType,linkedToSystem);if(filteredPhoneNumbers.length>1){const systemPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return angular.isDefined(phoneNumber.systemId)}));if(systemPhoneNumber)return systemPhoneNumber}return filteredPhoneNumbers[0]},this.getDdiPhoneNumber=function(type,deviceType,linkedToSystem){const filteredPhoneNumbers=this.getPhoneNumbers(type,deviceType,linkedToSystem);if(filteredPhoneNumbers.length>1){let ddiPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return phoneNumber.isCloudPbxDDI||phoneNumber.isOxoPbxDDI}));if(ddiPhoneNumber||(ddiPhoneNumber=filteredPhoneNumbers.find((function(phoneNumber){return phoneNumber.isFromSystem}))),ddiPhoneNumber)return ddiPhoneNumber}return filteredPhoneNumbers[0]}}return User.createFromData=function(data,noDefaultValues){data&&data.roles&&data.roles.includes("private_channels_admin")&&data.roles.splice(data.roles.indexOf("private_channels_admin"),1,User.RoleValues.ALL_COMPANY_CHANNELS_ADMIN);const user=new User(data,noDefaultValues);return data.profiles&&(data.profiles.forEach((function(subscriptionData){const subscription=Subscription.createFromData(subscriptionData);subscription.isTerminated()||user.subscriptions.push(subscription)})),user.fillMainSubscriptionField()),user.computeDisplayName(),user},User.create=function(){return new User},User.prune=function(data,__userContact){const dataCopy=Object.assign({},data);return"RAINBOW"!==dataCopy.authenticationType&&"DEFAULT"!==dataCopy.authenticationType||delete dataCopy.authenticationExternalUid,dataCopy},User.VisibilityValues=["same_than_company","public","private"],User.PermissionValues=["same_than_company","enabled","disabled"],User.VmOverflowValues=["default","custom","disabled"],User.CliPolicy={COMPANY_POLICY:"company_policy",USER_DDI_NUMBER:"user_ddi_number",INSTALLATION_DDI_NUMBER:"installation_ddi_number",OTHER_DDI_NUMBER:"other_ddi_number"},User.CliPolicyValues=[User.CliPolicy.COMPANY_POLICY,User.CliPolicy.USER_DDI_NUMBER,User.CliPolicy.INSTALLATION_DDI_NUMBER,User.CliPolicy.OTHER_DDI_NUMBER],User.CliSelectionValues=["company_policy","authorized","not_authorized"],User.RoleValues={USER:"user",GUEST:"guest",SUPERADMIN:"superadmin",SUPPORT:"support",BUSINESS_ADMIN:"business_admin",CUSTOMER_SUCCESS_ADMIN:"customer_success_admin",ADMIN:"admin",BP_ADMIN_OPERATIONS:"bp_admin",BP_ADMIN_FINANCE:"bp_finance",DIRECTORY_ADMIN:"directory_admin",PUBLIC_CHANNELS_ADMIN:"public_channels_admin",ALL_COMPANY_CHANNELS_ADMIN:"all_company_channels_admin",CLOSED_CHANNELS_ADMIN:"closed_channels_admin",TV:"tv",WEBINAR_HOST:"webinar_host",GROUP_SUPERVISOR:"supervisor",ATTENDANT_CONSOLE:"attendant"},User.LoginPolicies=[{value:"RAINBOW",label:"rainbowLoginCredentials"},{value:"SAML",label:"ssoLoginCredentialsSAML",isSSO:!0},{value:"OIDC",label:"ssoLoginCredentialsOIDC",isSSO:!0},{value:"DEFAULT",label:"defaultLogin"}],User.attributes=[{name:"id",defaultValue:null},{name:"loginEmail",defaultValue:""},{name:"firstName",defaultValue:""},{name:"lastName",defaultValue:""},{name:"displayName",defaultValue:""},{name:"nickName",defaultValue:""},{name:"title",defaultValue:""},{name:"jobTitle",defaultValue:""},{name:"department",defaultValue:""},{name:"companyId",defaultValue:""},{name:"companyName",defaultValue:""},{name:"siteId",defaultValue:""},{name:"systemId",defaultValue:""},{name:"accountType",defaultValue:"free"},{name:"country",defaultValue:"FRA"},{name:"timezone",defaultValue:"Europe/Paris"},{name:"emails",defaultValue:[]},{name:"phoneNumbers",defaultValue:[]},{name:"roles",defaultValue:["user"]},{name:"adminType",defaultValue:"company_admin"},{name:"isActive",defaultValue:!1},{name:"isInitialized",defaultValue:!1},{name:"isTerminated",defaultValue:void 0},{name:"isTv",defaultValue:void 0},{name:"password",defaultValue:void 0},{name:"jid_im",defaultValue:""},{name:"jid_tel",defaultValue:""},{name:"language",defaultValue:"en"},{name:"lastAvatarUpdateDate",defaultValue:null},{name:"visibility",defaultValue:void 0},{name:"authenticationType",defaultValue:void 0},{name:"authenticationExternalUid",defaultValue:void 0},{name:"tags",defaultValue:void 0},{name:"userInfo1",defaultValue:void 0},{name:"userInfo2",defaultValue:void 0},{name:"tryNewUiCustomisation",defaultValue:void 0},{name:"softphoneOnlyCustomisation",defaultValue:void 0},{name:"fileSharingCustomisation",defaultValue:void 0},{name:"userTitleNameCustomisation",defaultValue:void 0},{name:"useRoomCustomisation",defaultValue:void 0},{name:"phoneMeetingCustomisation",defaultValue:void 0},{name:"useChannelCustomisation",defaultValue:void 0},{name:"useScreenSharingCustomisation",defaultValue:void 0},{name:"useWebRTCVideoCustomisation",defaultValue:void 0},{name:"useWebRTCAudioCustomisation",defaultValue:void 0},{name:"useSpeakingTimeStatistics",defaultValue:void 0},{name:"instantMessagesCustomisation",defaultValue:void 0},{name:"readReceiptsCustomisation",defaultValue:void 0},{name:"userProfileCustomisation",defaultValue:void 0},{name:"fileStorageCustomisation",defaultValue:void 0},{name:"overridePresenceCustomisation",defaultValue:void 0},{name:"changeSettingsCustomisation",defaultValue:void 0},{name:"changeTelephonyCustomisation",defaultValue:void 0},{name:"recordingConversationCustomisation",defaultValue:void 0},{name:"useGifCustomisation",defaultValue:void 0},{name:"useDialOutCustomisation",defaultValue:void 0},{name:"selectedAppCustomisationTemplate",defaultValue:void 0},{name:"guestMode",defaultValue:void 0},{name:"firstLoginDate",defaultValue:void 0},{name:"lastLoginDate",defaultValue:void 0},{name:"lastSeenDate",defaultValue:void 0},{name:"selectedDeviceFirmware",defaultValue:"same_as_company"},{name:"eLearningCustomisation",defaultValue:void 0},{name:"eLearningGamificationCustomisation",defaultValue:void 0}],User}]),angular.module("rainbow").filter("genericPermissionLabelFilter",[function(){return function(input){return"same_than_company"===input?"same_than_company":"enabled"===input?"authorized":"disabled"===input?"notAuthorized":input}}]),angular.module("rainbow").filter("phoneVmOverflowLabelFilter",[function(){return function(input){return"default"===input?"same_than_company":"custom"===input?"yes":"disabled"===input?"no":input}}]),angular.module("rainbow").filter("location911UserRightFilter",[function(){return function(input){return"same_as_company"===input?"same_as_company":"none"===input?"no":"all"===input?"yes":input}}]),angular.module("rainbow").filter("cloudPbxSubscriberCliPolicyFilter",[function(){return function(input){return"company_policy"===input?"same_than_company":"user_ddi_number"===input?"userDDINumber":"installation_ddi_number"===input?"companyPhoneNumber":"other_ddi_number"===input?"otherDDINumber":input}}]),angular.module("rainbow").filter("cloudPbxSubscriberCliSelectionFilter",[function(){return function(input){return"company_policy"===input?"same_than_company":"authorized"===input?"authorized":"not_authorized"===input?"notAuthorized":input}}]),angular.module("rainbowAdmin").filter("cloudPbxSubscriberCallForwardTypeFilter",[()=>function(input){return"immediate"===input?"callForwardUnconditional":"busy"===input?"callForwardOnBusy":"noreply"===input?"callForwardOnUnanswered":input}]),angular.module("rainbowAdmin").filter("cloudPbxSubscriberCallForwardDestinationTypeFilter",[()=>function(input){return input?"voicemail"===input?"voicemail":"internalNumber"===input?"internalNumber":"externalNumber"===input?"DDINumber":input:"doNotForwardCalls"}]),angular.module("rainbow").filter("softphoneOnlyPermissionLabelFilter",[function(){return function(input){return input&&"same_than_company"!==input?"enabled"===input?"softphoneOnly":"disabled"===input?"allServices":input:"same_than_company"}}]),angular.module("rainbow").filter("monolineIncomingModeFilter",[function(){return function(input){return"company_policy"===input?"same_than_company":"activated"===input?"Monoline":"not_activated"===input?"Multiline":input}}]),angular.module("rainbowAdmin").filter("cloudPbxSubscriberPersonalRoutinesFilter",[()=>function(input){return"At work"===input?"At work":"On break"===input?"On break":"Out of office"===input?"Out of office":"Do not disturb"===input?"Do not disturb":input}])},function(module,exports){angular.module("rainbow").factory("Subscription",["Offer",function(Offer){function Subscription(id,offerId,offerName,offerDescription,groupName,offerReference,profileId,profileName,maxNumberUsers,numberAssignedUsers,status,syncOngoing,updatingMaxNumberUsers,nbBPLicences,nbAssignedBPUsers,nbLicencesAssignedToECs,nbLicencesUsed,nbFreeLicences,businessModel,canBeSold,isDefault,isExclusive,isPrepaid,offerPrepaidDuration,prepaidDuration,expirationDate,autoRenew,renewalTerm,prepaidRenewalOption,hasConference,hasVoice,isDemo,isChinaOffer,purchaseOrderNumber,creationDate){this.id=id,this.name=offerName,this.displayName=this.name,this.offerId=offerId,this.offerName=offerName||"",isDemo&&(this.offerName=this.offerName.replace(new RegExp("\\bDemo\\b"),"Custom")),this.offerDescription=offerDescription||"Rainbow "+this.offerName,this.groupName=groupName||offerName,this.offerReference=offerReference,this.profileId=profileId,this.profileName=profileName,this.maxNumberUsers=maxNumberUsers,this.numberAssignedUsers=numberAssignedUsers,this.status=status,this.syncOngoing=syncOngoing||!1,this.updatingMaxNumberUsers=updatingMaxNumberUsers,void 0!==nbBPLicences&&(this.nbBPLicences=nbBPLicences),void 0!==nbAssignedBPUsers&&(this.nbAssignedBPUsers=nbAssignedBPUsers),void 0!==nbLicencesAssignedToECs&&(this.nbLicencesAssignedToECs=nbLicencesAssignedToECs),void 0!==nbLicencesUsed&&(this.nbLicencesUsed=nbLicencesUsed),void 0!==nbFreeLicences&&(this.nbFreeLicences=nbFreeLicences),this.businessModel=businessModel,this.canBeSold=canBeSold,this.isDefault=isDefault,this.isExclusive=isExclusive,this.isPrepaid=isPrepaid,this.offerPrepaidDuration=offerPrepaidDuration||prepaidDuration,this.prepaidDuration=prepaidDuration,this.expirationDate=expirationDate,this.autoRenew=autoRenew,this.renewalTerm=renewalTerm,this.prepaidRenewalOption=prepaidRenewalOption,this.hasConference=hasConference,this.hasVoice=hasVoice,this.isDemo=void 0===isDemo?!this.isDefault&&!this.canBeSold&&this.offerName.toLowerCase().includes("custom"):isDemo,this.isChinaOffer=isChinaOffer,this.purchaseOrderNumber=purchaseOrderNumber,this.creationDate=creationDate,this.isEnterprise=function(){return this.groupName.toLowerCase().includes("enterprise")},this.isBusiness=function(){return this.groupName.toLowerCase().includes("business")},this.isEssential=function(){return this.isDefault},this.isTrial=function(){return this.isDemo},this.isTerminated=function(){return"terminated"===this.status},this.isTerminating=function(){return"terminating"===this.status},this.isUserLicense=function(){return this.isDefault||"nb_users"===this.businessModel||"usage"===this.businessModel}}return Subscription.createFromData=function(data){return new Subscription(data.id?data.id:data.subscriptionId,data.offerId,data.offerName,data.offerDescription,data.groupName,data.offerReference,data.profileId,data.profileName,data.maxNumberUsers,data.numberAssignedUsers,data.status,data.syncOngoing,data.updatingMaxNumberUsers,data.nbBPLicences,data.nbAssignedBPUsers,data.nbLicencesAssignedToECs,data.nbLicencesUsed,data.nbFreeLicences,data.businessModel,data.canBeSold,data.isDefault,data.isExclusive,data.isPrepaid,data.offerPrepaidDuration,data.prepaidDuration,data.expirationDate,data.autoRenew,data.renewalTerm,data.prepaidRenewalOption,data.hasConference,data.hasVoice,data.isDemo,data.isChinaOffer,data.purchaseOrderNumber,data.creationDate)},Subscription.PrepaidRenewalOptions={RENEW_BILLED:"billed",RENEW_ALLOCATED:"allocated"},Subscription.subscriptionComparator=function(subscription1,subscription2){const offer1=new Offer(subscription1.offerId,subscription1.offerName,subscription1.offerDescription,subscription1.groupName,subscription1.offerReference,subscription1.profileId,subscription1.canBeSold,subscription1.businessModel,subscription1.isDefault,subscription1.isExclusive,subscription1.isPrepaid,subscription1.offerPrepaidDuration,subscription1.autoSubscribe,subscription1.hasConference,subscription1.hasVoice,subscription1.isDemo,subscription1.isBundle,subscription1.isChinaOffer),offer2=new Offer(subscription2.offerId,subscription2.offerName,subscription2.offerDescription,subscription2.groupName,subscription2.offerReference,subscription2.profileId,subscription2.canBeSold,subscription2.businessModel,subscription2.isDefault,subscription2.isExclusive,subscription2.isPrepaid,subscription2.offerPrepaidDuration,subscription2.autoSubscribe,subscription2.hasConference,subscription2.hasVoice,subscription2.isDemo,subscription2.isBundle,subscription2.isChinaOffer);return Offer.offerComparator(offer1,offer2)},Subscription.isUserLicense=function(subscription){return subscription.isDefault||"nb_users"===subscription.businessModel||"usage"===subscription.businessModel},Subscription.isTvLicense=function(subscription){return"Room"===subscription.groupName},Subscription.excludeTvLicense=function(subscription){return!Subscription.isTvLicense(subscription)},Subscription.isExclusive=function(subscription){return subscription.isDefault||subscription.isExclusive},Subscription.isOptional=function(subscription){return!Subscription.isExclusive(subscription)},Subscription.isEssential=function(subscription){return subscription.isDefault},Subscription.isNotEssential=function(subscription){return!subscription.isDefault},Subscription.isConference=function(subscription){return Subscription.isOptional(subscription)&&(subscription.hasConference||"usage"===subscription.businessModel)},Subscription.isNotConference=function(subscription){return Subscription.isOptional(subscription)&&!(subscription.hasConference||"usage"===subscription.businessModel)},Subscription.withUserLicenses=function(subscription){return subscription.isDefault||"usage"===subscription.businessModel||"nb_users"===subscription.businessModel&&subscription.maxNumberUsers>0},Subscription.isPrepaid=function(subscription){return subscription.isPrepaid},Subscription.isMonthly=function(subscription){return!subscription.isPrepaid},Subscription}])},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class IceServer{constructor(data){this.id=data.id,this.urls=data.urls,this.username=data.username,this.credential=data.credential}static createFromData(data){return new IceServer(data)}}exports.IceServer=IceServer,angular.module("rainbowAdmin").factory("IceServer",()=>IceServer)},function(module,exports){angular.module("rainbow").factory("PhoneNumber",[function(){function PhoneNumber(id,shortNumber,number,numberE164,pbxUserId,userId,type,deviceType,pbxId,isFromSystem,isMonitored,systemId,country,voiceMailNumber,deviceName,firstName,lastName,internalNumber,isCloudPbxDDI,isCloudPbxDefault,password,isOxoPbxDDI,isOxoPbxDefault,userDisplayName,overflowToVoicemail,barringOptions,cliOptions,recordingProfile,monolineIncomingMode,status,cloudPbxStatus,blockedBy){this.id=id,this.shortNumber=shortNumber,this.number=number,this.numberE164=numberE164,this.pbxUserId=pbxUserId,this.userId=userId,this.type=type,this.deviceType=deviceType,this.pbxId=pbxId,this.isFromSystem=isFromSystem,this.isMonitored=isMonitored,this.systemId=systemId,this.country=country,this.voiceMailNumber=voiceMailNumber,this.deviceName=deviceName,this.firstName=firstName,this.lastName=lastName,this.internalNumber=internalNumber,angular.isDefined(isCloudPbxDDI)&&(this.isCloudPbxDDI=isCloudPbxDDI),angular.isDefined(isCloudPbxDefault)&&(this.isCloudPbxDefault=isCloudPbxDefault),password&&(this.password=password),userDisplayName&&(this.userDisplayName=userDisplayName),angular.isDefined(isOxoPbxDDI)&&(this.isOxoPbxDDI=isOxoPbxDDI,this.isCloudPbxDDI=isOxoPbxDDI),angular.isDefined(isOxoPbxDefault)&&(this.isOxoPbxDefault=isOxoPbxDefault,this.isCloudPbxDefault=isOxoPbxDefault),overflowToVoicemail&&(this.overflowToVoicemail=overflowToVoicemail),barringOptions&&(this.barringOptions=barringOptions),cliOptions&&(this.cliOptions=cliOptions),recordingProfile&&(this.recordingProfile=recordingProfile),angular.isDefined(monolineIncomingMode)&&(this.monolineIncomingMode=monolineIncomingMode),angular.isDefined(status)&&(this.status=status),angular.isDefined(cloudPbxStatus)&&(this.cloudPbxStatus=cloudPbxStatus),angular.isDefined(blockedBy)&&(this.blockedBy=blockedBy)}return PhoneNumber.SelectTypeEnum={EXTENSION:"extension",EXTENSION_CLOUD:"extension-cloud",GROUP_CLOUD:"group-cloud",DDI_CLOUD:"ddi-cloud",FREE_DDI_CLOUD:"free-ddi-cloud",FREE_DDI_GROUP_CLOUD:"free-ddi-group-cloud"},PhoneNumber.createFromData=function(data){return new PhoneNumber(data.id?data.id:data.phoneNumberId,data.shortNumber,data.number,data.numberE164,data.pbxUserId,data.userId,data.type,data.deviceType,data.pbxId,data.isFromSystem,data.isMonitored,data.systemId,data.country,data.voiceMailNumber,data.deviceName,data.firstName,data.lastName,data.internalNumber,data.isCloudPbxDDI,data.isCloudPbxDefault,data.password,data.isOxoPbxDDI,data.isOxoPbxDefault,data.userDisplayName,data.overflowToVoicemail,data.barringOptions,data.cliOptions,data.recordingProfile,data.monolineIncomingMode,data.status,data.cloudPbxStatus,data.blockedBy)},PhoneNumber}])},function(module,exports){angular.module("rainbow").service("errorHelperService",["$filter",function($filter){const service=this;service.ErrorCodeLabels={"-1":"unknownError",0:"errorNoServerResponse",400:"Bad request",4e5:"Bad request",400210:"invalidPhoneNumber",400400:"errorWrongPassword",400500:"invalidFile",400504:"companyNameAlreadyExist",400505:"BPCompanyWithoutPaymentConfigurationData",400506:"NoActiveSubscriptionToOffer",400509:"errorDecreaseSubscriptionForbidden",400511:"ActiveDirectoryDomainAlreadyUsed",400514:"errorDecreaseSubscriptionForbidden",400552:"BPCompanyAndECCompanyMustNotBeSame",400601:"outboundAndInternalPrefixesCantBeIdentical",400973:"noCreateUserPermission",400975:"userAlreadyExistsInOtherCompany",400983:"userAlreadyExistsInOtherCompany",400990:"noUserFound",400993:"noUserFound",401:"Authorization failure",401102:"Authorization failure",401202:"errorInvalidToken",401500:"errorUnauthorized",401501:"errorLoginForbidden",401510:"errorUnauthorized",401520:"errorUserNotActive",401521:"errorUserNotActive",403:"Forbidden",403e3:"accessDeniedNotRequiredRole",403001:"accessDeniedNotOwner",403034:"cantDeselectDefaultWebRTCGateway",403035:"cantDeleteDefaultWebRTCGateway",403060:"confLockMsg",403072:"errorIsoMd5Mismatch",403153:"notAllowedToAccessMeeting",403154:"notAllowedToAccessMeeting",403200:"notAllowedToChangeRole",403203:"notAllowedToChangeRole",403204:"notAllowedToMoveExistingUserToThisCompany",403205:"notAllowedToManageUser",403301:"notAllowedToManageCompany",403303:"notAllowedOperation",403304:"notAllowedToAddAnotherAdmin",403311:"errorRemoveSyncOngoingSubscriptionForbidden",403315:"errorRemoveSubscriptionForbidden",403316:"errorRemoveAdminAllocatedSubscriptionForbidden",403317:"errorRemoveClientAllocatedSubscriptionForbidden",403318:"errorAllocatedSubscriptionRemoveForbidden",403335:"errorDecreasePrepaidSubscriptionForbidden",403400:"notAllowedDeleteAppOwner",403500:"notAllowedBlacklistedEmail",403501:"notAllowedBlacklistedEmail",403502:"notAllowedToInviteExternalContacts",403503:"NotAllowedSelfRegistrationEmail",403504:"notAllowedLoggedInUserEmail",403507:"notAllowedSupportEmail",403513:"companyNotABpCompany",403516:"companyNotABpCompany",403517:"companySeenAsTerminated",403518:"companyBpTypeIncompatible",403519:"companyAlreadyLinkedToBp",403520:"companyNotVadBp",403526:"isolatedUser",403531:"resetPasswordBlocked",403532:"resetPasswordForbidden",403608:"errorAssignSubscriptionSyncOngoing",403609:"errorAssignSubscriptionSyncOngoing",403610:"maxSubscriptionAllocationReached",403611:"notAllowedToCreateAnEquipment",403615:"maximumNumberConferenceParticipantsReach",403616:"subscriptionCompanyAdminEssentialAlreadyExists",403617:"roleCompanyAdminEssentialAlreadyExists",403620:"maximumNumberReached",403621:"MaximumNumberConvUsersReach",403624:"notAllowedRemoveService",403625:"errorAllocatedSubscriptionRemoveForbidden",403626:"restrictedConvAccess",403630:"uploadErrorMaxQuotaReached",403655:"userAlreadyCompanyMember",403670:"errorOperationForbiddenOnGuest",403683:"errorOtherOperationInProgress",403700:"errorDeleteSiteWithSystems",403701:"errorDeleteOrganisationLinkedCompany",403702:"errorDeleteCompanyWithSubscriptions",403703:"errorDeleteCompanyWithSites",403704:"errorDeleteCompanyWithUsers",403705:"errorDeleteCompanyStillTerminated",403706:"errorRemoveBusinessPartnerRole",403719:"externalTrunkChangeForbidden",403721:"numberingPlanCantBeUpdated",403722:"outgoingPrefixChangeForbidden",403723:"cannotRemoveCompanyPublicNumber",403724:"notAllowedDeleteCloudPbxWithPublicNumbers",403725:"notAllowedDeleteCloudPbxWithUsedExtensions",403762:"forbiddenOperationGroupUsedByAutomatedAttendantMenu",403770:"forbiddenOperationUserBelongsToGroup",403780:"forbiddenOperationUserAlreadyManager",403784:"forbiddenOperationGroupStillAssocToWelcome",403785:"forbiddenOperationUserStillAssocToWelcome",403786:"forbiddenOperationUserBelongsToGroup",403792:"errorDialInLicenseAssignment",403910:"errorOtherOperationInProgress",403911:"errorOtherOperationInProgress",404:"resourceNotFound",404e3:"resourceNotFound",404001:"resourceNotFoundUpdateImpossible",404002:"resourceNotFoundDeleteImpossible",404116:"archivedOrDeletedConversation",404300:"noValidOfferReferenceInACTISFile",404301:"offerNotFound",409e3:"errorConflict",409005:"inviteUsersError",409008:"emptyVoiceMessage",409011:"noMessagesToExport",409251:"DDIAlreadyAssociatedToCompany",409552:"internalNumberAlreadyUsed",409555:"publicNumberAlreadyExists",409557:"notAllowedDeleteUserAssociatedToCloudPbx",409600:"userAlreadyExist",409601:"invitationReSentConflict",409602:"userAlreadyNetworkMember",409603:"invitationReSentConflict",409620:"offerAlreadySubscribed",409623:"conferenceOfferAlreadySubscribed",409625:"errorUpdateSyncOngoingSubscriptionForbidden",409800:"companyNotIrBp",409801:"companyNotLinkedToBp",409802:"actisCompanyAdminMismatch",409803:"actisCompanyNameMismatch",413e3:"uploadErrorTooLarge",429:"tooManyRequests",500:"errorInternalServerError",1001:"extensionNotLinkedToEquipment",1002:"extensionHasNoIdentifier",1003:"extensionDoesNotExist",1004:"extensionLookupFailure",1005:"extensionConflict",1006:"nonUniqueEquipmentForExtension",1007:"userAlreadyAssociatedToExtension",1008:"extensionAssociatedToAnotherUser",1009:"failedToAttachExtension",1010:"userHasNoExtension",1011:"userHasTooManyExtensions",1012:"failedToDetachExtension",2001:"companyHasNoCloudPbx",2002:"extensionNumberNotCompatibleWithCloudPBXNumberingPlan",2003:"extensionNumberAlreadyAssignedToAnotherUser",2004:"userAlreadyAssignedToAnotherEquipment",2005:"failedToAssociateExtensionNumber",2006:"failedToUpdateExtensionNumber",2007:"noSipDeviceWithMacAddress",2008:"sipDeviceWithMacAddressBelongsToAnotherCompany",2009:"sipDeviceWithMacAddressAttachedToAnotherUser",2010:"anotherSipDeviceWithMacAddressAttachedToUser",2011:"cannotManageSipDeviceForUserWithoutExtensionNumber",2012:"failedToAttachSipDeviceToUser",2013:"cannotManagePublicNumberForUserWithoutExtensionNumber",2014:"publicNumberDoesNotExist",2015:"publicNumberAlreadyAssociatedToAnotherUser",2016:"anotherPublicNumberIsAttachedToUser",2017:"failedToAttachPublicNumberToUser",2018:"failedToDetachExtensionNumberNotProvided",2019:"userAttachedToAnotherExtensionNumber",2020:"cannotDetachPublicNumberFromUserWithoutExtensionNumber",2021:"failedToDetachPublicNumberFromUser",2022:"failedToDetachSipDeviceFromUser"},service.portalErrorCodeLabels={subscription:{403614:"forbiddenDurationChangeBecausePriceChanges"},massprovisioning:{4e5:"invalidValue",400501:"invalidFile",400502:"invalidColumnName",400504:"invalidFile",400505:"invalidValueInActionColumn",400506:"invalidValueInActionColumn",400508:"noDataToImport",400600:"deviceTypeCannotBeUpdated",400601:"duplicateDeviceIds",400602:"duplicateMacAdresses",400603:"invalidDeviceTypes",400604:"missingDeviceTypeInLines",400605:"invalidEquipment",400972:"noCreateUserPermission",400973:"noCreateUserPermission",400980:"noUpdateUserPermission",400981:"noUpdateUserPermission",400990:"noDeleteUserPermission",400991:"noDeleteUserPermission",400994:"noUserFound",403610:"errorMaxSubscriptionReached",403622:"userDoesNotHaveVoiceLicense",404600:"deviceDoesNotExist",404601:"noCloudPbxInCompany"},rvcpprovisioning:{403622:"noVoiceLicenceAllocatedToUser",403684:"overflowConfigurationChangesStillInProgress",403694:"forbiddenOperationEquipmentHasGroups",403695:"publicNumberAlreadyDefault",403699:"forbiddenOperationEquipmentHasWelcomeService",403728:"forbiddenOperationEquipmentHasDevices",403739:"forbiddenOperationWelcomeServiceUsed",403744:"forbiddenOperationUserAlreadyAssocToWelcome",403745:"forbiddenOperationGroupAlreadyAssocToWelcome",403752:"forbiddenOperationMoreThanThreeConsecutiveMenus",403754:"forbiddenOperationMenuLinkedToAnotherMenu",403761:"forbiddenOperationUserLinkedToAutomatedAttendantMenu",403765:"forbiddenOperationMenuAlreadyLinkedToAnotherMenu",403767:"forbiddenOperationSubMenuLinkedToItsParent",409253:"forbiddenOperationCantAssignDeviceToAttendantUser",409556:"companyHasAlreadyACloudPbx",409560:"macAddressAlreadyUsed",409561:"deviceStillUsedByUser",409562:"deviceAlreadyUsed",409563:"deviceAlreadyUsedByAnotherSystem",409565:"forbiddenOperationCallForkingToPublicNumberUsedByCloudPbx",413e3:"fileTooLarge",415e3:"audioFileTypeNotSupported"},authentication:{401102:"Authorization failure",401103:"Authorization failure",401500:"Authorization failure",401520:"Forbidden",401521:"Forbidden",401522:"Forbidden",401523:"Forbidden",401530:"Authorization failure",401600:"Authorization failure",401700:"Authorization failure",403e3:"Authorization failure",5e5:"errorInternalServerError",503e3:"resourceNotFound"}},service.handleErrorMessage=function(response,context){service.getErrorFullMessage(response,context)},service.handleError=function(response,params){const portal=service.getPortal(response);let errorDetailsCode=response.status;response.data&&response.data.errorDetailsCode&&(errorDetailsCode=response.data.errorDetailsCode);const error=new Error(service.getDetailedErrorMessage(response));return error.status=response.status,error.fieldErrors=service.getBadRequestFieldErrors(response),error.errorDetailsCode=errorDetailsCode,error.errorDetailsLabel=service.getErrorCodeLabel(errorDetailsCode,portal),error.errorDetailsData=service.getErrorDetailsData(response,params),error.fieldErrors&&Object.keys(error.fieldErrors).length>0?error.translatedMessage=$filter("translate")("someFieldValuesAreInvalid"):error.translatedMessage=service.getTranslatedErrorMessage(response,params,portal),error.portal=portal,error},service.getPortal=function(response){const url=response.config?response.config.url:void 0,res=url?url.match(/api\/rainbow\/(\w+)\//):void 0;return res?res[1]:void 0},service.getBadRequestFieldErrors=function(response){const fieldErrors={},errorDetails=response.data?response.data.errorDetails:null,errorDetailsCode=response.data?response.data.errorDetailsCode:null,errorDetailsData=response.data?response.data.errorDetailsData:null;return 400===response.status?(errorDetails&&(errorDetails instanceof Array?errorDetails.forEach((function(details){fieldErrors[details.param]||(fieldErrors[details.param]={ok:!1,message:details.msg,value:details.value})})):errorDetails.param&&(fieldErrors[errorDetails.param]||(fieldErrors[errorDetails.param]={ok:!1,message:errorDetails.msg,value:errorDetails.value}))),400511===errorDetailsCode&&(fieldErrors.office365Tenant={ok:!1,message:service.ErrorCodeLabels[400511]}),400601===errorDetailsCode&&(fieldErrors.outgoingPrefix={ok:!1,message:service.ErrorCodeLabels[400601]},fieldErrors.numberingPrefix={ok:!1,message:service.ErrorCodeLabels[400601]})):409===response.status&&409e3===errorDetailsCode&&errorDetailsData&&(errorDetailsData.loginEmail&&(fieldErrors.loginEmail={ok:!1,label:"userAlreadyExist"}),errorDetailsData.authenticationExternalUid&&(fieldErrors.authenticationExternalUid={ok:!1,label:"userIdAlreadyUsed"})),fieldErrors},service.getServerErrorMessage=function(response){let errorMessage=service.getStatusErrorMessage(response);return response.data&&response.data.errorMsg&&(errorMessage="",response.data.errorDetails?response.data.errorDetails instanceof Array?errorMessage+=$filter("translate")("one or more fields are invalid"):response.data.errorDetails.msg?errorMessage+=response.data.errorDetails.msg:errorMessage+=response.data.errorDetails:errorMessage+=response.data.errorMsg),errorMessage},service.getStatusErrorMessage=function(response){let errorMessage;return errorMessage=500===response.status?"Internal server error":-1===response.status?"Service unavailable":415===response.status?"Unsupported Media Type":413===response.status?"Request Entity Too Large":404===response.status?"Resource not found":403===response.status?"Access is forbidden":401===response.status?"Authorization failure":400===response.status?"Bad request":429===response.status?"Too many requests":response.statusText?response.statusText:"Unknown error",errorMessage},service.getDetailedErrorMessage=function(response){let errorMessage=service.getServerErrorMessage(response);return response.data&&response.data.errorDetailsData&&"string"==typeof response.data.errorDetailsData&&(errorMessage+=" "+response.data.errorDetailsData),response.data&&response.data.errorDetails&&response.data.errorDetails instanceof Array&&response.data.errorDetails.length>0&&(errorMessage+=" : "+response.data.errorDetails[0].msg),errorMessage},service.getErrorDetailsData=function(response,params){let errorDetailsData;return errorDetailsData=response.data&&response.data.errorDetailsData&&"object"==typeof response.data.errorDetailsData?Object.assign({},response.data.errorDetailsData,params):params,errorDetailsData},service.getTranslatedErrorMessage=function(response,params,portal){if(500===response.status)return service.getLocalizedError("500");let errorDetailsCode=null;errorDetailsCode=response.data&&response.data.errorDetailsCode&&response.data.errorDetailsCode>0?response.data.errorDetailsCode:response.status;const errorDetailsData=service.getErrorDetailsData(response,params);return service.getTranslatedErrorMessageByDetailsCode(errorDetailsCode,errorDetailsData,service.getServerErrorMessage(response),portal)},service.getTranslatedErrorMessageByDetailsCode=function(errorDetailsCode,errorDetailsParams,serverErrorMessage,portal){let errorMessage,errorDetailedInfo;return errorDetailsCode&&(errorMessage=service.getLocalizedError(errorDetailsCode,errorDetailsParams,portal)),serverErrorMessage&&(errorDetailedInfo=service.getErrorMessageWithoutIds(serverErrorMessage)),errorMessage?"massprovisioning"===portal&&(errorDetailsCode?errorMessage+=errorDetailedInfo?". "+$filter("translate")("errorServerDetails",{errorcode:errorDetailsCode,errormsg:errorDetailedInfo}):". "+$filter("translate")("errorServerDetails",{errorcode:errorDetailsCode}):errorDetailedInfo&&(errorMessage+=". "+$filter("translate")("errorServerDetails",{errormsg:errorDetailedInfo}))):errorDetailsCode?errorDetailedInfo?(errorMessage=$filter("translate")("anErrorOccurred"),errorMessage+=". "+$filter("translate")("errorServerDetails",{errorcode:errorDetailsCode,errormsg:errorDetailedInfo})):errorMessage=$filter("translate")("anErrorOccurred",{errorcode:errorDetailsCode}):(errorMessage=$filter("translate")("anErrorOccurred"),errorDetailedInfo&&(errorMessage+=". "+$filter("translate")("errorServerDetails",{errormsg:errorDetailedInfo}))),errorMessage},service.getLocalizedError=function(errorCode,params,portal){let errorMessage;if(errorCode){const errorLabel=service.getErrorCodeLabel(errorCode,portal);if(errorLabel){const translation=$filter("translate")(errorLabel,params);translation!==errorLabel&&(errorMessage=translation)}}return errorMessage},service.getErrorCodeLabel=function(errorCode,portal){return portal&&service.portalErrorCodeLabels[portal]&&service.portalErrorCodeLabels[portal][errorCode]?service.portalErrorCodeLabels[portal][errorCode]:service.ErrorCodeLabels[errorCode]},service.getErrorFullMessage=function(response,context){let errorMessage=context?context+" failure : ":"";response&&response.data?(errorMessage+=response.data.errorMsg,response.data.errorDetails&&(errorMessage+=" - ",response.data.errorDetails instanceof Array?response.data.errorDetails.forEach((function(details){errorMessage+=details.msg})):response.data.errorDetails.msg?errorMessage+=JSON.stringify(response.data.errorDetails.msg):errorMessage+=response.data.errorDetails)):errorMessage+="Unknow error - Something goes really wrong";let httpId="";return response&&response.headers&&(httpId=response.headers("x-rainbow-request-id"),errorMessage+=" x-rainbow-request-id = "+httpId),errorMessage},service.getErrorMessageWithoutIds=function(message){return message?message.replaceAll(new RegExp("\\s[\\d]{1}[a-f\\d]{23}","g"),""):message}}])},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12),xmpp_service_1=__webpack_require__(9),room_service_1=__webpack_require__(25),contact_service_1=__webpack_require__(6),virtualBackground_service_1=__webpack_require__(68),utilities_service_1=__webpack_require__(113),webrtcConfigAndUtils_1=__webpack_require__(44),speechRecognition_service_1=__webpack_require__(422),deviceManagement_service_1=__webpack_require__(56),main_service_1=__webpack_require__(15),webinars_service_1=__webpack_require__(168),webinar_model_1=__webpack_require__(111),event_model_1=__webpack_require__(19),rxjs_1=__webpack_require__(7),event_service_1=__webpack_require__(11);class WebinarConferenceService{constructor(webinarService){this.webinarService=webinarService,this.startConferencePromiseResolvers={},this.activeWebinar=null,this.activeWebinarSubject=new rxjs_1.Subject,this.connected=!0,this.reconnectingSessionIds=[],this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.virtualBackgroundService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.speechRecognitionService=speechRecognition_service_1.SpeechRecognitionService.getInstance(),this.utilitiesService=utilities_service_1.UtilitiesService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.groupChatListener=null,this.conferenceListener=null,this.xmppJingleListener=null,this.xmppStagingListener=null,this.isInteractEventSent=!1,this.subscribeToPublisherPromiseResolvers={}}static create(webinarService){return new WebinarConferenceService(webinarService)}async reconnect(){try{this.attachListeners(),this.activeWebinar&&(this.activeWebinar=await this.webinarService.getWebinar(this.activeWebinar.id),this.activeWebinar.session&&(await this.disconnectParticipant(this.activeWebinar,this.contactService.userContact.dbId),this.activeWebinarSubject.next(event_model_1.RBEvent.create("ON_ACTIVE_WEBINAR_RECONNECT",{webinar:this.activeWebinar})))),this.logger.info("[WebinarConferenceService] reconnect -- success")}catch(error){this.logger.error("[WebinarConferenceService] reconnect -- failure -- "+error)}}attachListeners(){this.groupChatListener&&this.xmppService.connection.deleteHandler(this.groupChatListener),this.groupChatListener=this.xmppService.connection.addHandler(stanza=>(this.onGroupchatMessage(stanza),!0),"jabber:iq:notification","message","groupchat"),this.conferenceListener&&this.xmppService.connection.deleteHandler(this.conferenceListener),this.conferenceListener=this.xmppService.connection.addHandler(stanza=>(this.onConferenceMessage(stanza),!0),"jabber:iq:conference:2","message",null),this.xmppJingleListener&&this.xmppService.connection.deleteHandler(this.xmppJingleListener),this.xmppJingleListener=this.xmppService.connection.addHandler(stanza=>(this.onXmppJingleMessage(stanza),!0),"urn:xmpp:jingle-message:0","message",null),this.xmppServiceSubscription&&(this.xmppServiceSubscription.unsubscribe(),this.xmppServiceSubscription=null),this.xmppServiceSubscription=this.xmppService.connection.jingle.rxSubject.subscribe(event=>{this.onJingleMessage(event)}),this.videoServiceSubscription&&(this.videoServiceSubscription.unsubscribe(),this.videoServiceSubscription=null),this.videoServiceSubscription=this.webinarService.webrtcP2PService.subscribe(event=>{this.onVideoServiceEvent(event)}),this.xmppConnectionSubscription&&(this.xmppConnectionSubscription.unsubscribe(),this.xmppConnectionSubscription=null),this.xmppConnectionSubscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onXmppConnectionChangeEvent(event)}),this.xmppStagingListener&&this.xmppService.connection.deleteHandler(this.xmppStagingListener),this.xmppStagingListener=this.xmppService.connection.addHandler(stanza=>(this.onAskStagingMessage(stanza),!0),"http://jabber.org/protocol/commands","message"),this.replaceBackgroundSubscription&&(this.replaceBackgroundSubscription.unsubscribe(),this.replaceBackgroundSubscription=null),this.replaceBackgroundSubscription=this.virtualBackgroundService.rxSubject.subscribe(event=>{this.onReplaceBackgroundChangeEvent(event)}),this.deviceManagementSubscription&&(this.deviceManagementSubscription.unsubscribe(),this.deviceManagementSubscription=null),this.deviceManagementSubscription=this.deviceManagementService.subscribe(event=>{this.onMediaDeviceChangeEvent(event)})}async join(webinar){try{if(webinar.session&&this.logger.info("[WebinarConferenceService] join -- existing session object"),webinar.session||(this.logger.info("[WebinarConferenceService] join -- no session object -- try to create from room session info"),this.webinarService.createWebinarSession(webinar,"join")),!webinar.session&&(webinar.isOrganizer||webinar.isSpeaker)){this.logger.info("[WebinarConferenceService] join -- no info in room -- orga or speaker -- start a new session");try{await this.startSession(webinar)}catch(error){}}if(webinar.session&&!webinar.session.localParticipant){const joinPromise=new Promise(resolve=>{this.joinPromiseResolver=resolve});try{await this.joinSession(webinar)}catch(error){try{if(this.logger.info(`[WebinarConferenceService] join failure -- ${error.message} -- Retry once !!!`),await this.disconnectParticipant(webinar,this.webinarService.userContact.dbId),!webinar.session)try{await this.startSession(webinar)}catch(err){}webinar.session||this.webinarService.createWebinarSession(webinar,"join")}catch(err){}await this.joinSession(webinar)}await joinPromise}return this.activeWebinar=webinar,this.activeWebinarSubject.next(event_model_1.RBEvent.create("ON_ACTIVE_WEBINAR",{webinar:webinar})),this.contactService.setBusyState("dnd","sharing"),this.logger.info(`[WebinarConferenceService] join -- ${webinar.id} -- success`),webinar}catch(error){throw this.logger.error("[WebinarConferenceService] join -- "+error.message),error}}async leave(webinar,forced=!1,nowait=!1){try{if(!webinar.session)throw new Error("no session");if(nowait)this.webinarService.conference.putOnStage(webinar,this.webinarService.userContact.dbId,"participant",!1),forced?this.stopSession(webinar):this.disconnectParticipant(webinar,this.webinarService.userContact.dbId);else{try{await this.webinarService.conference.putOnStage(webinar,this.webinarService.userContact.dbId,"participant",!1)}catch(error){}if(forced)try{await this.stopSession(webinar)}catch(error){}else try{await this.disconnectParticipant(webinar,this.webinarService.userContact.dbId)}catch(error){}}return this.removeActiveWebinar(webinar),this.ackAllMessages(webinar),webinar.hideRecordInfo=!1,this.logger.info(`[WebinarConferenceService] leave -- ${webinar.id} -- success`),webinar}catch(error){throw this.logger.error("[WebinarConferenceService] leave -- "+error.message),error}}removeActiveWebinar(webinar){this.activeWebinar&&webinar.id===this.activeWebinar.id&&(this.activeWebinar=null,this.activeWebinarSubject.next(event_model_1.RBEvent.create("ON_ACTIVE_WEBINAR",{webinar:null})),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"))}async addLocalMedia(webinar,media){try{const localParticipant=webinar.session.localParticipant;if(!localParticipant)return this.logger.info(`[WebinarConferenceService] addLocalMedia -- ${webinar.id} -- ${media} -- failure -- noLocalParticipant`),webinar.rxInfoSubject.next(event_model_1.RBEvent.create("error","webinarDisconnected")),webinar;if("audio"===media&&!localParticipant.medias.audio||"video"===media&&!localParticipant.medias.video||"audio+video"===media&&!localParticipant.medias.audio&&!localParticipant.medias.video)if(localParticipant.audioVideoSession){let sessionStream=localParticipant.audioVideoSession.localStreams.pop();sessionStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),sessionStream.stop&&sessionStream.stop(),sessionStream=null,localParticipant.audioVideoSession.removeStream();let addMedias=[media];"audio"===media&&localParticipant.medias.video&&(addMedias=["audio","video"]),"video"===media&&localParticipant.medias.audio&&(addMedias=["audio","video"]);const originalStream=await this.webinarService.webrtcP2PService.getBrowserMedia(addMedias,null,null,null,webinar),stream=await this.virtualBackgroundService.startProcessStream(originalStream,"WebinarConferenceService");localParticipant.audioVideoSession.localStreams.push(stream),await localParticipant.audioVideoSession.addBundleStream(stream),"video"===media&&await localParticipant.audioVideoSession.contentAdd("video",!0),addMedias.forEach(addMedia=>{localParticipant.medias[addMedia]=!0}),localParticipant.audioVideoStream=stream,localParticipant.originalAudioVideoStream=originalStream}else{const medias="audio+video"===media?["audio","video"]:[media],originalStream=await this.webinarService.webrtcP2PService.getBrowserMedia(medias,null,null,null,webinar),stream=await this.virtualBackgroundService.startProcessStream(originalStream,"WebinarConferenceService");this.xmppService.connection.jingle.initiateBundle(webinar.session.jingleJid,this.xmppService.connection.jid,stream,webinar.roomId),localParticipant.audioVideoStream=stream,localParticipant.originalAudioVideoStream=originalStream,medias.forEach(amedia=>{localParticipant.medias[amedia]=!0})}return"sharing"!==media||localParticipant.medias.sharing||this.webinarService.webrtcP2PService.askToAddSharing("webinar_"+webinar.id,!0)||await this.getSharingMedia(webinar,!0),this.logger.info(`[WebinarConferenceService] addLocalMedia -- ${webinar.id} -- ${media} -- success`),webinar}catch(error){throw this.logger.error(`[WebinarConferenceService] addLocalMedia -- ${webinar.id} -- ${media} -- ${error.message}`),webinar.rxInfoSubject.next(event_model_1.RBEvent.create("error","cameraNotAvailable")),error}}async getSharingMedia(webinar,shouldGetAudioForSharing=!0){const stream=await this.webinarService.webrtcP2PService.getBrowserMedia(["sharing"],null,null,25,webinar,shouldGetAudioForSharing);if(0===stream.getAudioTracks().length){const track=stream.getVideoTracks()[0],constraints=track.getConstraints();constraints.frameRate=this.webrtcConfigAndUtils.videoQualityConfiguration.sharing.fixedFrameRate,track.applyConstraints(constraints)}webinar.session.localParticipant.sharingSession=this.xmppService.connection.jingle.initiate(webinar.session.jingleJid,this.xmppService.connection.jid,"sharing",[stream],null,webinar.roomId),webinar.session.localParticipant.sharingStream=stream,webinar.session.localParticipant.medias.sharing=!0}async removeLocalMedia(webinar,media){try{const localParticipant=webinar.session.localParticipant;if("audio"===media&&localParticipant.medias.audio||"video"===media&&localParticipant.medias.video){this.disableAudioVideoMedia(webinar);let addMedias=null;"audio"===media&&localParticipant.medias.video&&(addMedias=["video"]),"video"===media&&localParticipant.medias.audio&&(addMedias=["audio"]),addMedias||(this.webrtcConfigAndUtils.disableAllStreamsForSession(localParticipant.audioVideoSession),this.xmppService.connection.jingle.terminate(localParticipant.audioVideoSession.sid),localParticipant.audioVideoSession=null,localParticipant.audioVideoStream=null,localParticipant.originalAudioVideoStream=null,this.logger.info(`[WebinarConferenceService] removeLocalMedia -- ${webinar.id} -- ${media} -- success`));const originalStream=await this.webinarService.webrtcP2PService.getBrowserMedia(addMedias,null,null,null,webinar),stream=await this.virtualBackgroundService.startProcessStream(originalStream,"WebinarConferenceService");localParticipant.audioVideoSession.localStreams.push(stream),await localParticipant.audioVideoSession.addBundleStream(stream),await localParticipant.audioVideoSession.contentRemove("video",!0),localParticipant.audioVideoStream=stream,localParticipant.originalAudioVideoStream=originalStream,localParticipant.medias[media]=!1,localParticipant.medias.video||this.virtualBackgroundService.stopProcessStream()}return"sharing"===media&&localParticipant.medias.sharing&&(localParticipant.sharingOnStage&&await this.webinarService.conference.putOnStage(webinar,localParticipant.id,"sharing",!1),this.webrtcConfigAndUtils.disableAllStreamsForSession(localParticipant.sharingSession),this.xmppService.connection.jingle.terminate(localParticipant.sharingSession.sid),localParticipant.sharingSession=null,localParticipant.sharingStream=null,localParticipant.medias.sharing=!1),this.logger.info(`[WebinarConferenceService] removeLocalMedia -- ${webinar.id} -- ${media} -- success`),webinar}catch(error){throw this.logger.error(`[WebinarConferenceService] removeMedia -- ${webinar.id} -- ${media} -- ${error.message}`),error}}async removeAllLocalMedias(webinar){try{const localParticipant=webinar.session.localParticipant;return await this.webinarService.conference.putOnStage(webinar,localParticipant.id,"participant",!1),this.webrtcConfigAndUtils.disableAllStreamsForSession(localParticipant.audioVideoSession),this.xmppService.connection.jingle.terminate(localParticipant.audioVideoSession.sid),localParticipant.audioVideoSession=null,localParticipant.audioVideoStream=null,localParticipant.originalAudioVideoStream=null,localParticipant.sharingOnStage&&await this.webinarService.conference.putOnStage(webinar,localParticipant.id,"sharing",!1),this.webrtcConfigAndUtils.disableAllStreamsForSession(localParticipant.sharingSession),this.xmppService.connection.jingle.terminate(localParticipant.sharingSession.sid),localParticipant.sharingSession=null,localParticipant.sharingStream=null,localParticipant.medias.sharing=!1,this.logger.info(`[WebinarConferenceService] removeAllLocalMedias -- ${webinar.id} -- success`),webinar}catch(error){throw this.logger.error(`[WebinarConferenceService] removeAllLocalMedias -- ${webinar.id} -- ${error.message}`),error}}async muteParticipant(webinar,participantId,mute=!0,forced=!1){try{if(!forced&&participantId===webinar.session.localParticipant.id&&webinar.session.localParticipant.mute===mute)return webinar;const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${participantId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({option:mute?"mute":"unmute"}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] muteParticipant -- ${participantId} -- ${mute} -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"muteParticipant");throw this.logger.error("[WebinarConferenceService] "+errorInfo.message),errorInfo.error}}async updateParticipantLevels(webinar,publisher,media,width,onStage=!0,forceTopLevel=!1){try{let temporalLevel=onStage?2:0,subStreamLevel=1;if(!width)return webinar;if(width>=1024&&(subStreamLevel=2),width<=320&&(subStreamLevel=0,temporalLevel=0),forceTopLevel&&(subStreamLevel=2,temporalLevel=2),subStreamLevel!==publisher.subStreamLevel||publisher.temporalLevel!==temporalLevel){const oriSubStreamLevel=subStreamLevel,oriTemporalLevel=temporalLevel;publisher.temporalLevel=temporalLevel,publisher.subStreamLevel=subStreamLevel;const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${webinar.session.localParticipant.id}`,headers=this.authService.getPostHeader(),bodyObj={option:"update",media:media,temporalLevel:temporalLevel,subStreamLevel:subStreamLevel,publisherId:publisher.id},response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(bodyObj)});if(!response.ok)throw publisher.temporalLevel=oriTemporalLevel,publisher.subStreamLevel=oriSubStreamLevel,response;this.logger.info(`[WebinarConferenceService] updateParticipantLevels -- ${webinar.id} -- ${publisher.id} -- ${media} -- substream: ${subStreamLevel} -- temporal: ${temporalLevel} -- success`),publisher.rxSubject.next(event_model_1.RBEvent.create("subStreamLevel",{type:media}))}return webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateParticipantLevels");return this.logger.error("[WebinarConferenceService] "+errorInfo.message),webinar}}async putOnStage(webinar,participantId,type,onStage,master=!1,oldMasterOnStage=!1){try{const actors={};[webinar.session.localParticipant].concat(webinar.session.speakerParticipants).forEach(participant=>{participant.onStage&&(actors[participant.id+"_participant"]={userId:participant.id,type:"participant",properties:["staged"]}),participant.sharingOnStage&&(actors[participant.id+"_sharing"]={userId:participant.id,type:"sharing",properties:["staged"]})});let actor=actors[`${participantId}_${type}`];actor||(actor=actors[`${participantId}_${type}`]={userId:participantId,type:type}),webinar.session.masterMedia&&(master?"sharing"===type&&webinar.session.masterMedia.includes("sharing")?actors[webinar.session.masterMedia].properties=["staged"]:actors[webinar.session.masterMedia].properties=[oldMasterOnStage?"staged":"backstaged"]:actors[webinar.session.masterMedia].properties=["master"]),actor.properties=[master&&onStage?"master":onStage?"staged":"backStaged"];const body=JSON.stringify({actors:Object.keys(actors).map(key=>actors[key])}),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/stage`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] putOnStage -- ${webinar.id} -- ${participantId} -- ${type} -- ${onStage} -- ${master} -- success`),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"putOnStage")).error}}async startWebinar(webinar){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/update`,headers=this.authService.getPostHeader(),body=JSON.stringify({option:"webinar"}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] startWebinar -- ${webinar.id} -- success`),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"startWebinar")).error}}async stopWebinar(webinar){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/stop`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] stopWebinar -- ${webinar.id} -- success`),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopWebinar");return this.logger.error(`[WebinarConferenceService] stopWebinar -- ${webinar.id} -- failure -- ${errorInfo.error.message}`),webinar}}async raiseHand(webinar,userId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${userId}/raise-hand`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] raiseHand -- ${webinar.id} -- success`),webinar.session.localParticipant.raiseHand=!0,webinar.session.localParticipant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",!0)),webinar.rxParticipantsSubject.next(),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"raiseHand")).error}}async lowerHand(webinar,userId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${userId}/lower-hand`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] lowerHand -- ${webinar.id} -- success`),webinar.session.localParticipant.raiseHand=!1,webinar.session.localParticipant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",!1)),webinar.rxParticipantsSubject.next(),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"lowerHand")).error}}async allowAttendeeToTalk(webinar,userId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${userId}/allow-talk`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;this.logger.info(`[WebinarConferenceService] allowAttendeeToTalk -- ${webinar.id} -- ${userId} -- success`);const participant=webinar.session.getParticipantById(userId);return participant.raiseHand=!1,participant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",!1)),webinar.updateRaiseHandParticipants(),webinar.rxSubject.next(),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"allowAttendeeToTalk")).error}}async disableAttendeeToTalk(webinar,userId){try{this.logger.info(`[WebinarConferenceService] disableAttendeeToTalk -- ${webinar.id} -- ${userId}`);const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${userId}/disable-talk`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers});if(!response.ok)throw response;return webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"disableAttendeeToTalk")).error}}async activateWebinarSound(webinar){try{webinar.session&&webinar.session.speakerParticipants.forEach(speaker=>{speaker.audioVideoAudioElement&&speaker.audioVideoAudioElement.play(),speaker.sharingAudioElement&&speaker.sharingAudioElement.play()})}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"activateWebinarSound")).error}}async askForStaging(webinar,participantId){try{const participant=webinar.session.getParticipantById(participantId),message=$msg({from:this.xmppService.jid,to:participant.contact.jid,type:"set"});message.c("command",{xmlns:"http://jabber.org/protocol/commands",node:"request-staging",webinarId:webinar.id}),await this.xmppService.sendIQ(message)}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"askForStaging")).error}}async declineStagingInvitation(webinar,participantId){try{const participant=webinar.session.getParticipantById(participantId),message=$msg({from:this.xmppService.jid,to:participant.contact.jid,type:"set"});message.c("command",{xmlns:"http://jabber.org/protocol/commands",node:"refuse-staging",webinarId:webinar.id}),await this.xmppService.sendIQ(message)}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"askForStaging")).error}}hasActiveWebinarSession(){return null!==this.activeWebinar}isActiveWebinar(webinar){return this.activeWebinar&&webinar.id===this.activeWebinar.id}disableAudioVideoMedia(webinar){if(webinar.session&&webinar.session.localParticipant&&webinar.session.localParticipant.audioVideoSession){let originalAudioVideoStream=webinar.session.localParticipant.originalAudioVideoStream;originalAudioVideoStream&&(originalAudioVideoStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),originalAudioVideoStream=null);let sessionStream=webinar.session.localParticipant.audioVideoSession.localStreams.pop();sessionStream&&(sessionStream.getTracks().forEach(track=>{track.enabled=!1,track.stop(),track=null}),sessionStream.stop&&sessionStream.stop(),sessionStream=null),webinar.session.localParticipant.audioVideoSession.removeStream(),this.logger.info("[WebinarConferenceService] disableAudioVideoMedia for localParticipant -- "+webinar.id)}}enableSubtitles(webinar,enable){webinar.subtitlesEnable=enable,enable?webinar.session.localParticipant.audioVideoStream&&this.speechRecognitionService.init("webinar",webinar.session.localParticipant.audioVideoStream,null):this.speechRecognitionService.stop()}startSession(webinar){return new Promise(async(resolve,reject)=>{try{if(webinar.isAttendee&&!webinar.session)webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(`[WebinarConferenceService] startSession -- ${webinar.id} -- create a session object`),resolve(webinar);else{const startTimeout=setTimeout(()=>{this.startConferencePromiseResolvers[webinar.id]&&delete this.startConferencePromiseResolvers[webinar.id],reject(new Error("Webinar start practice session timeout"))},6e3);this.startConferencePromiseResolvers[webinar.id]=()=>{clearTimeout(startTimeout),this.startConferencePromiseResolvers[webinar.id]&&delete this.startConferencePromiseResolvers[webinar.id],resolve(webinar)};const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/start`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response}this.logger.info(`[WebinarConferenceService] startSession -- ${webinar.id} -- success`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startSession -- "+webinar.id);this.logger.info(`[WebinarConferenceService] startSession -- ${webinar.id} -- error -- ${errorInfo.message}`),reject(errorInfo.error)}})}async joinSession(webinar){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/join?context=webinar`,headers=this.authService.getPostHeader(),resourceId=this.xmppService.getResourceFromJid(this.xmppService.fullJid),body=JSON.stringify({mute:!0,resourceId:resourceId}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;if(webinar.session.jingleJid=data.jingleJid,!0===data.isAlreadyConnected)throw new Error("already connected to this webinar");return this.logger.info(`[WebinarConferenceService] joinSession -- ${webinar.id} -- success`),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"joinSession -- "+webinar.id)).error}}async stopSession(webinar){try{webinar.action="stopSession";const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/stop`,headers=this.authService.getPostHeader(),body=JSON.stringify({webinarRoomType:"practiceRoom"}),response=await fetch(url,{method:"DELETE",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info(`[WebinarConferenceService] stopSession -- ${webinar.id} -- success`),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"stopSession")).error}}async disconnectParticipant(webinar,participantId){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.room.dbId}/users/${participantId}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;return webinar.session&&(webinar.session.removeParticipant(participantId),participantId===this.contactService.userContact.dbId&&(webinar.session.speakerParticipants=[])),webinar.rxParticipantsSubject.next(),this.logger.info(`[WebinarConferenceService] disconnectParticipant -- ${webinar.id} -- usrId:${participantId} -- success`),webinar}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"disconnectParticipant")).error}}async createAudioElement(id,stream){let audioElem=document.getElementById(id);if(!audioElem){audioElem=document.createElement("audio"),audioElem.setAttribute("id",id),audioElem.setAttribute("style","display:none"),audioElem.setAttribute("class","webinarAudioElementClass");const currentAudioOutputDevice=this.deviceManagementService.getCurrentAudioOutputDevice();await this.deviceManagementService.setSetSinkIdForAudioElement(audioElem,currentAudioOutputDevice),document.body.appendChild(audioElem)}return audioElem.srcObject=stream,audioElem.play().catch(()=>{this.isInteractEventSent||(this.isInteractEventSent=!0,this.activeWebinarSubject.next(event_model_1.RBEvent.create("ON_ACTIVE_WEBINAR_NOSOUND",{webinar:this.activeWebinar})))}),audioElem}updateAudioElementsOutput(){const webinarAudioElements=document.getElementsByClassName("webinarAudioElementClass"),currentAudioOutputDevice=this.deviceManagementService.getCurrentAudioOutputDevice();Array.from(webinarAudioElements).forEach(async webinarAudioElement=>{try{await this.deviceManagementService.setSetSinkIdForAudioElement(webinarAudioElement,currentAudioOutputDevice),webinarAudioElement.play()}catch(error){}})}async onGroupchatMessage(stanza){try{const stanzaElem=$(stanza),eventElem=stanzaElem.find("event[xmlns='jabber:iq:notification']");if(eventElem.length){const roomBareJid=this.xmppService.getBareJidFromJid(stanzaElem.attr("from")),room=this.roomService.getRoomByJid(roomBareJid);if(!room)return!0;const webinar=room&&room.isWebinarRoom()?await this.webinarService.getWebinar(room.conference.webinar.id):null;if(!webinar)throw new Error("webinar not found for roomId : "+room.dbId);switch(eventElem.attr("name")){case"conferenceAdd":{const webinarTypeElem=stanzaElem.find("webinar").find("room-type");if(!webinar.isAttendee&&webinarTypeElem.length&&"waitingRoom"===webinarTypeElem.text())return webinar.status="waitingRoom",webinar.rxSubject.next(),!0;webinar.session||(webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(`[WebinarConferenceService] onGroupchatMessage -- conferenceAdd -- ${webinar.id} -- create a session object`),this.startConferencePromiseResolvers[webinar.id]&&this.startConferencePromiseResolvers[webinar.id](),webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),this.webinarService.submitEvent("WEBINAR_NOTIFICATION",{webinar:webinar,from:eventElem.attr("jid"),action:"start"}),this.logger.info(`[WebinarConferenceService] onGroupchatMessage -- conferenceAdd -- ${webinar.id} -- success`))}break;case"conferenceRemove":{const webinarTypeElem=stanzaElem.find("webinar").find("room-type");if(webinarTypeElem.length){const reason=webinarTypeElem.text();"webinar"!==reason&&"waitingRoom"!==reason||(webinar.status="terminated"),"practiceRoom"===reason&&(webinar.status="upcoming",webinar.practiceRoom.conference.sessions=[])}webinar.session=null,webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),"terminated"===webinar.status&&(this.ackAllMessages(webinar),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINAR_TERMINATED,webinar)),this.logger.info("[WebinarConferenceService] onGroupchatMessage -- conferenceRemove -- "+webinar.id)}break;case"webinarStart":webinar.isAttendee&&!webinar.room&&this.webinarService.submitEvent("WEBINAR_NOTIFICATION",{webinar:webinar,action:"start"}),webinar.room&&webinar.room.conference&&webinar.room.conference.sessions.length&&webinar.room.conference.sessions[0].startDate&&(webinar.room.conference.sessions[0].startDate=new Date),await this.handleStage(webinar,stanzaElem),webinar.status="inProgress",webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),this.webinarService.submitEvent("WEBINAR_NOTIFICATION",{webinar:webinar,from:eventElem.attr("jid"),action:"start"}),this.logger.info("[WebinarConferenceService] onGroupchatMessage -- webinarStart -- "+webinar.id);break;case"stageUpdate":await this.handleStage(webinar,stanzaElem);break;case"webinarDelete":this.webinarService.removeWebinar(webinar),this.logger.info(`[WebinarConferenceService] onGroupchatMessage -- webinarDelete -- ${webinar.id}  -- remove webinar`)}}return!0}catch(error){return this.logger.error("[WebinarConferenceService] onGroupchatMessage -- "+error.message),!0}}async ackAllMessages(webinar){if(webinar.room){let conversation=this.webinarService.conversationService.getConversation(webinar.room.jid);conversation||(conversation=await this.webinarService.conversationService.getOrCreateConversation(webinar.room.jid,"room")),this.webinarService.conversationService.ackAllMessages(conversation)}if(webinar.practiceRoom){let conversation=this.webinarService.conversationService.getConversation(webinar.practiceRoom.jid);conversation||(conversation=await this.webinarService.conversationService.getOrCreateConversation(webinar.practiceRoom.jid,"room")),this.webinarService.conversationService.ackAllMessages(conversation)}}async onXmppJingleMessage(stanza){try{const stanzaElem=$(stanza),fromJid=stanzaElem.attr("from"),proposeElem=stanzaElem.find("propose");if(proposeElem.length>0){const confId=proposeElem.find("conference").attr("id"),webinar=this.webinarService.getWebinarBySessionId(null,confId);if(webinar){const id=proposeElem.attr("id");this.xmppService.send($msg({from:this.contactService.userContact.fullJid,to:this.contactService.userContact.jid}).c("accept",{xmlns:"urn:xmpp:jingle-message:0",id:id})),this.xmppService.send($msg({from:this.contactService.userContact.fullJid,to:this.xmppService.getBareJidFromJid(fromJid)}).c("proceed",{xmlns:"urn:xmpp:jingle-message:0",id:id})),this.logger.info(`[WebinarConferenceService] onXmppJingleMessage -- ${webinar.id} -- accept propose and proceed`)}}return!0}catch(error){return this.logger.error("[WebinarConferenceService] onXmppJingleMessage -- "+error.message),!0}}async onAskStagingMessage(stanza){try{const stanzaElem=$(stanza),from=stanzaElem.attr("from"),commandElem=stanzaElem.find("command"),webinarId=commandElem.attr("webinarId");if(!webinarId)return!0;const fromContact=this.contactService.getContactByJid(this.xmppService.getBareJidFromJid(from)),webinar=await this.webinarService.getWebinar(webinarId);if(commandElem.length>0){const command=commandElem.attr("node");switch(this.logger.info(`[WebinarConferenceService] onAskStagingMessage -- ${webinarId} -- ${command}`),command){case"request-staging":webinar.rxAskStagingSubject.next(event_model_1.RBEvent.create("REQUEST_STAGING",{webinar:webinar,fromContact:fromContact}));break;case"refuse-staging":webinar.rxAskStagingSubject.next(event_model_1.RBEvent.create("REFUSE_STAGING",{webinar:webinar,fromContact:fromContact}))}}return!0}catch(error){return this.logger.error("[WebinarConferenceService] onAskStagingMessage -- "+error.message),!0}}async onConferenceMessage(stanza){let internalStep="enter";try{const stanzaElem=$(stanza),roomId=stanzaElem.find("room-id").text(),webinar=this.webinarService.getWebinarByRoomId(roomId);if(!webinar)return this.logger.debug(`[WebinarConferenceService] onConferenceMessage -- roomId ${roomId} -- no webinar`),!0;const conferenceInfoElems=stanzaElem.find("conference-info");if(conferenceInfoElems.length){switch($(conferenceInfoElems).attr("event")){case"webinarStart":return internalStep="event webinarStart",webinar.isAttendee&&!webinar.room&&this.webinarService.submitEvent("WEBINAR_NOTIFICATION",{webinar:webinar,action:"start"}),webinar.room&&webinar.room.conference&&webinar.room.conference.sessions.length&&webinar.room.conference.sessions[0].startDate&&(webinar.room.conference.sessions[0].startDate=new Date),webinar.status="inProgress",webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),this.logger.info("[WebinarConferenceService] onConferenceMessage -- webinarStart -- "+webinar.id),!0;case"webinarDelete":internalStep="event webinarDelete",this.webinarService.removeWebinar(webinar),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- webinarDelete -- ${webinar.id}  -- remove webinar`);break;case"conferenceAdd":internalStep="event conferenceAdd",webinar.session||(webinar.session=webinar_model_1.WebinarSession.create(),this.logger.info(`[WebinarConferenceService] onConferenceMessage(conferenceAdd) -- ${webinar.id} -- create a session object`),this.startConferencePromiseResolvers[webinar.id]&&this.startConferencePromiseResolvers[webinar.id](),webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- conferenceAdd -- ${webinar.id} -- success`));break;case"conferenceRemove":internalStep="event conferenceRemove";const webinarTypeElem=stanzaElem.find("webinar").find("room-type");if(webinarTypeElem.length){const reason=webinarTypeElem.text();"webinar"!==reason&&"waitingRoom"!==reason||(webinar.status="terminated"),"practiceRoom"===reason&&(webinar.status="upcoming",webinar.practiceRoom.conference.sessions=[])}return webinar.session=null,webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE),"terminated"===webinar.status&&this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINAR_TERMINATED,webinar),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- conferenceRemove -- ${webinar.id}  -- session terminate`),!0}const conferenceStateElems=stanzaElem.find("conference-state");if(conferenceStateElems.length){internalStep="conference-state";if(!("true"===$(conferenceStateElems).find("active").text()))return this.removeActiveWebinar(webinar),webinar.session=null,"inProgress"===webinar.status&&(webinar.status="terminated",webinar.rxSubject.next(),this.webinarService.submitEvent(webinars_service_1.WebinarService.WEBINARS_UPDATE)),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- session terminate`),!0}const action=$(conferenceInfoElems[0]).attr("action");if(webinar.session&&webinar.session.jingleJid){if("raise-hand"===action||"lower-hand"===action){internalStep="action raise-hand or lower-hand";const participantId=stanzaElem.find("user-id").text(),participant=webinar.session.getParticipantById(participantId);participant&&(this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- ${participantId} -- ${action}`),participant.raiseHand="raise-hand"===action,participant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",participant.raiseHand)),webinar.updateRaiseHandParticipants(),webinar.rxParticipantsSubject.next(),webinar.rxSubject.next())}if("allow-talk"===action){internalStep="action allow-talk";const participantId=stanzaElem.find("user-id").text(),participant=webinar.session.getParticipantById(participantId);participant&&(this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- ${participantId} -- allow-talk`),participant.raiseHand=!1,participant.allowedToTalk=!0,participant.invitedToTalk=!0,participant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",!1)),webinar.updateRaiseHandParticipants(),webinar.rxParticipantsSubject.next(),webinar.rxSubject.next(),webinar.isAttendee&&webinar.rxAskStagingSubject.next(event_model_1.RBEvent.create("REQUEST_ATTENDEE_STAGING")))}if("disable-talk"===action){internalStep="action disable-talk";const participantId=stanzaElem.find("user-id").text(),participant=webinar.session.getParticipantById(participantId);participant&&(this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- ${participantId} -- disable-talk`),participant.medias.audio=!1,participant.medias.video=!1,participant.medias.sharing=!1,participant.allowedToTalk=!1,participant.invitedToTalk=!1,participant.rxSubject.next(),webinar.isAttendee&&webinar.rxAskStagingSubject.next(event_model_1.RBEvent.create("REQUEST_ATTENDEE_UNSTAGING")))}}}if(webinar.session){let participantAction="newParticipant",participantElems=stanzaElem.find("participants").find("participant");if(0===participantElems.length&&(participantElems=stanzaElem.find("added-participants").find("participant"),participantAction="addParticipant"),0===participantElems.length&&(participantElems=stanzaElem.find("updated-participants").find("participant"),participantAction="updateParticipant"),participantElems.length){internalStep=participantAction;const participantsPromise=[];participantElems.each((__i,participantElem)=>{participantsPromise.push(this.createSessionParticipantFromElem($(participantElem)))});(await Promise.all(participantsPromise)).forEach(participant=>{if(participant){this.contactService.isUserContact(participant.contact)&&!webinar.session.localParticipant?(webinar.session.localParticipant=participant,this.joinPromiseResolver&&(this.joinPromiseResolver(),this.joinPromiseResolver=null)):webinar.session.addOrUpdateParticipant(participant,participantAction);const participantId=participant.id===webinar.session.localParticipant.id?"local":participant.id;this.logger.info(`[WebinarConferenceService] onConferenceMessage ${participantAction} -- ${participantId} -- ${webinar.id}`)}}),webinar.rxParticipantsSubject.next()}const removedParticipantElems=stanzaElem.find("removed-participants");if(removedParticipantElems.length){internalStep="removed-participant";$(removedParticipantElems).find("user-id").each((__i,participantIdElem)=>{const participantId=$(participantIdElem).text(),participant=webinar.session.getParticipantById(participantId);participant&&(participant.medias.audio=participant.medias.video=participant.medias.sharing=!1);const speakerIndex=webinar.session.speakerParticipants.findIndex(partp=>partp.id===participantId);if(-1!==speakerIndex)webinar.session.speakerParticipants.splice(speakerIndex,1);else{const attendeeIndex=webinar.session.attendeeParticipants.findIndex(partp=>partp.id===participantId);-1!==attendeeIndex&&webinar.session.attendeeParticipants.splice(attendeeIndex,1)}webinar.session.localParticipant&&participantId===webinar.session.localParticipant.id&&(webinar.session.localParticipant=null),this.logger.info(`[WebinarConferenceService] onConferenceMessage removedParticipant -- ${participantId} -- ${webinar.id}`)}),webinar.session.localParticipant||0!==webinar.session.speakerParticipants.length||(webinar.session=null),webinar.updateRaiseHandParticipants(),webinar.rxParticipantsSubject.next(),webinar.rxSubject.next()}{let publisherMode="publishers",publisherElems=stanzaElem.find("publishers");0===publisherElems.length&&(publisherElems=stanzaElem.find("added-publishers"),publisherMode="addPublisher"),publisherElems.length&&(internalStep="publishers",publisherElems.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("user-id").text(),participant=webinar.session.getParticipantById(publisherId),mediaType=publisherElem.find("media-type").text();this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- ${publisherMode} -- ${publisherId} -- ${mediaType}`),"addPublisher"===publisherMode&&publisherId!==webinar.session.localParticipant.id&&this.subscribeToPublisher(webinar,participant,"sharing"===mediaType?"sharing":"audioVideo"),"audioVideo"===mediaType&&(participant.medias.video=!1),mediaType.split("+").forEach(media=>{participant.medias[media]=!0}),"attendee"===participant.role&&void 0===webinar.session.speakerParticipants.find(speaker=>speaker.id===participant.id)&&webinar.session.speakerParticipants.push(participant)}));const removedPublisherElems=stanzaElem.find("removed-publishers");removedPublisherElems.length&&(internalStep="removed-publishers",removedPublisherElems.find("publisher").each((__index,publisher)=>{const publisherElem=$(publisher),publisherId=publisherElem.find("user-id").text(),participant=webinar.session.getParticipantById(publisherId),mediaType=publisherElem.find("media-type").text();if(participant){this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- removePublisher -- ${publisherId} -- ${mediaType}`),"video"===mediaType&&participant.audioVideoAudioElement&&(document.body.removeChild(participant.audioVideoAudioElement),participant.audioVideoAudioElement=null,participant.medias.audio=participant.medias.video=!1),"sharing"===mediaType&&participant.sharingAudioElement&&(document.body.removeChild(participant.sharingAudioElement),participant.sharingAudioElement=null,participant.medias.sharing=!1),participant.medias[mediaType]=!1,"sharing"===mediaType&&(participant.sharingOnStage=!1),webinar.session.masterMedia===`${participant.id}_${mediaType}`&&(webinar.session.masterMedia=null);const speakerIndex=webinar.session.speakerParticipants.findIndex(speaker=>speaker.id===participant.id);if(-1!==speakerIndex){const speakerParticipant=webinar.session.speakerParticipants[speakerIndex];!1===speakerParticipant.medias.audio&&!1===speakerParticipant.medias.sharing&&webinar.session.speakerParticipants.splice(speakerIndex,1)}participant.rxSubject.next(event_model_1.RBEvent.create(mediaType)),webinar.rxParticipantsSubject.next()}else this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- removePublisher -- ${publisherId} -- ${mediaType} -- Not found`)}));const talkersElems=stanzaElem.find("talkers");if(talkersElems.length){internalStep="talkers";const talker=talkersElems.find("talker")[0],talkerId=$(talker).find("user-id").text(),participant=webinar.session.getParticipantById(talkerId);if(participant){[webinar.session.localParticipant].concat(webinar.session.speakerParticipants).forEach(part=>{part.id!==talkerId&&part.activeSpeaker&&(part.activeSpeaker=!1,part.rxSubject.next(event_model_1.RBEvent.create("activeSpeaker")))}),participant.activeSpeaker=!0,participant.rxSubject.next(event_model_1.RBEvent.create("activeSpeaker"))}this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- talker -- ${talkerId}`)}const silentElems=stanzaElem.find("silents");silentElems.length&&(internalStep="silents",silentElems.find("silent").each((__index,silent)=>{const silentId=$(silent).find("user-id").text(),participant=webinar.session.getParticipantById(silentId);participant&&participant.activeSpeaker&&(participant.activeSpeaker=!1,participant.rxSubject.next(event_model_1.RBEvent.create("activeSpeaker"))),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- silent -- ${silentId}`)}));const substreamElems=stanzaElem.find("substream");if(substreamElems.length){internalStep="substream";const publisherId=stanzaElem.find("user-id").text(),participant=webinar.session.getParticipantById(publisherId);participant&&participant.medias.video&&(participant.audioVideoSubStreamLevel=parseInt($(substreamElems[0]).text(),10),participant.rxSubject.next(event_model_1.RBEvent.create("substreamLevel",{type:"video"})),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- substreamLevel -- ${participant.audioVideoSubStreamLevel}`))}const temporalElems=stanzaElem.find("temporal");if(temporalElems.length){internalStep="temporal";const publisherId=stanzaElem.find("user-id").text(),participant=webinar.session.getParticipantById(publisherId);participant&&participant.medias.video&&(participant.audioVideoTemporalLevel=parseInt($(temporalElems[0]).text(),10),participant.rxSubject.next(event_model_1.RBEvent.create("temporalElems")),this.logger.info(`[WebinarConferenceService] onConferenceMessage -- ${webinar.id} -- temporalElems -- ${participant.audioVideoTemporalLevel}`))}const raiseHandsElems=stanzaElem.find("raise-hands");if(raiseHandsElems.length){internalStep="raise-hands";const raiseHandElems=$(raiseHandsElems[0]).find("raise-hand");raiseHandElems.length&&raiseHandElems.each((__index,raiseHand)=>{const participantId=$(raiseHand).find("user-id").text(),participant=webinar.session.getParticipantById(participantId);participant.raiseHand=!0,participant.rxSubject.next(event_model_1.RBEvent.create("raiseHand",!0)),webinar.updateRaiseHandParticipants(),webinar.rxSubject.next()})}}const attendeesElems=stanzaElem.find("attendees");if(attendeesElems.length){internalStep="attendees";const attendeesPromise=[];attendeesElems.find("attendee-jid").each((__index,attendeeElem)=>{attendeesPromise.push(this.createSessionParticipantFromAttendeeJid($(attendeeElem).text()))});(await Promise.all(attendeesPromise)).forEach(attendee=>{attendee&&(webinar.session.addOrUpdateParticipant(attendee),this.logger.info(`[WebinarConferenceService] onConferenceMessage addAttendee -- ${attendee.id} -- ${webinar.id}`))}),webinar.rxParticipantsSubject.next()}internalStep="handleStage",await this.handleStage(webinar,stanzaElem)}return!0}catch(error){return this.logger.error(`[WebinarConferenceService] onConferenceMessage -- ${internalStep} -- ${error.message}`),!0}}async handleStage(webinar,stanzaElem){if(stanzaElem.find("stage").length&&webinar.session){if(!webinar.session)return void this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- no session -- ignored`);this.logger.info("[WebinarConferenceService] handleStage -- "+webinar.id),webinar.session.masterMedia=null,webinar.session.speakerParticipants.forEach(speaker=>{speaker.onStage=speaker.sharingOnStage=!1});const actorElems=stanzaElem.find("actor");if(actorElems.length){const actorsInfo=[];actorElems.each((__index,actor)=>{const actorElem=$(actor),participantId=actorElem.find("user-id").text(),type=actorElem.find("type").text(),propertyElems=actorElem.find("property"),staged=$(propertyElems[0]).text(),isMaster="master"===staged,isStaged="staged"===staged||isMaster;actorsInfo.push({participantId:participantId,type:type,isMaster:isMaster,isStaged:isStaged,staged:staged})}),await this.utilitiesService.asyncForEach(actorsInfo,async actor=>{let participant=webinar.session.getParticipantById(actor.participantId);!participant&&webinar.isAttendee&&(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${actor.participantId} -- ${actor.staged} -- no participant -- create session`),participant=webinar_model_1.WebinarSessionParticipant.create(actor.participantId),participant.contact=await this.contactService.getContactByDBId(actor.participantId),webinar.session.speakerParticipants.push(participant),participant.rxSubject.next(event_model_1.RBEvent.create("updateParticipant"))),participant&&("participant"===actor.type&&(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- participant -- ${actor.staged} -- ${participant.medias.audio}`),participant.onStage=actor.isStaged,participant.onStage&&(participant.invitedToTalk=!1),webinar.isAttendee&&actor.isStaged&&!participant.medias.audio&&webinar.session.localParticipant.id!==participant.id&&(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- subscribe to publisher`),await this.subscribeToPublisher(webinar,participant,"audioVideo")),actor.isMaster&&(webinar.session.masterMedia=`${actor.participantId}_${actor.type}`),webinar.isAttendee&&!actor.isStaged&&!actor.isMaster&&participant.medias.audio&&(this.webrtcConfigAndUtils.disableAllStreamsForSession(participant.audioVideoSession),actor.participantId===webinar.session.localParticipant.id?this.disableAudioVideoMedia(webinar):(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- terminate session (leave stage)`),this.xmppService.connection.jingle.terminate(participant.audioVideoSession.sid,"leaveStage")),participant.audioVideoSession=participant.audioVideoStream=null,participant.medias.audio=participant.medias.video=!1),participant.rxSubject.next(event_model_1.RBEvent.create("updateStage",{type:"video"}))),"sharing"===actor.type&&(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- sharing -- ${actor.staged}`),participant.sharingOnStage=actor.isStaged,actor.isStaged&&!participant.medias.sharing&&webinar.session.localParticipant.id!==participant.id&&await this.subscribeToPublisher(webinar,participant,"sharing"),webinar.isAttendee&&!actor.isStaged&&participant.medias.sharing&&(webinar.session.localParticipant.id===participant.id?(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- guest sharing -- remove media`),this.removeLocalMedia(webinar,"sharing")):(this.logger.info(`[WebinarConferenceService] handleStage -- ${webinar.id} -- ${participant.id} -- sharing -- terminate session (leave stage)`),this.xmppService.connection.jingle.terminate(participant.sharingSession.sid,"leaveStage"),participant.sharingSession=participant.sharingStream=null,participant.medias.sharing=!1)),actor.isMaster&&(webinar.session.masterMedia=`${actor.participantId}_${actor.type}`),participant.rxSubject.next(event_model_1.RBEvent.create("updateStage",{type:"sharing"}))))})}webinar.rxParticipantsSubject.next()}}async subscribeToPublisher(webinar,participant,media){return this.subscribeToPublisherPromiseResolvers[`${webinar.id}_${participant.id}_${media}`]?this.logger.info(`[WebinarConferenceService] subscribeToPublisher -- ${webinar.id} -- ${participant.id} -- ${media} -- already in progress`):this.subscribeToPublisherPromiseResolvers[`${webinar.id}_${participant.id}_${media}`]=new Promise((resolve,reject)=>{this.subscribeToPublisherInternal(webinar,participant,media).then(()=>{resolve(),delete this.subscribeToPublisherPromiseResolvers[`${webinar.id}_${participant.id}_${media}`]}).catch(error=>{reject(error),delete this.subscribeToPublisherPromiseResolvers[`${webinar.id}_${participant.id}_${media}`]})}),this.subscribeToPublisherPromiseResolvers[`${webinar.id}_${participant.id}_${media}`]}async subscribeToPublisherInternal(webinar,participant,media){try{const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webinar.roomId}/users/${participant.id}/subscribe`,headers=this.authService.getPostHeader(),bodyObj={media:media};"audioVideo"===media&&(media="audio+video",participant.subStreamLevel=participant.onStage?1:0,participant.temporalLevel=participant.onStage?2:0,bodyObj.subStreamLevel=participant.subStreamLevel,bodyObj.temporalLevel=participant.temporalLevel,this.logger.info(`[WebinarConferenceService] subscribeToPublisher -- ${webinar.id} -- ${participant.id} -- ${media} -- substreamLevel: ${participant.subStreamLevel} -- temporalLevel: ${participant.temporalLevel}`)),"sharing"===media&&(participant.subStreamLevel=participant.onStage?2:0,participant.temporalLevel=participant.onStage?2:0,this.logger.info(`[WebinarConferenceService] subscribeToPublisher -- ${webinar.id} -- ${participant.id} -- ${media}`));const body=JSON.stringify(bodyObj),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(media.split("+").forEach(amedia=>{participant.medias[amedia]=!0}),!response.ok)throw response}catch(error){throw(await this.errorHelperService.getErrorInfo(error,"subscribeToPublisher")).error}}async createSessionParticipantFromElem(participantElem){try{const contactId=participantElem.find("user-id").text(),contact=await this.contactService.getContactByDBId(contactId);if(contact){const sessionParticipant=webinar_model_1.WebinarSessionParticipant.create(contactId);return sessionParticipant.contact=contact,sessionParticipant.mute="true"===participantElem.find("mute").text(),sessionParticipant.role=participantElem.find("role").text(),sessionParticipant}return null}catch(error){return this.logger.error("[WebinarConferenceService] createSessionParticipantFromParticipantElem -- Failure"),null}}async createSessionParticipantFromAttendeeJid(attendeeJid){try{const contact=await this.contactService.getOrCreateContact(attendeeJid);if(contact){const sessionParticipant=webinar_model_1.WebinarSessionParticipant.create(contact.dbId);return sessionParticipant.contact=contact,sessionParticipant.mute=!0,sessionParticipant.role="attendee",sessionParticipant}return null}catch(error){return this.logger.error("[WebinarConferenceService] createSessionParticipantFromAttendeeElem -- Failure"),null}}onVideoServiceEvent(event){try{if("ON_CHROME_STOP_SCREEN_SHARING_TRIGGERED"===event.name){const webinar=event.data.webinar;webinar&&this.removeLocalMedia(webinar,"sharing")}}catch(error){}}onJingleMessage(event){try{const webinar=this.webinarService.getWebinarBySessionId(event.data.sid,event.data.confId);if(webinar)switch(event.name){case"jingleSessionInvitation":this.onJingleSessionInvite(webinar,event.data.sid);break;case"iceconnectionstatechange.jingle":this.onJingleConnectionStateChange(webinar,event.data.session);break;case"callterminated.jingle":this.onSessionTerminated(webinar,event.data.sid);break;case"jingleUpdateStream":this.onJingleUpdateStream(webinar,event.data.sid,event.data.medias);break;case"webrtcSessionStats.jingle":this.onJingleStatsChange(webinar,event.data);break;case"error.jingle":this.logger.error(`[WebinarConferenceService] onJingleMessage -- ${event.name} -- ${webinar.id} -- ${JSON.stringify(event.data.error)}`);break;case"ack.jingle":break;default:this.logger.debug(`[WebinarConferenceService] onJingleMessage -- ${event.name} -- ${webinar.id}`)}}catch(error){this.logger.info("[WebinarConferenceService] onJingleMessage -- failure -- "+event.name)}}async onJingleConnectionStateChange(webinar,session){if(session&&session.peerconnection&&"stable"===session.peerconnection.signalingState){switch(session.peerconnection.connectionState?session.peerconnection.connectionState:session.peerconnection.iceConnectionState){case"connected":case"completed":if("audio+video"===session.localType)if(session.publisherId){if(session.publisherId!==webinar.session.localParticipant.id){const stream=session.remoteStreamsObject&&session.remoteStreamsObject[0]?session.remoteStreamsObject[0]:null;if(!stream)return;const participant=webinar.session.getParticipantById(session.publisherId);participant.audioVideoSession=session,participant.audioVideoStream=stream,0===stream.getVideoTracks().length&&(participant.medias.video=!1),participant.audioVideoAudioElement=await this.createAudioElement(`av_${participant.id} `,stream),webinar.rxParticipantsSubject.next(event_model_1.RBEvent.create("addParticipant",participant)),this.logger.info(`[WebinarConferenceService] audio+video sessionEstablished -- ${participant.id} -- ${webinar.id}`),participant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"}))}}else{if(!webinar.session.localParticipant.audioVideoSession)if(webinar.session.localParticipant.audioVideoSession=session,this.logger.info("[WebinarConferenceService] audio+video sessionEstablished -- local -- "+webinar.id),webinar.isAttendee){const participantId=this.contactService.userContact.dbId;await this.webinarService.conference.muteParticipant(webinar,participantId,webinar.session.localParticipant.mute,!0),await this.webinarService.conference.putOnStage(webinar,participantId,"participant",!0),webinar.session.localParticipant.allowedToTalk=!0}else webinar.session.speakerParticipants.forEach(participant=>{participant.medias.audio&&this.subscribeToPublisher(webinar,participant,"audioVideo"),participant.medias.sharing&&this.subscribeToPublisher(webinar,participant,"sharing")});webinar.session.localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"}))}else if("sharing"===session.localType){if(session.publisherId){const stream=session.remoteStreamsObject&&session.remoteStreamsObject[0]?session.remoteStreamsObject[0]:null;if(!stream)return;const participant=webinar.session.getParticipantById(session.publisherId);participant.sharingSession=session,participant.sharingStream=stream,participant.sharingAudioElement=await this.createAudioElement("sharing_"+participant.id,stream),participant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"sharing"})),this.logger.info(`[WebinarConferenceService] sharing sessionEstablished -- ${participant.id} -- ${webinar.id}`)}else{if(this.logger.info("[WebinarConferenceService] sharing sessionEstablished -- local -- "+webinar.id),webinar.isAttendee){const participantId=this.contactService.userContact.dbId;await this.webinarService.conference.putOnStage(webinar,participantId,"sharing",!0,!0)}webinar.session.localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"sharing"}))}webinar.rxParticipantsSubject.next()}break;case"disconnected":this.connected&&(this.logger.info("[WebinarConferenceService] sessionDisconnected -- "+webinar.id),"audio+video"!==session.localType&&"sharing"!==session.localType||this.sendTransportReplaceForSession(webinar,session,"audio+video"===session.localType?5e3:8e3));break;case"failed":this.connected&&(this.logger.info("[WebinarConferenceService] sessionFailed -- "+webinar.id),"audio+video"===session.localType||"sharing"===session.localType?this.sendTransportReplaceForSession(webinar,session,500):"audio+video"!==session.remoteType&&"sharing"!==session.remoteType||(this.xmppService.connection.jingle.terminate(session.sid),webinar.session.speakerParticipants.forEach(participant=>{participant.medias.audio&&"audio+video"===session.remoteType&&this.subscribeToPublisher(webinar,participant,"audioVideo"),participant.medias.sharing&&"sharing"===session.remoteType&&this.subscribeToPublisher(webinar,participant,"sharing")})))}}}sendTransportReplaceForSession(webinar,session,timeout=1e3){this.reconnectingSessionIds[session.sid]?this.logger.info(`[WebinarConferenceService] sendTransportReplaceForSession already reconnecting for session ${session.sid} -- ${webinar.id}`):(this.reconnectingSessionIds[session.sid]=!0,setTimeout(()=>{this.reconnectingSessionIds[session.sid]=!1,delete this.reconnectingSessionIds[session.sid],this.connected&&session&&session.peerconnection&&"stable"===session.peerconnection.signalingState&&("failed"===session.peerconnection.iceConnectionState||"disconnected"===session.peerconnection.iceConnectionState)?(this.logger.info(`[WebinarConferenceService] sendTransportReplaceForSession ${session.sid} -- ${webinar.id}`),session.connection=this.xmppService.connection,session.reconnectSession()):this.logger.info(`[WebinarConferenceService] sendTransportReplaceForSession ${session.sid} -- ${webinar.id} is not send ...`)},timeout))}onJingleSessionInvite(webinar,sessionId){this.logger.info(`[WebinarConferenceService] onJingleSessionInvite -- ${webinar.id} -- ${sessionId}`);const session=this.xmppService.connection.jingle.sessions[sessionId];session.localType=session.remoteType,session.sendAnswer(),session.accept(),this.logger.info(`[WebinarConferenceService] onJingleSessionInvite -- accept -- ${webinar.id} -- ${sessionId}`)}onSessionTerminated(webinar,sessionId){this.logger.info(`[WebinarConferenceService] onJingleMessage -- onSessionTerminated -- ${webinar.id} -- ${sessionId}`),webinar.session.speakerParticipants.find(participant=>participant.audioVideoSession&&participant.audioVideoSession.sid===sessionId?(participant.medias.audio=participant.medias.video=!1,participant.audioVideoStream=null,participant.audioVideoSession=null,participant.rxSubject.next(event_model_1.RBEvent.create("video")),webinar.rxParticipantsSubject.next(),this.logger.info(`[WebinarConferenceService] onJingleMessage -- onSessionTerminated -- audio+video -- ${webinar.id} -- ${participant.id}`),!0):!(!participant.sharingSession||participant.sharingSession.sid!==sessionId)&&(participant.medias.sharing=!1,participant.sharingStream=null,participant.sharingSession=null,participant.rxSubject.next(event_model_1.RBEvent.create("sharing")),webinar.rxParticipantsSubject.next(),this.logger.info(`[WebinarConferenceService] onJingleMessage -- onSessionTerminated -- sharing -- ${webinar.id} -- ${participant.id}`),!0))}onJingleUpdateStream(webinar,sessionId,medias){const session=this.xmppService.connection.jingle.sessions[sessionId];if(session&&session.publisherId){const participant=webinar.session.getParticipantById(session.publisherId),stream=session.remoteStreamsObject&&session.remoteStreamsObject[0]?session.remoteStreamsObject[0]:null;stream&&("audio+video"===session.localType?(participant.audioVideoSession=session,participant.audioVideoStream=stream,participant.medias.audio=medias.audio,participant.medias.video=medias.video,participant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"}))):(participant.sharingSession=session,participant.sharingStream=stream,participant.medias.sharing=!0,participant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"sharing"}))))}}onJingleStatsChange(webinar,stats){this.logger.infoOrange("webinar stats "+stats)}onXmppConnectionChangeEvent(event){try{this.logger.info(`[WebinarConferenceService] onXmppConnectionChangeEvent : ${event.name} ${event.data?event.data.reason:"UNKNOWN"}`),"ON_XMPP_DISCONNECTED"===event.name?this.connected=!1:"ON_XMPP_CONNECTED"===event.name&&"PRESENCE"===event.data.reason&&(this.connected=!0)}catch(error){}}async onReplaceBackgroundChangeEvent(event){try{const webinar=this.webinarService.conference.activeWebinar;if(webinar.session&&webinar.session.localParticipant&&webinar.session.localParticipant.medias.video){this.logger.info("[WebinarConferenceService] onReplaceBackgroundChangeEvent"),webinar.session.localParticipant.audioVideoStream=event.data.stream;const tracks=event.data.stream.getTracks();2===tracks.length&&webinar.session.localParticipant.audioVideoSession.replaceVideoTrack(tracks[1]),webinar.session.localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"}))}}catch(error){}}async onMediaDeviceChangeEvent(event){try{if(event.name===this.deviceManagementService.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED){const kind=event.data.kind;this.logger.info(`[WebinarConferenceService] onMediaDeviceChangeEvent (${kind})`);const webinar=this.activeWebinar;if("audiooutput"===kind)this.updateAudioElementsOutput();else if(webinar&&webinar.session&&(webinar.session.localParticipant.medias.audio||webinar.session.localParticipant.medias.video)){const localParticipant=webinar.session.localParticipant,medias=[];localParticipant.medias.audio&&medias.push("audio"),localParticipant.medias.video&&medias.push("video");const originalStream=await this.webinarService.webrtcP2PService.getBrowserMedia(medias,null,null,null,webinar);this.webrtcConfigAndUtils.disableMediaStreams([localParticipant.originalAudioVideoStream]),localParticipant.originalAudioVideoStream=originalStream,await this.virtualBackgroundService.stopProcessStream();const modifiedStream=await this.virtualBackgroundService.startProcessStream(originalStream,"WebinarConferenceService");try{const tracks=modifiedStream.getTracks();await this.utilitiesService.asyncForEach(tracks,async(track,index)=>{await localParticipant.audioVideoSession.replaceTransceiverTrack(track,index)}),this.webrtcConfigAndUtils.disableMediaStreams(localParticipant.audioVideoSession.localStreams),localParticipant.audioVideoSession.localStreams=[],localParticipant.audioVideoSession.localStreams.push(modifiedStream),localParticipant.audioVideoStream=modifiedStream,localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"})),this.logger.info(`[WebinarConferenceService] onMediaDeviceChangeEvent (${kind}) -- Success 'on the fly'`)}catch{localParticipant.audioVideoSession.removeStream(),this.webrtcConfigAndUtils.disableMediaStreams(localParticipant.audioVideoSession.localStreams),localParticipant.audioVideoSession.localStreams=[],localParticipant.audioVideoSession.localStreams.push(modifiedStream),await localParticipant.audioVideoSession.addBundleStream(modifiedStream),localParticipant.audioVideoSession.sendTransportReplace(),localParticipant.audioVideoStream=modifiedStream,localParticipant.rxSubject.next(event_model_1.RBEvent.create("updateMedia",{type:"video"})),this.logger.info(`[WebinarConferenceService] onMediaDeviceChangeEvent (${kind}) -- Success 'via transport-replace'`)}}}}catch(error){this.logger.info("[WebinarConferenceService] onMediaDeviceChangeEvent -- Failure")}}}exports.WebinarConferenceService=WebinarConferenceService},function(module,exports,__webpack_require__){var _scriptDir,createTFLiteModule=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(createTFLiteModule){var readyPromiseResolve,readyPromiseReject,Module=void 0!==(createTFLiteModule=createTFLiteModule||{})?createTFLiteModule:{};Module.ready=new Promise((function(resolve,reject){readyPromiseResolve=resolve,readyPromiseReject=reject}));var key,moduleOverrides={};for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var readBinary,arguments_=[],thisProgram="./this.program",quit_=function(status,toThrow){throw toThrow},scriptDirectory="";"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1):"";var wasmBinary,out=Module.print||console.log.bind(console),err=Module.printErr||console.warn.bind(console);for(key in moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary);var wasmMemory,noExitRuntime=Module.noExitRuntime||!0;"object"!=typeof WebAssembly&&abort("no native wasm support detected");var buffer,HEAP8,HEAPU8,HEAP32,ABORT=!1,UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function UTF8ArrayToString(heap,idx,maxBytesToRead){for(var endIdx=idx+maxBytesToRead,endPtr=idx;heap[endPtr]&&!(endPtr>=endIdx);)++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder)return UTF8Decoder.decode(heap.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u0=heap[idx++];if(128&u0){var u1=63&heap[idx++];if(192!=(224&u0)){var u2=63&heap[idx++];if((u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heap[idx++])<65536)str+=String.fromCharCode(u0);else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)}}else str+=String.fromCharCode((31&u0)<<6|u1)}else str+=String.fromCharCode(u0)}return str}function updateGlobalBufferAndViews(buf){buffer=buf,Module.HEAP8=HEAP8=new Int8Array(buf),Module.HEAP16=new Int16Array(buf),Module.HEAP32=HEAP32=new Int32Array(buf),Module.HEAPU8=HEAPU8=new Uint8Array(buf),Module.HEAPU16=new Uint16Array(buf),Module.HEAPU32=new Uint32Array(buf),Module.HEAPF32=new Float32Array(buf),Module.HEAPF64=new Float64Array(buf)}Module.INITIAL_MEMORY;var wasmTable,__ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATPOSTRUN__=[];__ATINIT__.push({func:function(){___wasm_call_ctors()}});var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function abort(what){Module.onAbort&&Module.onAbort(what),err(what+=""),ABORT=!0,what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);throw readyPromiseReject(e),e}function isDataURI(filename){return str=filename,prefix="data:application/octet-stream;base64,",String.prototype.startsWith?str.startsWith(prefix):0===str.indexOf(prefix);var str,prefix}Module.preloadedImages={},Module.preloadedAudios={};var path,_emscripten_get_now,wasmBinaryFile="/cacheV2/virtual-background/tflite/tflite.wasm";function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"both async and sync fetching of the wasm failed"}catch(err){abort(err)}}function callRuntimeCallbacks(callbacks){for(;callbacks.length>0;){var callback=callbacks.shift();if("function"!=typeof callback){var func=callback.func;"number"==typeof func?void 0===callback.arg?wasmTable.get(func)():wasmTable.get(func)(callback.arg):func(void 0===callback.arg?null:callback.arg)}else callback(Module)}}function setErrNo(value){return HEAP32[___errno_location()>>2]=value,value}function emscripten_realloc_buffer(size){try{return wasmMemory.grow(size-buffer.byteLength+65535>>>16),updateGlobalBufferAndViews(wasmMemory.buffer),1}catch(e){}}isDataURI(wasmBinaryFile)||(path=wasmBinaryFile,wasmBinaryFile=Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path),_emscripten_get_now=function(){return performance.now()};var ENV={};function getEnvStrings(){if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:thisProgram||"./this.program"};for(var x in ENV)env[x]=ENV[x];var strings=[];for(var x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings}var calledRun,SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];0===curr||10===curr?((1===stream?out:err)(UTF8ArrayToString(buffer,0)),buffer.length=0):buffer.push(curr)},varargs:void 0,get:function(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>2]},getStr:function(ptr){return function(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}(ptr)},get64:function(low,high){return low}},asmLibraryArg={a:function(){abort()},n:function(clk_id,tp){var now;if(0===clk_id)now=Date.now();else{if(1!==clk_id&&4!==clk_id)return setErrNo(28),-1;now=_emscripten_get_now()}return HEAP32[tp>>2]=now/1e3|0,HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0,0},i:function(filename,flag){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},f:function(handle,symbol){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},l:function(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)},m:function(requestedSize){var x,multiple,oldSize=HEAPU8.length;if(requestedSize>2147483648)return!1;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);if(overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),emscripten_realloc_buffer(Math.min(2147483648,((x=Math.max(requestedSize,overGrownHeapSize))%(multiple=65536)>0&&(x+=multiple-x%multiple),x))))return!0}return!1},o:function(msecs){for(var start=_emscripten_get_now();_emscripten_get_now()-start<msecs;);},p:function(__environ,environ_buf){var bufSize=0;return getEnvStrings().forEach((function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+4*i>>2]=ptr,function(str,buffer,dontAddNull){for(var i=0;i<str.length;++i)HEAP8[buffer++>>0]=str.charCodeAt(i);dontAddNull||(HEAP8[buffer>>0]=0)}(string,ptr),bufSize+=string.length+1})),0},g:function(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;return strings.forEach((function(string){bufSize+=string.length+1})),HEAP32[penviron_buf_size>>2]=bufSize,0},j:function(status){!function(status,implicit){implicit&&noExitRuntime&&0===status||(noExitRuntime||(Module.onExit&&Module.onExit(status),ABORT=!0),quit_(status,new ExitStatus(status)))}(status)},h:function(fd){return 0},k:function(fd,offset_low,offset_high,whence,newOffset){},c:function(fd,iov,iovcnt,pnum){for(var num=0,i=0;i<iovcnt;i++){for(var ptr=HEAP32[iov+8*i>>2],len=HEAP32[iov+(8*i+4)>>2],j=0;j<len;j++)SYSCALLS.printChar(fd,HEAPU8[ptr+j]);num+=len}return HEAP32[pnum>>2]=num,0},d:function(){return 6},e:function(){return 28},b:function(name){switch(name){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return setErrNo(28),-1}},___wasm_call_ctors=(function(){var info={a:asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module.asm=exports,updateGlobalBufferAndViews((wasmMemory=Module.asm.q).buffer),wasmTable=Module.asm.D,function(id){if(runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var callback=dependenciesFulfilled;dependenciesFulfilled=null,callback()}}()}function receiveInstantiatedSource(output){receiveInstance(output.instance)}function instantiateArrayBuffer(receiver){return(wasmBinary||"function"!=typeof fetch?Promise.resolve().then((function(){return getBinary(wasmBinaryFile)})):fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response.ok)throw"failed to load wasm binary file at '"+wasmBinaryFile+"'";return response.arrayBuffer()})).catch((function(){return getBinary(wasmBinaryFile)}))).then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err("failed to asynchronously prepare wasm: "+reason),abort(reason)}))}if(runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){return err("Module.instantiateWasm callback failed with error: "+e),!1}(wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||isDataURI(wasmBinaryFile)||"function"!=typeof fetch?instantiateArrayBuffer(receiveInstantiatedSource):fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){return WebAssembly.instantiateStreaming(response,info).then(receiveInstantiatedSource,(function(reason){return err("wasm streaming compile failed: "+reason),err("falling back to ArrayBuffer instantiation"),instantiateArrayBuffer(receiveInstantiatedSource)}))}))).catch(readyPromiseReject)}(),Module.___wasm_call_ctors=function(){return(___wasm_call_ctors=Module.___wasm_call_ctors=Module.asm.r).apply(null,arguments)}),___errno_location=(Module._getModelBufferMemoryOffset=function(){return(Module._getModelBufferMemoryOffset=Module.asm.s).apply(null,arguments)},Module._getInputMemoryOffset=function(){return(Module._getInputMemoryOffset=Module.asm.t).apply(null,arguments)},Module._getInputHeight=function(){return(Module._getInputHeight=Module.asm.u).apply(null,arguments)},Module._getInputWidth=function(){return(Module._getInputWidth=Module.asm.v).apply(null,arguments)},Module._getInputChannelCount=function(){return(Module._getInputChannelCount=Module.asm.w).apply(null,arguments)},Module._getOutputMemoryOffset=function(){return(Module._getOutputMemoryOffset=Module.asm.x).apply(null,arguments)},Module._getOutputHeight=function(){return(Module._getOutputHeight=Module.asm.y).apply(null,arguments)},Module._getOutputWidth=function(){return(Module._getOutputWidth=Module.asm.z).apply(null,arguments)},Module._getOutputChannelCount=function(){return(Module._getOutputChannelCount=Module.asm.A).apply(null,arguments)},Module._loadModel=function(){return(Module._loadModel=Module.asm.B).apply(null,arguments)},Module._runInference=function(){return(Module._runInference=Module.asm.C).apply(null,arguments)},Module.___errno_location=function(){return(___errno_location=Module.___errno_location=Module.asm.E).apply(null,arguments)});function ExitStatus(status){this.name="ExitStatus",this.message="Program terminated with exit("+status+")",this.status=status}function run(args){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT||(callRuntimeCallbacks(__ATINIT__),callRuntimeCallbacks(__ATMAIN__),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),function(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)cb=Module.postRun.shift(),__ATPOSTRUN__.unshift(cb);var cb;callRuntimeCallbacks(__ATPOSTRUN__)}()))}args=args||arguments_,runDependencies>0||(function(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)cb=Module.preRun.shift(),__ATPRERUN__.unshift(cb);var cb;callRuntimeCallbacks(__ATPRERUN__)}(),runDependencies>0||(Module.setStatus?(Module.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Module.setStatus("")}),1),doRun()}),1)):doRun()))}if(dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.run=run,Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);Module.preInit.length>0;)Module.preInit.pop()();return run(),createTFLiteModule.ready});module.exports=createTFLiteModule},function(module,exports,__webpack_require__){var _scriptDir,createTFLiteSIMDModule=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(createTFLiteSIMDModule){var readyPromiseResolve,readyPromiseReject,Module=void 0!==(createTFLiteSIMDModule=createTFLiteSIMDModule||{})?createTFLiteSIMDModule:{};Module.ready=new Promise((function(resolve,reject){readyPromiseResolve=resolve,readyPromiseReject=reject}));var key,moduleOverrides={};for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var readBinary,arguments_=[],thisProgram="./this.program",quit_=function(status,toThrow){throw toThrow},scriptDirectory="";"undefined"!=typeof document&&document.currentScript&&(scriptDirectory=document.currentScript.src),_scriptDir&&(scriptDirectory=_scriptDir),scriptDirectory=0!==scriptDirectory.indexOf("blob:")?scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1):"";var wasmBinary,out=Module.print||console.log.bind(console),err=Module.printErr||console.warn.bind(console);for(key in moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);moduleOverrides=null,Module.arguments&&(arguments_=Module.arguments),Module.thisProgram&&(thisProgram=Module.thisProgram),Module.quit&&(quit_=Module.quit),Module.wasmBinary&&(wasmBinary=Module.wasmBinary);var wasmMemory,noExitRuntime=Module.noExitRuntime||!0;"object"!=typeof WebAssembly&&abort("no native wasm support detected");var buffer,HEAP8,HEAPU8,HEAP32,ABORT=!1,UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function UTF8ArrayToString(heap,idx,maxBytesToRead){for(var endIdx=idx+maxBytesToRead,endPtr=idx;heap[endPtr]&&!(endPtr>=endIdx);)++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder)return UTF8Decoder.decode(heap.subarray(idx,endPtr));for(var str="";idx<endPtr;){var u0=heap[idx++];if(128&u0){var u1=63&heap[idx++];if(192!=(224&u0)){var u2=63&heap[idx++];if((u0=224==(240&u0)?(15&u0)<<12|u1<<6|u2:(7&u0)<<18|u1<<12|u2<<6|63&heap[idx++])<65536)str+=String.fromCharCode(u0);else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|1023&ch)}}else str+=String.fromCharCode((31&u0)<<6|u1)}else str+=String.fromCharCode(u0)}return str}function updateGlobalBufferAndViews(buf){buffer=buf,Module.HEAP8=HEAP8=new Int8Array(buf),Module.HEAP16=new Int16Array(buf),Module.HEAP32=HEAP32=new Int32Array(buf),Module.HEAPU8=HEAPU8=new Uint8Array(buf),Module.HEAPU16=new Uint16Array(buf),Module.HEAPU32=new Uint32Array(buf),Module.HEAPF32=new Float32Array(buf),Module.HEAPF64=new Float64Array(buf)}Module.INITIAL_MEMORY;var wasmTable,__ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATPOSTRUN__=[];__ATINIT__.push({func:function(){___wasm_call_ctors()}});var runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function abort(what){Module.onAbort&&Module.onAbort(what),err(what+=""),ABORT=!0,what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);throw readyPromiseReject(e),e}function isDataURI(filename){return str=filename,prefix="data:application/octet-stream;base64,",String.prototype.startsWith?str.startsWith(prefix):0===str.indexOf(prefix);var str,prefix}Module.preloadedImages={},Module.preloadedAudios={};var path,_emscripten_get_now,wasmBinaryFile="tflite-simd.wasm";function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary)return new Uint8Array(wasmBinary);if(readBinary)return readBinary(file);throw"both async and sync fetching of the wasm failed"}catch(err){abort(err)}}function callRuntimeCallbacks(callbacks){for(;callbacks.length>0;){var callback=callbacks.shift();if("function"!=typeof callback){var func=callback.func;"number"==typeof func?void 0===callback.arg?wasmTable.get(func)():wasmTable.get(func)(callback.arg):func(void 0===callback.arg?null:callback.arg)}else callback(Module)}}function setErrNo(value){return HEAP32[___errno_location()>>2]=value,value}function emscripten_realloc_buffer(size){try{return wasmMemory.grow(size-buffer.byteLength+65535>>>16),updateGlobalBufferAndViews(wasmMemory.buffer),1}catch(e){}}isDataURI(wasmBinaryFile)||(path=wasmBinaryFile,wasmBinaryFile=Module.locateFile?Module.locateFile(path,scriptDirectory):scriptDirectory+path),_emscripten_get_now=function(){return performance.now()};var ENV={};function getEnvStrings(){if(!getEnvStrings.strings){var env={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:thisProgram||"./this.program"};for(var x in ENV)env[x]=ENV[x];var strings=[];for(var x in env)strings.push(x+"="+env[x]);getEnvStrings.strings=strings}return getEnvStrings.strings}var calledRun,SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];0===curr||10===curr?((1===stream?out:err)(UTF8ArrayToString(buffer,0)),buffer.length=0):buffer.push(curr)},varargs:void 0,get:function(){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>2]},getStr:function(ptr){return function(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}(ptr)},get64:function(low,high){return low}},asmLibraryArg={a:function(){abort()},n:function(clk_id,tp){var now;if(0===clk_id)now=Date.now();else{if(1!==clk_id&&4!==clk_id)return setErrNo(28),-1;now=_emscripten_get_now()}return HEAP32[tp>>2]=now/1e3|0,HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0,0},i:function(filename,flag){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},f:function(handle,symbol){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},l:function(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)},m:function(requestedSize){var x,multiple,oldSize=HEAPU8.length;if(requestedSize>2147483648)return!1;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);if(overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296),emscripten_realloc_buffer(Math.min(2147483648,((x=Math.max(requestedSize,overGrownHeapSize))%(multiple=65536)>0&&(x+=multiple-x%multiple),x))))return!0}return!1},o:function(msecs){for(var start=_emscripten_get_now();_emscripten_get_now()-start<msecs;);},p:function(__environ,environ_buf){var bufSize=0;return getEnvStrings().forEach((function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+4*i>>2]=ptr,function(str,buffer,dontAddNull){for(var i=0;i<str.length;++i)HEAP8[buffer++>>0]=str.charCodeAt(i);dontAddNull||(HEAP8[buffer>>0]=0)}(string,ptr),bufSize+=string.length+1})),0},g:function(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;return strings.forEach((function(string){bufSize+=string.length+1})),HEAP32[penviron_buf_size>>2]=bufSize,0},j:function(status){!function(status,implicit){implicit&&noExitRuntime&&0===status||(noExitRuntime||(Module.onExit&&Module.onExit(status),ABORT=!0),quit_(status,new ExitStatus(status)))}(status)},h:function(fd){return 0},k:function(fd,offset_low,offset_high,whence,newOffset){},c:function(fd,iov,iovcnt,pnum){for(var num=0,i=0;i<iovcnt;i++){for(var ptr=HEAP32[iov+8*i>>2],len=HEAP32[iov+(8*i+4)>>2],j=0;j<len;j++)SYSCALLS.printChar(fd,HEAPU8[ptr+j]);num+=len}return HEAP32[pnum>>2]=num,0},d:function(){return 6},e:function(){return 28},b:function(name){switch(name){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return setErrNo(28),-1}},___wasm_call_ctors=(function(){var info={a:asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module.asm=exports,updateGlobalBufferAndViews((wasmMemory=Module.asm.q).buffer),wasmTable=Module.asm.D,function(id){if(runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var callback=dependenciesFulfilled;dependenciesFulfilled=null,callback()}}()}function receiveInstantiatedSource(output){receiveInstance(output.instance)}function instantiateArrayBuffer(receiver){return(wasmBinary||"function"!=typeof fetch?Promise.resolve().then((function(){return getBinary(wasmBinaryFile)})):fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response.ok)throw"failed to load wasm binary file at '"+wasmBinaryFile+"'";return response.arrayBuffer()})).catch((function(){return getBinary(wasmBinaryFile)}))).then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err("failed to asynchronously prepare wasm: "+reason),abort(reason)}))}if(runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),Module.instantiateWasm)try{return Module.instantiateWasm(info,receiveInstance)}catch(e){return err("Module.instantiateWasm callback failed with error: "+e),!1}(wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||isDataURI(wasmBinaryFile)||"function"!=typeof fetch?instantiateArrayBuffer(receiveInstantiatedSource):fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){return WebAssembly.instantiateStreaming(response,info).then(receiveInstantiatedSource,(function(reason){return err("wasm streaming compile failed: "+reason),err("falling back to ArrayBuffer instantiation"),instantiateArrayBuffer(receiveInstantiatedSource)}))}))).catch(readyPromiseReject)}(),Module.___wasm_call_ctors=function(){return(___wasm_call_ctors=Module.___wasm_call_ctors=Module.asm.r).apply(null,arguments)}),___errno_location=(Module._getModelBufferMemoryOffset=function(){return(Module._getModelBufferMemoryOffset=Module.asm.s).apply(null,arguments)},Module._getInputMemoryOffset=function(){return(Module._getInputMemoryOffset=Module.asm.t).apply(null,arguments)},Module._getInputHeight=function(){return(Module._getInputHeight=Module.asm.u).apply(null,arguments)},Module._getInputWidth=function(){return(Module._getInputWidth=Module.asm.v).apply(null,arguments)},Module._getInputChannelCount=function(){return(Module._getInputChannelCount=Module.asm.w).apply(null,arguments)},Module._getOutputMemoryOffset=function(){return(Module._getOutputMemoryOffset=Module.asm.x).apply(null,arguments)},Module._getOutputHeight=function(){return(Module._getOutputHeight=Module.asm.y).apply(null,arguments)},Module._getOutputWidth=function(){return(Module._getOutputWidth=Module.asm.z).apply(null,arguments)},Module._getOutputChannelCount=function(){return(Module._getOutputChannelCount=Module.asm.A).apply(null,arguments)},Module._loadModel=function(){return(Module._loadModel=Module.asm.B).apply(null,arguments)},Module._runInference=function(){return(Module._runInference=Module.asm.C).apply(null,arguments)},Module.___errno_location=function(){return(___errno_location=Module.___errno_location=Module.asm.E).apply(null,arguments)});function ExitStatus(status){this.name="ExitStatus",this.message="Program terminated with exit("+status+")",this.status=status}function run(args){function doRun(){calledRun||(calledRun=!0,Module.calledRun=!0,ABORT||(callRuntimeCallbacks(__ATINIT__),callRuntimeCallbacks(__ATMAIN__),readyPromiseResolve(Module),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),function(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)cb=Module.postRun.shift(),__ATPOSTRUN__.unshift(cb);var cb;callRuntimeCallbacks(__ATPOSTRUN__)}()))}args=args||arguments_,runDependencies>0||(function(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)cb=Module.preRun.shift(),__ATPRERUN__.unshift(cb);var cb;callRuntimeCallbacks(__ATPRERUN__)}(),runDependencies>0||(Module.setStatus?(Module.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Module.setStatus("")}),1),doRun()}),1)):doRun()))}if(dependenciesFulfilled=function runCaller(){calledRun||run(),calledRun||(dependenciesFulfilled=runCaller)},Module.run=run,Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);Module.preInit.length>0;)Module.preInit.pop()();return run(),createTFLiteSIMDModule.ready});module.exports=createTFLiteSIMDModule},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),resizingStage_1=__webpack_require__(405),softMax_1=__webpack_require__(406),jointBilateralFilter_1=__webpack_require__(407),blurStage_1=__webpack_require__(408),imageStage_1=__webpack_require__(409),virtualBackground_service_1=__webpack_require__(68),webglHelper_1=__webpack_require__(79);exports.glsl=String.raw,exports.segmentationDimensions={model96:{height:96,width:160},model144:{height:144,width:256}};class Webgl2Pipeline{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.vbService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.outputCanvasElement=null,this.vbService.setPostProcessingValue()}static create(){return new Webgl2Pipeline}async init(){try{this.tflite=this.vbService.tflite,this.outputCanvasElement=this.vbService.outputCanvasElement,this.gl=this.vbService.gl,this.segmentationPixelCount=this.vbService.segmentationPixelCount,this.VIRTUAL_BACKGROUND_TYPE=virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE,this.statsEnabled=this.vbService.statsEnabledFlag,this.stats=this.vbService.stats,this.vbHelper=webglHelper_1.WebglHelper.create();const vertexShaderSource=exports.glsl`#version 300 es

            in vec2 a_position;
            in vec2 a_texCoord;
            
            // a varying to pass the texture coordinates to the fragment shader
            out vec2 v_texCoord;
            
            void main(){
                //Recovers the position of the current vertex (with a projection on the plane)
                gl_Position = vec4(a_position, 0.0, 1.0);

                // Pass the texcoord to the fragment shader.
                v_texCoord = a_texCoord;
            }`;this.vertexShader=this.vbHelper.initShader(this.gl,this.gl.VERTEX_SHADER,vertexShaderSource),this.vertexArray=this.gl.createVertexArray(),this.gl.bindVertexArray(this.vertexArray),this.positionBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),this.gl.STATIC_DRAW),this.texCoordBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.texCoordBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,1,1]),this.gl.STATIC_DRAW),this.inputFrameTexture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputFrameTexture),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.personMaskTexture=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,this.vbService.videoElement.width,this.vbService.videoElement.height),this.options=this.vbService.options,this.segmentationMaskCanvas=document.createElement("canvas"),this.segmentationMaskCanvas.width=this.options.segmentationDimensions.width,this.segmentationMaskCanvas.height=this.options.segmentationDimensions.height,this.segmentationTexture=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,this.segmentationMaskCanvas.width,this.segmentationMaskCanvas.height),this.virtualBackgroundResizingStage=resizingStage_1.ResizingStage.create(this),this.virtualBackgroundSoftMax=softMax_1.SoftMax.create(this),this.virtualBackgroundJointBilateralFilter=jointBilateralFilter_1.JointBilateralFilter.create(this),this.virtualBackgroundImageStage=await imageStage_1.ImageStage.create(this.options,this),this.virtualBackgroundBlurStage=blurStage_1.BlurStage.create(this.options,this),this.updatePostProcessingConfig(),this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT)}catch(error){this.vbService.setBackgroundMode("blur",null),this.logger.error("[VirtualBackgroundWebGL2Pipeline] startEffect -- Failure -- "+error.message)}}async render(){try{if(this.vbService.statsEnabledFlag){const t0=performance.now();this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputFrameTexture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.vbService.videoElement),this.gl.bindVertexArray(this.vertexArray);const t1=performance.now();await this.virtualBackgroundResizingStage.render();const t2=performance.now();this.tflite._runInference();const t3=performance.now();this.virtualBackgroundSoftMax.render();const t4=performance.now();this.virtualBackgroundJointBilateralFilter.render();const t5=performance.now();this.virtualBackgroundImageStage?this.virtualBackgroundImageStage.render():this.virtualBackgroundBlurStage&&this.virtualBackgroundBlurStage.render();const t6=performance.now();this.vbService.stats.value.fps++,this.vbService.stats.value.webglinitialization+=t1-t0,this.vbService.stats.value.resizingstage+=t2-t1,this.vbService.stats.value.tflite+=t3-t2,this.vbService.stats.value.softMax+=t4-t3,this.vbService.stats.value.jointBilateralFilter+=t5-t4,this.vbService.stats.value.realization+=t6-t5}else this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputFrameTexture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.vbService.videoElement),this.gl.bindVertexArray(this.vertexArray),await this.virtualBackgroundResizingStage.render(),this.tflite._runInference(),this.virtualBackgroundSoftMax.render(),this.virtualBackgroundJointBilateralFilter.render(),this.virtualBackgroundImageStage?this.virtualBackgroundImageStage.render():this.virtualBackgroundBlurStage&&this.virtualBackgroundBlurStage.render()}catch(error){this.logger.error("[VirtualBackgroudWebgl2Pipeline] render -- failure -- "+error.message)}}updatePostProcessingConfig(){const postProcessingConfig={smoothSegmentation:!0,jointBilateralFilter:{sigmaColor:this.vbService.sigmaColor,sigmaSpace:this.vbService.sigmaSpace},coverage:[this.vbService.coverageMin,this.vbService.coverageMax],lightWrapping:this.vbService.lightWrapping,blendMode:this.vbService.blendMode};this.virtualBackgroundJointBilateralFilter.updateSigmaSpace(postProcessingConfig.jointBilateralFilter.sigmaSpace),this.virtualBackgroundJointBilateralFilter.updateSigmaColor(postProcessingConfig.jointBilateralFilter.sigmaColor),this.virtualBackgroundImageStage?(this.virtualBackgroundImageStage.updateCoverage(postProcessingConfig.coverage),this.virtualBackgroundImageStage.updateLightWrapping(postProcessingConfig.lightWrapping),this.virtualBackgroundImageStage.updateBlendMode(postProcessingConfig.blendMode)):this.virtualBackgroundBlurStage?this.virtualBackgroundBlurStage.updateCoverage(postProcessingConfig.coverage):(this.virtualBackgroundImageStage.updateCoverage([0,.9999]),this.virtualBackgroundImageStage.updateLightWrapping(0))}cleanUp(){this.virtualBackgroundImageStage&&this.virtualBackgroundImageStage.cleanUp(),this.virtualBackgroundJointBilateralFilter&&this.virtualBackgroundJointBilateralFilter.cleanUp(),this.virtualBackgroundSoftMax&&this.virtualBackgroundSoftMax.cleanUp(),this.virtualBackgroundResizingStage&&this.virtualBackgroundResizingStage.cleanUp(),this.virtualBackgroundBlurStage&&this.virtualBackgroundBlurStage.cleanUp(),this.segmentationMaskCanvas&&this.segmentationMaskCanvas.remove(),this.personMaskTexture&&this.gl.deleteTexture(this.personMaskTexture),this.segmentationTexture&&this.gl.deleteTexture(this.segmentationTexture),this.inputFrameTexture&&this.gl.deleteTexture(this.inputFrameTexture),this.texCoordBuffer&&this.gl.deleteBuffer(this.texCoordBuffer),this.positionBuffer&&this.gl.deleteBuffer(this.positionBuffer),this.vertexArray&&this.gl.deleteVertexArray(this.vertexArray),this.vertexShader&&this.gl.deleteShader(this.vertexShader)}}exports.Webgl2Pipeline=Webgl2Pipeline},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webglHelper_1=__webpack_require__(79);class ResizingStage{static create(vbWebgl2){return new ResizingStage(vbWebgl2)}constructor(vbWebgl2){this.vbWebgl2=vbWebgl2,this.vbHelper=webglHelper_1.WebglHelper.create(),this.gl=this.vbWebgl2.gl,this.segmentationMaskWidth=this.vbWebgl2.segmentationMaskCanvas.width,this.segmentationMaskHeight=this.vbWebgl2.segmentationMaskCanvas.height;const fragmentShaderSource=String.raw`#version 300 es
        precision highp float;
        
        uniform sampler2D u_inputFrame;
        
        in vec2 v_texCoord;
        
        out vec4 outColor;
        
        void main(){
            outColor = texture(u_inputFrame, v_texCoord);
        }`;this.fragmentShader=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSource),this.program=this.vbHelper.initProgram(this.gl,this.vbWebgl2.vertexShader,this.fragmentShader,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer),this.videoTexture=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,this.segmentationMaskWidth,this.segmentationMaskHeight),this.videoFrameBuffer=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.videoFrameBuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.videoTexture,0),this.videoOutputPixels=new Uint8Array(4*this.vbWebgl2.segmentationPixelCount);const inputFrameLocation=this.gl.getUniformLocation(this.program,"u_inputFrame");this.gl.useProgram(this.program),this.gl.uniform1i(inputFrameLocation,0)}async render(){if(this.vbWebgl2.statsEnabled){const t0=performance.now();this.gl.viewport(0,0,this.segmentationMaskWidth,this.segmentationMaskHeight),this.gl.useProgram(this.program),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.videoFrameBuffer),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4);const buf=this.gl.createBuffer();this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,buf),this.gl.bufferData(this.gl.PIXEL_PACK_BUFFER,this.videoOutputPixels.byteLength,this.gl.STREAM_READ),this.gl.readPixels(0,0,this.segmentationMaskWidth,this.segmentationMaskHeight,this.gl.RGBA,this.gl.UNSIGNED_BYTE,0),this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,null);const t1=performance.now();await this.getBufferSubDataAsync(buf,this.videoOutputPixels),this.gl.deleteBuffer(buf);const t2=performance.now(),tflite=this.vbWebgl2.tflite,inputMemoryOffset=tflite._getInputMemoryOffset()/4,t3=performance.now();for(let i=0;i<this.vbWebgl2.segmentationPixelCount;i++){const tfliteIndex=inputMemoryOffset+3*i,outputIndex=4*i;tflite.HEAPF32[tfliteIndex]=this.videoOutputPixels[outputIndex]/255,tflite.HEAPF32[tfliteIndex+1]=this.videoOutputPixels[outputIndex+1]/255,tflite.HEAPF32[tfliteIndex+2]=this.videoOutputPixels[outputIndex+2]/255}const t4=performance.now();this.vbWebgl2.stats.value.initialisation+=t1-t0,this.vbWebgl2.stats.value.synchro+=t2-t1,this.vbWebgl2.stats.value.copy+=t3-t2,this.vbWebgl2.stats.value.ecriture+=t4-t3}else{this.gl.viewport(0,0,this.segmentationMaskWidth,this.segmentationMaskHeight),this.gl.useProgram(this.program),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.videoFrameBuffer),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4);const buf=this.gl.createBuffer();this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,buf),this.gl.bufferData(this.gl.PIXEL_PACK_BUFFER,this.videoOutputPixels.byteLength,this.gl.STREAM_READ),this.gl.readPixels(0,0,this.segmentationMaskWidth,this.segmentationMaskHeight,this.gl.RGBA,this.gl.UNSIGNED_BYTE,0),this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,null),await this.getBufferSubDataAsync(buf,this.videoOutputPixels),this.gl.deleteBuffer(buf);const tflite=this.vbWebgl2.tflite,inputMemoryOffset=tflite._getInputMemoryOffset()/4;for(let i=0;i<this.vbWebgl2.segmentationPixelCount;i++){const tfliteIndex=inputMemoryOffset+3*i,outputIndex=4*i;tflite.HEAPF32[tfliteIndex]=this.videoOutputPixels[outputIndex]/255,tflite.HEAPF32[tfliteIndex+1]=this.videoOutputPixels[outputIndex+1]/255,tflite.HEAPF32[tfliteIndex+2]=this.videoOutputPixels[outputIndex+2]/255}}}cleanUp(){this.videoFrameBuffer&&this.gl.deleteFramebuffer(this.videoFrameBuffer),this.videoTexture&&this.gl.deleteTexture(this.videoTexture),this.program&&this.gl.deleteProgram(this.program),this.fragmentShader&&this.gl.deleteShader(this.fragmentShader)}async getBufferSubDataAsync(buffer,dstBuffer){const sync=this.gl.fenceSync(this.gl.SYNC_GPU_COMMANDS_COMPLETE,0);this.gl.flush();const res=await this.clientWaitAsync(sync);this.gl.deleteSync(sync),res!==this.gl.WAIT_FAILED&&(this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,buffer),this.gl.getBufferSubData(this.gl.PIXEL_PACK_BUFFER,0,dstBuffer),this.gl.bindBuffer(this.gl.PIXEL_PACK_BUFFER,null))}clientWaitAsync(sync){return new Promise(resolve=>{const test=()=>{const res=this.gl.clientWaitSync(sync,0,0);res!==this.gl.WAIT_FAILED?res!==this.gl.TIMEOUT_EXPIRED?resolve(res):requestAnimationFrame(test):resolve(res)};requestAnimationFrame(test)})}}exports.ResizingStage=ResizingStage},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webglHelper_1=__webpack_require__(79);class SoftMax{static create(vbWebgl2){return new SoftMax(vbWebgl2)}constructor(vbWebgl2){this.vbWebgl2=vbWebgl2,this.vbHelper=webglHelper_1.WebglHelper.create(),this.segmentationMaskWidth=this.vbWebgl2.segmentationMaskCanvas.width,this.segmentationMaskHeight=this.vbWebgl2.segmentationMaskCanvas.height,this.gl=this.vbWebgl2.gl;const fragmentShaderSource=String.raw`#version 300 es
        precision highp float;
    
        // Passed in from the vertex shader.
        in vec2 v_texCoord;
    
        out vec4 outColor;
    
        uniform sampler2D u_inputSegmentation;
    
        void main() {
            // The softMax equation to retrieve the maximum of the 2 values returned by the AI for each pixel.
            // We pass this value in our alpha afterwards to obtain the mask
            vec2 segmentation = texture(u_inputSegmentation, v_texCoord).rg;
            float shift = max(segmentation.r, segmentation.g);
            float backgroundExp = exp(segmentation.r - shift);
            float personExp = exp(segmentation.g - shift);
            outColor = vec4(vec3(0.0), personExp / (backgroundExp + personExp));
        }`;this.fragmentShader=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSource),this.program=this.vbHelper.initProgram(this.gl,this.vbWebgl2.vertexShader,this.fragmentShader,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer),this.inputTexture=this.vbHelper.createTexture(this.gl,this.gl.RG32F,this.segmentationMaskWidth,this.segmentationMaskHeight),this.frameBuffer=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer),this.gl.framebufferTexture2D(this.gl.DRAW_FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.vbWebgl2.segmentationTexture,0);const inputLocation=this.gl.getUniformLocation(this.program,"u_inputSegmentation");this.gl.useProgram(this.program),this.gl.uniform1i(inputLocation,1)}render(){const tflite=this.vbWebgl2.tflite,outputMemoryOffset=tflite._getOutputMemoryOffset()/4;this.gl.viewport(0,0,this.segmentationMaskWidth,this.segmentationMaskHeight),this.gl.useProgram(this.program),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.texSubImage2D(this.gl.TEXTURE_2D,0,0,0,this.segmentationMaskWidth,this.segmentationMaskHeight,this.gl.RG,this.gl.FLOAT,tflite.HEAPF32,outputMemoryOffset),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}cleanUp(){this.inputTexture&&this.gl.deleteTexture(this.inputTexture),this.frameBuffer&&this.gl.deleteFramebuffer(this.frameBuffer),this.program&&this.gl.deleteProgram(this.program),this.fragmentShader&&this.gl.deleteShader(this.fragmentShader)}}exports.SoftMax=SoftMax},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webglHelper_1=__webpack_require__(79);class JointBilateralFilter{static create(vbWebgl2){return new JointBilateralFilter(vbWebgl2)}constructor(vbWebgl2){this.vbWebgl2=vbWebgl2,this.vbHelper=webglHelper_1.WebglHelper.create(),this.outputCanvasWidth=this.vbWebgl2.outputCanvasElement.width,this.outputCanvasHeight=this.vbWebgl2.outputCanvasElement.height,this.segmentationMaskWidth=this.vbWebgl2.segmentationMaskCanvas.width,this.segmentationMaskHeight=this.vbWebgl2.segmentationMaskCanvas.height,this.texelWidth=1/this.outputCanvasWidth,this.texelHeight=1/this.outputCanvasHeight,this.gl=this.vbWebgl2.gl;const fragmentShaderSourceJointBilateralFilter=String.raw`#version 300 es
        precision highp float;
    
        uniform sampler2D u_inputFrame;
        uniform sampler2D u_segmentationMask;
        uniform vec2 u_texelSize;
        uniform float u_step;
        uniform float u_radius;
        uniform float u_offset;
        uniform float u_sigmaTexel;
        uniform float u_sigmaColor;
    
        in vec2 v_texCoord;
    
        out vec4 outColor;
    
        float gaussian(float x, float sigma) {
            float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);
            return exp((x * x) * coeff);
        }
        
        void main() {
            vec2 centerCoord = v_texCoord;
            vec3 centerColor = texture(u_inputFrame, centerCoord).rgb;
            float newVal = 0.0;
    
            float spaceWeight = 0.0;
            float colorWeight = 0.0;
            float totalWeight = 0.0;
    
            // Subsample kernel space.
            for (float i = -u_radius + u_offset; i <= u_radius; i += u_step) {
                for (float j = -u_radius + u_offset; j <= u_radius; j += u_step) {
                    vec2 shift = vec2(j, i) * u_texelSize;
                    vec2 coord = vec2(centerCoord + shift);
                    vec3 frameColor = texture(u_inputFrame, coord).rgb;
                    float outVal = texture(u_segmentationMask, coord).a;
    
                    spaceWeight = gaussian(distance(centerCoord, coord), u_sigmaTexel);
                    colorWeight = gaussian(distance(centerColor, frameColor), u_sigmaColor);
                    totalWeight += spaceWeight * colorWeight;
    
                    newVal += spaceWeight * colorWeight * outVal;
                }
            }
            newVal /= totalWeight;
    
            outColor = vec4(vec3(0.0), newVal);
          }`,fragmentShader=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSourceJointBilateralFilter);this.program=this.vbHelper.initProgram(this.gl,this.vbWebgl2.vertexShader,fragmentShader,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer);const inputFrameLocation=this.gl.getUniformLocation(this.program,"u_inputFrame"),segmentationMaskLocation=this.gl.getUniformLocation(this.program,"u_segmentationMask"),texelSizeLocation=this.gl.getUniformLocation(this.program,"u_texelSize");this.stepLocation=this.gl.getUniformLocation(this.program,"u_step"),this.radiusLocation=this.gl.getUniformLocation(this.program,"u_radius"),this.offsetLocation=this.gl.getUniformLocation(this.program,"u_offset"),this.sigmaTexelLocation=this.gl.getUniformLocation(this.program,"u_sigmaTexel"),this.sigmaColorLocation=this.gl.getUniformLocation(this.program,"u_sigmaColor"),this.frameBuffer=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer),this.gl.framebufferTexture2D(this.gl.DRAW_FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.vbWebgl2.personMaskTexture,0),this.gl.useProgram(this.program),this.gl.uniform1i(inputFrameLocation,0),this.gl.uniform1i(segmentationMaskLocation,1),this.gl.uniform2f(texelSizeLocation,this.texelWidth,this.texelHeight),this.updateSigmaSpace(0),this.updateSigmaColor(0)}render(){this.gl.viewport(0,0,this.outputCanvasWidth,this.outputCanvasHeight),this.gl.useProgram(this.program),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this.vbWebgl2.segmentationTexture),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}updateSigmaSpace(sigmaSpace){sigmaSpace*=Math.max(this.outputCanvasWidth/this.segmentationMaskWidth,this.outputCanvasHeight/this.segmentationMaskHeight);const step=Math.max(1,.66*Math.sqrt(sigmaSpace)),radius=sigmaSpace,offset=step>1?.5*step:0,sigmaTexel=Math.max(this.texelWidth,this.texelHeight)*sigmaSpace;this.gl.useProgram(this.program),this.gl.uniform1f(this.stepLocation,step),this.gl.uniform1f(this.radiusLocation,radius),this.gl.uniform1f(this.offsetLocation,offset),this.gl.uniform1f(this.sigmaTexelLocation,sigmaTexel)}updateSigmaColor(sigmaColor){this.gl.useProgram(this.program),this.gl.uniform1f(this.sigmaColorLocation,sigmaColor)}cleanUp(){this.frameBuffer&&this.gl.deleteFramebuffer(this.frameBuffer),this.program&&this.gl.deleteProgram(this.program),this.fragmentShader&&this.gl.deleteShader(this.fragmentShader)}}exports.JointBilateralFilter=JointBilateralFilter},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webglHelper_1=__webpack_require__(79);class BlurStage{static create(options,vbWebgl2){return options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.IMAGE||options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO?null:new BlurStage(vbWebgl2,options)}constructor(vbWebgl2,options){this.blur=new BlurPass(vbWebgl2,options),this.blend=new BlendPass(vbWebgl2)}render(){this.blur.render(),this.blend.render()}updateCoverage(coverage){this.blend.updateCoverage(coverage)}cleanUp(){this.blend.cleanUp(),this.blur.cleanUp()}}exports.BlurStage=BlurStage;class BlurPass{constructor(vbWebgl2,options){this.vbHelper=webglHelper_1.WebglHelper.create(),this.vbWebgl2=vbWebgl2,this.gl=this.vbWebgl2.gl,this.options=options;const outputWidth=this.vbWebgl2.outputCanvasElement.width,outputHeight=this.vbWebgl2.outputCanvasElement.height,fragmentShaderSourceBlur=String.raw`#version 300 es
            precision highp float;
            
            uniform sampler2D u_inputFrame;
            uniform sampler2D u_personMask;
            uniform vec2 u_texelSize;
            
            in vec2 v_texCoord;
            
            out vec4 outColor;
            
            const float offset[5] = float[](0.0, 1.0, 2.0, 3.0, 4.0);
            const float weight[5] = float[](0.2270270270, 0.1945945946, 0.1216216216,
                0.0540540541, 0.0162162162);
            
            void main(){
                vec4 centerColor = texture(u_inputFrame, v_texCoord);
                float personMask = texture(u_personMask, v_texCoord).a;

                vec4 frameColor = centerColor * weight[0] * (1.0 - personMask);
                
                for (int i=1; i<5; i++){
                    vec2 offset = vec2(offset[i]) * u_texelSize;

                    vec2 texCoord = v_texCoord + offset;
                    frameColor += texture(u_inputFrame, texCoord) * weight[i] *
                        (1.0 - texture(u_personMask, texCoord).a);
                    
                    texCoord = v_texCoord - offset;
                    frameColor += texture(u_inputFrame, texCoord) * weight[i] * 
                        (1.0 - texture(u_personMask, texCoord).a);
                }
                outColor = vec4(frameColor.rgb + (1.0 - frameColor.a) * centerColor.rgb, 1.0);
            }`,fragmentShaderSourceBlurPlus=String.raw`#version 300 es
            precision highp float;
            
            uniform sampler2D u_inputFrame;
            uniform sampler2D u_personMask;
            uniform vec2 u_texelSize;
            
            in vec2 v_texCoord;
            
            out vec4 outColor;
            
            const float offset[5] = float[](0.0, 3.0, 6.0, 9.0, 12.0);
            const float weight[5] = float[](0.2270270270, 0.1945945946, 0.1216216216,
                0.0540540541, 0.0162162162);
            
            void main(){
                vec4 centerColor = texture(u_inputFrame, v_texCoord);
                float personMask = texture(u_personMask, v_texCoord).a;

                vec4 frameColor = centerColor * weight[0] * (1.0 - personMask);
                
                for (int i=1; i<5; i++){
                    vec2 offset = vec2(offset[i]) * u_texelSize;

                    vec2 texCoord = v_texCoord + offset;
                    frameColor += texture(u_inputFrame, texCoord) * weight[i] *
                        (1.0 - texture(u_personMask, texCoord).a);
                    
                    texCoord = v_texCoord - offset;
                    frameColor += texture(u_inputFrame, texCoord) * weight[i] * 
                        (1.0 - texture(u_personMask, texCoord).a);
                }
                outColor = vec4(frameColor.rgb + (1.0 - frameColor.a) * centerColor.rgb, 1.0);
            }`;this.outputWidth=.5*outputWidth,this.outputHeight=.5*outputHeight,this.texelWidth=1/this.outputWidth,this.texelHeight=1/this.outputHeight,this.options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.BLUR?this.fragmentShaderBlur=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSourceBlur):this.options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.BLUR_PLUS&&(this.fragmentShaderBlur=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSourceBlurPlus)),this.program=this.vbHelper.initProgram(this.gl,this.vbWebgl2.vertexShader,this.fragmentShaderBlur,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer),this.inputFrameLocation=this.gl.getUniformLocation(this.program,"u_inputFrame"),this.personMaskLocation=this.gl.getUniformLocation(this.program,"u_personMask"),this.texelSizeLocation=this.gl.getUniformLocation(this.program,"u_texelSize"),this.texture1=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,this.outputWidth,this.outputHeight,this.gl.NEAREST,this.gl.LINEAR),this.texture2=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,this.outputWidth,this.outputHeight,this.gl.NEAREST,this.gl.LINEAR),this.frameBuffer1=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer1),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.texture1,0),this.frameBuffer2=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer2),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.texture2,0),this.gl.useProgram(this.program),this.gl.uniform1i(this.personMaskLocation,1)}render(){this.gl.viewport(0,0,this.outputWidth,this.outputHeight),this.gl.useProgram(this.program),this.gl.uniform1i(this.inputFrameLocation,0),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this.vbWebgl2.personMaskTexture);for(let i=0;i<3;i++)this.gl.uniform2f(this.texelSizeLocation,0,this.texelHeight),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer1),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture1),this.gl.uniform1i(this.inputFrameLocation,2),this.gl.uniform2f(this.texelSizeLocation,this.texelWidth,0),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.frameBuffer2),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture2)}cleanUp(){this.frameBuffer1&&this.gl.deleteFramebuffer(this.frameBuffer1),this.frameBuffer2&&this.gl.deleteFramebuffer(this.frameBuffer2),this.texture1&&this.gl.deleteTexture(this.texture1),this.texture2&&this.gl.deleteTexture(this.texture2),this.program&&this.gl.deleteProgram(this.program),this.fragmentShaderBlur&&this.gl.deleteShader(this.fragmentShaderBlur)}}exports.BlurPass=BlurPass;class BlendPass{constructor(vbWebgl2){this.vbWebgl2=vbWebgl2,this.vbHelper=webglHelper_1.WebglHelper.create();const vertexShaderSourceBlend=String.raw`#version 300 es
            
        in vec2 a_position;
        in vec2 a_texCoord;
        
        out vec2 v_texCoord;
        
        void main(){
            gl_Position = vec4(a_position * vec2(1.0, -1.0), 0.0, 1.0);
            v_texCoord = a_texCoord;
        }`,fragmentShaderSourceBlend=String.raw`#version 300 es
            precision highp float;
            
            uniform sampler2D u_inputFrame;
            uniform sampler2D u_personMask;
            uniform sampler2D u_blurredInputFrame;
            uniform vec2 u_coverage;
            
            in vec2 v_texCoord;
            
            out vec4 outColor;
            
            void main(){
                vec3 color = texture(u_inputFrame, v_texCoord).rgb;
                vec3 blurredColor = texture(u_blurredInputFrame, v_texCoord).rgb;
                float personMask = texture(u_personMask, v_texCoord).a;
                personMask = smoothstep(u_coverage.x, u_coverage.y, personMask);
                outColor = vec4(mix(blurredColor, color, personMask), 1.0);
            }`;this.gl=this.vbWebgl2.gl,this.vertexShaderBlend=this.vbHelper.initShader(this.gl,this.gl.VERTEX_SHADER,vertexShaderSourceBlend),this.fragmentShaderBlend=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSourceBlend),this.program=this.vbHelper.initProgram(this.gl,this.vertexShaderBlend,this.fragmentShaderBlend,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer);const inputFrameLocation=this.gl.getUniformLocation(this.program,"u_inputFame"),personMaskLocation=this.gl.getUniformLocation(this.program,"u_personMask"),blurredInputFrame=this.gl.getUniformLocation(this.program,"u_blurredInputFrame");this.coverageLocation=this.gl.getUniformLocation(this.program,"u_coverage"),this.gl.useProgram(this.program),this.gl.uniform1i(inputFrameLocation,0),this.gl.uniform1i(personMaskLocation,1),this.gl.uniform1i(blurredInputFrame,2),this.gl.uniform2f(this.coverageLocation,0,1)}render(){this.gl.viewport(0,0,this.vbWebgl2.outputCanvasElement.width,this.vbWebgl2.outputCanvasElement.height),this.gl.useProgram(this.program),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}updateCoverage(coverage){this.gl.useProgram(this.program),this.gl.uniform2f(this.coverageLocation,coverage[0],coverage[1])}cleanUp(){this.program&&this.gl.deleteProgram(this.program),this.fragmentShaderBlend&&this.gl.deleteShader(this.fragmentShaderBlend),this.vertexShaderBlend&&this.gl.deleteShader(this.vertexShaderBlend)}}exports.BlendPass=BlendPass},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webglHelper_1=__webpack_require__(79);class ImageStage{constructor(virtualBg,vbWebgl2,options){this.vertexShaderImage=null,this.fragmentShaderImage=null,this.program=null,this.backgroundTexture=null,this.vbWebgl2=vbWebgl2,this.vbHelper=webglHelper_1.WebglHelper.create();const vertexShaderSource=String.raw`#version 300 es        
            uniform vec2 u_backgroundScale;
            uniform vec2 u_backgroundOffset;
            
            in vec2 a_position;
            in vec2 a_texCoord;
            
            out vec2 v_texCoord;
            out vec2 v_backgroundCoord;
            
            void main(){
                gl_Position = vec4(a_position * vec2(1.0, - 1.0), 0.0, 1.0);
                v_texCoord = a_texCoord;
                v_backgroundCoord = a_texCoord * u_backgroundScale + u_backgroundOffset;
            }`,fragmentShaderSource=String.raw`#version 300 es
            
            precision highp float;
            
            uniform sampler2D u_inputFrame;
            uniform sampler2D u_personMask;
            uniform sampler2D u_background;
            uniform vec2 u_coverage;
            uniform float u_lightWrapping;
            uniform float u_blendMode;
            
            in vec2 v_texCoord;
            in vec2 v_backgroundCoord;
            
            out vec4 outColor;
            
            vec3 screen(vec3 a, vec3 b){
                return 1.0 - (1.0 - a) * (1.0 - b);
            }
            
            vec3 linearDodge(vec3 a, vec3 b){
                return a + b;
            }
            
            void main(){
                vec3 frameColor = texture(u_inputFrame, v_texCoord).rgb;
                vec3 backgroundColor = texture(u_background, v_backgroundCoord).rgb;
                float personMask = texture(u_personMask, v_texCoord).a;
                float lightWrapMask = 1.0 - max(0.0, personMask - u_coverage.y)/(1.0 - u_coverage.y);
                vec3 lightWrap = u_lightWrapping * lightWrapMask * backgroundColor;
                frameColor = u_blendMode * linearDodge(frameColor, lightWrap) +
                    (1.0 - u_blendMode) * screen(frameColor, lightWrap);
                personMask = smoothstep(u_coverage.x, u_coverage.y, personMask);
                outColor = vec4(frameColor * personMask + backgroundColor * (1.0 - personMask), 1.0);
            }`,width=this.vbWebgl2.outputCanvasElement.width,height=this.vbWebgl2.outputCanvasElement.height;this.gl=this.vbWebgl2.gl,this.vertexShaderImage=this.vbHelper.initShader(this.gl,this.gl.VERTEX_SHADER,vertexShaderSource),this.fragmentShaderImage=this.vbHelper.initShader(this.gl,this.gl.FRAGMENT_SHADER,fragmentShaderSource),this.program=this.vbHelper.initProgram(this.gl,this.vertexShaderImage,this.fragmentShaderImage,this.vbWebgl2.positionBuffer,this.vbWebgl2.texCoordBuffer),this.backgroundScaleLocation=this.gl.getUniformLocation(this.program,"u_backgroundScale"),this.backgroundOffsetLocation=this.gl.getUniformLocation(this.program,"u_backgroundOffset");const inputFrameLocation=this.gl.getUniformLocation(this.program,"u_inputFrame"),personMaskLocation=this.gl.getUniformLocation(this.program,"u_personMask");this.backgroundLocation=this.gl.getUniformLocation(this.program,"u_background"),this.coverageLocation=this.gl.getUniformLocation(this.program,"u_coverage"),this.lightWrappingLocation=this.gl.getUniformLocation(this.program,"u_lightWrapping"),this.blendModeLocation=this.gl.getUniformLocation(this.program,"u_blendMode"),this.outputRatio=width/height,this.gl.useProgram(this.program),this.gl.uniform2f(this.backgroundScaleLocation,1,1),this.gl.uniform2f(this.backgroundOffsetLocation,0,0),this.gl.uniform1i(inputFrameLocation,0),this.gl.uniform1i(personMaskLocation,1),this.gl.uniform2f(this.coverageLocation,0,1),this.gl.uniform1f(this.lightWrappingLocation,0),this.gl.uniform1f(this.blendModeLocation,0);let virtualImage=null,virtualVideo=null;this.options=options,this.options.backgroundType===this.vbWebgl2.VIRTUAL_BACKGROUND_TYPE.IMAGE?(virtualImage=virtualBg,virtualBg&&this.updateBackgroundImage(virtualImage)):this.options.backgroundType===this.vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO&&(virtualVideo=virtualBg,virtualBg&&this.updateBackgroundImage(virtualVideo))}static create(options,vbWebgl2){return new Promise((resolve,reject)=>{if(options.backgroundType!==vbWebgl2.VIRTUAL_BACKGROUND_TYPE.IMAGE&&options.backgroundType!==vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO)resolve(null);else if(options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.IMAGE){const virtualImage=new Image;virtualImage.crossOrigin="anonymous",virtualImage.onload=()=>{resolve(new ImageStage(virtualImage,vbWebgl2,options))},virtualImage.onerror=()=>{reject(new Error("[VirtualBackgroundImageStage] -- create -- failed to load image"))},virtualImage.src=options.imgBg}else if(options.backgroundType===vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO){const virtualVideo=document.createElement("video");virtualVideo.crossOrigin="anonymous",virtualVideo.onloadeddata=()=>{resolve(new ImageStage(virtualVideo,vbWebgl2,options))},virtualVideo.onerror=()=>{reject(new Error("[VirtualBackgroundImageStage] -- create -- failed to load video"))},virtualVideo.src=options.imgBg,virtualVideo.play(),virtualVideo.autoplay=!0,virtualVideo.muted=!0,virtualVideo.loop=!0}})}render(){this.gl.viewport(0,0,this.vbWebgl2.outputCanvasElement.width,this.vbWebgl2.outputCanvasElement.height),this.gl.useProgram(this.program),this.gl.activeTexture(this.gl.TEXTURE1),this.gl.bindTexture(this.gl.TEXTURE_2D,this.vbWebgl2.personMaskTexture),null!==this.backgroundTexture&&(this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D,this.backgroundTexture),this.gl.uniform1i(this.backgroundLocation,2),this.options.backgroundType===this.vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO&&this.gl.texSubImage2D(this.gl.TEXTURE_2D,0,0,0,this.video.videoWidth,this.video.videoHeight,this.gl.RGBA,this.gl.UNSIGNED_BYTE,this.video)),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}updateCoverage(coverage){this.gl.useProgram(this.program),this.gl.uniform2f(this.coverageLocation,coverage[0],coverage[1])}updateLightWrapping(lightWrapping){this.gl.useProgram(this.program),this.gl.uniform1f(this.lightWrappingLocation,lightWrapping)}updateBlendMode(blendMode){this.gl.useProgram(this.program),this.gl.uniform1f(this.blendModeLocation,"screen"===blendMode?0:1)}cleanUp(){this.backgroundTexture&&this.gl.deleteTexture(this.backgroundTexture),this.program&&this.gl.deleteProgram(this.program),this.fragmentShaderImage&&this.gl.deleteShader(this.fragmentShaderImage),this.vertexShaderImage&&this.gl.deleteShader(this.vertexShaderImage)}updateBackgroundImage(background){let backgroundWidth,backgroundHeight,bgWidth,bgHeight;this.options.backgroundType===this.vbWebgl2.VIRTUAL_BACKGROUND_TYPE.IMAGE&&(this.backgroundTexture=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,background.naturalWidth,background.naturalHeight,this.gl.LINEAR,this.gl.LINEAR),this.gl.texSubImage2D(this.gl.TEXTURE_2D,0,0,0,background.naturalWidth,background.naturalHeight,this.gl.RGBA,this.gl.UNSIGNED_BYTE,background),backgroundWidth=background.naturalWidth,backgroundHeight=background.naturalHeight,bgWidth=background.naturalWidth,bgHeight=background.naturalHeight),this.options.backgroundType===this.vbWebgl2.VIRTUAL_BACKGROUND_TYPE.VIDEO&&(this.backgroundTexture=this.vbHelper.createTexture(this.gl,this.gl.RGBA8,background.videoWidth,background.videoHeight,this.gl.LINEAR,this.gl.LINEAR),this.gl.bindTexture(this.gl.TEXTURE_2D,this.backgroundTexture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([0,0,255,255])),this.video=background,backgroundWidth=this.video.videoWidth,backgroundHeight=this.video.videoHeight,bgWidth=this.video.videoWidth,bgHeight=this.video.videoHeight);let xOffset=0,yOffset=0;backgroundWidth/backgroundHeight<this.outputRatio?(backgroundHeight=backgroundWidth/this.outputRatio,yOffset=(bgHeight-backgroundHeight)/2):(backgroundWidth=backgroundHeight*this.outputRatio,xOffset=(bgWidth-backgroundWidth)/2);const xScale=backgroundWidth/bgWidth,yScale=backgroundHeight/bgHeight;xOffset/=bgWidth,yOffset/=bgHeight,this.gl.uniform2f(this.backgroundScaleLocation,xScale,yScale),this.gl.uniform2f(this.backgroundOffsetLocation,xOffset,yOffset)}}exports.ImageStage=ImageStage},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const virtualBackground_service_1=__webpack_require__(68),logger_service_1=__webpack_require__(4);class Canvas2DPipeline{constructor(){this.vbService=virtualBackground_service_1.VirtualBackgroundService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance()}static create(){return new Canvas2DPipeline}async init(){try{this.tflite=this.vbService.tflite,this.segmentationPixelCount=this.vbService.segmentationPixelCount,this.segmentationMask=new ImageData(this.vbService.options.segmentationDimensions.width,this.vbService.options.segmentationDimensions.height),this.segmentationMaskCanvas=document.createElement("canvas"),this.segmentationMaskCanvas.width=this.vbService.options.segmentationDimensions.width,this.segmentationMaskCanvas.height=this.vbService.options.segmentationDimensions.height,this.segmentationMaskCtx=this.segmentationMaskCanvas.getContext("2d"),this.outputCanvasCtx=this.vbService.outputCanvasElement.getContext("2d"),this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.IMAGE?(this.virtualImage=new Image,this.virtualImage.crossOrigin="anonymous",this.virtualImage.onload=()=>{},this.virtualImage.onerror=()=>{Error("[VirtualBackgroundCanvas2D] -- create -- failed to load image")},this.virtualImage.src=this.vbService.options.imgBg):this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.VIDEO&&(this.virtualVideo=document.createElement("video"),this.virtualVideo.crossOrigin="anonymous",this.virtualVideo.onplaying=()=>{},this.virtualVideo.onerror=()=>{Error("[VirtualBackgroundCanvas2D] -- create -- failed to load video")},this.virtualVideo.src=this.vbService.options.imgBg,this.virtualVideo.play(),this.virtualVideo.autoplay=!0,this.virtualVideo.muted=!0,this.virtualVideo.loop=!0)}catch(error){this.logger.error("[VirtualBackgroundCanvas2D] startEffect -- Failure -- "+error.message)}}async render(){try{if(this.vbService.statsEnabledFlag){const t0=performance.now();this.runPreProcessing();const t1=performance.now();this.runInference();const t2=performance.now();this.runPostProcessing();const t3=performance.now();this.vbService.stats.value.fps++,this.vbService.stats.value.preProcessingDuration+=t1-t0,this.vbService.stats.value.inferenceDuration+=t2-t1,this.vbService.stats.value.postProcessingDuration+=t3-t2}else this.runPreProcessing(),this.runInference(),this.runPostProcessing()}catch(error){this.logger.error("[VirtualBackgroudCanvas2D] render -- failure -- "+error.message)}}updatePostProcessingConfig(){}cleanUp(){this.segmentationMaskCanvas.remove()}runPreProcessing(){this.segmentationMaskCtx.drawImage(this.vbService.videoElement,0,0,this.vbService.videoElement.width,this.vbService.videoElement.height,0,0,this.vbService.options.segmentationDimensions.width,this.vbService.options.segmentationDimensions.height);const imageData=this.segmentationMaskCtx.getImageData(0,0,this.vbService.options.segmentationDimensions.width,this.vbService.options.segmentationDimensions.height),inputMemoryOffset=this.tflite._getInputMemoryOffset()/4;for(let i=0;i<this.segmentationPixelCount;i++)this.tflite.HEAPF32[inputMemoryOffset+3*i]=imageData.data[4*i]/255,this.tflite.HEAPF32[inputMemoryOffset+3*i+1]=imageData.data[4*i+1]/255,this.tflite.HEAPF32[inputMemoryOffset+3*i+2]=imageData.data[4*i+2]/255}runInference(){this.tflite._runInference();const outputMemoryOffset=this.tflite._getOutputMemoryOffset()/4;for(let i=0;i<this.segmentationPixelCount;i++){const background=this.tflite.HEAPF32[outputMemoryOffset+2*i],person=this.tflite.HEAPF32[outputMemoryOffset+2*i+1],shift=Math.max(background,person),backgroundExp=Math.exp(background-shift),personExp=Math.exp(person-shift);this.segmentationMask.data[4*i+3]=255*personExp/(backgroundExp+personExp)}this.segmentationMaskCtx.putImageData(this.segmentationMask,0,0)}runPostProcessing(){this.outputCanvasCtx.globalCompositeOperation="copy",this.outputCanvasCtx.filter=this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.IMAGE||this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.VIDEO?"blur(4px)":"blur(8px)",this.outputCanvasCtx.drawImage(this.segmentationMaskCanvas,0,0,this.vbService.options.segmentationDimensions.width,this.vbService.options.segmentationDimensions.height,0,0,this.vbService.videoElement.width,this.vbService.videoElement.height),this.outputCanvasCtx.globalCompositeOperation="source-in",this.outputCanvasCtx.filter="none",this.outputCanvasCtx.drawImage(this.vbService.videoElement,0,0),this.outputCanvasCtx.globalCompositeOperation="destination-over",this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.IMAGE?this.outputCanvasCtx.drawImage(this.virtualImage,0,0,this.vbService.videoElement.width,this.vbService.videoElement.height):this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.VIDEO?this.outputCanvasCtx.drawImage(this.virtualVideo,0,0,this.vbService.videoElement.width,this.vbService.videoElement.height):this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.BLUR?(this.outputCanvasCtx.filter="blur(6px)",this.outputCanvasCtx.drawImage(this.vbService.videoElement,0,0)):this.vbService.options.backgroundType===virtualBackground_service_1.VIRTUAL_BACKGROUND_TYPE.BLUR_PLUS&&(this.outputCanvasCtx.filter="blur(30px)",this.outputCanvasCtx.drawImage(this.vbService.videoElement,0,0))}}exports.Canvas2DPipeline=Canvas2DPipeline},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SET_TIMEOUT",(function(){return SET_TIMEOUT})),__webpack_require__.d(__webpack_exports__,"CLEAR_TIMEOUT",(function(){return CLEAR_TIMEOUT})),__webpack_require__.d(__webpack_exports__,"TIMEOUT_TICK",(function(){return TIMEOUT_TICK})),__webpack_require__.d(__webpack_exports__,"timerWorkerScript",(function(){return timerWorkerScript}));const SET_TIMEOUT=1,CLEAR_TIMEOUT=2,TIMEOUT_TICK=3,code="\n    var timer;\n    onmessage = function(request) {\n        switch (request.data.id) {\n            case ".concat(SET_TIMEOUT,": timer = setTimeout(() => { postMessage({ id: ").concat(TIMEOUT_TICK," }); }, request.data.timeMs); break;\n            case ").concat(CLEAR_TIMEOUT,": if (timer) clearTimeout(timer); break;\n        }\n    };\n"),timerWorkerScript=URL.createObjectURL(new Blob([code],{type:"application/javascript"}))},function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(80),exports),__exportStar(__webpack_require__(55),exports),__exportStar(__webpack_require__(62),exports),__exportStar(__webpack_require__(69),exports),__exportStar(__webpack_require__(70),exports),__exportStar(__webpack_require__(145),exports),__exportStar(__webpack_require__(112),exports),__exportStar(__webpack_require__(146),exports),__exportStar(__webpack_require__(169),exports),__exportStar(__webpack_require__(147),exports),__exportStar(__webpack_require__(419),exports),__exportStar(__webpack_require__(420),exports),__exportStar(__webpack_require__(170),exports),__exportStar(__webpack_require__(421),exports)},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.formatText=void 0;var AbstractTextFormatter=function(){function AbstractTextFormatter(regularExpression){this._regularExpression=regularExpression}return AbstractTextFormatter.prototype.format=function(lang,input){var matches;if(input){for(var result=input;null!=(matches=this._regularExpression.exec(input));)result=result.replace(matches[0],this.internalFormat(lang,matches));return result}return input},AbstractTextFormatter}(),DateFormatter=function(_super){function DateFormatter(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(DateFormatter,_super),DateFormatter.prototype.internalFormat=function(lang,matches){var date=new Date(Date.parse(matches[1])),format=null!=matches[2]?matches[2].toLowerCase():"compact";return"compact"!=format?date.toLocaleDateString(lang,{day:"numeric",weekday:format,month:format,year:"numeric"}):date.toLocaleDateString()},DateFormatter}(AbstractTextFormatter),TimeFormatter=function(_super){function TimeFormatter(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(TimeFormatter,_super),TimeFormatter.prototype.internalFormat=function(lang,matches){return new Date(Date.parse(matches[1])).toLocaleTimeString(lang,{hour:"numeric",minute:"2-digit"})},TimeFormatter}(AbstractTextFormatter);exports.formatText=function(lang,text){for(var result=text,_i=0,formatters_1=[new DateFormatter(/\{{2}DATE\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\)\}{2}/g),new TimeFormatter(/\{{2}TIME\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))\)\}{2}/g)];_i<formatters_1.length;_i++){result=formatters_1[_i].format(lang,result)}return result}},function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(415),exports),__exportStar(__webpack_require__(416),exports)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MenuItem=void 0;var host_config_1=__webpack_require__(112),constants_1=__webpack_require__(148),MenuItem=function(){function MenuItem(key,value){this._isEnabled=!0,this.key=key,this._value=value}return MenuItem.prototype.click=function(){this.isEnabled&&this.onClick&&this.onClick(this)},MenuItem.prototype.updateCssClasses=function(){if(this._element){var effectiveHostConfig=this._hostConfig?this._hostConfig:host_config_1.defaultHostConfig;this._element.className=effectiveHostConfig.makeCssClassName("ac-ctrl"),this._element.classList.add(effectiveHostConfig.makeCssClassName(this.isEnabled?"ac-ctrl-dropdown-item":"ac-ctrl-dropdown-item-disabled")),this.isEnabled||this._element.classList.add(effectiveHostConfig.makeCssClassName("ac-disabled"))}},MenuItem.prototype.toString=function(){return this.value},MenuItem.prototype.render=function(hostConfig){var _this=this;return this._hostConfig=hostConfig,this._element||(this._element=document.createElement("span"),this._element.innerText=this.value,this._element.setAttribute("role","menuitem"),this.isEnabled||this._element.setAttribute("aria-disabled","true"),this._element.setAttribute("aria-selected","false"),this._element.onmouseup=function(e){_this.click()},this._element.onkeydown=function(e){e.key===constants_1.Constants.keys.enter&&(e.cancelBubble=!0,_this.click())},this.updateCssClasses()),this._element},Object.defineProperty(MenuItem.prototype,"value",{get:function(){return this._value},set:function(newValue){this._value=newValue,this._element&&(this._element.innerText=newValue)},enumerable:!1,configurable:!0}),Object.defineProperty(MenuItem.prototype,"isEnabled",{get:function(){return this._isEnabled},set:function(value){this._isEnabled!==value&&(this._isEnabled=value,this.updateCssClasses())},enumerable:!1,configurable:!0}),MenuItem}();exports.MenuItem=MenuItem},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0}),exports.PopupMenu=void 0;var constants_1=__webpack_require__(148),collection_1=__webpack_require__(417),PopupMenu=function(_super){function PopupMenu(){var _this=_super.call(this)||this;return _this._items=new collection_1.Collection,_this._renderedItems=[],_this._selectedIndex=-1,_this}return __extends(PopupMenu,_super),PopupMenu.prototype.renderContent=function(){var element=document.createElement("div");element.className=this.hostConfig.makeCssClassName("ac-ctrl ac-popup"),element.setAttribute("role","listbox");for(var i=0;i<this._items.length;i++){var renderedItem=this._items.get(i).render(this.hostConfig);renderedItem.tabIndex=0,element.appendChild(renderedItem),i==this.selectedIndex&&renderedItem.focus(),this._renderedItems.push(renderedItem)}return element},PopupMenu.prototype.keyDown=function(e){_super.prototype.keyDown.call(this,e);var selectedItemIndex=this._selectedIndex;switch(e.key){case constants_1.Constants.keys.tab:this.closePopup(!0);break;case constants_1.Constants.keys.up:(selectedItemIndex<=0||--selectedItemIndex<0)&&(selectedItemIndex=this._renderedItems.length-1),this.selectedIndex=selectedItemIndex,e.cancelBubble=!0;break;case constants_1.Constants.keys.down:(selectedItemIndex<0||++selectedItemIndex>=this._renderedItems.length)&&(selectedItemIndex=0),this.selectedIndex=selectedItemIndex,e.cancelBubble=!0}},Object.defineProperty(PopupMenu.prototype,"items",{get:function(){return this._items},enumerable:!1,configurable:!0}),Object.defineProperty(PopupMenu.prototype,"selectedIndex",{get:function(){return this._selectedIndex},set:function(index){index>=0&&index<this._renderedItems.length&&(this._renderedItems[index].focus(),this._selectedIndex=index)},enumerable:!1,configurable:!0}),PopupMenu}(__webpack_require__(418).PopupControl);exports.PopupMenu=PopupMenu},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Collection=void 0;var Collection=function(){function Collection(){this._items=[]}return Collection.prototype.get=function(index){return this._items[index]},Collection.prototype.add=function(item){this._items.push(item),this.onItemAdded&&this.onItemAdded(item)},Collection.prototype.remove=function(item){var i=this._items.indexOf(item);i>=0&&(this._items=this._items.splice(i,1),this.onItemRemoved&&this.onItemRemoved(item))},Collection.prototype.indexOf=function(item){return this._items.indexOf(item)},Object.defineProperty(Collection.prototype,"length",{get:function(){return this._items.length},enumerable:!1,configurable:!0}),Collection}();exports.Collection=Collection},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PopupControl=void 0;var constants_1=__webpack_require__(148),Utils=__webpack_require__(69),host_config_1=__webpack_require__(112),PopupControl=function(){function PopupControl(){this._isOpen=!1}return PopupControl.prototype.keyDown=function(e){switch(e.key){case constants_1.Constants.keys.escape:this.closePopup(!0)}},PopupControl.prototype.render=function(rootElementBounds){var _this=this,element=document.createElement("div");return element.tabIndex=0,element.className=this.hostConfig.makeCssClassName("ac-ctrl","ac-ctrl-popup-container"),element.setAttribute("role","dialog"),element.setAttribute("aria-modal","true"),element.onkeydown=function(e){return _this.keyDown(e),!e.cancelBubble},element.appendChild(this.renderContent()),element},PopupControl.prototype.focus=function(){this._popupElement&&this._popupElement.firstElementChild.focus()},PopupControl.prototype.popup=function(rootElement){var _a,_b,_c,_d,_e,_this=this;if(!this._isOpen){this._overlayElement=document.createElement("div"),this._overlayElement.className=this.hostConfig.makeCssClassName("ac-ctrl-overlay"),this._overlayElement.tabIndex=0,this._overlayElement.style.width=document.documentElement.scrollWidth+"px",this._overlayElement.style.height=document.documentElement.scrollHeight+"px",this._overlayElement.onfocus=function(e){_this.closePopup(!0)},document.body.appendChild(this._overlayElement);var rootElementBounds=rootElement.getBoundingClientRect();this._popupElement=this.render(rootElementBounds),(_a=this._popupElement.classList).remove.apply(_a,this.hostConfig.makeCssClassNames("ac-ctrl-slide","ac-ctrl-slideLeftToRight","ac-ctrl-slideRightToLeft","ac-ctrl-slideTopToBottom","ac-ctrl-slideRightToLeft")),window.addEventListener("resize",(function(e){_this.closePopup(!0)}));var rootElementLabel=rootElement.getAttribute("aria-label");rootElementLabel&&this._popupElement.setAttribute("aria-label",rootElementLabel),this._overlayElement.appendChild(this._popupElement);var top,popupElementBounds=this._popupElement.getBoundingClientRect(),availableSpaceBelow=window.innerHeight-rootElementBounds.bottom,availableSpaceAbove=rootElementBounds.top,availableSpaceRight=(window.innerWidth,rootElementBounds.left),availableSpaceLeft=(availableSpaceRight=window.innerWidth-rootElementBounds.right,rootElementBounds.left),left=rootElementBounds.left+Utils.getScrollX();if(availableSpaceAbove<popupElementBounds.height&&availableSpaceBelow<popupElementBounds.height){var actualPopupHeight=Math.min(popupElementBounds.height,window.innerHeight);if(this._popupElement.style.maxHeight=actualPopupHeight+"px",top=actualPopupHeight<popupElementBounds.height?Utils.getScrollY():Utils.getScrollY()+rootElementBounds.top+(rootElementBounds.height-actualPopupHeight)/2,availableSpaceLeft<popupElementBounds.width&&availableSpaceRight<popupElementBounds.width){var actualPopupWidth=Math.min(popupElementBounds.width,window.innerWidth);this._popupElement.style.maxWidth=actualPopupWidth+"px",left=actualPopupWidth<popupElementBounds.width?Utils.getScrollX():Utils.getScrollX()+rootElementBounds.left+(rootElementBounds.width-actualPopupWidth)/2}else availableSpaceRight>=popupElementBounds.width?(left=Utils.getScrollX()+rootElementBounds.right,(_b=this._popupElement.classList).add.apply(_b,this.hostConfig.makeCssClassNames("ac-ctrl-slide","ac-ctrl-slideLeftToRight"))):(left=Utils.getScrollX()+rootElementBounds.left-popupElementBounds.width,(_c=this._popupElement.classList).add.apply(_c,this.hostConfig.makeCssClassNames("ac-ctrl-slide","ac-ctrl-slideRightToLeft")))}else availableSpaceBelow>=popupElementBounds.height?(top=Utils.getScrollY()+rootElementBounds.bottom,(_d=this._popupElement.classList).add.apply(_d,this.hostConfig.makeCssClassNames("ac-ctrl-slide","ac-ctrl-slideTopToBottom"))):(top=Utils.getScrollY()+rootElementBounds.top-popupElementBounds.height,(_e=this._popupElement.classList).add.apply(_e,this.hostConfig.makeCssClassNames("ac-ctrl-slide","ac-ctrl-slideBottomToTop"))),availableSpaceRight<popupElementBounds.width&&(left=Utils.getScrollX()+rootElementBounds.right-popupElementBounds.width);this._popupElement.style.left=left+"px",this._popupElement.style.top=top+"px",this._popupElement.focus(),this._isOpen=!0}},PopupControl.prototype.closePopup=function(wasCancelled){this._isOpen&&(document.body.removeChild(this._overlayElement),this._isOpen=!1,this.onClose&&this.onClose(this,wasCancelled))},Object.defineProperty(PopupControl.prototype,"hostConfig",{get:function(){return this._hostConfig?this._hostConfig:host_config_1.defaultHostConfig},set:function(value){this._hostConfig=value},enumerable:!1,configurable:!0}),Object.defineProperty(PopupControl.prototype,"isOpen",{get:function(){return this._isOpen},enumerable:!1,configurable:!0}),PopupControl}();exports.PopupControl=PopupControl},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)Object.prototype.hasOwnProperty.call(b,p)&&(d[p]=b[p])})(d,b)},function(d,b){if("function"!=typeof b&&null!==b)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Table=exports.TableRow=exports.TableCell=exports.StylableContainer=exports.TableColumnDefinition=void 0;var card_elements_1=__webpack_require__(147),enums_1=__webpack_require__(55),registry_1=__webpack_require__(146),serialization_1=__webpack_require__(70),shared_1=__webpack_require__(62),strings_1=__webpack_require__(80),utils_1=__webpack_require__(69),TableColumnDefinition=function(_super){function TableColumnDefinition(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.width=new shared_1.SizeAndUnit(1,enums_1.SizeUnit.Weight),_this}return __extends(TableColumnDefinition,_super),TableColumnDefinition.prototype.getSchemaKey=function(){return"ColumnDefinition"},TableColumnDefinition.horizontalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"horizontalCellContentAlignment",enums_1.HorizontalAlignment),TableColumnDefinition.verticalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"verticalCellContentAlignment",enums_1.VerticalAlignment),TableColumnDefinition.widthProperty=new serialization_1.CustomProperty(serialization_1.Versions.v1_5,"width",(function(sender,property,source,context){var result=property.defaultValue,value=source[property.name],invalidWidth=!1;if("number"!=typeof value||isNaN(value))if("string"==typeof value)try{result=shared_1.SizeAndUnit.parse(value)}catch(e){invalidWidth=!0}else invalidWidth=!0;else result=new shared_1.SizeAndUnit(value,enums_1.SizeUnit.Weight);return invalidWidth&&context.logParseEvent(sender,enums_1.ValidationEvent.InvalidPropertyValue,strings_1.Strings.errors.invalidColumnWidth(value)),result}),(function(sender,property,target,value,context){value.unit===enums_1.SizeUnit.Pixel?context.serializeValue(target,"width",value.physicalSize+"px"):context.serializeNumber(target,"width",value.physicalSize)}),new shared_1.SizeAndUnit(1,enums_1.SizeUnit.Weight)),__decorate([serialization_1.property(TableColumnDefinition.horizontalCellContentAlignmentProperty)],TableColumnDefinition.prototype,"horizontalCellContentAlignment",void 0),__decorate([serialization_1.property(TableColumnDefinition.verticalCellContentAlignmentProperty)],TableColumnDefinition.prototype,"verticalCellContentAlignment",void 0),__decorate([serialization_1.property(TableColumnDefinition.widthProperty)],TableColumnDefinition.prototype,"width",void 0),TableColumnDefinition}(serialization_1.SerializableObject);exports.TableColumnDefinition=TableColumnDefinition;var StylableContainer=function(_super){function StylableContainer(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._items=[],_this}return __extends(StylableContainer,_super),StylableContainer.prototype.parseItem=function(source,context){var _this=this;return context.parseCardObject(this,source,[],!this.isDesignMode(),(function(typeName){return _this.createItemInstance(typeName)}),(function(typeName,errorType){context.logParseEvent(void 0,enums_1.ValidationEvent.ElementTypeNotAllowed,strings_1.Strings.errors.elementTypeNotAllowed(typeName))}))},StylableContainer.prototype.internalAddItem=function(item){if(item.parent)throw new Error(strings_1.Strings.errors.elementAlreadyParented());this._items.push(item),item.setParent(this)},StylableContainer.prototype.internalRemoveItem=function(item){var itemIndex=this._items.indexOf(item);return itemIndex>=0&&(this._items.splice(itemIndex,1),item.setParent(void 0),this.updateLayout(),!0)},StylableContainer.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this._items=[];var items=source[this.getCollectionPropertyName()];if(Array.isArray(items))for(var _i=0,items_1=items;_i<items_1.length;_i++){var item=items_1[_i],instance=this.parseItem(item,context);instance&&this._items.push(instance)}},StylableContainer.prototype.internalToJSON=function(target,context){_super.prototype.internalToJSON.call(this,target,context),context.serializeArray(target,this.getCollectionPropertyName(),this._items)},StylableContainer.prototype.removeItem=function(item){return this.internalRemoveItem(item)},StylableContainer.prototype.getItemCount=function(){return this._items.length},StylableContainer.prototype.getItemAt=function(index){return this._items[index]},StylableContainer.prototype.getFirstVisibleRenderedItem=function(){return this.getItemCount()>0?this.getItemAt(0):void 0},StylableContainer.prototype.getLastVisibleRenderedItem=function(){return this.getItemCount()>0?this.getItemAt(this.getItemCount()-1):void 0},StylableContainer}(card_elements_1.StylableCardElementContainer);exports.StylableContainer=StylableContainer;var TableCell=function(_super){function TableCell(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._columnIndex=-1,_this._cellType="data",_this}return __extends(TableCell,_super),TableCell.prototype.getHasBorder=function(){return this.parentRow.parentTable.showGridLines},TableCell.prototype.applyBorder=function(){if(this.renderedElement&&this.getHasBorder()){var styleDefinition=this.hostConfig.containerStyles.getStyleByName(this.parentRow.parentTable.gridStyle);if(styleDefinition.borderColor){var borderColor=utils_1.stringToCssColor(styleDefinition.borderColor);borderColor&&(this.renderedElement.style.borderRight="1px solid "+borderColor,this.renderedElement.style.borderBottom="1px solid "+borderColor)}}},TableCell.prototype.getDefaultPadding=function(){return this.getHasBackground()||this.getHasBorder()?new shared_1.PaddingDefinition(enums_1.Spacing.Small,enums_1.Spacing.Small,enums_1.Spacing.Small,enums_1.Spacing.Small):_super.prototype.getDefaultPadding.call(this)},TableCell.prototype.internalRender=function(){var cellElement=_super.prototype.internalRender.call(this);return cellElement&&(cellElement.setAttribute("role","data"===this.cellType?"cell":"columnheader"),cellElement.style.minWidth="0","header"===this.cellType&&cellElement.setAttribute("scope","col")),cellElement},TableCell.prototype.shouldSerialize=function(context){return!0},TableCell.prototype.getJsonTypeName=function(){return"TableCell"},TableCell.prototype.getEffectiveTextStyleDefinition=function(){return"header"===this.cellType?this.hostConfig.textStyles.columnHeader:_super.prototype.getEffectiveTextStyleDefinition.call(this)},TableCell.prototype.getEffectiveHorizontalAlignment=function(){if(void 0!==this.horizontalAlignment)return this.horizontalAlignment;if(void 0!==this.parentRow.horizontalCellContentAlignment)return this.parentRow.horizontalCellContentAlignment;if(this.columnIndex>=0){var horizontalAlignment=this.parentRow.parentTable.getColumnAt(this.columnIndex).horizontalCellContentAlignment;if(void 0!==horizontalAlignment)return horizontalAlignment}return void 0!==this.parentRow.parentTable.horizontalCellContentAlignment?this.parentRow.parentTable.horizontalCellContentAlignment:_super.prototype.getEffectiveHorizontalAlignment.call(this)},TableCell.prototype.getEffectiveVerticalContentAlignment=function(){if(void 0!==this.verticalContentAlignment)return this.verticalContentAlignment;if(void 0!==this.parentRow.verticalCellContentAlignment)return this.parentRow.verticalCellContentAlignment;if(this.columnIndex>=0){var verticalAlignment=this.parentRow.parentTable.getColumnAt(this.columnIndex).verticalCellContentAlignment;if(void 0!==verticalAlignment)return verticalAlignment}return void 0!==this.parentRow.parentTable.verticalCellContentAlignment?this.parentRow.parentTable.verticalCellContentAlignment:_super.prototype.getEffectiveVerticalContentAlignment.call(this)},Object.defineProperty(TableCell.prototype,"columnIndex",{get:function(){return this._columnIndex},enumerable:!1,configurable:!0}),Object.defineProperty(TableCell.prototype,"cellType",{get:function(){return this._cellType},enumerable:!1,configurable:!0}),Object.defineProperty(TableCell.prototype,"parentRow",{get:function(){return this.parent},enumerable:!1,configurable:!0}),Object.defineProperty(TableCell.prototype,"isStandalone",{get:function(){return!1},enumerable:!1,configurable:!0}),TableCell}(card_elements_1.Container);exports.TableCell=TableCell;var TableRow=function(_super){function TableRow(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(TableRow,_super),TableRow.prototype.getDefaultPadding=function(){return new shared_1.PaddingDefinition(enums_1.Spacing.None,enums_1.Spacing.None,enums_1.Spacing.None,enums_1.Spacing.None)},TableRow.prototype.applyBackground=function(){if(this.renderedElement){var styleDefinition=this.hostConfig.containerStyles.getStyleByName(this.style,this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));if(styleDefinition.backgroundColor){var bgColor=utils_1.stringToCssColor(styleDefinition.backgroundColor);this.renderedElement.style.backgroundColor=bgColor}}},TableRow.prototype.getCollectionPropertyName=function(){return"cells"},TableRow.prototype.createItemInstance=function(typeName){return typeName&&"TableCell"!==typeName?void 0:new TableCell},TableRow.prototype.internalRender=function(){var isFirstRow=this.getIsFirstRow(),cellSpacing=this.hostConfig.table.cellSpacing,rowElement=document.createElement("div");rowElement.setAttribute("role","row"),rowElement.style.display="flex",rowElement.style.flexDirection="row";for(var i=0;i<Math.min(this.getItemCount(),this.parentTable.getColumnCount());i++){var cell=this.getItemAt(i);cell._columnIndex=i,cell._cellType=this.parentTable.firstRowAsHeaders&&isFirstRow?"header":"data";var renderedCell=cell.render();if(renderedCell){var column=this.parentTable.getColumnAt(i);column.computedWidth.unit===enums_1.SizeUnit.Pixel?renderedCell.style.flex="0 0 "+column.computedWidth.physicalSize+"px":renderedCell.style.flex="1 1 "+column.computedWidth.physicalSize+"%",i>0&&!this.parentTable.showGridLines&&cellSpacing>0&&(renderedCell.style.marginLeft=cellSpacing+"px"),rowElement.appendChild(renderedCell)}}return rowElement.children.length>0?rowElement:void 0},TableRow.prototype.shouldSerialize=function(context){return!0},TableRow.prototype.addCell=function(cell){this.internalAddItem(cell)},TableRow.prototype.removeCellAt=function(columnIndex){return columnIndex>=0&&columnIndex<this.getItemCount()&&this.removeItem(this.getItemAt(columnIndex))},TableRow.prototype.ensureHasEnoughCells=function(cellCount){for(;this.getItemCount()<cellCount;)this.addCell(new TableCell)},TableRow.prototype.getJsonTypeName=function(){return"TableRow"},TableRow.prototype.getIsFirstRow=function(){return this.parentTable.getItemAt(0)===this},Object.defineProperty(TableRow.prototype,"parentTable",{get:function(){return this.parent},enumerable:!1,configurable:!0}),Object.defineProperty(TableRow.prototype,"isStandalone",{get:function(){return!1},enumerable:!1,configurable:!0}),TableRow.styleProperty=new card_elements_1.ContainerStyleProperty(serialization_1.Versions.v1_5,"style"),TableRow.horizontalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"horizontalCellContentAlignment",enums_1.HorizontalAlignment),TableRow.verticalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"verticalCellContentAlignment",enums_1.VerticalAlignment),__decorate([serialization_1.property(TableRow.horizontalCellContentAlignmentProperty)],TableRow.prototype,"horizontalCellContentAlignment",void 0),__decorate([serialization_1.property(TableRow.verticalCellContentAlignmentProperty)],TableRow.prototype,"verticalCellContentAlignment",void 0),TableRow}(StylableContainer);exports.TableRow=TableRow;var Table=function(_super){function Table(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._columns=[],_this.firstRowAsHeaders=!0,_this.showGridLines=!0,_this}return __extends(Table,_super),Object.defineProperty(Table.prototype,"gridStyle",{get:function(){var style=this.getValue(Table.gridStyleProperty);if(style&&this.hostConfig.containerStyles.getStyleByName(style))return style},set:function(value){this.setValue(Table.gridStyleProperty,value)},enumerable:!1,configurable:!0}),Table.prototype.ensureRowsHaveEnoughCells=function(){for(var i=0;i<this.getItemCount();i++)this.getItemAt(i).ensureHasEnoughCells(this.getColumnCount())},Table.prototype.removeCellsFromColumn=function(columnIndex){for(var i=0;i<this.getItemCount();i++)this.getItemAt(i).removeCellAt(columnIndex)},Table.prototype.getCollectionPropertyName=function(){return"rows"},Table.prototype.createItemInstance=function(typeName){return typeName&&"TableRow"!==typeName?void 0:new TableRow},Table.prototype.internalParse=function(source,context){_super.prototype.internalParse.call(this,source,context),this.ensureRowsHaveEnoughCells()},Table.prototype.internalRender=function(){if(this.getItemCount()>0){for(var totalWeights=0,_i=0,_a=this._columns;_i<_a.length;_i++){(column=_a[_i]).width.unit===enums_1.SizeUnit.Weight&&(totalWeights+=column.width.physicalSize)}for(var _b=0,_c=this._columns;_b<_c.length;_b++){var column;(column=_c[_b]).width.unit===enums_1.SizeUnit.Pixel?column.computedWidth=new shared_1.SizeAndUnit(column.width.physicalSize,enums_1.SizeUnit.Pixel):column.computedWidth=new shared_1.SizeAndUnit(100/totalWeights*column.width.physicalSize,enums_1.SizeUnit.Weight)}var tableElement=document.createElement("div");if(tableElement.setAttribute("role","table"),tableElement.style.display="flex",tableElement.style.flexDirection="column",this.showGridLines){var styleDefinition=this.hostConfig.containerStyles.getStyleByName(this.gridStyle);if(styleDefinition.borderColor){var borderColor=utils_1.stringToCssColor(styleDefinition.borderColor);borderColor&&(tableElement.style.borderTop="1px solid "+borderColor,tableElement.style.borderLeft="1px solid "+borderColor)}}for(var cellSpacing=this.hostConfig.table.cellSpacing,i=0;i<this.getItemCount();i++){var renderedRow=this.getItemAt(i).render();if(renderedRow){if(i>0&&!this.showGridLines&&cellSpacing>0){var separatorRow=document.createElement("div");separatorRow.setAttribute("aria-hidden","true"),separatorRow.style.height=cellSpacing+"px",tableElement.appendChild(separatorRow)}tableElement.appendChild(renderedRow)}}return tableElement}},Table.prototype.addColumn=function(column){this._columns.push(column),this.ensureRowsHaveEnoughCells()},Table.prototype.removeColumn=function(column){var index=this._columns.indexOf(column);index>=0&&(this.removeCellsFromColumn(index),this._columns.splice(index,1))},Table.prototype.getColumnCount=function(){return this._columns.length},Table.prototype.getColumnAt=function(index){return this._columns[index]},Table.prototype.addRow=function(row){this.internalAddItem(row),row.ensureHasEnoughCells(this.getColumnCount())},Table.prototype.getJsonTypeName=function(){return"Table"},Table.columnsProperty=new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_5,"columns",TableColumnDefinition),Table.firstRowAsHeadersProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_5,"firstRowAsHeaders",!0),Table.showGridLinesProperty=new serialization_1.BoolProperty(serialization_1.Versions.v1_5,"showGridLines",!0),Table.gridStyleProperty=new card_elements_1.ContainerStyleProperty(serialization_1.Versions.v1_5,"gridStyle"),Table.horizontalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"horizontalCellContentAlignment",enums_1.HorizontalAlignment),Table.verticalCellContentAlignmentProperty=new serialization_1.EnumProperty(serialization_1.Versions.v1_5,"verticalCellContentAlignment",enums_1.VerticalAlignment),__decorate([serialization_1.property(Table.columnsProperty)],Table.prototype,"_columns",void 0),__decorate([serialization_1.property(Table.firstRowAsHeadersProperty)],Table.prototype,"firstRowAsHeaders",void 0),__decorate([serialization_1.property(Table.showGridLinesProperty)],Table.prototype,"showGridLines",void 0),__decorate([serialization_1.property(Table.gridStyleProperty)],Table.prototype,"gridStyle",null),__decorate([serialization_1.property(Table.horizontalCellContentAlignmentProperty)],Table.prototype,"horizontalCellContentAlignment",void 0),__decorate([serialization_1.property(Table.verticalCellContentAlignmentProperty)],Table.prototype,"verticalCellContentAlignment",void 0),Table}(StylableContainer);exports.Table=Table,registry_1.GlobalRegistry.defaultElements.register("Table",Table,serialization_1.Versions.v1_5)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChannelAdapter=void 0;var ChannelAdapter=function(){};exports.ChannelAdapter=ChannelAdapter},function(module,exports,__webpack_require__){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=this&&this.__generator||function(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdaptiveApplet=void 0;var Enums=__webpack_require__(55),Utils=__webpack_require__(69),shared_1=__webpack_require__(62),activity_request_1=__webpack_require__(170),strings_1=__webpack_require__(80),card_elements_1=__webpack_require__(147),serialization_1=__webpack_require__(70);function logEvent(level,message){for(var optionalParams=[],_i=2;_i<arguments.length;_i++)optionalParams[_i-2]=arguments[_i];if(shared_1.GlobalSettings.applets.logEnabled)if(shared_1.GlobalSettings.applets.onLogEvent)shared_1.GlobalSettings.applets.onLogEvent(level,message,optionalParams);else switch(level){case Enums.LogLevel.Warning:console.warn(message,optionalParams);break;case Enums.LogLevel.Error:console.error(message,optionalParams);break;default:console.log(message,optionalParams)}}var ActivityRequest=function(){function ActivityRequest(action,trigger,consecutiveRefreshes){this.action=action,this.trigger=trigger,this.consecutiveRefreshes=consecutiveRefreshes,this.attemptNumber=0}return ActivityRequest.prototype.retryAsync=function(){return __awaiter(this,void 0,void 0,(function(){return __generator(this,(function(_a){return this.onSend&&this.onSend(this),[2]}))}))},ActivityRequest}(),AdaptiveApplet=function(){function AdaptiveApplet(){this._allowAutomaticCardUpdate=!1,this.renderedElement=document.createElement("div"),this.renderedElement.className="aaf-cardHost",this.renderedElement.style.position="relative",this.renderedElement.style.display="flex",this.renderedElement.style.flexDirection="column",this._cardHostElement=document.createElement("div"),this._refreshButtonHostElement=document.createElement("div"),this._refreshButtonHostElement.className="aaf-refreshButtonHost",this._refreshButtonHostElement.style.display="none",this.renderedElement.appendChild(this._cardHostElement),this.renderedElement.appendChild(this._refreshButtonHostElement)}return AdaptiveApplet.prototype.displayCard=function(card){if(!card.renderedElement)throw new Error("displayCard: undefined card.");Utils.clearElementChildren(this._cardHostElement),this._refreshButtonHostElement.style.display="none",this._cardHostElement.appendChild(card.renderedElement)},AdaptiveApplet.prototype.showManualRefreshButton=function(refreshAction){var _this=this;if(!this.onShowManualRefreshButton||this.onShowManualRefreshButton(this)){this._refreshButtonHostElement.style.display="none";var renderedRefreshButton=void 0;if(this.onRenderManualRefreshButton)renderedRefreshButton=this.onRenderManualRefreshButton(this);else{var message=strings_1.Strings.runtime.refreshThisCard();if(shared_1.GlobalSettings.applets.refresh.mode===Enums.RefreshMode.Automatic){var autoRefreshPausedMessage=strings_1.Strings.runtime.automaticRefreshPaused();" "!==autoRefreshPausedMessage[autoRefreshPausedMessage.length-1]&&(autoRefreshPausedMessage+=" "),message=strings_1.Strings.runtime.clckToRestartAutomaticRefresh()}var cardPayload={type:"AdaptiveCard",version:"1.2",body:[{type:"RichTextBlock",horizontalAlignment:"right",inlines:[{type:"TextRun",text:message,selectAction:{type:"Action.Submit",id:"refreshCard"}}]}]},card=new card_elements_1.AdaptiveCard;card.parse(cardPayload,new card_elements_1.SerializationContext(serialization_1.Versions.v1_2)),card.onExecuteAction=function(action){"refreshCard"===action.id&&(Utils.clearElementChildren(_this._refreshButtonHostElement),_this.internalExecuteAction(refreshAction,activity_request_1.ActivityRequestTrigger.Automatic,0))},renderedRefreshButton=card.render()}renderedRefreshButton&&(Utils.clearElementChildren(this._refreshButtonHostElement),this._refreshButtonHostElement.appendChild(renderedRefreshButton),this._refreshButtonHostElement.style.removeProperty("display"))}},AdaptiveApplet.prototype.createActivityRequest=function(action,trigger,consecutiveRefreshes){var _this=this;if(this.card){var request_1=new ActivityRequest(action,trigger,consecutiveRefreshes);return request_1.onSend=function(sender){sender.attemptNumber++,_this.internalSendActivityRequestAsync(request_1)},!!this.onPrepareActivityRequest&&!this.onPrepareActivityRequest(this,request_1,action)?void 0:request_1}throw new Error("createActivityRequest: no card has been set.")},AdaptiveApplet.prototype.createMagicCodeInputCard=function(attemptNumber){var payload={type:"AdaptiveCard",version:"1.0",body:[{type:"TextBlock",color:"attention",text:1===attemptNumber?void 0:"That didn't work... let's try again.",wrap:!0,horizontalAlignment:"center"},{type:"TextBlock",text:'Please login in the popup. You will obtain a magic code. Paste that code below and select "Submit"',wrap:!0,horizontalAlignment:"center"},{type:"Input.Text",id:"magicCode",placeholder:"Enter magic code"},{type:"ActionSet",horizontalAlignment:"center",actions:[{type:"Action.Submit",id:AdaptiveApplet.submitMagicCodeActionId,title:"Submit"},{type:"Action.Submit",id:AdaptiveApplet.cancelMagicCodeAuthActionId,title:"Cancel"}]}]},card=new card_elements_1.AdaptiveCard;return card.parse(payload),card},AdaptiveApplet.prototype.cancelAutomaticRefresh=function(){this._allowAutomaticCardUpdate&&logEvent(Enums.LogLevel.Warning,"Automatic card refresh has been cancelled as a result of the user interacting with the card."),this._allowAutomaticCardUpdate=!1},AdaptiveApplet.prototype.createSerializationContext=function(){return this.onCreateSerializationContext?this.onCreateSerializationContext(this):new card_elements_1.SerializationContext},AdaptiveApplet.prototype.internalSetCard=function(payload,consecutiveRefreshes){var _this=this;if("object"==typeof payload&&"AdaptiveCard"===payload.type&&(this._cardPayload=payload),this._cardPayload)try{var card=new card_elements_1.AdaptiveCard;this.hostConfig&&(card.hostConfig=this.hostConfig);var serializationContext=this.createSerializationContext();if(card.parse(this._cardPayload,serializationContext),(!this.onCardChanging||this.onCardChanging(this,this._cardPayload))&&(this._card=card,this._card.authentication&&this._card.authentication.tokenExchangeResource&&this.onPrefetchSSOToken&&this.onPrefetchSSOToken(this,this._card.authentication.tokenExchangeResource),this._card.onExecuteAction=function(action){_this.cancelAutomaticRefresh(),_this.internalExecuteAction(action,activity_request_1.ActivityRequestTrigger.Manual,0)},this._card.onInputValueChanged=function(input){_this.cancelAutomaticRefresh()},this._card.render(),this._card.renderedElement&&(this.displayCard(this._card),this.onCardChanged&&this.onCardChanged(this),this._card.refresh)))if(shared_1.GlobalSettings.applets.refresh.mode===Enums.RefreshMode.Automatic&&consecutiveRefreshes<shared_1.GlobalSettings.applets.refresh.maximumConsecutiveAutomaticRefreshes)if(shared_1.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes<=0)logEvent(Enums.LogLevel.Info,"Triggering automatic card refresh number "+(consecutiveRefreshes+1)),this.internalExecuteAction(this._card.refresh.action,activity_request_1.ActivityRequestTrigger.Automatic,consecutiveRefreshes+1);else{logEvent(Enums.LogLevel.Info,"Scheduling automatic card refresh number "+(consecutiveRefreshes+1)+" in "+shared_1.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes+"ms");var action_1=this._card.refresh.action;this._allowAutomaticCardUpdate=!0,window.setTimeout((function(){_this._allowAutomaticCardUpdate&&_this.internalExecuteAction(action_1,activity_request_1.ActivityRequestTrigger.Automatic,consecutiveRefreshes+1)}),shared_1.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes)}else shared_1.GlobalSettings.applets.refresh.mode!==Enums.RefreshMode.Disabled&&(logEvent(Enums.LogLevel.Warning,consecutiveRefreshes>0?"Stopping automatic refreshes after "+consecutiveRefreshes+" consecutive refreshes.":"The card has a refresh section, but automatic refreshes are disabled."),(shared_1.GlobalSettings.applets.refresh.allowManualRefreshesAfterAutomaticRefreshes||shared_1.GlobalSettings.applets.refresh.mode===Enums.RefreshMode.Manual)&&(logEvent(Enums.LogLevel.Info,"Showing manual refresh button."),this.showManualRefreshButton(this._card.refresh.action)))}catch(error){logEvent(Enums.LogLevel.Error,"setCard: "+error)}},AdaptiveApplet.prototype.internalExecuteAction=function(action,trigger,consecutiveRefreshes){if(action instanceof card_elements_1.ExecuteAction){if(!this.channelAdapter)throw new Error("internalExecuteAction: No channel adapter set.");var request=this.createActivityRequest(action,trigger,consecutiveRefreshes);request&&request.retryAsync()}this.onAction&&this.onAction(this,action)},AdaptiveApplet.prototype.createProgressOverlay=function(request){if(!this._progressOverlay)if(this.onCreateProgressOverlay)this._progressOverlay=this.onCreateProgressOverlay(this,request);else{this._progressOverlay=document.createElement("div"),this._progressOverlay.className="aaf-progress-overlay";var spinner=document.createElement("div");spinner.className="aaf-spinner",spinner.style.width="28px",spinner.style.height="28px",this._progressOverlay.appendChild(spinner)}return this._progressOverlay},AdaptiveApplet.prototype.removeProgressOverlay=function(request){this.onRemoveProgressOverlay&&this.onRemoveProgressOverlay(this,request),void 0!==this._progressOverlay&&(this.renderedElement.removeChild(this._progressOverlay),this._progressOverlay=void 0)},AdaptiveApplet.prototype.activityRequestSucceeded=function(response,parsedContent){this.onActivityRequestSucceeded&&this.onActivityRequestSucceeded(this,response,parsedContent)},AdaptiveApplet.prototype.activityRequestFailed=function(response){return this.onActivityRequestFailed?this.onActivityRequestFailed(this,response):shared_1.GlobalSettings.applets.defaultTimeBetweenRetryAttempts},AdaptiveApplet.prototype.showAuthCodeInputDialog=function(request){var _this=this;if(!this.onShowAuthCodeInputDialog||this.onShowAuthCodeInputDialog(this,request)){var authCodeInputCard=this.createMagicCodeInputCard(request.attemptNumber);authCodeInputCard.render(),authCodeInputCard.onExecuteAction=function(submitMagicCodeAction){if(_this.card&&submitMagicCodeAction instanceof card_elements_1.SubmitAction)switch(submitMagicCodeAction.id){case AdaptiveApplet.submitMagicCodeActionId:var authCode=void 0;submitMagicCodeAction.data&&"string"==typeof submitMagicCodeAction.data.magicCode&&(authCode=submitMagicCodeAction.data.magicCode),authCode?(_this.displayCard(_this.card),request.authCode=authCode,request.retryAsync()):alert("Please enter the magic code you received.");break;case AdaptiveApplet.cancelMagicCodeAuthActionId:logEvent(Enums.LogLevel.Warning,"Authentication cancelled by user."),_this.displayCard(_this.card);break;default:logEvent(Enums.LogLevel.Error,"Unespected action taken from magic code input card (id = "+submitMagicCodeAction.id+")"),alert(strings_1.Strings.magicCodeInputCard.somethingWentWrong())}},this.displayCard(authCodeInputCard)}},AdaptiveApplet.prototype.internalSendActivityRequestAsync=function(request){return __awaiter(this,void 0,void 0,(function(){var overlay,done,_loop_1,this_1;return __generator(this,(function(_a){switch(_a.label){case 0:if(!this.channelAdapter)throw new Error("internalSendActivityRequestAsync: channelAdapter is not set.");void 0!==(overlay=this.createProgressOverlay(request))&&this.renderedElement.appendChild(overlay),done=!1,_loop_1=function(){var response,error_1,parsedContent,retryIn_1,attemptOAuth,left,top_1;return __generator(this,(function(_b){switch(_b.label){case 0:response=void 0,1===request.attemptNumber?logEvent(Enums.LogLevel.Info,"Sending activity request to channel (attempt "+request.attemptNumber+")"):logEvent(Enums.LogLevel.Info,"Re-sending activity request to channel (attempt "+request.attemptNumber+")"),_b.label=1;case 1:return _b.trys.push([1,3,,4]),[4,this_1.channelAdapter.sendRequestAsync(request)];case 2:return response=_b.sent(),[3,4];case 3:return error_1=_b.sent(),logEvent(Enums.LogLevel.Error,"Activity request failed: "+error_1),this_1.removeProgressOverlay(request),done=!0,[3,4];case 4:if(!response)return[3,10];if(!(response instanceof activity_request_1.SuccessResponse))return[3,5];if(this_1.removeProgressOverlay(request),void 0===response.rawContent)throw new Error("internalSendActivityRequestAsync: Action.Execute result is undefined");parsedContent=response.rawContent;try{parsedContent=JSON.parse(response.rawContent)}catch(_c){}if("string"==typeof parsedContent)logEvent(Enums.LogLevel.Info,"The activity request returned a string after "+request.attemptNumber+" attempt(s)."),this_1.activityRequestSucceeded(response,parsedContent);else{if("object"!=typeof parsedContent||"AdaptiveCard"!==parsedContent.type)throw new Error("internalSendActivityRequestAsync: Action.Execute result is of unsupported type ("+typeof response.rawContent+")");logEvent(Enums.LogLevel.Info,"The activity request returned an Adaptive Card after "+request.attemptNumber+" attempt(s)."),this_1.internalSetCard(parsedContent,request.consecutiveRefreshes),this_1.activityRequestSucceeded(response,this_1.card)}return done=!0,[3,10];case 5:return response instanceof activity_request_1.ErrorResponse?(retryIn_1=this_1.activityRequestFailed(response))>=0&&request.attemptNumber<shared_1.GlobalSettings.applets.maximumRetryAttempts?(logEvent(Enums.LogLevel.Warning,"Activity request failed: "+response.error.message+". Retrying in "+retryIn_1+"ms"),request.attemptNumber++,[4,new Promise((function(resolve,reject){window.setTimeout((function(){resolve()}),retryIn_1)}))]):[3,7]:[3,9];case 6:return _b.sent(),[3,8];case 7:logEvent(Enums.LogLevel.Error,"Activity request failed: "+response.error.message+". Giving up after "+request.attemptNumber+" attempt(s)"),this_1.removeProgressOverlay(request),done=!0,_b.label=8;case 8:return[3,10];case 9:if(response instanceof activity_request_1.LoginRequestResponse){if(logEvent(Enums.LogLevel.Info,"The activity request returned a LoginRequestResponse after "+request.attemptNumber+" attempt(s)."),request.attemptNumber<=shared_1.GlobalSettings.applets.maximumRetryAttempts){if(attemptOAuth=!0,response.tokenExchangeResource&&this_1.onSSOTokenNeeded&&(attemptOAuth=!this_1.onSSOTokenNeeded(this_1,request,response.tokenExchangeResource)),attemptOAuth){if(this_1.removeProgressOverlay(request),void 0===response.signinButton)throw new Error("internalSendActivityRequestAsync: the login request doesn't contain a valid signin URL.");logEvent(Enums.LogLevel.Info,"Login required at "+response.signinButton.value),this_1.onShowSigninPrompt?this_1.onShowSigninPrompt(this_1,request,response.signinButton):(this_1.showAuthCodeInputDialog(request),left=window.screenX+(window.outerWidth-shared_1.GlobalSettings.applets.authPromptWidth)/2,top_1=window.screenY+(window.outerHeight-shared_1.GlobalSettings.applets.authPromptHeight)/2,window.open(response.signinButton.value,response.signinButton.title?response.signinButton.title:"Sign in","width="+shared_1.GlobalSettings.applets.authPromptWidth+",height="+shared_1.GlobalSettings.applets.authPromptHeight+",left="+left+",top="+top_1))}}else logEvent(Enums.LogLevel.Error,"Authentication failed. Giving up after "+request.attemptNumber+" attempt(s)"),alert(strings_1.Strings.magicCodeInputCard.authenticationFailed());return[2,"break"]}throw new Error("Unhandled response type: "+response.toString());case 10:return[2]}}))},this_1=this,_a.label=1;case 1:return done?[3,3]:[5,_loop_1()];case 2:return"break"===_a.sent()?[3,3]:[3,1];case 3:return[2]}}))}))},AdaptiveApplet.prototype.refreshCard=function(){this._card&&this._card.refresh&&this.internalExecuteAction(this._card.refresh.action,activity_request_1.ActivityRequestTrigger.Manual,0)},AdaptiveApplet.prototype.setCard=function(payload){this.internalSetCard(payload,0)},Object.defineProperty(AdaptiveApplet.prototype,"card",{get:function(){return this._card},enumerable:!1,configurable:!0}),AdaptiveApplet.submitMagicCodeActionId="submitMagicCode",AdaptiveApplet.cancelMagicCodeAuthActionId="cancelMagicCodeAuth",AdaptiveApplet}();exports.AdaptiveApplet=AdaptiveApplet},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7),conversation_model_1=__webpack_require__(96),webConferenceV2_service_1=__webpack_require__(97),contact_service_1=__webpack_require__(6),logger_service_1=__webpack_require__(4),xmpp_service_1=__webpack_require__(9);class SpeechRecognitionMessage{constructor(){this.timeout=null,this.user=null,this.service=null}static create(id,text,user,service){const message=new SpeechRecognitionMessage;return message.id=id,message.user=user,message.service=service,message.update(text),message}update(text){this.text=text,clearTimeout(this.timeout),this.timeout=setTimeout(()=>{const messages=this.service.speechRecognitionMessages.value,index=messages.findIndex(message=>message.id===this.id);messages.splice(index,1),this.service.speechRecognitionMessages.next(messages)},5e3)}}exports.SpeechRecognitionMessage=SpeechRecognitionMessage;class SpeechRecognitionModelInfo{constructor(name,lang,url,bufferSize){this.name=name,this.lang=lang,this.url=url,this.bufferSize=bufferSize,this._selected=!1}static create(name,lang,url,bufferSize=4096){return new SpeechRecognitionModelInfo(name,lang,url,bufferSize)}}exports.SpeechRecognitionModelInfo=SpeechRecognitionModelInfo;class SpeechRecognitionModel{constructor(name,modelsInfo){this.name=name,this.modelsInfo=modelsInfo}static create(name,modelsInfo){return new SpeechRecognitionModel(name,modelsInfo)}}exports.SpeechRecognitionModel=SpeechRecognitionModel;class SpeechRecognitionTranscription{constructor(){this.messages=[]}reset(){this.messages=[]}static create(){return new SpeechRecognitionTranscription}addMessage(user,text){this.messages.push({timestamp:new Date,user:user,text:text})}}exports.SpeechRecognitionTranscription=SpeechRecognitionTranscription;class SpeechRecognitionService{constructor(){this.stream=null,this.websocket=null,this.audioContext=null,this.logger=logger_service_1.LoggerService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.webConferenceService=webConferenceV2_service_1.WebConferenceServiceV2.getInstance(),this.roomJid=null,this.models=[],this.currentModel=null,this.xmppHandler=null,this.subscription=null,this.type=null,this.transcriptionOn=!1,this.started=!1,this.speechRecognitionMessages=new rxjs_1.BehaviorSubject([]),this.transcription=new rxjs_1.BehaviorSubject(SpeechRecognitionTranscription.create()),this.xmppService.connected&&this.subscribeToASRMessages(),this.xmppService.subscribeToConnectionEvents(event=>{"ON_XMPP_CONNECTED"===event.name&&this.subscribeToASRMessages(),"ON_XMPP_DISCONNECTED"===event.name&&event.data.reason})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.SpeechRecognitionService||(win.rainbow.SpeechRecognitionService=new SpeechRecognitionService),win.rainbow.SpeechRecognitionService}async init(type,stream,roomJid,modelInfo){try{const bufferSize=modelInfo?modelInfo.bufferSize:4096;this.logger.info(`[SpeechRecognitionService] init ${type} -- ${roomJid} -- bufferSize : ${bufferSize}`),this.type=type,this.roomJid=roomJid,await this.getModels(),await this.createWebSocket(),this.stream=stream,this.audioContext=new AudioContext({sampleRate:16e3});const audioInput=this.audioContext.createMediaStreamSource(stream),recorder=this.audioContext.createScriptProcessor(bufferSize,1,1);recorder.onaudioprocess=event=>{this.recorderProcess(event)},audioInput.connect(recorder),recorder.connect(this.audioContext.destination),"room"===type&&(this.subscription=this.webConferenceService.subscribe(event=>{if(event.name===this.webConferenceService.RAINBOW_ONWEBCONFERENCESTATUSUPDATED){const webConferenceSession=this.webConferenceService.getWebConferenceSessionById(event.data.roomDbId);webConferenceSession&&webConferenceSession.subtitlesEnable&&"ended"===event.data.status&&this.stop()}})),this.started=!0}catch(error){throw this.logger.error("[SpeechRecognitionService] init -- FAILURE -- "+error.message),new Error(error.message)}}stop(){this.started&&(this.logger.info("[SpeechRecognitionService] stop"),this.audioContext.close(),this.websocket.send('{"eof": 1}'),this.started=!1),this.subscription&&this.subscription.unsubscribe()}startTranscription(){this.transcriptionOn=!0,this.transcription.value.reset()}stopTranscription(){return this.transcriptionOn=!1,this.transcription.value}async getModels(){return 0===this.models.length&&await this.getModelsFromServer(),this.models}getCurrentModel(){return this.currentModel}async getModelsFromServer(){const frenchModels=[SpeechRecognitionModelInfo.create("Model Vosk","french","wss://demo.openrainbow.org:666/asr-ws/fr-vosk",8192),SpeechRecognitionModelInfo.create("Model Linto","french","wss://demo.openrainbow.org:666/asr-ws/fr"),SpeechRecognitionModelInfo.create("Model ALE","french","wss://demo.openrainbow.org:666/asr-ws/fr-ale")],englishModels=[SpeechRecognitionModelInfo.create("Model Danzu old","english","wss://demo.openrainbow.org:666/asr-ws/en-nn"),SpeechRecognitionModelInfo.create("Model Linto","english","wss://demo.openrainbow.org:666/asr-ws/en"),SpeechRecognitionModelInfo.create("Model Vosk 21","english","wss://demo.openrainbow.org:666/asr-ws/en-vosk-21",8192),SpeechRecognitionModelInfo.create("Model Vosk 22","english","wss://demo.openrainbow.org:666/asr-ws/en-vosk-22",8192),SpeechRecognitionModelInfo.create("Model Vosk Aspire","english","wss://demo.openrainbow.org:666/asr-ws/en-vosk-aspire",8192)],germanModels=[SpeechRecognitionModelInfo.create("Model Vosk","german","wss://demo.openrainbow.org:666/asr-ws/de-vosk",8192)],russianModels=[SpeechRecognitionModelInfo.create("Model Vosk","russian","wss://demo.openrainbow.org:666/asr-ws/ru-vosk",8192)];this.models.push(SpeechRecognitionModel.create("subtitleFrench",frenchModels)),this.models.push(SpeechRecognitionModel.create("subtitleEnglish",englishModels)),this.models.push(SpeechRecognitionModel.create("subtitleGerman",germanModels)),this.models.push(SpeechRecognitionModel.create("subtitleRussian",russianModels)),this.currentModel=this.models[0].modelsInfo[1],this.currentModel._selected=!0,this.logger.info(`[SpeechRecognitionService] getModelsFromServer -- SUCCESS -- current model : ${this.currentModel.lang} - ${this.currentModel.name} - ${this.currentModel.url}`)}async setModel(modelInfo){this.logger.info(`[SpeechRecognitionService] setModel ${modelInfo.lang} - ${modelInfo.name} - ${modelInfo.url}`),this.currentModel=modelInfo,this.started&&(this.stop(),await this.init(this.type,this.stream,this.roomJid,modelInfo))}createWebSocket(){return new Promise((resolve,reject)=>{this.logger.info(`[SpeechRecognitionService] createWebSocket -- ${this.currentModel.lang} -- ${this.currentModel.name} -- ${this.currentModel.url}`),this.websocket=new WebSocket(this.currentModel.url),this.websocket.onopen=()=>{this.logger.info(`[SpeechRecognitionService] createWebSocket -- ${this.currentModel.lang} -- ${this.currentModel.name} -- ${this.currentModel.url} -- SUCCESS`),this.websocket.send('{"config": {"sample_rate":16000 }}'),resolve()},this.websocket.onerror=()=>{this.websocket.close(),reject(new Error("websocket error"))},this.websocket.onclose=()=>{this.logger.info("[SpeechRecognitionService] webSocket is closed")},this.websocket.onmessage=async event=>{const data=JSON.parse(event.data);if(data.partial||data.text){const text=data.text?data.text:data.partial,partial=!data.text;if(text.charAt(0).toUpperCase(),this.roomJid){const id=conversation_model_1.Conversation.getUniqueMessageId(),message=$msg({id:id,from:this.xmppService.jid,to:this.roomJid,type:"groupchat"});message.c("asr",{xmlns:"http://jabber.org/asr",text:text,partial:partial,userId:this.contactService.userContact.dbId}),await this.xmppService.send(message)}}else data.eod&&this.websocket.close()}})}recorderProcess(event){const data=event.inputBuffer.getChannelData(0);this.websocket.send(this.convertFloat32ToInt16(data))}convertFloat32ToInt16(data){let lenght=data.length;const buf=new Int16Array(lenght);for(;lenght--;)buf[lenght]=32767*Math.min(1,data[lenght]);return buf.buffer}onSpeechMessage(stanza){try{const asrElem=$(stanza).find("asr");if(asrElem.length>0){const messages=this.speechRecognitionMessages.value,id=asrElem.attr("userId"),text=asrElem.attr("text"),partial="true"===asrElem.attr("partial"),index=messages.findIndex(message=>message.id===id);let user=null;-1!==index?(messages[index].text=text,user=messages[index].user):(user=this.contactService.getContactById(id),messages.push(SpeechRecognitionMessage.create(id,text,user,this))),this.speechRecognitionMessages.next(messages),this.transcriptionOn&&!partial&&(this.transcription.value.addMessage(user,text),this.transcription.next(this.transcription.value))}return!0}catch(error){return this.logger.error("[speechRecognitionService] onSpeechMessage error "+error),!0}}subscribeToASRMessages(){this.logger.info("[SpeechRecognitionService] - subscribeToASRMessages"),this.xmppHandler&&(this.xmppService.connection.deleteHandler(this.xmppHandler),this.xmppHandler=null),this.xmppHandler=this.xmppService.connection.addHandler(stanza=>this.onSpeechMessage(stanza),"http://jabber.org/asr","message")}}exports.SpeechRecognitionService=SpeechRecognitionService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class WebConferenceSession{constructor(id,room){this.hasLocalSharing=!1,this.talkingTimeStats={},this.talker=null,this.isMyConference=!1,this.dynamicFeedSession=null,this.lastTalker=null,this.record={isRecording:!1,recordingIsPaused:!1},this.recordingStarted=!1,this.recordingUserId="",this.currentRecordingState="",this.noAudio=!1,this.gridServiceSubscription=null,this.type="v2",this.haveJoined=!1,this.isInExternalWindow=!1,this.isOnlySharingWindow=!1,this.autoPopoutSharingWindow=!1,this.control={activeControl:!1,hasRemoteControlling:!1,controller:null,controlled:null},this.conferenceLayoutSize={},this.subtitlesEnable=!1,this.dimLocalSharingScreen=!0,this.originalVideoStream=null,this.networkQuality=0,this.services=[],this.subscribedToGridService=!1,this.dynamicFeedSubscriptionInProgress=!1,this.id=id,this.room=room,this.duration=0,this.participants=[],this.conferenceView="grid_view",this.haveJoined=!1,this.isMyConference=!1,this.pinnedParticipant=null,this.locked=!1,this.localStreams=[]}static create(id,room){return new WebConferenceSession(id,room)}getParticipants(){return this.participants}getLocalParticipant(){return this.localParticipant}getRoom(){return this.room}getAudioSession(){return this.audioSession}getSharingParticipant(){return this.sharingParticipant}getRemoteSharingParticipant(){return this.sharingParticipant&&!this.hasLocalSharing?this.sharingParticipant:null}getLocalSharingSession(){return this.localSharingSession}getSharingSession(){return this.localSharingSession?this.localSharingSession:this.getRemoteSharingSession()}getRemoteSharingSession(){return this.sharingParticipant&&!this.hasLocalSharing?this.sharingParticipant.videoSession:null}getParticipantById(id){if(this.localParticipant.id===id)return this.localParticipant;return this.participants.find(part=>part.id===id)}findParticipantByContactDbId(id){if(this.localParticipant&&this.localParticipant.contact.dbId===id)return this.localParticipant;return this.participants.find(part=>part.contact&&part.contact.dbId===id)}isLocked(){return this.locked}getParticipantsListWithDelegateCapability(){return this.participants.filter(participant=>participant.delegateCapability)}addOrUpdateService(serviceId,serviceName){this.services||(this.services=[]);-1!==this.services.findIndex(service=>service.id===serviceId)||this.services.push({id:serviceId,name:serviceName})}addOrUpdateParticipant(participant){if(this.localParticipant&&this.localParticipant.id===participant.id)return this.localParticipant.mute=participant.mute,void(this.localParticipant.noMicrophone=participant.noMicrophone);const participantIndex=this.participants.findIndex(part=>part.id===participant.id);if(-1!==participantIndex){const existingParticipant=this.participants[participantIndex];existingParticipant.mute=participant.mute,existingParticipant.noMicrophone=participant.noMicrophone}else this.participants.push(participant)}updateTalkingTimeForParticipant(id,talkingTime){this.talkingTimeStats[id]||(this.talkingTimeStats[id]={talkingTime:talkingTime}),this.talkingTimeStats[id].talkingTime=talkingTime}startDuration(){this.durationTimer||(this.durationTimer=setInterval(()=>{this.duration++},1e3))}stopDuration(){this.durationTimer&&(clearInterval(this.durationTimer),this.durationTimer=null,this.duration=0)}getPinnedParticipant(){if(this.pinnedParticipant){this.getParticipantByIdAndMediaType(this.pinnedParticipant.id,this.pinnedParticipant.mediaType)||(this.pinnedParticipant=null)}return this.pinnedParticipant}updatePinnedParticipant(participant=null,mediaType=""){this.pinnedParticipant=participant?{id:participant.id,mediaType:mediaType}:null}setLocked(lock=!1){this.locked=lock}setSharingParticipant(participant=null){!participant&&this.sharingParticipant.videoSession&&(this.sharingParticipant.videoSession.terminate(),this.sharingParticipant.videoSession=null),this.sharingParticipant=participant}getParticipantByIdAndMediaType(id,mediaType){if("sharing"===mediaType){if(this.localParticipant.id===id)return this.hasLocalSharing?this.localParticipant:null;if(this.sharingParticipant&&this.sharingParticipant.id===id)return this.sharingParticipant}else{if(this.localParticipant.id===id)return this.localParticipant.videoSession?this.localParticipant:null;const participant=this.participants.find(part=>part.id===id);if(participant&&participant.videoSession)return participant}return null}}exports.WebConferenceSession=WebConferenceSession},function(module,exports,__webpack_require__){var _nodeId,_clockseq,rng=__webpack_require__(172),bytesToUuid=__webpack_require__(173),_lastMSecs=0,_lastNSecs=0;module.exports=function(options,buf,offset){var i=buf&&offset||0,b=buf||[],node=(options=options||{}).node||_nodeId,clockseq=void 0!==options.clockseq?options.clockseq:_clockseq;if(null==node||null==clockseq){var seedBytes=rng();null==node&&(node=_nodeId=[1|seedBytes[0],seedBytes[1],seedBytes[2],seedBytes[3],seedBytes[4],seedBytes[5]]),null==clockseq&&(clockseq=_clockseq=16383&(seedBytes[6]<<8|seedBytes[7]))}var msecs=void 0!==options.msecs?options.msecs:(new Date).getTime(),nsecs=void 0!==options.nsecs?options.nsecs:_lastNSecs+1,dt=msecs-_lastMSecs+(nsecs-_lastNSecs)/1e4;if(dt<0&&void 0===options.clockseq&&(clockseq=clockseq+1&16383),(dt<0||msecs>_lastMSecs)&&void 0===options.nsecs&&(nsecs=0),nsecs>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");_lastMSecs=msecs,_lastNSecs=nsecs,_clockseq=clockseq;var tl=(1e4*(268435455&(msecs+=122192928e5))+nsecs)%4294967296;b[i++]=tl>>>24&255,b[i++]=tl>>>16&255,b[i++]=tl>>>8&255,b[i++]=255&tl;var tmh=msecs/4294967296*1e4&268435455;b[i++]=tmh>>>8&255,b[i++]=255&tmh,b[i++]=tmh>>>24&15|16,b[i++]=tmh>>>16&255,b[i++]=clockseq>>>8|128,b[i++]=255&clockseq;for(var n=0;n<6;++n)b[i+n]=node[n];return buf||bytesToUuid(b)}},function(module,exports,__webpack_require__){var rng=__webpack_require__(172),bytesToUuid=__webpack_require__(173);module.exports=function(options,buf,offset){var i=buf&&offset||0;"string"==typeof options&&(buf="binary"===options?new Array(16):null,options=null);var rnds=(options=options||{}).random||(options.rng||rng)();if(rnds[6]=15&rnds[6]|64,rnds[8]=63&rnds[8]|128,buf)for(var ii=0;ii<16;++ii)buf[i+ii]=rnds[ii];return buf||bytesToUuid(rnds)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class WebConferenceParticipant{constructor(id){this.currentPstnState="",this.isPinned=!1,this.id=id,this.subscriptionInProgress=!1,this.mute=!1,this.noMicrophone=!1,this.isVideoAvailable=!1,this.delegateCapability=!1,this.videoSession=null,this.isSharingParticipant=!1}static create(id){return new WebConferenceParticipant(id)}}exports.WebConferenceParticipant=WebConferenceParticipant},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const event_service_1=__webpack_require__(11),logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),xmpp_service_1=__webpack_require__(9);exports.WebConferenceHelper=class{constructor(webConferenceService){this.webConferenceService=webConferenceService,this.eventService=event_service_1.EventService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.configuration={dynamicFeed:!0,limitVideoSubscriptions:0,disableAutoSubscriptions:!1}}start(){this.attachHandlers()}stop(){this.subscription&&(this.subscription.unsubscribe(),this.subscription=null)}setConfiguration(disableDynamicFeed=!1,disableAutoSubscriptions=!1,limitVideoSubscriptions=0){this.logger.info(`[webConferenceHelper] setConfiguration new configuration disableDynamicFeed -- ${disableDynamicFeed}, disableAutoSubscriptions -- ${disableAutoSubscriptions}`),this.configuration.dynamicFeed=!disableDynamicFeed,this.configuration.limitVideoSubscriptions=limitVideoSubscriptions,this.configuration.disableAutoSubscriptions=disableAutoSubscriptions}async updateSubstreamLevelForParticipantBasedOnVideoSize(conferenceId,publisher,width){try{const webConferenceSession=this.webConferenceService.getWebConferenceSessionById(conferenceId);if(!webConferenceSession||!publisher||!width)throw new Error("[WebConferenceHelper] updateSubstreamLevelForParticipantBasedOnVideoSize -- missing parameters");let subStreamLevel=1;if(width>=854&&(subStreamLevel=2),width<=320&&(subStreamLevel=0),subStreamLevel!==publisher.subStreamLevel){publisher.subStreamLevel=subStreamLevel,this.logger.info(`[webConferenceHelper] updateSubstreamLevelForParticipantBasedOnVideoSize -- ${conferenceId} -- ${publisher.id} -- ${subStreamLevel}`);const params={option:"update",subStreamLevel:subStreamLevel,publisherId:publisher.id},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${webConferenceSession.localParticipant.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateSubstreamLevelForParticipantBasedOnVideoSize");throw this.logger.error(errorInfo.message),errorInfo.error}}async updateParticipantBasedOnPacketLostQualityLimitation(webConferenceSession,publisher,decreaseQuality,session){try{if(!webConferenceSession||!publisher)throw new Error("[WebConferenceHelper] updateParticipantBasedOnPacketLostQualityLimitation -- missing parameters");let newSubStreamLevel=publisher.subStreamLevel,newTemporalLevel=publisher.temporalLevel;if(decreaseQuality?(session.qualityLimitation=!0,2===publisher.subStreamLevel||1===publisher.subStreamLevel&&0===publisher.temporalLevel?(newSubStreamLevel=publisher.subStreamLevel-1,newTemporalLevel=2):(0===publisher.subStreamLevel||1===publisher.subStreamLevel&&2===publisher.temporalLevel)&&(newTemporalLevel=0)):0===publisher.subStreamLevel&&0===publisher.temporalLevel?newTemporalLevel=2:0===publisher.subStreamLevel&&2===publisher.temporalLevel?(newSubStreamLevel=1,newTemporalLevel=2):1===publisher.subStreamLevel&&0===publisher.temporalLevel?(newTemporalLevel=2,session.qualityLimitation=!1):session.qualityLimitation=!1,newSubStreamLevel!==publisher.subStreamLevel||newTemporalLevel!==publisher.temporalLevel){this.logger.info(`[webConferenceHelper] updateParticipantBasedOnPacketLostQualityLimitation -- ${webConferenceSession.id} -- ${publisher.id} -- ${newSubStreamLevel} -- ${newTemporalLevel}`);const params={option:"update",subStreamLevel:newSubStreamLevel,publisherId:publisher.id,temporalLevel:newTemporalLevel},body=JSON.stringify(params),url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${webConferenceSession.id}/users/${webConferenceSession.localParticipant.id}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;publisher.subStreamLevel=newSubStreamLevel,publisher.temporalLevel=newTemporalLevel}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateParticipantBasedOnPacketLostQualityLimitation");throw this.logger.error(errorInfo.message),errorInfo.error}}attachHandlers(){this.subscription=this.webConferenceService.subscribe(event=>{try{event.name===this.webConferenceService.RAINBOW_ONWEBCONFERENCELOCKSTATEUPDATED?this.eventService.publish("ON_CONFERENCE_LOCKED_EVENT",event.data.isLock,event.data.lockedBy):event.name===this.webConferenceService.RAINBOW_ONWEBCONFERENCEPUBLISHERSADDED?this.subscribeToNewPublishers(event.data.roomDbId):event.name===this.webConferenceService.RAINBOW_ONWEBCONFERENCESERVICEUPDATE&&this.subscribeToNewServices(event.data.roomDbId)}catch(_err){}})}subscribeToNewPublishers(confId){const conferenceSession=this.webConferenceService.getWebConferenceSessionById(confId),subscriptionWaitingQueue=[];if(conferenceSession&&conferenceSession.participants.length){if(!this.configuration.dynamicFeed||conferenceSession.dynamicFeedSession||conferenceSession.dynamicFeedSubscriptionInProgress||this.webConferenceService.subscribeToDynamicFeed(conferenceSession),this.configuration.disableAutoSubscriptions)return;conferenceSession.participants.forEach(participant=>{!participant.isVideoAvailable||participant.subscriptionInProgress||participant.videoSession||subscriptionWaitingQueue.push(participant)})}subscriptionWaitingQueue.length&&this.subscribeToPublishersByParts(conferenceSession,subscriptionWaitingQueue)}async subscribeToPublishersByParts(conferenceSession,waitingList,size=12){const subscriptionPromises=[];for(let i=0;i<size;i++)if(waitingList[0]){const participant=waitingList.shift();!participant.isVideoAvailable||participant.subscriptionInProgress||participant.videoSession||subscriptionPromises.push(this.webConferenceService.subscribeToParticipantVideo(conferenceSession,participant))}subscriptionPromises.length&&(await Promise.all(subscriptionPromises),waitingList.length&&this.subscribeToPublishersByParts(conferenceSession,waitingList))}subscribeToNewServices(confId){const conferenceSession=this.webConferenceService.getWebConferenceSessionById(confId);conferenceSession&&conferenceSession.services.length&&!conferenceSession.subscribedToGridService&&conferenceSession.services.forEach(service=>{"video-compositor"===service.name&&this.webConferenceService.subscribeToService(conferenceSession,service.id)})}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),event_service_1=__webpack_require__(11),call_model_1=__webpack_require__(29),profile_service_1=__webpack_require__(13),anonymizer_1=__webpack_require__(66),webrtcConfigAndUtils_1=__webpack_require__(44);exports.WebrtcP2PEventHandler=class{constructor(webrtcP2PService){this.webrtcP2PService=webrtcP2PService,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.nameSpace="urn:xmpp:jingle-message:0"}setRemoteTypeMedia(remoteType,call){call.remoteMedia=0;for(let i=0;i<remoteType.length;i++)switch(remoteType[i]){case"audio":call.remoteMedia=call.remoteMedia|call_model_1.Call.Media.AUDIO;break;case"video":call.remoteMedia=call.remoteMedia|call_model_1.Call.Media.VIDEO;break;case"sharing":call.remoteMedia=call.remoteMedia|call_model_1.Call.Media.SHARING;break;default:call.remoteMedia=null}this.logger.debug("[WebrtcP2PEventHandler] REMOTE TYPE || REMOTE MEDIA  "+call.remoteMedia)}setLocalTypeMedia(localType,call){call.localMedia=0;for(let i=0;i<localType.length;i++)switch(localType[i]){case"audio":call.localMedia=call.localMedia|call_model_1.Call.Media.AUDIO;break;case"video":call.localMedia=call.localMedia|call_model_1.Call.Media.VIDEO;break;case"sharing":call.localMedia=call.localMedia|call_model_1.Call.Media.SHARING;break;default:call.localMedia=null}this.logger.debug("[WebrtcP2PEventHandler] LOCAL TYPE || LOCAL MEDIA  "+call.localMedia)}async sendProposition(contact,media,message=""){this.logger.info("[WebrtcP2PEventHandler] | sendProposition to "+JSON.stringify({displayName:contact.nameForLog,resources:contact.resources}));let mediaToGet=["audio"],secondMediaToGet=[];"video"===media?mediaToGet.push("video"):"videoOnly"===media?mediaToGet=["video"]:"sharing"===media?(mediaToGet=["audio"],secondMediaToGet=["sharing"]):"sharingOnly"===media&&(mediaToGet=["sharing"]);const id="web_"+crypto.randomUUID(),call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,contact);let stream,extraStream;try{if(stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet,void 0,void 0,void 0,call),extraStream=await this.webrtcP2PService.getBrowserMedia(secondMediaToGet),this.webrtcP2PService.makingCall&&this.webrtcP2PService.started){this.webrtcP2PService.calls[call.id]=call,call.isInitiator=!0,stream.callId=id;let modifiedStream=stream;-1!==mediaToGet.indexOf("video")&&(call.originalStream=stream,modifiedStream=await this.webrtcP2PService.virtualBackgroundService.startProcessStream(stream)),this.webrtcP2PService.pushInLocalStreams(modifiedStream,id),extraStream&&(extraStream.callId=id,this.webrtcP2PService.pushInLocalStreams(extraStream,id),mediaToGet.push(secondMediaToGet.pop())),this.setLocalTypeMedia(mediaToGet,call);const idPropose="web_"+crypto.randomUUID();let xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:contact.jid,id:idPropose});xmppMessage.c("propose",{xmlns:this.nameSpace,id:id}),message&&xmppMessage.c("subject",{xmlns:"urn:xmpp:jingle-subject:0"}).t(message).up(),xmppMessage.c("description",{xmlns:"urn:xmpp:jingle:apps:rtp:1",media:mediaToGet[0]}).up(),mediaToGet[1]&&(xmppMessage=xmppMessage.c("description",{xmlns:"urn:xmpp:jingle:apps:rtp:1",media:mediaToGet[1]}).up()),xmppMessage=xmppMessage.c("unifiedplan",{xmlns:"urn:xmpp:jingle:apps:jsep:1"}).up(),this.xmppService.send(xmppMessage),this.webrtcP2PService.makingCall=!1,this.contactService.setBusyState("dnd",this.webrtcP2PService.calculatePresenceMessage(call)),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcP2PService.autoreleaseTimeout=setTimeout(()=>{this.logger.info("[WebrtcP2PEventHandler]  | send proposition : no response after 30 seconds : release the call"),call&&this.webrtcP2PService.rejectCall(call)},3e4)}else this.logger.warn("[WebrtcP2PEventHandler] | sendProposition -- call should no longer be made !"),this.webrtcP2PService.makingCall=!1,stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null,extraStream&&(extraStream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),extraStream.stop&&extraStream.stop(),extraStream=null)}catch(error){throw this.logger.info("[WebrtcP2PEventHandler]   | sendProposition failure : "+JSON.stringify({error:error.message})),this.webrtcP2PService.makingCall=!1,-1===secondMediaToGet.indexOf("sharing")&&-1!==error.toString().indexOf("getUserMedia")&&this.webrtcP2PService.openErrorPopup(),this.webrtcP2PService.removeCallObject(call),this.webrtcP2PService.isUserContactInCall()||this.webrtcP2PService.resetToSafeState(),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),stream&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null),error}}retractProposition(call){this.logger.info("[WebrtcP2PEventHandler]   | retractProposition for call "+call.id);const idRetract="web_"+crypto.randomUUID(),xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:call.contact.jid,id:idRetract}).c("retract",{xmlns:this.nameSpace,id:call.id});this.xmppService.send(xmppMessage),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.webrtcP2PService.removeCallObject(call)}acceptProposition(call,type){if(call.status===call_model_1.Call.Status.ANSWERING)return void this.logger.warn("[WebrtcP2PEventHandler] | acceptProposition for call "+call.id+" -- ignored! Already answering");this.logger.info("[WebrtcP2PEventHandler] | acceptProposition for call "+call.id),call.status=call_model_1.Call.Status.ANSWERING;const idAccept="web_"+crypto.randomUUID();let xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:this.contactService.userContact.jid,id:idAccept}).c("accept",{xmlns:this.nameSpace,id:call.id});this.xmppService.send(xmppMessage);const idProceed="web_"+crypto.randomUUID();xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:call.fullJid,id:idProceed}).c("proceed",{xmlns:this.nameSpace,id:call.id}),xmppMessage=xmppMessage.c("unifiedplan",{xmlns:"urn:xmpp:jingle:apps:jsep:1"}).up(),this.xmppService.send(xmppMessage);let mediaToGet=["audio"];type&&"video"===type&&mediaToGet.push("video"),call.remoteMedia===call_model_1.Call.Media.VIDEO&&(mediaToGet=["video"]),call.remoteMedia===call_model_1.Call.Media.SHARING&&(mediaToGet=[]),this.setLocalTypeMedia(mediaToGet,call),this.contactService.setBusyState("dnd",this.webrtcP2PService.calculatePresenceMessage(call)),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcP2PService.autoreleaseTimeout=setTimeout(()=>{call&&(null!==call.getMediaPillarCall()?this.logger.warn("[webrtcgateway/WebrtcP2PEventHandler] | acceptProposition autoreleaseTimeout after 45 s : remove the call :"+call.id):this.logger.info("[WebrtcP2PEventHandler] | acceptProposition autoreleaseTimeout after 45 s : remove the call "+call.id),this.webrtcP2PService.removeCallObject(call),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"))},45e3)}rejectProposition(call,__reason){this.logger.info("[WebrtcP2PEventHandler] | rejectProposition for call "+call.id);const idRejectToMe="web_"+crypto.randomUUID();let xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:this.contactService.userContact.jid,id:idRejectToMe}).c("reject",{xmlns:this.nameSpace,id:call.id});this.xmppService.send(xmppMessage);const mediaPillarContext=call.getMediaPillarCall(),otherJid=mediaPillarContext&&mediaPillarContext.getMediaPillarJid()?mediaPillarContext.getMediaPillarJid():call.contact.jid,idRejectToDistant="web_"+crypto.randomUUID();otherJid?(xmppMessage=$msg({from:this.contactService.userContact.fullJid,to:otherJid,id:idRejectToDistant}).c("reject",{xmlns:this.nameSpace,id:call.id,reason:__reason}),this.xmppService.send(xmppMessage)):this.logger.error("[WebrtcP2PEventHandler] | rejectProposition -- missing other JID !"),call&&(call.status=call_model_1.Call.Status.UNKNOWN,delete this.webrtcP2PService.calls[call.id],this.eventService.publish("ON_CALL_UPDATED_EVENT",call)),this.webrtcConfigAndUtils.setWebrtcConfiguration(),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout)}onMessageReceived(stanza){try{const temp=$(stanza);temp.find("error").length>0||temp.find("delay").length>0||$(stanza).find("service-unavailable").length>0?this.onMessageReceivedError(stanza):temp.find("propose").length>0?this.onPropositionReceived(stanza):temp.find("retract").length>0?this.onRetractReceived(stanza):temp.find("reject").length>0?this.onRejectReceived(stanza):temp.find("accept").length>0?this.onAcceptReceived(stanza):temp.find("proceed").length>0&&this.onProceedReceived(stanza)}catch(error){return this.logger.error("[WebrtcP2PEventHandler]   | onMessageReceived error "+error),!0}return!0}onMessageReceivedError(stanza){this.logger.info("[WebrtcP2PEventHandler]   | onMessageReceivedError");const id=$(stanza).find("propose").attr("id"),call=this.webrtcP2PService.calls[id];call&&this.logger.error("[WebrtcP2PEventHandler]   | onMessageReceivedError call is in "+call.status.value+" state")}async getOrCreateContact(jid,stanza){let contact;if(this.contactService.isMediaPillarJid(jid)){this.logger.info("[WebrtcP2PEventHandler] | getOrCreateContact for mediapillar jid "+jid);const mediapillarNode=$(stanza).find("mediapillar");if(mediapillarNode){const callernumberNode=mediapillarNode.find("callernumber"),callernumber=callernumberNode?callernumberNode.text():void 0,displaynameNode=mediapillarNode.find("displayname"),displayname=displaynameNode?displaynameNode.text():void 0;this.logger.info("[WebrtcP2PEventHandler]   | getOrCreateContact MP for jid "+jid+" callernumber: "+anonymizer_1.default(callernumber)+" displayname: "+anonymizer_1.default(displayname));const foundContactByNumber=this.contactService.getContactByPhoneNumber(callernumber);return foundContactByNumber&&foundContactByNumber!==this.contactService.userContact?(this.logger.debug("[WebrtcP2PEventHandler]   | getOrCreateContact found contact from phonenumber => contact id: "+foundContactByNumber.id),contact=foundContactByNumber):(contact=this.contactService.createBasicContact(null,callernumber),displayname&&(contact.displayName=displayname)),contact}return this.contactService.getOrCreateContact(jid)}return this.logger.info("[WebrtcP2PEventHandler]   | getOrCreateContact for jid "+jid),this.contactService.getOrCreateContact(jid)}async onPropositionReceived(stanza){const id=$(stanza).find("propose").attr("id"),jid=$(stanza).attr("from");this.logger.info("[WebrtcP2PEventHandler] jingle propose | onPropositionReceived for ID "+id+" and jid "+jid);let call=this.webrtcP2PService.calls[id];try{if(!call){const peerJid=this.xmppService.getBareJidFromJid(jid);call=call_model_1.Call.create(call_model_1.Call.Status.UNKNOWN,id,call_model_1.Call.Type.WEBRTC,null),call.fullJid=jid,this.webrtcP2PService.calls[call.id]=call;const contact=await this.getOrCreateContact(peerJid,stanza);if(call.contact=contact,!this.webrtcP2PService.calls[call.id])return;if($(stanza).find("mediapillar")){const callIdElements=$(stanza).find("callId");if(callIdElements.length>0){const assocPhoneCallIdElement=callIdElements[0];assocPhoneCallIdElement&&(this.logger.debug("[WebrtcP2PEventHandler]   | onPropositionReceived mediapillar callId detected: "+assocPhoneCallIdElement.textContent),call.setAssocPhoneCallId(assocPhoneCallIdElement.textContent))}}}if($(stanza).find("subject").length>0){const subject=$(stanza).find("subject")[0];this.logger.debug("[WebrtcP2PEventHandler]   | onPropositionReceived subject Detected: "+subject.textContent),call.setSubject(subject.textContent)}const remoteMedia=[],length=$(stanza).find("description").length;for(let i=0;i<length;i++){const description=$(stanza).find("description")[i];remoteMedia.push($(description).attr("media"))}call.setStatus(call_model_1.Call.Status.RINGING_INCOMMING),this.setRemoteTypeMedia(remoteMedia,call),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call.remoteMedia===call_model_1.Call.Media.SHARING&&call.contact&&this.webrtcP2PService.hasMediaPillarCallWithContactJid(call.contact.jid)&&(call.isSecondSharingCall=!0),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.contactService.isMediaPillarJid(call.fullJid)||(this.webrtcP2PService.autoreleaseTimeout=setTimeout(()=>{call&&(this.logger.info("[WebrtcP2PEventHandler]   | onPropositionReceived autoreleaseTimeout after 2 min : remove the call "+call.id),this.webrtcP2PService.removeCallObject(call))},12e4))}catch(error){this.logger.error("[WebrtcP2PEventHandler]   | onPropositionReceived error "+error),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcP2PService.removeCallObject(call)}}onRetractReceived(stanza){const id=$(stanza).find("retract").attr("id");this.logger.info("[WebrtcP2PEventHandler] jingle retract  | onRetractReceveid "+id);const call=this.webrtcP2PService.calls[id];call&&(call.status===call_model_1.Call.Status.ANSWERING&&this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.webrtcP2PService.removeCallObject(call)),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout)}onRejectReceived(stanza){const id=$(stanza).find("reject").attr("id"),call=this.webrtcP2PService.calls[id],fullJid=$(stanza).attr("from");this.logger.info("[WebrtcP2PEventHandler] jignle reject | onRejectReceived "+id+" jid "+fullJid),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),call&&(call.status===call_model_1.Call.Status.RINGING_INCOMMING&&(null!==call.getMediaPillarCall()&&this.eventService.publish("ON_MEDIAPILLAR_CALL_REJECT_EVENT",call),this.webrtcP2PService.removeCallObject(call)),call.status===call_model_1.Call.Status.DIALING&&(this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.webrtcP2PService.removeCallObject(call)),call.status!==call_model_1.Call.Status.ACTIVE&&call.status!==call_model_1.Call.Status.CONNECTING||call.fullJid&&call.fullJid===fullJid&&(this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),this.webrtcP2PService.removeCallObject(call)))}onAcceptReceived(stanza){const id=$(stanza).find("accept").attr("id"),call=this.webrtcP2PService.calls[id],fullJid=$(stanza).attr("from");call&&fullJid!==this.contactService.userContact.fullJid&&(this.logger.info("[WebrtcP2PEventHandler] jignle accept  | onAcceptReceived "+id+" jid "+fullJid),null!==call.getMediaPillarCall()&&this.eventService.publish("ON_MEDIAPILLAR_CALL_REMOTE_CTRL_EVENT",call),this.webrtcP2PService.removeCallObject(call)),fullJid!==this.contactService.userContact.fullJid&&this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout)}async onProceedReceived(stanza){this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout);const id=$(stanza).find("proceed").attr("id"),call=this.webrtcP2PService.calls[id],fullJid=$(stanza).attr("from");if(this.logger.info("[WebrtcP2PEventHandler] jignle proceed  | onProceedReceived -- "+id+" jid "+fullJid),call.fullJid=fullJid,call.localMedia===call_model_1.Call.Media.SHARING&&call.contact&&this.webrtcP2PService.hasMediaPillarCallWithContactJid(call.contact.jid)&&(call.isSecondSharingCall=!0),call.isInConversationWithMobile()&&call.localMedia&call_model_1.Call.Media.VIDEO){let mediaToGet=[];const mediaConstraints=this.webrtcConfigAndUtils.getMobileMediaConstraints("video");mediaToGet=["audio","video"],call.localMedia&call_model_1.Call.Media.AUDIO||(mediaToGet=["video"]);try{const stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet,mediaConstraints.fixedVideoWidth,mediaConstraints.fixedVideoHeight,mediaConstraints.fixedFrameRate);this.logger.info("[WebrtcP2PEventHandler]   | onProceedReceived --\x3e renegociate video quality"),call.localMedia&call_model_1.Call.Media.VIDEO&&(this.webrtcConfigAndUtils.disableMediaStreams(call.localStreams),call.localStreams=[],this.webrtcConfigAndUtils.disableMediaStream(call.originalStream),call.originalStream=null);let modifiedStream=stream;-1!==mediaToGet.indexOf("video")&&(call.originalStream=stream,modifiedStream=await this.webrtcP2PService.virtualBackgroundService.startProcessStream(stream)),this.webrtcP2PService.pushInLocalStreams(modifiedStream,call.id),this.webrtcP2PService.makeJingleCall(call)}catch(error){this.logger.info("[WebrtcP2PEventHandler]   | onProceedReceived "+call+" failure : "+error.message),-1!==error.toString().indexOf("getUserMedia")?(this.logger.info("onProceedReceived impossible, no webcam plugged"),this.webrtcP2PService.openErrorPopup()):(this.webrtcP2PService.releaseCall(call),this.webrtcP2PService.resetToSafeState())}}else call.localMedia&call_model_1.Call.Media.SHARING?this.webrtcP2PService.makeJingleSharingCall(call):this.webrtcP2PService.makeJingleCall(call)}incomingCall(callId){this.logger.info("[WebrtcP2PEventHandler] incomingCall "+callId);let call=null;const sess=this.xmppService.connection.jingle.sessions[callId];if(sess&&sess.peerjid&&(call=this.webrtcP2PService.calls[callId],!call)){const peerJid=this.xmppService.getBareJidFromJid(sess.peerjid),contact=this.contactService.getContactByJid(peerJid);call=this.webrtcP2PService.getCallByJid(contact.jid,sess.peerjid)}call?(sess.sendRinging(),setTimeout(()=>{this.webrtcP2PService.answerJingleCall(call)},350),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),call.statsInterval&&(this.logger.info("[WebrtcP2PEventHandler] remove getStats interval"),window.clearInterval(call.statsInterval),call.statsInterval=null),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.logger.info("[WebrtcP2PEventHandler] start getStats interval"),call.statsInterval=sess.getStats(3e3)):(this.logger.warn("[WebrtcP2PEventHandler] incomingCall no such call ! Terminate the session "),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE"),sess&&sess.terminate())}activeCall(callId){this.logger.info("[WebrtcP2PEventHandler] activeCall "+callId);const sess=this.xmppService.connection.jingle.sessions[callId];this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout);const call=this.webrtcP2PService.calls[callId];this.webrtcP2PService.updateRemoteTypeMedia(sess.remoteType,call),call&&call.status.key!==call_model_1.Call.Status.RELEASING.key&&call.status.key!==call_model_1.Call.Status.UNKNOWN.key&&(call.setStatus(call_model_1.Call.Status.ACTIVE),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call.startDuration(),this.webrtcP2PService.attachDistantMediaStreams(!0,call))}terminatedCall(callId,callReason,doNotUpdatePresence){0===Object.keys(this.xmppService.connection.jingle.sessions).length&&this.logger.info("INFO    | all calls terminated");const call=this.webrtcP2PService.calls[callId];call||0===Object.keys(this.webrtcP2PService.calls).length?("busy"===callReason&&this.webrtcP2PService.openErrorPopup("remoteUserNoMoreAvailable"),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcConfigAndUtils.disableAllStreamsForSession(call),this.webrtcConfigAndUtils.createOrUpdateStatisticsForCall(call),this.webrtcConfigAndUtils.callsStats[callId]&&delete this.webrtcConfigAndUtils.callsStats[callId],call&&this.webrtcP2PService.removeCallObject(call),doNotUpdatePresence||setTimeout(()=>{this.eventService.publish("CHECK_AND_RESET_BUSY_STATE")},1e3),call&&call.statsInterval&&(window.clearInterval(call.statsInterval),call.statsInterval=null),this.webrtcP2PService.isUserContactInCall()||this.webrtcP2PService.clearSrcObjectsFromElements()):this.logger.info("INFO    | terminatedCall : no call with "+callId+" exists.")}onJingleError(sid){sid&&this.webrtcP2PService.calls[sid]&&this.webrtcP2PService.calls[sid].status!==call_model_1.Call.Status.ACTIVE&&(this.webrtcP2PService.removeCallObject(this.webrtcP2PService.calls[sid]),this.webrtcP2PService.resetToSafeState(),this.webrtcP2PService.openErrorPopup("IceConnectionFailed"))}iceConnectionStateChange(sid,sess){this.logger.info("[WebrtcP2PEventHandler] iceConnectionStateChange for "+sid);let activeCall=null;const call=this.webrtcP2PService.calls[sess.sid];try{const state=sess.peerconnection.connectionState?sess.peerconnection.connectionState:sess.peerconnection.iceConnectionState;if("stable"!==sess.peerconnection.signalingState)return void this.logger.info("[WebrtcGlobalEventHandlerService]  | iceconnectionstatechange "+sid+" "+state+"|"+sess.peerconnection.signalingState+" is ignored");this.logger.info("[WebrtcGlobalEventHandlerService]  | iceconnectionstatechange "+sid+" "+state+"|"+sess.peerconnection.signalingState),"connected"===state&&(this.logger.info("INFO    | ICE Connection established successfully"),$("#globalAudioTag")[0]&&this.logger.info("[WebrtcP2PEventHandler] sinkId for globalAudioTag is "+$("#globalAudioTag")[0].sinkId),this.webrtcP2PService.reconnectCall=!1,activeCall=this.webrtcP2PService.calls[sid],activeCall&&activeCall.onHold?(call.setStatus(call_model_1.Call.Status.HOLD),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall)):activeCall&&activeCall.putOnHold?(call.setStatus(call_model_1.Call.Status.PUT_ON_HOLD),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall)):activeCall&&activeCall.status!==call_model_1.Call.Status.ACTIVE&&(this.logger.info("INFO    | ICE Connection : call is active now !"),this.activeCall(sid)),sess.isRenegotiating&&(this.logger.info("INFO    | Renegotiating done"),sess.isRenegotiating=!1,this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION_SUCCESS",activeCall)),sess.autoReconnectTimer&&(clearTimeout(sess.autoReconnectTimer),sess.autoReconnectTimer=null),this.webrtcP2PService.autoreleaseTimeout&&(clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcP2PService.autoreleaseTimeout=null)),"completed"===state&&(this.logger.info("INFO    | ICE Connection completed successfully"),this.webrtcP2PService.reconnectCall=!1,activeCall=this.webrtcP2PService.calls[sid],activeCall&&activeCall.onHold?(call.setStatus(call_model_1.Call.Status.HOLD),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall)):activeCall&&activeCall.putOnHold?(call.setStatus(call_model_1.Call.Status.PUT_ON_HOLD),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall)):activeCall&&activeCall.status!==call_model_1.Call.Status.ACTIVE&&(this.logger.info("INFO    | ICE Connection : call is active now !"),this.activeCall(sid)),sess.isRenegotiating&&(this.logger.info("INFO    | Renegotiating done"),sess.isRenegotiating=!1,this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",activeCall),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION_SUCCESS",activeCall)),this.webrtcP2PService.autoreleaseTimeout&&(clearTimeout(this.webrtcP2PService.autoreleaseTimeout),this.webrtcP2PService.autoreleaseTimeout=null)),"disconnected"===state&&(this.logger.info("INFO    | signalingState disconnected"),call&&call.status!==call_model_1.Call.Status.UNKNOWN&&(this.logger.info("INFO    | iceConnectionStateChange go to connecting state"),call.setStatus(call_model_1.Call.Status.CONNECTING),this.eventService.publish("ON_CALL_UPDATED_EVENT",call)),this.webrtcP2PService.connected||(this.webrtcP2PService.reconnectCall=!0),sess.autoReconnectTimer||(this.logger.error("arm autoReconnectTimer"),sess.autoReconnectTimer=setTimeout(()=>{this.logger.error("autoReconnectTimer -- execute"),this.webrtcP2PService.connected&&(this.logger.error("autoReconnectTimer -- network OK, proceed with reconnect"),sess.reconnectSession())},5e3)),this.webrtcP2PService.autoreleaseTimeout||(this.webrtcP2PService.autoreleaseTimeout=setTimeout(()=>{this.logger.info("[WebrtcP2PEventHandler]  | reconnection is impossible after 45 seconds : release the call"),call&&call.status!==call_model_1.Call.Status.UNKNOWN&&this.webrtcP2PService.rejectCall(call)},45e3))),"failed"===state&&(this.logger.info("INFO    | signalingState FAILED"),call&&call.status!==call_model_1.Call.Status.UNKNOWN&&(this.logger.info("INFO    | iceConnectionStateChange go to connecting state"),call.setStatus(call_model_1.Call.Status.CONNECTING),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.eventService.publish("ON_RECORDING_CNXLOST_EVENT")),this.webrtcP2PService.connected||(this.webrtcP2PService.reconnectCall=!0),this.webrtcP2PService.connected&&(this.logger.error("[WebrtcP2PEventHandler] signalingState FAILED -- network OK, proceed with reconnect"),sess.reconnectSession()),this.webrtcP2PService.autoreleaseTimeout||(this.webrtcP2PService.autoreleaseTimeout=setTimeout(()=>{this.logger.info("[WebrtcP2PEventHandler]  | reconnection is impossible after 45 seconds : release the call"),call&&call.status!==call_model_1.Call.Status.UNKNOWN&&this.webrtcP2PService.rejectCall(call)},45e3)))}catch(error){try{this.logger.error("JINGLE  | iceconnectionstatechange error "+error),call?this.webrtcP2PService.removeCallObject(call,"unsupported-applications"):this.xmppService.connection.jingle.terminate(null,"unsupported-applications"),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE")}catch(err){this.logger.error("JINGLE  | iceconnectionstatechange error "+err),this.eventService.publish("CHECK_AND_RESET_BUSY_STATE")}}}mediaModified(sid,mediaType){this.logger.info("[WebrtcP2PEventHandler] mediaModified "+sid);const call=this.webrtcP2PService.calls[sid];this.xmppService.connection.jingle.sessions[sid].isRenegotiating=!0,call.remoteMedia="sharing"===mediaType?call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.SHARING:"video"===mediaType?call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.VIDEO:"sharing+video"===mediaType?call_model_1.Call.Media.AUDIO|call_model_1.Call.Media.VIDEO|call_model_1.Call.Media.SHARING:call_model_1.Call.Media.AUDIO,this.contactService.setBusyState("dnd",this.webrtcP2PService.calculatePresenceMessage(call)),this.eventService.publish("ON_WEBRTC_CALL_ESCALATION",call)}async onTrasferCallEvent(referTo,otherSid){this.logger.info(`[WebrtcP2PEventHandler]   | onTrasferCallEvent referTo ${referTo} and other sid ${otherSid}`);const mediaToGet=["audio"],contact=await this.contactService.getOrCreateContact(this.xmppService.getBareJidFromJid(referTo)),id="web_"+crypto.randomUUID(),call=call_model_1.Call.create(call_model_1.Call.Status.DIALING,id,call_model_1.Call.Type.WEBRTC,contact);let stream;try{stream=await this.webrtcP2PService.getBrowserMedia(mediaToGet,void 0,void 0,void 0,call),this.webrtcP2PService.calls[call.id]=call,call.isInitiator=!0,stream.callId=id,call.fullJid=referTo,this.webrtcP2PService.pushInLocalStreams(stream,id),this.setLocalTypeMedia(mediaToGet,call),await this.webrtcP2PService.makeJingleCall(call,null,null,otherSid),this.contactService.setBusyState("dnd",this.webrtcP2PService.calculatePresenceMessage(call)),this.eventService.publish("ON_WEBRTC_CALL_TRANSFER_EVENT",contact.jid)}catch(error){this.logger.info("[WebrtcP2PEventHandler]   | onTrasferCallEvent failure : "+JSON.stringify({error:error.message})),this.webrtcP2PService.makingCall=!1,this.webrtcP2PService.removeCallObject(call),this.webrtcP2PService.isUserContactInCall()||this.webrtcP2PService.resetToSafeState(),this.webrtcP2PService.autoreleaseTimeout&&clearTimeout(this.webrtcP2PService.autoreleaseTimeout),stream&&(stream.getTracks().forEach((function(track){track.enabled=!1,track.stop(),track=null})),stream.stop&&stream.stop(),stream=null)}}async onIncomingTrasferredCall(sid){this.logger.info("[WebrtcP2PEventHandler]   | onIncomingTransferredCall for sid "+sid);const sess=this.xmppService.connection.jingle.sessions[sid],peerJid=this.xmppService.getBareJidFromJid(sess.peerjid),call=call_model_1.Call.create(call_model_1.Call.Status.CONNECTING,sid,call_model_1.Call.Type.WEBRTC,null);try{call.fullJid=sess.peerjid,this.webrtcP2PService.calls[call.id]=call;const contact=await this.contactService.getOrCreateContact(peerJid);call.contact=contact;const remoteMedia=["audio"];this.setRemoteTypeMedia(remoteMedia,call),call.localMedia=call_model_1.Call.Media.AUDIO,this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.incomingCall(sid),this.eventService.publish("ON_WEBRTC_CALL_TRANSFER_EVENT",peerJid)}catch(error){this.logger.error("[WebrtcP2PEventHandler]   | onIncomingTransferredCall error "+error),this.webrtcP2PService.removeCallObject(call)}}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webinar_model_1=__webpack_require__(111),auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12);class AbstractWebinarService{}exports.AbstractWebinarService=AbstractWebinarService;class WebinarParticipantsService extends AbstractWebinarService{constructor(webinarService){super(),this.webinarService=webinarService,this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance()}static create(webinarService){return new WebinarParticipantsService(webinarService)}async add(webinar,participant){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/invitations/participant`,headers=this.authService.getPostHeader(),body=participant.getData(),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addParticipant");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async approve(webinar,emails){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/registrations/approve`,headers=this.authService.getPostHeader(),body=JSON.stringify({emails:emails}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;return webinar_model_1.Webinar.updateFromData(webinar,data),webinar.rxSubject.next(),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"approveParticipants");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async reject(webinar,emails){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/registrations/reject`,headers=this.authService.getPostHeader(),body=JSON.stringify({emails:emails}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;return webinar_model_1.Webinar.updateFromData(webinar,data),webinar.rxSubject.next(),webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"rejectParticipants");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async resendInvitationMail(webinar,emails){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/registrations/mail-resend`,headers=this.authService.getPostHeader(),body=JSON.stringify({emails:emails}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"resendParticipantInvitationMail");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async getInfo(webinar,email){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/registrations?email=${email}`,headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return(await response.json()).data[0]}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getParticipantInfo");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async getCSVTemplateUrl(){try{let url=config.restServerUrl+"/api/rainbow/massprovisioning/v1.0/webinars/participants/template";"webinar"===this.webinarService.roomService.context&&(url+="?context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const blob=await response.blob();return URL.createObjectURL(blob)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCSVParticipantTemplateUrl");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async getCSVText(webinar){try{const indexedAttendees=(await this.webinarService.getAttendeesAnalytics(webinar)).reduce((acc,attendee)=>(acc[attendee.email]=attendee,acc),{});let content="\nemail;firstName;lastName;company;jobTitle;country;state;attendance\n";return webinar.participants.forEach(part=>{content+=`${part.email&&part.email.length?part.email:""};${part.firstName&&part.firstName.length?part.firstName:""};${part.lastName&&part.lastName.length?part.lastName:""};${part.company&&part.company.length?part.company:""};${part.jobTitle&&part.jobTitle.length?part.jobTitle:""};${part.country&&part.country.length?part.country:""};${part.state&&part.state.length?part.state:""};${part.email&&indexedAttendees[part.email]&&!0===indexedAttendees[part.email].attendance?"Yes":"No"};\n`}),content.trim()}catch(error){return""}}async checkCSV(webinar,CSVBuffer){const webinarCSVStatus=webinar_model_1.WebinarCSVStatus.create();try{let url=`${config.restServerUrl}/api/rainbow/massprovisioning/v1.0/webinars/participants/imports/check?webinarId=${webinar.id}`;"webinar"===this.webinarService.roomService.context&&(url+="&context=webinar");const headers=this.authService.getPostHeader("text/csv; charset=utf-8"),body=CSVBuffer,response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;return webinarCSVStatus.okCount=data.okCount,webinarCSVStatus.errorCount=data.errorCount,data.errorReport&&(webinarCSVStatus.errorReport=Object.keys(data.errorReport).map(key=>{const info=data.errorReport[key],item=info.csvSource.split(";"),report={email:{value:item[0],status:"ok"},firstName:{value:item[1],status:"ok"},lastName:{value:item[2],status:"ok"},company:{value:item[3],status:"ok"},jobTitle:{value:item[4],status:"ok"},country:{value:item[5],status:"ok"}};return info.errors.forEach(error=>{report[error.param].status="error"}),report})),webinarCSVStatus}catch(error){webinarCSVStatus.errorDetails="UnknownError";const errorInfo=await this.errorHelperService.getErrorInfo(error,"checkCSVParticipants");return 400===error.status&&errorInfo.error.errorDetails&&(webinarCSVStatus.errorDetails=errorInfo.error.errorDetails),this.logger.error("[WebinarParticipantsService] "+errorInfo.message),webinarCSVStatus}}async importCSV(webinar,CSVBuffer){try{let url=`${config.restServerUrl}/api/rainbow/massprovisioning/v1.0/webinars/participants/imports?webinarId=${webinar.id}`;"webinar"===this.webinarService.roomService.context&&(url+="&context=webinar");const headers=this.authService.getPostHeader("text/csv; charset=utf-8"),body=CSVBuffer,response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"importCSVParticipants");return this.logger.error("[WebinarParticipantsService] "+errorInfo.message),webinar}}async getImportDetails(webinar){try{let url=`${config.restServerUrl}/api/rainbow/massprovisioning/v1.0/webinars/participants/imports/${webinar.id}/details`;"webinar"===this.webinarService.roomService.context&&(url+="?context=webinar");const headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;return webinar}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getImportDetails");return this.logger.error("[WebinarParticipantsService] "+errorInfo.message),webinar}}async authenticate(openInviteId,joinUuid,agreement=!1,accessCode=null,userData=null){const accountInfo=await this.getAccount(openInviteId,joinUuid,agreement,accessCode,userData);if(accountInfo.password){try{await this.authService.logon(accountInfo.login,accountInfo.password,!1)}catch(logonError){throw logonError.errorDetailsCode="webinarParticipantAuthFailure",logonError}return accountInfo}return accountInfo}async getAccount(openInviteId,joinUuid,agreement=!1,accessCode=null,userData=null){try{const url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars/account",headers=this.authService.getPostHeader();let body={openInviteId:openInviteId,joinUuid:joinUuid,accessCode:accessCode,agreement:agreement};userData&&(userData.firstName&&(body.firstName=userData.firstName),userData.lastName&&(body.lastName=userData.lastName),userData.company&&(body.company=userData.company),userData.jobTitle&&(body.jobTitle=userData.jobTitle)),body=JSON.stringify(body);const response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const responseData=(await response.json()).data,account=window.atob(responseData.account).split(":");return this.logger.info("[WebinarParticipantsService] getAccount -- success"),{login:account[0],password:account[1],state:responseData.state}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAccount");if(403140===errorInfo.error.errorDetailsCode){return{login:window.atob(errorInfo.error.errorDetailsData.account),password:null}}throw errorInfo.error}}async joinWebinar(openInviteId,joinUuid,accessCode=null){try{const url=config.restServerUrl+"/api/rainbow/webinar/v1.0/webinars/join",headers=this.authService.getPostHeader();let body={openInviteId:openInviteId,joinUuid:joinUuid,accessCode:accessCode};body=JSON.stringify(body);const response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const responseData=await response.json();return this.logger.info("[WebinarParticipantsService] joinWebinar -- success"),responseData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinWebinar");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}async joinWebinarAsRainbowAttendee(webinarId){try{this.logger.info("[WebinarParticipantsService] joinWebinarAsRainbowAttendee -- "+webinarId);const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinarId}/join`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers});if(!response.ok)throw response;const webinar=await this.webinarService.getWebinar(webinarId);await this.webinarService.getWebinarRooms(webinar,!1)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinWebinar");throw this.logger.error("[WebinarParticipantsService] "+errorInfo.message),errorInfo.error}}}exports.WebinarParticipantsService=WebinarParticipantsService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webinar_model_1=__webpack_require__(111),auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12);class AbstractWebinarSpeakersService{}exports.AbstractWebinarSpeakersService=AbstractWebinarSpeakersService;class WebinarSpeakersService extends AbstractWebinarSpeakersService{constructor(webinarService){super(),this.webinarService=webinarService,this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance()}static create(webinarService){return new WebinarSpeakersService(webinarService)}get(webinar,id){return webinar.organizers.concat(webinar.speakers).find(speaker=>speaker.userId===id)}async invite(webinar,users,emails){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/invitations/moderators`,headers=this.authService.getPostHeader(),body=JSON.stringify({users:users,emails:emails}),response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const jsonResponse=await response.json(),data=jsonResponse.data;webinar_model_1.Webinar.updateFromData(webinar,data.webinar),this.webinarService.updateRoles(webinar),webinar.rxSubject.next();const failed=jsonResponse.failed;return failed&&failed.invalidUsers&&failed.invalidUsers.length>0?failed.invalidUsers.map(invalidUser=>({id:invalidUser.id,errorCode:invalidUser.errorDetailsCode})):null}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"inviteSpeakers");throw this.logger.error("[WebinarSpeakersService] "+errorInfo.message),errorInfo.error}}async remove(webinar,users,emails){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/moderators/remove`,headers=this.authService.getPostHeader(),body=JSON.stringify({users:users,emails:emails}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;webinar_model_1.Webinar.updateFromData(webinar,data.webinar),webinar.rxSubject.next()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeSpeakers");throw this.logger.error("[WebinarSpeakersService] "+errorInfo.message),errorInfo.error}}async promoteSpeakers(webinar,users){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/moderators/promote`,headers=this.authService.getPostHeader(),body=JSON.stringify({users:users}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;webinar_model_1.Webinar.updateFromData(webinar,data),this.webinarService.updateRoles(webinar),webinar.rxSubject.next()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"promoteSpeakers");throw this.logger.error("[WebinarSpeakersService] "+errorInfo.message),errorInfo.error}}async demoteOrganizers(webinar,users){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/moderators/demote`,headers=this.authService.getPostHeader(),body=JSON.stringify({users:users}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;webinar_model_1.Webinar.updateFromData(webinar,data),this.webinarService.updateRoles(webinar),webinar.rxSubject.next()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"demoteOrganizers");throw this.logger.error("[WebinarSpeakersService] "+errorInfo.message),errorInfo.error}}async updateOrganizer(webinar,userId,hightlighted){try{const url=`${config.restServerUrl}/api/rainbow/webinar/v1.0/webinars/${webinar.id}/moderators/${userId}`,headers=this.authService.getPostHeader(),body=JSON.stringify({hightlighted:hightlighted}),response=await fetch(url,{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;const data=(await response.json()).data;webinar_model_1.Webinar.updateFromData(webinar,data),this.webinarService.updateRoles(webinar),webinar.rxSubject.next()}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateOrganizer");throw this.logger.error("[WebinarSpeakersService] "+errorInfo.message),errorInfo.error}}}exports.WebinarSpeakersService=WebinarSpeakersService},function(module,exports,__webpack_require__){"use strict";exports.byteLength=function(b64){var lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1];return 3*(validLen+placeHoldersLen)/4-placeHoldersLen},exports.toByteArray=function(b64){var tmp,i,lens=getLens(b64),validLen=lens[0],placeHoldersLen=lens[1],arr=new Arr(function(b64,validLen,placeHoldersLen){return 3*(validLen+placeHoldersLen)/4-placeHoldersLen}(0,validLen,placeHoldersLen)),curByte=0,len=placeHoldersLen>0?validLen-4:validLen;for(i=0;i<len;i+=4)tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)],arr[curByte++]=tmp>>16&255,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp;2===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4,arr[curByte++]=255&tmp);1===placeHoldersLen&&(tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2,arr[curByte++]=tmp>>8&255,arr[curByte++]=255&tmp);return arr},exports.fromByteArray=function(uint8){for(var tmp,len=uint8.length,extraBytes=len%3,parts=[],i=0,len2=len-extraBytes;i<len2;i+=16383)parts.push(encodeChunk(uint8,i,i+16383>len2?len2:i+16383));1===extraBytes?(tmp=uint8[len-1],parts.push(lookup[tmp>>2]+lookup[tmp<<4&63]+"==")):2===extraBytes&&(tmp=(uint8[len-2]<<8)+uint8[len-1],parts.push(lookup[tmp>>10]+lookup[tmp>>4&63]+lookup[tmp<<2&63]+"="));return parts.join("")};for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;function getLens(b64){var len=b64.length;if(len%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var validLen=b64.indexOf("=");return-1===validLen&&(validLen=len),[validLen,validLen===len?0:4-validLen%4]}function encodeChunk(uint8,start,end){for(var tmp,num,output=[],i=start;i<end;i+=3)tmp=(uint8[i]<<16&16711680)+(uint8[i+1]<<8&65280)+(255&uint8[i+2]),output.push(lookup[(num=tmp)>>18&63]+lookup[num>>12&63]+lookup[num>>6&63]+lookup[63&num]);return output.join("")}revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63},function(module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];for(i+=d,e=s&(1<<-nBits)-1,s>>=-nBits,nBits+=eLen;nBits>0;e=256*e+buffer[offset+i],i+=d,nBits-=8);for(m=e&(1<<-nBits)-1,e>>=-nBits,nBits+=mLen;nBits>0;m=256*m+buffer[offset+i],i+=d,nBits-=8);if(0===e)e=1-eBias;else{if(e===eMax)return m?NaN:1/0*(s?-1:1);m+=Math.pow(2,mLen),e-=eBias}return(s?-1:1)*m*Math.pow(2,e-mLen)},exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=8*nBytes-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=23===mLen?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=value<0||0===value&&1/value<0?1:0;for(value=Math.abs(value),isNaN(value)||value===1/0?(m=isNaN(value)?1:0,e=eMax):(e=Math.floor(Math.log(value)/Math.LN2),value*(c=Math.pow(2,-e))<1&&(e--,c*=2),(value+=e+eBias>=1?rt/c:rt*Math.pow(2,1-eBias))*c>=2&&(e++,c/=2),e+eBias>=eMax?(m=0,e=eMax):e+eBias>=1?(m=(value*c-1)*Math.pow(2,mLen),e+=eBias):(m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen),e=0));mLen>=8;buffer[offset+i]=255&m,i+=d,m/=256,mLen-=8);for(e=e<<mLen|m,eLen+=mLen;eLen>0;buffer[offset+i]=255&e,i+=d,e/=256,eLen-=8);buffer[offset+i-d]|=128*s}},function(module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return"[object Array]"==toString.call(arr)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),event_service_1=__webpack_require__(11),fileStorage_service_1=__webpack_require__(34),fileServer_service_1=__webpack_require__(47);class FileDescriptorEventHandlerService{constructor(){this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance()}static create(){return new FileDescriptorEventHandlerService}onManagementMessageReceived(stanza){try{const stanzaElem=$(stanza);return stanzaElem.find("file").length>0?this.manageFileStanzaData(stanzaElem.find("file")):stanzaElem.find("thumbnail").length>0?this.manageThumbnailStanzaData(stanzaElem.find("thumbnail")):stanzaElem.find("recordingfile").length>0||this.logger.info("[FileDescriptorEventHandler] onManagementMessageReceived  -- ignore the message"),!0}catch(error){return this.logger.error("[FileDescriptorEventHandler] onManagementMessageReceived ERROR "+error),!0}}async manageFileStanzaData(stanza){const action=$(stanza).attr("action"),filesId=$(stanza).find("fileid");let updateConsumption=!1;for(let i=0;i<filesId.length;i++){const fileId=$(filesId[i]).text(),fileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);switch(this.logger.info("[FileDescriptorEventHandler] manageFileStanzaData -- "+action+" fileDescriptor "+fileId),action){case"create":this.logger.debug("[FileDescriptorEventHandler] fileDescriptor "+fileId+" created on server -- do nothing");break;case"delete":fileDescriptor?(fileDescriptor.ownerId===this.contactService.userContact.dbId&&"deleted"!==fileDescriptor.state&&(updateConsumption=!0),this.fileStorageService.deleteFileDescriptorFromCache(fileId),this.fileStorageService.deleteVoiceMessageFileDescriptor(fileId),this.eventService.publish("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:fileId})):this.eventService.publish("ON_FILE_REMOVED_FROM_STORE_EVENT",{fileId:fileId});break;case"update":try{const fileDesc=await this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId,!0);if(this.logger.info("[FileDescriptorEventHandler] fileDescriptor retrieved"),fileDesc.ownerId!==this.contactService.userContact.dbId&&this.fileStorageService.retrieveUserConsumption(),!fileDesc.previewBlob&&fileDesc.isThumbnailPossible())try{const blob=await this.fileServerService.getBlobThumbnailFromFileDescriptor(fileDesc);fileDesc.previewBlob=blob,fileDesc.previewBlobSubject.next(fileDesc.previewBlob),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDesc.id})}catch(error){this.logger.error("[FileDescriptorEventHandler] fileDescriptor retrieve error : "+error)}"isClean"===fileDesc.virusScanState&&(this.fileStorageService.updateAFileDescriptorLocally(fileDesc),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDesc.id})),this.fileStorageService.fileDescriptorsSubject.next({action:"update",fd:fileDesc})}catch(error){this.logger.error("[FileDescriptorEventHandler] fileDescriptor retrieve error : "+error)}this.fileStorageService.retrieveAndStoreOneVoiceMessageFileDescriptor(fileId)}}updateConsumption&&this.fileStorageService.retrieveUserConsumption()}async manageThumbnailStanzaData(stanza){const action=$(stanza).attr("action"),fileId=$(stanza).find("fileid").text(),fileUrl=$(stanza).find("url").text(),fileMime=$(stanza).find("mime").text(),fileSize=$(stanza).find("size").text(),md5sum=$(stanza).find("md5sum").text(),originalWidth=$(stanza).find("originalWidth").text(),originalHeight=$(stanza).find("originalHeight").text();if(this.logger.info("[FileDescriptorEventHandler] manageThumbnailStanzaData -- "+action+" fileDescriptor "+fileId),this.logger.debug("[FileDescriptorEventHandler]   fileUrl="+fileUrl),this.logger.debug("[FileDescriptorEventHandler]   fileMime="+fileMime),this.logger.debug("[FileDescriptorEventHandler]   fileSize="+fileSize),this.logger.debug("[FileDescriptorEventHandler]   md5sum="+md5sum),this.logger.debug("[FileDescriptorEventHandler]   fileId="+fileId),"create"===action||"update"===action)try{await this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId);const fileDescriptor=this.fileStorageService.getFileDescriptorById(fileId);if(fileDescriptor)if(this.logger.debug("[FileDescriptorEventHandler] updating Thumbnail of found FileDescriptor "+fileId),fileDescriptor.previewBlob&&!fileDescriptor.previewDownloaded||!fileDescriptor.previewBlob){this.eventService.publish("ON_FILE_DESCRIPTOR_THUMBNAIL_READY",fileDescriptor.id),fileDescriptor.thumbnail.availableThumbnail=!0,fileDescriptor.thumbnail.md5sum=md5sum,fileDescriptor.thumbnail.size=Number(fileSize),originalWidth&&originalHeight&&fileDescriptor.setOriginalImageDimensions(Number(originalWidth),Number(originalHeight)),this.logger.info("[FileDescriptorEventHandler] preview not already downloaded for "+fileId+" -- download it");try{await this.fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor),this.eventService.publish("ON_FILE_DESCRIPTOR_RECEIVED_EVENT",{fileId:fileDescriptor.id})}catch(error){this.logger.error("[FileDescriptorEventHandler] Unable to get blob thumbnail from file descriptor")}}else this.eventService.publish("ON_FILE_DESCRIPTOR_THUMBNAIL_READY",fileDescriptor.id),this.logger.info("[FileDescriptorEventHandler] preview already downloaded for "+fileId+" -- do nothing");else this.logger.error("[FileDescriptorEventHandler] FileDescriptor not found and we do nothing and its not OK")}catch(__error){this.logger.error("[FileDescriptorEventHandler] FileDescriptor was not found on server...")}}}exports.FileDescriptorEventHandlerService=FileDescriptorEventHandlerService},function(module,exports){module.exports=function(module){return module.webpackPolyfill||(module.deprecate=function(){},module.paths=[],module.children||(module.children=[]),Object.defineProperty(module,"loaded",{enumerable:!0,get:function(){return module.l}}),Object.defineProperty(module,"id",{enumerable:!0,get:function(){return module.i}}),module.webpackPolyfill=1),module}},function(module,exports,__webpack_require__){var map={"./af":174,"./af.js":174,"./ar":175,"./ar-dz":176,"./ar-dz.js":176,"./ar-kw":177,"./ar-kw.js":177,"./ar-ly":178,"./ar-ly.js":178,"./ar-ma":179,"./ar-ma.js":179,"./ar-sa":180,"./ar-sa.js":180,"./ar-tn":181,"./ar-tn.js":181,"./ar.js":175,"./az":182,"./az.js":182,"./be":183,"./be.js":183,"./bg":184,"./bg.js":184,"./bm":185,"./bm.js":185,"./bn":186,"./bn-bd":187,"./bn-bd.js":187,"./bn.js":186,"./bo":188,"./bo.js":188,"./br":189,"./br.js":189,"./bs":190,"./bs.js":190,"./ca":191,"./ca.js":191,"./cs":192,"./cs.js":192,"./cv":193,"./cv.js":193,"./cy":194,"./cy.js":194,"./da":195,"./da.js":195,"./de":196,"./de-at":197,"./de-at.js":197,"./de-ch":198,"./de-ch.js":198,"./de.js":196,"./dv":199,"./dv.js":199,"./el":200,"./el.js":200,"./en-au":201,"./en-au.js":201,"./en-ca":202,"./en-ca.js":202,"./en-gb":203,"./en-gb.js":203,"./en-ie":204,"./en-ie.js":204,"./en-il":205,"./en-il.js":205,"./en-in":206,"./en-in.js":206,"./en-nz":207,"./en-nz.js":207,"./en-sg":208,"./en-sg.js":208,"./eo":209,"./eo.js":209,"./es":210,"./es-do":211,"./es-do.js":211,"./es-mx":212,"./es-mx.js":212,"./es-us":213,"./es-us.js":213,"./es.js":210,"./et":214,"./et.js":214,"./eu":215,"./eu.js":215,"./fa":216,"./fa.js":216,"./fi":217,"./fi.js":217,"./fil":218,"./fil.js":218,"./fo":219,"./fo.js":219,"./fr":220,"./fr-ca":221,"./fr-ca.js":221,"./fr-ch":222,"./fr-ch.js":222,"./fr.js":220,"./fy":223,"./fy.js":223,"./ga":224,"./ga.js":224,"./gd":225,"./gd.js":225,"./gl":226,"./gl.js":226,"./gom-deva":227,"./gom-deva.js":227,"./gom-latn":228,"./gom-latn.js":228,"./gu":229,"./gu.js":229,"./he":230,"./he.js":230,"./hi":231,"./hi.js":231,"./hr":232,"./hr.js":232,"./hu":233,"./hu.js":233,"./hy-am":234,"./hy-am.js":234,"./id":235,"./id.js":235,"./is":236,"./is.js":236,"./it":237,"./it-ch":238,"./it-ch.js":238,"./it.js":237,"./ja":239,"./ja.js":239,"./jv":240,"./jv.js":240,"./ka":241,"./ka.js":241,"./kk":242,"./kk.js":242,"./km":243,"./km.js":243,"./kn":244,"./kn.js":244,"./ko":245,"./ko.js":245,"./ku":246,"./ku.js":246,"./ky":247,"./ky.js":247,"./lb":248,"./lb.js":248,"./lo":249,"./lo.js":249,"./lt":250,"./lt.js":250,"./lv":251,"./lv.js":251,"./me":252,"./me.js":252,"./mi":253,"./mi.js":253,"./mk":254,"./mk.js":254,"./ml":255,"./ml.js":255,"./mn":256,"./mn.js":256,"./mr":257,"./mr.js":257,"./ms":258,"./ms-my":259,"./ms-my.js":259,"./ms.js":258,"./mt":260,"./mt.js":260,"./my":261,"./my.js":261,"./nb":262,"./nb.js":262,"./ne":263,"./ne.js":263,"./nl":264,"./nl-be":265,"./nl-be.js":265,"./nl.js":264,"./nn":266,"./nn.js":266,"./oc-lnc":267,"./oc-lnc.js":267,"./pa-in":268,"./pa-in.js":268,"./pl":269,"./pl.js":269,"./pt":270,"./pt-br":271,"./pt-br.js":271,"./pt.js":270,"./ro":272,"./ro.js":272,"./ru":273,"./ru.js":273,"./sd":274,"./sd.js":274,"./se":275,"./se.js":275,"./si":276,"./si.js":276,"./sk":277,"./sk.js":277,"./sl":278,"./sl.js":278,"./sq":279,"./sq.js":279,"./sr":280,"./sr-cyrl":281,"./sr-cyrl.js":281,"./sr.js":280,"./ss":282,"./ss.js":282,"./sv":283,"./sv.js":283,"./sw":284,"./sw.js":284,"./ta":285,"./ta.js":285,"./te":286,"./te.js":286,"./tet":287,"./tet.js":287,"./tg":288,"./tg.js":288,"./th":289,"./th.js":289,"./tk":290,"./tk.js":290,"./tl-ph":291,"./tl-ph.js":291,"./tlh":292,"./tlh.js":292,"./tr":293,"./tr.js":293,"./tzl":294,"./tzl.js":294,"./tzm":295,"./tzm-latn":296,"./tzm-latn.js":296,"./tzm.js":295,"./ug-cn":297,"./ug-cn.js":297,"./uk":298,"./uk.js":298,"./ur":299,"./ur.js":299,"./uz":300,"./uz-latn":301,"./uz-latn.js":301,"./uz.js":300,"./vi":302,"./vi.js":302,"./x-pseudo":303,"./x-pseudo.js":303,"./yo":304,"./yo.js":304,"./zh-cn":305,"./zh-cn.js":305,"./zh-hk":306,"./zh-hk.js":306,"./zh-mo":307,"./zh-mo.js":307,"./zh-tw":308,"./zh-tw.js":308};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=436},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),event_service_1=__webpack_require__(11),contact_service_1=__webpack_require__(6),main_service_1=__webpack_require__(15),call_model_1=__webpack_require__(29),cli_model_1=__webpack_require__(438),anonymizer_1=__webpack_require__(66);class TelephonyServiceSipWise{constructor(){this.mainService=main_service_1.MainService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.settings={},this.emergencyCallData={},this.monolineIncomingMode=!1}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.telephonyServiceSipWise||(win.rainbow.telephonyServiceSipWise=new TelephonyServiceSipWise),win.rainbow.telephonyServiceSipWise}async start(){if(this.logger.info("[TelephonyServiceSipWise] [TEL] === STARTING ==="),this.telephonyService=this.mainService.inject("telephonyService"),!this.telephonyService)throw new Error("TelephonyServiceSipWise failure - Telephony service is missing");if(this.webrtcGatewayService=this.mainService.inject("webrtcGatewayService"),!this.webrtcGatewayService)throw new Error("TelephonyServiceSipWise failure - webrtc Gateway service is missing");this.portalURL=config.restServerUrl+"/api/rainbow/voice/v1.0/",this.portalAdminURL=config.restServerUrl+"/api/rainbow/rvcpprovisioning/v1.0/",this.routingDataClear(),this.emergencyCallDataClear(),this.initializeSettings(),this.logger.info("[TelephonyServiceSipWise] [TEL] === STARTED ===")}routingDataClear(){this.routingData={devicesList:[],ringingDestinations:[],alsoOfficePhoneRingEnabled:!0}}getPortalURL(){return this.portalURL}isMonolineIncomingModeActivated(){return this.monolineIncomingMode}getDeviceIdWithType(devicetype){if(this.routingData.devicesList.length<1)return this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : Anomaly API getUserDevices not yet performed"),null;if("sip"!==devicetype&&"webrtc"!==devicetype&&"generic"!==devicetype)return this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : Anomaly wrong device type"),null;const foundIndex=this.routingData.devicesList.findIndex(elt=>elt.type===devicetype);return-1!==foundIndex?this.routingData.devicesList[foundIndex].deviceId:(this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : device type "+devicetype+" not found"),null)}getDeviceDbIdWithType(devicetype){if(this.routingData.devicesList.length<1)return this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : Anomaly API getUserDevices not yet performed"),null;if("sip"!==devicetype&&"webrtc"!==devicetype&&"generic"!==devicetype)return this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : Anomaly wrong device type"),null;const foundIndex=this.routingData.devicesList.findIndex(elt=>elt.type===devicetype);return-1!==foundIndex?this.routingData.devicesList[foundIndex].id:(this.logger.info("[TelephonyServiceSipWise] getDeviceIdWithType : device type "+devicetype+" not found"),null)}getCurrentDevice(){if(this.routingData.devicesList.length<1)return this.logger.info("[TelephonyServiceSipWise] getCurrentDevice : Anomaly API getUserDevices not yet performed"),null;const currentDevice=this.routingData.devicesList.find(elt=>elt.main);return currentDevice&&"outOfService"!==currentDevice.state?currentDevice:(this.logger.info("[TelephonyServiceSipWise] getCurrentDevice anomaly - no current/main device"),null)}setCurrentDevice(currentDeviceId){const device=this.routingData.devicesList.find(elt=>elt.deviceId===currentDeviceId);return device?(this.logger.info("[TelephonyServiceSipWise] setCurrentDevice for device: "+device.deviceId+" / type : "+device.type),"outOfService"===device.state&&this.logger.error("[TelephonyServiceSipWise] setCurrentDevice anomaly - current device outOfService"),this.routingData.devicesList.forEach(elt=>{elt.main=!1}),device.main=!0,!0):(this.logger.error("[TelephonyServiceSipWise] setCurrentDevice anomaly - current device not found / for device "+currentDeviceId),!1)}setRingingDevice(ringingDeviceId){const destinations=[];if(!this.getCurrentDevice()||!ringingDeviceId)return this.logger.info("[TelephonyServiceSipWise] setRingingDevice : Anomaly no current device"),null;const webrtcDeviceId=this.getDeviceIdWithType("webrtc");if(!webrtcDeviceId)return this.logger.info("[TelephonyServiceSipWise] setRingingDevice : Anomaly no webrtc device"),null;destinations.push(webrtcDeviceId);const officePhoneDeviceId=this.getDeviceIdWithType("sip");return officePhoneDeviceId&&ringingDeviceId===officePhoneDeviceId&&destinations.push(officePhoneDeviceId),destinations}async putUserRoutingInfo(currentDeviceId,destinations){try{if(this.logger.info("[TelephonyServiceSipWise] putUserRoutingInfo : currentId = "+currentDeviceId+" destinations = "+destinations),!currentDeviceId&&!destinations){const error=new Error("set routing failure - missing para");throw this.logger.error("[TelephonyServiceSipWise] putUserRoutingInfo anomaly: missing para"),error}const reqData={};if(currentDeviceId){const device=this.routingData.devicesList.find(elt=>elt.deviceId===currentDeviceId);if(!device){const error=new Error("Anomaly putUserRoutingInfo - current device not found");throw this.logger.error("[TelephonyServiceSipWise] putUserRoutingInfo anomaly - current device not found"),error}if(this.logger.info("[TelephonyServiceSipWise] putUserRoutingInfo found device with state : "+device.state),"inService"!==device.state){const error=new Error("Anomaly putUserRoutingInfo - current device outOfService");throw this.logger.error("[TelephonyServiceSipWise] putUserRoutingInfo anomaly - current device outOfService"),error}reqData.currentDeviceId=currentDeviceId}if(destinations&&destinations.length>=1)reqData.destinations=destinations;else{const implicitDestinations=this.setRingingDevice(currentDeviceId);implicitDestinations&&implicitDestinations.length>=1&&(reqData.destinations=implicitDestinations)}const url=new URL(this.portalURL+"routing"),headers=this.authService.getPostHeader(),body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] putUserRoutingInfo PUT "+url),this.logger.info("[TelephonyServiceSipWise] putUserRoutingInfo data: "+body);const response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] putUserRoutingInfo success "),currentDeviceId&&this.setCurrentDevice(currentDeviceId),this.patchNomadicData(),this.eventService.publish("ON_SIPWISE_ROUTING_EVENT",this.getCurrentDevice().type,this.routingData)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"putUserRoutingInfo");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getUserRoutingInfo(){try{if(this.logger.info("[TelephonyServiceSipWise] getUserRoutingInfo"),this.routingData.devicesList.length<1)return void this.logger.info("[TelephonyServiceSipWise] getUserRoutingInfo : sipWise devices not yet avalaible");const url=new URL(this.portalURL+"routing"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] routing GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] getUserRoutingInfo success / status : "+response.statusText);const currentDeviceId=respData.currentDeviceId,destinations=respData.destinations;if(!currentDeviceId){const error=new Error("Anomaly getUserRoutingInfo - no current device");throw this.logger.error("[TelephonyServiceSipWise] [TEL] getUserRoutingInfo anomaly - no current device"),error}{const device=this.routingData.devicesList.find(elt=>elt.deviceId===currentDeviceId);if(!device){const error=new Error("Anomaly getUserRoutingInfo - current device not found");throw this.logger.error("[TelephonyServiceSipWise] [TEL] getUserRoutingInfo anomaly - current not found"),error}if("outOfService"===device.state){const error=new Error("Anomaly getUserRoutingInfo - current device outOfService");throw this.logger.error("[TelephonyServiceSipWise] [TEL] getUserRoutingInfo anomaly - current device outOfService"),error}if(this.logger.info("[TelephonyServiceSipWise] [TEL] getUserRoutingInfo current : "+currentDeviceId+" type = "+device.type),!this.setCurrentDevice(currentDeviceId))throw new Error("Anomaly getUserRoutingInfo - setCurrentDevice error")}if(!destinations){const error=new Error("Anomaly getUserRoutingInfo - no destination");throw this.logger.error("[TelephonyServiceSipWise] getUserRoutingInfo anomaly - no destination "),error}this.routingData.ringingDestinations=destinations,this.logger.info("[TelephonyServiceSipWise] getUserRoutingInfo  / ringing destinations nb  = "+destinations.length),this.routingData.alsoOfficePhoneRingEnabled=-1!==this.routingData.ringingDestinations.findIndex(elt=>"sip"===elt.type),this.patchNomadicData(),this.eventService.publish("ON_SIPWISE_ROUTING_EVENT",this.getCurrentDevice().type,this.routingData)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getUserRoutingInfo");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}patchNomadicData(){const current=this.getCurrentDevice();this.logger.info("[TelephonyServiceSipWise] patchNomadicData current type =  "+current.type),current&&"webrtc"===current.type?(this.telephonyService.nomadicObject.destination=this.webrtcGatewayService.getMyMediaPillarRemoteExtension(),this.webrtcGatewayService.isMediaPillarAvailable()?(this.telephonyService.nomadicObject.featureActivated=!0,this.telephonyService.nomadicObject.modeActivated=!0,this.telephonyService.nomadicObject.makeCallInitiatorIsMain=!1):(this.telephonyService.nomadicObject.featureActivated=!0,this.telephonyService.nomadicObject.modeActivated=!1,this.telephonyService.nomadicObject.makeCallInitiatorIsMain=!1)):(this.telephonyService.nomadicObject={},this.telephonyService.nomadicObject.destination="",this.telephonyService.nomadicObject.featureActivated=!0,this.telephonyService.nomadicObject.modeActivated=!1,this.telephonyService.nomadicObject.makeCallInitiatorIsMain=!0),this.logger.info("[TelephonyServiceSipWise] patchNomadicData nomadicObject (desti/modeAct/CallIsMain) = "+this.telephonyService.nomadicObject.destination+"/"+this.telephonyService.nomadicObject.modeActivated+"/"+this.telephonyService.nomadicObject.makeCallInitiatorIsMain),this.eventService.publish("ON_CALL_NOMADIC_EVENT",this.telephonyService.nomadicObject)}async getUserDevices(){try{this.logger.info("[TelephonyServiceSipWise] getUserDevices");const url=new URL(this.portalURL+"devices"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] devices GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=await response.json();if(this.logger.info("[TelephonyServiceSipWise] getUserDevices success / status : "+response.statusText),respData.forEach(device=>{const sipDevice={type:device.type,id:device.id,deviceId:device.deviceId,jid_wrg:"",extension:"",state:"",main:!1};"webrtc"===device.type?(sipDevice.main=!1,sipDevice.jid_wrg=device.jid_wrg,this.routingData.devicesList.unshift(sipDevice)):this.routingData.devicesList.push(sipDevice),device.monolineIncomingMode&&(this.logger.info("[TelephonyServiceSipWise] [TEL] getUserDevices -- monolineIncomingMode is activated"),this.monolineIncomingMode=!0),this.logger.info("[TelephonyServiceSipWise] [TEL] getUserDevices : deviceId = "+device.deviceId+" type = "+device.type)}),!(this.routingData.devicesList.length>=1)){const error=new Error("Anomaly getUserDevices - no device");throw this.logger.error("[TelephonyServiceSipWise] getUserDevices anomaly - no device"),error}this.logger.info("[TelephonyServiceSipWise] [TEL] getUserDevices  : "+this.routingData.devicesList.length+" device(s)"),"webrtc"!==this.routingData.devicesList[0].type&&this.logger.error("[TelephonyServiceSipWise] getUserDevices anomaly - no webrtc device")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"devices");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getCliOptionsCurrent(){try{this.logger.info("[TelephonyServiceSipWise] getCliOptionsCurrent");const url=new URL(this.portalURL+"cli-options/current"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getCliOptionsCurrent GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] getCliOptionsCurrent success / status : "+response.statusText);return cli_model_1.CliOption.createRoutineFromData(respData)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCliOptionsCurrent");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getCliOptionsAll(){try{this.logger.info("[TelephonyServiceSipWise] getCliOptionsAll");const url=new URL(this.portalURL+"cli-options"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getCliOptionsAll GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] getCliOptionsAll success / status : "+response.statusText);const cliOptions=[];return respData.forEach(cliOption=>{cliOptions.push(cli_model_1.CliOption.createRoutineFromData(cliOption))}),cliOptions}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getCliOptionsAll");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async setCliOption(cliOption){if(!cliOption||!cliOption.policy){const error="wrong parameters",errorInfo=await this.errorHelperService.getErrorInfo(error,"setCliOption");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}try{const headers=this.authService.getPostHeader(),reqMethod="PUT",reqUrl=this.portalURL+"cli-options";this.logger.info("[TelephonyServiceSipWise] Set cli-options "+reqMethod+" "+reqUrl);const body=JSON.stringify(cliOption),response=await fetch(reqUrl,{method:reqMethod,headers:headers,body:body});if(!response.ok)throw response;const newCliOption=(await response.json()).data;return this.logger.debug("[TelephonyServiceSipWise] Set cli-options -- SUCCESS -- "),newCliOption}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cli-options");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getClirOption(){try{const headers=this.authService.getPostHeader(),reqMethod="GET",reqUrl=this.portalURL+"clir-options";this.logger.info("[TelephonyServiceSipWise] Get clir-options "+reqMethod+" "+reqUrl);const response=await fetch(reqUrl,{method:reqMethod,headers:headers});if(!response.ok)throw response;const clirActivated=(await response.json()).data.anonymous;return this.logger.debug("[TelephonyServiceSipWise] Get clir-options -- SUCCESS -- "),clirActivated}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"clir-options");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async setClirOption(clirActivation){try{const headers=this.authService.getPostHeader(),reqMethod="PUT",reqUrl=this.portalURL+"clir-options";this.logger.info("[TelephonyServiceSipWise] Set clir-options "+reqMethod+" "+reqUrl);const body=JSON.stringify({anonymous:clirActivation}),response=await fetch(reqUrl,{method:reqMethod,headers:headers,body:body});if(!response.ok)throw response;const newClirOption=(await response.json()).data;return this.logger.debug("[TelephonyServiceSipWise] Set clir-options -- SUCCESS -- "),newClirOption}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"clir-options");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getUserGroups(){try{this.logger.info("[TelephonyServiceSipWise] getUserGroups");const url=new URL(this.portalURL+"groups"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] groups GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] getUserGroups success / status : "+response.statusText),this.telephonyService.sipWiseUserGroupsDataClear(),respData.length>0&&(this.telephonyService.sipWiseUserGroupsData.myMemberId=this.contactService.userContact.dbId,respData.forEach(group=>{this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.push(group);const mngAssistAsHG="hunting_group"===group.type&&"manager_assistant"===group.subType,attendantAsHG="hunting_group"===group.type&&"hg_attendant"===group.subType;if(("hunting_group"!==group.type||mngAssistAsHG||attendantAsHG)&&"call_queue"!==group.type||this.telephonyService.sipWiseUserGroupsData.huntingGroupNb++,mngAssistAsHG){this.telephonyService.sipWiseUserGroupsData.isSomeMngAssistAsHG=!0;group.members.find(elt=>"leader"===elt.roles[0])?group.members[0].memberId===this.contactService.userContact.dbId?group.members.forEach(member=>{"assistant"===member.roles[0]&&this.telephonyService.sipWiseUserGroupsData.managerAssistantMyAssistList.push({id:member.memberId,status:member.status})}):this.telephonyService.sipWiseUserGroupsData.managerAssistantMyMngList.push({id:group.members[0].memberId,status:group.members[0].status}):this.logger.info("[TelephonyServiceSipWise] getUserGroups for groupId : "+group.id+" Anomaly not 1 only manager in 1st pos")}else if("manager_assistant"===group.type)if(this.telephonyService.sipWiseUserGroupsData.managerAssistantNb++,1===this.telephonyService.sipWiseUserGroupsData.managerAssistantNb){const onlyManager=group.members.find(elt=>"manager"===elt.roles[0]);onlyManager?(this.telephonyService.sipWiseUserGroupsData.managerAssistGrId=group.id,this.telephonyService.sipWiseUserGroupsData.managerId=onlyManager.memberId,this.telephonyService.sipWiseUserGroupsData.managerName=onlyManager.displayName,this.telephonyService.sipWiseUserGroupsData.managerStatus=onlyManager.status):this.logger.info("[TelephonyServiceSipWise] getUserGroups for groupId : "+group.id+" Anomaly not 1 only manager");const onlyAssistant=group.members.find(elt=>"assistant"===elt.roles[0]);onlyAssistant?(this.telephonyService.sipWiseUserGroupsData.assistantId=onlyAssistant.memberId,this.telephonyService.sipWiseUserGroupsData.assistantName=onlyAssistant.displayName,this.telephonyService.sipWiseUserGroupsData.assistantStatus=onlyAssistant.status):this.logger.info("[TelephonyServiceSipWise] getUserGroups for groupId : "+group.id+" Anomaly not 1 only assistant")}else this.logger.info("[TelephonyServiceSipWise] getUserGroups : Anomaly not a 1:1 mng/ass situation")})),this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length>=1?this.logger.info("[TelephonyServiceSipWise] getUserGroups  : "+this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length+" user's group(s)"):this.logger.info("[TelephonyServiceSipWise] getUserGroups  : no group")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getUserGroups");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async joinGroup(groupId,leaderId){try{this.logger.info("[TelephonyServiceSipWise] joinGroup for groupId : "+groupId+" leaderId:"+leaderId);let wrongParaMsg="",indexGroup=-1;if(groupId?0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length?wrongParaMsg="no group":(indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===groupId),-1===indexGroup&&(wrongParaMsg="group not found")):wrongParaMsg="missing groupId",leaderId){if(!this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.find(group=>"hunting_group"===group.type&&"manager_assistant"===group.subType&&group.members[0].memberId===leaderId)){const errorMessage="sipwise joinGroup -- invalid leaderId";return void this.logger.error("[telephonyService] "+errorMessage)}}if(""!==wrongParaMsg){const error=new Error("join group failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] join group anomaly:"+wrongParaMsg),error}let urlQueryParams="";leaderId&&(urlQueryParams="?leaderId="+leaderId);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/join"+urlQueryParams),headers=this.authService.getPostHeader();this.logger.info("[TelephonyServiceSipWise] joinGroup POST "+url);const response=await fetch(url.toString(),{method:"POST",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] joinGroup success / status : "+response.statusText),indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===respData.id),-1!==indexGroup?this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.splice(indexGroup,1,respData):this.logger.info("[TelephonyServiceSipWise] joinGroup  : anomaly group not present in local struct")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinGroup");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async leaveGroup(groupId,leaderId){try{this.logger.info("[TelephonyServiceSipWise] leaveGroup for groupId : "+groupId+" leaderId:"+leaderId);let wrongParaMsg="",indexGroup=-1;if(groupId?0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length?wrongParaMsg="no group":(indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===groupId),-1===indexGroup&&(wrongParaMsg="group not found")):wrongParaMsg="missing groupId",leaderId){if(!this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.find(group=>"hunting_group"===group.type&&"manager_assistant"===group.subType&&group.members[0].memberId===leaderId)){const errorMessage="sipwise leaveGroup -- invalid leaderId";return void this.logger.error("[telephonyService] "+errorMessage)}}if(""!==wrongParaMsg){const error=new Error("leave group failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] leave Group anomaly:"+wrongParaMsg),error}let urlQueryParams="";leaderId&&(urlQueryParams="?leaderId="+leaderId);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/leave"+urlQueryParams),headers=this.authService.getPostHeader();this.logger.info("[TelephonyServiceSipWise] leave Group POST "+url);const response=await fetch(url.toString(),{method:"POST",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] leave group success / status : "+response.statusText),indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===respData.id),-1!==indexGroup?this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.splice(indexGroup,1,respData):this.logger.info("[TelephonyServiceSipWise] leaveGroup  : anomaly group not present in local struct")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"leaveGroup");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async joinAllGroups(subType="default"){try{this.logger.info("[TelephonyServiceSipWise] joinAllGroups");let wrongParaMsg="";if(0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length&&(wrongParaMsg="no group"),"default"!==subType&&"manager_assistant"!==subType&&"hg_attendant"!==subType&&(wrongParaMsg="wrong group subType"),""!==wrongParaMsg){const error=new Error("joinAllGroups failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] join all groups anomaly:"+wrongParaMsg),error}let urlQueryParams="";"default"!==subType&&(urlQueryParams="?subType="+subType);const url=new URL(this.portalURL+"groups/join"+urlQueryParams),headers=this.authService.getPostHeader();this.logger.info("[TelephonyServiceSipWise] joinAllGroups POST "+url);const response=await fetch(url.toString(),{method:"POST",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] joinAllGroups success / status : "+response.statusText),respData.forEach(group=>{const indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===group.id);-1!==indexGroup?this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.splice(indexGroup,1,group):this.logger.info("[TelephonyServiceSipWise] joinAllGroups  : anomaly group not present in local struct")})}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinAllGroups");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async leaveAllGroups(subType="default"){try{this.logger.info("[TelephonyServiceSipWise] leaveAllGroups");let wrongParaMsg="";if(0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length&&(wrongParaMsg="no group"),"default"!==subType&&"manager_assistant"!==subType&&"hg_attendant"!==subType&&(wrongParaMsg="wrong group subType"),""!==wrongParaMsg){const error=new Error("leaveAllGroups failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] leave all groups anomaly:"+wrongParaMsg),error}let urlQueryParams="";"default"!==subType&&(urlQueryParams="?subType="+subType);const url=new URL(this.portalURL+"groups/leave"+urlQueryParams),headers=this.authService.getPostHeader();this.logger.info("[TelephonyServiceSipWise] leaveAllGroups POST "+url);const response=await fetch(url.toString(),{method:"POST",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;return this.logger.info("[TelephonyServiceSipWise] leaveAllGroups success / status : "+response.statusText),respData.forEach(group=>{const indexGroup=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.findIndex(elt=>elt.id===group.id);-1!==indexGroup?this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.splice(indexGroup,1,group):this.logger.info("[TelephonyServiceSipWise] leaveAllGroups  : anomaly group not present in local struct")}),response}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"leaveAllGroups");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async removeMemberFromGroup(groupId,memberId){try{this.logger.info("[TelephonyServiceSipWise] removeMemberFromGroup - groupId: "+groupId+" - memberId: "+memberId);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/members/"+encodeURIComponent(memberId)),headers=this.authService.getPostHeader(),response=await fetch(url.toString(),{method:"DELETE",headers:headers});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] removeMemberFromGroup success / status : "+response.statusText)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeMemberFromGroup");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async addMemberFromGroup(groupId,memberId){try{this.logger.info("[TelephonyServiceSipWise] addMemberFromGroup - groupId: "+groupId+" - memberId: "+memberId);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/members"),headers=this.authService.getPostHeader(),reqData={memberId:memberId,status:"idle"},body=JSON.stringify(reqData),response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] addMemberFromGroup success / status : "+response.statusText)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addMemberFromGroup");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async changeMemberRole(groupId,memberId,isAgent,isManager){try{this.logger.info("[TelephonyServiceSipWise] changeMemberRole - groupId: "+groupId+" - memberId: "+memberId+" - isAgent: "+isAgent.toString()+" - isManager: "+isManager.toString());const roles=[],url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/members/"+encodeURIComponent(memberId)),headers=this.authService.getPostHeader();isAgent&&roles.push("agent"),isManager&&roles.push("manager");const reqData={roles:roles},body=JSON.stringify(reqData),response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] DemoteMemberToAgent success / status : "+response.statusText)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"DemoteMemberToAgent");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async changeMemberStatus(groupId,memberId,withdraw){try{const status=withdraw?"idle":"active";this.logger.info("[TelephonyServiceSipWise] changeMemberStatus - groupId: "+groupId+" - memberId: "+memberId+" - status:"+status);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/members/"+encodeURIComponent(memberId)),headers=this.authService.getPostHeader(),reqData={status:status},body=JSON.stringify(reqData),response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] PromoteMemberToManager success / status : "+response.statusText)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"PromoteMemberToManager");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async setUserGroupForward(groupId,callForwardType,forwardData){try{this.logger.info("[TelephonyServiceSipWise] setUserGroupForward for groupId : "+groupId);let wrongParaMsg="";if(groupId?0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length&&(wrongParaMsg="invalid groupId"):wrongParaMsg="missing groupId",""!==wrongParaMsg){const error=new Error("set group forward failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] set group forward anomaly:"+wrongParaMsg),error}const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/forwards/"+encodeURIComponent(callForwardType)),headers=this.authService.getPostHeader(),body=JSON.stringify(forwardData);this.logger.info("[TelephonyServiceSipWise] setUserGroupForward PUT "+url),this.logger.info("[TelephonyServiceSipWise] setUserGroupForward data: "+body);const response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] setUserGroupForward success / status : "+response.statusText)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setUserGroupForward");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getUserGroupForwards(groupId){try{this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards for groupId : "+groupId);let wrongParaMsg="";if(groupId?0===this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length&&(wrongParaMsg="invalid groupId"):wrongParaMsg="missing groupId",""!==wrongParaMsg){const error=new Error("get group forward failure - "+wrongParaMsg);throw this.logger.error("[TelephonyServiceSipWise] get group forward anomaly:"+wrongParaMsg),error}const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)+"/forwards"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data,group=this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.find(elt=>elt.id===groupId);if(group.name!==respData.name){this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards Anomaly group name : "+group.name+" VS "+respData.name);const errorInfo=await this.errorHelperService.getErrorInfo(response,"getUserGroupForwards");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}if(group.forwardData=respData,groupId===this.telephonyService.sipWiseUserGroupsData.managerAssistGrId)if(this.telephonyService.sipWiseUserGroupsData.managerAssistantNb>1)this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards : Anomaly not a 1:1 mng/ass situation");else{let fwdActivate="unknown";const mng=respData.members.find(elt=>elt.memberId===this.telephonyService.sipWiseUserGroupsData.managerId);if(mng&&mng.displayName===this.telephonyService.sipWiseUserGroupsData.managerName){const fwd=mng.forwards.find(elt=>"immediate"===elt.type);fwdActivate=fwd&&fwd.activate&&"managersecretary"===fwd.destinationType?"activated":"unactivated"}else this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards : Anomaly manager forward status");this.telephonyService.sipWiseUserGroupsData.managerForward=fwdActivate}return this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards success / status : "+response.statusText),group}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getUserGroupForwards");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getAllUserGroupsForwards(){this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsForwards");const getGroupPromises=[];if(0!==this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.length)if(this.telephonyService.sipWiseUserGroupsData.sipWiseUserGroupsList.forEach(group=>{"manager_assistant"===group.type&&getGroupPromises.push(this.getUserGroupForwards(group.id))}),0!==getGroupPromises.length)try{await Promise.all(getGroupPromises),this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsForwards -- group forward completed -- "+getGroupPromises.length+" group(s) forward updated")}catch(error){throw this.logger.error("[TelephonyServiceSipWise] getAllUserGroupsForwards -- group forward failure -- "+error.message),error}else this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsForwards / no manager assistant group");else this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsForwards / no group")}async getAllUserGroupsPhoneNumberDDI(isAssignedToUser=!1){try{this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsPhoneNumberDDI");const url=new URL(this.portalURL+"phone-numbers/ddi");url.searchParams.set("isAssignedToUser",isAssignedToUser?"true":"false");const headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getAllUserGroupsPhoneNumberDDI GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const responseBody=await response.json();return responseBody.data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAllUserGroupsPhoneNumberDDI");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async updateHuntingGroup(groupId,externalNumberId){try{this.logger.info("[TelephonyServiceSipWise] updateHuntingGroup: "+groupId);const url=new URL(this.portalURL+"groups/"+encodeURIComponent(groupId)),headers=this.authService.getPostHeader(),reqData={externalNumberId:externalNumberId},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] updateHuntingGroup PUT "+url);const response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;return void this.logger.info("[TelephonyServiceSipWise] updateHuntingGroup success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"updateHuntingGroup");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async searchHuntingGroups(searchText,limit=20){try{if(this.logger.info("[TelephonyServiceSipWise] searchHuntingGroups: "+searchText),!this.telephonyService||!this.telephonyService.isSipWise())return this.logger.debug("[TelephonyServiceSipWise] searchHuntingGroups -- Request ignored as SipWise telephony not running"),[];const url=new URL(this.portalURL+"search/huntinggroups");url.searchParams.set("name",searchText);const headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getUserGroupForwards GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] searchHuntingGroups success");const huntingGroups=respData.map(huntingGroup=>{const contact=this.contactService.createBasicContact(null,huntingGroup.shortNumber,!1);return contact.updateName(null,huntingGroup.name),contact.phoneInternalNumber=huntingGroup.shortNumber,contact.phonePersoCan=huntingGroup.externalNumber?huntingGroup.externalNumber:"",contact.dbId=huntingGroup.id,contact.getAvatar(),contact});return huntingGroups.splice(limit),huntingGroups}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchHuntingGroups");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getAutomatedAttendantsList(){try{this.logger.info("[TelephonyServiceSipWise] getAutomatedAttendantsList");const url=new URL(this.portalURL+"auto-attendants"),automatedAttendants=[],headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getAutomatedAttendantsList GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;return this.logger.info("[TelephonyServiceSipWise] getAutomatedAttendantsList success"),respData&&respData.length>0&&respData.forEach(automatedAttendant=>{automatedAttendants.push({id:automatedAttendant.id,label:automatedAttendant.name})}),automatedAttendants}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getAutomatedAttendantsList");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getSnapshot(call,deviceId,seqNum){try{this.logger.info("[TelephonyServiceSipWise] getSnapshot");const url=new URL(this.portalURL+"snapshot");call&&(this.logger.info("[TelephonyServiceSipWise] snapshot with callId "+call.id),url.searchParams.set("callId",call.id)),deviceId&&(this.logger.info("[TelephonyServiceSipWise] snapshot with deviceId "+deviceId),url.searchParams.set("deviceId",deviceId)),seqNum&&(this.logger.info("[TelephonyServiceSipWise] snapshot with seqNum "+seqNum),url.searchParams.set("seqNum",seqNum));const headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] snapshot GET "+url.toString());const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;return this.logger.info("[TelephonyServiceSipWise] getSnapshot success / status : "+response.statusText),respData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"devices");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async processSnapshot(){try{this.logger.info("[TelephonyServiceSipWise] processSnapshot");const MAXSNAPCALLS=10,MAXSNAPRINGINGIN=10;let nbRingingIn=0;const respData=await this.getSnapshot();respData&&respData.devices?respData.devices.forEach(snapDevice=>{this.routingData.devicesList.find(device=>device.deviceId===snapDevice.deviceId).state=snapDevice.state,this.logger.info("[TelephonyServiceSipWise] processSnapshot / devicesId="+snapDevice.deviceId+"; state="+snapDevice.state),this.routingData.devicesList.find(device=>device.deviceId===snapDevice.deviceId).state="inService"}):this.logger.error("[TelephonyServiceSipWise] processSnapshot / anomaly no device ");const createCallPromises=[];if(!respData||!respData.calls)return void this.logger.info("[TelephonyServiceSipWise] processSnapshot / no call elt");if(respData.calls.length>MAXSNAPCALLS)return void this.logger.error("[TelephonyServiceSipWise] processSnapshot / anomaly to much calls : "+respData.calls.length);if(respData.calls.forEach(snapCall=>{"ringingIn"===snapCall.legs[0].state&&(nbRingingIn++,nbRingingIn>=MAXSNAPRINGINGIN&&this.logger.info("[TelephonyServiceSipWise] processSnapshot / anomaly to much ringingIn calls : "+nbRingingIn)),nbRingingIn<MAXSNAPRINGINGIN&&createCallPromises.push(this.createCallFromSnapShotCallsElt(snapCall))}),0===createCallPromises.length)return void this.logger.info("[TelephonyServiceSipWise] processSnapshot / anomaly no call created");try{await Promise.all(createCallPromises),this.logger.info("[TelephonyServiceSipWise] processSnapshot -- calls creation completed -- "+createCallPromises.length+" calls created")}catch(error){throw this.logger.error("[TelephonyServiceSipWise] processSnapshot -- calls creation failure -- "+error.message),error}}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"processSnapshot");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async createCallFromSnapShotCallsElt(snapShotCallsElt){try{let call=null;this.logger.info("[TelephonyServiceSipWise] createCallFromSnapShotCallsElt - callId = "+snapShotCallsElt.callId);let leg=null,legId=null,deviceId=null,state=null,endPoint=null,phoneNumber=null,jid=null,displayName=null;if(!snapShotCallsElt.legs){const errorMessage="createCallFromSnapShotCallsElt -- Anomaly no leg";return void this.logger.error("[TelephonyServiceSipWise] "+errorMessage)}{const myMainDevice=this.getCurrentDevice();if(null===myMainDevice){const errorMessage="createCallFromSnapShotCallsElt -- Anomaly no current device";this.logger.error("[TelephonyServiceSipWise] "+errorMessage),leg=snapShotCallsElt.legs[0]}else leg=snapShotCallsElt.legs.find(elt=>elt.deviceId===myMainDevice.id),leg||(leg=snapShotCallsElt.legs[0]);legId=leg.legId?leg.legId:null,deviceId=leg.deviceId?leg.deviceId:null,state=this.telephonyService.telephonyEventHandler.convLegStateToCallStatus(leg.state),this.logger.info("[TelephonyServiceSipWise] createCallFromSnapShotCallsElt - legId = "+legId+" deviceId = "+deviceId+" leg_state = "+leg.state)}if(!snapShotCallsElt.endpoints)return void this.logger.info("[TelephonyServiceSipWise] createCallFromSnapShotCallsElt -- No endPoint provided !");if(endPoint=snapShotCallsElt.endpoints[0],phoneNumber=endPoint.phoneNumber,jid=endPoint.jid,displayName=endPoint.displayName,jid||phoneNumber){const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);return jid||contact.displayName||(contact.displayName=displayName,contact.initials=displayName.charAt(0),contact.getAvatar()),call=this.telephonyService.getOrCreateCallSipWise(state,snapShotCallsElt.callId,legId,deviceId,contact),call.relevantEquipmentId=deviceId,call.isSecondary=!1,this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}const errorMessage="createCallFromSnapShotCallsElt -- Anomaly no jid no phoneNumber";return void this.logger.error("[TelephonyServiceSipWise] "+errorMessage)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createCallFromSnapShotCallsElt");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async forwardToDevice(phoneNumber,destType,forwardType,userId){try{if(this.logger.info("[TelephonyServiceSipWise] forwardToDevice : phoneNumber = "+phoneNumber+" / destType = "+destType+" / fwtype = "+forwardType),!phoneNumber){const error=new Error("forward failure - missing phoneNumber");throw this.logger.error("[TelephonyServiceSipWise] forward anomaly: missing phoneNumber"),error}const url=new URL(this.portalURL+"forwards/"+encodeURIComponent(forwardType));userId&&url.searchParams.set("userId",userId);const headers=this.authService.getPostHeader(),reqData={number:phoneNumber,destinationType:destType,activate:!0},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] forwardToDevice PUT "+url),this.logger.info("[TelephonyServiceSipWise] forwardToDevice data: "+body);const response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;await response.json(),this.logger.info("[TelephonyServiceSipWise] forwardToDevice success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"forwardToDevice");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async cancelForward(forwardType,userId){try{if(this.logger.info("[TelephonyServiceSipWise] cancelForward :  fwtype = "+forwardType),!forwardType||"immediate"!==forwardType&&"busy"!==forwardType&&"noreply"!==forwardType){const error=new Error("cancel forward failure - wrong forwardType");throw this.logger.error("[TelephonyServiceSipWise] cancel forward anomaly: wrong forwardType"),error}const url=new URL(this.portalURL+"forwards/"+encodeURIComponent(forwardType));userId&&url.searchParams.set("userId",userId);const headers=this.authService.getPostHeader(),reqData={activate:!1},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] cancelForward PUT "+url),this.logger.info("[TelephonyServiceSipWise] cancelForward data: "+body);const response=await fetch(url.toString(),{method:"PUT",headers:headers,body:body});if(!response.ok)throw response;await response.json(),this.logger.info("[TelephonyServiceSipWise] cancelForward success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cancelForward");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async getForwardStatus(){try{this.logger.info("[TelephonyServiceSipWise] getForwardStatus");const url=new URL(this.portalURL+"forwards"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] forwards GET "+url.toString());const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;if(respData){this.logger.info("[TelephonyServiceSipWise] getForwardStatus success");const forwardObjectAdapter=this.convForwardObject(respData);return this.logger.info("[TelephonyServiceSipWise] [TEL] getForwardStatus immediat fwdtype = "+forwardObjectAdapter.immediate.forwardType+" immediat forwardTo = "+forwardObjectAdapter.immediate.forwardTo),forwardObjectAdapter.busy&&this.logger.info("[TelephonyServiceSipWise] [TEL] getForwardStatus busy activate = "+forwardObjectAdapter.busy.activate),forwardObjectAdapter.noreply&&this.logger.info("[TelephonyServiceSipWise] [TEL] getForwardStatus noreply activate = "+forwardObjectAdapter.noreply.activate),this.eventService.publish("ON_CALL_FORWARDED_EVENT",{forwardType:forwardObjectAdapter.immediate.forwardType,forwardTo:forwardObjectAdapter.immediate.forwardTo,pbxForwardType:"immediate"}),this.telephonyService.forwardObject.forwardType=forwardObjectAdapter.immediate.forwardType,this.telephonyService.forwardObject.forwardTo=forwardObjectAdapter.immediate.forwardTo,this.telephonyService.forwardObject.pbxForwardType="immediate",void((forwardObjectAdapter.busy||forwardObjectAdapter.noreply)&&(this.eventService.publish("ON_CALL_FORWARDED_CONDI_EVENT",{busy:forwardObjectAdapter.busy,noreply:forwardObjectAdapter.noreply}),this.telephonyService.forwardObject.busy=forwardObjectAdapter.busy,this.telephonyService.forwardObject.noreply=forwardObjectAdapter.noreply))}const error=new Error("getForwardStatus failure - invalide response");throw this.logger.error("[TelephonyServiceSipWise] getForwardStatus anomaly: invalide response"),error}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getForwardStatus");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}convForwardObject(sipWiseForwardData){const forwardAdapter={immediate:{forwardType:"Desactivation",forwardTo:""},busy:{},noreply:{},manAssist:{}};return sipWiseForwardData.forEach(forward=>{"immediate"===forward.type?(forward.activate&&("voicemail"===forward.destinationType?(forwardAdapter.immediate.forwardType="Activation",forwardAdapter.immediate.forwardTo="VOICEMAILBOX"):""!==forward.number&&(forwardAdapter.immediate.forwardType="Activation",forwardAdapter.immediate.forwardTo=forward.number)),"managersecretary"===forward.destinationType&&(forwardAdapter.immediate.forwardType=forward.activate,forwardAdapter.immediate.forwardTo="MANAGERASSISTANT",forwardAdapter.manAssist=forward)):"busy"===forward.type?forwardAdapter.busy=forward:"noreply"===forward.type&&(forwardAdapter.noreply=forward)}),forwardAdapter}async getOverFlowStatus(systemId,phoneNumberId){try{this.logger.info("[TelephonyServiceSipWise] getOverFlowStatus : systemId = "+systemId+" / phoneNumberId = "+phoneNumberId);const url=new URL(this.portalAdminURL+"cloudpbxs/"+encodeURIComponent(systemId)+"/subscribers/"+encodeURIComponent(phoneNumberId)+"/overflow/status"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getOverFlowStatus GET "+url.toString());const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;return this.logger.info("[TelephonyServiceSipWise] getOverFlowStatus activated: "+respData.activate),respData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getOverFlowStatus");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}getSettings(){return this.settings}async initializeSettings(){this.logger.info("[TelephonyServiceSipWise] initializeSettings");try{const url=new URL(this.portalURL+"settings"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] initializeSettings GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const data=(await response.json()).data;return this.settings=data,this.logger.info("[TelephonyServiceSipWise] initializeSettings success / status : "+response.statusText+" - emulatedRingBackTone : "+data.emulatedRingBackTone),data}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"initializeSettings");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}emergencyCallDataClear(){this.emergencyCallData={WGEmergencyCallForbidden:!1,emergencyNuList:[],serverData:null}}checkEmergencyNumber(phoneNumber){return this.emergencyCallData&&this.emergencyCallData.emergencyNuList.includes(phoneNumber)}async getEmergencyCallData(){try{const url=new URL(this.portalURL+"emergency-numbers"),headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] getEmergencyCallData GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok)throw response;const respData=(await response.json()).data;this.logger.info("[TelephonyServiceSipWise] getEmergencyCallDataSipWise success / status : "+response.statusText),this.logger.info("[TelephonyServiceSipWise] getEmergencyCallDataSipWise success / callAuthorizationWithSoftPhone  : "+respData.emergencyOptions.callAuthorizationWithSoftPhone),this.logger.info("[TelephonyServiceSipWise] getEmergencyCallDataSipWise success / nb of emergency Nu : "+respData.emergencyNumbers.length),this.emergencyCallDataClear(),this.emergencyCallData.WGEmergencyCallForbidden=!respData.emergencyOptions.callAuthorizationWithSoftPhone,this.emergencyCallData.serverData=respData.emergencyNumbers,respData.emergencyNumbers&&respData.emergencyNumbers.length>0&&respData.emergencyNumbers.forEach(emergNumbers=>{this.emergencyCallData.emergencyNuList.push(emergNumbers.number)}),"testemergency"===this.telephonyService.sipWiseMode()&&(this.emergencyCallData.WGEmergencyCallForbidden=!0,this.emergencyCallData.emergencyNuList.push("3669"))}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getEmergencyCallData");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async makeSimpleCall(contact,phoneNumber,calledNumber){try{if(this.logger.info("[TelephonyServiceSipWise] [TEL] makeSimpleCall to "+(contact?contact.nameForLogs:anonymizer_1.default(phoneNumber))),!this.telephonyService.isBasicCallAllowed){const profileError=new Error("makeSimpleCallSipWise failure - Not Allowed");throw profileError.status=profileError.errorDetailsCode="403",this.logger.error("[TelephonyServiceSipWise] [TEL] "+profileError.message),this.telephonyService.makingCall=!1,profileError}const phoneInfo=this.telephonyService.getPhoneInfo(contact,phoneNumber),currentDevice=this.getCurrentDevice(),deviceId=currentDevice?currentDevice.deviceId:"";if((this.emergencyCallData.WGEmergencyCallForbidden&&currentDevice&&"webrtc"===currentDevice.type||"testemergency"===this.telephonyService.sipWiseMode())&&this.checkEmergencyNumber(phoneNumber))throw this.logger.info("[TelephonyServiceSipWise] [TEL] makeVOIPSipemergencyCall - Not Allowed for num : "+phoneNumber),this.telephonyService.rxSubject.next({name:"ON_EMERGENCYCALL_VOIPSIP_NOTALLOWED_EVENT",data:phoneNumber}),this.telephonyService.makingCall=!1,new Error;const url=this.portalURL+"calls",headers=this.authService.getPostHeader(),reqData={deviceId:deviceId,calleeExtNumber:phoneInfo.longNumber,calleeShortNumber:phoneInfo.shortNumber,calleePbxId:phoneInfo.pbxId,callerAutoAnswer:!0};calledNumber&&(reqData.calledNumber=calledNumber);const body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] makeSimpleCall POST "+url),this.logger.info("[TelephonyServiceSipWise] makeSimpleCall data: "+body);const response=await fetch(url,{method:"POST",headers:headers,body:body});if(!response.ok)throw response;const responseBody=await response.json(),respCallId=responseBody.data.callId;if(this.logger.info("[TelephonyServiceSipWise] [TEL] makeSimpleCall - success : callee "+anonymizer_1.default(phoneNumber)+" / callId = "+respCallId),!respCallId||""===respCallId){const call=call_model_1.Call.create(call_model_1.Call.Status.ERROR,null,call_model_1.Call.Type.PHONE,contact);call.errorMessage="unexpectedError",this.telephonyService.calls[call.contact.id]=call,call.autoClear=setTimeout(()=>{this.telephonyService.clearCall(call)},5e3),this.telephonyService.makingCall=!1,this.eventService.publish("ON_CALL_UPDATED_EVENT",call);const errorInfo=await this.errorHelperService.getErrorInfo(response,"makeCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}const call=this.telephonyService.getOrCreateCallSipWise(call_model_1.Call.Status.DIALING,respCallId,null,null,contact);return call.setRelevantEquipmentId(call.getDeviceIdSipWise()),call.isOwner=!0,this.logger.info("[TelephonyServiceSipWise] makeSimpleCall Call created ("+call+")"),call.setIsVm(phoneNumber===this.telephonyService.voicemailNumber),call.autoClear=setTimeout(()=>{this.logger.info("[TelephonyServiceSipWise] keepAlive CallReset ("+call+")"),this.telephonyService.clearCall(call)},1e4),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call.id}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"makeCall");this.logger.error("[TelephonyServiceSipWise] [TEL] "+errorInfo.message);const call=call_model_1.Call.create(call_model_1.Call.Status.ERROR,null,call_model_1.Call.Type.PHONE,contact);throw call.errorMessage="403"===errorInfo.error.errorDetailsCode?"notAllowed":"invalidPhoneNumber",this.telephonyService.calls[call.contact.id]=call,call.autoClear=setTimeout(()=>{this.telephonyService.clearCall(call)},5e3),call.publish("ON_CALL_UPDATED_EVENT"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),errorInfo.error}finally{this.telephonyService.makingCall=!1}}async releaseCall(call){try{this.logger.info("[TelephonyServiceSipWise] [TEL] releaseCall "+call.id);const url=this.portalURL+"calls/"+encodeURIComponent(call.id),headers=this.authService.getPostHeader(),reqData={legId:call.connectionId?call.connectionId:""},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] releaseCall DELETE "+url),this.logger.info("[TelephonyServiceSipWise] releaseCall data: "+body);const response=await fetch(url,{method:"DELETE",headers:headers,body:body});if(!response.ok){const errorInfo=await this.errorHelperService.getErrorInfo(response,"releaseCall responseKo");throw this.logger.error("[TelephonyServiceSipWise] [TEL] "+errorInfo.message),response}return call.setStatus(call_model_1.Call.Status.UNKNOWN),call.startDate=null,call.setIsVm(!1),this.logger.info("[TelephonyServiceSipWise] [TEL] releaseCall "+call.id+" - success"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),delete this.telephonyService.calls[call.id],call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"releaseCall");throw this.logger.error("[TelephonyServiceSipWise] [TEL] "+errorInfo.message),this.deleteCallIfInvalid(errorInfo.error,call),errorInfo.error}}deleteCallIfInvalid(error,call){error&&"voice"===error.portal&&404201===error.errorDetailsCode&&"Specified leg not found"===error.errorDetails&&call&&(this.logger.warn("[TelephonyServiceSipWise] deleteCallIfInvalid: delete client call non existing on server: "+call.id),call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),this.telephonyService.calls[call.id]&&delete this.telephonyService.calls[call.id])}async answerCall(call){try{this.logger.info("[TelephonyServiceSipWise] answerCall : "+call.id);const url=new URL(this.portalURL+"calls/"+encodeURIComponent(call.id)+"/answer"),headers=this.authService.getPostHeader(),reqData={legId:call.connectionId},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] answerCall POST "+url),this.logger.info("[TelephonyServiceSipWise] answerCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return call.setStatus(call_model_1.Call.Status.ACTIVE),this.logger.info("[TelephonyServiceSipWise] answerCall success : "+anonymizer_1.default(call.contact.phone)+" Call ("+call+")"),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"answerCall");throw this.logger.error("[TelephonyServiceSipWise] [TEL] "+errorInfo.message),this.logger.info("[TelephonyServiceSipWise] answerCall fail : error = "+errorInfo.error.errorCode+" msg = "+errorInfo.error.errorMsg+" details = "+errorInfo.error.errorDetails),errorInfo.error&&"Device is not able to answer a call"===errorInfo.error.errorDetails&&this.mainService.showGlobalPopupMessage({autoClose:!1,okLabel:"close",popupTitle:"warning",popupBody:"deviceDoesntAllowAnswer"}),call.setStatus(call_model_1.Call.Status.UNKNOWN),errorInfo.error}}async holdCall(call){try{this.logger.info("[TelephonyServiceSipWise] holdCall : "+call.id);const url=new URL(this.portalURL+"calls/"+encodeURIComponent(call.id)+"/hold"),headers=this.authService.getPostHeader(),reqData={legId:call.connectionId},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] holdCall POST "+url),this.logger.info("[TelephonyServiceSipWise] holdCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info("[TelephonyServiceSipWise] holdCall success : "+anonymizer_1.default(call.contact.phone)+" Call ("+call+")"),call.setStatus(call_model_1.Call.Status.HOLD),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"holdCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async retrieveCall(call){try{this.logger.info("[TelephonyServiceSipWise] retrieveCall : "+call.id);const url=new URL(this.portalURL+"calls/"+encodeURIComponent(call.id)+"/retrieve"),headers=this.authService.getPostHeader(),reqData={legId:call.connectionId},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] retrieveCall POST "+url),this.logger.info("[TelephonyServiceSipWise] retrieveCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;return this.logger.info("[TelephonyServiceSipWise] retrieveCall success : "+anonymizer_1.default(call.contact.phone)+" Call ("+call+")"),call.setStatus(call_model_1.Call.Status.ACTIVE),this.eventService.publish("ON_CALL_UPDATED_EVENT",call),call}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async deflectCall(call,destination){try{if(this.logger.info("[TelephonyServiceSipWise] deflectCall : "+call.id+" to destination : "+destination),!destination){const error=new Error("deflect failure - no destination");throw this.logger.error("[TelephonyServiceSipWise] deflect anomaly: no destination"),error}const url=new URL(this.portalURL+"calls/"+encodeURIComponent(call.id)+"/deflect"),headers=this.authService.getPostHeader(),reqData={destination:destination},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] deflectCall POST "+url),this.logger.info("[TelephonyServiceSipWise] deflectCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] deflectCall success :  Call ("+call+")")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deflectCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async transferCall(activeCall,heldCall){try{if(this.logger.info("[TelephonyServiceSipWise] transferCall : activeCall : "+activeCall.id+" heldCall : "+heldCall.id),!activeCall||!heldCall){const error=new Error("transfer failure - missing activeCall or heldCall");throw this.logger.error("[TelephonyServiceSipWise] transfer anomaly: missing calls ref"),error}const url=new URL(this.portalURL+"calls/"+encodeURIComponent(activeCall.id)+"/transfer"),headers=this.authService.getPostHeader(),reqData={heldCallId:heldCall.id},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] transferCall POST "+url),this.logger.info("[TelephonyServiceSipWise] transferCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] transferCall success : "+activeCall.id+"->"+heldCall.id)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deflectCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async blindTransferCall(activeCall,calleeNumber,destination){try{if(this.logger.info("[TelephonyServiceSipWise] blindTransferCall : activeCall : "+activeCall.id),!activeCall||!calleeNumber&&!destination){const error=new Error("blind transfer failure - missing activeCall or callee number");throw this.logger.error("[TelephonyServiceSipWise] blind transfer anomaly: missing calls ref or callee number"),error}const url=new URL(this.portalURL+"calls/"+encodeURIComponent(activeCall.id)+"/blind-transfer"),headers=this.authService.getPostHeader(),reqData={destination:void 0};calleeNumber?reqData.destination=calleeNumber:destination&&(reqData.destination=destination);const body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] blindTransferCall POST "+url),this.logger.info("[TelephonyServiceSipWise] blindTransferCall data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] blindTransferCall success :  Call ("+activeCall+")")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"blindTransferCall");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo&&errorInfo.error&&400995===errorInfo.error.errorDetailsCode&&this.mainService.showGlobalPopupMessage({autoClose:!1,okLabel:"close",popupTitle:"warning",popupBody:"blindTransferNotPossibleForUser"}),errorInfo.error}}async transferRouting(calleeId,addresseeId,addresseePhoneNumber){if(this.logger.info("[TelephonyServiceSipWise] transfer-routing "),!calleeId||!addresseeId&&!addresseePhoneNumber){const error="wrong parameters",errorInfo=await this.errorHelperService.getErrorInfo(error,"transferRouting");throw this.logger.error("[telephonyBlindTransfer] "+errorInfo.message),errorInfo.error}try{const url=new URL(this.portalURL+"transfer-routing");url.searchParams.set("calleeId",calleeId),addresseeId&&(this.logger.info("[TelephonyServiceSipWise] transferRouting with addresseeId "+addresseeId),url.searchParams.set("addresseeId",addresseeId)),addresseePhoneNumber&&(this.logger.info("[TelephonyServiceSipWise] transferRouting with addresseePhoneNumber "+addresseePhoneNumber),url.searchParams.set("addresseePhoneNumber",addresseePhoneNumber));const headers=this.authService.getRequestHeader();this.logger.info("[TelephonyServiceSipWise] transfer-routing GET "+url);const response=await fetch(url.toString(),{method:"GET",headers:headers});if(!response.ok){this.logger.debug("[TelephonyServiceSipWise] transfer-routing -- FAIL -- ");return await this.errorHelperService.getErrorInfo(response,"transfer-routing")}const transferData=(await response.json()).data;return this.logger.debug("[TelephonyServiceSipWise] transfer-routing -- SUCCESS -- "),transferData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"transfer-routing");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async sendDtmf(call,dtmf){try{this.logger.info("[TelephonyServiceSipWise] sendDtmf for callId : "+call.id+" dtmf : "+dtmf);const url=new URL(this.portalURL+"calls/"+encodeURIComponent(call.id)+"/sendDtmf"),headers=this.authService.getPostHeader(),reqData={legId:call.connectionId,digits:dtmf},body=JSON.stringify(reqData);this.logger.info("[TelephonyServiceSipWise] sendDtmf POST "+url),this.logger.info("[TelephonyServiceSipWise] sendDtmf data: "+body);const response=await fetch(url.toString(),{method:"POST",headers:headers,body:body});if(!response.ok)throw response;this.logger.info("[TelephonyServiceSipWise] sendDtmf success :  Call ("+call+")"),this.eventService.publish("ON_DTMF_SENT",dtmf)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"sendDtmf");throw this.logger.error("[TelephonyServiceSipWise] "+errorInfo.message),errorInfo.error}}async sipWiseGetCliOption(){try{const headers=this.authService.getPostHeader(),reqMethod="GET",reqUrl=this.portalURL+"cli-options";this.logger.info("[callRouting] Get cli-options "+reqMethod+" "+reqUrl);const response=await fetch(reqUrl,{method:reqMethod,headers:headers});if(!response.ok)throw response;const cliOption=(await response.json()).data;return this.logger.debug("[callRouting] Get cli-options -- SUCCESS -- "),cliOption}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cli-options");throw this.logger.error("[callRouting] "+errorInfo.message),errorInfo.error}}async sipWiseSetCliOption(cliOption){if(!cliOption||!cliOption.policy){const error="wrong parameters",errorInfo=await this.errorHelperService.getErrorInfo(error,"sipWiseSetCliOption");throw this.logger.error("[callRouting] "+errorInfo.message),errorInfo.error}try{const headers=this.authService.getPostHeader(),reqMethod="PUT",reqUrl=this.portalURL+"cli-options";this.logger.info("[callRouting] Set cli-options "+reqMethod+" "+reqUrl);const body=JSON.stringify(cliOption),response=await fetch(reqUrl,{method:reqMethod,headers:headers,body:body});if(!response.ok)throw response;const newCliOption=(await response.json()).data;return this.logger.debug("[callRouting] Set cli-options -- SUCCESS -- "),newCliOption}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"cli-options");throw this.logger.error("[callRouting] "+errorInfo.message),errorInfo.error}}async sipWiseGetClirOption(){try{const headers=this.authService.getPostHeader(),reqMethod="GET",reqUrl=this.portalURL+"clir-options";this.logger.info("[callRouting] Get clir-options "+reqMethod+" "+reqUrl);const response=await fetch(reqUrl,{method:reqMethod,headers:headers});if(!response.ok)throw response;const clirActivated=(await response.json()).data.anonymous;return this.logger.debug("[callRouting] Get clir-options -- SUCCESS -- "),clirActivated}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"clir-options");throw this.logger.error("[callRouting] "+errorInfo.message),errorInfo.error}}async sipWiseSetClirOption(clirActivation){try{const headers=this.authService.getPostHeader(),reqMethod="PUT",reqUrl=this.portalURL+"clir-options";this.logger.info("[callRouting] Set clir-options "+reqMethod+" "+reqUrl);const body=JSON.stringify({anonymous:clirActivation}),response=await fetch(reqUrl,{method:reqMethod,headers:headers,body:body});if(!response.ok)throw response;const newClirOption=(await response.json()).data;return this.logger.debug("[callRouting] Set clir-options -- SUCCESS -- "),newClirOption}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"clir-options");throw this.logger.error("[callRouting] "+errorInfo.message),errorInfo.error}}}exports.TelephonyServiceSipWise=TelephonyServiceSipWise},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class CliOption{constructor(policy,phoneNumberId,number,type,companyPolicy,name,current){this.policy=policy,this.companyPolicy=companyPolicy,this.phoneNumberId=phoneNumberId,this.number=number,this.type=type,this.name=name,this.current=current}static createRoutineFromData(data){return new CliOption(data.policy,data.phoneNumberId,data.number,data.type,data.companyPolicy,data.name,data.current)}}exports.CliOption=CliOption},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),event_service_1=__webpack_require__(11),profile_service_1=__webpack_require__(13),pgiConference_service_1=__webpack_require__(309),settings_service_1=__webpack_require__(18),promiseQueue_1=__webpack_require__(107),call_model_1=__webpack_require__(29),anonymizer_1=__webpack_require__(66),contact_model_1=__webpack_require__(108);class TelephonyHybridEventHandler{constructor(telephonyService){this.telephonyService=telephonyService,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.pgiConferenceService=pgiConference_service_1.PgiConferenceService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.messageHandlerRef=null,this.promiseQueue=promiseQueue_1.PromiseQueue.create()}static create(telephonyService){return new TelephonyHybridEventHandler(telephonyService)}attachHandlers(){this.detachHandlers(),this.messageHandlerRef=this.xmppService.addHandler(stanza=>(this.onCallserviceMessageReceived(stanza),!0),TelephonyHybridEventHandler.CALLSERVICE_NS,"message",null)}detachHandlers(){this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null)}onCallserviceMessageReceived(stanza){try{const stanzaElem=$(stanza);if("Offline Storage"===stanzaElem.find("delay").text())return!0;const actionElem=stanzaElem.find("callservice").children(),tagNames=actionElem.prop("tagName").split(":"),actionElemName=tagNames[tagNames.length-1].toLowerCase(),callId=actionElem.attr("callId"),callIdForLogs=callId?" -- "+callId:"";let evtDeviceType=actionElem.attr("deviceType");const displayDeviceType=evtDeviceType?" -- "+evtDeviceType:"";let oldCallId=actionElem.attr("oldCallId");oldCallId=oldCallId?" -- old "+oldCallId:"",evtDeviceType||(evtDeviceType="MAIN");const cfgNomadic=this.telephonyService.getNomadicObject(),cfgOfficePhone=!cfgNomadic||(cfgNomadic.makeCallInitiatorIsMain||!cfgNomadic.modeActivated);let mediaPillarEngaged=!1,mediaPillarSelected=!1;cfgOfficePhone||(mediaPillarSelected=this.telephonyService.isMediaPillarUserSelected(),mediaPillarEngaged=this.telephonyService.isMediaPillarAvailable()&&this.telephonyService.isMediaPillarUserSelected());if(!["messaging","voicemessages","forwarded","nomadicstatus","opendesktop"].includes(actionElemName)&&("MAIN"===evtDeviceType&&!cfgOfficePhone||"SECONDARY"===evtDeviceType&&(cfgOfficePhone||!mediaPillarEngaged&&mediaPillarSelected))&&!this.existingCall(callId))return this.logger.info("[TelephonyHybridEventHandler] onCallserviceMessageReceived -- "+actionElemName.toUpperCase()+callIdForLogs+oldCallId+displayDeviceType+" => IGNORED"),!0;switch(this.logger.info("[TelephonyHybridEventHandler] [TEL] onCallserviceMessageReceived -- "+actionElemName.toUpperCase()+callIdForLogs+oldCallId+displayDeviceType),actionElemName){case"initiated":this.promiseQueue.add(()=>this.onInitiatedEvent(actionElem));break;case"originated":this.promiseQueue.add(()=>this.onOriginatedEvent(actionElem));break;case"delivered":this.promiseQueue.add(()=>this.onDeliveredEvent(actionElem));break;case"queued":this.promiseQueue.add(()=>this.onQueuedEvent(actionElem));break;case"failed":this.promiseQueue.add(()=>this.onFailCallEvent(actionElem));break;case"updatecall":this.promiseQueue.add(()=>this.onUpdateCallEvent(actionElem));break;case"updateparty":this.promiseQueue.add(()=>this.onUpdatePartyEvent(actionElem));break;case"established":this.promiseQueue.add(()=>this.onEstablishedEvent(actionElem));break;case"holdcall":case"held":this.promiseQueue.add(()=>this.onHeldEvent(actionElem));break;case"retrievecall":this.promiseQueue.add(()=>this.onRetrieveCallEvent(actionElem));break;case"transfercall":case"transferred":this.promiseQueue.add(()=>this.onTransferEvent(actionElem));break;case"conferenced":this.promiseQueue.add(()=>this.onConferenceEvent(actionElem));break;case"diverted":this.promiseQueue.add(()=>this.onDivertedEvent(actionElem));break;case"callsubject":this.promiseQueue.add(()=>this.onCallSubjectEvent(actionElem));break;case"connectioncleared":this.promiseQueue.add(()=>this.onClearCallEvent(actionElem));break;case"forwarded":this.promiseQueue.add(()=>this.onCallForwardedEvent(actionElem));break;case"nomadicstatus":this.promiseQueue.add(()=>this.onCallNomadicEvent(actionElem));break;case"opendesktop":this.logger.info("[TelephonyHybridEventHandler] openDesktop detected ")}return!0}catch(error){return this.logger.error("[TelephonyHybridEventHandler] onCallserviceMessageReceived -- failure -- "+error.message),!0}}existingCall(callId){const exist=Boolean(this.telephonyService.calls[callId]);return this.logger.debug("[TelephonyHybridEventHandler] existingCall -- "+callId+" => "+exist),exist}async onInitiatedEvent(initiatedElem){this.logger.info("[TelephonyHybridEventHandler] onInitiatedEvent");try{const call=await this.getCall(initiatedElem,!1,!0),deviceState=initiatedElem.attr("deviceState"),newConnectionId=initiatedElem.attr("newCallId"),cause=initiatedElem.attr("cause"),resource=initiatedElem.attr("resource");if(void 0!==newConnectionId){const newCall=await this.getOrCreateCall(newConnectionId);this.logger.info("[TelephonyHybridEventHandler] onInitiatedEvent : changed call id from "+call.id+" to "+newConnectionId),this.computeCallRelevancy(initiatedElem,newCall),"LCI_CONNECTED"===deviceState?newCall.setStatus(call_model_1.Call.Status.ACTIVE):newCall.setStatus(call.status),newCall.setContact(call.contact),newCall.isOwner=call.isOwner,newCall.direction="outgoing";const confSession=this.pgiConferenceService.getConferenceSessionWithConnId(call.connectionId);confSession&&(confSession.callId=newConnectionId),call.isInExternalWindow&&this.eventService.publish("ON_REPLACE_CALLS_IN_EXTERNAL_POPOUT",newCall,call),call.isMediaPillarCall()&&this.eventService.publish("ON_REPLACE_CALLREFS_REQUEST",newCall,call),this.telephonyService.clearCall(call),this.sendCallUpdateEvent(call),this.sendCallUpdateEvent(newCall),delete this.telephonyService.calls[call.id]}else{this.computeCallRelevancy(initiatedElem,call),call.direction="outgoing";const isAutoAnswerMakecallActivated="true"===this.settingsService.getSetting("autoAnswer").toString()&&"desktop"===this.settingsService.getSetting("autoAnswerByDeviceType").toString();if(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_MAKE_CALL_CTI_APP)&&call.isSecondary&&!resource&&!call.isOwner&&"MAKECALL"===cause&&isAutoAnswerMakecallActivated&&this.contactService.isSingleComputerClient()&&(call.autoAnswer=!0),this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_MAKE_CALL_CTI_APP)&&call.isSecondary&&!resource&&!call.isOwner&&"MAKECALL"===cause||"CALLBACK"===cause){this.logger.info("[TelephonyHybridEventHandler] TELEPHONY_MAKE_CALL_CTI_APP - 3pcc activated");const contact=await this.contactService.getOrCreateContact("","000");call.setContact(contact),call.setStatus(call_model_1.Call.Status.RINGING_INCOMMING),call.lastCause=cause||"",this.sendCallUpdateEvent(call,initiatedElem)}else this.sendCallUpdateEvent(call)}}catch(error){const errorMessage="onInitiatedEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onOriginatedEvent(originatedElem){this.logger.info("[TelephonyHybridEventHandler] onOriginatedEvent");try{const call=await this.getCall(originatedElem,!1,!0),jid=originatedElem.attr("endpointIm"),phoneNumber=originatedElem.attr("endpointTel"),newConnectionId=originatedElem.attr("newCallId"),currentCalled={contactPhoneNumber:"",contact:call.contact,participantsPhoneNumbers:null,participants:null};if(jid||phoneNumber?currentCalled.contactPhoneNumber=phoneNumber||"":call.contact&&call.contact.temp&&(currentCalled.contactPhoneNumber=call.contact.id),call.setCurrentCalled(currentCalled),void 0!==newConnectionId){const newCall=await this.getOrCreateCall(newConnectionId,jid,phoneNumber);this.logger.info("[TelephonyHybridEventHandler] onOriginatedEvent : changed call id from "+call.id+" to "+newConnectionId),this.computeCallRelevancy(originatedElem,newCall),newCall.setStatus(call.status),newCall.setContact(call.contact),newCall.setCurrentCalled(currentCalled),newCall.isOwner=call.isOwner,newCall.direction="outgoing";const confSession=this.pgiConferenceService.getConferenceSessionWithConnId(call.connectionId);confSession&&(confSession.callId=newConnectionId),call.isInExternalWindow&&this.eventService.publish("ON_REPLACE_CALLS_IN_EXTERNAL_POPOUT",newCall,call),call.isMediaPillarCall()&&this.eventService.publish("ON_REPLACE_CALLREFS_REQUEST",newCall,call),this.telephonyService.clearCall(call),this.sendCallUpdateEvent(call),this.sendCallUpdateEvent(newCall),delete this.telephonyService.calls[call.id]}else this.computeCallRelevancy(originatedElem,call),call.direction="outgoing",call.setStatus(call_model_1.Call.Status.DIALING),this.sendCallUpdateEvent(call)}catch(error){const errorMessage="onOriginatedEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onDeliveredEvent(deliveredElem){this.logger.info("[TelephonyHybridEventHandler] onDeliveredEvent");try{const call=await this.getCall(deliveredElem);this.computeCallRelevancy(deliveredElem,call);const type=deliveredElem.attr("type"),jid=deliveredElem.attr("endpointIm"),phoneNumber=deliveredElem.attr("endpointTel"),cause=deliveredElem.attr("cause"),correlatorData=deliveredElem.attr("correlatorData")||"",correlatorDataHex=deliveredElem.attr("correlatorDataHex")||"",globalCallId=deliveredElem.attr("globalCallId")||"",partyElem=deliveredElem.find("party");if(partyElem&&partyElem.length&&(call.calledNumber=partyElem.attr("number")||"",call.calledNumber)){call.calledRole=partyElem.attr("role")||"",call.calledJID=partyElem.attr("jid")||"";const calledDisplayName=partyElem.attr("displayName")||"",calledFirstName=partyElem.attr("firstName")||"",calledLastName=partyElem.attr("lastName")||"";call.calledDisplayName=calledDisplayName||call.calledDisplayName,call.calledFirstName=calledFirstName||call.calledFirstName,call.calledLastName=calledLastName||call.calledLastName,call.calledFirstName||call.calledLastName?call.calledDisplayName=this.computeDisplayName(call.calledFirstName,call.calledLastName):call.calledDisplayName||(call.calledDisplayName=call.calledNumber)}call.setStatus("outgoing"===type?call_model_1.Call.Status.RINGING_OUTGOING:call_model_1.Call.Status.RINGING_INCOMMING),call.lastCause=cause||"",call.correlatorData=correlatorData,call.globalCallId=globalCallId,call.correlatorDataHex=correlatorDataHex,call.direction=type,call.callerNumber="outgoing"===type?this.contactService.userContact.phoneInternalNumber:phoneNumber,this.logger.info(`[TelephonyHybridEventHandler] onDeliveredEvent id '${call.id}' direction '${call.direction}' endpointTel '${phoneNumber}' callerNumber '${call.callerNumber}' calledNumber '${call.calledNumber}'`),await this.updateCallContact(jid,phoneNumber,deliveredElem,call),this.computeRemoteNumber(jid,phoneNumber,call),this.sendCallUpdateEvent(call,deliveredElem)}catch(error){const errorMessage="onDeliveredEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onQueuedEvent(queuedElem){this.logger.info("[TelephonyHybridEventHandler] onQueuedEvent");try{const type=queuedElem.attr("type"),cause=queuedElem.attr("cause");if("PARK"===cause)return void this.logger.warn("[TelephonyHybridEventHandler] onQueuedEvent -> ignore PARK cause");if("incoming"===type&&"CAMPON"!==cause&&this.telephonyService.isOxe&&(this.logger.info("[TelephonyHybridEventHandler] onQueuedEvent - Oxe Reservation by OPE - cause "+cause),this.telephonyService.isUserIdle()))return void this.logger.warn("[TelephonyHybridEventHandler] onQueuedEvent - Oxe Reservation by OPE - user idle (no active call) -> ignore event - cause "+cause);const call=await this.getCall(queuedElem);this.computeCallRelevancy(queuedElem,call);const jid=queuedElem.attr("endpointIm"),phoneNumber=queuedElem.attr("endpointTel"),partyElem=queuedElem.find("party");if(partyElem&&partyElem.length&&(call.calledNumber=partyElem.attr("number")||"",call.calledNumber)){call.calledRole=partyElem.attr("role")||"",call.calledJID=partyElem.attr("jid")||"";const calledDisplayName=partyElem.attr("displayName")||"",calledFirstName=partyElem.attr("firstName")||"",calledLastName=partyElem.attr("lastName")||"";call.calledDisplayName=calledDisplayName||call.calledDisplayName,call.calledFirstName=calledFirstName||call.calledFirstName,call.calledLastName=calledLastName||call.calledLastName,call.calledFirstName||call.calledLastName?call.calledDisplayName=this.computeDisplayName(call.calledFirstName,call.calledLastName):call.calledDisplayName||(call.calledDisplayName=call.calledNumber)}const status="outgoing"===type?call_model_1.Call.Status.QUEUED_OUTGOING:call_model_1.Call.Status.QUEUED_INCOMMING;call.setStatus(status),call.relevantEquipmentId=call_model_1.Call.getDeviceIdFromConnectionId(call.connectionId),call.direction=type,call.callerNumber="outgoing"===type?this.contactService.userContact.phoneInternalNumber:phoneNumber,this.logger.info(`[TelephonyHybridEventHandler] onQueuedEvent id '${call.id}' direction '${call.direction}' endpointTel '${phoneNumber}' callerNumber '${call.callerNumber}' => calledNumber '${call.calledNumber}'`),await this.updateCallContact(jid,phoneNumber,queuedElem,call),this.computeRemoteNumber(jid,phoneNumber,call),this.sendCallUpdateEvent(call,queuedElem)}catch(error){const errorMessage="onQueuedEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onFailCallEvent(failedElem){this.logger.info("[TelephonyHybridEventHandler] onFailCallEvent");try{const cause=failedElem.attr("cause"),call=await this.getCall(failedElem);call.setStatus(call_model_1.Call.Status.ERROR),call.errorMessage=TelephonyHybridEventHandler.CallFailureLabels[cause],call.errorMessage||(call.errorMessage=cause),this.sendCallUpdateEvent(call,failedElem)}catch(error){const errorMessage="onFailCallEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onUpdateCallEvent(updatecallElem){this.logger.info("[TelephonyHybridEventHandler] onUpdateCallEvent");try{const call=await this.getCall(updatecallElem,void 0,void 0,!0);if(!call)return void this.logger.info("[TelephonyHybridEventHandler] onUpDateCallEvent call does exist => IGNORED event");const jid=updatecallElem.attr("endpointIm");let phoneNumber=updatecallElem.attr("endpointTel"),firstName="",lastName="";const identityFirstName=updatecallElem.find("identity").attr("firstName"),identityLastName=updatecallElem.find("identity").attr("lastName"),identityDisplayName=updatecallElem.find("identity").attr("displayName"),identityPBXDisplayName=updatecallElem.find("identity").attr("pbxDisplayName");let contactUpdateDone=!1;if(!config.permitSearchFromPhoneBook&&!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.TELEPHONY_PHONE_BOOK))return void this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent xnames not allowed for the user profile => IGNORED event");if(identityLastName&&identityLastName.length)lastName=identityLastName,identityFirstName&&identityFirstName.length&&(firstName=identityFirstName),this.logger.info("[TelephonyHybridEventHandler] onUpDateCallEvent received for call "+call.id+" for phoneNumber:"+anonymizer_1.default(phoneNumber)+" with name : "+firstName.slice(0,1)+"***");else{if(!identityDisplayName||!identityDisplayName.length||identityDisplayName===phoneNumber)return void this.logger.info("[TelephonyHybridEventHandler] onUpDateCallEvent xnames not available => IGNORED event");lastName=identityDisplayName,this.logger.info("[TelephonyHybridEventHandler] onUpDateCallEvent only displayName available")}jid||phoneNumber||(phoneNumber="****");const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);if(contact.temp){if(contact.updateName(firstName,lastName),call.contact&&call.contact.id){const currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.contact.id===contact.id&&call.contact.displayName!==phoneNumber&&call.contact.nameUpdatePrio!==contact_model_1.Contact.NameUpdatePrio.OUTLOOK_UPDATE_PRIO||(contact.nameUpdatePrio=contact_model_1.Contact.NameUpdatePrio.SERVER_UPDATE_PRIO,call.setContact(contact),call.setCurrentCalled(currentCalled),contactUpdateDone=!0,this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent xnames updated for "+phoneNumber+" with contact : "+contact.nameForLogs))}else if(call.participants&&call.participants.length>0){const currentCalled=call.getCurrentCalled();for(let i=0;i<call.participants.length;i++)call.participants[i].temp?call.participants[i].phoneProCan&&call.participants[i].phoneProCan===phoneNumber&&(this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent temp participant "+call.participants[i].nameForLog+" updated with : "+contact.nameForLogs),call.participants[i]=contact,call.participants[i].nameUpdatePrio=contact_model_1.Contact.NameUpdatePrio.SERVER_UPDATE_PRIO,currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=contact,contactUpdateDone=!0):this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent STRANGE former participant was a rainbow: "+call.participants[i].nameForLog);call.setCurrentCalled(currentCalled)}}else if(call.contact&&call.contact.id){const currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.contact.id!==contact.id&&(call.contact.temp&&(call.contact.updateName(firstName,lastName),call.contact.nameUpdatePrio=contact_model_1.Contact.NameUpdatePrio.SERVER_UPDATE_PRIO),call.setContact(contact),call.setCurrentCalled(currentCalled),contactUpdateDone=!0,this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent call update with rainbow contact : "+contact.nameForLogs))}else if(call.participants&&call.participants.length>0){const currentCalled=call.getCurrentCalled();for(let i=0;i<call.participants.length;i++)call.participants[i].temp?call.participants[i].phoneProCan&&call.participants[i].phoneProCan===phoneNumber&&(this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent temp participant "+call.participants[i].nameForLog+" updated with : "+contact.nameForLogs),call.participants[i]=contact,call.setParticipants(call.participants),currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=contact,contactUpdateDone=!0):call.participants[i].jid===jid?(currentCalled.participantsPhoneNumbers[i]=phoneNumber,currentCalled.participants[i]=call.participants[i],contactUpdateDone=!0,this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent rainbow participant "+call.participants[i].nameForLog+" updated with the same : "+contact.nameForLogs)):this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent other participant not updated : "+call.participants[i].nameForLog+" vs "+contact.nameForLogs);call.setCurrentCalled(currentCalled)}identityPBXDisplayName&&(call.PBXDisplay=identityPBXDisplayName,contactUpdateDone=!0),contactUpdateDone?this.sendCallUpdateEvent(call,updatecallElem):this.logger.debug("[TelephonyHybridEventHandler] onUpDateCallEvent, no update needed for call : "+call.id)}catch(error){const errorMessage="onUpdateCallEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onUpdatePartyEvent(updatePartyElem){this.logger.info("[TelephonyHybridEventHandler] onUpdatePartyEvent");try{const call=await this.getCall(updatePartyElem,void 0,void 0,!0);if(!call)return void this.logger.info("[TelephonyHybridEventHandler] onUpDatePartyEvent call does exist => IGNORED event");let calledDisplayName="",calledRole="";const partyElem=updatePartyElem.find("party");if(partyElem&&partyElem.length&&(call.calledNumber=partyElem.attr("number")||"",call.calledNumber)){calledRole=partyElem.attr("role")||"",calledDisplayName=partyElem.attr("displayName")||"";const calledFirstName=partyElem.attr("firstName")||"",calledLastName=partyElem.attr("lastName")||"";call.calledFirstName=calledFirstName||call.calledFirstName,call.calledLastName=calledLastName||call.calledLastName,call.calledFirstName||call.calledLastName?calledDisplayName=this.computeDisplayName(call.calledFirstName,call.calledLastName):calledDisplayName||(calledDisplayName=call.calledNumber)}calledDisplayName===call.getCalledDisplayName()&&calledRole===call.calledRole||(call.setCalledDisplayName(calledDisplayName),call.setCalledRole(calledRole),this.sendCallUpdateEvent(call,updatePartyElem))}catch(error){const errorMessage="onUpdateCallEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onEstablishedEvent(establishedElem){this.logger.info("[TelephonyHybridEventHandler] onEstablishedEvent");try{const call=await this.getCall(establishedElem);this.computeCallRelevancy(establishedElem,call);const jid=establishedElem.attr("endpointIm");let phoneNumber=establishedElem.attr("endpointTel");const connectionId=establishedElem.attr("callId"),globalCallId=establishedElem.attr("globalCallId")||"",partyElem=establishedElem.find("party");if(partyElem&&partyElem.length&&(call.calledNumber=partyElem.attr("number")||"",call.calledNumber)){call.calledRole=partyElem.attr("role")||"",call.calledJID=partyElem.attr("jid")||"";const calledDisplayName=partyElem.attr("displayName")||"",calledFirstName=partyElem.attr("firstName")||"",calledLastName=partyElem.attr("lastName")||"";call.calledDisplayName=calledDisplayName||call.calledDisplayName,call.calledFirstName=calledFirstName||call.calledFirstName,call.calledLastName=calledLastName||call.calledLastName,call.calledFirstName||call.calledLastName?call.calledDisplayName=this.computeDisplayName(call.calledFirstName,call.calledLastName):call.calledDisplayName||(call.calledDisplayName=call.calledNumber)}if(this.settingsService.getBooleanSetting("openPopoutOnAnswerCall")&&this.telephonyService.isOxe&&(call.isInExternalWindow=!0),call.contact&&call.contact.id)call.setStatus(call_model_1.Call.Status.ACTIVE),call.setConnectionId(connectionId),call.globalCallId=globalCallId,!call.direction&&this.telephonyService.isOxe&&this.computeCallDirectionFromGlobalCallId(call),call.callerNumber="outgoing"===call.direction?this.contactService.userContact.phoneInternalNumber:phoneNumber,this.logger.info(`[TelephonyHybridEventHandler] onEstablishedEvent id '${call.id}' endpointTel '${phoneNumber}' calledNumber '${call.calledNumber}'`),await this.updateCallContact(jid,phoneNumber,establishedElem,call),this.computeRemoteNumber(jid,phoneNumber,call),this.sendCallUpdateEvent(call,establishedElem);else if(call.participants&&call.participants.length>0){let contactRecovered=null;for(let i=0;i<call.participants.length&&!contactRecovered;i++)(call.participants[i].id===jid||call.currentCalled.participantsPhoneNumbers&&call.currentCalled.participantsPhoneNumbers.length>0&&call.currentCalled.participantsPhoneNumbers[i]===phoneNumber)&&(contactRecovered=call.participants[i]);call.participants=[],call.isConference=!1;let currentCalled=call.getCurrentCalled();if(contactRecovered)call.setContact(contactRecovered),call.setStatus(call_model_1.Call.Status.ACTIVE),currentCalled={contactPhoneNumber:phoneNumber,contact:contactRecovered},call.setCurrentCalled(currentCalled),this.sendCallUpdateEvent(call,establishedElem);else{jid||phoneNumber||(phoneNumber="****");const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);call.setContact(contact),call.setStatus(call_model_1.Call.Status.ACTIVE),currentCalled={contactPhoneNumber:phoneNumber,contact:contact},call.setCurrentCalled(currentCalled),this.sendCallUpdateEvent(call,establishedElem)}}else{this.logger.info("[TelephonyHybridEventHandler] onEstablishedEvent, no call contact / no participants"),jid||phoneNumber||(phoneNumber="****");const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);call.setContact(contact),call.setStatus(call_model_1.Call.Status.ACTIVE);const currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.setCurrentCalled(currentCalled),this.sendCallUpdateEvent(call,establishedElem)}}catch(error){const errorMessage="onEstablishedEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}computeRemoteNumber(jid,phoneNumber,call){"outgoing"===call.direction&&jid&&call.contact?(call.remoteNumber=call.contact.phoneInternalNumber||call.contact.phonePro||phoneNumber,this.logger.info("[TelephonyHybridEventHandler] computeRemoteNumber based on rainbow contact numbers for outgoing call "+call+" => remoteNumber: "+call.remoteNumber)):(call.remoteNumber=phoneNumber,this.logger.info("[TelephonyHybridEventHandler] computeRemoteNumber based on endpointTel for call "+call+" => remoteNumber: "+call.remoteNumber))}computeCallDirectionFromGlobalCallId(call){const previousCallWithSameGlobalId=this.telephonyService.getOtherCallWithSameGlobalCallId(call);previousCallWithSameGlobalId&&(call.direction=previousCallWithSameGlobalId.direction,this.logger.info("[TelephonyHybridEventHandler] computeCallDirectionFromGlobalCallId "+call+" => direction: "+call.direction))}async onHeldEvent(heldElem){this.logger.info("[TelephonyHybridEventHandler] onHeldEvent");try{const call=await this.getCall(heldElem,!0),connectionId=heldElem.attr("callId"),callDeviceId=call_model_1.Call.getDeviceIdFromConnectionId(call.connectionId);callDeviceId===call_model_1.Call.getDeviceIdFromConnectionId(connectionId)?call.setStatus(call_model_1.Call.Status.HOLD):call.setStatus(call_model_1.Call.Status.PUT_ON_HOLD),this.sendCallUpdateEvent(call,heldElem)}catch(error){const errorMessage="onHeldEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onRetrieveCallEvent(retrieveElem){this.logger.info("[TelephonyHybridEventHandler] onRetrieveCallEvent");try{const call=await this.getCall(retrieveElem,!0);call.setStatus(call_model_1.Call.Status.ACTIVE),this.sendCallUpdateEvent(call,retrieveElem)}catch(error){const errorMessage="onRetrieveCallEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onDivertedEvent(divertedElem){this.logger.info("[TelephonyHybridEventHandler] onDivertedEvent");try{const oldConnectionId=divertedElem.attr("oldCallId"),oldCallId=call_model_1.Call.getIdFromConnectionId(oldConnectionId),call=this.telephonyService.calls[oldCallId];if(!call)return void this.logger.warn("[TelephonyHybridEventHandler] onDivertedEvent - receive divertedEvent on unknown call --- ignored");this.computeCallRelevancy(divertedElem,call),this.telephonyService.clearCall(call,!0),this.sendCallUpdateEvent(call,divertedElem)}catch(error){const errorMessage="onDivertedEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onTransferEvent(transferElem){this.logger.info("[TelephonyHybridEventHandler] onTransferEvent");try{const activeConnectionId=transferElem.attr("activeCallId"),heldConnectionId=transferElem.attr("heldCallId"),newConnectionId=transferElem.attr("newCallId"),activeCallId=call_model_1.Call.getIdFromConnectionId(activeConnectionId),activeCall=this.telephonyService.calls[activeCallId];if(heldConnectionId){const heldCallId=call_model_1.Call.getIdFromConnectionId(heldConnectionId),heldCall=this.telephonyService.calls[heldCallId];heldCall&&heldCall.setStatus(call_model_1.Call.Status.UNKNOWN),activeCall&&activeCall.setStatus(call_model_1.Call.Status.UNKNOWN),heldCall&&this.sendCallUpdateEvent(heldCall),activeCall&&this.sendCallUpdateEvent(activeCall)}if(newConnectionId){const jid=transferElem.attr("newEndpointIm");let phoneNumber=transferElem.attr("newEndpointTel"),deviceState=transferElem.attr("deviceState");deviceState||(deviceState=transferElem.attr("deviceStatus"));let deviceType=transferElem.attr("deviceType");deviceType||(deviceType="MAIN"),activeCall&&(activeCall.setStatus(call_model_1.Call.Status.UNKNOWN),this.sendCallUpdateEvent(activeCall)),jid||phoneNumber||(phoneNumber="****");const newCall=await this.getOrCreateCall(newConnectionId,jid,phoneNumber);deviceState&&"LCI_ALERTING"===deviceState?(newCall.setStatus(call_model_1.Call.Status.RINGING_INCOMMING),newCall.direction="incoming"):deviceState&&"LCI_QUEUED"===deviceState?(newCall.setStatus(call_model_1.Call.Status.QUEUED_INCOMMING),newCall.direction="incoming"):(newCall.setStatus(call_model_1.Call.Status.ACTIVE),newCall.direction=activeCall?activeCall.direction:null),newCall.relevantEquipmentId=call_model_1.Call.getDeviceIdFromConnectionId(newConnectionId),newCall.isSecondary=deviceType&&"SECONDARY"===deviceType,await this.updateCallContact(jid,phoneNumber,transferElem,newCall),this.computeRemoteNumber(jid,phoneNumber,newCall),this.sendCallUpdateEvent(newCall,transferElem)}}catch(error){const errorMessage="onTransferEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onConferenceEvent(conferencedElem){this.logger.info("[TelephonyHybridEventHandler] onConferenceEvent");const primaryOldConnectionId=conferencedElem.find("primaryOldCallId").text(),secondaryOldConnectionId=conferencedElem.find("secondaryOldCallId").text(),newConnectionId=conferencedElem.find("newCallId").text(),primaryOldCallId=call_model_1.Call.getIdFromConnectionId(primaryOldConnectionId),secondaryOldCallId=call_model_1.Call.getIdFromConnectionId(secondaryOldConnectionId),primaryOldCall=this.telephonyService.calls[primaryOldCallId],secondaryOldCall=this.telephonyService.calls[secondaryOldCallId],confParticipants=[],participantPromises=[],confParticipantsPhoneNumbers=[];conferencedElem.find("participant").each((__index,participant)=>{const participantElem=$(participant);let endpointTel=participantElem.find("endpointTel").text();const endpointIm=participantElem.find("endpointIm").text();endpointIm&&this.contactService.isUserContactJid(endpointIm)||participantPromises.push((async()=>{if(endpointIm||endpointTel||(endpointTel="****"),!endpointIm&&primaryOldCall&&primaryOldCall.contact&&primaryOldCall.currentCalled.contactPhoneNumber===endpointTel)confParticipants.push(primaryOldCall.contact),confParticipantsPhoneNumbers.push(endpointTel);else if(!endpointIm&&secondaryOldCall&&secondaryOldCall.contact&&secondaryOldCall.currentCalled.contactPhoneNumber===endpointTel)confParticipants.push(secondaryOldCall.contact),confParticipantsPhoneNumbers.push(endpointTel);else try{const contact=await this.contactService.getOrCreateContact(endpointIm,endpointTel);confParticipants.push(contact),confParticipantsPhoneNumbers.push(endpointTel);try{await this.telephonyService.updateContactFromOutlookInfos(contact,endpointTel)?this.logger.debug("[TelephonyHybridEventHandler] on conferenced, update from outlook for contact :"+contact.nameForLogs):this.logger.debug("[TelephonyHybridEventHandler] on conferenced, no update from outlook for contact :"+contact.nameForLogs)}catch(error){this.logger.debug("[TelephonyHybridEventHandler] on conferenced, no Outlook search available")}}catch(error){this.logger.error("[TelephonyHybridEventHandler] onConferenceEvent - Impossible to get contact - "+error.message)}})())});try{await Promise.all(participantPromises)}finally{let isSecondaryDevice=!1;primaryOldCall&&(isSecondaryDevice=isSecondaryDevice||primaryOldCall.isSecondary),secondaryOldCall&&(isSecondaryDevice=isSecondaryDevice||secondaryOldCall.isSecondary);const newConferenceCall=this.createConferenceCall(newConnectionId,confParticipants),currentCalled=newConferenceCall.getCurrentCalled();currentCalled.participants=confParticipants,currentCalled.participantsPhoneNumbers=confParticipantsPhoneNumbers,newConferenceCall.setCurrentCalled(currentCalled),newConferenceCall.setStatus(call_model_1.Call.Status.ACTIVE),newConferenceCall.relevantEquipmentId=call_model_1.Call.getDeviceIdFromConnectionId(newConnectionId),newConferenceCall.isSecondary=isSecondaryDevice,this.logger.debug("[TelephonyHybridEventHandler] on conferenced, create new call: "+newConferenceCall),(primaryOldCall&&primaryOldCall.isInExternalWindow||secondaryOldCall&&secondaryOldCall.isInExternalWindow)&&(newConferenceCall.isInExternalWindow=!0),this.sendCallUpdateEvent(newConferenceCall),primaryOldCall&&(primaryOldCall.setStatus(call_model_1.Call.Status.UNKNOWN),this.logger.debug("[TelephonyHybridEventHandler] on conferenced, updated primaryOldCall: "+primaryOldCall),this.sendCallUpdateEvent(primaryOldCall)),secondaryOldCall&&(secondaryOldCall.setStatus(call_model_1.Call.Status.UNKNOWN),this.logger.debug("[TelephonyHybridEventHandler] on conferenced, updated secondaryOldCall: "+secondaryOldCall),this.sendCallUpdateEvent(secondaryOldCall))}}async onCallSubjectEvent(callElem){this.logger.info("[TelephonyHybridEventHandler] onCallSubjectEvent");try{const call=await this.getCall(callElem,!0);call.subject=callElem.find("subject").text(),call.subject&&(this.logger.info("[TelephonyHybridEventHandler] subject display"+call.subject),this.sendCallUpdateEvent(call))}catch(error){const errorMessage="onCallSubjectEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onClearCallEvent(clearElem){const connectionId=clearElem.attr("callId"),callId=call_model_1.Call.getIdFromConnectionId(connectionId),cause=clearElem.attr("cause");this.logger.info("[TelephonyHybridEventHandler] onClearCallEvent, connectionId: "+connectionId);try{if(this.telephonyService.calls[callId]){const call=await this.getCall(clearElem);this.computeCallRelevancy(clearElem,call),this.telephonyService.clearCall(call,!0),call.lastCause=cause||"",this.sendCallUpdateEvent(call,clearElem)}else this.logger.info("[TelephonyHybridEventHandler] onClearCallEvent, no call for connectionId: "+connectionId)}catch(error){const errorMessage="onClearCallEvent -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}async onCallForwardedEvent(forwardElem){const forwardType=forwardElem.attr("forwardType"),forwardTo=forwardElem.attr("forwardTo"),pbxForwardType=forwardElem.attr("pbxForwardType");this.logger.info("[TelephonyHybridEventHandler] onCallForwardedEvent forwardType: "+forwardType+" forwardTo: "+forwardTo+" pbxForwardType: "+pbxForwardType),this.eventService.publish("ON_CALL_FORWARDED_EVENT",{forwardType:forwardType,forwardTo:forwardTo,pbxForwardType:pbxForwardType}),this.telephonyService.forwardObject.forwardType=forwardType,this.telephonyService.forwardObject.forwardTo=forwardTo,this.telephonyService.forwardObject.pbxForwardType=pbxForwardType}async onCallNomadicEvent(nomadicElem){if(this.logger.info("[TelephonyHybridEventHandler] onCallNomadicEvent"),!this.telephonyService.started&&!this.telephonyService.starting)return this.logger.info("[TelephonyHybridEventHandler] onCallNomadicEvent on uninitialized telephony => relaunch telephony initialization"),void this.telephonyService.launchTelephonyInitilization();const response={destination:nomadicElem.attr("destination"),featureActivated:nomadicElem.attr("featureActivated"),makeCallInitiatorIsMain:nomadicElem.attr("makeCallInitiatorIsMain"),modeActivated:nomadicElem.attr("modeActivated"),nomadicModeInitialized:nomadicElem.attr("nomadicModeInitialized")};if(await this.telephonyService.updateNomadicData(response)){const snapshotSecondary=this.telephonyService.nomadicObject.featureActivated&&this.telephonyService.nomadicObject.modeActivated&&!this.telephonyService.nomadicObject.makeCallInitiatorIsMain;this.telephonyService.getTelephonyState(snapshotSecondary)}}sendCallUpdateEvent(call,elem){const infoEvt=this.extractInfoEvent(elem);this.logger.info("[TelephonyHybridEventHandler] sendCallUpdateEvent call: "+call+(infoEvt?" infoEvt: "+JSON.stringify(infoEvt):"")),this.eventService.publish("ON_CALL_UPDATED_EVENT",call,infoEvt)}extractInfoEvent(elem){let infoEvent={actionElemName:"",cause:""};if(elem&&null!==elem){const tagNames=elem.prop("tagName").split(":");infoEvent.actionElemName=tagNames[tagNames.length-1].toLowerCase(),infoEvent.cause=elem.attr("cause"),infoEvent.cause=infoEvent.cause?infoEvent.cause:""}else infoEvent=null;return infoEvent}createConferenceCall(connectionId,participants){const conferenceCall=call_model_1.Call.create(call_model_1.Call.Status.UNKNOWN,null,call_model_1.Call.Type.PHONE);return conferenceCall.setConnectionId(connectionId),conferenceCall.isConference=!0,conferenceCall.setParticipants(participants),this.telephonyService.calls[conferenceCall.id]=conferenceCall,conferenceCall}async getCall(elem,doNotUseEqtIdFromElem,searchPendingMakeCall,noCreate){const jid=elem.attr("endpointIm"),phoneNumber=elem.attr("endpointTel"),connectionId=elem.attr("callId");return this.getOrCreateCall(connectionId,jid,phoneNumber,doNotUseEqtIdFromElem,searchPendingMakeCall,noCreate)}async getOrCreateCall(connectionId,jid,phoneNumber,doNotUseEqtIdFromElem,searchPendingMakeCall,noCreate){if(doNotUseEqtIdFromElem){const orgConnectionId=connectionId;connectionId=Object.keys(this.telephonyService.calls||[]).find(callConnectionId=>call_model_1.Call.getCallIdFromConnectionId(callConnectionId)===call_model_1.Call.getCallIdFromConnectionId(connectionId)),this.logger.debug("[TelephonyHybridEventHandler] getOrCreateCall - HOLD/RETRIEVE search call with callId: "+call_model_1.Call.getCallIdFromConnectionId(orgConnectionId)+" from connection id: "+orgConnectionId+" => found connectionId: "+connectionId)}if(!connectionId)throw new Error("no connection id");if(searchPendingMakeCall){const call=this.telephonyService.pendingMakeCalls.pop();if(call)return call.setStatus(call_model_1.Call.Status.DIALING),call.setConnectionId(connectionId),call.setRelevantEquipmentId(call_model_1.Call.getDeviceIdFromConnectionId(call.connectionId)),this.logger.info("[TelephonyHybridEventHandler] getOrCreateCall - "+connectionId+" - "+jid+" => found pendingMakeCall: Call confirmed by csta event "+call),this.telephonyService.calls[call.id]=call,call}const call=this.telephonyService.calls[connectionId];if(call)return this.logger.info("[TelephonyHybridEventHandler] getOrCreateCall - "+connectionId+" - "+anonymizer_1.default(phoneNumber)+" - "+jid+" => found call: "+call),call;if(noCreate)return this.logger.info("[TelephonyHybridEventHandler] getOrCreateCall - "+connectionId+" => call not found"),null;this.logger.info("[TelephonyHybridEventHandler] getOrCreateCall - "+connectionId+" - "+anonymizer_1.default(phoneNumber)+" - "+jid+" => not found : create call..."),jid||phoneNumber||(phoneNumber="****");const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);return this.telephonyService.getOrCreateCall(call_model_1.Call.Status.UNKNOWN,connectionId,contact)}computeCallRelevancy(elem,call){const newCallId=elem.attr("newCallId"),connectionId=newCallId||elem.attr("callId");let deviceType=elem.attr("deviceType");const equipmentId=call_model_1.Call.getDeviceIdFromConnectionId(connectionId),nomadicInfo=this.telephonyService.getNomadicObject();let makeCallInitiatorIsMain=nomadicInfo.makeCallInitiatorIsMain;deviceType||(deviceType="MAIN"),nomadicInfo.modeActivated||(makeCallInitiatorIsMain=!0),"MAIN"===deviceType&&makeCallInitiatorIsMain&&(call.relevantEquipmentId=equipmentId,call.connectionId=connectionId),"SECONDARY"!==deviceType||makeCallInitiatorIsMain||(call.relevantEquipmentId=equipmentId,call.connectionId=connectionId),call.isSecondary=deviceType&&"SECONDARY"===deviceType&&!makeCallInitiatorIsMain,this.logger.info("[TelephonyHybridEventHandler] computeCallRelevancy -- relevantEquipmentId: "+call.relevantEquipmentId+" connectionId: "+call.connectionId+" isSecondary: "+call.isSecondary)}async updateCallContact(jid,phoneNumber,actionElem,call){const tagNames=actionElem.prop("tagName").split(":"),actionElemName=tagNames[tagNames.length-1].toLowerCase();try{const updateAnalyse=this.analyzeContactChange(jid,phoneNumber,call);if(call.isConference||""===phoneNumber||call.setCurrentCalledContactNumber(phoneNumber),updateAnalyse)try{const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);if(updateAnalyse.searchOutlookToBeDone){try{await this.telephonyService.updateContactFromOutlookInfos(contact,phoneNumber)?(this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", update from outlook for contact :"+contact.nameForLogs),this.makeUpdateContact(call,contact,phoneNumber)):(this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", no update from outlook for contact :"+contact.nameForLogs),updateAnalyse.updateContactToBeDone&&(this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", update contact :"+contact.nameForLogs),this.makeUpdateContact(call,contact,phoneNumber)))}catch(error){this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", no Outlook search available"),updateAnalyse.updateContactToBeDone&&(this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", update contact :"+contact.nameForLogs),this.makeUpdateContact(call,contact,phoneNumber))}return}return this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", update contact :"+contact.nameForLogs),void this.makeUpdateContact(call,contact,phoneNumber)}catch(error){if(error){const errorMessage="updateCallContact -- "+error.message;this.logger.error("[TelephonyHybridEventHandler] "+errorMessage)}this.logger.debug("[TelephonyHybridEventHandler] on "+actionElemName+", no Outlook search available")}}catch(error){const errorMessage="updateCallContact -- "+error.message;throw this.logger.error("[TelephonyHybridEventHandler] "+errorMessage),new Error(errorMessage)}}makeUpdateContact(call,contact,phoneNumber){call.setContact(contact);const currentCalled={contactPhoneNumber:phoneNumber,contact:contact};call.setCurrentCalled(currentCalled)}analyzeContactChange(jid,phoneNumber,call){let updateContact=!1,searchOutlook=!1;return jid||phoneNumber?call.isConference?void 0:call.contact?(""!==jid?call.contact.id!==jid&&(updateContact=!0,searchOutlook=!1):call.contact.temp?call.contact.id!==phoneNumber?(updateContact=!0,searchOutlook=!0):call.contact.displayName===phoneNumber&&(updateContact=!1,searchOutlook=!0):""!==call.getCurrentCalled().contactPhoneNumber&&""!==phoneNumber&&call.getCurrentCalled().contactPhoneNumber!==phoneNumber&&(updateContact=!0,searchOutlook=!0),updateContact||searchOutlook?{updateContactToBeDone:updateContact,searchOutlookToBeDone:searchOutlook}:null):{updateContactToBeDone:!0,searchOutlookToBeDone:!0}:null}computeDisplayName(firstname,lastname){const firstName=firstname?firstname.charAt(0).toUpperCase()+firstname.slice(1):null,lastName=lastname?lastname.charAt(0).toUpperCase()+lastname.slice(1):null;let displayName="";return displayName=lastName&&firstName?"FL"===this.settingsService.getSetting("displayOrder")?firstName+" "+lastName:lastName+" "+firstName:lastName&&!firstName?lastName:firstName||"Anonymous",displayName}}TelephonyHybridEventHandler.CALLSERVICE_NS="urn:xmpp:pbxagent:callservice:1",TelephonyHybridEventHandler.CallFailureLabels={DESTNOTOBTAINABLE:"outOfService",DONOTDISTURB:"dnd",TRUNKSBUSY:"trunksbusy",BUSY:"busy"},exports.TelephonyHybridEventHandler=TelephonyHybridEventHandler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const BehaviorSubject_1=__webpack_require__(135),distinctUntilChanged_1=__webpack_require__(143),conference_endpoint_model_1=__webpack_require__(441),conference_session_model_1=__webpack_require__(442),conference_participant_model_1=__webpack_require__(310),lodash_escape_1=__webpack_require__(105),event_service_1=__webpack_require__(11),Subject_1=__webpack_require__(77),ReplaySubject_1=__webpack_require__(443),logger_service_1=__webpack_require__(4),contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),country_service_1=__webpack_require__(114),profile_service_1=__webpack_require__(13),room_service_1=__webpack_require__(25),i18n_service_1=__webpack_require__(38),main_service_1=__webpack_require__(15),errorHelper_service_1=__webpack_require__(12);var MEDIATYPE;!function(MEDIATYPE){MEDIATYPE.PSTNAUDIO="pstnAudio",MEDIATYPE.WEBRTC="webrtc",MEDIATYPE.WEBRTCSHARINGONLY="webrtcSharingOnly"}(MEDIATYPE=exports.MEDIATYPE||(exports.MEDIATYPE={}));exports.NgPgiConferenceService=class{constructor(){this.eventService=event_service_1.EventService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.countryService=country_service_1.CountryService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.conferenceEndpoints={},this.conferenceEnpointsSubject=new Subject_1.Subject,this.conferenceSessions={},this.conferenceSessionsSubject=new ReplaySubject_1.ReplaySubject,this.started=!1,this.isPstnConferenceAvailable=!1,this.isPstnConferenceAvailableSubject=new BehaviorSubject_1.BehaviorSubject(this.isPstnConferenceAvailable),this.pstnConferencePhoneNumbers=null,this.startedSubject=new BehaviorSubject_1.BehaviorSubject(!1)}start(){this.logger.info("=== STARTING ==="),this.confProvPortalURL=new URL(config.restServerUrl+"/api/rainbow/confprovisioning/v1.0/"),this.confPortalURL=new URL(config.restServerUrl+"/api/rainbow/conference/v1.0/"),this.attachHandlers(),this.computePstnConferencePremission(),this.isPstnConferenceAvailableSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(isPstnConferenceAvailable=>{isPstnConferenceAvailable&&this.initializeServiceData()}),this.started=!0,this.logger.info("=== STARTED ==="),this.startedSubject.next(!0),this.contactService.userContact.phoneMeetingsEnabledSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(phoneMeetingsEnabled=>{phoneMeetingsEnabled||this.stop()})}stop(){this.logger.info(""),this.logger.info("[PgiConferenceService] === STOPPING ==="),this.isPstnConferenceAvailable=!1,this.started=!1,this.logger.info("[PgiConferenceService] === STOPPED ==="),this.startedSubject.next(!1)}reconnect(){this.reconnectService()}reconnectService(){this.logger.info("reconnectService"),this.attachHandlers(),this.refreshConferenceSessions()}attachHandlers(){this.xmppManagementHandler&&(this.xmppService.deleteHandler(this.xmppManagementHandler),this.xmppManagementHandler=null),this.xmppManagementHandler=this.xmppService.addHandler(stanza=>(this.onManagementMessage(stanza),!0),null,"message","management"),this.conferenceHandler&&(this.xmppService.connection.deleteHandler(this.conferenceHandler),this.conferenceHandler=null),this.conferenceHandler=this.xmppService.connection.addHandler(stanza=>(this.onConferenceMessage(stanza),!0),"jabber:iq:conference","message",null)}onManagementMessage(stanza){const stanzaElem=$(stanza);stanzaElem.find("confuseractivated ").length>0&&this.setPstnConferenceAvailability(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED));const confendpointElem=stanzaElem.find("confendpoint");if(confendpointElem.length&&"update"===confendpointElem.attr("action")){this.logger.info("onManagementMessage - update of conference");const conferenceId=stanzaElem.find("confendpointid").text();this.retrieveConference(conferenceId,!0)}}onConferenceMessage(stanza){const stanzaElem=$(stanza),conferenceId=stanzaElem.find("conference-id").text(),conferenceSession=this.getConferenceSessionById(conferenceId);conferenceSession&&this.updateConferenceSession(stanzaElem,conferenceSession)}updateConferenceSession(stanzaElem,conferenceSession){this.logger.info("updateConferenceSession - "+conferenceSession.id);const conferenceStateElem=stanzaElem.find("conference-state");if(conferenceStateElem.length){const isConferenceActive="true"===conferenceStateElem.find("active").text(),isLock="true"===conferenceStateElem.find("lock").text();this.updateState(conferenceSession,isConferenceActive,isLock)}const talkersElem=stanzaElem.find("talkers");if(talkersElem.length){const talkers=[];talkersElem.find("participant-id").each((__index,talker)=>{const talkerParticipantId=$(talker).text();talkers.push(talkerParticipantId)}),this.logger.debug("update talkers with: "+talkers),conferenceSession.updateTalkers(talkers)}let participantsElem=stanzaElem.find("participants");if(0===participantsElem.length){if(participantsElem=stanzaElem.find("updated-participants"),participantsElem.length){const participants=[];participantsElem.find("participant").each((__index,participant)=>{const participantElem=$(participant),participantId=participantElem.find("participant-id").text(),jid_im=participantElem.find("jid-im").text(),phoneNumber=participantElem.find("phone-number").text(),role=participantElem.find("role").text(),mute=participantElem.find("mute").text(),hold=participantElem.find("hold").text(),cnxState=participantElem.find("cnx-state").text();participants.push(conference_participant_model_1.ConferenceParticipant.createFromData({participantId:participantId,jid_im:jid_im,participantRole:role,mute:"on"===mute,held:"on"===hold,phoneNumber:phoneNumber,participantState:cnxState}))}),conferenceSession.participants=participants}}else{const participants=[];participantsElem.find("participant").each((__index,participant)=>{const participantElem=$(participant),participantId=participantElem.find("participant-id").text(),jid_im=participantElem.find("jid-im").text(),phoneNumber=participantElem.find("phone-number").text(),role=participantElem.find("role").text(),mute=participantElem.find("mute").text(),hold=participantElem.find("hold").text(),cnxState=participantElem.find("cnx-state").text();participants.push(conference_participant_model_1.ConferenceParticipant.createFromData({participantId:participantId,jid_im:jid_im,participantRole:role,mute:"on"===mute,held:"on"===hold,phoneNumber:phoneNumber,participantState:cnxState}))}),participants.length&&(conferenceSession.participants=participants)}if(!participantsElem.length&&(participantsElem=stanzaElem.find("added-participants"),participantsElem.length)){const participants=conferenceSession.participants;participantsElem.find("participant").each((__index,participant)=>{const participantElem=$(participant),participantId=participantElem.find("participant-id").text(),jid_im=participantElem.find("jid-im").text(),phoneNumber=participantElem.find("phone-number").text(),role=participantElem.find("role").text(),mute=participantElem.find("mute").text(),hold=participantElem.find("hold").text(),cnxState=participantElem.find("cnx-state").text();participants.push(conference_participant_model_1.ConferenceParticipant.createFromData({participantId:participantId,jid_im:jid_im,participantRole:role,mute:"on"===mute,held:"on"===hold,phoneNumber:phoneNumber,participantState:cnxState}))}),conferenceSession.participants=participants}const removedParticipantsElem=stanzaElem.find("removed-participants");if(removedParticipantsElem.length){const removedParticipants=[];removedParticipantsElem.find("participant-id").each((__index,removedParticipant)=>{const removedParticipantId=$(removedParticipant).text();removedParticipants.push(removedParticipantId)}),this.logger.debug("remove participants: "+removedParticipants),conferenceSession.removeParticipants(removedParticipants)}this.conferenceSessionsSubject.next({id:conferenceSession.id,action:"updated"})}async updateState(conferenceSession,isConferenceActive,lock=!1){if(conferenceSession.active&&!isConferenceActive){if(this.contactService.userContact.guestMode&&conferenceSession.type!==MEDIATYPE.WEBRTCSHARINGONLY)return this.eventService.publish("ON_OPEN_POPUP","concludeInvitation"),conferenceSession.cleanupSessionData(),void conferenceSession.updateStateFromData(isConferenceActive,lock);const room=this.roomService.findRoomsWithConfId(conferenceSession.id)[0];if(room)if(room.owner&&conferenceSession.id===this.getPstnInstantConferenceEndpointId())try{const currentRoomsCount=await this.roomService.retrieveRoomConsumption();currentRoomsCount>this.profileService.getFeatureLimitMax(this.profileService.FeaturesEnum.BUBBLE_COUNT)?(this.mainService.showGlobalPopupMessage({popupTitle:"createBubble",popupBody:"maxCollabSpaceReached",okLabel:"ok"}),await this.roomService.deletePersonalMeetingRoom()):room.isMyPersonalMeetingRoom()&&this.eventService.publish("ON_SHOW_POPUP",{component:"renameMeeting",data:room})}catch(error){}else if(!room.owner&&conferenceSession.isParticipantConnectedByJid(this.contactService.userContact.dbId)){const displayName=lodash_escape_1.default(room.ownerContact.displayName),roomName=lodash_escape_1.default(room.name),message=this.i18n.translate("meetingEndBy",{owner:displayName,meeting:roomName});this.eventService.publish("GLOBAL_NOTIFY_MESSAGE_EVENT",message)}conferenceSession.cleanupSessionData()}conferenceSession.updateStateFromData(isConferenceActive,lock)}async initializeServiceData(){try{await this.retrievePstnConferences(),await this.makeSnapshots(),this.logger.info("service data initialized")}catch(__e){this.logger.warn("service data init failed")}}setPstnConferenceAvailability(conferenceAvailable){this.isPstnConferenceAvailable&&!conferenceAvailable&&this.mainService.showGlobalPopupMessage({popupTitle:"information",popupBody:"pgiRightsRemovedWarning",okLabel:"ok"}),this.isPstnConferenceAvailable=conferenceAvailable,this.isPstnConferenceAvailableSubject.next(this.isPstnConferenceAvailable)}computePstnConferencePremission(){let isConferenceProvisioningOnGoing=!0;this.profileService.getProfilesByName("conference").filter(profile=>"active"===profile.status).forEach(profile=>{profile.provisioningNeeded&&profile.provisioningNeeded.length&&profile.provisioningNeeded.forEach(provisioning=>{-1!==provisioning.providerType.toLowerCase().indexOf("pgi")&&(isConferenceProvisioningOnGoing=provisioning.provisioningOngoing,isConferenceProvisioningOnGoing&&this.logger.info("computePstnConferencePremission - pgi provisioning on going"))})}),this.setPstnConferenceAvailability(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.CONFERENCE_ALLOWED)&&!isConferenceProvisioningOnGoing)}async makeSnapshots(){try{this.logger.info("makeSnapshots");const conferenceEndpointIds=[];for(const key in this.conferenceEndpoints)if(this.conferenceEndpoints[key]){const conferenceEndpoint=this.conferenceEndpoints[key];conferenceEndpoint&&(this.logger.info("makeSnapshots -- "+conferenceEndpoint.id),conferenceEndpointIds.push(conferenceEndpoint.id))}await Promise.all(conferenceEndpointIds.map(async conferenceEndpointId=>{try{await this.makeSnapshotForConfId(conferenceEndpointId)}catch(__e){}})),this.logger.info("makeSnapshots -- SUCCESS")}catch(__e){this.logger.info("makeSnapshots -- ERROR")}}async makeSnapshotForConfId(confId){if(!confId){const error=new Error("makeSnapshotForConfId - No confId !!");throw this.logger.error(error.message),error}try{const confSession=this.conferenceSessions[confId];if(confSession&&confSession.active&&confSession.haveJoined)return this.logger.debug("makeSnapshotForConfId skipped, already joined"),confSession;const serverUrl=new URL(`conferences/${confId}/snapshot`,this.confPortalURL),headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const snapshotData=(await response.json()).data;return this.updateOrCreateConferenceSession(confId,snapshotData),snapshotData}catch(error){this.conferenceSessions[confId]&&(this.logger.debug("makeSnapshotForConfId failed - remove conferenceSession "+confId),this.removeConferenceSession(confId));const errorInfo=await this.errorHelperService.getErrorInfo(error,"makeSnapshotForConfId");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}removeConferenceSession(confId){confId&&(this.logger.debug("removeConferenceSession "+confId),delete this.conferenceSessions[confId],this.conferenceSessionsSubject.next({id:confId,action:"deleted"}))}updateOrCreateConferenceSession(confId,snapshotData){if(this.logger.debug("updateOrCreateConferenceSession for "+confId),!confId||!snapshotData)return this.logger.warn("updateOrCreateConferenceSession - Not enough data"),null;let conferenceSession=this.conferenceSessions[confId];return conferenceSession?(snapshotData.active!==conferenceSession.active&&(this.logger.debug("updateOrCreateConferenceSession - state update to "+(snapshotData.active?"active":"inactive")),conferenceSession.active=snapshotData.active,this.conferenceSessionsSubject.next({id:confId,action:"updated"})),snapshotData.participants&&(this.logger.debug(`updateOrCreateConferenceSession - update participants for ${confId} with:\n${JSON.stringify(snapshotData.participants)}`),conferenceSession.participants=snapshotData.participants.map(participantData=>conference_participant_model_1.ConferenceParticipant.createFromData(participantData)),this.conferenceSessionsSubject.next({id:confId,action:"updated"}))):(this.logger.debug(`updateOrCreateConferenceSession - create new conferencesession with id ${confId} and data: \n${JSON.stringify(snapshotData)}`),conferenceSession=conference_session_model_1.ConferenceSession.createFromData(confId,snapshotData.participants,snapshotData.active,MEDIATYPE.PSTNAUDIO),this.conferenceSessions[confId]=conferenceSession,this.conferenceSessionsSubject.next({id:confId,action:"created"})),conferenceSession}async updateConference(confEndpointId,confData){try{if(this.logger.info("updateConference"),!confEndpointId){const errorMessage="updateConference failure: No confEndpoint";throw this.logger.error("updateConference failure : No confEndpoint"),new Error(errorMessage)}const serverUrl=new URL("conferences/"+confEndpointId,this.confProvPortalURL),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const response=await fetch(serverUrl.href,{method:"PUT",headers:headers,body:JSON.stringify(confData)});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const conferenceData=(await response.json()).data,conference=this.updateOrCreatePstnConferenceEndpoint(conferenceData);return this.logger.info("updateConference SUCCESS"),conference}catch(__e){throw this.logger.error("updateConference ERROR"),__e}}getPstnInstantConferenceEndpoint(){return this.conferenceEndpoints[Object.keys(this.conferenceEndpoints)[0]]}getPstnInstantConferenceEndpointId(){return this.conferenceEndpoints[Object.keys(this.conferenceEndpoints)[0]]?this.conferenceEndpoints[Object.keys(this.conferenceEndpoints)[0]].id:null}async retrievePstnConferences(){try{if(this.logger.info("retrievePstnConferences"),!this.isPstnConferenceAvailable)throw this.logger.warn("retrievePstnConferences - user is not allowed"),new Error("notAllowed");const serverUrl=new URL("conferences",this.confProvPortalURL);serverUrl.searchParams.set("format","full"),serverUrl.searchParams.set("userId",this.contactService.userContact.dbId),serverUrl.searchParams.set("scheduled","false"),serverUrl.searchParams.set("mediaType",MEDIATYPE.PSTNAUDIO);const headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const conferencesProvisionData=(await response.json()).data;for(const conferenceData of conferencesProvisionData)conferenceData&&conferenceData.mediaType===MEDIATYPE.PSTNAUDIO&&this.updateOrCreatePstnConferenceEndpoint(conferenceData);return this.logger.info("retrievePstnConferences successfully"),conferencesProvisionData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrievePstnConferences");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async retrieveConference(confId,force=!1){if(!confId){const error=new Error("retrieveConference - missing parameter");throw this.logger.error(error.message),error}try{if(this.logger.info("retrieveConference - "+confId),this.conferenceEndpoints[confId]&&!force)return this.conferenceEndpoints[confId];const serverUrl=new URL("conferences/"+confId,this.confProvPortalURL),headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const conferenceData=(await response.json()).data;return conferenceData&&Object.prototype.hasOwnProperty.call(conferenceData,"id")?this.updateOrCreatePstnConferenceEndpoint(conferenceData):conferenceData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveConference");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}updateOrCreatePstnConferenceEndpoint(conferenceData){if(this.logger.info("updateOrCreatePstnConferenceEndpoint for "+conferenceData.id),!conferenceData)return this.logger.error("updateOrCreatePstnConferenceEndpoint - no conference data !"),null;if(conferenceData.mediaType!==MEDIATYPE.PSTNAUDIO)return this.logger.warn("updateOrCreatePstnConferenceEndpoint - wrong mediaType: "+conferenceData.mediaType),null;if(this.conferenceEndpoints[conferenceData.id])this.conferenceEndpoints[conferenceData.id].updateFromData(conferenceData),this.conferenceEnpointsSubject.next({id:conferenceData.id,action:"updated"});else{const conference=conference_endpoint_model_1.ConferenceEndpoint.createFromData(conferenceData);this.conferenceEndpoints[conferenceData.id]=conference,this.conferenceEnpointsSubject.next({id:conferenceData.id,action:"created"})}return this.conferenceEndpoints[conferenceData.id]}getConferenceSessionWithConnId(connId){this.logger.debug("getConferenceSessionWithConnId with connId "+connId);for(const key in this.conferenceSessions)if(this.conferenceSessions[key]){const conferenceSession=this.conferenceSessions[key];if(conferenceSession&&conferenceSession.callId===connId)return this.logger.debug(`getConferenceSessionWithConnId with connId ${connId}: - conferenceSessionId: ${key}`),conferenceSession}return null}getConferenceSessionById(confId){return this.conferenceSessions[confId]}async subscribeToPstnSession(confId){if(this.logger.info(`subscribeToPstnSession( confId=${confId})`),!confId){const error=new Error("subscribeToPstnSession - missing parameter");throw this.logger.error(error.message),error}try{const serverUrl=new URL(`conferences/${confId}/join`,this.confPortalURL),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const data={participantPhoneNumber:"joinWithoutAudio",participant:{role:"member",type:"unmuted"},mediaType:MEDIATYPE.PSTNAUDIO},response=await fetch(serverUrl.href,{method:"POST",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const joinStatus=(await response.json()).status;return this.logger.info(`subscribeToPstnSession( confId=${confId}) success : ${joinStatus}`),confId}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"subscribeToPstnSession");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async unSubscribeParticipantFromPstnSession(confId,participantId){if(this.logger.info(`unSubscribeParticipantFromPstnSession( confId=${confId} - participantId=${participantId})`),!confId||!participantId){const error=new Error("unSubscribeParticipantFromPstnSession - missing parameter");throw this.logger.error(error.message),error}try{const serverUrl=new URL(`conferences/${confId}/participants/${participantId}`,this.confPortalURL);serverUrl.searchParams.set("mediaType",MEDIATYPE.PSTNAUDIO);const headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const data={participantPhoneNumber:"joinWithoutAudio",participant:{role:"member",type:"unmuted"},mediaType:MEDIATYPE.PSTNAUDIO},response=await fetch(serverUrl.href,{method:"DELETE",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const dropStatus=(await response.json()).status;this.logger.info(`unSubscribeParticipantFromPstnSession( confId=${confId} ) success : ${dropStatus}`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"unSubscribeParticipantFromPstnSession");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async startPstnConference(confId){if(this.logger.info(`startPstnConference( confId=${confId} )`),!confId){const error=new Error("startPstnConference - missing parameter");throw this.logger.error(error.message),error}if(this.conferenceSessions[confId]&&this.conferenceSessions[confId].active)this.logger.info("startPstnConference : conference already started");else try{const serverUrl=new URL(`conferences/${confId}/start`,this.confPortalURL),headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"PUT",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const startStatus=(await response.json()).status;this.logger.info(`startPstnConference( confId=${confId} ) success : ${startStatus}`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startPstnConference");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async stopPstnConference(confId){if(this.logger.info(`stopPstnConference( confId=${confId} )`),!confId){const error=new Error("stopPstnConference - missing parameter");throw this.logger.error(error.message),error}if(this.conferenceSessions[confId]&&this.conferenceSessions[confId].active)try{const serverUrl=new URL(`conferences/${confId}/stop`,this.confPortalURL),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const data={mediaType:MEDIATYPE.PSTNAUDIO},response=await fetch(serverUrl.href,{method:"PUT",headers:headers,body:JSON.stringify(data)}),responseData=await response.json();if(!response.ok){if(this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),404===response.status&&404e3===responseData.errorDetailsCode){const session=this.getConferenceSessionById(confId);session&&(session.active=!1,session.participants=[],this.removeConferenceSession(confId))}throw response}const startStatus=responseData.status;this.logger.info(`stopPstnConference( confId=${confId} ) success : ${startStatus}`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopPstnConference");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}else this.logger.info("stopPstnConference : no conference to stop")}async joinPstnConference(confId,participantPhoneNumber,participant,country){if(!confId||!participantPhoneNumber||!participant){const error=new Error("joinPstnConference - missing parameter");throw this.logger.error(error.message),error}this.logger.info(`joinPstnConference( confId=${confId}, PhoneNumber=${participantPhoneNumber}, role=${participant.role}, country=${country} )`);try{const serverUrl=new URL(`conferences/${confId}/join`,this.confPortalURL),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const data={participantPhoneNumber:participantPhoneNumber,participant:participant,country:country,mediaType:MEDIATYPE.PSTNAUDIO},response=await fetch(serverUrl.href,{method:"POST",headers:headers,body:JSON.stringify(data)});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;this.conferenceSessions[confId].joinInProgress=!0;const joinStatus=(await response.json()).status;return this.logger.info(`joinPstnConference( confId=${confId} ) success - ${joinStatus}`),confId}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"joinPstnConference");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async disconnectParticipant(confId,participantId){if(!confId||!participantId){const error=new Error("disconnectParticipant - missing parameter");throw this.logger.error(error.message),error}this.logger.info(`disconnectParticipant( confId=${confId}, participantId=${participantId} )`);try{const serverUrl=new URL(`conferences/${confId}/participants/${participantId}`,this.confPortalURL);serverUrl.searchParams.set("mediaType",MEDIATYPE.PSTNAUDIO);const headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"DELETE",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;this.logger.info("disconnectParticipant success")}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"disconnectParticipant");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async retrievePstnPhoneNumbers(shouldFormatResults=!1){if(this.logger.info("retrievePstnPhoneNumbers : "+shouldFormatResults),this.pstnConferencePhoneNumbers)return shouldFormatResults?this.formatConferenceDialinNumbers(this.pstnConferencePhoneNumbers):this.pstnConferencePhoneNumbers;try{const serverUrl=new URL("conferences/audio/phonenumbers",this.confProvPortalURL);serverUrl.searchParams.set("shortList","false");const headers=this.authService.getRequestHeader(),response=await fetch(serverUrl.href,{method:"GET",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response;const responseData=await response.json();return this.logger.info("retrievePstnPhoneNumbers success"),this.pstnConferencePhoneNumbers=responseData.data.phoneNumberList,shouldFormatResults?this.formatConferenceDialinNumbers(this.pstnConferencePhoneNumbers):this.pstnConferencePhoneNumbers}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrievePstnPhoneNumbers");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}async resetPersonalMeetingRoom(){this.logger.info("resetPersonalMeetingRoom");try{const serverUrl=new URL("meetings/reset",this.confProvPortalURL),headers=this.authService.getRequestHeader();headers["Content-Type"]="application/json";const response=await fetch(serverUrl.href,{method:"PUT",headers:headers});if(!response.ok)throw this.logger.debug(`Request ${response.headers.get("x-rainbow-request-id")} failed with status ${response.status}`),response}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"resetPersonalMeetingRoom");throw this.logger.error("[pgiConferenceService] "+errorInfo.message),errorInfo.error}}formatConferenceDialinNumbers(phoneNumbers){const pstnConferencePhoneNumbers={};return phoneNumbers.forEach(phoneNumber=>{if(phoneNumber.locationcode){const propertyName=this.countryService.getAlpha2Code(phoneNumber.locationcode.substr(0,3));propertyName&&(pstnConferencePhoneNumbers[propertyName]||(pstnConferencePhoneNumbers[propertyName]={numbersList:[]})),pstnConferencePhoneNumbers[propertyName].numbersList.push({number:phoneNumber.number,locationName:phoneNumber.location,city:phoneNumber.location.split(", ")[1],numberType:phoneNumber.numberType,needLanguageSelection:phoneNumber.needLanguageSelection})}}),pstnConferencePhoneNumbers}async refreshConferenceSessions(){this.logger.info("refreshConferenceSessions");try{for(const confId in this.conferenceSessions)Object.prototype.hasOwnProperty.call(this.conferenceSessions,confId)&&await this.makeSnapshotForConfId(confId)}catch(error){this.logger.error("refreshConferenceSessions -- ERROR")}}subscribeToMyConferenceSessions(eventHandler){this.conferenceSessions[this.getPstnInstantConferenceEndpointId()]&&this.conferenceSessions[this.getPstnInstantConferenceEndpointId()].activeSubject.pipe(distinctUntilChanged_1.distinctUntilChanged()).subscribe(eventHandler)}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class ConferenceEndpoint{constructor(id,userId,mediaType,scheduled,confDialOutDisabled=!1,passCodes=[],playEntryTone=!1,muteUponEntry=!1){this.id=id,this.userId=userId,this.mediaType=mediaType,this.scheduled=scheduled,this.confDialOutDisabled=confDialOutDisabled,this.passCodes=passCodes,this.playEntryTone=playEntryTone,this.muteUponEntry=muteUponEntry}static createFromData(data){return new ConferenceEndpoint(data.id,data.userId,data.mediaType,data.scheduled,data.confDialOutDisabled,data.passCodes,data.playEntryTone,data.muteUponEntry)}updateFromData(data){this.id=data.id,this.userId=data.userId,this.mediaType=data.mediaType,this.scheduled=data.scheduled,this.confDialOutDisabled=data.confDialOutDisabled,this.passCodes=data.passCodes,this.playEntryTone=data.playEntryTone,this.muteUponEntry=data.muteUponEntry}}exports.ConferenceEndpoint=ConferenceEndpoint},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const conference_participant_model_1=__webpack_require__(310),BehaviorSubject_1=__webpack_require__(135);class ConferenceSession{constructor(id,participants,active,type){this.conferenceStats=null,this.talkers=[],this.talkerSubject=new BehaviorSubject_1.BehaviorSubject(this.talkers),this._haveJoined=!1,this.haveJoinedSubject=new BehaviorSubject_1.BehaviorSubject(this._haveJoined),this._joinInProgress=!1,this.joinInProgressSubject=new BehaviorSubject_1.BehaviorSubject(this._haveJoined),this._active=!1,this.activeSubject=new BehaviorSubject_1.BehaviorSubject(this._active),this._callId="",this.callIdSubject=new BehaviorSubject_1.BehaviorSubject(this._callId),this._participants=[],this.participantsSubject=new BehaviorSubject_1.BehaviorSubject(this._participants),this._lock=!1,this.lockSubject=new BehaviorSubject_1.BehaviorSubject(this._lock),this.id=id,this.participants=participants,this.active=active,this.type=type}static createFromData(id,participants,active,type){return new ConferenceSession(id,participants.map(participantData=>conference_participant_model_1.ConferenceParticipant.createFromData(participantData)),active,type)}get haveJoined(){return this._haveJoined}set haveJoined(value){this._haveJoined=value,this.haveJoinedSubject.next(this._haveJoined)}get joinInProgress(){return this._joinInProgress}set joinInProgress(value){this._joinInProgress=value,this.joinInProgressSubject.next(this._joinInProgress)}get active(){return this._active}set active(value){this._active=value,this.activeSubject.next(this._active)}get callId(){return this._callId}set callId(value){this._callId=value,this.callIdSubject.next(this._callId)}get participants(){return this._participants}set participants(participantsData){if(participantsData.length)for(const participantData of participantsData){if(!participantData.participantId)return;const existingParticipant=this.getParticipantById(participantData.participantId)?this.getParticipantById(participantData.participantId):this.getParticipantByJid(participantData.jid_im);existingParticipant?existingParticipant.updateFromData(participantData):this._participants.push(conference_participant_model_1.ConferenceParticipant.createFromData(participantData))}else this._participants=[];this.participantsSubject.next(this._participants)}get lock(){return this._lock}set lock(value){this._lock=value,this.lockSubject.next(this._lock)}cleanupSessionData(){this.participants=[],this.talkers=[],this.haveJoined=!1}updateFromData(participants=[],active=!1){this.participants=participants,this.active=active}updateStateFromData(active,lock){this.active=active,this.lock=lock}removeParticipants(removedParticipantsIds=[]){for(const removedParticipantId of removedParticipantsIds){const removedParticipantIndex=this.getParticipantIndexById(removedParticipantId);-1!==removedParticipantIndex&&this._participants.splice(removedParticipantIndex,1)}this.participantsSubject.next(this._participants)}updateTalkers(talkers){this.talkers=talkers,this.talkerSubject.next(this.talkers)}getParticipants(){return this.participants}getConnectedParticipants(){return this.participants?this.participants.filter(participant=>"disconnected"!==participant.participantState&&"watching"!==participant.participantState):void 0}getWatchingParticipants(){return this.participants?this.participants.filter(participant=>"watching"===participant.participantState):void 0}getConnectedParticipantsExceptLeader(){return this.participants?this.participants.filter(participant=>"disconnected"!==participant.participantState&&"watching"!==participant.participantState&&"moderator"!==participant.participantRole):void 0}getConnectedLeaderParticipantsExcept(jid){return this.participants?this.participants.filter(participant=>"disconnected"!==participant.participantState&&"moderator"===participant.participantRole&&participant.jid_im!==jid):void 0}getConnectedParticipantsExcept(jid){return this.participants?this.participants.filter(participant=>participant.jid_im!==jid&&"disconnected"!==participant.participantState&&"watching"!==participant.participantState):void 0}getLeaderParticipant(){return this.participants?this.participants.find(participant=>"moderator"===participant.participantRole&&"disconnected"!==participant.participantState&&"watching"!==participant.participantState):void 0}getLeaderParticipantById(jid){return this.participants?this.participants.find(participant=>"moderator"===participant.participantRole&&"disconnected"!==participant.participantState&&"watching"!==participant.participantState&&participant.jid_im===jid):void 0}getParticipantById(participantId){return this.participants?this.participants.find(participant=>participant.participantId===participantId):void 0}getParticipantByJid(jid){return this.participants?this.participants.find(participant=>participant.jid_im===jid):void 0}getNonDisconnectedParticipantByJid(jid){return this.participants?this.participants.find(participant=>participant.jid_im===jid&&"disconnected"!==participant.participantState):void 0}getConnectedParticipantByJid(jid){return this.participants?this.participants.find(participant=>participant.jid_im===jid&&"connected"===participant.participantState):void 0}getWatchingParticipantByJid(jid){return this.participants?this.participants.find(participant=>participant.jid_im===jid&&"watching"===participant.participantState):void 0}getParticipantIndexById(participantId){return this.participants?this.participants.findIndex(participant=>participant.participantId===participantId):-1}isParticipantConnectedByJid(jid){return void 0!==this.participants&&this.participants.some(participant=>participant.jid_im===jid&&"connected"===participant.participantState)}isParticipantWatchingByJid(jid){return void 0!==this.participants&&this.participants.some(participant=>participant.jid_im===jid&&"watching"===participant.participantState)}isParticipantRingingByJid(jid){return void 0!==this.participants&&this.participants.some(participant=>participant.jid_im===jid&&"ringing"===participant.participantState)}isParticipantConnectedWithThisUAByJid(jid){return this.haveJoined&&void 0!==this.participants&&this.participants.some(participant=>participant.jid_im===jid&&"connected"===participant.participantState)}getTalkers(){return this.talkers}getParticipantStatus(jid){if(this.participants&&this.participants.length){const participant=this.participants.find(_participant=>_participant.jid_im===jid);if(participant)return participant.participantState}return"none"}}exports.ConferenceSession=ConferenceSession},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Subject_1=__webpack_require__(77),queue_1=__webpack_require__(444),Subscription_1=__webpack_require__(78),observeOn_1=__webpack_require__(451),ObjectUnsubscribedError_1=__webpack_require__(138),SubjectSubscription_1=__webpack_require__(160),ReplaySubject=function(_super){function ReplaySubject(bufferSize,windowTime,scheduler){void 0===bufferSize&&(bufferSize=Number.POSITIVE_INFINITY),void 0===windowTime&&(windowTime=Number.POSITIVE_INFINITY);var _this=_super.call(this)||this;return _this.scheduler=scheduler,_this._events=[],_this._infiniteTimeWindow=!1,_this._bufferSize=bufferSize<1?1:bufferSize,_this._windowTime=windowTime<1?1:windowTime,windowTime===Number.POSITIVE_INFINITY?(_this._infiniteTimeWindow=!0,_this.next=_this.nextInfiniteTimeWindow):_this.next=_this.nextTimeWindow,_this}return __extends(ReplaySubject,_super),ReplaySubject.prototype.nextInfiniteTimeWindow=function(value){var _events=this._events;_events.push(value),_events.length>this._bufferSize&&_events.shift(),_super.prototype.next.call(this,value)},ReplaySubject.prototype.nextTimeWindow=function(value){this._events.push(new ReplayEvent(this._getNow(),value)),this._trimBufferThenGetEvents(),_super.prototype.next.call(this,value)},ReplaySubject.prototype._subscribe=function(subscriber){var subscription,_infiniteTimeWindow=this._infiniteTimeWindow,_events=_infiniteTimeWindow?this._events:this._trimBufferThenGetEvents(),scheduler=this.scheduler,len=_events.length;if(this.closed)throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError;if(this.isStopped||this.hasError?subscription=Subscription_1.Subscription.EMPTY:(this.observers.push(subscriber),subscription=new SubjectSubscription_1.SubjectSubscription(this,subscriber)),scheduler&&subscriber.add(subscriber=new observeOn_1.ObserveOnSubscriber(subscriber,scheduler)),_infiniteTimeWindow)for(var i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i]);else for(i=0;i<len&&!subscriber.closed;i++)subscriber.next(_events[i].value);return this.hasError?subscriber.error(this.thrownError):this.isStopped&&subscriber.complete(),subscription},ReplaySubject.prototype._getNow=function(){return(this.scheduler||queue_1.queue).now()},ReplaySubject.prototype._trimBufferThenGetEvents=function(){for(var now=this._getNow(),_bufferSize=this._bufferSize,_windowTime=this._windowTime,_events=this._events,eventsCount=_events.length,spliceCount=0;spliceCount<eventsCount&&!(now-_events[spliceCount].time<_windowTime);)spliceCount++;return eventsCount>_bufferSize&&(spliceCount=Math.max(spliceCount,eventsCount-_bufferSize)),spliceCount>0&&_events.splice(0,spliceCount),_events},ReplaySubject}(Subject_1.Subject);exports.ReplaySubject=ReplaySubject;var ReplayEvent=function(time,value){this.time=time,this.value=value}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var QueueAction_1=__webpack_require__(445),QueueScheduler_1=__webpack_require__(448);exports.queueScheduler=new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction),exports.queue=exports.queueScheduler},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var QueueAction=function(_super){function QueueAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this}return __extends(QueueAction,_super),QueueAction.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),delay>0?_super.prototype.schedule.call(this,state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)},QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay)},QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),null!==delay&&delay>0||null===delay&&this.delay>0?_super.prototype.requestAsyncId.call(this,scheduler,id,delay):scheduler.flush(this)},QueueAction}(__webpack_require__(446).AsyncAction);exports.QueueAction=QueueAction},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var AsyncAction=function(_super){function AsyncAction(scheduler,work){var _this=_super.call(this,scheduler,work)||this;return _this.scheduler=scheduler,_this.work=work,_this.pending=!1,_this}return __extends(AsyncAction,_super),AsyncAction.prototype.schedule=function(state,delay){if(void 0===delay&&(delay=0),this.closed)return this;this.state=state;var id=this.id,scheduler=this.scheduler;return null!=id&&(this.id=this.recycleAsyncId(scheduler,id,delay)),this.pending=!0,this.delay=delay,this.id=this.id||this.requestAsyncId(scheduler,this.id,delay),this},AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){return void 0===delay&&(delay=0),setInterval(scheduler.flush.bind(scheduler,this),delay)},AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(void 0===delay&&(delay=0),null!==delay&&this.delay===delay&&!1===this.pending)return id;clearInterval(id)},AsyncAction.prototype.execute=function(state,delay){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var error=this._execute(state,delay);if(error)return error;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},AsyncAction.prototype._execute=function(state,delay){var errored=!1,errorValue=void 0;try{this.work(state)}catch(e){errored=!0,errorValue=!!e&&e||new Error(e)}if(errored)return this.unsubscribe(),errorValue},AsyncAction.prototype._unsubscribe=function(){var id=this.id,scheduler=this.scheduler,actions=scheduler.actions,index=actions.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==index&&actions.splice(index,1),null!=id&&(this.id=this.recycleAsyncId(scheduler,id,null)),this.delay=null},AsyncAction}(__webpack_require__(447).Action);exports.AsyncAction=AsyncAction},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Action=function(_super){function Action(scheduler,work){return _super.call(this)||this}return __extends(Action,_super),Action.prototype.schedule=function(state,delay){return void 0===delay&&(delay=0),this},Action}(__webpack_require__(78).Subscription);exports.Action=Action},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var QueueScheduler=function(_super){function QueueScheduler(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(QueueScheduler,_super),QueueScheduler}(__webpack_require__(449).AsyncScheduler);exports.QueueScheduler=QueueScheduler},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Scheduler_1=__webpack_require__(450),AsyncScheduler=function(_super){function AsyncScheduler(SchedulerAction,now){void 0===now&&(now=Scheduler_1.Scheduler.now);var _this=_super.call(this,SchedulerAction,(function(){return AsyncScheduler.delegate&&AsyncScheduler.delegate!==_this?AsyncScheduler.delegate.now():now()}))||this;return _this.actions=[],_this.active=!1,_this.scheduled=void 0,_this}return __extends(AsyncScheduler,_super),AsyncScheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),AsyncScheduler.delegate&&AsyncScheduler.delegate!==this?AsyncScheduler.delegate.schedule(work,delay,state):_super.prototype.schedule.call(this,work,delay,state)},AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active)actions.push(action);else{var error;this.active=!0;do{if(error=action.execute(action.state,action.delay))break}while(action=actions.shift());if(this.active=!1,error){for(;action=actions.shift();)action.unsubscribe();throw error}}},AsyncScheduler}(Scheduler_1.Scheduler);exports.AsyncScheduler=AsyncScheduler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Scheduler=function(){function Scheduler(SchedulerAction,now){void 0===now&&(now=Scheduler.now),this.SchedulerAction=SchedulerAction,this.now=now}return Scheduler.prototype.schedule=function(work,delay,state){return void 0===delay&&(delay=0),new this.SchedulerAction(this,work).schedule(state,delay)},Scheduler.now=function(){return Date.now()},Scheduler}();exports.Scheduler=Scheduler},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var Subscriber_1=__webpack_require__(95),Notification_1=__webpack_require__(452);exports.observeOn=function(scheduler,delay){return void 0===delay&&(delay=0),function(source){return source.lift(new ObserveOnOperator(scheduler,delay))}};var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){void 0===delay&&(delay=0),this.scheduler=scheduler,this.delay=delay}return ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay))},ObserveOnOperator}();exports.ObserveOnOperator=ObserveOnOperator;var ObserveOnSubscriber=function(_super){function ObserveOnSubscriber(destination,scheduler,delay){void 0===delay&&(delay=0);var _this=_super.call(this,destination)||this;return _this.scheduler=scheduler,_this.delay=delay,_this}return __extends(ObserveOnSubscriber,_super),ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination),this.unsubscribe()},ObserveOnSubscriber.prototype.scheduleMessage=function(notification){this.destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)))},ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification_1.Notification.createNext(value))},ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(Notification_1.Notification.createError(err)),this.unsubscribe()},ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification_1.Notification.createComplete()),this.unsubscribe()},ObserveOnSubscriber}(Subscriber_1.Subscriber);exports.ObserveOnSubscriber=ObserveOnSubscriber;var ObserveOnMessage=function(notification,destination){this.notification=notification,this.destination=destination};exports.ObserveOnMessage=ObserveOnMessage},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var empty_1=__webpack_require__(453),of_1=__webpack_require__(454),throwError_1=__webpack_require__(458);!function(NotificationKind){NotificationKind.NEXT="N",NotificationKind.ERROR="E",NotificationKind.COMPLETE="C"}(exports.NotificationKind||(exports.NotificationKind={}));var Notification=function(){function Notification(kind,value,error){this.kind=kind,this.value=value,this.error=error,this.hasValue="N"===kind}return Notification.prototype.observe=function(observer){switch(this.kind){case"N":return observer.next&&observer.next(this.value);case"E":return observer.error&&observer.error(this.error);case"C":return observer.complete&&observer.complete()}},Notification.prototype.do=function(next,error,complete){switch(this.kind){case"N":return next&&next(this.value);case"E":return error&&error(this.error);case"C":return complete&&complete()}},Notification.prototype.accept=function(nextOrObserver,error,complete){return nextOrObserver&&"function"==typeof nextOrObserver.next?this.observe(nextOrObserver):this.do(nextOrObserver,error,complete)},Notification.prototype.toObservable=function(){switch(this.kind){case"N":return of_1.of(this.value);case"E":return throwError_1.throwError(this.error);case"C":return empty_1.empty()}throw new Error("unexpected notification kind value")},Notification.createNext=function(value){return void 0!==value?new Notification("N",value):Notification.undefinedValueNotification},Notification.createError=function(err){return new Notification("E",void 0,err)},Notification.createComplete=function(){return Notification.completeNotification},Notification.completeNotification=new Notification("C"),Notification.undefinedValueNotification=new Notification("N",void 0),Notification}();exports.Notification=Notification},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=__webpack_require__(94);exports.EMPTY=new Observable_1.Observable((function(subscriber){return subscriber.complete()})),exports.empty=function(scheduler){return scheduler?function(scheduler){return new Observable_1.Observable((function(subscriber){return scheduler.schedule((function(){return subscriber.complete()}))}))}(scheduler):exports.EMPTY}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var isScheduler_1=__webpack_require__(455),fromArray_1=__webpack_require__(456),scheduleArray_1=__webpack_require__(311);exports.of=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=args[args.length-1];return isScheduler_1.isScheduler(scheduler)?(args.pop(),scheduleArray_1.scheduleArray(args,scheduler)):fromArray_1.fromArray(args)}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isScheduler=function(value){return value&&"function"==typeof value.schedule}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=__webpack_require__(94),subscribeToArray_1=__webpack_require__(457),scheduleArray_1=__webpack_require__(311);exports.fromArray=function(input,scheduler){return scheduler?scheduleArray_1.scheduleArray(input,scheduler):new Observable_1.Observable(subscribeToArray_1.subscribeToArray(input))}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.subscribeToArray=function(array){return function(subscriber){for(var i=0,len=array.length;i<len&&!subscriber.closed;i++)subscriber.next(array[i]);subscriber.complete()}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=__webpack_require__(94);function dispatch(_a){var error=_a.error;_a.subscriber.error(error)}exports.throwError=function(error,scheduler){return scheduler?new Observable_1.Observable((function(subscriber){return scheduler.schedule(dispatch,0,{error:error,subscriber:subscriber})})):new Observable_1.Observable((function(subscriber){return subscriber.error(error)}))}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const xmpp_service_1=__webpack_require__(9),logger_service_1=__webpack_require__(4),promiseQueue_1=__webpack_require__(107),call_model_1=__webpack_require__(29),contact_service_1=__webpack_require__(6),event_service_1=__webpack_require__(11);class TelephonySipWiseEventHandler{constructor(telephonyService){this.telephonyService=telephonyService,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.messageHandlerRef=null,this.overflowUpdatRef=null,this.userConfigurationRef=null,this.huntingGroupUpdateRef=null,this.CallFailureLabels={invalidNumberFormat:"invalidPhoneNumber",destOutOfOrder:"outOfService",destNotObtainable:"outOfService",doNotDisturb:"dnd",busy:"busy",incompatibleDestination:"numberNotAllowed",resourcesNotAvailable:"outOfService"},this.promiseQueue=promiseQueue_1.PromiseQueue.create()}static create(telephonyService){return new TelephonySipWiseEventHandler(telephonyService)}attachHandlers(){this.detachHandlers(),this.messageHandlerRef=this.xmppService.addHandler(stanza=>(this.onCallserviceMessageReceived(stanza),!0),TelephonySipWiseEventHandler.CALLSERVICE_NS,"message",null),this.overflowUpdatRef=this.xmppService.addHandler(stanza=>(this.onOverflowUpdateMessageReceived(stanza),!0),TelephonySipWiseEventHandler.OVERFLOWUPDATE_NS,"message",null),this.userConfigurationRef=this.xmppService.addHandler(stanza=>(this.onUserConfigurationMessageReceived(stanza),!0),TelephonySipWiseEventHandler.USERCONFIGURATION_NS,"message",null),this.huntingGroupUpdateRef=this.xmppService.addHandler(stanza=>(this.onhuntingGroupUpdateMessageReceived(stanza),!0),null,"message","groupchat")}detachHandlers(){this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null),this.overflowUpdatRef&&(this.xmppService.deleteHandler(this.overflowUpdatRef),this.overflowUpdatRef=null),this.userConfigurationRef&&(this.xmppService.deleteHandler(this.userConfigurationRef),this.userConfigurationRef=null),this.huntingGroupUpdateRef&&(this.xmppService.deleteHandler(this.huntingGroupUpdateRef),this.huntingGroupUpdateRef=null)}onCallserviceMessageReceived(stanza){try{const actionElem=$(stanza).find("telephony"),forwardUpdatedElem=actionElem.find("forwardUpdated");if(forwardUpdatedElem&&0!==forwardUpdatedElem.length)return void this.onforwardUpdatedMsg(forwardUpdatedElem);const eventElem=actionElem.find("event"),seqNum=eventElem.attr("seqNum");if(!seqNum)return void this.logger.info("[TelephonySipWiseEventHandler] onCallserviceMessageReceived -- no telephony event received then msg ignored");{const ts=eventElem.attr("ts"),cause=eventElem.attr("cause");this.logger.info("[TelephonySipWiseEventHandler] onCallserviceMessageReceived -- telephony event received and queued: seqNum = "+seqNum+" cause = "+cause+" ts = "+ts)}this.promiseQueue.add(()=>this.onTelephonyEvent(eventElem,seqNum))}catch(error){this.logger.error("[TelephonySipWiseEventHandler] onCallserviceMessageReceived -- failure -- "+error.message)}}onOverflowUpdateMessageReceived(stanza){try{const stanzaElem=$(stanza),overflowUpdated=stanzaElem.find("overflowOnSubscriberUpdated").find("overflowUpdated");overflowUpdated&&0!==overflowUpdated.length&&this.overflowUpdatedMsg(overflowUpdated)}catch(error){this.logger.error("[TelephonySipWiseEventHandler] onOverflowUpdateMessageReceived -- failure -- "+error.message)}}onUserConfigurationMessageReceived(stanza){try{const stanzaElem=$(stanza),routingElt=stanzaElem.find("routing");routingElt&&0!==routingElt.length&&this.onRoutingUpdatedMsg(routingElt);const cliUpdatedElt=stanzaElem.find("cliUpdated");cliUpdatedElt&&0!==cliUpdatedElt.length&&this.onCliUpdatedMsg(cliUpdatedElt)}catch(error){this.logger.error("[TelephonySipWiseEventHandler] onUserConfigurationMessageReceived -- failure -- "+error.message)}}onhuntingGroupUpdateMessageReceived(stanza){try{const rvcpGroupElt=$(stanza).find("rvcpgroup"),memberData=rvcpGroupElt.find("member"),memberStatus=memberData.attr("status");rvcpGroupElt&&0!==rvcpGroupElt.length&&rvcpGroupElt.attr("event")&&(this.logger.info("[telephonySipWiseEventHandler] onhuntingGroupUpdateMessageReceived -- update HG received -- "),this.logger.info("[telephonySipWiseEventHandler] onhuntingGroupUpdateMessageReceived -- for memberId/role/status: "+memberData.attr("memberId")+"/"+memberData.text()+"/"+memberStatus),this.eventService.publish("ON_SIPWISE_HUNTING_GROUP_UPDATE_EVENT"))}catch(error){this.logger.error("[TelephonySipWiseEventHandler] onhuntingGroupUpdateMessageReceived -- failure -- "+error.message)}}onforwardUpdatedMsg(forwardUpdatedElem){this.logger.info("[TelephonySipWiseEventHandler] onforwardUpdatedMsg : msg forwardUpdated received");const forwardItem=forwardUpdatedElem.attr("forwardItem");if("user"===forwardItem&&this.telephonyService.getForwardStatus(),"group"===forwardItem){const groupId=forwardUpdatedElem.attr("forwardItemId");groupId?(this.telephonyService.getSipWiseUserGroupsForwards(groupId),"manager"===this.telephonyService.sipWiseManAssistGetMyRole()&&this.telephonyService.getForwardStatus()):this.telephonyService.getSipWiseUserGroups()}}onRoutingUpdatedMsg(routingElem){this.logger.info("[TelephonySipWiseEventHandler] onRoutingUpdatedMsg : msg routing update received");const routingUpdatedElt=routingElem.find("routingUpdated"),currentDeviceId=routingUpdatedElt.find("currentDeviceId").text(),destinationElem=routingUpdatedElt.find("destinations"),destinations=[],ringObj=this.telephonyService.telephonyServiceSipWise.routingData;currentDeviceId&&destinationElem?(ringObj.alsoOfficePhoneRingEnabled=!1,destinationElem.find("destination").each((__index,destination)=>{const destinationElemIter=$(destination),type=destinationElemIter.attr("type"),deviceId=destinationElemIter.attr("deviceId");this.logger.info("[TelephonySipWiseEventHandler] onRoutingUpdatedMsg ITER desti / type = "+type+" deviceId = "+deviceId),destinations.push({deviceId:deviceId,type:type}),"sip"===type&&(ringObj.alsoOfficePhoneRingEnabled=!0)}),currentDeviceId&&this.telephonyService.telephonyServiceSipWise.setCurrentDevice(currentDeviceId),destinations&&destinations.length&&(this.logger.info("[TelephonySipWiseEventHandler] onRoutingUpdatedMsg  / ringing destinations nb  = "+destinations.length),ringObj.ringingDestinations=destinations,this.eventService.publish("ON_SIPWISE_ROUTING_EVENT",this.telephonyService.telephonyServiceSipWise.getCurrentDevice().type,ringObj))):this.logger.info("[TelephonySipWiseEventHandler] onRoutingUpdatedMsg Anomaly: no current/destination elts")}overflowUpdatedMsg(overflowUpdated){this.logger.info("[TelephonySipWiseEventHandler] overflowUpdatedMsg received :"+(null!==overflowUpdated)),this.telephonyService.getForwardStatus()}onCliUpdatedMsg(cliUpdatedElt){this.logger.info("[TelephonyServiceEventHandlerSipWise] cliUpdatedMsg received");const policy=cliUpdatedElt.find("policy").text(),phoneNumberId=cliUpdatedElt.find("phoneNumberId").text(),number=cliUpdatedElt.find("number").text();if(!policy||!phoneNumberId||!number)return void this.logger.info("[TelephonyServiceEventHandlerSipWise] onCliUpdatedMsg Anomaly: missing CLI para");const cliObject={policy:policy,phoneNumberId:phoneNumberId,number:number};this.telephonyService.getSipWiseAllCli(!0),this.eventService.publish("ON_CLI_EVENT",cliObject)}async onTelephonyEvent(eventElem,seqNum){this.logger.info("[TelephonySipWiseEventHandler] [TEL] onTelephonyEvent for seqNum = "+seqNum);const callsToUpdate=[];try{await this.manageAllCalls(eventElem,seqNum,callsToUpdate),await this.manageAllLegs(eventElem,seqNum,callsToUpdate),await this.manageAllEndPoints(eventElem,seqNum,callsToUpdate)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] onTelephonyEvent CATCH / seqNum = "+seqNum);const errorMessage="onTelephonyEvent -- "+error.message;this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}finally{this.callsUpdate(callsToUpdate)}}async manageAllCalls(eventElem,seqNum,callsToUpdate){const callPromises=[];let liveCalls=0;eventElem.find("call").each((__index,callElem)=>{const callElemIter=$(callElem),callId=callElemIter.attr("callId"),op=callElemIter.attr("op");this.logger.debug("[TelephonySipWiseEventHandler] manageAllCalls ITER callId = "+callId+" op = "+op+" / seqNum = "+seqNum),"ended"!==op&&liveCalls++,callPromises.push((async()=>{try{await this.manageCallElem(callElemIter,eventElem,seqNum,callsToUpdate)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] manageAllCalls CATCH / seqNum = "+seqNum);const errorMessage="manageAllCalls -- "+error.message;this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}})())});try{await Promise.all(callPromises)}finally{this.logger.info("[TelephonySipWiseEventHandler] manageAllCalls : nb living calls = "+liveCalls+" / seqNum = "+seqNum)}}async manageCallElem(callElem,eventElem,seqNum,callsToUpdate){if(callElem.length)try{const callId=callElem.attr("callId"),oldCallId=callElem.attr("oldCallId"),op=callElem.attr("op");if(!callId){const errorMessage="manageCallElem -- Anomaly callId missing / seqNum = "+seqNum;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}if(!op){const errorMessage="manageCallElem -- Anomaly op missing / seqNum = "+seqNum;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}if(this.logger.info("[TelephonySipWiseEventHandler] manageCallElem callId = "+callId+" op = "+op+" / seqNum = "+seqNum),oldCallId){const call=this.telephonyService.calls[oldCallId];call?(this.logger.info("[TelephonySipWiseEventHandler] manageCallElem : oldcallId = "+oldCallId+" ended  / seqNum = "+seqNum),this.telephonyService.clearCall(call,!0),callsToUpdate[callId]={trigger:!0,info:"callended"}):this.logger.info("[TelephonySipWiseEventHandler] manageCallElem : oldCallId "+oldCallId+" ended, no call found")}switch(op){case"created":{this.logger.info("[TelephonySipWiseEventHandler] manageCallElem / call creation / seqNum = "+seqNum);const call=this.telephonyService.createCallSipWise(call_model_1.Call.Status.UNKNOWN,callId);if(call){const cause=eventElem.attr("cause");cause&&call.setInitCauseSipWiseData(cause);const direction=callElem.find("direction").text();direction&&call.setDirection(direction);const type=callElem.find("type").text();type&&call.setTypeSipWiseData(type);const calledElem=callElem.find("called"),called={};called.phoneNumber=calledElem.find("phoneNumber").text(),called.displayName=calledElem.find("displayName").text(),called.phoneNumber||(called.phoneNumber=eventElem.find("phoneNumber").text());const numberForLogs=called.phoneNumber?called.phoneNumber.charAt(0)+called.phoneNumber.replace(/[^\s](?=.{1,}$)/g,"*").substr(1):"";this.logger.info(`[TelephonySipWiseEventHandler] manageCallElem / call creation / seqNum = ${seqNum} -- setCalledSipWiseData -- ${numberForLogs}`),call.setCalledSipWiseData(called);const autoOffHookResource=callElem.find("autoOffHookResource").text();autoOffHookResource&&(call.setAutoOffHookResource(autoOffHookResource),this.logger.info("[TelephonySipWiseEventHandler] manageCallElem autoOffHookResource = "+autoOffHookResource+" callId = "+callId+" / seqNum = "+seqNum)),"singleStepTransfer"===call.getInitCauseSipWiseData()&&call.getAutoOffHookResource()&&(call.setMixtWebTelSingleStepTrans(!0),this.logger.info("[TelephonySipWiseEventHandler] manageCallElem mixtWebTelSingleStepTrans = true for callId = "+callId+" / seqNum = "+seqNum))}callsToUpdate[callId]={trigger:!1,info:"call"+op};break}case"updated":{this.logger.info("[TelephonySipWiseEventHandler] manageCallElem / call update / seqNum = "+seqNum);const calledElem=callElem.find("called"),called={};called.phoneNumber=calledElem.find("phoneNumber").text(),called.displayName=calledElem.find("displayName").text(),called.phoneNumber||(called.phoneNumber=eventElem.find("phoneNumber").text());const call=this.getCallFromCallId(callId);if(call){const numberForLogs=called.phoneNumber?called.phoneNumber.charAt(0)+called.phoneNumber.replace(/[^\s](?=.{1,}$)/g,"*").substr(1):"";this.logger.info(`[TelephonySipWiseEventHandler] manageCallElem / call update / seqNum = ${seqNum} -- setCalledSipWiseData -- ${numberForLogs}`),call.setCalledSipWiseData(called)}this.checkCallRelevancy(callId)?callsToUpdate[callId]={trigger:!0,info:"call"+op}:this.logger.info("[TelephonySipWiseEventHandler] manageCallElem : on callId "+callId+" updated, not relevant");break}case"ended":this.logger.info("[TelephonySipWiseEventHandler] manageCallElem / call end / seqNum = "+seqNum),this.checkCallRelevancy(callId)?(this.logger.info("[TelephonySipWiseEventHandler] manageCallElem : callId = "+callId+" ended  / seqNum = "+seqNum),this.telephonyService.clearCall(this.getCallFromCallId(callId),!0),callsToUpdate[callId]={trigger:!0,info:"call"+op}):this.logger.info("[TelephonySipWiseEventHandler] manageCallElem : on callId "+callId+" ended, not relevant");break;default:{this.logger.info("[TelephonySipWiseEventHandler] manageCallElem / invalid op -> "+op+" / seqNum = "+seqNum);const errorMessage="manageCallElem -- Anomaly invalid op / seqNum = "+seqNum;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}}}catch(error){const errorMessage="manageCallElem -- "+error.message;throw new Error(errorMessage)}else this.logger.info("[TelephonySipWiseEventHandler] manageCallElem / no CallElem")}async manageAllLegs(eventElem,seqNum,callsToUpdate){const legPromises=[];let liveLegs=0;eventElem.find("leg").each((__index,leg)=>{const legElemIter=$(leg),legId=legElemIter.attr("legId"),op=legElemIter.attr("op");this.logger.info("[TelephonySipWiseEventHandler] manageAllLegs ITER legId = "+legId+" op = "+op+" / seqNum = "+seqNum),legElemIter.length&&("ended"!==op&&liveLegs++,legPromises.push((async()=>{try{await this.manageLegElem(legElemIter,eventElem,seqNum,callsToUpdate)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] manageAllLegs CATCH / seqNum = "+seqNum);const errorMessage="manageAllLegs -- "+error.message;this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}})()))});try{await Promise.all(legPromises)}finally{this.logger.info("[TelephonySipWiseEventHandler] manageAllLegs : nb living legs = "+liveLegs+" / seqNum = "+seqNum)}}async manageLegElem(legElem,eventElem,seqNum,callsToUpdate){try{const legId=legElem.attr("legId"),callId=legElem.attr("callId"),deviceId=legElem.attr("deviceId"),state=legElem.attr("state"),op=legElem.attr("op");if(!legId){throw new Error("manageLegElem -- Anomaly legId missing / seqNum = "+seqNum)}if(!callId){throw new Error("manageLegElem -- Anomaly callId missing / seqNum = "+seqNum)}if(!op){throw new Error("manageLegElem -- Anomaly op missing / seqNum = "+seqNum)}switch(this.logger.info("[TelephonySipWiseEventHandler] manageLegElem legId = "+legId+" callId = "+callId+" deviceId = "+deviceId+" state = "+state+" op = "+op+" / seqNum = "+seqNum),op){case"created":if(this.computeCallRelevancy(deviceId,callId)){this.logger.debug("[TelephonySipWiseEventHandler] manageLegElem / create legId/callId = "+legId+"/"+callId+" relevant"),await this.legElemCreate(eventElem);this.getCallFromCallId(callId).setConnectionIdSipWise(legId),callsToUpdate[callId]={trigger:!0,info:"leg"+op}}else this.logger.info("[TelephonySipWiseEventHandler] manageLegElem / create legId/callId = "+legId+"/"+callId+" not relevant");break;case"updated":if(this.computeCallRelevancy(deviceId,callId)){this.logger.debug("[TelephonySipWiseEventHandler] manageLegElem / update legId/callId = "+legId+"/"+callId+" relevant"),await this.legElemUpdate(eventElem);this.getCallFromCallId(callId).setConnectionIdSipWise(legId),callsToUpdate[callId]={trigger:!0,info:"leg"+op}}else this.logger.info("[TelephonySipWiseEventHandler] manageLegElem / update legId/callId = "+legId+"/"+callId+" not relevant");break;case"ended":if(this.logger.info("[TelephonySipWiseEventHandler] manageLegElem / leg end / seqNum = "+seqNum),this.computeCallRelevancy(deviceId,callId)){this.getCallFromCallId(callId)?(this.telephonyService.clearCall(this.getCallFromCallId(callId),!0),callsToUpdate[callId]={trigger:!0,info:"leg"+op}):this.logger.info("[TelephonySipWiseEventHandler] manageLegElem : leg ended / call already removed")}else this.logger.info("[TelephonySipWiseEventHandler] manageLegElem : leg ended but not relevant");break;default:{this.logger.info("[TelephonySipWiseEventHandler] manageLegElem / invalid op -> "+op+" / seqNum = "+seqNum);const errorMessage="manageLegElem -- Anomaly invalid op / seqNum = "+seqNum;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}}}catch(error){const errorMessage="manageCallElem -- "+error.message;throw new Error(errorMessage)}}async manageAllEndPoints(eventElem,seqNum,callsToUpdate){const endPointPromises=[];let liveEndPoints=0;eventElem.find("endpoint").each((__index,endPointElem)=>{const endPointElemIter=$(endPointElem),op=endPointElemIter.attr("op");endPointElemIter.length&&("ended"!==op&&liveEndPoints++,endPointPromises.push((async()=>{try{await this.manageEndPointElem(endPointElemIter,eventElem,seqNum,callsToUpdate)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] manageAllEndPoints CATCH / seqNum = "+seqNum);const errorMessage="manageAllEndPoints -- "+error.message;this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}})()))});try{await Promise.all(endPointPromises)}finally{this.logger.info("[TelephonySipWiseEventHandler] manageAllEndPoints : nb living endPoint = "+liveEndPoints+" / seqNum = "+seqNum)}}async manageEndPointElem(endPointElem,eventElem,seqNum,callsToUpdate){try{const endPointId=endPointElem.attr("endpointId"),callId=endPointElem.attr("callId"),op=endPointElem.attr("op");if(!endPointId){throw new Error("manageEndPointElem -- Anomaly endPointId missing / seqNum = "+seqNum)}if(!callId){throw new Error("manageEndPointElem -- Anomaly callId missing / seqNum = "+seqNum)}if(!op){throw new Error("manageEndPointElem -- Anomaly op missing / seqNum = "+seqNum)}let updateAnalyse=null,updateStatus=null;const phoneNumber=endPointElem.find("phoneNumber").text(),call=this.getCallFromCallId(callId),jid=endPointElem.find("jid").text();switch(op){case"created":{this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem: create endPointId/callId = "+endPointId+"/"+callId),call.remoteNumber=phoneNumber;const callDirection=call.getDirection();call.callerNumber="outgoing"===callDirection?this.contactService.userContact.phoneInternalNumber:phoneNumber,await this.endPointElemCreate(eventElem),this.checkCallRelevancy(callId)?(callsToUpdate[callId]={trigger:!0,info:"endpoint"+op},updateAnalyse=this.analyzeContactChange(jid,phoneNumber,call),updateAnalyse&&updateAnalyse.searchOutlookToBeDone&&call.contact&&(updateStatus=await this.telephonyService.updateContactFromOutlookInfos(call.contact,phoneNumber),updateStatus?(this.logger.debug("[TelephonySipWiseEventHandler]  update from outlook for contact :"+call.contact.nameForLogs),this.getCallFromCallId(callId).setContact(this.getCallFromCallId(callId).contact)):this.logger.debug("[TelephonyHybridEventHandler] no update from outlook for contact :"+call.contact.nameForLogs))):this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem: create endPointId/callId = "+endPointId+"/"+callId+" not yet relevant")}break;case"updated":this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem / updated"),await this.endPointElemUpdate(eventElem),this.checkCallRelevancy(callId)?(updateAnalyse=this.analyzeContactChange(jid,phoneNumber,call),updateAnalyse&&updateAnalyse.searchOutlookToBeDone&&call.contact&&(updateStatus=await this.telephonyService.updateContactFromOutlookInfos(call.contact,phoneNumber),updateStatus?this.logger.debug("[TelephonySipWiseEventHandler]  update from outlook for contact :"+call.contact.nameForLogs):this.logger.debug("[TelephonyHybridEventHandler] no update from outlook for contact :"+call.contact.nameForLogs)),this.sendCallUpdateEvent(this.getCallFromCallId(callId),{actionElemName:"updatecall"})):this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem: update endPointId/callId = "+endPointId+"/"+callId+" not relevant");break;case"ended":this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem / ended");break;default:this.logger.info("[TelephonySipWiseEventHandler] manageEndPointElem / invalid op -> "+op+" / seqNum = "+seqNum);throw new Error("manageEndPointElem / Anomaly unmanaged op : "+op)}}catch(error){const errorMessage="manageEndPointElem -- "+error.message;throw new Error(errorMessage)}}async legElemCreate(eventElem){const legElem=eventElem.find("leg");try{const call=await this.getCall(legElem),legState=legElem.attr("state"),deviceId=legElem.attr("deviceId");if(!deviceId){const errorMessage="legElemCreate -- Anomaly deviceId missing";throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}this.logger.info("[TelephonySipWiseEventHandler] legElemCreate / leg state : "+legState+" / deviceId : "+deviceId),call.setDeviceIdSipWise(deviceId),call.setRelevantEquipmentId(deviceId),this.callsetStatusFromLegState(call,legState,eventElem)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] legElemCreate catch");const errorMessage="legElemCreate -- "+error.message;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}}async legElemUpdate(eventElem){const legElem=eventElem.find("leg");try{const call=await this.getCall(legElem),legState=legElem.attr("state");this.callsetStatusFromLegState(call,legState,eventElem)}catch(error){this.logger.info("[TelephonySipWiseEventHandler] legElemUpdate catch");const errorMessage="legElemUpdate -- "+error.message;throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}}async endPointElemCreate(eventElem){const endPointElem=eventElem.find("endpoint"),callId=endPointElem.attr("callId"),phoneNumber=endPointElem.find("phoneNumber").text(),jid=endPointElem.find("jid").text(),firstName=endPointElem.find("firstName").text(),lastName=endPointElem.find("lastName").text(),displayName=endPointElem.find("displayName").text(),type=endPointElem.find("type").text();if(jid||phoneNumber){const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);jid||(firstName&&lastName?contact.updateName(firstName,lastName):displayName&&contact.updateName("",displayName));const call=this.getCallFromCallId(callId);callId&&call?(call.setEndPointDeviceListSipWise(this.endPointDevicesMng(endPointElem)),call.setContact(contact),type&&(call.distantType=type),this.logger.info("[TelephonySipWiseEventHandler] endPointElemCreate setContact DONE : displayName = "+call.contact.nameForLog)):this.logger.info("[TelephonySipWiseEventHandler] endPointElemCreate NOT DONE / no associated call")}else{const errorMessage="endPointElemCreate -- Anomaly no jid no phoneNumber";this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}}async endPointElemUpdate(eventElem){const endPointElem=eventElem.find("endpoint"),callId=endPointElem.attr("callId"),phoneNumber=endPointElem.find("phoneNumber").text(),jid=endPointElem.find("jid").text(),firstName=endPointElem.find("firstName").text(),lastName=endPointElem.find("lastName").text(),displayName=endPointElem.find("displayName").text(),type=endPointElem.find("type").text();if(jid||phoneNumber){const contact=await this.contactService.getOrCreateContact(jid,phoneNumber);jid||(firstName&&lastName?contact.updateName(firstName,lastName):displayName&&contact.updateName("",displayName));const call=this.getCallFromCallId(callId);callId&&call?(call.setEndPointDeviceListSipWise(this.endPointDevicesMng(endPointElem)),call.setContact(contact),type&&(call.distantType=type),this.logger.info("[TelephonySipWiseEventHandler] endPointElemUpdate setContact DONE : displayName = "+call.contact.nameForLog)):this.logger.info("[TelephonySipWiseEventHandler] endPointElemUpdate setContact NOT DONE / no associated call")}else{const errorMessage="endPointElemUpdate -- Anomaly no jid no phoneNumber";this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}}endPointDevicesMng(endPointElem){const callId=endPointElem.attr("callId"),endpointId=endPointElem.attr("endpointId"),deviceList=[];if(callId&&endpointId)endPointElem.find("device").each((__index,endPointDeviceElem)=>{const endPointDeviceElemIter=$(endPointDeviceElem),deviceType=endPointDeviceElemIter.attr("type"),deviceId=endPointDeviceElemIter.attr("deviceId");deviceType&&deviceId&&deviceList.push({callId:callId,endpointId:endpointId,deviceType:deviceType,deviceId:deviceId})});else{const errorMessage="endPointDevicesMng -- Anomaly no callId or endpointId";this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage)}return deviceList}onFailCallEvent(call,failedElem){const cause=failedElem.find("failedReason").text();this.logger.info("[TelephonySipWiseEventHandler] onFailCallEvent for callId : "+call.id+" / call status ERROR / cause : "+cause),call.setStatus(call_model_1.Call.Status.ERROR),call.errorMessage=this.CallFailureLabels[cause],call.errorMessage||(call.errorMessage=cause),setTimeout(()=>{call&&call.status===call_model_1.Call.Status.ERROR&&(this.telephonyService.releaseCall(call),call.setStatus(call_model_1.Call.Status.UNKNOWN),this.eventService.publish("ON_CALL_UPDATED_EVENT",call))},5e3)}convLegStateToCallStatus(legState){let status=null;if(!legState)return this.logger.info("[TelephonySipWiseEventHandler] convLegStateToCallStatus Anomaly no legState"),status;switch(legState){case"initiated":case"dialing":status=call_model_1.Call.Status.DIALING;break;case"ringingIn":status=call_model_1.Call.Status.RINGING_INCOMMING;break;case"ringingOut":status=call_model_1.Call.Status.RINGING_OUTGOING;break;case"queued":status=call_model_1.Call.Status.QUEUED_INCOMMING;break;case"active":status=call_model_1.Call.Status.ACTIVE;break;case"hold":status=call_model_1.Call.Status.HOLD;break;case"holdVictim":status=call_model_1.Call.Status.PUT_ON_HOLD;break;case"failed":status=call_model_1.Call.Status.ERROR;break;default:this.logger.info("[TelephonySipWiseEventHandler] convLegStateToCallStatus Anomaly legState = "+legState)}return status}callsetStatusFromLegState(call,legState,eventElem){if(!call||!legState)return void this.logger.info("[TelephonySipWiseEventHandler] callsetStatusFromLegState Anomaly Call = "+call+" legState"+legState);const status=this.convLegStateToCallStatus(legState);status===call_model_1.Call.Status.ERROR?this.onFailCallEvent(call,eventElem):call.setStatus(status),this.logger.info("[TelephonySipWiseEventHandler] callsetStatusFromLegState legstate = "+legState+" Call.status = "+call.status.value)}getCallFromCallId(callId){if(!callId)return this.logger.debug("[TelephonySipWiseEventHandler] getCallFromCallId - Anomaly no callId"),null;const call=this.telephonyService.calls[callId];return call?(this.logger.debug("[TelephonySipWiseEventHandler] getCallFromCallId = "+callId+" -  call: "+call),call):null}async getCall(elem){const callId=elem.attr("callId"),legId=elem.attr("legId");return await this.getOrCreateCall(callId,legId)}async getOrCreateCall(callId,legId){if(!callId){const errorMessage="getOrCreateCall -- Anomaly no callId";throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}let call=this.telephonyService.calls[callId];if(call&&call.getConnectionIdSipWise())return this.logger.debug("[TelephonySipWiseEventHandler] getOrCreateCall - "+callId+" -  => found completed call: "+call),call;if(this.logger.debug("[TelephonySipWiseEventHandler] getOrCreateCall - "+callId+" -  => not completed : manage it"),!legId){const errorMessage="getOrCreateCall -- Anomaly no LegId";throw this.logger.error("[TelephonySipWiseEventHandler] "+errorMessage),new Error(errorMessage)}return call=await this.telephonyService.getOrCreateCallSipWise(call_model_1.Call.Status.UNKNOWN,callId,legId),call}sendCallUpdateEvent(call,elem){if(call){call.autoClear&&(clearTimeout(call.autoClear),call.autoClear=null),this.logger.info("[TelephonySipWiseEventHandler] [TEL] sendCallUpdateEvent for call "+call);const infoEvt=this.extractInfoEvent(elem);this.eventService.publish("ON_CALL_UPDATED_EVENT",call,infoEvt)}}extractInfoEvent(elem){let infoEvent=null;return elem&&null!==elem&&(infoEvent=elem),infoEvent}callsUpdate(callsToUpdate){this.logger.info("[TelephonySipWiseEventHandler] CallsUpdate"),Object.keys(callsToUpdate||[]).forEach(callId=>{callsToUpdate[callId]&&callsToUpdate[callId].trigger?(this.logger.info("[TelephonySipWiseEventHandler] CallsUpdate for callId "+callId+" triggered"),this.sendCallUpdateEvent(this.getCallFromCallId(callId),callsToUpdate[callId].info)):this.logger.info("[TelephonySipWiseEventHandler] CallsUpdate for callId "+callId+" no triggered")})}computeCallRelevancy(deviceId,callId){let result=!1;const currentUsedDevice=this.telephonyService.telephonyServiceSipWise.getCurrentDevice();if(deviceId&&currentUsedDevice&&(result=deviceId===currentUsedDevice.deviceId),callId){const call=this.getCallFromCallId(callId);call&&call.getMixtWebTelSingleStepTrans()&&(result=!0,this.logger.info("[TelephonySipWiseEventHandler] computeCallRelevancy for deviceId : "+deviceId+" / special mixte (webrtc&sip) transfer"))}return this.logger.info("[TelephonySipWiseEventHandler] computeCallRelevancy for deviceId : "+deviceId+" / relevant = "+result),result}checkCallRelevancy(callId){let result=!1;const currentUsedDevice=this.telephonyService.telephonyServiceSipWise.getCurrentDevice(),call=this.getCallFromCallId(callId);return call&&currentUsedDevice&&(this.logger.debug("[TelephonySipWiseEventHandler] checkCallRelevancy call.deviceID = "+call.getDeviceIdSipWise()),result=call.getDeviceIdSipWise()===currentUsedDevice.deviceId),call&&call.getMixtWebTelSingleStepTrans()&&(result=!0,this.logger.info("[TelephonySipWiseEventHandler] checkCallRelevancy for callId : "+callId+" / special mixte (webrtc&sip) transfer")),this.logger.info("[TelephonySipWiseEventHandler] checkCallRelevancy for callId : "+callId+" / relevant = "+result),result}analyzeContactChange(jid,phoneNumber,call){let updateContact=!1,searchOutlook=!1;return jid||phoneNumber?call.isConference?void 0:call.contact?(""!==jid?call.contact.id!==jid&&(updateContact=!0,searchOutlook=!1):call.contact.temp?call.contact.id!==phoneNumber?(updateContact=!0,searchOutlook=!0):call.contact.displayName===phoneNumber&&(updateContact=!1,searchOutlook=!0):call.getCurrentCalled()&&""!==call.getCurrentCalled().contactPhoneNumber&&""!==phoneNumber&&call.getCurrentCalled().contactPhoneNumber!==phoneNumber&&(updateContact=!0,searchOutlook=!0),updateContact||searchOutlook?{updateContactToBeDone:updateContact,searchOutlookToBeDone:searchOutlook}:null):{updateContactToBeDone:!0,searchOutlookToBeDone:!0}:null}}TelephonySipWiseEventHandler.CALLSERVICE_NS="urn:xmpp:pbxagent:telephony:1",TelephonySipWiseEventHandler.OVERFLOWUPDATE_NS="urn:xmpp:pbxagent:overflowOnSubscriberUpdated:1",TelephonySipWiseEventHandler.USERCONFIGURATION_NS="urn:xmpp:rvcp:userConfiguration:1",TelephonySipWiseEventHandler.HUNTINGGROUPUPDATE_NS="jabber:iq:notification",exports.TelephonySipWiseEventHandler=TelephonySipWiseEventHandler},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);exports.VoiceMessage=class{constructor(id,contact,unread,duration,date,from,jid){this.id=id,this.contact=contact,this.unread=unread,this.duration=duration,this.date=new Date(date),this.dateString=date,this.from=from,this.jid=jid,this.directoryContactId=null,this.rxSubject=new rxjs_1.Subject}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);exports.Favorite=class{constructor(id,peerId,type){this.rxSubject=new rxjs_1.Subject,this.id=id,this.peerId=peerId,this.type=type}updateContact(contact){this.contact=contact,this.rxSubject.next({name:"updateFavoriteContact",data:contact})}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const message_1=__webpack_require__(67),fileDescriptor_1=__webpack_require__(76);__webpack_require__(315);const contact_service_1=__webpack_require__(6),xmpp_service_1=__webpack_require__(9),i18n_service_1=__webpack_require__(38),logger_service_1=__webpack_require__(4),fileStorage_service_1=__webpack_require__(34),fileServer_service_1=__webpack_require__(47),utilities_service_1=__webpack_require__(113),urlMetadata_service_1=__webpack_require__(312);exports.ConversationServiceBulkHistoryHandler=class{constructor(conversationService){this.conversationService=conversationService,this.xmppService=xmpp_service_1.XmppService.getInstance(),this.i18n=i18n_service_1.I18nService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.fileServerService=fileServer_service_1.FileServerService.getInstance(),this.utilitiesService=utilities_service_1.UtilitiesService.getInstance()}async getHistoryPage(conversation,nbMessage){this.logger.info(`[ConversationServiceBulkHistoryHandler] getHistoryPage(${conversation.id})`);try{return this.getHistoryPageInternal(conversation,nbMessage)}catch(error){return this.logger.info("[ConversationServiceBulkHistoryHandler] "+error.message),null}}async getHistoryPageAroundMessage(conversation,messageHistoryIndex){this.logger.info(`[ConversationServiceBulkHistoryHandler] getHistoryPageAroundDate(${conversation.id}, ${messageHistoryIndex})`),await this.getHistoryPageInternal(conversation,15,"after",messageHistoryIndex),await this.getHistoryPageInternal(conversation,15,"before",messageHistoryIndex)}async getHistoryPageFromTimeTillNow(conversation,timestamp){for(this.logger.info(`[ConversationServiceBulkHistoryHandler] getHistoryPage(${conversation.id}) - from ${timestamp}`),await this.getHistoryPageInternal(conversation,5,"before",timestamp),await this.getHistoryPageInternal(conversation,250,"after",timestamp);!conversation.historyBelowComplete;)await this.getHistoryPageInternal(conversation,250,"after",conversation.historyLastIndex)}async getHistoryPageInternal(conversation,nbMessages,direction="before",messageHistoryIndex=null){this.logger.info(`[ConversationServiceBulkHistoryHandler] getHistoryPage(${conversation.id}, ${nbMessages})`);const resultPromise=new Promise(resolve=>{conversation.historyDefered={resolve:resolve}});if(conversation.room&&conversation.room.initPresPromise&&await conversation.room.initPresPromise.promise,conversation.currentHistoryId&&conversation.currentHistoryId===conversation.historyIndex){const errorMessage=`getHistoryPage(${conversation.id}, ${nbMessages}, ${conversation.historyIndex}) --- already asked`;throw this.logger.info("[ConversationServiceBulkHistoryHandler] "+errorMessage),new Error(errorMessage)}if(conversation.currentHistoryId=conversation.historyIndex,"before"===direction&&conversation.historyAboveComplete){const errorMessage=`getHistoryPage(${conversation.id}) --- historyAboveComplete`;throw this.logger.info("[ConversationServiceBulkHistoryHandler] "+errorMessage),new Error(errorMessage)}if("after"===direction&&conversation.historyBelowComplete){const errorMessage=`getHistoryPage(${conversation.id}) --- historyBelowComplete`;throw this.logger.info("[ConversationServiceBulkHistoryHandler] "+errorMessage),new Error(errorMessage)}const queryId=conversation.id,iqId=`${conversation.id}${this.utilitiesService.randomString(5)}`,toAttr=conversation.room?conversation.room.jid:null,withField=conversation.room?this.contactService.userContact.jid:conversation.id,iq=$iq({id:iqId,to:toAttr,type:"set"}).c("query",{queryid:queryId,xmlns:"urn:xmpp:mam:1:bulk"}).c("x",{xmlns:"jabber:x:data",type:"submit"}).c("field",{var:"FORM_TYPE",type:"hidden"}).c("value").t("urn:xmpp:mam:1").up().up().c("field",{var:"with"}).c("value").t(withField).up().up().up().c("set",{xmlns:"http://jabber.org/protocol/rsm"}).c("max").t(nbMessages).up();if(messageHistoryIndex){const historyRefDate="after"===direction?Number(messageHistoryIndex)-1:messageHistoryIndex;iq.c(direction).t(historyRefDate)}else-1===conversation.historyIndex?iq.c(direction).t(""):iq.c(direction).t(conversation.historyIndex);const startRequestDate=performance.now();await this.xmppService.sendIQ(iq);const requestDuration=Math.round(performance.now()-startRequestDate);return await resultPromise,this.logger.info(`[ConversationServiceBulkHistoryHandler] getHistoryPage(${conversation.id}) -- duration ${requestDuration}ms`),conversation}resetHistory(conversation){const nbMessages=conversation.messages.length;if(nbMessages>90){this.logger.info("[ConversationServiceBulkHistoryHandler] resetHistory for conversation "+conversation.id);const nbMessageToRemove=nbMessages-30;conversation.messages.splice(0,nbMessageToRemove),conversation.currentHistoryId=null,conversation.historyAboveComplete=!1,conversation.historyBelowComplete=!1,conversation.historyIndex=conversation.messages[0].historyIndex}}onHistoryMessageReceived(stanza){try{this.logger.info("[conversationService] onHistoryMessageReceived");const resultsElem=$(stanza).find("results");if(1===resultsElem.length){const resultElems=resultsElem.find("result");if(resultElems.length>0){const queryId=$(resultElems[0]).attr("queryid");this.logger.info(`[ConversationServiceBulkHistoryHandler] onHistoryMessageReceived "results" (${queryId})`);const conversation=this.conversationService.getConversation(queryId);conversation&&resultsElem.find("result").each((__index,resultElem)=>{const messageElem=$(resultElem).find("forwarded message"),from=messageElem.attr("from"),forwardedMsg=$(messageElem).find("forwarded[xmlns='urn:xmpp:forward:0']");if(forwardedMsg&&forwardedMsg.length){this.logger.info("[ConversationServiceBulkHistoryHandler] ("+conversation.id+") Forwarded Message detected");const origMsgId=messageElem.attr("id"),newMessageElem=$(forwardedMsg).find("forwarded message"),fwdMsgId=newMessageElem.attr("id"),forwardedMessage=conversation.getMessageByIdInHistory(fwdMsgId);this.createMessage(conversation,resultElem,newMessageElem,from,origMsgId,forwardedMessage)}else this.createMessage(conversation,resultElem,messageElem,from,null,null)})}}else{const finElem=$(stanza).find("fin"),id=$(stanza).attr("id"),queryId=id.substring(0,id.length-5);this.logger.info(`[ConversationServiceBulkHistoryHandler] onHistoryMessageReceived "fin" (${queryId})`);const conversation=this.conversationService.getConversation(queryId);if(conversation){conversation.historyIndex=$(finElem).find("set first").text(),conversation.historyLastIndex=$(finElem).find("set last").text(),conversation.historyIndex===conversation.historyLastIndex?conversation.historyAboveComplete="true"===finElem.attr("complete"):conversation.historyBelowComplete="true"===finElem.attr("complete");const historyFirstMessage=conversation.historyMessages[0];if(historyFirstMessage){const historyFirstMessageDate=historyFirstMessage.date.getTime(),index=conversation.messages.findIndex(message=>message.date.getTime()>historyFirstMessageDate);conversation.messages.splice(index,0,...conversation.historyMessages)}if(conversation.historyMessages=[],conversation.lastMessageText="",conversation.lastMessageSender=null,conversation.messages&&conversation.messages.length>0){const lastMessage=conversation.messages[conversation.messages.length-1];conversation.lastMessageText=lastMessage.data,conversation.lastMessageSender=lastMessage.from.id}conversation.historyDefered&&conversation.historyDefered.resolve()}}}catch(error){return this.logger.error("[ConversationServiceBulkHistoryHandler] onHistoryMessageReceived -- failure -- "+error),!0}return!0}createMessage(conversation,resultElem,messageElem,from,origMsgId,forwardedMessage){const messageId=origMsgId||messageElem.attr("id");let message=conversation.getMessageById(messageId);if(message||(message=conversation.historyMessages.find(item=>item.id===messageId)),message||(message=conversation.getReplacedMessageById(messageId)),message)return void this.logger.info("[ConversationServiceBulkHistoryHandler] ("+conversation.id+") try to add an already stored message with id "+message.id);let fromContact=null,type=messageElem.attr("type"),fromJid=from&&0===from.indexOf("room_")?from.split("/")[1]:this.xmppService.getBareJidFromJid(from),roomEvent=null;const eventElem=$(resultElem).find("event");if((!fromJid||eventElem.length)&&eventElem.length){if(fromJid=eventElem.attr("jid"),roomEvent=eventElem.attr("name"),conversation.room){if(conversation.room.isMeetingRoom()&&("welcome"===roomEvent||"conferenceAdd"===roomEvent||"conferenceRemove"===roomEvent||"invitation"===roomEvent))return;if(conversation.room.isWebinarRoom())return;if("welcome"===roomEvent&&conversation.room.ownerContact&&(fromJid=conversation.room.ownerContact.jid),"conferenceAdd"!==roomEvent&&"conferenceRemove"!==roomEvent||!conversation.room.ownerContact)"voicemessage"===roomEvent&&(fromJid=this.contactService.userContact.jid);else{const user=conversation.room.getUserByJid(fromJid);fromContact=user&&user.contact?user.contact:conversation.room.ownerContact}}type="admin"}if(!fromJid)return void this.logger.warn("[ConversationServiceBulkHistoryHandler] onHistoryMessageReceived - Receive message without valid fromJid information");if("webrtc"===type||"phone"===type){type="webrtc";const callerJid=$(resultElem).find("caller").text();fromContact=this.contactService.getContact(callerJid)}fromContact||(fromContact=this.contactService.getContact(fromJid)),fromContact||(fromContact=this.contactService.createEmptyContact(fromJid));const date=new Date($(resultElem).find("forwarded delay").attr("stamp"));let body=$(messageElem).find("body").text();const side=this.contactService.isUserContact(fromContact)?message_1.Message.Side.RIGHT:message_1.Message.Side.LEFT,geoloc=$(resultElem).find("geoloc");let geolocData=null;if(geoloc&&geoloc.length){const geolocElem=$(geoloc);geolocData={lon:geolocElem.find("lon").text(),lat:geolocElem.find("lat").text()}}let urgency="std";const headersElem=$(messageElem).find("headers[xmlns='http://jabber.org/protocol/shim']");if(headersElem&&headersElem.length){const urgencyElem=$(headersElem).find("header[name='Urgency']");urgencyElem&&urgencyElem.length&&(urgency=urgencyElem.text())}const oob=$(messageElem).find("x[xmlns='jabber:x:oob']");if(oob&&oob.length&&(type="fileSharing"),$(resultElem).find("call_log").length){const state=$(resultElem).find("state").text();if("missed"===state)body="missedCall||"+date;else if("answered"===state){const duration=$(resultElem).find("duration")?parseInt($(resultElem).find("duration").text(),10):0;body=`activeCallMsg||${date}||${duration>0?`(${moment.duration(duration,"ms").format("h[H] mm[m] ss[s]")})`:""}`}}let translatedMessage="";if("voicemessage"===roomEvent){const gmwi=$(messageElem).find("gmwi"),newMsgs=gmwi.find("message").attr("new"),oldMsgs=gmwi.find("message").attr("old");translatedMessage=this.i18n.translate("huntingGroupVmCounters",{newMsgs:newMsgs,oldMsgs:oldMsgs})}const urlMetadataElems=$(resultElem).find("url-metadata"),urlMetadata=[];switch(urlMetadataElems&&urlMetadataElems.each((__index,urlMetadataElem)=>{const data=$(urlMetadataElem);urlMetadata.push(urlMetadata_service_1.UrlMetaData.create({title:data.attr("title"),url:data.attr("url"),description:data.attr("description"),image:data.attr("image")}))}),type){case"webrtc":message=message_1.Message.createWebRTCMessage(messageId,date,fromContact,side,body,!1);break;case"admin":message=message_1.Message.createBubbleAdminMessage(messageId,date,fromContact,roomEvent,translatedMessage);break;case"fileSharing":message=this.createFileSharingMessage(oob,messageId,date,fromContact,side,body,geolocData);break;case"recording":break;default:{const contents=$(resultElem).find("content[xmlns='urn:xmpp:content']");let additionalContent=null;if(contents&&contents.length>0){const contentElem=$(contents[0]);additionalContent=message_1.MessageAdditionalContent.create(contentElem.attr("type"),contentElem.text())}let mentions=null;const mentionElem=$(resultElem).find("mention[xmlns='urn:xmpp:attention:0']");if(mentionElem.length){mentions=[];mentionElem.find("jid").each((__ind,content)=>{const mention={};mention.jid=$(content).text(),mention.pos=parseInt($(content).attr("pos"),10),mention.size=parseInt($(content).attr("size"),10),mention.jid&&mentions.push(mention)})}const replace=$(resultElem).find("replace");if(replace&&replace.length){const replacedMsgId=replace.attr("id");let replacedMessage=conversation.getMessageByIdInHistory(replacedMsgId);if(replacedMessage||(replacedMessage=conversation.getMessageById(replacedMsgId)),replacedMessage||(replacedMessage=message_1.Message.create(replacedMsgId,date,fromContact,side,body,!1,additionalContent,null,null,null,mentions),message=replacedMessage),fromContact.jid!==replacedMessage.from.jid)this.logger.warn("[ConversationServiceBulkHistoryHandler] onHistoryMessageReceived : message Replaced by somebody else - Skip"),message=null;else if(replacedMessage){replacedMessage.addReplaceMsg(messageId,body),replacedMessage.mentions=mentions;const logBody=body.length?body.substr(0,1)+"***"+body.substr(body.length-1):"";this.logger.info("Add new history replace message for message "+messageId+" witn body "+logBody)}}else{const answeredMsg=$(resultElem).find("answeredMsg"),answeredMsgId=answeredMsg?answeredMsg.text():null,answeredMsgDate=answeredMsg?answeredMsg.attr("stamp"):null;message=message_1.Message.create(messageId,date,fromContact,side,body,!1,additionalContent,null,answeredMsgId,answeredMsgDate,mentions),message.urgency=urgency,message.urlMetadata=urlMetadata.length>0?urlMetadata[0]:null;const modified=$(resultElem).find("modified");modified&&modified.length&&(message.modified=!0);const deleted=$(resultElem).find("deleted");if(deleted&&deleted.length&&(message.deleted=!0),answeredMsgId){const answeredMessage=conversation.getMessageByIdInHistory(answeredMsgId);answeredMessage?(answeredMessage.urgencyAck=!0,answeredMessage.sendUpdateEvent()):this.logger.error("[ConversationServiceBulkHistoryHandler] Not possible to handle answeredMsg because replied msg not found")}}}}if(message){message.isForwarded=null!==forwardedMessage,message.forwardedMsg=forwardedMessage,message.urgency=urgency,message.historyIndex=$(resultElem).attr("id");const ack=$(messageElem).find("ack"),readValue=message.side!==message_1.Message.Side.RIGHT||$(ack).attr("readtime")||"true"!==$(ack).attr("read")?5:4;if(message.receiptStatus="true"===$(ack).attr("read")?readValue:"true"===$(ack).attr("recv")?4:3,message.isAdaptiveCardResponse()){const messageObject=JSON.parse(message.additionalContent.message);messageObject&&messageObject.rainbow&&""===messageObject.rainbow.text||conversation.addMessageInHistoryMessages(message)}else conversation.addMessageInHistoryMessages(message);this.logger.info("Add new history message : "+message.getInfoForLogs())}}createFileSharingMessage(oob,messageId,date,from,side,body,geoloc,attention=null){const oobElem=$(oob),url=oobElem.find("url").text(),fileName=oobElem.find("filename").text(),fileId=this.fileStorageService.extractFileIdFromUrl(url),message=message_1.Message.createFileSharingMessage(messageId,date,from,side,body,!1,fileId,fileName,null,geoloc,attention);return this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId).then(fileDescriptor=>{fileDescriptor&&fileDescriptor.state===fileDescriptor_1.FileState.NOT_UPLOADED&&(message.receiptStatus=1,message.fileErrorMsg=this.i18n.translate("file_notuploaded")),this.fileServerService.getBlobThumbnailFromFileDescriptor(fileDescriptor).then(blob=>{fileDescriptor.previewBlob=blob,fileDescriptor.previewBlobSubject.next(fileDescriptor.previewBlob)}).catch(()=>{this.logger.info("[ConversationServiceBulkHistoryHandler] getBlobThumbnailFromFileDescriptor error "),fileDescriptor.previewBlobSubject.next(fileDescriptor.previewBlob)})}).catch(error=>{this.logger.info("[ConversationServiceBulkHistoryHandler] createFileSharingMessage error "+error)}),message}}},function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;
/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */!function(global,factory){"use strict";"object"==typeof module.exports?module.exports=global.document?factory(global,!0):function(w){if(!w.document)throw new Error("jQuery requires a window with a document");return factory(w)}:factory(global)}("undefined"!=typeof window?window:this,(function(window,noGlobal){"use strict";var arr=[],getProto=Object.getPrototypeOf,slice=arr.slice,flat=arr.flat?function(array){return arr.flat.call(array)}:function(array){return arr.concat.apply([],array)},push=arr.push,indexOf=arr.indexOf,class2type={},toString=class2type.toString,hasOwn=class2type.hasOwnProperty,fnToString=hasOwn.toString,ObjectFunctionString=fnToString.call(Object),support={},isFunction=function(obj){return"function"==typeof obj&&"number"!=typeof obj.nodeType},isWindow=function(obj){return null!=obj&&obj===obj.window},document=window.document,preservedScriptAttributes={type:!0,src:!0,nonce:!0,noModule:!0};function DOMEval(code,node,doc){var i,val,script=(doc=doc||document).createElement("script");if(script.text=code,node)for(i in preservedScriptAttributes)(val=node[i]||node.getAttribute&&node.getAttribute(i))&&script.setAttribute(i,val);doc.head.appendChild(script).parentNode.removeChild(script)}function toType(obj){return null==obj?obj+"":"object"==typeof obj||"function"==typeof obj?class2type[toString.call(obj)]||"object":typeof obj}var jQuery=function(selector,context){return new jQuery.fn.init(selector,context)};function isArrayLike(obj){var length=!!obj&&"length"in obj&&obj.length,type=toType(obj);return!isFunction(obj)&&!isWindow(obj)&&("array"===type||0===length||"number"==typeof length&&length>0&&length-1 in obj)}jQuery.fn=jQuery.prototype={jquery:"3.5.1",constructor:jQuery,length:0,toArray:function(){return slice.call(this)},get:function(num){return null==num?slice.call(this):num<0?this[num+this.length]:this[num]},pushStack:function(elems){var ret=jQuery.merge(this.constructor(),elems);return ret.prevObject=this,ret},each:function(callback){return jQuery.each(this,callback)},map:function(callback){return this.pushStack(jQuery.map(this,(function(elem,i){return callback.call(elem,i,elem)})))},slice:function(){return this.pushStack(slice.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(jQuery.grep(this,(function(_elem,i){return(i+1)%2})))},odd:function(){return this.pushStack(jQuery.grep(this,(function(_elem,i){return i%2})))},eq:function(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[])},end:function(){return this.prevObject||this.constructor()},push:push,sort:arr.sort,splice:arr.splice},jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=!1;for("boolean"==typeof target&&(deep=target,target=arguments[i]||{},i++),"object"==typeof target||isFunction(target)||(target={}),i===length&&(target=this,i--);i<length;i++)if(null!=(options=arguments[i]))for(name in options)copy=options[name],"__proto__"!==name&&target!==copy&&(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))?(src=target[name],clone=copyIsArray&&!Array.isArray(src)?[]:copyIsArray||jQuery.isPlainObject(src)?src:{},copyIsArray=!1,target[name]=jQuery.extend(deep,clone,copy)):void 0!==copy&&(target[name]=copy));return target},jQuery.extend({expando:"jQuery"+("3.5.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(msg){throw new Error(msg)},noop:function(){},isPlainObject:function(obj){var proto,Ctor;return!(!obj||"[object Object]"!==toString.call(obj))&&(!(proto=getProto(obj))||"function"==typeof(Ctor=hasOwn.call(proto,"constructor")&&proto.constructor)&&fnToString.call(Ctor)===ObjectFunctionString)},isEmptyObject:function(obj){var name;for(name in obj)return!1;return!0},globalEval:function(code,options,doc){DOMEval(code,{nonce:options&&options.nonce},doc)},each:function(obj,callback){var length,i=0;if(isArrayLike(obj))for(length=obj.length;i<length&&!1!==callback.call(obj[i],i,obj[i]);i++);else for(i in obj)if(!1===callback.call(obj[i],i,obj[i]))break;return obj},makeArray:function(arr,results){var ret=results||[];return null!=arr&&(isArrayLike(Object(arr))?jQuery.merge(ret,"string"==typeof arr?[arr]:arr):push.call(ret,arr)),ret},inArray:function(elem,arr,i){return null==arr?-1:indexOf.call(arr,elem,i)},merge:function(first,second){for(var len=+second.length,j=0,i=first.length;j<len;j++)first[i++]=second[j];return first.length=i,first},grep:function(elems,callback,invert){for(var matches=[],i=0,length=elems.length,callbackExpect=!invert;i<length;i++)!callback(elems[i],i)!==callbackExpect&&matches.push(elems[i]);return matches},map:function(elems,callback,arg){var length,value,i=0,ret=[];if(isArrayLike(elems))for(length=elems.length;i<length;i++)null!=(value=callback(elems[i],i,arg))&&ret.push(value);else for(i in elems)null!=(value=callback(elems[i],i,arg))&&ret.push(value);return flat(ret)},guid:1,support:support}),"function"==typeof Symbol&&(jQuery.fn[Symbol.iterator]=arr[Symbol.iterator]),jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(_i,name){class2type["[object "+name+"]"]=name.toLowerCase()}));var Sizzle=
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando="sizzle"+1*new Date,preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),nonnativeSelectorCache=createCache(),sortOrder=function(a,b){return a===b&&(hasDuplicate=!0),0},hasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,pushNative=arr.push,push=arr.push,slice=arr.slice,indexOf=function(list,elem){for(var i=0,len=list.length;i<len;i++)if(list[i]===elem)return i;return-1},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",whitespace="[\\x20\\t\\r\\n\\f]",identifier="(?:\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+"*([*^$|!~]?=)"+whitespace+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+whitespace+"*\\]",pseudos=":("+identifier+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|.*)\\)|)",rwhitespace=new RegExp(whitespace+"+","g"),rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rdescend=new RegExp(whitespace+"|>"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={ID:new RegExp("^#("+identifier+")"),CLASS:new RegExp("^\\.("+identifier+")"),TAG:new RegExp("^("+identifier+"|[*])"),ATTR:new RegExp("^"+attributes),PSEUDO:new RegExp("^"+pseudos),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),bool:new RegExp("^(?:"+booleans+")$","i"),needsContext:new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rhtml=/HTML$/i,rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,runescape=new RegExp("\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\([^\\r\\n\\f])","g"),funescape=function(escape,nonHex){var high="0x"+escape.slice(1)-65536;return nonHex||(high<0?String.fromCharCode(high+65536):String.fromCharCode(high>>10|55296,1023&high|56320))},rcssescape=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,fcssescape=function(ch,asCodePoint){return asCodePoint?"\0"===ch?"�":ch.slice(0,-1)+"\\"+ch.charCodeAt(ch.length-1).toString(16)+" ":"\\"+ch},unloadHandler=function(){setDocument()},inDisabledFieldset=addCombinator((function(elem){return!0===elem.disabled&&"fieldset"===elem.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes),arr[preferredDoc.childNodes.length].nodeType}catch(e){push={apply:arr.length?function(target,els){pushNative.apply(target,slice.call(els))}:function(target,els){for(var j=target.length,i=0;target[j++]=els[i++];);target.length=j-1}}}function Sizzle(selector,context,results,seed){var m,i,elem,nid,match,groups,newSelector,newContext=context&&context.ownerDocument,nodeType=context?context.nodeType:9;if(results=results||[],"string"!=typeof selector||!selector||1!==nodeType&&9!==nodeType&&11!==nodeType)return results;if(!seed&&(setDocument(context),context=context||document,documentIsHTML)){if(11!==nodeType&&(match=rquickExpr.exec(selector)))if(m=match[1]){if(9===nodeType){if(!(elem=context.getElementById(m)))return results;if(elem.id===m)return results.push(elem),results}else if(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m)return results.push(elem),results}else{if(match[2])return push.apply(results,context.getElementsByTagName(selector)),results;if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName)return push.apply(results,context.getElementsByClassName(m)),results}if(support.qsa&&!nonnativeSelectorCache[selector+" "]&&(!rbuggyQSA||!rbuggyQSA.test(selector))&&(1!==nodeType||"object"!==context.nodeName.toLowerCase())){if(newSelector=selector,newContext=context,1===nodeType&&(rdescend.test(selector)||rcombinators.test(selector))){for((newContext=rsibling.test(selector)&&testContext(context.parentNode)||context)===context&&support.scope||((nid=context.getAttribute("id"))?nid=nid.replace(rcssescape,fcssescape):context.setAttribute("id",nid=expando)),i=(groups=tokenize(selector)).length;i--;)groups[i]=(nid?"#"+nid:":scope")+" "+toSelector(groups[i]);newSelector=groups.join(",")}try{return push.apply(results,newContext.querySelectorAll(newSelector)),results}catch(qsaError){nonnativeSelectorCache(selector,!0)}finally{nid===expando&&context.removeAttribute("id")}}}return select(selector.replace(rtrim,"$1"),context,results,seed)}function createCache(){var keys=[];return function cache(key,value){return keys.push(key+" ")>Expr.cacheLength&&delete cache[keys.shift()],cache[key+" "]=value}}function markFunction(fn){return fn[expando]=!0,fn}function assert(fn){var el=document.createElement("fieldset");try{return!!fn(el)}catch(e){return!1}finally{el.parentNode&&el.parentNode.removeChild(el),el=null}}function addHandle(attrs,handler){for(var arr=attrs.split("|"),i=arr.length;i--;)Expr.attrHandle[arr[i]]=handler}function siblingCheck(a,b){var cur=b&&a,diff=cur&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(diff)return diff;if(cur)for(;cur=cur.nextSibling;)if(cur===b)return-1;return a?1:-1}function createInputPseudo(type){return function(elem){return"input"===elem.nodeName.toLowerCase()&&elem.type===type}}function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return("input"===name||"button"===name)&&elem.type===type}}function createDisabledPseudo(disabled){return function(elem){return"form"in elem?elem.parentNode&&!1===elem.disabled?"label"in elem?"label"in elem.parentNode?elem.parentNode.disabled===disabled:elem.disabled===disabled:elem.isDisabled===disabled||elem.isDisabled!==!disabled&&inDisabledFieldset(elem)===disabled:elem.disabled===disabled:"label"in elem&&elem.disabled===disabled}}function createPositionalPseudo(fn){return markFunction((function(argument){return argument=+argument,markFunction((function(seed,matches){for(var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;i--;)seed[j=matchIndexes[i]]&&(seed[j]=!(matches[j]=seed[j]))}))}))}function testContext(context){return context&&void 0!==context.getElementsByTagName&&context}for(i in support=Sizzle.support={},isXML=Sizzle.isXML=function(elem){var namespace=elem.namespaceURI,docElem=(elem.ownerDocument||elem).documentElement;return!rhtml.test(namespace||docElem&&docElem.nodeName||"HTML")},setDocument=Sizzle.setDocument=function(node){var hasCompare,subWindow,doc=node?node.ownerDocument||node:preferredDoc;return doc!=document&&9===doc.nodeType&&doc.documentElement?(docElem=(document=doc).documentElement,documentIsHTML=!isXML(document),preferredDoc!=document&&(subWindow=document.defaultView)&&subWindow.top!==subWindow&&(subWindow.addEventListener?subWindow.addEventListener("unload",unloadHandler,!1):subWindow.attachEvent&&subWindow.attachEvent("onunload",unloadHandler)),support.scope=assert((function(el){return docElem.appendChild(el).appendChild(document.createElement("div")),void 0!==el.querySelectorAll&&!el.querySelectorAll(":scope fieldset div").length})),support.attributes=assert((function(el){return el.className="i",!el.getAttribute("className")})),support.getElementsByTagName=assert((function(el){return el.appendChild(document.createComment("")),!el.getElementsByTagName("*").length})),support.getElementsByClassName=rnative.test(document.getElementsByClassName),support.getById=assert((function(el){return docElem.appendChild(el).id=expando,!document.getElementsByName||!document.getElementsByName(expando).length})),support.getById?(Expr.filter.ID=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId}},Expr.find.ID=function(id,context){if(void 0!==context.getElementById&&documentIsHTML){var elem=context.getElementById(id);return elem?[elem]:[]}}):(Expr.filter.ID=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=void 0!==elem.getAttributeNode&&elem.getAttributeNode("id");return node&&node.value===attrId}},Expr.find.ID=function(id,context){if(void 0!==context.getElementById&&documentIsHTML){var node,i,elems,elem=context.getElementById(id);if(elem){if((node=elem.getAttributeNode("id"))&&node.value===id)return[elem];for(elems=context.getElementsByName(id),i=0;elem=elems[i++];)if((node=elem.getAttributeNode("id"))&&node.value===id)return[elem]}return[]}}),Expr.find.TAG=support.getElementsByTagName?function(tag,context){return void 0!==context.getElementsByTagName?context.getElementsByTagName(tag):support.qsa?context.querySelectorAll(tag):void 0}:function(tag,context){var elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if("*"===tag){for(;elem=results[i++];)1===elem.nodeType&&tmp.push(elem);return tmp}return results},Expr.find.CLASS=support.getElementsByClassName&&function(className,context){if(void 0!==context.getElementsByClassName&&documentIsHTML)return context.getElementsByClassName(className)},rbuggyMatches=[],rbuggyQSA=[],(support.qsa=rnative.test(document.querySelectorAll))&&(assert((function(el){var input;docElem.appendChild(el).innerHTML="<a id='"+expando+"'></a><select id='"+expando+"-\r\\' msallowcapture=''><option selected=''></option></select>",el.querySelectorAll("[msallowcapture^='']").length&&rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")"),el.querySelectorAll("[selected]").length||rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")"),el.querySelectorAll("[id~="+expando+"-]").length||rbuggyQSA.push("~="),(input=document.createElement("input")).setAttribute("name",""),el.appendChild(input),el.querySelectorAll("[name='']").length||rbuggyQSA.push("\\["+whitespace+"*name"+whitespace+"*="+whitespace+"*(?:''|\"\")"),el.querySelectorAll(":checked").length||rbuggyQSA.push(":checked"),el.querySelectorAll("a#"+expando+"+*").length||rbuggyQSA.push(".#.+[+~]"),el.querySelectorAll("\\\f"),rbuggyQSA.push("[\\r\\n\\f]")})),assert((function(el){el.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var input=document.createElement("input");input.setAttribute("type","hidden"),el.appendChild(input).setAttribute("name","D"),el.querySelectorAll("[name=d]").length&&rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?="),2!==el.querySelectorAll(":enabled").length&&rbuggyQSA.push(":enabled",":disabled"),docElem.appendChild(el).disabled=!0,2!==el.querySelectorAll(":disabled").length&&rbuggyQSA.push(":enabled",":disabled"),el.querySelectorAll("*,:x"),rbuggyQSA.push(",.*:")}))),(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector))&&assert((function(el){support.disconnectedMatch=matches.call(el,"*"),matches.call(el,"[s!='']:x"),rbuggyMatches.push("!=",pseudos)})),rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|")),rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|")),hasCompare=rnative.test(docElem.compareDocumentPosition),contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=9===a.nodeType?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!(!bup||1!==bup.nodeType||!(adown.contains?adown.contains(bup):a.compareDocumentPosition&&16&a.compareDocumentPosition(bup)))}:function(a,b){if(b)for(;b=b.parentNode;)if(b===a)return!0;return!1},sortOrder=hasCompare?function(a,b){if(a===b)return hasDuplicate=!0,0;var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;return compare||(1&(compare=(a.ownerDocument||a)==(b.ownerDocument||b)?a.compareDocumentPosition(b):1)||!support.sortDetached&&b.compareDocumentPosition(a)===compare?a==document||a.ownerDocument==preferredDoc&&contains(preferredDoc,a)?-1:b==document||b.ownerDocument==preferredDoc&&contains(preferredDoc,b)?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0:4&compare?-1:1)}:function(a,b){if(a===b)return hasDuplicate=!0,0;var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup)return a==document?-1:b==document?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;if(aup===bup)return siblingCheck(a,b);for(cur=a;cur=cur.parentNode;)ap.unshift(cur);for(cur=b;cur=cur.parentNode;)bp.unshift(cur);for(;ap[i]===bp[i];)i++;return i?siblingCheck(ap[i],bp[i]):ap[i]==preferredDoc?-1:bp[i]==preferredDoc?1:0},document):document},Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements)},Sizzle.matchesSelector=function(elem,expr){if(setDocument(elem),support.matchesSelector&&documentIsHTML&&!nonnativeSelectorCache[expr+" "]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr)))try{var ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&&11!==elem.document.nodeType)return ret}catch(e){nonnativeSelectorCache(expr,!0)}return Sizzle(expr,document,null,[elem]).length>0},Sizzle.contains=function(context,elem){return(context.ownerDocument||context)!=document&&setDocument(context),contains(context,elem)},Sizzle.attr=function(elem,name){(elem.ownerDocument||elem)!=document&&setDocument(elem);var fn=Expr.attrHandle[name.toLowerCase()],val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):void 0;return void 0!==val?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null},Sizzle.escape=function(sel){return(sel+"").replace(rcssescape,fcssescape)},Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg)},Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;if(hasDuplicate=!support.detectDuplicates,sortInput=!support.sortStable&&results.slice(0),results.sort(sortOrder),hasDuplicate){for(;elem=results[i++];)elem===results[i]&&(j=duplicates.push(i));for(;j--;)results.splice(duplicates[j],1)}return sortInput=null,results},getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(nodeType){if(1===nodeType||9===nodeType||11===nodeType){if("string"==typeof elem.textContent)return elem.textContent;for(elem=elem.firstChild;elem;elem=elem.nextSibling)ret+=getText(elem)}else if(3===nodeType||4===nodeType)return elem.nodeValue}else for(;node=elem[i++];)ret+=getText(node);return ret},(Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(match){return match[1]=match[1].replace(runescape,funescape),match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape),"~="===match[2]&&(match[3]=" "+match[3]+" "),match.slice(0,4)},CHILD:function(match){return match[1]=match[1].toLowerCase(),"nth"===match[1].slice(0,3)?(match[3]||Sizzle.error(match[0]),match[4]=+(match[4]?match[5]+(match[6]||1):2*("even"===match[3]||"odd"===match[3])),match[5]=+(match[7]+match[8]||"odd"===match[3])):match[3]&&Sizzle.error(match[0]),match},PSEUDO:function(match){var excess,unquoted=!match[6]&&match[2];return matchExpr.CHILD.test(match[0])?null:(match[3]?match[2]=match[4]||match[5]||"":unquoted&&rpseudo.test(unquoted)&&(excess=tokenize(unquoted,!0))&&(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)&&(match[0]=match[0].slice(0,excess),match[2]=unquoted.slice(0,excess)),match.slice(0,3))}},filter:{TAG:function(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return"*"===nodeNameSelector?function(){return!0}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName}},CLASS:function(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,(function(elem){return pattern.test("string"==typeof elem.className&&elem.className||void 0!==elem.getAttribute&&elem.getAttribute("class")||"")}))},ATTR:function(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);return null==result?"!="===operator:!operator||(result+="","="===operator?result===check:"!="===operator?result!==check:"^="===operator?check&&0===result.indexOf(check):"*="===operator?check&&result.indexOf(check)>-1:"$="===operator?check&&result.slice(-check.length)===check:"~="===operator?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:"|="===operator&&(result===check||result.slice(0,check.length+1)===check+"-"))}},CHILD:function(type,what,_argument,first,last){var simple="nth"!==type.slice(0,3),forward="last"!==type.slice(-4),ofType="of-type"===what;return 1===first&&0===last?function(elem){return!!elem.parentNode}:function(elem,_context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=!1;if(parent){if(simple){for(;dir;){for(node=elem;node=node[dir];)if(ofType?node.nodeName.toLowerCase()===name:1===node.nodeType)return!1;start=dir="only"===type&&!start&&"nextSibling"}return!0}if(start=[forward?parent.firstChild:parent.lastChild],forward&&useCache){for(diff=(nodeIndex=(cache=(uniqueCache=(outerCache=(node=parent)[expando]||(node[expando]={}))[node.uniqueID]||(outerCache[node.uniqueID]={}))[type]||[])[0]===dirruns&&cache[1])&&cache[2],node=nodeIndex&&parent.childNodes[nodeIndex];node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop();)if(1===node.nodeType&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break}}else if(useCache&&(diff=nodeIndex=(cache=(uniqueCache=(outerCache=(node=elem)[expando]||(node[expando]={}))[node.uniqueID]||(outerCache[node.uniqueID]={}))[type]||[])[0]===dirruns&&cache[1]),!1===diff)for(;(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop())&&((ofType?node.nodeName.toLowerCase()!==name:1!==node.nodeType)||!++diff||(useCache&&((uniqueCache=(outerCache=node[expando]||(node[expando]={}))[node.uniqueID]||(outerCache[node.uniqueID]={}))[type]=[dirruns,diff]),node!==elem)););return(diff-=last)===first||diff%first==0&&diff/first>=0}}},PSEUDO:function(pseudo,argument){var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);return fn[expando]?fn(argument):fn.length>1?(args=[pseudo,pseudo,"",argument],Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction((function(seed,matches){for(var idx,matched=fn(seed,argument),i=matched.length;i--;)seed[idx=indexOf(seed,matched[i])]=!(matches[idx]=matched[i])})):function(elem){return fn(elem,0,args)}):fn}},pseudos:{not:markFunction((function(selector){var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction((function(seed,matches,_context,xml){for(var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;i--;)(elem=unmatched[i])&&(seed[i]=!(matches[i]=elem))})):function(elem,_context,xml){return input[0]=elem,matcher(input,null,xml,results),input[0]=null,!results.pop()}})),has:markFunction((function(selector){return function(elem){return Sizzle(selector,elem).length>0}})),contains:markFunction((function(text){return text=text.replace(runescape,funescape),function(elem){return(elem.textContent||getText(elem)).indexOf(text)>-1}})),lang:markFunction((function(lang){return ridentifier.test(lang||"")||Sizzle.error("unsupported lang: "+lang),lang=lang.replace(runescape,funescape).toLowerCase(),function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang"))return(elemLang=elemLang.toLowerCase())===lang||0===elemLang.indexOf(lang+"-")}while((elem=elem.parentNode)&&1===elem.nodeType);return!1}})),target:function(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id},root:function(elem){return elem===docElem},focus:function(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex)},enabled:createDisabledPseudo(!1),disabled:createDisabledPseudo(!0),checked:function(elem){var nodeName=elem.nodeName.toLowerCase();return"input"===nodeName&&!!elem.checked||"option"===nodeName&&!!elem.selected},selected:function(elem){return elem.parentNode&&elem.parentNode.selectedIndex,!0===elem.selected},empty:function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling)if(elem.nodeType<6)return!1;return!0},parent:function(elem){return!Expr.pseudos.empty(elem)},header:function(elem){return rheader.test(elem.nodeName)},input:function(elem){return rinputs.test(elem.nodeName)},button:function(elem){var name=elem.nodeName.toLowerCase();return"input"===name&&"button"===elem.type||"button"===name},text:function(elem){var attr;return"input"===elem.nodeName.toLowerCase()&&"text"===elem.type&&(null==(attr=elem.getAttribute("type"))||"text"===attr.toLowerCase())},first:createPositionalPseudo((function(){return[0]})),last:createPositionalPseudo((function(_matchIndexes,length){return[length-1]})),eq:createPositionalPseudo((function(_matchIndexes,length,argument){return[argument<0?argument+length:argument]})),even:createPositionalPseudo((function(matchIndexes,length){for(var i=0;i<length;i+=2)matchIndexes.push(i);return matchIndexes})),odd:createPositionalPseudo((function(matchIndexes,length){for(var i=1;i<length;i+=2)matchIndexes.push(i);return matchIndexes})),lt:createPositionalPseudo((function(matchIndexes,length,argument){for(var i=argument<0?argument+length:argument>length?length:argument;--i>=0;)matchIndexes.push(i);return matchIndexes})),gt:createPositionalPseudo((function(matchIndexes,length,argument){for(var i=argument<0?argument+length:argument;++i<length;)matchIndexes.push(i);return matchIndexes}))}}).pseudos.nth=Expr.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})Expr.pseudos[i]=createInputPseudo(i);for(i in{submit:!0,reset:!0})Expr.pseudos[i]=createButtonPseudo(i);function setFilters(){}function toSelector(tokens){for(var i=0,len=tokens.length,selector="";i<len;i++)selector+=tokens[i].value;return selector}function addCombinator(matcher,combinator,base){var dir=combinator.dir,skip=combinator.next,key=skip||dir,checkNonElements=base&&"parentNode"===key,doneName=done++;return combinator.first?function(elem,context,xml){for(;elem=elem[dir];)if(1===elem.nodeType||checkNonElements)return matcher(elem,context,xml);return!1}:function(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];if(xml){for(;elem=elem[dir];)if((1===elem.nodeType||checkNonElements)&&matcher(elem,context,xml))return!0}else for(;elem=elem[dir];)if(1===elem.nodeType||checkNonElements)if(uniqueCache=(outerCache=elem[expando]||(elem[expando]={}))[elem.uniqueID]||(outerCache[elem.uniqueID]={}),skip&&skip===elem.nodeName.toLowerCase())elem=elem[dir]||elem;else{if((oldCache=uniqueCache[key])&&oldCache[0]===dirruns&&oldCache[1]===doneName)return newCache[2]=oldCache[2];if(uniqueCache[key]=newCache,newCache[2]=matcher(elem,context,xml))return!0}return!1}}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){for(var i=matchers.length;i--;)if(!matchers[i](elem,context,xml))return!1;return!0}:matchers[0]}function condense(unmatched,map,filter,context,xml){for(var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=null!=map;i<len;i++)(elem=unmatched[i])&&(filter&&!filter(elem,context,xml)||(newUnmatched.push(elem),mapped&&map.push(i)));return newUnmatched}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){return postFilter&&!postFilter[expando]&&(postFilter=setMatcher(postFilter)),postFinder&&!postFinder[expando]&&(postFinder=setMatcher(postFinder,postSelector)),markFunction((function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||function(selector,contexts,results){for(var i=0,len=contexts.length;i<len;i++)Sizzle(selector,contexts[i],results);return results}(selector||"*",context.nodeType?[context]:context,[]),matcherIn=!preFilter||!seed&&selector?elems:condense(elems,preMap,preFilter,context,xml),matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;if(matcher&&matcher(matcherIn,matcherOut,context,xml),postFilter)for(temp=condense(matcherOut,postMap),postFilter(temp,[],context,xml),i=temp.length;i--;)(elem=temp[i])&&(matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem));if(seed){if(postFinder||preFilter){if(postFinder){for(temp=[],i=matcherOut.length;i--;)(elem=matcherOut[i])&&temp.push(matcherIn[i]=elem);postFinder(null,matcherOut=[],temp,xml)}for(i=matcherOut.length;i--;)(elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1&&(seed[temp]=!(results[temp]=elem))}}else matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut),postFinder?postFinder(null,results,matcherOut,xml):push.apply(results,matcherOut)}))}function matcherFromTokens(tokens){for(var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,matchContext=addCombinator((function(elem){return elem===checkContext}),implicitRelative,!0),matchAnyContext=addCombinator((function(elem){return indexOf(checkContext,elem)>-1}),implicitRelative,!0),matchers=[function(elem,context,xml){var ret=!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));return checkContext=null,ret}];i<len;i++)if(matcher=Expr.relative[tokens[i].type])matchers=[addCombinator(elementMatcher(matchers),matcher)];else{if((matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches))[expando]){for(j=++i;j<len&&!Expr.relative[tokens[j].type];j++);return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(tokens.slice(0,i-1).concat({value:" "===tokens[i-2].type?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens))}matchers.push(matcher)}return elementMatcher(matchers)}return setFilters.prototype=Expr.filters=Expr.pseudos,Expr.setFilters=new setFilters,tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached)return parseOnly?0:cached.slice(0);for(soFar=selector,groups=[],preFilters=Expr.preFilter;soFar;){for(type in matched&&!(match=rcomma.exec(soFar))||(match&&(soFar=soFar.slice(match[0].length)||soFar),groups.push(tokens=[])),matched=!1,(match=rcombinators.exec(soFar))&&(matched=match.shift(),tokens.push({value:matched,type:match[0].replace(rtrim," ")}),soFar=soFar.slice(matched.length)),Expr.filter)!(match=matchExpr[type].exec(soFar))||preFilters[type]&&!(match=preFilters[type](match))||(matched=match.shift(),tokens.push({value:matched,type:type,matches:match}),soFar=soFar.slice(matched.length));if(!matched)break}return parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0)},compile=Sizzle.compile=function(selector,match){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){for(match||(match=tokenize(selector)),i=match.length;i--;)(cached=matcherFromTokens(match[i]))[expando]?setMatchers.push(cached):elementMatchers.push(cached);(cached=compilerCache(selector,function(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&&Expr.find.TAG("*",outermost),dirrunsUnique=dirruns+=null==contextBackup?1:Math.random()||.1,len=elems.length;for(outermost&&(outermostContext=context==document||context||outermost);i!==len&&null!=(elem=elems[i]);i++){if(byElement&&elem){for(j=0,context||elem.ownerDocument==document||(setDocument(elem),xml=!documentIsHTML);matcher=elementMatchers[j++];)if(matcher(elem,context||document,xml)){results.push(elem);break}outermost&&(dirruns=dirrunsUnique)}bySet&&((elem=!matcher&&elem)&&matchedCount--,seed&&unmatched.push(elem))}if(matchedCount+=i,bySet&&i!==matchedCount){for(j=0;matcher=setMatchers[j++];)matcher(unmatched,setMatched,context,xml);if(seed){if(matchedCount>0)for(;i--;)unmatched[i]||setMatched[i]||(setMatched[i]=pop.call(results));setMatched=condense(setMatched)}push.apply(results,setMatched),outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1&&Sizzle.uniqueSort(results)}return outermost&&(dirruns=dirrunsUnique,outermostContext=contextBackup),unmatched};return bySet?markFunction(superMatcher):superMatcher}(elementMatchers,setMatchers))).selector=selector}return cached},select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled="function"==typeof selector&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);if(results=results||[],1===match.length){if((tokens=match[0]=match[0].slice(0)).length>2&&"ID"===(token=tokens[0]).type&&9===context.nodeType&&documentIsHTML&&Expr.relative[tokens[1].type]){if(!(context=(Expr.find.ID(token.matches[0].replace(runescape,funescape),context)||[])[0]))return results;compiled&&(context=context.parentNode),selector=selector.slice(tokens.shift().value.length)}for(i=matchExpr.needsContext.test(selector)?0:tokens.length;i--&&(token=tokens[i],!Expr.relative[type=token.type]);)if((find=Expr.find[type])&&(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context))){if(tokens.splice(i,1),!(selector=seed.length&&toSelector(tokens)))return push.apply(results,seed),results;break}}return(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context),results},support.sortStable=expando.split("").sort(sortOrder).join("")===expando,support.detectDuplicates=!!hasDuplicate,setDocument(),support.sortDetached=assert((function(el){return 1&el.compareDocumentPosition(document.createElement("fieldset"))})),assert((function(el){return el.innerHTML="<a href='#'></a>","#"===el.firstChild.getAttribute("href")}))||addHandle("type|href|height|width",(function(elem,name,isXML){if(!isXML)return elem.getAttribute(name,"type"===name.toLowerCase()?1:2)})),support.attributes&&assert((function(el){return el.innerHTML="<input/>",el.firstChild.setAttribute("value",""),""===el.firstChild.getAttribute("value")}))||addHandle("value",(function(elem,_name,isXML){if(!isXML&&"input"===elem.nodeName.toLowerCase())return elem.defaultValue})),assert((function(el){return null==el.getAttribute("disabled")}))||addHandle(booleans,(function(elem,name,isXML){var val;if(!isXML)return!0===elem[name]?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null})),Sizzle}(window);jQuery.find=Sizzle,jQuery.expr=Sizzle.selectors,jQuery.expr[":"]=jQuery.expr.pseudos,jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort,jQuery.text=Sizzle.getText,jQuery.isXMLDoc=Sizzle.isXML,jQuery.contains=Sizzle.contains,jQuery.escapeSelector=Sizzle.escape;var dir=function(elem,dir,until){for(var matched=[],truncate=void 0!==until;(elem=elem[dir])&&9!==elem.nodeType;)if(1===elem.nodeType){if(truncate&&jQuery(elem).is(until))break;matched.push(elem)}return matched},siblings=function(n,elem){for(var matched=[];n;n=n.nextSibling)1===n.nodeType&&n!==elem&&matched.push(n);return matched},rneedsContext=jQuery.expr.match.needsContext;function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase()}var rsingleTag=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function winnow(elements,qualifier,not){return isFunction(qualifier)?jQuery.grep(elements,(function(elem,i){return!!qualifier.call(elem,i,elem)!==not})):qualifier.nodeType?jQuery.grep(elements,(function(elem){return elem===qualifier!==not})):"string"!=typeof qualifier?jQuery.grep(elements,(function(elem){return indexOf.call(qualifier,elem)>-1!==not})):jQuery.filter(qualifier,elements,not)}jQuery.filter=function(expr,elems,not){var elem=elems[0];return not&&(expr=":not("+expr+")"),1===elems.length&&1===elem.nodeType?jQuery.find.matchesSelector(elem,expr)?[elem]:[]:jQuery.find.matches(expr,jQuery.grep(elems,(function(elem){return 1===elem.nodeType})))},jQuery.fn.extend({find:function(selector){var i,ret,len=this.length,self=this;if("string"!=typeof selector)return this.pushStack(jQuery(selector).filter((function(){for(i=0;i<len;i++)if(jQuery.contains(self[i],this))return!0})));for(ret=this.pushStack([]),i=0;i<len;i++)jQuery.find(selector,self[i],ret);return len>1?jQuery.uniqueSort(ret):ret},filter:function(selector){return this.pushStack(winnow(this,selector||[],!1))},not:function(selector){return this.pushStack(winnow(this,selector||[],!0))},is:function(selector){return!!winnow(this,"string"==typeof selector&&rneedsContext.test(selector)?jQuery(selector):selector||[],!1).length}});var rootjQuery,rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(jQuery.fn.init=function(selector,context,root){var match,elem;if(!selector)return this;if(root=root||rootjQuery,"string"==typeof selector){if(!(match="<"===selector[0]&&">"===selector[selector.length-1]&&selector.length>=3?[null,selector,null]:rquickExpr.exec(selector))||!match[1]&&context)return!context||context.jquery?(context||root).find(selector):this.constructor(context).find(selector);if(match[1]){if(context=context instanceof jQuery?context[0]:context,jQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,!0)),rsingleTag.test(match[1])&&jQuery.isPlainObject(context))for(match in context)isFunction(this[match])?this[match](context[match]):this.attr(match,context[match]);return this}return(elem=document.getElementById(match[2]))&&(this[0]=elem,this.length=1),this}return selector.nodeType?(this[0]=selector,this.length=1,this):isFunction(selector)?void 0!==root.ready?root.ready(selector):selector(jQuery):jQuery.makeArray(selector,this)}).prototype=jQuery.fn,rootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,guaranteedUnique={children:!0,contents:!0,next:!0,prev:!0};function sibling(cur,dir){for(;(cur=cur[dir])&&1!==cur.nodeType;);return cur}jQuery.fn.extend({has:function(target){var targets=jQuery(target,this),l=targets.length;return this.filter((function(){for(var i=0;i<l;i++)if(jQuery.contains(this,targets[i]))return!0}))},closest:function(selectors,context){var cur,i=0,l=this.length,matched=[],targets="string"!=typeof selectors&&jQuery(selectors);if(!rneedsContext.test(selectors))for(;i<l;i++)for(cur=this[i];cur&&cur!==context;cur=cur.parentNode)if(cur.nodeType<11&&(targets?targets.index(cur)>-1:1===cur.nodeType&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break}return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched)},index:function(elem){return elem?"string"==typeof elem?indexOf.call(jQuery(elem),this[0]):indexOf.call(this,elem.jquery?elem[0]:elem):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))))},addBack:function(selector){return this.add(null==selector?this.prevObject:this.prevObject.filter(selector))}}),jQuery.each({parent:function(elem){var parent=elem.parentNode;return parent&&11!==parent.nodeType?parent:null},parents:function(elem){return dir(elem,"parentNode")},parentsUntil:function(elem,_i,until){return dir(elem,"parentNode",until)},next:function(elem){return sibling(elem,"nextSibling")},prev:function(elem){return sibling(elem,"previousSibling")},nextAll:function(elem){return dir(elem,"nextSibling")},prevAll:function(elem){return dir(elem,"previousSibling")},nextUntil:function(elem,_i,until){return dir(elem,"nextSibling",until)},prevUntil:function(elem,_i,until){return dir(elem,"previousSibling",until)},siblings:function(elem){return siblings((elem.parentNode||{}).firstChild,elem)},children:function(elem){return siblings(elem.firstChild)},contents:function(elem){return null!=elem.contentDocument&&getProto(elem.contentDocument)?elem.contentDocument:(nodeName(elem,"template")&&(elem=elem.content||elem),jQuery.merge([],elem.childNodes))}},(function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);return"Until"!==name.slice(-5)&&(selector=until),selector&&"string"==typeof selector&&(matched=jQuery.filter(selector,matched)),this.length>1&&(guaranteedUnique[name]||jQuery.uniqueSort(matched),rparentsprev.test(name)&&matched.reverse()),this.pushStack(matched)}}));var rnothtmlwhite=/[^\x20\t\r\n\f]+/g;function Identity(v){return v}function Thrower(ex){throw ex}function adoptValue(value,resolve,reject,noValue){var method;try{value&&isFunction(method=value.promise)?method.call(value).done(resolve).fail(reject):value&&isFunction(method=value.then)?method.call(value,resolve,reject):resolve.apply(void 0,[value].slice(noValue))}catch(value){reject.apply(void 0,[value])}}jQuery.Callbacks=function(options){options="string"==typeof options?function(options){var object={};return jQuery.each(options.match(rnothtmlwhite)||[],(function(_,flag){object[flag]=!0})),object}(options):jQuery.extend({},options);var firing,memory,fired,locked,list=[],queue=[],firingIndex=-1,fire=function(){for(locked=locked||options.once,fired=firing=!0;queue.length;firingIndex=-1)for(memory=queue.shift();++firingIndex<list.length;)!1===list[firingIndex].apply(memory[0],memory[1])&&options.stopOnFalse&&(firingIndex=list.length,memory=!1);options.memory||(memory=!1),firing=!1,locked&&(list=memory?[]:"")},self={add:function(){return list&&(memory&&!firing&&(firingIndex=list.length-1,queue.push(memory)),function add(args){jQuery.each(args,(function(_,arg){isFunction(arg)?options.unique&&self.has(arg)||list.push(arg):arg&&arg.length&&"string"!==toType(arg)&&add(arg)}))}(arguments),memory&&!firing&&fire()),this},remove:function(){return jQuery.each(arguments,(function(_,arg){for(var index;(index=jQuery.inArray(arg,list,index))>-1;)list.splice(index,1),index<=firingIndex&&firingIndex--})),this},has:function(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0},empty:function(){return list&&(list=[]),this},disable:function(){return locked=queue=[],list=memory="",this},disabled:function(){return!list},lock:function(){return locked=queue=[],memory||firing||(list=memory=""),this},locked:function(){return!!locked},fireWith:function(context,args){return locked||(args=[context,(args=args||[]).slice?args.slice():args],queue.push(args),firing||fire()),this},fire:function(){return self.fireWith(this,arguments),this},fired:function(){return!!fired}};return self},jQuery.extend({Deferred:function(func){var tuples=[["notify","progress",jQuery.Callbacks("memory"),jQuery.Callbacks("memory"),2],["resolve","done",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),0,"resolved"],["reject","fail",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),1,"rejected"]],state="pending",promise={state:function(){return state},always:function(){return deferred.done(arguments).fail(arguments),this},catch:function(fn){return promise.then(null,fn)},pipe:function(){var fns=arguments;return jQuery.Deferred((function(newDefer){jQuery.each(tuples,(function(_i,tuple){var fn=isFunction(fns[tuple[4]])&&fns[tuple[4]];deferred[tuple[1]]((function(){var returned=fn&&fn.apply(this,arguments);returned&&isFunction(returned.promise)?returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject):newDefer[tuple[0]+"With"](this,fn?[returned]:arguments)}))})),fns=null})).promise()},then:function(onFulfilled,onRejected,onProgress){var maxDepth=0;function resolve(depth,deferred,handler,special){return function(){var that=this,args=arguments,mightThrow=function(){var returned,then;if(!(depth<maxDepth)){if((returned=handler.apply(that,args))===deferred.promise())throw new TypeError("Thenable self-resolution");then=returned&&("object"==typeof returned||"function"==typeof returned)&&returned.then,isFunction(then)?special?then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special)):(maxDepth++,then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special),resolve(maxDepth,deferred,Identity,deferred.notifyWith))):(handler!==Identity&&(that=void 0,args=[returned]),(special||deferred.resolveWith)(that,args))}},process=special?mightThrow:function(){try{mightThrow()}catch(e){jQuery.Deferred.exceptionHook&&jQuery.Deferred.exceptionHook(e,process.stackTrace),depth+1>=maxDepth&&(handler!==Thrower&&(that=void 0,args=[e]),deferred.rejectWith(that,args))}};depth?process():(jQuery.Deferred.getStackHook&&(process.stackTrace=jQuery.Deferred.getStackHook()),window.setTimeout(process))}}return jQuery.Deferred((function(newDefer){tuples[0][3].add(resolve(0,newDefer,isFunction(onProgress)?onProgress:Identity,newDefer.notifyWith)),tuples[1][3].add(resolve(0,newDefer,isFunction(onFulfilled)?onFulfilled:Identity)),tuples[2][3].add(resolve(0,newDefer,isFunction(onRejected)?onRejected:Thrower))})).promise()},promise:function(obj){return null!=obj?jQuery.extend(obj,promise):promise}},deferred={};return jQuery.each(tuples,(function(i,tuple){var list=tuple[2],stateString=tuple[5];promise[tuple[1]]=list.add,stateString&&list.add((function(){state=stateString}),tuples[3-i][2].disable,tuples[3-i][3].disable,tuples[0][2].lock,tuples[0][3].lock),list.add(tuple[3].fire),deferred[tuple[0]]=function(){return deferred[tuple[0]+"With"](this===deferred?void 0:this,arguments),this},deferred[tuple[0]+"With"]=list.fireWith})),promise.promise(deferred),func&&func.call(deferred,deferred),deferred},when:function(singleValue){var remaining=arguments.length,i=remaining,resolveContexts=Array(i),resolveValues=slice.call(arguments),master=jQuery.Deferred(),updateFunc=function(i){return function(value){resolveContexts[i]=this,resolveValues[i]=arguments.length>1?slice.call(arguments):value,--remaining||master.resolveWith(resolveContexts,resolveValues)}};if(remaining<=1&&(adoptValue(singleValue,master.done(updateFunc(i)).resolve,master.reject,!remaining),"pending"===master.state()||isFunction(resolveValues[i]&&resolveValues[i].then)))return master.then();for(;i--;)adoptValue(resolveValues[i],updateFunc(i),master.reject);return master.promise()}});var rerrorNames=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;jQuery.Deferred.exceptionHook=function(error,stack){window.console&&window.console.warn&&error&&rerrorNames.test(error.name)&&window.console.warn("jQuery.Deferred exception: "+error.message,error.stack,stack)},jQuery.readyException=function(error){window.setTimeout((function(){throw error}))};var readyList=jQuery.Deferred();function completed(){document.removeEventListener("DOMContentLoaded",completed),window.removeEventListener("load",completed),jQuery.ready()}jQuery.fn.ready=function(fn){return readyList.then(fn).catch((function(error){jQuery.readyException(error)})),this},jQuery.extend({isReady:!1,readyWait:1,ready:function(wait){(!0===wait?--jQuery.readyWait:jQuery.isReady)||(jQuery.isReady=!0,!0!==wait&&--jQuery.readyWait>0||readyList.resolveWith(document,[jQuery]))}}),jQuery.ready.then=readyList.then,"complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?window.setTimeout(jQuery.ready):(document.addEventListener("DOMContentLoaded",completed),window.addEventListener("load",completed));var access=function(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=null==key;if("object"===toType(key))for(i in chainable=!0,key)access(elems,fn,i,key[i],!0,emptyGet,raw);else if(void 0!==value&&(chainable=!0,isFunction(value)||(raw=!0),bulk&&(raw?(fn.call(elems,value),fn=null):(bulk=fn,fn=function(elem,_key,value){return bulk.call(jQuery(elem),value)})),fn))for(;i<len;i++)fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));return chainable?elems:bulk?fn.call(elems):len?fn(elems[0],key):emptyGet},rmsPrefix=/^-ms-/,rdashAlpha=/-([a-z])/g;function fcamelCase(_all,letter){return letter.toUpperCase()}function camelCase(string){return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase)}var acceptData=function(owner){return 1===owner.nodeType||9===owner.nodeType||!+owner.nodeType};function Data(){this.expando=jQuery.expando+Data.uid++}Data.uid=1,Data.prototype={cache:function(owner){var value=owner[this.expando];return value||(value={},acceptData(owner)&&(owner.nodeType?owner[this.expando]=value:Object.defineProperty(owner,this.expando,{value:value,configurable:!0}))),value},set:function(owner,data,value){var prop,cache=this.cache(owner);if("string"==typeof data)cache[camelCase(data)]=value;else for(prop in data)cache[camelCase(prop)]=data[prop];return cache},get:function(owner,key){return void 0===key?this.cache(owner):owner[this.expando]&&owner[this.expando][camelCase(key)]},access:function(owner,key,value){return void 0===key||key&&"string"==typeof key&&void 0===value?this.get(owner,key):(this.set(owner,key,value),void 0!==value?value:key)},remove:function(owner,key){var i,cache=owner[this.expando];if(void 0!==cache){if(void 0!==key){i=(key=Array.isArray(key)?key.map(camelCase):(key=camelCase(key))in cache?[key]:key.match(rnothtmlwhite)||[]).length;for(;i--;)delete cache[key[i]]}(void 0===key||jQuery.isEmptyObject(cache))&&(owner.nodeType?owner[this.expando]=void 0:delete owner[this.expando])}},hasData:function(owner){var cache=owner[this.expando];return void 0!==cache&&!jQuery.isEmptyObject(cache)}};var dataPriv=new Data,dataUser=new Data,rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/[A-Z]/g;function dataAttr(elem,key,data){var name;if(void 0===data&&1===elem.nodeType)if(name="data-"+key.replace(rmultiDash,"-$&").toLowerCase(),"string"==typeof(data=elem.getAttribute(name))){try{data=function(data){return"true"===data||"false"!==data&&("null"===data?null:data===+data+""?+data:rbrace.test(data)?JSON.parse(data):data)}(data)}catch(e){}dataUser.set(elem,key,data)}else data=void 0;return data}jQuery.extend({hasData:function(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem)},data:function(elem,name,data){return dataUser.access(elem,name,data)},removeData:function(elem,name){dataUser.remove(elem,name)},_data:function(elem,name,data){return dataPriv.access(elem,name,data)},_removeData:function(elem,name){dataPriv.remove(elem,name)}}),jQuery.fn.extend({data:function(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;if(void 0===key){if(this.length&&(data=dataUser.get(elem),1===elem.nodeType&&!dataPriv.get(elem,"hasDataAttrs"))){for(i=attrs.length;i--;)attrs[i]&&0===(name=attrs[i].name).indexOf("data-")&&(name=camelCase(name.slice(5)),dataAttr(elem,name,data[name]));dataPriv.set(elem,"hasDataAttrs",!0)}return data}return"object"==typeof key?this.each((function(){dataUser.set(this,key)})):access(this,(function(value){var data;if(elem&&void 0===value)return void 0!==(data=dataUser.get(elem,key))||void 0!==(data=dataAttr(elem,key))?data:void 0;this.each((function(){dataUser.set(this,key,value)}))}),null,value,arguments.length>1,null,!0)},removeData:function(key){return this.each((function(){dataUser.remove(this,key)}))}}),jQuery.extend({queue:function(elem,type,data){var queue;if(elem)return type=(type||"fx")+"queue",queue=dataPriv.get(elem,type),data&&(!queue||Array.isArray(data)?queue=dataPriv.access(elem,type,jQuery.makeArray(data)):queue.push(data)),queue||[]},dequeue:function(elem,type){type=type||"fx";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type);"inprogress"===fn&&(fn=queue.shift(),startLength--),fn&&("fx"===type&&queue.unshift("inprogress"),delete hooks.stop,fn.call(elem,(function(){jQuery.dequeue(elem,type)}),hooks)),!startLength&&hooks&&hooks.empty.fire()},_queueHooks:function(elem,type){var key=type+"queueHooks";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks("once memory").add((function(){dataPriv.remove(elem,[type+"queue",key])}))})}}),jQuery.fn.extend({queue:function(type,data){var setter=2;return"string"!=typeof type&&(data=type,type="fx",setter--),arguments.length<setter?jQuery.queue(this[0],type):void 0===data?this:this.each((function(){var queue=jQuery.queue(this,type,data);jQuery._queueHooks(this,type),"fx"===type&&"inprogress"!==queue[0]&&jQuery.dequeue(this,type)}))},dequeue:function(type){return this.each((function(){jQuery.dequeue(this,type)}))},clearQueue:function(type){return this.queue(type||"fx",[])},promise:function(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function(){--count||defer.resolveWith(elements,[elements])};for("string"!=typeof type&&(obj=type,type=void 0),type=type||"fx";i--;)(tmp=dataPriv.get(elements[i],type+"queueHooks"))&&tmp.empty&&(count++,tmp.empty.add(resolve));return resolve(),defer.promise(obj)}});var pnum=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i"),cssExpand=["Top","Right","Bottom","Left"],documentElement=document.documentElement,isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem)},composed={composed:!0};documentElement.getRootNode&&(isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem)||elem.getRootNode(composed)===elem.ownerDocument});var isHiddenWithinTree=function(elem,el){return"none"===(elem=el||elem).style.display||""===elem.style.display&&isAttached(elem)&&"none"===jQuery.css(elem,"display")};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale,maxIterations=20,currentValue=tween?function(){return tween.cur()}:function(){return jQuery.css(elem,prop,"")},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),initialInUnit=elem.nodeType&&(jQuery.cssNumber[prop]||"px"!==unit&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){for(initial/=2,unit=unit||initialInUnit[3],initialInUnit=+initial||1;maxIterations--;)jQuery.style(elem,prop,initialInUnit+unit),(1-scale)*(1-(scale=currentValue()/initial||.5))<=0&&(maxIterations=0),initialInUnit/=scale;initialInUnit*=2,jQuery.style(elem,prop,initialInUnit+unit),valueParts=valueParts||[]}return valueParts&&(initialInUnit=+initialInUnit||+initial||0,adjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2],tween&&(tween.unit=unit,tween.start=initialInUnit,tween.end=adjusted)),adjusted}var defaultDisplayMap={};function getDefaultDisplay(elem){var temp,doc=elem.ownerDocument,nodeName=elem.nodeName,display=defaultDisplayMap[nodeName];return display||(temp=doc.body.appendChild(doc.createElement(nodeName)),display=jQuery.css(temp,"display"),temp.parentNode.removeChild(temp),"none"===display&&(display="block"),defaultDisplayMap[nodeName]=display,display)}function showHide(elements,show){for(var display,elem,values=[],index=0,length=elements.length;index<length;index++)(elem=elements[index]).style&&(display=elem.style.display,show?("none"===display&&(values[index]=dataPriv.get(elem,"display")||null,values[index]||(elem.style.display="")),""===elem.style.display&&isHiddenWithinTree(elem)&&(values[index]=getDefaultDisplay(elem))):"none"!==display&&(values[index]="none",dataPriv.set(elem,"display",display)));for(index=0;index<length;index++)null!=values[index]&&(elements[index].style.display=values[index]);return elements}jQuery.fn.extend({show:function(){return showHide(this,!0)},hide:function(){return showHide(this)},toggle:function(state){return"boolean"==typeof state?state?this.show():this.hide():this.each((function(){isHiddenWithinTree(this)?jQuery(this).show():jQuery(this).hide()}))}});var div,input,rcheckableType=/^(?:checkbox|radio)$/i,rtagName=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,rscriptType=/^$|^module$|\/(?:java|ecma)script/i;div=document.createDocumentFragment().appendChild(document.createElement("div")),(input=document.createElement("input")).setAttribute("type","radio"),input.setAttribute("checked","checked"),input.setAttribute("name","t"),div.appendChild(input),support.checkClone=div.cloneNode(!0).cloneNode(!0).lastChild.checked,div.innerHTML="<textarea>x</textarea>",support.noCloneChecked=!!div.cloneNode(!0).lastChild.defaultValue,div.innerHTML="<option></option>",support.option=!!div.lastChild;var wrapMap={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function getAll(context,tag){var ret;return ret=void 0!==context.getElementsByTagName?context.getElementsByTagName(tag||"*"):void 0!==context.querySelectorAll?context.querySelectorAll(tag||"*"):[],void 0===tag||tag&&nodeName(context,tag)?jQuery.merge([context],ret):ret}function setGlobalEval(elems,refElements){for(var i=0,l=elems.length;i<l;i++)dataPriv.set(elems[i],"globalEval",!refElements||dataPriv.get(refElements[i],"globalEval"))}wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead,wrapMap.th=wrapMap.td,support.option||(wrapMap.optgroup=wrapMap.option=[1,"<select multiple='multiple'>","</select>"]);var rhtml=/<|&#?\w+;/;function buildFragment(elems,context,scripts,selection,ignored){for(var elem,tmp,tag,wrap,attached,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;i<l;i++)if((elem=elems[i])||0===elem)if("object"===toType(elem))jQuery.merge(nodes,elem.nodeType?[elem]:elem);else if(rhtml.test(elem)){for(tmp=tmp||fragment.appendChild(context.createElement("div")),tag=(rtagName.exec(elem)||["",""])[1].toLowerCase(),wrap=wrapMap[tag]||wrapMap._default,tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2],j=wrap[0];j--;)tmp=tmp.lastChild;jQuery.merge(nodes,tmp.childNodes),(tmp=fragment.firstChild).textContent=""}else nodes.push(context.createTextNode(elem));for(fragment.textContent="",i=0;elem=nodes[i++];)if(selection&&jQuery.inArray(elem,selection)>-1)ignored&&ignored.push(elem);else if(attached=isAttached(elem),tmp=getAll(fragment.appendChild(elem),"script"),attached&&setGlobalEval(tmp),scripts)for(j=0;elem=tmp[j++];)rscriptType.test(elem.type||"")&&scripts.push(elem);return fragment}var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\.(.+)|)/;function returnTrue(){return!0}function returnFalse(){return!1}function expectSync(elem,type){return elem===function(){try{return document.activeElement}catch(err){}}()==("focus"===type)}function on(elem,types,selector,data,fn,one){var origFn,type;if("object"==typeof types){for(type in"string"!=typeof selector&&(data=data||selector,selector=void 0),types)on(elem,type,selector,data,types[type],one);return elem}if(null==data&&null==fn?(fn=selector,data=selector=void 0):null==fn&&("string"==typeof selector?(fn=data,data=void 0):(fn=data,data=selector,selector=void 0)),!1===fn)fn=returnFalse;else if(!fn)return elem;return 1===one&&(origFn=fn,(fn=function(event){return jQuery().off(event),origFn.apply(this,arguments)}).guid=origFn.guid||(origFn.guid=jQuery.guid++)),elem.each((function(){jQuery.event.add(this,types,fn,data,selector)}))}function leverageNative(el,type,expectSync){expectSync?(dataPriv.set(el,type,!1),jQuery.event.add(el,type,{namespace:!1,handler:function(event){var notAsync,result,saved=dataPriv.get(this,type);if(1&event.isTrigger&&this[type]){if(saved.length)(jQuery.event.special[type]||{}).delegateType&&event.stopPropagation();else if(saved=slice.call(arguments),dataPriv.set(this,type,saved),notAsync=expectSync(this,type),this[type](),saved!==(result=dataPriv.get(this,type))||notAsync?dataPriv.set(this,type,!1):result={},saved!==result)return event.stopImmediatePropagation(),event.preventDefault(),result.value}else saved.length&&(dataPriv.set(this,type,{value:jQuery.event.trigger(jQuery.extend(saved[0],jQuery.Event.prototype),saved.slice(1),this)}),event.stopImmediatePropagation())}})):void 0===dataPriv.get(el,type)&&jQuery.event.add(el,type,returnTrue)}jQuery.event={global:{},add:function(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);if(acceptData(elem))for(handler.handler&&(handler=(handleObjIn=handler).handler,selector=handleObjIn.selector),selector&&jQuery.find.matchesSelector(documentElement,selector),handler.guid||(handler.guid=jQuery.guid++),(events=elemData.events)||(events=elemData.events=Object.create(null)),(eventHandle=elemData.handle)||(eventHandle=elemData.handle=function(e){return void 0!==jQuery&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):void 0}),t=(types=(types||"").match(rnothtmlwhite)||[""]).length;t--;)type=origType=(tmp=rtypenamespace.exec(types[t])||[])[1],namespaces=(tmp[2]||"").split(".").sort(),type&&(special=jQuery.event.special[type]||{},type=(selector?special.delegateType:special.bindType)||type,special=jQuery.event.special[type]||{},handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(".")},handleObjIn),(handlers=events[type])||((handlers=events[type]=[]).delegateCount=0,special.setup&&!1!==special.setup.call(elem,data,namespaces,eventHandle)||elem.addEventListener&&elem.addEventListener(type,eventHandle)),special.add&&(special.add.call(elem,handleObj),handleObj.handler.guid||(handleObj.handler.guid=handler.guid)),selector?handlers.splice(handlers.delegateCount++,0,handleObj):handlers.push(handleObj),jQuery.event.global[type]=!0)},remove:function(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(elemData&&(events=elemData.events)){for(t=(types=(types||"").match(rnothtmlwhite)||[""]).length;t--;)if(type=origType=(tmp=rtypenamespace.exec(types[t])||[])[1],namespaces=(tmp[2]||"").split(".").sort(),type){for(special=jQuery.event.special[type]||{},handlers=events[type=(selector?special.delegateType:special.bindType)||type]||[],tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"),origCount=j=handlers.length;j--;)handleObj=handlers[j],!mappedTypes&&origType!==handleObj.origType||handler&&handler.guid!==handleObj.guid||tmp&&!tmp.test(handleObj.namespace)||selector&&selector!==handleObj.selector&&("**"!==selector||!handleObj.selector)||(handlers.splice(j,1),handleObj.selector&&handlers.delegateCount--,special.remove&&special.remove.call(elem,handleObj));origCount&&!handlers.length&&(special.teardown&&!1!==special.teardown.call(elem,namespaces,elemData.handle)||jQuery.removeEvent(elem,type,elemData.handle),delete events[type])}else for(type in events)jQuery.event.remove(elem,type+types[t],handler,selector,!0);jQuery.isEmptyObject(events)&&dataPriv.remove(elem,"handle events")}},dispatch:function(nativeEvent){var i,j,ret,matched,handleObj,handlerQueue,args=new Array(arguments.length),event=jQuery.event.fix(nativeEvent),handlers=(dataPriv.get(this,"events")||Object.create(null))[event.type]||[],special=jQuery.event.special[event.type]||{};for(args[0]=event,i=1;i<arguments.length;i++)args[i]=arguments[i];if(event.delegateTarget=this,!special.preDispatch||!1!==special.preDispatch.call(this,event)){for(handlerQueue=jQuery.event.handlers.call(this,event,handlers),i=0;(matched=handlerQueue[i++])&&!event.isPropagationStopped();)for(event.currentTarget=matched.elem,j=0;(handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped();)event.rnamespace&&!1!==handleObj.namespace&&!event.rnamespace.test(handleObj.namespace)||(event.handleObj=handleObj,event.data=handleObj.data,void 0!==(ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args))&&!1===(event.result=ret)&&(event.preventDefault(),event.stopPropagation()));return special.postDispatch&&special.postDispatch.call(this,event),event.result}},handlers:function(event,handlers){var i,handleObj,sel,matchedHandlers,matchedSelectors,handlerQueue=[],delegateCount=handlers.delegateCount,cur=event.target;if(delegateCount&&cur.nodeType&&!("click"===event.type&&event.button>=1))for(;cur!==this;cur=cur.parentNode||this)if(1===cur.nodeType&&("click"!==event.type||!0!==cur.disabled)){for(matchedHandlers=[],matchedSelectors={},i=0;i<delegateCount;i++)void 0===matchedSelectors[sel=(handleObj=handlers[i]).selector+" "]&&(matchedSelectors[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length),matchedSelectors[sel]&&matchedHandlers.push(handleObj);matchedHandlers.length&&handlerQueue.push({elem:cur,handlers:matchedHandlers})}return cur=this,delegateCount<handlers.length&&handlerQueue.push({elem:cur,handlers:handlers.slice(delegateCount)}),handlerQueue},addProp:function(name,hook){Object.defineProperty(jQuery.Event.prototype,name,{enumerable:!0,configurable:!0,get:isFunction(hook)?function(){if(this.originalEvent)return hook(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[name]},set:function(value){Object.defineProperty(this,name,{enumerable:!0,configurable:!0,writable:!0,value:value})}})},fix:function(originalEvent){return originalEvent[jQuery.expando]?originalEvent:new jQuery.Event(originalEvent)},special:{load:{noBubble:!0},click:{setup:function(data){var el=this||data;return rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")&&leverageNative(el,"click",returnTrue),!1},trigger:function(data){var el=this||data;return rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")&&leverageNative(el,"click"),!0},_default:function(event){var target=event.target;return rcheckableType.test(target.type)&&target.click&&nodeName(target,"input")&&dataPriv.get(target,"click")||nodeName(target,"a")}},beforeunload:{postDispatch:function(event){void 0!==event.result&&event.originalEvent&&(event.originalEvent.returnValue=event.result)}}}},jQuery.removeEvent=function(elem,type,handle){elem.removeEventListener&&elem.removeEventListener(type,handle)},jQuery.Event=function(src,props){if(!(this instanceof jQuery.Event))return new jQuery.Event(src,props);src&&src.type?(this.originalEvent=src,this.type=src.type,this.isDefaultPrevented=src.defaultPrevented||void 0===src.defaultPrevented&&!1===src.returnValue?returnTrue:returnFalse,this.target=src.target&&3===src.target.nodeType?src.target.parentNode:src.target,this.currentTarget=src.currentTarget,this.relatedTarget=src.relatedTarget):this.type=src,props&&jQuery.extend(this,props),this.timeStamp=src&&src.timeStamp||Date.now(),this[jQuery.expando]=!0},jQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=returnTrue,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},jQuery.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(event){var button=event.button;return null==event.which&&rkeyEvent.test(event.type)?null!=event.charCode?event.charCode:event.keyCode:!event.which&&void 0!==button&&rmouseEvent.test(event.type)?1&button?1:2&button?3:4&button?2:0:event.which}},jQuery.event.addProp),jQuery.each({focus:"focusin",blur:"focusout"},(function(type,delegateType){jQuery.event.special[type]={setup:function(){return leverageNative(this,type,expectSync),!1},trigger:function(){return leverageNative(this,type),!0},delegateType:delegateType}})),jQuery.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;return related&&(related===target||jQuery.contains(target,related))||(event.type=handleObj.origType,ret=handleObj.handler.apply(this,arguments),event.type=fix),ret}}})),jQuery.fn.extend({on:function(types,selector,data,fn){return on(this,types,selector,data,fn)},one:function(types,selector,data,fn){return on(this,types,selector,data,fn,1)},off:function(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj)return handleObj=types.handleObj,jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler),this;if("object"==typeof types){for(type in types)this.off(type,selector,types[type]);return this}return!1!==selector&&"function"!=typeof selector||(fn=selector,selector=void 0),!1===fn&&(fn=returnFalse),this.each((function(){jQuery.event.remove(this,types,fn,selector)}))}});var rnoInnerhtml=/<script|<style|<link/i,rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rcleanScript=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function manipulationTarget(elem,content){return nodeName(elem,"table")&&nodeName(11!==content.nodeType?content:content.firstChild,"tr")&&jQuery(elem).children("tbody")[0]||elem}function disableScript(elem){return elem.type=(null!==elem.getAttribute("type"))+"/"+elem.type,elem}function restoreScript(elem){return"true/"===(elem.type||"").slice(0,5)?elem.type=elem.type.slice(5):elem.removeAttribute("type"),elem}function cloneCopyEvent(src,dest){var i,l,type,udataOld,udataCur,events;if(1===dest.nodeType){if(dataPriv.hasData(src)&&(events=dataPriv.get(src).events))for(type in dataPriv.remove(dest,"handle events"),events)for(i=0,l=events[type].length;i<l;i++)jQuery.event.add(dest,type,events[type][i]);dataUser.hasData(src)&&(udataOld=dataUser.access(src),udataCur=jQuery.extend({},udataOld),dataUser.set(dest,udataCur))}}function fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();"input"===nodeName&&rcheckableType.test(src.type)?dest.checked=src.checked:"input"!==nodeName&&"textarea"!==nodeName||(dest.defaultValue=src.defaultValue)}function domManip(collection,args,callback,ignored){args=flat(args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],valueIsFunction=isFunction(value);if(valueIsFunction||l>1&&"string"==typeof value&&!support.checkClone&&rchecked.test(value))return collection.each((function(index){var self=collection.eq(index);valueIsFunction&&(args[0]=value.call(this,index,self.html())),domManip(self,args,callback,ignored)}));if(l&&(first=(fragment=buildFragment(args,collection[0].ownerDocument,!1,collection,ignored)).firstChild,1===fragment.childNodes.length&&(fragment=first),first||ignored)){for(hasScripts=(scripts=jQuery.map(getAll(fragment,"script"),disableScript)).length;i<l;i++)node=fragment,i!==iNoClone&&(node=jQuery.clone(node,!0,!0),hasScripts&&jQuery.merge(scripts,getAll(node,"script"))),callback.call(collection[i],node,i);if(hasScripts)for(doc=scripts[scripts.length-1].ownerDocument,jQuery.map(scripts,restoreScript),i=0;i<hasScripts;i++)node=scripts[i],rscriptType.test(node.type||"")&&!dataPriv.access(node,"globalEval")&&jQuery.contains(doc,node)&&(node.src&&"module"!==(node.type||"").toLowerCase()?jQuery._evalUrl&&!node.noModule&&jQuery._evalUrl(node.src,{nonce:node.nonce||node.getAttribute("nonce")},doc):DOMEval(node.textContent.replace(rcleanScript,""),node,doc))}return collection}function remove(elem,selector,keepData){for(var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;null!=(node=nodes[i]);i++)keepData||1!==node.nodeType||jQuery.cleanData(getAll(node)),node.parentNode&&(keepData&&isAttached(node)&&setGlobalEval(getAll(node,"script")),node.parentNode.removeChild(node));return elem}jQuery.extend({htmlPrefilter:function(html){return html},clone:function(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(!0),inPage=isAttached(elem);if(!(support.noCloneChecked||1!==elem.nodeType&&11!==elem.nodeType||jQuery.isXMLDoc(elem)))for(destElements=getAll(clone),i=0,l=(srcElements=getAll(elem)).length;i<l;i++)fixInput(srcElements[i],destElements[i]);if(dataAndEvents)if(deepDataAndEvents)for(srcElements=srcElements||getAll(elem),destElements=destElements||getAll(clone),i=0,l=srcElements.length;i<l;i++)cloneCopyEvent(srcElements[i],destElements[i]);else cloneCopyEvent(elem,clone);return(destElements=getAll(clone,"script")).length>0&&setGlobalEval(destElements,!inPage&&getAll(elem,"script")),clone},cleanData:function(elems){for(var data,elem,type,special=jQuery.event.special,i=0;void 0!==(elem=elems[i]);i++)if(acceptData(elem)){if(data=elem[dataPriv.expando]){if(data.events)for(type in data.events)special[type]?jQuery.event.remove(elem,type):jQuery.removeEvent(elem,type,data.handle);elem[dataPriv.expando]=void 0}elem[dataUser.expando]&&(elem[dataUser.expando]=void 0)}}}),jQuery.fn.extend({detach:function(selector){return remove(this,selector,!0)},remove:function(selector){return remove(this,selector)},text:function(value){return access(this,(function(value){return void 0===value?jQuery.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=value)}))}),null,value,arguments.length)},append:function(){return domManip(this,arguments,(function(elem){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||manipulationTarget(this,elem).appendChild(elem)}))},prepend:function(){return domManip(this,arguments,(function(elem){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild)}}))},before:function(){return domManip(this,arguments,(function(elem){this.parentNode&&this.parentNode.insertBefore(elem,this)}))},after:function(){return domManip(this,arguments,(function(elem){this.parentNode&&this.parentNode.insertBefore(elem,this.nextSibling)}))},empty:function(){for(var elem,i=0;null!=(elem=this[i]);i++)1===elem.nodeType&&(jQuery.cleanData(getAll(elem,!1)),elem.textContent="");return this},clone:function(dataAndEvents,deepDataAndEvents){return dataAndEvents=null!=dataAndEvents&&dataAndEvents,deepDataAndEvents=null==deepDataAndEvents?dataAndEvents:deepDataAndEvents,this.map((function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents)}))},html:function(value){return access(this,(function(value){var elem=this[0]||{},i=0,l=this.length;if(void 0===value&&1===elem.nodeType)return elem.innerHTML;if("string"==typeof value&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++)1===(elem=this[i]||{}).nodeType&&(jQuery.cleanData(getAll(elem,!1)),elem.innerHTML=value);elem=0}catch(e){}}elem&&this.empty().append(value)}),null,value,arguments.length)},replaceWith:function(){var ignored=[];return domManip(this,arguments,(function(elem){var parent=this.parentNode;jQuery.inArray(this,ignored)<0&&(jQuery.cleanData(getAll(this)),parent&&parent.replaceChild(elem,this))}),ignored)}}),jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(name,original){jQuery.fn[name]=function(selector){for(var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;i<=last;i++)elems=i===last?this:this.clone(!0),jQuery(insert[i])[original](elems),push.apply(ret,elems.get());return this.pushStack(ret)}}));var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i"),getStyles=function(elem){var view=elem.ownerDocument.defaultView;return view&&view.opener||(view=window),view.getComputedStyle(elem)},swap=function(elem,options,callback){var ret,name,old={};for(name in options)old[name]=elem.style[name],elem.style[name]=options[name];for(name in ret=callback.call(elem),options)elem.style[name]=old[name];return ret},rboxStyle=new RegExp(cssExpand.join("|"),"i");function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;return(computed=computed||getStyles(elem))&&(""!==(ret=computed.getPropertyValue(name)||computed[name])||isAttached(elem)||(ret=jQuery.style(elem,name)),!support.pixelBoxStyles()&&rnumnonpx.test(ret)&&rboxStyle.test(name)&&(width=style.width,minWidth=style.minWidth,maxWidth=style.maxWidth,style.minWidth=style.maxWidth=style.width=ret,ret=computed.width,style.width=width,style.minWidth=minWidth,style.maxWidth=maxWidth)),void 0!==ret?ret+"":ret}function addGetHookIf(conditionFn,hookFn){return{get:function(){if(!conditionFn())return(this.get=hookFn).apply(this,arguments);delete this.get}}}!function(){function computeStyleTests(){if(div){container.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",div.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",documentElement.appendChild(container).appendChild(div);var divStyle=window.getComputedStyle(div);pixelPositionVal="1%"!==divStyle.top,reliableMarginLeftVal=12===roundPixelMeasures(divStyle.marginLeft),div.style.right="60%",pixelBoxStylesVal=36===roundPixelMeasures(divStyle.right),boxSizingReliableVal=36===roundPixelMeasures(divStyle.width),div.style.position="absolute",scrollboxSizeVal=12===roundPixelMeasures(div.offsetWidth/3),documentElement.removeChild(container),div=null}}function roundPixelMeasures(measure){return Math.round(parseFloat(measure))}var pixelPositionVal,boxSizingReliableVal,scrollboxSizeVal,pixelBoxStylesVal,reliableTrDimensionsVal,reliableMarginLeftVal,container=document.createElement("div"),div=document.createElement("div");div.style&&(div.style.backgroundClip="content-box",div.cloneNode(!0).style.backgroundClip="",support.clearCloneStyle="content-box"===div.style.backgroundClip,jQuery.extend(support,{boxSizingReliable:function(){return computeStyleTests(),boxSizingReliableVal},pixelBoxStyles:function(){return computeStyleTests(),pixelBoxStylesVal},pixelPosition:function(){return computeStyleTests(),pixelPositionVal},reliableMarginLeft:function(){return computeStyleTests(),reliableMarginLeftVal},scrollboxSize:function(){return computeStyleTests(),scrollboxSizeVal},reliableTrDimensions:function(){var table,tr,trChild,trStyle;return null==reliableTrDimensionsVal&&(table=document.createElement("table"),tr=document.createElement("tr"),trChild=document.createElement("div"),table.style.cssText="position:absolute;left:-11111px",tr.style.height="1px",trChild.style.height="9px",documentElement.appendChild(table).appendChild(tr).appendChild(trChild),trStyle=window.getComputedStyle(tr),reliableTrDimensionsVal=parseInt(trStyle.height)>3,documentElement.removeChild(table)),reliableTrDimensionsVal}}))}();var cssPrefixes=["Webkit","Moz","ms"],emptyStyle=document.createElement("div").style,vendorProps={};function finalPropName(name){var final=jQuery.cssProps[name]||vendorProps[name];return final||(name in emptyStyle?name:vendorProps[name]=function(name){for(var capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;i--;)if((name=cssPrefixes[i]+capName)in emptyStyle)return name}(name)||name)}var rdisplayswap=/^(none|table(?!-c[ea]).+)/,rcustomProp=/^--/,cssShow={position:"absolute",visibility:"hidden",display:"block"},cssNormalTransform={letterSpacing:"0",fontWeight:"400"};function setPositiveNumber(_elem,value,subtract){var matches=rcssNum.exec(value);return matches?Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):value}function boxModelAdjustment(elem,dimension,box,isBorderBox,styles,computedVal){var i="width"===dimension?1:0,extra=0,delta=0;if(box===(isBorderBox?"border":"content"))return 0;for(;i<4;i+=2)"margin"===box&&(delta+=jQuery.css(elem,box+cssExpand[i],!0,styles)),isBorderBox?("content"===box&&(delta-=jQuery.css(elem,"padding"+cssExpand[i],!0,styles)),"margin"!==box&&(delta-=jQuery.css(elem,"border"+cssExpand[i]+"Width",!0,styles))):(delta+=jQuery.css(elem,"padding"+cssExpand[i],!0,styles),"padding"!==box?delta+=jQuery.css(elem,"border"+cssExpand[i]+"Width",!0,styles):extra+=jQuery.css(elem,"border"+cssExpand[i]+"Width",!0,styles));return!isBorderBox&&computedVal>=0&&(delta+=Math.max(0,Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-computedVal-delta-extra-.5))||0),delta}function getWidthOrHeight(elem,dimension,extra){var styles=getStyles(elem),isBorderBox=(!support.boxSizingReliable()||extra)&&"border-box"===jQuery.css(elem,"boxSizing",!1,styles),valueIsBorderBox=isBorderBox,val=curCSS(elem,dimension,styles),offsetProp="offset"+dimension[0].toUpperCase()+dimension.slice(1);if(rnumnonpx.test(val)){if(!extra)return val;val="auto"}return(!support.boxSizingReliable()&&isBorderBox||!support.reliableTrDimensions()&&nodeName(elem,"tr")||"auto"===val||!parseFloat(val)&&"inline"===jQuery.css(elem,"display",!1,styles))&&elem.getClientRects().length&&(isBorderBox="border-box"===jQuery.css(elem,"boxSizing",!1,styles),(valueIsBorderBox=offsetProp in elem)&&(val=elem[offsetProp])),(val=parseFloat(val)||0)+boxModelAdjustment(elem,dimension,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles,val)+"px"}function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing)}jQuery.extend({cssHooks:{opacity:{get:function(elem,computed){if(computed){var ret=curCSS(elem,"opacity");return""===ret?"1":ret}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(elem,name,value,extra){if(elem&&3!==elem.nodeType&&8!==elem.nodeType&&elem.style){var ret,type,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name),style=elem.style;if(isCustomProp||(name=finalPropName(origName)),hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName],void 0===value)return hooks&&"get"in hooks&&void 0!==(ret=hooks.get(elem,!1,extra))?ret:style[name];"string"===(type=typeof value)&&(ret=rcssNum.exec(value))&&ret[1]&&(value=adjustCSS(elem,name,ret),type="number"),null!=value&&value==value&&("number"!==type||isCustomProp||(value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px")),support.clearCloneStyle||""!==value||0!==name.indexOf("background")||(style[name]="inherit"),hooks&&"set"in hooks&&void 0===(value=hooks.set(elem,value,extra))||(isCustomProp?style.setProperty(name,value):style[name]=value))}},css:function(elem,name,extra,styles){var val,num,hooks,origName=camelCase(name);return rcustomProp.test(name)||(name=finalPropName(origName)),(hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName])&&"get"in hooks&&(val=hooks.get(elem,!0,extra)),void 0===val&&(val=curCSS(elem,name,styles)),"normal"===val&&name in cssNormalTransform&&(val=cssNormalTransform[name]),""===extra||extra?(num=parseFloat(val),!0===extra||isFinite(num)?num||0:val):val}}),jQuery.each(["height","width"],(function(_i,dimension){jQuery.cssHooks[dimension]={get:function(elem,computed,extra){if(computed)return!rdisplayswap.test(jQuery.css(elem,"display"))||elem.getClientRects().length&&elem.getBoundingClientRect().width?getWidthOrHeight(elem,dimension,extra):swap(elem,cssShow,(function(){return getWidthOrHeight(elem,dimension,extra)}))},set:function(elem,value,extra){var matches,styles=getStyles(elem),scrollboxSizeBuggy=!support.scrollboxSize()&&"absolute"===styles.position,isBorderBox=(scrollboxSizeBuggy||extra)&&"border-box"===jQuery.css(elem,"boxSizing",!1,styles),subtract=extra?boxModelAdjustment(elem,dimension,extra,isBorderBox,styles):0;return isBorderBox&&scrollboxSizeBuggy&&(subtract-=Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-parseFloat(styles[dimension])-boxModelAdjustment(elem,dimension,"border",!1,styles)-.5)),subtract&&(matches=rcssNum.exec(value))&&"px"!==(matches[3]||"px")&&(elem.style[dimension]=value,value=jQuery.css(elem,dimension)),setPositiveNumber(0,value,subtract)}}})),jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,(function(elem,computed){if(computed)return(parseFloat(curCSS(elem,"marginLeft"))||elem.getBoundingClientRect().left-swap(elem,{marginLeft:0},(function(){return elem.getBoundingClientRect().left})))+"px"})),jQuery.each({margin:"",padding:"",border:"Width"},(function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function(value){for(var i=0,expanded={},parts="string"==typeof value?value.split(" "):[value];i<4;i++)expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];return expanded}},"margin"!==prefix&&(jQuery.cssHooks[prefix+suffix].set=setPositiveNumber)})),jQuery.fn.extend({css:function(name,value){return access(this,(function(elem,name,value){var styles,len,map={},i=0;if(Array.isArray(name)){for(styles=getStyles(elem),len=name.length;i<len;i++)map[name[i]]=jQuery.css(elem,name[i],!1,styles);return map}return void 0!==value?jQuery.style(elem,name,value):jQuery.css(elem,name)}),name,value,arguments.length>1)}}),jQuery.Tween=Tween,Tween.prototype={constructor:Tween,init:function(elem,options,prop,end,easing,unit){this.elem=elem,this.prop=prop,this.easing=easing||jQuery.easing._default,this.options=options,this.start=this.now=this.cur(),this.end=end,this.unit=unit||(jQuery.cssNumber[prop]?"":"px")},cur:function(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this)},run:function(percent){var eased,hooks=Tween.propHooks[this.prop];return this.options.duration?this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration):this.pos=eased=percent,this.now=(this.end-this.start)*eased+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),hooks&&hooks.set?hooks.set(this):Tween.propHooks._default.set(this),this}},Tween.prototype.init.prototype=Tween.prototype,Tween.propHooks={_default:{get:function(tween){var result;return 1!==tween.elem.nodeType||null!=tween.elem[tween.prop]&&null==tween.elem.style[tween.prop]?tween.elem[tween.prop]:(result=jQuery.css(tween.elem,tween.prop,""))&&"auto"!==result?result:0},set:function(tween){jQuery.fx.step[tween.prop]?jQuery.fx.step[tween.prop](tween):1!==tween.elem.nodeType||!jQuery.cssHooks[tween.prop]&&null==tween.elem.style[finalPropName(tween.prop)]?tween.elem[tween.prop]=tween.now:jQuery.style(tween.elem,tween.prop,tween.now+tween.unit)}}},Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function(tween){tween.elem.nodeType&&tween.elem.parentNode&&(tween.elem[tween.prop]=tween.now)}},jQuery.easing={linear:function(p){return p},swing:function(p){return.5-Math.cos(p*Math.PI)/2},_default:"swing"},jQuery.fx=Tween.prototype.init,jQuery.fx.step={};var fxNow,inProgress,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;function schedule(){inProgress&&(!1===document.hidden&&window.requestAnimationFrame?window.requestAnimationFrame(schedule):window.setTimeout(schedule,jQuery.fx.interval),jQuery.fx.tick())}function createFxNow(){return window.setTimeout((function(){fxNow=void 0})),fxNow=Date.now()}function genFx(type,includeWidth){var which,i=0,attrs={height:type};for(includeWidth=includeWidth?1:0;i<4;i+=2-includeWidth)attrs["margin"+(which=cssExpand[i])]=attrs["padding"+which]=type;return includeWidth&&(attrs.opacity=attrs.width=type),attrs}function createTween(value,prop,animation){for(var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),index=0,length=collection.length;index<length;index++)if(tween=collection[index].call(animation,prop,value))return tween}function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always((function(){delete tick.elem})),tick=function(){if(stopped)return!1;for(var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),percent=1-(remaining/animation.duration||0),index=0,length=animation.tweens.length;index<length;index++)animation.tweens[index].run(percent);return deferred.notifyWith(elem,[animation,percent,remaining]),percent<1&&length?remaining:(length||deferred.notifyWith(elem,[animation,1,0]),deferred.resolveWith(elem,[animation]),!1)},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(!0,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);return animation.tweens.push(tween),tween},stop:function(gotoEnd){var index=0,length=gotoEnd?animation.tweens.length:0;if(stopped)return this;for(stopped=!0;index<length;index++)animation.tweens[index].run(1);return gotoEnd?(deferred.notifyWith(elem,[animation,1,0]),deferred.resolveWith(elem,[animation,gotoEnd])):deferred.rejectWith(elem,[animation,gotoEnd]),this}}),props=animation.props;for(!function(props,specialEasing){var index,name,easing,value,hooks;for(index in props)if(easing=specialEasing[name=camelCase(index)],value=props[index],Array.isArray(value)&&(easing=value[1],value=props[index]=value[0]),index!==name&&(props[name]=value,delete props[index]),(hooks=jQuery.cssHooks[name])&&"expand"in hooks)for(index in value=hooks.expand(value),delete props[name],value)index in props||(props[index]=value[index],specialEasing[index]=easing);else specialEasing[name]=easing}(props,animation.opts.specialEasing);index<length;index++)if(result=Animation.prefilters[index].call(animation,elem,props,animation.opts))return isFunction(result.stop)&&(jQuery._queueHooks(animation.elem,animation.opts.queue).stop=result.stop.bind(result)),result;return jQuery.map(props,createTween,animation),isFunction(animation.opts.start)&&animation.opts.start.call(elem,animation),animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always),jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue})),animation}jQuery.Animation=jQuery.extend(Animation,{tweeners:{"*":[function(prop,value){var tween=this.createTween(prop,value);return adjustCSS(tween.elem,prop,rcssNum.exec(value),tween),tween}]},tweener:function(props,callback){isFunction(props)?(callback=props,props=["*"]):props=props.match(rnothtmlwhite);for(var prop,index=0,length=props.length;index<length;index++)prop=props[index],Animation.tweeners[prop]=Animation.tweeners[prop]||[],Animation.tweeners[prop].unshift(callback)},prefilters:[function(elem,props,opts){var prop,value,toggle,hooks,oldfire,propTween,restoreDisplay,display,isBox="width"in props||"height"in props,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHiddenWithinTree(elem),dataShow=dataPriv.get(elem,"fxshow");for(prop in opts.queue||(null==(hooks=jQuery._queueHooks(elem,"fx")).unqueued&&(hooks.unqueued=0,oldfire=hooks.empty.fire,hooks.empty.fire=function(){hooks.unqueued||oldfire()}),hooks.unqueued++,anim.always((function(){anim.always((function(){hooks.unqueued--,jQuery.queue(elem,"fx").length||hooks.empty.fire()}))}))),props)if(value=props[prop],rfxtypes.test(value)){if(delete props[prop],toggle=toggle||"toggle"===value,value===(hidden?"hide":"show")){if("show"!==value||!dataShow||void 0===dataShow[prop])continue;hidden=!0}orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop)}if((propTween=!jQuery.isEmptyObject(props))||!jQuery.isEmptyObject(orig))for(prop in isBox&&1===elem.nodeType&&(opts.overflow=[style.overflow,style.overflowX,style.overflowY],null==(restoreDisplay=dataShow&&dataShow.display)&&(restoreDisplay=dataPriv.get(elem,"display")),"none"===(display=jQuery.css(elem,"display"))&&(restoreDisplay?display=restoreDisplay:(showHide([elem],!0),restoreDisplay=elem.style.display||restoreDisplay,display=jQuery.css(elem,"display"),showHide([elem]))),("inline"===display||"inline-block"===display&&null!=restoreDisplay)&&"none"===jQuery.css(elem,"float")&&(propTween||(anim.done((function(){style.display=restoreDisplay})),null==restoreDisplay&&(display=style.display,restoreDisplay="none"===display?"":display)),style.display="inline-block")),opts.overflow&&(style.overflow="hidden",anim.always((function(){style.overflow=opts.overflow[0],style.overflowX=opts.overflow[1],style.overflowY=opts.overflow[2]}))),propTween=!1,orig)propTween||(dataShow?"hidden"in dataShow&&(hidden=dataShow.hidden):dataShow=dataPriv.access(elem,"fxshow",{display:restoreDisplay}),toggle&&(dataShow.hidden=!hidden),hidden&&showHide([elem],!0),anim.done((function(){for(prop in hidden||showHide([elem]),dataPriv.remove(elem,"fxshow"),orig)jQuery.style(elem,prop,orig[prop])}))),propTween=createTween(hidden?dataShow[prop]:0,prop,anim),prop in dataShow||(dataShow[prop]=propTween.start,hidden&&(propTween.end=propTween.start,propTween.start=0))}],prefilter:function(callback,prepend){prepend?Animation.prefilters.unshift(callback):Animation.prefilters.push(callback)}}),jQuery.speed=function(speed,easing,fn){var opt=speed&&"object"==typeof speed?jQuery.extend({},speed):{complete:fn||!fn&&easing||isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!isFunction(easing)&&easing};return jQuery.fx.off?opt.duration=0:"number"!=typeof opt.duration&&(opt.duration in jQuery.fx.speeds?opt.duration=jQuery.fx.speeds[opt.duration]:opt.duration=jQuery.fx.speeds._default),null!=opt.queue&&!0!==opt.queue||(opt.queue="fx"),opt.old=opt.complete,opt.complete=function(){isFunction(opt.old)&&opt.old.call(this),opt.queue&&jQuery.dequeue(this,opt.queue)},opt},jQuery.fn.extend({fadeTo:function(speed,to,easing,callback){return this.filter(isHiddenWithinTree).css("opacity",0).show().end().animate({opacity:to},speed,easing,callback)},animate:function(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function(){var anim=Animation(this,jQuery.extend({},prop),optall);(empty||dataPriv.get(this,"finish"))&&anim.stop(!0)};return doAnimation.finish=doAnimation,empty||!1===optall.queue?this.each(doAnimation):this.queue(optall.queue,doAnimation)},stop:function(type,clearQueue,gotoEnd){var stopQueue=function(hooks){var stop=hooks.stop;delete hooks.stop,stop(gotoEnd)};return"string"!=typeof type&&(gotoEnd=clearQueue,clearQueue=type,type=void 0),clearQueue&&this.queue(type||"fx",[]),this.each((function(){var dequeue=!0,index=null!=type&&type+"queueHooks",timers=jQuery.timers,data=dataPriv.get(this);if(index)data[index]&&data[index].stop&&stopQueue(data[index]);else for(index in data)data[index]&&data[index].stop&&rrun.test(index)&&stopQueue(data[index]);for(index=timers.length;index--;)timers[index].elem!==this||null!=type&&timers[index].queue!==type||(timers[index].anim.stop(gotoEnd),dequeue=!1,timers.splice(index,1));!dequeue&&gotoEnd||jQuery.dequeue(this,type)}))},finish:function(type){return!1!==type&&(type=type||"fx"),this.each((function(){var index,data=dataPriv.get(this),queue=data[type+"queue"],hooks=data[type+"queueHooks"],timers=jQuery.timers,length=queue?queue.length:0;for(data.finish=!0,jQuery.queue(this,type,[]),hooks&&hooks.stop&&hooks.stop.call(this,!0),index=timers.length;index--;)timers[index].elem===this&&timers[index].queue===type&&(timers[index].anim.stop(!0),timers.splice(index,1));for(index=0;index<length;index++)queue[index]&&queue[index].finish&&queue[index].finish.call(this);delete data.finish}))}}),jQuery.each(["toggle","show","hide"],(function(_i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return null==speed||"boolean"==typeof speed?cssFn.apply(this,arguments):this.animate(genFx(name,!0),speed,easing,callback)}})),jQuery.each({slideDown:genFx("show"),slideUp:genFx("hide"),slideToggle:genFx("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback)}})),jQuery.timers=[],jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;for(fxNow=Date.now();i<timers.length;i++)(timer=timers[i])()||timers[i]!==timer||timers.splice(i--,1);timers.length||jQuery.fx.stop(),fxNow=void 0},jQuery.fx.timer=function(timer){jQuery.timers.push(timer),jQuery.fx.start()},jQuery.fx.interval=13,jQuery.fx.start=function(){inProgress||(inProgress=!0,schedule())},jQuery.fx.stop=function(){inProgress=null},jQuery.fx.speeds={slow:600,fast:200,_default:400},jQuery.fn.delay=function(time,type){return time=jQuery.fx&&jQuery.fx.speeds[time]||time,type=type||"fx",this.queue(type,(function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout)}}))},function(){var input=document.createElement("input"),opt=document.createElement("select").appendChild(document.createElement("option"));input.type="checkbox",support.checkOn=""!==input.value,support.optSelected=opt.selected,(input=document.createElement("input")).value="t",input.type="radio",support.radioValue="t"===input.value}();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function(name,value){return access(this,jQuery.attr,name,value,arguments.length>1)},removeAttr:function(name){return this.each((function(){jQuery.removeAttr(this,name)}))}}),jQuery.extend({attr:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(3!==nType&&8!==nType&&2!==nType)return void 0===elem.getAttribute?jQuery.prop(elem,name,value):(1===nType&&jQuery.isXMLDoc(elem)||(hooks=jQuery.attrHooks[name.toLowerCase()]||(jQuery.expr.match.bool.test(name)?boolHook:void 0)),void 0!==value?null===value?void jQuery.removeAttr(elem,name):hooks&&"set"in hooks&&void 0!==(ret=hooks.set(elem,value,name))?ret:(elem.setAttribute(name,value+""),value):hooks&&"get"in hooks&&null!==(ret=hooks.get(elem,name))?ret:null==(ret=jQuery.find.attr(elem,name))?void 0:ret)},attrHooks:{type:{set:function(elem,value){if(!support.radioValue&&"radio"===value&&nodeName(elem,"input")){var val=elem.value;return elem.setAttribute("type",value),val&&(elem.value=val),value}}}},removeAttr:function(elem,value){var name,i=0,attrNames=value&&value.match(rnothtmlwhite);if(attrNames&&1===elem.nodeType)for(;name=attrNames[i++];)elem.removeAttribute(name)}}),boolHook={set:function(elem,value,name){return!1===value?jQuery.removeAttr(elem,name):elem.setAttribute(name,name),name}},jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),(function(_i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle,lowercaseName=name.toLowerCase();return isXML||(handle=attrHandle[lowercaseName],attrHandle[lowercaseName]=ret,ret=null!=getter(elem,name,isXML)?lowercaseName:null,attrHandle[lowercaseName]=handle),ret}}));var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;function stripAndCollapse(value){return(value.match(rnothtmlwhite)||[]).join(" ")}function getClass(elem){return elem.getAttribute&&elem.getAttribute("class")||""}function classesToArray(value){return Array.isArray(value)?value:"string"==typeof value&&value.match(rnothtmlwhite)||[]}jQuery.fn.extend({prop:function(name,value){return access(this,jQuery.prop,name,value,arguments.length>1)},removeProp:function(name){return this.each((function(){delete this[jQuery.propFix[name]||name]}))}}),jQuery.extend({prop:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(3!==nType&&8!==nType&&2!==nType)return 1===nType&&jQuery.isXMLDoc(elem)||(name=jQuery.propFix[name]||name,hooks=jQuery.propHooks[name]),void 0!==value?hooks&&"set"in hooks&&void 0!==(ret=hooks.set(elem,value,name))?ret:elem[name]=value:hooks&&"get"in hooks&&null!==(ret=hooks.get(elem,name))?ret:elem[name]},propHooks:{tabIndex:{get:function(elem){var tabindex=jQuery.find.attr(elem,"tabindex");return tabindex?parseInt(tabindex,10):rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),support.optSelected||(jQuery.propHooks.selected={get:function(elem){var parent=elem.parentNode;return parent&&parent.parentNode&&parent.parentNode.selectedIndex,null},set:function(elem){var parent=elem.parentNode;parent&&(parent.selectedIndex,parent.parentNode&&parent.parentNode.selectedIndex)}}),jQuery.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){jQuery.propFix[this.toLowerCase()]=this})),jQuery.fn.extend({addClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value))return this.each((function(j){jQuery(this).addClass(value.call(this,j,getClass(this)))}));if((classes=classesToArray(value)).length)for(;elem=this[i++];)if(curValue=getClass(elem),cur=1===elem.nodeType&&" "+stripAndCollapse(curValue)+" "){for(j=0;clazz=classes[j++];)cur.indexOf(" "+clazz+" ")<0&&(cur+=clazz+" ");curValue!==(finalValue=stripAndCollapse(cur))&&elem.setAttribute("class",finalValue)}return this},removeClass:function(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(isFunction(value))return this.each((function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)))}));if(!arguments.length)return this.attr("class","");if((classes=classesToArray(value)).length)for(;elem=this[i++];)if(curValue=getClass(elem),cur=1===elem.nodeType&&" "+stripAndCollapse(curValue)+" "){for(j=0;clazz=classes[j++];)for(;cur.indexOf(" "+clazz+" ")>-1;)cur=cur.replace(" "+clazz+" "," ");curValue!==(finalValue=stripAndCollapse(cur))&&elem.setAttribute("class",finalValue)}return this},toggleClass:function(value,stateVal){var type=typeof value,isValidValue="string"===type||Array.isArray(value);return"boolean"==typeof stateVal&&isValidValue?stateVal?this.addClass(value):this.removeClass(value):isFunction(value)?this.each((function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal)})):this.each((function(){var className,i,self,classNames;if(isValidValue)for(i=0,self=jQuery(this),classNames=classesToArray(value);className=classNames[i++];)self.hasClass(className)?self.removeClass(className):self.addClass(className);else void 0!==value&&"boolean"!==type||((className=getClass(this))&&dataPriv.set(this,"__className__",className),this.setAttribute&&this.setAttribute("class",className||!1===value?"":dataPriv.get(this,"__className__")||""))}))},hasClass:function(selector){var className,elem,i=0;for(className=" "+selector+" ";elem=this[i++];)if(1===elem.nodeType&&(" "+stripAndCollapse(getClass(elem))+" ").indexOf(className)>-1)return!0;return!1}});var rreturn=/\r/g;jQuery.fn.extend({val:function(value){var hooks,ret,valueIsFunction,elem=this[0];return arguments.length?(valueIsFunction=isFunction(value),this.each((function(i){var val;1===this.nodeType&&(null==(val=valueIsFunction?value.call(this,i,jQuery(this).val()):value)?val="":"number"==typeof val?val+="":Array.isArray(val)&&(val=jQuery.map(val,(function(value){return null==value?"":value+""}))),(hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()])&&"set"in hooks&&void 0!==hooks.set(this,val,"value")||(this.value=val))}))):elem?(hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()])&&"get"in hooks&&void 0!==(ret=hooks.get(elem,"value"))?ret:"string"==typeof(ret=elem.value)?ret.replace(rreturn,""):null==ret?"":ret:void 0}}),jQuery.extend({valHooks:{option:{get:function(elem){var val=jQuery.find.attr(elem,"value");return null!=val?val:stripAndCollapse(jQuery.text(elem))}},select:{get:function(elem){var value,option,i,options=elem.options,index=elem.selectedIndex,one="select-one"===elem.type,values=one?null:[],max=one?index+1:options.length;for(i=index<0?max:one?index:0;i<max;i++)if(((option=options[i]).selected||i===index)&&!option.disabled&&(!option.parentNode.disabled||!nodeName(option.parentNode,"optgroup"))){if(value=jQuery(option).val(),one)return value;values.push(value)}return values},set:function(elem,value){for(var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;i--;)((option=options[i]).selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1)&&(optionSet=!0);return optionSet||(elem.selectedIndex=-1),values}}}}),jQuery.each(["radio","checkbox"],(function(){jQuery.valHooks[this]={set:function(elem,value){if(Array.isArray(value))return elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1}},support.checkOn||(jQuery.valHooks[this].get=function(elem){return null===elem.getAttribute("value")?"on":elem.value})})),support.focusin="onfocusin"in window;var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,stopPropagationCallback=function(e){e.stopPropagation()};jQuery.extend(jQuery.event,{trigger:function(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,lastElement,eventPath=[elem||document],type=hasOwn.call(event,"type")?event.type:event,namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];if(cur=lastElement=tmp=elem=elem||document,3!==elem.nodeType&&8!==elem.nodeType&&!rfocusMorph.test(type+jQuery.event.triggered)&&(type.indexOf(".")>-1&&(namespaces=type.split("."),type=namespaces.shift(),namespaces.sort()),ontype=type.indexOf(":")<0&&"on"+type,(event=event[jQuery.expando]?event:new jQuery.Event(type,"object"==typeof event&&event)).isTrigger=onlyHandlers?2:3,event.namespace=namespaces.join("."),event.rnamespace=event.namespace?new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,event.result=void 0,event.target||(event.target=elem),data=null==data?[event]:jQuery.makeArray(data,[event]),special=jQuery.event.special[type]||{},onlyHandlers||!special.trigger||!1!==special.trigger.apply(elem,data))){if(!onlyHandlers&&!special.noBubble&&!isWindow(elem)){for(bubbleType=special.delegateType||type,rfocusMorph.test(bubbleType+type)||(cur=cur.parentNode);cur;cur=cur.parentNode)eventPath.push(cur),tmp=cur;tmp===(elem.ownerDocument||document)&&eventPath.push(tmp.defaultView||tmp.parentWindow||window)}for(i=0;(cur=eventPath[i++])&&!event.isPropagationStopped();)lastElement=cur,event.type=i>1?bubbleType:special.bindType||type,(handle=(dataPriv.get(cur,"events")||Object.create(null))[event.type]&&dataPriv.get(cur,"handle"))&&handle.apply(cur,data),(handle=ontype&&cur[ontype])&&handle.apply&&acceptData(cur)&&(event.result=handle.apply(cur,data),!1===event.result&&event.preventDefault());return event.type=type,onlyHandlers||event.isDefaultPrevented()||special._default&&!1!==special._default.apply(eventPath.pop(),data)||!acceptData(elem)||ontype&&isFunction(elem[type])&&!isWindow(elem)&&((tmp=elem[ontype])&&(elem[ontype]=null),jQuery.event.triggered=type,event.isPropagationStopped()&&lastElement.addEventListener(type,stopPropagationCallback),elem[type](),event.isPropagationStopped()&&lastElement.removeEventListener(type,stopPropagationCallback),jQuery.event.triggered=void 0,tmp&&(elem[ontype]=tmp)),event.result}},simulate:function(type,elem,event){var e=jQuery.extend(new jQuery.Event,event,{type:type,isSimulated:!0});jQuery.event.trigger(e,null,elem)}}),jQuery.fn.extend({trigger:function(type,data){return this.each((function(){jQuery.event.trigger(type,data,this)}))},triggerHandler:function(type,data){var elem=this[0];if(elem)return jQuery.event.trigger(type,data,elem,!0)}}),support.focusin||jQuery.each({focus:"focusin",blur:"focusout"},(function(orig,fix){var handler=function(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event))};jQuery.event.special[fix]={setup:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix);attaches||doc.addEventListener(orig,handler,!0),dataPriv.access(doc,fix,(attaches||0)+1)},teardown:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix)-1;attaches?dataPriv.access(doc,fix,attaches):(doc.removeEventListener(orig,handler,!0),dataPriv.remove(doc,fix))}}}));var location=window.location,nonce={guid:Date.now()},rquery=/\?/;jQuery.parseXML=function(data){var xml;if(!data||"string"!=typeof data)return null;try{xml=(new window.DOMParser).parseFromString(data,"text/xml")}catch(e){xml=void 0}return xml&&!xml.getElementsByTagName("parsererror").length||jQuery.error("Invalid XML: "+data),xml};var rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(Array.isArray(obj))jQuery.each(obj,(function(i,v){traditional||rbracket.test(prefix)?add(prefix,v):buildParams(prefix+"["+("object"==typeof v&&null!=v?i:"")+"]",v,traditional,add)}));else if(traditional||"object"!==toType(obj))add(prefix,obj);else for(name in obj)buildParams(prefix+"["+name+"]",obj[name],traditional,add)}jQuery.param=function(a,traditional){var prefix,s=[],add=function(key,valueOrFunction){var value=isFunction(valueOrFunction)?valueOrFunction():valueOrFunction;s[s.length]=encodeURIComponent(key)+"="+encodeURIComponent(null==value?"":value)};if(null==a)return"";if(Array.isArray(a)||a.jquery&&!jQuery.isPlainObject(a))jQuery.each(a,(function(){add(this.name,this.value)}));else for(prefix in a)buildParams(prefix,a[prefix],traditional,add);return s.join("&")},jQuery.fn.extend({serialize:function(){return jQuery.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var elements=jQuery.prop(this,"elements");return elements?jQuery.makeArray(elements):this})).filter((function(){var type=this.type;return this.name&&!jQuery(this).is(":disabled")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type))})).map((function(_i,elem){var val=jQuery(this).val();return null==val?null:Array.isArray(val)?jQuery.map(val,(function(val){return{name:elem.name,value:val.replace(rCRLF,"\r\n")}})):{name:elem.name,value:val.replace(rCRLF,"\r\n")}})).get()}});var r20=/%20/g,rhash=/#.*$/,rantiCache=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \t]*([^\r\n]*)$/gm,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,prefilters={},transports={},allTypes="*/".concat("*"),originAnchor=document.createElement("a");function addToPrefiltersOrTransports(structure){return function(dataTypeExpression,func){"string"!=typeof dataTypeExpression&&(func=dataTypeExpression,dataTypeExpression="*");var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnothtmlwhite)||[];if(isFunction(func))for(;dataType=dataTypes[i++];)"+"===dataType[0]?(dataType=dataType.slice(1)||"*",(structure[dataType]=structure[dataType]||[]).unshift(func)):(structure[dataType]=structure[dataType]||[]).push(func)}}function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure===transports;function inspect(dataType){var selected;return inspected[dataType]=!0,jQuery.each(structure[dataType]||[],(function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);return"string"!=typeof dataTypeOrTransport||seekingTransport||inspected[dataTypeOrTransport]?seekingTransport?!(selected=dataTypeOrTransport):void 0:(options.dataTypes.unshift(dataTypeOrTransport),inspect(dataTypeOrTransport),!1)})),selected}return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*")}function ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src)void 0!==src[key]&&((flatOptions[key]?target:deep||(deep={}))[key]=src[key]);return deep&&jQuery.extend(!0,target,deep),target}originAnchor.href=location.href,jQuery.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:location.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(location.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":allTypes,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":jQuery.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(target,settings){return settings?ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):ajaxExtend(jQuery.ajaxSettings,target)},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),ajax:function(url,options){"object"==typeof url&&(options=url,url=void 0),options=options||{};var transport,cacheURL,responseHeadersString,responseHeaders,timeoutTimer,urlAnchor,completed,fireGlobals,i,uncached,s=jQuery.ajaxSetup({},options),callbackContext=s.context||s,globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks("once memory"),statusCode=s.statusCode||{},requestHeaders={},requestHeadersNames={},strAbort="canceled",jqXHR={readyState:0,getResponseHeader:function(key){var match;if(completed){if(!responseHeaders)for(responseHeaders={};match=rheaders.exec(responseHeadersString);)responseHeaders[match[1].toLowerCase()+" "]=(responseHeaders[match[1].toLowerCase()+" "]||[]).concat(match[2]);match=responseHeaders[key.toLowerCase()+" "]}return null==match?null:match.join(", ")},getAllResponseHeaders:function(){return completed?responseHeadersString:null},setRequestHeader:function(name,value){return null==completed&&(name=requestHeadersNames[name.toLowerCase()]=requestHeadersNames[name.toLowerCase()]||name,requestHeaders[name]=value),this},overrideMimeType:function(type){return null==completed&&(s.mimeType=type),this},statusCode:function(map){var code;if(map)if(completed)jqXHR.always(map[jqXHR.status]);else for(code in map)statusCode[code]=[statusCode[code],map[code]];return this},abort:function(statusText){var finalText=statusText||strAbort;return transport&&transport.abort(finalText),done(0,finalText),this}};if(deferred.promise(jqXHR),s.url=((url||s.url||location.href)+"").replace(rprotocol,location.protocol+"//"),s.type=options.method||options.type||s.method||s.type,s.dataTypes=(s.dataType||"*").toLowerCase().match(rnothtmlwhite)||[""],null==s.crossDomain){urlAnchor=document.createElement("a");try{urlAnchor.href=s.url,urlAnchor.href=urlAnchor.href,s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!=urlAnchor.protocol+"//"+urlAnchor.host}catch(e){s.crossDomain=!0}}if(s.data&&s.processData&&"string"!=typeof s.data&&(s.data=jQuery.param(s.data,s.traditional)),inspectPrefiltersOrTransports(prefilters,s,options,jqXHR),completed)return jqXHR;for(i in(fireGlobals=jQuery.event&&s.global)&&0==jQuery.active++&&jQuery.event.trigger("ajaxStart"),s.type=s.type.toUpperCase(),s.hasContent=!rnoContent.test(s.type),cacheURL=s.url.replace(rhash,""),s.hasContent?s.data&&s.processData&&0===(s.contentType||"").indexOf("application/x-www-form-urlencoded")&&(s.data=s.data.replace(r20,"+")):(uncached=s.url.slice(cacheURL.length),s.data&&(s.processData||"string"==typeof s.data)&&(cacheURL+=(rquery.test(cacheURL)?"&":"?")+s.data,delete s.data),!1===s.cache&&(cacheURL=cacheURL.replace(rantiCache,"$1"),uncached=(rquery.test(cacheURL)?"&":"?")+"_="+nonce.guid+++uncached),s.url=cacheURL+uncached),s.ifModified&&(jQuery.lastModified[cacheURL]&&jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]),jQuery.etag[cacheURL]&&jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL])),(s.data&&s.hasContent&&!1!==s.contentType||options.contentType)&&jqXHR.setRequestHeader("Content-Type",s.contentType),jqXHR.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+("*"!==s.dataTypes[0]?", "+allTypes+"; q=0.01":""):s.accepts["*"]),s.headers)jqXHR.setRequestHeader(i,s.headers[i]);if(s.beforeSend&&(!1===s.beforeSend.call(callbackContext,jqXHR,s)||completed))return jqXHR.abort();if(strAbort="abort",completeDeferred.add(s.complete),jqXHR.done(s.success),jqXHR.fail(s.error),transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR)){if(jqXHR.readyState=1,fireGlobals&&globalEventContext.trigger("ajaxSend",[jqXHR,s]),completed)return jqXHR;s.async&&s.timeout>0&&(timeoutTimer=window.setTimeout((function(){jqXHR.abort("timeout")}),s.timeout));try{completed=!1,transport.send(requestHeaders,done)}catch(e){if(completed)throw e;done(-1,e)}}else done(-1,"No Transport");function done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;completed||(completed=!0,timeoutTimer&&window.clearTimeout(timeoutTimer),transport=void 0,responseHeadersString=headers||"",jqXHR.readyState=status>0?4:0,isSuccess=status>=200&&status<300||304===status,responses&&(response=function(s,jqXHR,responses){for(var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;"*"===dataTypes[0];)dataTypes.shift(),void 0===ct&&(ct=s.mimeType||jqXHR.getResponseHeader("Content-Type"));if(ct)for(type in contents)if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break}if(dataTypes[0]in responses)finalDataType=dataTypes[0];else{for(type in responses){if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){finalDataType=type;break}firstDataType||(firstDataType=type)}finalDataType=finalDataType||firstDataType}if(finalDataType)return finalDataType!==dataTypes[0]&&dataTypes.unshift(finalDataType),responses[finalDataType]}(s,jqXHR,responses)),!isSuccess&&jQuery.inArray("script",s.dataTypes)>-1&&(s.converters["text script"]=function(){}),response=function(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},dataTypes=s.dataTypes.slice();if(dataTypes[1])for(conv in s.converters)converters[conv.toLowerCase()]=s.converters[conv];for(current=dataTypes.shift();current;)if(s.responseFields[current]&&(jqXHR[s.responseFields[current]]=response),!prev&&isSuccess&&s.dataFilter&&(response=s.dataFilter(response,s.dataType)),prev=current,current=dataTypes.shift())if("*"===current)current=prev;else if("*"!==prev&&prev!==current){if(!(conv=converters[prev+" "+current]||converters["* "+current]))for(conv2 in converters)if((tmp=conv2.split(" "))[1]===current&&(conv=converters[prev+" "+tmp[0]]||converters["* "+tmp[0]])){!0===conv?conv=converters[conv2]:!0!==converters[conv2]&&(current=tmp[0],dataTypes.unshift(tmp[1]));break}if(!0!==conv)if(conv&&s.throws)response=conv(response);else try{response=conv(response)}catch(e){return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current}}}return{state:"success",data:response}}(s,response,jqXHR,isSuccess),isSuccess?(s.ifModified&&((modified=jqXHR.getResponseHeader("Last-Modified"))&&(jQuery.lastModified[cacheURL]=modified),(modified=jqXHR.getResponseHeader("etag"))&&(jQuery.etag[cacheURL]=modified)),204===status||"HEAD"===s.type?statusText="nocontent":304===status?statusText="notmodified":(statusText=response.state,success=response.data,isSuccess=!(error=response.error))):(error=statusText,!status&&statusText||(statusText="error",status<0&&(status=0))),jqXHR.status=status,jqXHR.statusText=(nativeStatusText||statusText)+"",isSuccess?deferred.resolveWith(callbackContext,[success,statusText,jqXHR]):deferred.rejectWith(callbackContext,[jqXHR,statusText,error]),jqXHR.statusCode(statusCode),statusCode=void 0,fireGlobals&&globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",[jqXHR,s,isSuccess?success:error]),completeDeferred.fireWith(callbackContext,[jqXHR,statusText]),fireGlobals&&(globalEventContext.trigger("ajaxComplete",[jqXHR,s]),--jQuery.active||jQuery.event.trigger("ajaxStop")))}return jqXHR},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json")},getScript:function(url,callback){return jQuery.get(url,void 0,callback,"script")}}),jQuery.each(["get","post"],(function(_i,method){jQuery[method]=function(url,data,callback,type){return isFunction(data)&&(type=type||callback,callback=data,data=void 0),jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url))}})),jQuery.ajaxPrefilter((function(s){var i;for(i in s.headers)"content-type"===i.toLowerCase()&&(s.contentType=s.headers[i]||"")})),jQuery._evalUrl=function(url,options,doc){return jQuery.ajax({url:url,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(response){jQuery.globalEval(response,options,doc)}})},jQuery.fn.extend({wrapAll:function(html){var wrap;return this[0]&&(isFunction(html)&&(html=html.call(this[0])),wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&wrap.insertBefore(this[0]),wrap.map((function(){for(var elem=this;elem.firstElementChild;)elem=elem.firstElementChild;return elem})).append(this)),this},wrapInner:function(html){return isFunction(html)?this.each((function(i){jQuery(this).wrapInner(html.call(this,i))})):this.each((function(){var self=jQuery(this),contents=self.contents();contents.length?contents.wrapAll(html):self.append(html)}))},wrap:function(html){var htmlIsFunction=isFunction(html);return this.each((function(i){jQuery(this).wrapAll(htmlIsFunction?html.call(this,i):html)}))},unwrap:function(selector){return this.parent(selector).not("body").each((function(){jQuery(this).replaceWith(this.childNodes)})),this}}),jQuery.expr.pseudos.hidden=function(elem){return!jQuery.expr.pseudos.visible(elem)},jQuery.expr.pseudos.visible=function(elem){return!!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length)},jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest}catch(e){}};var xhrSuccessStatus={0:200,1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&"withCredentials"in xhrSupported,support.ajax=xhrSupported=!!xhrSupported,jQuery.ajaxTransport((function(options){var callback,errorCallback;if(support.cors||xhrSupported&&!options.crossDomain)return{send:function(headers,complete){var i,xhr=options.xhr();if(xhr.open(options.type,options.url,options.async,options.username,options.password),options.xhrFields)for(i in options.xhrFields)xhr[i]=options.xhrFields[i];for(i in options.mimeType&&xhr.overrideMimeType&&xhr.overrideMimeType(options.mimeType),options.crossDomain||headers["X-Requested-With"]||(headers["X-Requested-With"]="XMLHttpRequest"),headers)xhr.setRequestHeader(i,headers[i]);callback=function(type){return function(){callback&&(callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.ontimeout=xhr.onreadystatechange=null,"abort"===type?xhr.abort():"error"===type?"number"!=typeof xhr.status?complete(0,"error"):complete(xhr.status,xhr.statusText):complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,"text"!==(xhr.responseType||"text")||"string"!=typeof xhr.responseText?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders()))}},xhr.onload=callback(),errorCallback=xhr.onerror=xhr.ontimeout=callback("error"),void 0!==xhr.onabort?xhr.onabort=errorCallback:xhr.onreadystatechange=function(){4===xhr.readyState&&window.setTimeout((function(){callback&&errorCallback()}))},callback=callback("abort");try{xhr.send(options.hasContent&&options.data||null)}catch(e){if(callback)throw e}},abort:function(){callback&&callback()}}})),jQuery.ajaxPrefilter((function(s){s.crossDomain&&(s.contents.script=!1)})),jQuery.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(text){return jQuery.globalEval(text),text}}}),jQuery.ajaxPrefilter("script",(function(s){void 0===s.cache&&(s.cache=!1),s.crossDomain&&(s.type="GET")})),jQuery.ajaxTransport("script",(function(s){var script,callback;if(s.crossDomain||s.scriptAttrs)return{send:function(_,complete){script=jQuery("<script>").attr(s.scriptAttrs||{}).prop({charset:s.scriptCharset,src:s.url}).on("load error",callback=function(evt){script.remove(),callback=null,evt&&complete("error"===evt.type?404:200,evt.type)}),document.head.appendChild(script[0])},abort:function(){callback&&callback()}}}));var body,oldCallbacks=[],rjsonp=/(=)\?(?=&|$)|\?\?/;jQuery.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var callback=oldCallbacks.pop()||jQuery.expando+"_"+nonce.guid++;return this[callback]=!0,callback}}),jQuery.ajaxPrefilter("json jsonp",(function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=!1!==s.jsonp&&(rjsonp.test(s.url)?"url":"string"==typeof s.data&&0===(s.contentType||"").indexOf("application/x-www-form-urlencoded")&&rjsonp.test(s.data)&&"data");if(jsonProp||"jsonp"===s.dataTypes[0])return callbackName=s.jsonpCallback=isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback,jsonProp?s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName):!1!==s.jsonp&&(s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName),s.converters["script json"]=function(){return responseContainer||jQuery.error(callbackName+" was not called"),responseContainer[0]},s.dataTypes[0]="json",overwritten=window[callbackName],window[callbackName]=function(){responseContainer=arguments},jqXHR.always((function(){void 0===overwritten?jQuery(window).removeProp(callbackName):window[callbackName]=overwritten,s[callbackName]&&(s.jsonpCallback=originalSettings.jsonpCallback,oldCallbacks.push(callbackName)),responseContainer&&isFunction(overwritten)&&overwritten(responseContainer[0]),responseContainer=overwritten=void 0})),"script"})),support.createHTMLDocument=((body=document.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===body.childNodes.length),jQuery.parseHTML=function(data,context,keepScripts){return"string"!=typeof data?[]:("boolean"==typeof context&&(keepScripts=context,context=!1),context||(support.createHTMLDocument?((base=(context=document.implementation.createHTMLDocument("")).createElement("base")).href=document.location.href,context.head.appendChild(base)):context=document),scripts=!keepScripts&&[],(parsed=rsingleTag.exec(data))?[context.createElement(parsed[1])]:(parsed=buildFragment([data],context,scripts),scripts&&scripts.length&&jQuery(scripts).remove(),jQuery.merge([],parsed.childNodes)));var base,parsed,scripts},jQuery.fn.load=function(url,params,callback){var selector,type,response,self=this,off=url.indexOf(" ");return off>-1&&(selector=stripAndCollapse(url.slice(off)),url=url.slice(0,off)),isFunction(params)?(callback=params,params=void 0):params&&"object"==typeof params&&(type="POST"),self.length>0&&jQuery.ajax({url:url,type:type||"GET",dataType:"html",data:params}).done((function(responseText){response=arguments,self.html(selector?jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):responseText)})).always(callback&&function(jqXHR,status){self.each((function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR])}))}),this},jQuery.expr.pseudos.animated=function(elem){return jQuery.grep(jQuery.timers,(function(fn){return elem===fn.elem})).length},jQuery.offset={setOffset:function(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,position=jQuery.css(elem,"position"),curElem=jQuery(elem),props={};"static"===position&&(elem.style.position="relative"),curOffset=curElem.offset(),curCSSTop=jQuery.css(elem,"top"),curCSSLeft=jQuery.css(elem,"left"),("absolute"===position||"fixed"===position)&&(curCSSTop+curCSSLeft).indexOf("auto")>-1?(curTop=(curPosition=curElem.position()).top,curLeft=curPosition.left):(curTop=parseFloat(curCSSTop)||0,curLeft=parseFloat(curCSSLeft)||0),isFunction(options)&&(options=options.call(elem,i,jQuery.extend({},curOffset))),null!=options.top&&(props.top=options.top-curOffset.top+curTop),null!=options.left&&(props.left=options.left-curOffset.left+curLeft),"using"in options?options.using.call(elem,props):("number"==typeof props.top&&(props.top+="px"),"number"==typeof props.left&&(props.left+="px"),curElem.css(props))}},jQuery.fn.extend({offset:function(options){if(arguments.length)return void 0===options?this:this.each((function(i){jQuery.offset.setOffset(this,options,i)}));var rect,win,elem=this[0];return elem?elem.getClientRects().length?(rect=elem.getBoundingClientRect(),win=elem.ownerDocument.defaultView,{top:rect.top+win.pageYOffset,left:rect.left+win.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var offsetParent,offset,doc,elem=this[0],parentOffset={top:0,left:0};if("fixed"===jQuery.css(elem,"position"))offset=elem.getBoundingClientRect();else{for(offset=this.offset(),doc=elem.ownerDocument,offsetParent=elem.offsetParent||doc.documentElement;offsetParent&&(offsetParent===doc.body||offsetParent===doc.documentElement)&&"static"===jQuery.css(offsetParent,"position");)offsetParent=offsetParent.parentNode;offsetParent&&offsetParent!==elem&&1===offsetParent.nodeType&&((parentOffset=jQuery(offsetParent).offset()).top+=jQuery.css(offsetParent,"borderTopWidth",!0),parentOffset.left+=jQuery.css(offsetParent,"borderLeftWidth",!0))}return{top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",!0),left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var offsetParent=this.offsetParent;offsetParent&&"static"===jQuery.css(offsetParent,"position");)offsetParent=offsetParent.offsetParent;return offsetParent||documentElement}))}}),jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(method,prop){var top="pageYOffset"===prop;jQuery.fn[method]=function(val){return access(this,(function(elem,method,val){var win;if(isWindow(elem)?win=elem:9===elem.nodeType&&(win=elem.defaultView),void 0===val)return win?win[prop]:elem[method];win?win.scrollTo(top?win.pageXOffset:val,top?val:win.pageYOffset):elem[method]=val}),method,val,arguments.length)}})),jQuery.each(["top","left"],(function(_i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,(function(elem,computed){if(computed)return computed=curCSS(elem,prop),rnumnonpx.test(computed)?jQuery(elem).position()[prop]+"px":computed}))})),jQuery.each({Height:"height",Width:"width"},(function(name,type){jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},(function(defaultExtra,funcName){jQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||"boolean"!=typeof margin),extra=defaultExtra||(!0===margin||!0===value?"margin":"border");return access(this,(function(elem,type,value){var doc;return isWindow(elem)?0===funcName.indexOf("outer")?elem["inner"+name]:elem.document.documentElement["client"+name]:9===elem.nodeType?(doc=elem.documentElement,Math.max(elem.body["scroll"+name],doc["scroll"+name],elem.body["offset"+name],doc["offset"+name],doc["client"+name])):void 0===value?jQuery.css(elem,type,extra):jQuery.style(elem,type,value,extra)}),type,chainable?margin:void 0,chainable)}}))})),jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(_i,type){jQuery.fn[type]=function(fn){return this.on(type,fn)}})),jQuery.fn.extend({bind:function(types,data,fn){return this.on(types,null,data,fn)},unbind:function(types,fn){return this.off(types,null,fn)},delegate:function(selector,types,data,fn){return this.on(types,selector,data,fn)},undelegate:function(selector,types,fn){return 1===arguments.length?this.off(selector,"**"):this.off(types,selector||"**",fn)},hover:function(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver)}}),jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(_i,name){jQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name)}}));var rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;jQuery.proxy=function(fn,context){var tmp,args,proxy;if("string"==typeof context&&(tmp=fn[context],context=fn,fn=tmp),isFunction(fn))return args=slice.call(arguments,2),(proxy=function(){return fn.apply(context||this,args.concat(slice.call(arguments)))}).guid=fn.guid=fn.guid||jQuery.guid++,proxy},jQuery.holdReady=function(hold){hold?jQuery.readyWait++:jQuery.ready(!0)},jQuery.isArray=Array.isArray,jQuery.parseJSON=JSON.parse,jQuery.nodeName=nodeName,jQuery.isFunction=isFunction,jQuery.isWindow=isWindow,jQuery.camelCase=camelCase,jQuery.type=toType,jQuery.now=Date.now,jQuery.isNumeric=function(obj){var type=jQuery.type(obj);return("number"===type||"string"===type)&&!isNaN(obj-parseFloat(obj))},jQuery.trim=function(text){return null==text?"":(text+"").replace(rtrim,"")},void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return jQuery}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__);var _jQuery=window.jQuery,_$=window.$;return jQuery.noConflict=function(deep){return window.$===jQuery&&(window.$=_$),deep&&window.jQuery===jQuery&&(window.jQuery=_jQuery),jQuery},void 0===noGlobal&&(window.jQuery=window.$=jQuery),jQuery}))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ConferenceStats=class{constructor(){this.participants=[],this.talkDuration=0}};exports.ConferenceStatsParticipant=class{constructor(talkerId){this.talkerId=null,this.contact=null,this.talkDuration=0,this.activeSince=null,this.talkDisplay=0,this.talkerId=talkerId}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_settings_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(18),rainbow_sdk_services_core_auth_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(8),rainbow_sdk_services_core_company_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(122),rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(6),rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(24),_src_models_company_invitation_model__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(102),rainbow_sdk_services_core_imageUtils_service__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(64);angular.module("rainbow").service("adminCompanyService",["$q","$log","$http","$rootScope","errorHelperService","centralizedService","Site","CompanyRequest","Bot",function($q,$log,$http,$rootScope,errorHelperService,centralizedService,Site,CompanyRequest,Bot){const service=this,settingsService=rainbow_sdk_services_core_settings_service__WEBPACK_IMPORTED_MODULE_0__.SettingsService.getInstance(),authService=rainbow_sdk_services_core_auth_service__WEBPACK_IMPORTED_MODULE_1__.AuthService.getInstance(),companyService=rainbow_sdk_services_core_company_service__WEBPACK_IMPORTED_MODULE_2__.CompanyService.getInstance(),contactService=rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_3__.ContactService.getInstance();service.start=function(){return $log.info("[adminCompanyService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/admin/v1.0/",$log.info("[adminCompanyService] === STARTED ==="),$q.when()},service.stop=function(){return $log.info("[adminCompanyService] === STOPPING ==="),$log.info("[adminCompanyService] === STOPPED ==="),$q.when()},service.getCompanies=function(organisationId,page,pageSize,searchName,format,bpId,status,isBP,bpType,offerCanBeSold,searchReference,noLogo){const defered=$q.defer(),adminContact=contactService.userContact;if(!(adminContact.isSuperadmin()||adminContact.isBusinessAdmin()||adminContact.isCustomerSuccessAdmin()||adminContact.isBPAdmin()||adminContact.isOrganizationAdmin()))return service.getCompany(adminContact.company.id).then((function(company){return{companies:[company]}}));let url=service.portalURL+"companies?format="+(format||"full")+"&selectedThemeObj=true";return organisationId&&(url+="&organisationId="+organisationId),page&&pageSize&&(url+="&offset="+pageSize*(page-1)),pageSize&&(url+="&limit="+pageSize),searchName&&(url+="&name="+encodeURIComponent(searchName)),bpId&&(url+="&bpId="+bpId),status&&(Array.isArray(status)?status.forEach((function(value){url+="&status="+value})):url+="&status="+status),null!=isBP&&(url+="&isBP="+isBP),bpType&&(url+="&bpType="+bpType),offerCanBeSold&&(url+="&offerCanBeSold="+offerCanBeSold),searchReference&&(url+="&externalReference="+encodeURIComponent(searchReference)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const data=response.data.data;$log.info("[adminCompanyService] getCompanies success");const companies=[];data.forEach((function(orgData){const company=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(orgData);!angular.isUndefined(noLogo)&&noLogo||companyService.getCompanyLogo(company),companies.push(company)})),defered.resolve({companies:companies,limit:response.data.limit,offset:response.data.offset,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanies"))})),defered.promise},service.getAllCompaniesSmall=function(organisationId,bpId,status,isBP,bpType){return service.getAllCompanies(organisationId,bpId,status,isBP,bpType,"small")},service.getAllCompanies=function(organisationId,bpId,status,isBP,bpType,format,serialize){const nbParallelRequests=serialize?1:5;return $q((function(resolve,reject){let result;service.getCompanies(organisationId,1,1e3,null,format,bpId,status,isBP,bpType).then((function(response){if(result=response,response.total>response.limit){const totalPages=Math.ceil(response.total/1e3);let pages=Array(...Array(totalPages-1));pages=pages.map((function(__unused,index){return index+2}));const chunks=[];for(;pages.length>0;)chunks.push(pages.splice(0,nbParallelRequests));return chunks.reduce((function(promiseChain,requests){return promiseChain.then((function(){const promisesArray=requests.map((function(page){return service.getCompanies(organisationId,page,1e3,null,format,bpId,status,isBP,bpType).then((function(next){response.companies=response.companies.concat(next.companies),response.limit+=next.limit}))}));return $q.all(promisesArray)}))}),$q.resolve())}return $q.resolve()})).then((function(){resolve(result)})).catch((function(error){reject(error)}))}))},service.exportManagedCompaniesListCsvFile=function(companyId,isReseller){return $q((function(resolve,reject){$log.info("[adminCompanyService] === exportManagedCompaniesListCsvFile ===");const mDate=moment(),csvFilename=(isReseller?"reseller_":"customer_")+"companies_"+mDate.format("YYYY-MM-DD_HH-mm")+".csv",isBP=Boolean(isReseller);let fileBlob;service.buildManagedCompaniesListCsvBlob(companyId,isBP).then((function(blob){return fileBlob=blob,centralizedService.fileSaver.promptFolderPathAndSavePromise(csvFilename)})).then((function(){centralizedService.fileSaver.fileDownload(fileBlob,null,null,csvFilename,!0),resolve()})).catch((function(error){reject(error)}))}))},service.buildManagedCompaniesListCsvBlob=function(companyId,isReseller){return $q((function(resolve,reject){$log.info("[adminCompanyService] === buildManagedCompaniesListCsvBlob ===");const csvLines=[];service.getAllCompanies(null,companyId,null,isReseller,null,"full",!0).then((function(result){return isReseller?csvLines.push("partnerTier2Name;partnerTier2Reference;partnerTier2AdditionalReference;customerName;customerReference;customerAdditionalReference;status;offerType;street;city;postalCode;country;state;timezone;supportEmail;adminHasRightToUpdateSubscriptions;adminAllowedUpdateSubscriptionsOps;creationDate"):csvLines.push("customerName;customerReference;customerAdditionalReference;status;offerType;street;city;postalCode;country;state;timezone;supportEmail;adminHasRightToUpdateSubscriptions;adminAllowedUpdateSubscriptionsOps;creationDate"),result.companies.reduce((function(promiseChain,company){return promiseChain.then((function(){let companyLine="";return companyLine+=company.name,companyLine+=";",companyLine+=company.externalReference?company.externalReference:"",companyLine+=";",companyLine+=company.externalReference2?company.externalReference2:"",isReseller&&(companyLine+=";",companyLine+=";",companyLine+=";"),companyLine+=";",companyLine+=company.status,companyLine+=";",companyLine+=company.offerType,companyLine+=";",companyLine+=company.street?company.street:"",companyLine+=";",companyLine+=company.city?company.city:"",companyLine+=";",companyLine+=company.postalCode?company.postalCode:"",companyLine+=";",companyLine+=company.country?company.country:"",companyLine+=";",companyLine+=company.state?company.state:"",companyLine+=";",companyLine+=company.timezone?company.timezone:"",companyLine+=";",companyLine+=company.supportEmail?company.supportEmail:"",companyLine+=";",companyLine+=company.adminHasRightToUpdateSubscriptions,companyLine+=";",companyLine+=company.adminHasRightToUpdateSubscriptions?company.adminAllowedUpdateSubscriptionsOps:"",companyLine+=";",companyLine+=company.creationDate,csvLines.push(companyLine),isReseller?service.getAllCompanies(null,company.id,null,!1,null,"full",!0).then((function(customers){customers.companies.forEach((function(customer){let customerLine="";customerLine+=company.name,customerLine+=";",customerLine+=company.externalReference?company.externalReference:"",customerLine+=";",customerLine+=company.externalReference2?company.externalReference2:"",customerLine+=";",customerLine+=customer.name,customerLine+=";",customerLine+=customer.externalReference?customer.externalReference:"",customerLine+=";",customerLine+=customer.externalReference2?customer.externalReference2:"",customerLine+=";",customerLine+=customer.status,customerLine+=";",customerLine+=customer.offerType,customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",customerLine+=";",csvLines.push(customerLine)}))})):$q.resolve()}))}),$q.resolve())})).then((function(){const csvBlob=new Blob([csvLines.join("\r\n")],{type:"text/csv; charset=utf-8"});resolve(csvBlob)})).catch((function(error){reject(error)}))}))},service.getCompany=function(companyId,format){let url=service.portalURL+"companies/"+companyId+"?format="+(format||"full");return url+="&selectedThemeObj=true",$q((function(resolve,reject){$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompany success");const data=response.data.data,company=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(data);companyService.getCompanyLogo(company),companyService.getCompanyBanner(company),resolve(company)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompany"))}))}))},service.getDefaultCompany=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/default?selectedThemeObj=true",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getDefaultCompany success");const data=response.data.data,company=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(data);resolve(company)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getDefaultCompany"))}))}))},service.searchCompanies=function(searchValue){const defered=$q.defer(),searchValueLC=searchValue.toLowerCase();return service.getCompanies().then((function(result){const filteredCompanies=result.companies.filter((function(company){return company.name.toLowerCase().indexOf(searchValueLC)>-1}));defered.resolve(filteredCompanies)})),defered.promise},service.createCompany=function(company){const companyData=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies?selectedThemeObj=true",headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] createCompany success");const newcompany=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(response.data.data);$rootScope.$broadcast("ADMIN_COMPANIES_CHANGE"),defered.resolve(newcompany)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompany"))})),defered.promise},service.createCompanyEndUser=function(company){const companyData=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"POST",url:config.restServerUrl+"/api/rainbow/enduser/v1.0/companies?selectedThemeObj=true",headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] createCompany success");const data=response.data.data,newcompany=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(data);defered.resolve(newcompany)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompanyEndUser"))})),defered.promise},service.updateCompany=function(company){const companyData=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.prune(company,contactService.userContact),defered=$q.defer();return $http({method:"PUT",url:service.portalURL+"companies/"+company.id+"?selectedThemeObj=true",headers:authService.getRequestHeader(),data:companyData}).then((function(response){$log.info("[adminCompanyService] updateCompany success");const data=response.data.data,updatedCompany=rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_4__.Company.createFromData(data);defered.resolve(updatedCompany),$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",company.id)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"updateCompany"))})),defered.promise},service.setDefaultLicenseGroup=function(companyId,licenseGroupName){const companyData={id:companyId,defaultLicenseGroup:licenseGroupName||null};return service.updateCompany(companyData)},service.addVisibility=function(companyId,visibleByCompany){const defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/visible-by/"+visibleByCompany,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] addVisibility success"),defered.resolve()}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"addVisibility"))})),defered.promise},service.removeVisibility=function(companyId,visibleByCompany){const defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/visible-by/"+visibleByCompany,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] removeVisibility success"),defered.resolve()}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"removeVisibility"))})),defered.promise},service.getAllSiteCompany=function(companyId){const defered=$q.defer();return $http({method:"GET",url:service.portalURL+"companies/"+companyId+"/sites",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getAllSiteCompany success");const data=response.data.data,sites=[];data.forEach((function(element){const site=Site.createFromData(element);sites.push(site)})),defered.resolve(sites)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getAllSiteCompany"))})),defered.promise},service.getCompanyAdministrators=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/administrators",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyAdministrators success");const data=response.data.data,adminUsers=[];data.forEach((function(adminUserData){const adminUser={id:adminUserData.id};adminUsers.push(adminUser)})),resolve(adminUsers)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyAdministrators"))}))}))},service.deleteCompany=function(companyId){const defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"companies/"+companyId,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompany success"),defered.resolve()}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompany"))})),defered.promise},service.pushImage=function(pushServiceURL,avatarImg,params){return $q((function(resolve,reject){let resizePromise=null;if(params&&params.nosize)resizePromise=function(){const image=new Image;return image.src=avatarImg,$q.when(image)};else{const width=params&&params.width?params.width:512,height=params&&params.height?params.height:512;resizePromise=function(){return Object(rainbow_sdk_services_core_imageUtils_service__WEBPACK_IMPORTED_MODULE_6__.resizeImage)(avatarImg,width,height)}}resizePromise().then((function(resizedImage){const binaryData=Object(rainbow_sdk_services_core_imageUtils_service__WEBPACK_IMPORTED_MODULE_6__.getBinaryData)(resizedImage);$http({method:"POST",url:pushServiceURL,headers:authService.getPostHeader("image/"+binaryData.type),data:binaryData.data,transformRequest:[]}).then((function(){$log.info("[adminCompanyService] pushImage : success"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"pushImage"))}))}))}))},service.pushLogo=function(companyId,logoImg,shape,params){return $q((function(resolve,reject){const pushServiceURL=service.portalURL+"companies/"+companyId+"/avatar";(angular.isDefined(logoImg)&&null!==logoImg?service.pushImage(pushServiceURL,logoImg,params):$q.resolve()).then((function(){return service.getCompany(companyId)})).then((function(company){return company.avatarShape=shape,service.updateCompany(company)})).then((function(){$log.info("[adminCompanyService] pushLogo success"),resolve()})).catch((function(error){reject(error)}))}))},service.deleteLogo=function(companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/avatar",headers:authService.getRequestHeader()}).then((function(){service.getCompany(companyId).then((function(company){return company.avatarShape="circle",service.updateCompany(company)})).then((function(){$log.info("[adminCompanyService] deleteLogo success"),resolve()})).catch((function(error){reject(error)}))}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteLogo"))}))}))},service.pushBanner=function(companyId,bannerImg,params){return $q((function(resolve,reject){const pushServiceURL=service.portalURL+"companies/"+companyId+"/banner";return service.pushImage(pushServiceURL,bannerImg,params).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),resolve()})).catch((function(error){reject(error)}))}))},service.deleteBanner=function(companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/banner",headers:authService.getRequestHeader()}).then((function(){$rootScope.$broadcast("ON_COMPANY_CHANGE_EVENT",companyId),$log.info("[adminCompanyService] deleteBanner success"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteBanner"))}))}))},service.getCompanySupportBot=function(companyId){return $q((function(resolve,reject){let url=service.portalURL+"bots/rainbow-support";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[companyService] getCompanySupportBot success");const supportBot=Bot.create(response.data.data);resolve(supportBot)})).catch((function(response){const errorMessage="getCompanySupportBot failure "+response.data.errorDetails+" with status "+response.status;$log.error("[companyService] "+errorMessage),reject(new Error(errorMessage))}))}))},service.pushCompanyBotAvatar=function(botId,companyId,avatarImg){return $q((function(resolve,reject){const pushServiceURL=service.portalURL+"bots/"+botId+"/companies/"+companyId+"/avatar";(angular.isDefined(avatarImg)&&null!==avatarImg?service.pushImage(pushServiceURL,avatarImg):$q.resolve()).then((function(){$log.info("[adminCompanyService] pushCompanyBotAvatar success"),resolve()})).catch((function(error){reject(error)}))}))},service.deleteCompanyBotAvatar=function(botId,companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"bots/"+botId+"/companies/"+companyId+"/avatar",headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompanyBotAvatar success"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[botService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanyBotAvatar"))}))}))},service.getCompanyInvitations=function(companyId,page,pageSize){return $q((function(resolve,reject){let url=service.portalURL+"companies/"+companyId+"/join-companies/invitations?format=medium&status=pending declined failed&limit="+pageSize;page&&(url+="&offset="+pageSize*(page-1)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const invitations=[];response.data.data.forEach((function(invitationData){const invitation=_src_models_company_invitation_model__WEBPACK_IMPORTED_MODULE_5__.CompanyInvitation.createFromData(invitationData);invitations.push(invitation)})),$log.info("[adminCompanyService] getCompanyInvitations success (found "+invitations.length+" invitation(s))"),resolve({invitations:invitations,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyInvitations"))}))}))},service.joinCompanyInvitation=function(companyId,email,invitedUserId,customMessage,invitedToBeCompanyAdmin,invitedToBeBpAdmin){const defered=$q.defer(),data={lang:settingsService.getAppliLanguageCodeForServer()};return customMessage&&(data.customMessage=customMessage),invitedUserId?data.invitedUserId=invitedUserId:email&&(data.email=email),invitedToBeCompanyAdmin&&(data.invitedToBeCompanyAdmin=invitedToBeCompanyAdmin),invitedToBeBpAdmin&&(data.invitedToBeBpAdmin=invitedToBeBpAdmin),$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations",headers:authService.getRequestHeader(),data:data}).then((function(){$log.info("[adminCompanyService] joinCompanyInvitation success"),defered.resolve()}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"joinCompanyInvitation"))})),defered.promise},service.cancelJoinCompanyInvitation=function(companyId,invitationId){const defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations/"+invitationId+"/cancel",headers:authService.getRequestHeader()}).then((function(response){const invitation=_src_models_company_invitation_model__WEBPACK_IMPORTED_MODULE_5__.CompanyInvitation.createFromData(response.data.data);$log.info("[adminCompanyService] cancelJoinCompanyInvitation success"),defered.resolve(invitation)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"cancelJoinCompanyInvitation"))})),defered.promise},service.resendJoinCompanyInvitation=function(companyId,invitationId){const defered=$q.defer();return $http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/invitations/"+invitationId+"/re-send",headers:authService.getRequestHeader()}).then((function(response){const invitation=_src_models_company_invitation_model__WEBPACK_IMPORTED_MODULE_5__.CompanyInvitation.createFromData(response.data.data);$log.info("[adminCompanyService] resendJoinCompanyInvitation success"),defered.resolve(invitation)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"resendJoinCompanyInvitation"))})),defered.promise},service.getCompanyJoinRequests=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/join-companies/requests?format=medium&status=pending",headers:authService.getRequestHeader()}).then((function(response){const companyRequests=[];response.data.data.forEach((function(companyRequestData){const companyRequest=CompanyRequest.createFromData(companyRequestData);companyRequests.push(companyRequest)})),$log.info("[adminCompanyService] getCompanyJoinRequests success (found "+response.data.total+" invitation(s))"),resolve({companyRequests:companyRequests,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyJoinRequests"))}))}))},service.getJoinCompanyRequest=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"?status=pending",headers:authService.getRequestHeader()}).then((function(response){const joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] getJoinCompanyRequest success"),resolve(joinCompanyRequest)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getJoinCompanyRequest"))}))}))},service.acceptCompanyJoinRequests=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"/accept",headers:authService.getRequestHeader()}).then((function(response){const joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] acceptCompanyJoinRequests success"),resolve(joinCompanyRequest)}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"acceptCompanyJoinRequests")),reject(error)}))}))},service.declineCompanyJoinRequests=function(companyId,joinCompanyRequestId){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/join-companies/requests/"+joinCompanyRequestId+"/decline",headers:authService.getRequestHeader()}).then((function(response){const joinCompanyRequest=CompanyRequest.createFromData(response.data.data);$log.info("[adminCompanyService] declineCompanyJoinRequests success"),resolve(joinCompanyRequest)}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"declineCompanyJoinRequests")),reject(error)}))}))},service.getOAuthConsentUrl=function(){const lang=settingsService.getAppliLanguage().code;return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/office365/v1.0/consent?callback="+window.location.origin+"/redirectO365.html?provider=o365AD&lang="+lang,headers:authService.getRequestHeader()}).then((function(response){const consentUrl=response.data.url;$log.info("[adminCompanyService] getOAuthConsentUrl success: "+consentUrl),resolve(consentUrl)}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getOAuthConsentUrl")),reject(error)}))}))},service.updateCompanyPhoneNumbersVisibility=function(companyId,allowPhoneNumbersVisibility){return $q((function(resolve,reject){const data={id:companyId,allowPhoneNumbersVisibility:allowPhoneNumbersVisibility};service.updateCompany(data).then((function(updatedCmpany){resolve(updatedCmpany.allowPhoneNumbersVisibility)})).catch((function(error){reject(error)}))}))},service.getCompanyConferenceSettings=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/conferences",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyConferenceSettings success");const data=response.data.data;resolve(data)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyConferenceSettings"))}))}))},service.setCompanyConferenceSettings=function(companyId,confDialOutEnabled){return $q((function(resolve,reject){const conferenceSettingData={confDialOutDisabled:!confDialOutEnabled};$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/conferences",headers:authService.getRequestHeader(),data:conferenceSettingData}).then((function(response){$log.info("[adminCompanyService] setCompanyConferenceSettings success");const data=response.data.data;resolve(data)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"setCompanyConferenceSettings"))}))}))},service.getUserLoginPolicies=function(companyId){return $q((function(resolve){const loginPolicies=[{value:"RAINBOW",name:"Rainbow"}];let defaultPolicy=loginPolicies[0];service.getCompanySingleSignOnServerConfig(companyId).then((function(ssoConfigs){ssoConfigs&&ssoConfigs.length>0&&ssoConfigs.forEach((function(config){const ssoPolicy={value:config.type,name:config.name,allowExternalAuthId:!0};loginPolicies.push(ssoPolicy),config.isDefault&&config.enabled&&(defaultPolicy=ssoPolicy)}))})).catch((function(error){$log.error("[adminCompanyService] Failed to get user login policies - "+companyId+" - "+error.translatedMessage||!1)})).finally((function(){defaultPolicy.isDefault=!0,loginPolicies.push({value:"DEFAULT",label:"defaultLogin"}),resolve(loginPolicies)}))}))},service.getAllAvailableSingleSignOnTypes=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"/settings/sso/types",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getAllAvailableSingleSignOnTypes success"),resolve(response.data.data)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getAllAvailableSingleSignOnTypes"))}))}))},service.getCompanySAMLConfigurationFile=function(companyId){return $q((function(resolve,reject){authService.getCompanySAMLConfiguration(companyId).then((function(data){const blob=new Blob([data],{type:"application/xml"});resolve(blob)})).catch((function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanySAMLConfigurationFile"))}))}))},service.createCompanySingleSignOnServerConfig=function(companyId,singleSignOnType,config){return $q((function(resolve,reject){config.type=singleSignOnType,$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/settings/sso",headers:authService.getRequestHeader(),data:config}).then((function(response){$log.info("[adminCompanyService] createCompanySingleSignOnServerConfig success");const updatedConfig=response.data.data;resolve(updatedConfig)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createCompanySingleSignOnServerConfig"))}))}))},service.deleteCompanySingleSignOnServerConfig=function(companyId,singleSignOnType){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/settings/sso/"+singleSignOnType,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompanySingleSignOnServerConfig success"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanySingleSignOnServerConfig"))}))}))},service.getCompanySingleSignOnServerConfig=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/sso",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanySingleSignOnServerConfig success");const configArray=response.data.data?response.data.data:response.data;resolve(configArray)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanySingleSignOnServerConfig"))}))}))},service.updateCompanySingleSignOnServerConfig=function(companyId,singleSignOnType,config){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/sso/"+singleSignOnType,headers:authService.getRequestHeader(),data:config}).then((function(response){$log.info("[adminCompanyService] updateCompanySingleSignOnConfig success");const updatedConfig=response.data.data;resolve(updatedConfig)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"updateCompanySingleSignOnConfig"))}))}))},service.getCompanySingleSignOnSAMLOptions=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/sso/SAML/shared-options",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanySingleSignOnSAMLOptions success"),resolve(response.data.data)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanySingleSignOnSAMLOptions"))}))}))},service.updateCompanySingleSignOnSAMLOptions=function(companyId,options){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/sso/SAML/shared-options",headers:authService.getRequestHeader(),data:options}).then((function(response){$log.info("[adminCompanyService] updateCompanySingleSignOnSAMLOptions success"),resolve(response.data.data)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"updateCompanySingleSignOnSAMLOptions"))}))}))},service.deleteCompanySingleSignOnSAMLOptions=function(companyId){return $q((function(resolve,reject){$http({method:"DELETE",url:service.portalURL+"companies/"+companyId+"/settings/sso/SAML/shared-options",headers:authService.getRequestHeader()}).then((function(){$log.info("[adminCompanyService] deleteCompanySingleSignOnSAMLOptions success"),resolve()}),(function(response){const error=errorHelperService.handleError(response);404===error.status?(resolve(),$log.info("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanySingleSignOnSAMLOptions"))):(reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"deleteCompanySingleSignOnSAMLOptions")))}))}))},service.getCompanyBpBusinessTypes=function(){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/bpbusinesstypes",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getCompanyBpBusinessTypes success");const config=response.data.data;resolve(config)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getCompanyBpBusinessTypes"))}))}))},service.getVoIPSettingsForCompany=function(companyId){return $q((function(resolve,reject){$http({method:"GET",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs",headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminCompanyService] getVoIPSettingsForCompany success");const settings=response.data.data;resolve(settings)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"getVoIPSettingsForCompany"))}))}))},service.createVoIPSettingsForCompany=function(companyId,settings){return $q((function(resolve,reject){$http({method:"POST",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs",headers:authService.getRequestHeader(),data:settings}).then((function(){resolve()}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createVoIPSettingsForCompany")),reject(error)}))}))},service.updateVoIPSettingsForCompany=function(companyId,settingsId,settings){return $q((function(resolve,reject){$http({method:"PUT",url:service.portalURL+"companies/"+companyId+"/settings/webrtcs/"+settingsId,headers:authService.getRequestHeader(),data:settings}).then((function(){resolve()}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminCompanyService] "+errorHelperService.getErrorFullMessage(response,"createVoIPSettingsForCompany")),reject(error)}))}))}}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var rainbow_sdk_services_core_auth_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(8),rainbow_sdk_services_core_userInfo_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(58),rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(6),rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(24),_models_admin_organisation__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(133);angular.module("rainbow").service("adminUserService",["$q","$log","$http","errorHelperService","User","Site","PhoneNumber",function($q,$log,$http,errorHelperService,User,Site,PhoneNumber){const service=this,authService=rainbow_sdk_services_core_auth_service__WEBPACK_IMPORTED_MODULE_0__.AuthService.getInstance(),userInfoService=rainbow_sdk_services_core_userInfo_service__WEBPACK_IMPORTED_MODULE_1__.UserInfoService.getInstance(),contactService=rainbow_sdk_services_core_contact_service__WEBPACK_IMPORTED_MODULE_2__.ContactService.getInstance();service.start=function(){return $log.info("[adminUserService] === STARTING ==="),service.portalURL=config.restServerUrl+"/api/rainbow/admin/v1.0/",$log.info("[adminUserService] === STARTED ==="),$q.when()},service.stop=function(){return $log.info("[adminUserService] === STOPPING ==="),$log.info("[adminUserService] === STOPPED ==="),$q.when()},service.getUsersByEmail=function(source,email){return $q((function(resolve,reject){let url=service.portalURL+"users?format=full";source&&source.constructor&&source.constructor.name===_models_admin_organisation__WEBPACK_IMPORTED_MODULE_4__.Organisation.name&&(url+="&organisationId="+source.id),source&&source.constructor&&source.constructor.name===rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_3__.Company.name&&(url+="&companyId="+source.id),source&&source.constructor&&source.constructor.name===Site.name&&(url+="&siteId="+source.id),email&&(url+="&email="+encodeURIComponent(email)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const data=response.data.data;$log.info("[adminUserService] getUsersByEmail success (find "+response.data.total+" user(s))");const users=[];data.forEach((function(userData){const user=User.createFromData(userData);users.push(user)})),resolve({users:users,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUsersByEmail"))}))}))},service.getUsersBasicSearch=function(source,page,pageSize,searchPattern){return service.getUsersAdvancedSearch(source,page,pageSize,searchPattern)},service.getUsersAdvancedSearch=function(source,page,pageSize,searchPattern,searchOptions,noDefaultValues){return $q((function(resolve,reject){const url=new URL(service.portalURL+"users");"string"==typeof source&&url.searchParams.set("companyId",source),source&&source.constructor&&source.constructor.name===rainbow_sdk_models_company_model__WEBPACK_IMPORTED_MODULE_3__.Company.name&&url.searchParams.set("companyId",source.id),source&&source.constructor&&source.constructor.name===_models_admin_organisation__WEBPACK_IMPORTED_MODULE_4__.Organisation.name&&url.searchParams.set("organisationId",source.id),source&&source.constructor&&source.constructor.name===Site.name&&url.searchParams.set("siteId",source.id),url.searchParams.set("format","full"),url.searchParams.set("limit",String(pageSize)),page&&url.searchParams.set("offset",String(pageSize*(page-1))),searchOptions=searchOptions||{},(searchPattern=searchPattern||"")&&(searchOptions.searchByInternalNumber?url.searchParams.set("phoneNumber",searchPattern):(url.searchParams.set("displayName",searchPattern),url.searchParams.set("useEmails",!0))),searchOptions.filterByTag&&url.searchParams.set("tags",searchOptions.filterByTag),searchOptions.filterByProfile&&url.searchParams.set("selectedAppCustomisationTemplate",searchOptions.filterByProfile),searchOptions.filterByDepartment&&url.searchParams.set("departments",searchOptions.filterByDepartment),searchOptions.isAdministrator&&(url.searchParams.append("roles",User.RoleValues.ADMIN),url.searchParams.append("roles",User.RoleValues.BP_ADMIN_OPERATIONS),url.searchParams.append("roles",User.RoleValues.BP_ADMIN_FINANCE),url.searchParams.append("roles",User.RoleValues.BUSINESS_ADMIN),url.searchParams.append("roles",User.RoleValues.CUSTOMER_SUCCESS_ADMIN),url.searchParams.append("roles",User.RoleValues.SUPERADMIN)),!0!==searchOptions.isActivated&&!1!==searchOptions.isActivated||url.searchParams.set("isActivated",String(searchOptions.isActivated)),!0!==searchOptions.isTerminated&&!1!==searchOptions.isTerminated||url.searchParams.set("isTerminated",String(searchOptions.isTerminated)),searchOptions.sortField&&url.searchParams.set("sortField",searchOptions.sortField),$http({method:"GET",url:url.toString(),headers:authService.getRequestHeader()}).then((function(response){const data=response.data.data;$log.info("[adminUserService] getUsers success (find "+response.data.total+" user(s))");const users=[];data.forEach((function(userData){const user=User.createFromData(userData,noDefaultValues);users.push(user)})),resolve({users:users,limit:response.data.limit,offset:response.data.offset,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUsers"))}))}))},service.getUsers=function(source,page,pageSize,searchPattern,isTerminated,isAdministrator,noDefaultValues,filterByTag,isActivated,filterByProfile,filterByDepartment,searchByInternalNumber){const searchOptions={searchByInternalNumber:searchByInternalNumber,filterByTag:filterByTag,filterByProfile:filterByProfile,filterByDepartment:filterByDepartment,isAdministrator:isAdministrator,isActivated:isActivated,isTerminated:isTerminated};return service.getUsersAdvancedSearch(source,page,pageSize,searchPattern,searchOptions,noDefaultValues)},service.searchUsers=function(source,page,pageSize,searchPattern){return $q((function(resolve,reject){let url=config.restServerUrl+"/api/rainbow/search/v1.0/users?limit="+pageSize;source&&(url+="&companyId="+source.id),page&&(url+="&offset="+pageSize*(page-1)),searchPattern&&(url+="&displayName="+encodeURIComponent(searchPattern)),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const data=response.data.data;$log.info("[adminUserService] searchUsers success (find "+response.data.total+" user(s))");const users=[];data.forEach((function(userData){const user=User.createFromData(userData);users.push(user)})),resolve({users:users,total:response.data.total})}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"searchUsers"))}))}))},service.getUser=function(userId){const defered=$q.defer();return $http({method:"GET",url:service.portalURL+"users/"+userId,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminUserService] getUser success");const data=response.data.data,user=User.createFromData(data);defered.resolve(user)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUser"))})),defered.promise},service.createUser=function(user,options){const userData=User.prune(user,contactService.userContact);let url=service.portalURL+"users";options&&void 0!==options.sendInvitationEmail&&(url+="?sendInvitationEmail="+options.sendInvitationEmail);const defered=$q.defer();return $http({method:"POST",url:url,headers:authService.getRequestHeader(),data:userData}).then((function(response){const newuser=User.createFromData(response.data.data);$log.info("[adminUserService] createUser success"),defered.resolve(newuser)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"createUser"))})),defered.promise},service.deleteUser=function(user){const defered=$q.defer();return $http({method:"DELETE",url:service.portalURL+"users/"+user.id,headers:authService.getRequestHeader()}).then((function(){$log.info("[adminUserService] deleteUser success"),defered.resolve()}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"deleteUser"))})),defered.promise},service.updateUser=function(user){const userData=User.prune(user,contactService.userContact),defered=$q.defer();return $http({method:"PUT",url:service.portalURL+"users/"+user.id,headers:authService.getRequestHeader(),data:userData}).then((function(response){$log.info("[adminUserService] updateUser success");const updateduser=User.createFromData(response.data.data);defered.resolve(updateduser)}),(function(response){const error=errorHelperService.handleError(response);defered.reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"updateUser"))})),defered.promise},service.getUserAvatar=function(user){const color=userInfoService.computeUserColor(user.firstName+" "+user.lastName).color;user.image=userInfoService.getAvatarImage(user.id,user.initials,color,50,user.lastAvatarUpdateDate)},service.expandTelephonyInfo=function(user){const result={};if(user.phoneNumbers){const phoneProNumbers=[];user.phoneNumbers.forEach((function(phoneNumber){const number=phoneNumber.number,numberCan=phoneNumber.numberE164,deviceType=phoneNumber.deviceType;switch(phoneNumber.type){case"work":if("landline"===deviceType){const phoneProNumber=PhoneNumber.createFromData(phoneNumber);phoneProNumbers.push(phoneProNumber),phoneNumber.isCloudPbxDDI||phoneNumber.isOxoPbxDDI?(result.phonePro=phoneNumber.number,result.phoneProCan=phoneNumber.numberE164,result.phoneProDdiNumber=phoneProNumber):result.phoneProNumber&&result.phoneProNumber.systemId||(result.phoneProDdiNumber||(result.phonePro=number,result.phoneProCan=numberCan),result.phoneProExt=phoneNumber.shortNumber,result.phoneProIsMonitored=phoneNumber.isMonitored,result.phoneProNumber=phoneProNumber)}"mobile"===deviceType&&(result.mobilePro=number,result.mobileProCan=numberCan);break;case"home":"landline"===deviceType&&(result.phonePerso=number,result.phonePersoCan=numberCan),"mobile"===deviceType&&(result.mobilePerso=number,result.mobilePersoCan=numberCan);break;case"rainbow":result.rainbowPhoneNumber=number}})),result.alternativePhoneProNumbers=phoneProNumbers.filter((function(phoneProNumber){return!phoneProNumber.systemId&&!phoneProNumber.isFromSystem&&phoneProNumber.id!==result.phoneProNumber.id}))}return result},service.getAllUsers=function(source,noDefaultValues){return $q((function(resolve,reject){let result;service.getUsersAdvancedSearch(source,1,1e3,void 0,void 0,noDefaultValues).then((function(response){if(result=response,response.total>response.limit){const totalPages=Math.ceil(response.total/1e3);let pages=Array(...Array(totalPages-1));pages=pages.map((function(__unused,index){return index+2}));const chunks=[];for(;pages.length>0;)chunks.push(pages.splice(0,5));return chunks.reduce((function(promiseChain,requests){return promiseChain.then((function(){const promisesArray=requests.map((function(page){return service.getUsersAdvancedSearch(source,page,1e3,void 0,void 0,noDefaultValues).then((function(data){result.users=result.users.concat(data.users),result.limit+=data.limit}))}));return $q.all(promisesArray)}))}),$q.resolve())}return $q.resolve()})).then((function(){resolve(result)})).catch((function(error){reject(error)}))}))},service.getUserTags=function(companyId){return $q((function(resolve,reject){let url=service.portalURL+"users/tags";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const tags=response.data.data.tags||[];$log.info("[adminUserService] getUserTags success (find "+tags.length+"tags(s))"),resolve(tags)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserTags"))}))}))},service.getTagsStats=function(companyId){return $q((function(resolve,reject){let url=service.portalURL+"users/tags/stats";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){const tagsStats=response.data.data.stats||[];$log.info("[adminUserService] getTagsStats success (find "+tagsStats.length+"tags(s))"),resolve(tagsStats)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getTagsStats"))}))}))},service.renameTag=function(tag,newTagName,companyId){return $q((function(resolve,reject){let url=service.portalURL+"users/tags?tag="+encodeURIComponent(tag);companyId&&(url+="&companyId="+companyId),$http({method:"PUT",url:url,headers:authService.getRequestHeader(),data:{newTagName:newTagName}}).then((function(response){$log.info("[adminUserService] renameTag success => old tag: "+tag+" => new tag: "+newTagName+": found "+response.data.data.found+" occurence(s)"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"renameTag"))}))}))},service.deleteTag=function(tag,companyId){return $q((function(resolve,reject){let url=service.portalURL+"users/tags?tag="+encodeURIComponent(tag);companyId&&(url+="&companyId="+companyId),$http({method:"DELETE",url:url,headers:authService.getRequestHeader()}).then((function(response){$log.info("[adminUserService] deleteTag success (tag "+tag+": found "+response.data.data.found+" occurence(s)"),resolve()}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"deleteTag"))}))}))},service.getUserDepartments=function(companyId){return $q((function(resolve,reject){let url=service.portalURL+"users/departments";companyId&&(url+="?companyId="+companyId),$http({method:"GET",url:url,headers:authService.getRequestHeader()}).then((function(response){let departments=response.data.data.departments||[];departments=departments.filter((function(department){return Boolean(department)})),$log.info("[adminUserService] getUserDepartments success (find "+departments.length+"department(s))"),resolve(departments)}),(function(response){const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserDepartments"))}))}))},service.getUserProfilesFeatures=function(userId){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/admin/v1.0/users/"+userId+"/profiles/features",headers:authService.getRequestHeader()}).then((function(response){const features={};response.data.data.forEach((function(featureData){$log.debug("[adminUserService] getUserProfilesFeatures === response ==="+JSON.stringify(featureData)),featureData.hasOwnProperty("featureUniqueRef")&&(features[featureData.featureUniqueRef]=featureData)})),resolve(features)}),(function(response){if(404===response.status)$log.debug("[adminUserService] getUserProfilesFeatures : features found for user: "+userId),resolve();else{const error=errorHelperService.handleError(response);reject(error),$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserProfilesFeatures"))}}))}))},service.getUserPresenceInformation=function(userId){return $q((function(resolve,reject){$http({method:"GET",url:config.restServerUrl+"/api/rainbow/admin/v1.0/users/"+userId+"/presences",headers:authService.getRequestHeader()}).then((function(response){$log.debug("[adminUserService] getUserPresenceInformation for user Id "+userId+" === response === "+JSON.stringify(response.data.data));const resources={};response.data.data.jid_im.forEach((function(presence){resources[presence.resource]={},resources[presence.resource].show=presence.show?presence.show:"online",resources[presence.resource].status=presence.status?presence.status:"",resources[presence.resource].stamp=presence.date,resources[presence.resource].type="jid_im"})),response.data.data.jid_tel.forEach((function(presence){"calendar"!==presence.resource&&(resources[presence.resource]={},resources[presence.resource].show=presence.show?presence.show:"online",resources[presence.resource].stamp=presence.date,resources[presence.resource].type="phone")}));const result=service.calculatePresenceFromUserResources(resources);resolve(result)}),(function(response){const error=errorHelperService.handleError(response);$log.error("[adminUserService] "+errorHelperService.getErrorFullMessage(response,"getUserPresenceInformation")),reject(error)}))}))},service.calculatePresenceFromUserResources=function(resources){let on_the_phone=!1,manual_invisible=!1,manual_dnd=!1,manual_away=!1,in_presentation_mode=!1,in_webrtc_mode=!1,webrtc_reason="",is_online=!1,is_online_mobile=!1,auto_away=!1,presence="offline",status="";for(const key in resources)if(resources.hasOwnProperty(key)){const resource=resources[key];"phone"!==resource.type?"xa"===resource.show&&""===resource.status?manual_invisible=!0:"dnd"===resource.show&&""===resource.status?manual_dnd=!0:"xa"===resource.show&&"away"===resource.status?manual_away=!0:"dnd"===resource.show&&"presentation"===resource.status?in_presentation_mode=!0:"dnd"===resource.show&&resource.status?(in_webrtc_mode=!0,webrtc_reason=resource.status):""!==resource.show&&"online"!==resource.show||""!==resource.status&&"mode=auto"!==resource.status?"away"===resource.show&&""===resource.status&&(auto_away=!0):-1!==key.indexOf("mobile_")?is_online_mobile=!0:is_online=!0:on_the_phone="EVT_SERVICE_INITIATED"===resource.status||"EVT_ESTABLISHED"===resource.status}return on_the_phone?(presence="busy",status="phone"):manual_invisible?(presence="xa",status=""):manual_dnd?(presence="dnd",status=""):manual_away?(presence="away",status=""):in_presentation_mode?(presence="dnd",status="presentation"):in_webrtc_mode?(presence="busy",status=webrtc_reason):is_online?(presence="online",status=""):is_online_mobile?(presence="online-mobile",status=""):auto_away&&(presence="away",status=""),{presence:presence,status:status}}}])},function(module,exports){angular.module("rainbow").filter("emojione",(function(){return function(input){return input}})),angular.module("rainbow").filter("emojiUnicodeToShort",(function(){return function(input){return input}})),angular.module("rainbow").filter("emojiShortToUnicode",(function(){return function(input){return input}}))},function(module,exports){angular.module("rainbow").service("centralizedService",(function(){}))},function(module,exports){angular.module("rainbow").factory("TransfertPromiseQueue",["$log","$q",function($log,$q){function TransfertPromiseQueue(){const that=this;that.fileQueue=[],that.clearContext=function(){that.currentId=null,that.currentQueue=[],that.promiseCompletion=void 0,that.promiseReject=void 0,that.initialQueueSize=0,that.promisesDone=0,that.chunkErrorCounter=0,that.currentPromise=void 0},that.clearContext(),that.addPromiseArray=function(id,promiseArray,promiseCompletion,promiseReject){$log.debug("[TransfertPromiseQueue] adding promiseArray");const promiseInfos={};return promiseInfos.id=id,promiseInfos.promiseArray=promiseArray,promiseInfos.promiseCompletion=promiseCompletion,promiseInfos.promiseReject=promiseReject,0!==that.fileQueue.length||that.currentPromise?(that.fileQueue.push(promiseInfos),$log.debug("[TransfertPromiseQueue] adding PromiseArray in FileQueue: "+that.fileQueue.length)):($log.debug("[TransfertPromiseQueue] configuring file to transfert: "+promiseInfos.promiseArray.length),that.fileQueue.push(promiseInfos),that.popFileQueue()),$log.debug("[TransfertPromiseQueue] adding promise on FileQueue: "+that.fileQueue.length),$q},that.popFileQueue=function(){if(that.fileQueue.length>0){$log.debug("[TransfertPromiseQueue] go to next file");const promiseInfos=that.fileQueue.shift();that.currentId=promiseInfos.id,that.currentQueue=promiseInfos.promiseArray,that.promiseCompletion=promiseInfos.promiseCompletion,that.promiseReject=promiseInfos.promiseReject,that.initialQueueSize=that.currentQueue.length,that.promisesDone=0,that.chunkErrorCounter=0,that.currentPromise=[];for(let counter=0;counter<10&&that.currentQueue.length>0;counter++)that.currentPromise.push(that.currentQueue.shift()());that.execute()}else $log.debug("[TransfertPromiseQueue] no more file to transfert"),that.clearContext()},that.execute=function(){$log.debug("[TransfertPromiseQueue] execute"),that.currentPromise?$q.all(that.currentPromise).then((function(){if($log.debug("[TransfertPromiseQueue] promise success go to next one"),that.chunkErrorCounter=0,0===that.currentQueue.length)that.promiseCompletion&&that.promiseCompletion(),that.popFileQueue();else{that.currentPromise=[];for(let counter=0;counter<10&&that.currentQueue.length>0;counter++)that.currentPromise.push(that.currentQueue.shift()());that.execute()}})).catch((function(error){const errorMessage=error&&error.message?error.message:"Unknown error";if($log.error("[TransfertPromiseQueue] failure executing promise -- "+errorMessage),that.chunkErrorCounter++,error&&error.errorDetailsCode>=500&&that.chunkErrorCounter<=3&&that.currentPromise){const oldPromises=that.currentPromise;that.currentPromise=[],oldPromises.forEach((function(promise){that.currentPromise.push(promise())})),that.execute()}else $log.error("[TransfertPromiseQueue] 3 chunk failed - ABORT File Upload"),that.promiseReject(error),that.popFileQueue()})):($log.debug("[TransfertPromiseQueue] no promise to perform"),that.currentPromise=void 0)},that.isTransferInProgress=function(){return $log.debug("[TransfertPromiseQueue] >isTransferInProgress: "+that.fileQueue.length+"/"+that.currentQueue.length),that.fileQueue.length>0||that.currentQueue.length>0||that.currentPromise},that.cancelAllTransfers=function(){$log.debug("[TransfertPromiseQueue] cancelAllTransfers"),that.fileQueue=[],that.currentQueue=[]},that.cancelCurrentFiletransfer=function(id){if($log.debug("[TransfertPromiseQueue] cancelCurrentFiletransfer"),that.currentId===id)$log.debug("[TransfertPromiseQueue] cancelling current promise"),that.popFileQueue();else{const promiseFound=that.fileQueue.find((function(currentPromiseInfos){return currentPromiseInfos.id===id}));if(promiseFound){const promisePos=that.fileQueue.indexOf(promiseFound);$log.debug("[TransfertPromiseQueue] promise to remove at position="+promisePos),that.fileQueue.splice(promisePos,1)}}}}return TransfertPromiseQueue.create=function(){return $log.debug("[TransfertPromiseQueue] >create"),new TransfertPromiseQueue},TransfertPromiseQueue}])},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),window.sdk=angular.module("sdk",["pascalprecht.translate","ngSanitize","ngFileSaver","rainbow","rainbowAdmin"],(function(){})),__webpack_exports__.default={sdk:sdk}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _sdkConfig__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(40);sdk.remoteConsole={debug:!1,log:!1,info:!1,warn:!1,error:!1},sdk.hasVerboseLog=!1,sdk.hasBeenLaunchedFromConfig=!1,sdk.key={appID:"",appSecret:"",host:"openrainbow.com"},sdk.config(["consoleLogsProvider","$provide","$httpProvider","$translateProvider",function(consoleLogsProvider,$provide,$httpProvider,$translateProvider){const utc=function(now){return now.toDateString()+" "+("0"+now.getHours()).slice(-2)+":"+("0"+now.getMinutes()).slice(-2)+":"+("0"+now.getSeconds()).slice(-2)};$provide.decorator("$log",["$delegate",function($delegate){const origDebug=$delegate.debug;$delegate.debug=function(){const args=[].slice.call(arguments);sdk.remoteConsole.debug&&console.re.debug(args[0]),_sdkConfig__WEBPACK_IMPORTED_MODULE_0__.sdkConfig.verboseLog&&origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"debug : "+args+"\n")};const origLog=$delegate.log;$delegate.log=function(){const args=[].slice.call(arguments);sdk.remoteConsole.log&&console.re.log(args[0]),_sdkConfig__WEBPACK_IMPORTED_MODULE_0__.sdkConfig.verboseLog&&origLog.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"log : "+args+"\n")};const origInfo=$delegate.info;$delegate.info=function(){const args=[].slice.call(arguments);sdk.remoteConsole.info&&console.re.info(args[0]),_sdkConfig__WEBPACK_IMPORTED_MODULE_0__.sdkConfig.verboseLog&&origInfo.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"info : "+args+"\n")};const origWarn=$delegate.warn;$delegate.warn=function(){const args=[].slice.call(arguments);sdk.remoteConsole.warn&&console.re.warn(args[0]),origWarn.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"warn : "+args+"\n")};const origError=$delegate.error;return $delegate.error=function(){const args=[].slice.call(arguments);sdk.remoteConsole.error&&console.re.error(args[0]),origError.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+"error : "+args+"\n")},$delegate.webrtc=function(){const args=[].slice.call(arguments),logs="rtcweb : "+args[0];args[0]="%c "+utc(new Date)+" | RTCWEB | "+args[0],args[args.length]="color:green",sdk.remoteConsole.log&&console.re.log(args[0]),origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+logs+"\n")},$delegate.sdk=function(){const args=[].slice.call(arguments),logs="RBW-SDK : "+args[0];args[0]="%c "+utc(new Date)+" | RBW-SDK | "+args[0],args[args.length]="color:green",sdk.remoteConsole.log&&console.re.log(args[0]),origDebug.apply(null,args),consoleLogsProvider.setLogs(["["+utc(new Date)+"]"]+logs+"\n")},$delegate}]),$httpProvider.defaults.useXDomain=!0,$translateProvider.useSanitizeValueStrategy(null)}]),sdk.run([function(){}]),sdk.provider("consoleLogs",[function(){this.logsBuffer=[],this.logsMaxLength=2e6,this.$get=function(){const logsBuffer=this.logsBuffer;return{getLogs:function(){return logsBuffer}}},this.cleanBuffer=function(){this.logsBuffer.length>this.logsMaxLength&&(this.logsBuffer=this.logsBuffer.slice(-this.logsMaxLength))},this.setLogs=function(logs){1e3===this.logsBuffer&&this.logsBuffer.shift(),this.logsBuffer.push(logs)}}])},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rxjs_1=__webpack_require__(7);class ChannelMessage{constructor(){this.id=null,this.type=null,this.message=null,this.from=null,this.images=null,this.attachments=null,this.contact=null,this.video=null,this.isNew=!0,this.isModified=!1,this.rxSubject=new rxjs_1.Subject}static createFromData(channel,data){const message=new ChannelMessage;return message.isNew=data.new,message.isModified=data.modified,message.id=data.id,message.type=data.type,message.from=data.from,message.timestamp=data.timestamp,message.timestampDisplay=new Date(data.timestamp),message.channel=channel,message.video=data.video,data.entry.message&&(message.message=data.entry.message.replace(/<a/gi,"<a target='_blank' rel='noopener noreferrer' ")),data.entry.video&&(message.video=data.entry.video),data.entry.images&&"null"!==data.entry.images&&void 0!==data.entry.images&&(data.entry.images instanceof Array?data.entry.images.length>0&&(message.images=data.entry.images):message.images=[data.entry.images]),data.entry.attachments&&"null"!==data.entry.attachments&&void 0!==data.entry.attachments&&(data.entry.attachments instanceof Array?data.entry.attachments.length>0&&(message.attachments=data.entry.attachments):message.attachments=[data.entry.attachments]),message.myLike=data.my_appreciation?data.my_appreciation:"none",message.likeCounters=data.appreciations?data.appreciations:{like:0,fantastic:0,applause:0,doubt:0,happy:0},message}static updateFromData(channel,currentMessage,newMessage){const message=new ChannelMessage;return Object.assign(message,currentMessage),message.id=newMessage.id,message.isModified=newMessage.modified,message.type=newMessage.type,message.from=newMessage.from,message.timestamp=newMessage.timestamp,message.timestampDisplay=new Date(newMessage.timestamp),message.channel=channel,message.video=null,message.images=null,message.attachments=null,message.message=null,newMessage.entry.type&&(message.type=newMessage.entry.type),newMessage.entry.message&&(message.message=newMessage.entry.message.replace(/<a/gi,"<a target='_blank' rel='noopener noreferrer' ")),newMessage.entry.video&&(message.video=newMessage.entry.video),newMessage.entry.images&&"null"!==newMessage.entry.images&&void 0!==newMessage.entry.images&&(newMessage.entry.images instanceof Array?newMessage.entry.images.length>0&&(message.images=newMessage.entry.images):message.images=[newMessage.entry.images]),newMessage.entry.attachments&&"null"!==newMessage.entry.attachments&&void 0!==newMessage.entry.attachments&&(newMessage.entry.attachments instanceof Array?newMessage.entry.attachments.length>0&&(message.attachments=newMessage.entry.attachments):message.attachments=[newMessage.entry.attachments]),message}subscribe(handler){return this.rxSubject.subscribe(handler)}}exports.ChannelMessage=ChannelMessage},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ConferenceRecordingFile=class{};exports.ConferenceRecord=class{}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.DialInPhoneNumber=class{constructor(){this.location="",this.locationcode="",this.number="",this.numberE164="",this.numberType="",this.locationAlpha2Code="",this.prettyDisplayName=""}};class DialInPhoneNumberList{constructor(country,language,shortList,phoneNumberList){this.country="",this.language="",this.shortList=[],this.phoneNumberList=[],this.country=country,this.language=language,this.shortList=shortList,this.phoneNumberList=phoneNumberList}static createPhoneNumberListFromData(data){return new DialInPhoneNumberList(data.country,data.language,data.shortList,data.phoneNumberList)}}exports.DialInPhoneNumberList=DialInPhoneNumberList},function(module,exports,__webpack_require__){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}Object.defineProperty(exports,"__esModule",{value:!0}),__export(__webpack_require__(141)),__export(__webpack_require__(156)),__export(__webpack_require__(76)),__export(__webpack_require__(167)),__export(__webpack_require__(106)),__export(__webpack_require__(476)),__export(__webpack_require__(323))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const themeColor_1=__webpack_require__(323),rxjs_1=__webpack_require__(7),main_service_1=__webpack_require__(15);class Theme{constructor(data){if(this.lastAvatarUpdateDate=null,this.website=null,this.isThemeSelectedByUser=!1,this.isThemeSelectedByAdmin=!1,this.type="white",this.ownedByCompany="",this._logoSrc=null,this.logoSrcSubject=new rxjs_1.BehaviorSubject(this._logoSrc),this._avatarShape="square",this.avatarShapeSubject=new rxjs_1.BehaviorSubject(this._avatarShape),this.id=data.id,this.name=data.name,this.displayName=data.displayName?data.displayName:data.name,this.logoSrc=data.logoSrc,this.avatarShape=data.avatarShape,this.website=data.website,this.cssClassName=data.cssClassName,this.visibility=data.visibility,this.type=data.type,this.isRainbowDefaultTheme=data.isRainbowDefaultTheme,this.isWhiteLabelTheme=data.isWhiteLabelTheme,this.lastAvatarUpdateDate=data.lastAvatarUpdateDate,this.isThemeSelectedByUser=data.isThemeSelectedByUser,this.isThemeSelectedByAdmin=data.isThemeSelectedByAdmin,this.isColorsAvailable=!1,this.ownedByCompany=data.ownedByCompany,this.themeColors=[],this.id&&this.lastAvatarUpdateDate){let imgSrc=config.webservices.protocol+"://"+config.webservices.currentServer+"/api/theme-avatar/"+this.id+"?size=256";imgSrc+="&update="+main_service_1.MainService.MD5(this.lastAvatarUpdateDate),this.logoSrc=imgSrc}}static create(id,name,displayName,visibility,isRainbowDefaultTheme){const cssClassName="theme--"+name.toLowerCase().replace(/\s/g,"");return new Theme({id:id,name:name,cssClassName:cssClassName,displayName:displayName,visibility:visibility,isRainbowDefaultTheme:isRainbowDefaultTheme})}static createStaticWebTheme(name,cssClassName,displayName,visibility,isRainbowDefaultTheme){return new Theme({id:this.generateUUID24Char(name),name:name,cssClassName:cssClassName,displayName:displayName,visibility:visibility,isRainbowDefaultTheme:isRainbowDefaultTheme})}static generateUUID24Char(baseString){return main_service_1.MainService.MD5(baseString).slice(0,24)}static duplicateTheme(theme){const dupTheme=new Theme(theme);return this.duplicateThemeColorsFromTheme(dupTheme,theme),dupTheme}static duplicateThemeColorsFromTheme(theme,origTheme){origTheme.themeColors.forEach(themeColor=>{theme.themeColors.push(themeColor_1.ThemeColor.createFromThemeColor(themeColor))})}static createNewThemeWithConfigurableThemeColors(theme,isWhiteLabel=!1){const newTheme=new Theme({id:null,name:"",cssClassName:null,displayName:"",visibility:"PRIVATE",isRainbowDefaultTheme:!1,isWhiteLabelTheme:isWhiteLabel,type:theme.type});return theme.themeColors.forEach(themeColor=>{themeColor.configurable&&newTheme.themeColors.push(themeColor_1.ThemeColor.createFromThemeColor(themeColor))}),newTheme}compareTo(theme){return this.logoSrc===theme.logoSrc&&this.compareToWithoutLogo(theme)}compareToWithoutLogo(theme){if(this.id!==theme.id)return!1;if(this.name!==theme.name)return!1;if(this.avatarShape!==theme.avatarShape)return!1;if(this.website!==theme.website)return!1;if(this.cssClassName!==theme.cssClassName)return!1;if(this.isRainbowDefaultTheme!==theme.isRainbowDefaultTheme)return!1;if(this.isWhiteLabelTheme!==theme.isWhiteLabelTheme)return!1;if(this.visibility!==theme.visibility)return!1;if(this.isColorsAvailable!==theme.isColorsAvailable)return!1;if(!theme.themeColors)return!1;if(this.themeColors.length!==theme.themeColors.length)return!1;let isColorEquals=!0;return this.themeColors.some(themeColor=>{const colorFound=theme.getThemeColorOfKey(themeColor.cssVariableName);return colorFound?colorFound.cssValue!==themeColor.cssValue&&(isColorEquals=!1,!0):(isColorEquals=!1,!0)}),isColorEquals}getThemeColorOfKey(cssKey){let themeColorFound=null;return this.themeColors.some(themeColor=>cssKey===themeColor.cssVariableName&&(themeColorFound=themeColor,!0)),themeColorFound}static createFromData(data){return new Theme(data)}get logoSrc(){return this._logoSrc}set logoSrc(value){this._logoSrc=value,this.logoSrcSubject.next(this._logoSrc)}get avatarShape(){return this._avatarShape}set avatarShape(value){this._avatarShape=value,this.avatarShapeSubject.next(this._avatarShape)}isPublic(){return"PUBLIC"===this.visibility.toUpperCase()}isPrivate(){return"PRIVATE"===this.visibility.toUpperCase()}isOwnedBy(companyId){return this.ownedByCompany===companyId}isWhiteLabel(){return Boolean(this.isWhiteLabelTheme)}isLogoAvailable(){return this.id&&this.lastAvatarUpdateDate}isWhiteType(){return this.type&&"light"===this.type.toLowerCase()}}Theme.THEME_NAMESPACE="1b671a64-40d5-491e-99b0-da01ff1f3341",exports.Theme=Theme},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const webConferenceV2_service_1=__webpack_require__(97),webrtcP2P_service_1=__webpack_require__(35),contact_service_1=__webpack_require__(6),event_service_1=__webpack_require__(11),logger_service_1=__webpack_require__(4),webrtcConfigAndUtils_1=__webpack_require__(44);class PresenceHelperService{constructor(){this.webConferenceServiceV2=webConferenceV2_service_1.WebConferenceServiceV2.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.webrtcP2PService=webrtcP2P_service_1.WebrtcP2PService.getInstance(),this.webrtcConfigAndUtils=webrtcConfigAndUtils_1.WebrtcConfigAndUtils.getInstance(),this.subscriptions=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.presenceHelperService||(win.rainbow.presenceHelperService=new PresenceHelperService),win.rainbow.presenceHelperService}async start(){this.subscriptions.push(this.eventService.subscribe("CHECK_AND_RESET_BUSY_STATE",()=>{this.resetBusyStateIfNeeded()})),this.subscriptions.push(this.eventService.subscribe("RESET_PRESENCE_AFTER_RECONNECT",()=>{this.resendPresenceAfterReconnect()})),this.webinarService=window&&window.rainbow&&window.rainbow.webinarService?window.rainbow.webinarService:null}stop(){this.subscriptions.forEach(listener=>{listener()}),this.subscriptions=[]}resendPresenceAfterReconnect(){setTimeout(()=>{this.logger.debug("[PresenceHelperService] resendPresenceAfterReconnect");this.isUserCurrentlyInCall()?this.contactService.setBusyState("dnd","audio"):this.contactService.sendPresenceFromConfiguration(!0)},100)}resetBusyStateIfNeeded(){setTimeout(()=>{this.logger.debug("[PresenceHelperService] resetBusyStateIfNeeded");this.isUserCurrentlyInCall()||(this.contactService.resetBusyState(),document.getElementById("globalAudioTag")&&document.getElementById("globalAudioTag").srcObject&&!document.getElementById("globalAudioTag").srcObject.active&&this.webrtcConfigAndUtils.RTC.clearMediaStream([document.getElementById("globalAudioTag")]))},100)}isUserCurrentlyInCall(){const isInVideoCall=this.webrtcP2PService.isUserContactInCall(),isInConferenceV2Call=this.webConferenceServiceV2.hasActiveWebConferenceSession(),isInWebinar=this.webinarService&&this.webinarService.conference&&this.webinarService.conference.hasActiveWebinarSession();return!!(isInConferenceV2Call||isInVideoCall||isInWebinar)&&(this.logger.debug(`[PresenceHelperService] user is currently in a call -- ${isInVideoCall} / ${isInConferenceV2Call} / ${isInWebinar}`),!0)}}exports.PresenceHelperService=PresenceHelperService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var EBMLDecoder_1=__webpack_require__(479);exports.Decoder=EBMLDecoder_1.default;var EBMLEncoder_1=__webpack_require__(327);exports.Encoder=EBMLEncoder_1.default;var EBMLReader_1=__webpack_require__(484);exports.Reader=EBMLReader_1.default;var tools=__webpack_require__(81);exports.tools=tools;var version=__webpack_require__(486).version;exports.version=version},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var State,tools_1=__webpack_require__(81),int64_buffer_1=__webpack_require__(326),tools=__webpack_require__(81),byEbmlID=__webpack_require__(328).byEbmlID;!function(State){State[State.STATE_TAG=1]="STATE_TAG",State[State.STATE_SIZE=2]="STATE_SIZE",State[State.STATE_CONTENT=3]="STATE_CONTENT"}(State||(State={}));var EBMLDecoder=function(){function EBMLDecoder(){this._buffer=new tools_1.Buffer(0),this._tag_stack=[],this._state=State.STATE_TAG,this._cursor=0,this._total=0,this._schema=byEbmlID,this._result=[]}return EBMLDecoder.prototype.decode=function(chunk){this.readChunk(chunk);var diff=this._result;return this._result=[],diff},EBMLDecoder.prototype.readChunk=function(chunk){for(this._buffer=tools.concat([this._buffer,new tools_1.Buffer(chunk)]);this._cursor<this._buffer.length&&(this._state!==State.STATE_TAG||this.readTag())&&(this._state!==State.STATE_SIZE||this.readSize())&&(this._state!==State.STATE_CONTENT||this.readContent()););},EBMLDecoder.prototype.getSchemaInfo=function(tagNum){return this._schema[tagNum]||{name:"unknown",level:-1,type:"unknown",description:"unknown"}},EBMLDecoder.prototype.readTag=function(){if(this._cursor>=this._buffer.length)return!1;var tag=tools_1.readVint(this._buffer,this._cursor);if(null==tag)return!1;var tagNum=this._buffer.slice(this._cursor,this._cursor+tag.length).reduce((function(o,v,i,arr){return o+v*Math.pow(16,2*(arr.length-1-i))}),0),schema=this.getSchemaInfo(tagNum),tagObj={EBML_ID:tagNum.toString(16),schema:schema,type:schema.type,name:schema.name,level:schema.level,tagStart:this._total,tagEnd:this._total+tag.length,sizeStart:this._total+tag.length,sizeEnd:null,dataStart:null,dataEnd:null,dataSize:null,data:null};return this._tag_stack.push(tagObj),this._cursor+=tag.length,this._total+=tag.length,this._state=State.STATE_SIZE,!0},EBMLDecoder.prototype.readSize=function(){if(this._cursor>=this._buffer.length)return!1;var size=tools_1.readVint(this._buffer,this._cursor);if(null==size)return!1;var tagObj=this._tag_stack[this._tag_stack.length-1];return tagObj.sizeEnd=tagObj.sizeStart+size.length,tagObj.dataStart=tagObj.sizeEnd,tagObj.dataSize=size.value,-1===size.value?(tagObj.dataEnd=-1,"m"===tagObj.type&&(tagObj.unknownSize=!0)):tagObj.dataEnd=tagObj.sizeEnd+size.value,this._cursor+=size.length,this._total+=size.length,this._state=State.STATE_CONTENT,!0},EBMLDecoder.prototype.readContent=function(){var tagObj=this._tag_stack[this._tag_stack.length-1];if("m"===tagObj.type){if(tagObj.isEnd=!1,this._result.push(tagObj),this._state=State.STATE_TAG,0===tagObj.dataSize){var elm=Object.assign({},tagObj,{isEnd:!0});this._result.push(elm),this._tag_stack.pop()}return!0}if(this._buffer.length<this._cursor+tagObj.dataSize)return!1;var data=this._buffer.slice(this._cursor,this._cursor+tagObj.dataSize);switch(this._buffer=this._buffer.slice(this._cursor+tagObj.dataSize),tagObj.data=data,tagObj.type){case"u":tagObj.value=data.readUIntBE(0,data.length);break;case"i":tagObj.value=data.readIntBE(0,data.length);break;case"f":tagObj.value=4===tagObj.dataSize?data.readFloatBE(0):8===tagObj.dataSize?data.readDoubleBE(0):(console.warn("cannot read "+tagObj.dataSize+" octets float. failback to 0"),0);break;case"s":tagObj.value=data.toString("ascii");break;case"8":tagObj.value=data.toString("utf8");break;case"b":tagObj.value=data;break;case"d":tagObj.value=tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber())}if(null===tagObj.value)throw new Error("unknown tag type:"+tagObj.type);for(this._result.push(tagObj),this._total+=tagObj.dataSize,this._state=State.STATE_TAG,this._cursor=0,this._tag_stack.pop();this._tag_stack.length>0;){var topEle=this._tag_stack[this._tag_stack.length-1];if(topEle.dataEnd<0)return this._tag_stack.pop(),!0;if(this._total<topEle.dataEnd)break;if("m"!==topEle.type)throw new Error("parent element is not master element");elm=Object.assign({},topEle,{isEnd:!0});this._result.push(elm),this._tag_stack.pop()}return!0},EBMLDecoder}();exports.default=EBMLDecoder},function(module,exports,__webpack_require__){(function(Buffer){var tools={readVint:function(buffer,start){start=start||0;for(var length=1;length<=8&&!(buffer[start]>=Math.pow(2,8-length));length++);if(length>8)throw new Error("Unrepresentable length: "+length+" "+buffer.toString("hex",start,start+length));if(start+length>buffer.length)return null;for(var value=buffer[start]&(1<<8-length)-1,i=1;i<length;i++){if(7===i&&value>=Math.pow(2,45)&&buffer[start+7]>0)return{length:length,value:-1};value*=Math.pow(2,8),value+=buffer[start+i]}return{length:length,value:value}},writeVint:function(value){if(value<0||value>Math.pow(2,53))throw new Error("Unrepresentable value: "+value);for(var length=1;length<=8&&!(value<Math.pow(2,7*length)-1);length++);for(var buffer=new Buffer(length),i=1;i<=length;i++){var b=255&value;buffer[length-i]=b,value-=b,value/=Math.pow(2,8)}return buffer[0]=buffer[0]|1<<8-length,buffer}};module.exports=tools}).call(this,__webpack_require__(98).Buffer)},function(module,exports,__webpack_require__){var BufferReader=__webpack_require__(482);module.exports=function(buffer){var block={},reader=new BufferReader(buffer);block.trackNumber=reader.nextUIntV(),block.timecode=reader.nextInt16BE();var flags=reader.nextUInt8();block.invisible=!!(8&flags),block.keyframe=!!(128&flags),block.discardable=!!(1&flags);var lacing=(6&flags)>>1;return block.frames=function(reader,lacing){if(!lacing)return[reader.nextBuffer()];var i,frameSize,frames=[],framesNum=reader.nextUInt8()+1;if(2===lacing){if(reader.length%framesNum!=0)throw new Error("Fixed-Size Lacing Error");for(frameSize=reader.length/framesNum,i=0;i<framesNum;i++)frames.push(reader.nextBuffer(frameSize));return frames}var frameSizes=[];if(1===lacing)for(i=0;i<framesNum-1;i++){var val;frameSize=0;do{val=reader.nextUInt8(),frameSize+=val}while(255===val);frameSizes.push(frameSize)}else if(3===lacing)for(frameSize=reader.nextUIntV(),frameSizes.push(frameSize),i=1;i<framesNum-1;i++)frameSize+=reader.nextIntV(),frameSizes.push(frameSize);for(i=0;i<framesNum-1;i++)frames.push(reader.nextBuffer(frameSizes[i]));return frames.push(reader.nextBuffer()),frames}(reader,lacing),block}},function(module,exports,__webpack_require__){var vint=__webpack_require__(483);function BufferReader(buffer){this.buffer=buffer,this.offset=0}BufferReader.prototype.nextInt16BE=function(){var value=this.buffer.readInt16BE(this.offset);return this.offset+=2,value},BufferReader.prototype.nextUInt8=function(){var value=this.buffer.readUInt8(this.offset);return this.offset+=1,value},BufferReader.prototype.nextUIntV=function(){var v=vint(this.buffer,this.offset);return this.offset+=v.length,v.value},BufferReader.prototype.nextIntV=function(){var v=vint(this.buffer,this.offset,!0);return this.offset+=v.length,v.value},BufferReader.prototype.nextBuffer=function(length){var buffer=length?this.buffer.slice(this.offset,this.offset+length):this.buffer.slice(this.offset);return this.offset+=length||this.length,buffer},Object.defineProperty(BufferReader.prototype,"length",{get:function(){return this.buffer.length-this.offset}}),module.exports=BufferReader},function(module,exports){module.exports=function(buffer,start,signed){start=start||0;for(var length=1;length<=8&&!(buffer[start]>=Math.pow(2,8-length));length++);if(length>8)throw new Error("Unrepresentable length: "+length+" "+buffer.toString("hex",start,start+length));if(start+length>buffer.length)return null;var i,value=buffer[start]&(1<<8-length)-1;for(i=1;i<length;i++){if(7===i&&value>=Math.pow(2,45)&&buffer[start+7]>0)return{length:length,value:-1};value*=Math.pow(2,8),value+=buffer[start+i]}return signed&&(value-=Math.pow(2,7*length-1)-1),{length:length,value:value}}},function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)});Object.defineProperty(exports,"__esModule",{value:!0});var events_1=__webpack_require__(485),tools=__webpack_require__(81),EBMLReader=function(_super){function EBMLReader(){var _this=_super.call(this)||this;return _this.logGroup="",_this.hasLoggingStarted=!1,_this.metadataloaded=!1,_this.chunks=[],_this.stack=[],_this.segmentOffset=0,_this.last2SimpleBlockVideoTrackTimecode=[0,0],_this.last2SimpleBlockAudioTrackTimecode=[0,0],_this.lastClusterTimecode=0,_this.lastClusterPosition=0,_this.timecodeScale=1e6,_this.metadataSize=0,_this.metadatas=[],_this.cues=[],_this.firstVideoBlockRead=!1,_this.firstAudioBlockRead=!1,_this.currentTrack={TrackNumber:-1,TrackType:-1,DefaultDuration:null,CodecDelay:null},_this.trackTypes=[],_this.trackDefaultDuration=[],_this.trackCodecDelay=[],_this.trackInfo={type:"nothing"},_this.ended=!1,_this.logging=!1,_this.use_duration_every_simpleblock=!1,_this.use_webp=!1,_this.use_segment_info=!0,_this.drop_default_duration=!0,_this}return __extends(EBMLReader,_super),EBMLReader.prototype.stop=function(){for(this.ended=!0,this.emit_segment_info();this.stack.length;)this.stack.pop(),this.logging&&console.groupEnd();this.logging&&this.hasLoggingStarted&&this.logGroup&&console.groupEnd()},EBMLReader.prototype.emit_segment_info=function(){var data=this.chunks;if(this.chunks=[],this.metadataloaded){if(!this.use_segment_info)return;var timecode=this.lastClusterTimecode,duration=this.duration,timecodeScale=this.timecodeScale;this.emit("cluster",{timecode:timecode,data:data}),this.emit("duration",{timecodeScale:timecodeScale,duration:duration})}else{this.metadataloaded=!0,this.metadatas=data;var videoTrackNum=this.trackTypes.indexOf(1),audioTrackNum=this.trackTypes.indexOf(2);if(this.trackInfo=videoTrackNum>=0&&audioTrackNum>=0?{type:"both",trackNumber:videoTrackNum}:videoTrackNum>=0?{type:"video",trackNumber:videoTrackNum}:audioTrackNum>=0?{type:"audio",trackNumber:audioTrackNum}:{type:"nothing"},!this.use_segment_info)return;this.emit("metadata",{data:data,metadataSize:this.metadataSize})}},EBMLReader.prototype.read=function(elm){var _this=this,drop=!1;if(!this.ended){if("m"===elm.type)if(elm.isEnd)this.stack.pop();else{var parent_1=this.stack[this.stack.length-1];if(null!=parent_1&&parent_1.level>=elm.level){this.stack.pop(),this.logging&&console.groupEnd(),parent_1.dataEnd=elm.dataEnd,parent_1.dataSize=elm.dataEnd-parent_1.dataStart,parent_1.unknownSize=!1;var o=Object.assign({},parent_1,{name:parent_1.name,type:parent_1.type,isEnd:!0});this.chunks.push(o)}this.stack.push(elm)}if("m"===elm.type&&"Segment"==elm.name)0!=this.segmentOffset&&console.warn("Multiple segments detected!"),this.segmentOffset=elm.dataStart,this.emit("segment_offset",this.segmentOffset);else if("b"===elm.type&&"SimpleBlock"===elm.name){var _a=tools.ebmlBlock(elm.data),timecode=_a.timecode,trackNumber=_a.trackNumber,frames_1=_a.frames;if(1===this.trackTypes[trackNumber]){if(!this.firstVideoBlockRead&&(this.firstVideoBlockRead=!0,"both"===this.trackInfo.type||"video"===this.trackInfo.type)){var CueTime=this.lastClusterTimecode+timecode;this.cues.push({CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime}),this.emit("cue_info",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:this.lastClusterTimecode}),this.emit("cue",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime})}this.last2SimpleBlockVideoTrackTimecode=[this.last2SimpleBlockVideoTrackTimecode[1],timecode]}else if(2===this.trackTypes[trackNumber]){if(!this.firstAudioBlockRead&&(this.firstAudioBlockRead=!0,"audio"===this.trackInfo.type)){CueTime=this.lastClusterTimecode+timecode;this.cues.push({CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime}),this.emit("cue_info",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:this.lastClusterTimecode}),this.emit("cue",{CueTrack:trackNumber,CueClusterPosition:this.lastClusterPosition,CueTime:CueTime})}this.last2SimpleBlockAudioTrackTimecode=[this.last2SimpleBlockAudioTrackTimecode[1],timecode]}this.use_duration_every_simpleblock&&this.emit("duration",{timecodeScale:this.timecodeScale,duration:this.duration}),this.use_webp&&frames_1.forEach((function(frame){if("9d012a"===frame.slice(3,6).toString("hex")){var webpBuf=tools.VP8BitStreamToRiffWebPBuffer(frame),webp=new Blob([webpBuf],{type:"image/webp"}),currentTime=_this.duration;_this.emit("webp",{currentTime:currentTime,webp:webp})}}))}else"m"===elm.type&&"Cluster"===elm.name&&!1===elm.isEnd?(this.firstVideoBlockRead=!1,this.firstAudioBlockRead=!1,this.emit_segment_info(),this.emit("cluster_ptr",elm.tagStart),this.lastClusterPosition=elm.tagStart):"u"===elm.type&&"Timecode"===elm.name?this.lastClusterTimecode=elm.value:"u"===elm.type&&"TimecodeScale"===elm.name?this.timecodeScale=elm.value:"m"===elm.type&&"TrackEntry"===elm.name?elm.isEnd?(this.trackTypes[this.currentTrack.TrackNumber]=this.currentTrack.TrackType,this.trackDefaultDuration[this.currentTrack.TrackNumber]=this.currentTrack.DefaultDuration,this.trackCodecDelay[this.currentTrack.TrackNumber]=this.currentTrack.CodecDelay):this.currentTrack={TrackNumber:-1,TrackType:-1,DefaultDuration:null,CodecDelay:null}:"u"===elm.type&&"TrackType"===elm.name?this.currentTrack.TrackType=elm.value:"u"===elm.type&&"TrackNumber"===elm.name?this.currentTrack.TrackNumber=elm.value:"u"===elm.type&&"CodecDelay"===elm.name?this.currentTrack.CodecDelay=elm.value:"u"===elm.type&&"DefaultDuration"===elm.name?this.drop_default_duration?(console.warn("DefaultDuration detected!, remove it"),drop=!0):this.currentTrack.DefaultDuration=elm.value:"unknown"===elm.name&&console.warn(elm);!this.metadataloaded&&elm.dataEnd>0&&(this.metadataSize=elm.dataEnd),drop||this.chunks.push(elm),this.logging&&this.put(elm)}},Object.defineProperty(EBMLReader.prototype,"duration",{get:function(){if("nothing"===this.trackInfo.type)return console.warn("no video, no audio track"),0;var defaultDuration=0,codecDelay=0,lastTimecode=0,_defaultDuration=this.trackDefaultDuration[this.trackInfo.trackNumber];if("number"==typeof _defaultDuration)defaultDuration=_defaultDuration;else if("both"===this.trackInfo.type)this.last2SimpleBlockAudioTrackTimecode[1]>this.last2SimpleBlockVideoTrackTimecode[1]?(defaultDuration=(this.last2SimpleBlockAudioTrackTimecode[1]-this.last2SimpleBlockAudioTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackTypes.indexOf(2)])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockAudioTrackTimecode[1]):(defaultDuration=(this.last2SimpleBlockVideoTrackTimecode[1]-this.last2SimpleBlockVideoTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackTypes.indexOf(1)])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockVideoTrackTimecode[1]);else if("video"===this.trackInfo.type){defaultDuration=(this.last2SimpleBlockVideoTrackTimecode[1]-this.last2SimpleBlockVideoTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackInfo.trackNumber])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockVideoTrackTimecode[1]}else if("audio"===this.trackInfo.type){var delay;defaultDuration=(this.last2SimpleBlockAudioTrackTimecode[1]-this.last2SimpleBlockAudioTrackTimecode[0])*this.timecodeScale,"number"==typeof(delay=this.trackCodecDelay[this.trackInfo.trackNumber])&&(codecDelay=delay),lastTimecode=this.last2SimpleBlockAudioTrackTimecode[1]}var duration=((this.lastClusterTimecode+lastTimecode)*this.timecodeScale+defaultDuration-codecDelay)/this.timecodeScale;return Math.floor(duration)},enumerable:!0,configurable:!0}),EBMLReader.prototype.addListener=function(event,listener){return _super.prototype.addListener.call(this,event,listener)},EBMLReader.prototype.put=function(elm){this.hasLoggingStarted||(this.hasLoggingStarted=!0,this.logging&&this.logGroup&&console.groupCollapsed(this.logGroup)),"m"===elm.type?elm.isEnd?console.groupEnd():console.group(elm.name+":"+elm.tagStart):"b"===elm.type?console.log(elm.name,elm.type):console.log(elm.name,elm.tagStart,elm.type,elm.value)},EBMLReader}(events_1.EventEmitter);exports.default=EBMLReader},function(module,exports,__webpack_require__){"use strict";var ReflectOwnKeys,R="object"==typeof Reflect?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(target,receiver,args){return Function.prototype.apply.call(target,receiver,args)};ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target))}:function(target){return Object.getOwnPropertyNames(target)};var NumberIsNaN=Number.isNaN||function(value){return value!=value};function EventEmitter(){EventEmitter.init.call(this)}module.exports=EventEmitter,module.exports.once=function(emitter,name){return new Promise((function(resolve,reject){function eventListener(){void 0!==errorListener&&emitter.removeListener("error",errorListener),resolve([].slice.call(arguments))}var errorListener;"error"!==name&&(errorListener=function(err){emitter.removeListener(name,eventListener),reject(err)},emitter.once("error",errorListener)),emitter.once(name,eventListener)}))},EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._eventsCount=0,EventEmitter.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(listener){if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener)}function _getMaxListeners(that){return void 0===that._maxListeners?EventEmitter.defaultMaxListeners:that._maxListeners}function _addListener(target,type,listener,prepend){var m,events,existing,warning;if(checkListener(listener),void 0===(events=target._events)?(events=target._events=Object.create(null),target._eventsCount=0):(void 0!==events.newListener&&(target.emit("newListener",type,listener.listener?listener.listener:listener),events=target._events),existing=events[type]),void 0===existing)existing=events[type]=listener,++target._eventsCount;else if("function"==typeof existing?existing=events[type]=prepend?[listener,existing]:[existing,listener]:prepend?existing.unshift(listener):existing.push(listener),(m=_getMaxListeners(target))>0&&existing.length>m&&!existing.warned){existing.warned=!0;var w=new Error("Possible EventEmitter memory leak detected. "+existing.length+" "+String(type)+" listeners added. Use emitter.setMaxListeners() to increase limit");w.name="MaxListenersExceededWarning",w.emitter=target,w.type=type,w.count=existing.length,warning=w,console&&console.warn&&console.warn(warning)}return target}function onceWrapper(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _onceWrap(target,type,listener){var state={fired:!1,wrapFn:void 0,target:target,type:type,listener:listener},wrapped=onceWrapper.bind(state);return wrapped.listener=listener,state.wrapFn=wrapped,wrapped}function _listeners(target,type,unwrap){var events=target._events;if(void 0===events)return[];var evlistener=events[type];return void 0===evlistener?[]:"function"==typeof evlistener?unwrap?[evlistener.listener||evlistener]:[evlistener]:unwrap?function(arr){for(var ret=new Array(arr.length),i=0;i<ret.length;++i)ret[i]=arr[i].listener||arr[i];return ret}(evlistener):arrayClone(evlistener,evlistener.length)}function listenerCount(type){var events=this._events;if(void 0!==events){var evlistener=events[type];if("function"==typeof evlistener)return 1;if(void 0!==evlistener)return evlistener.length}return 0}function arrayClone(arr,n){for(var copy=new Array(n),i=0;i<n;++i)copy[i]=arr[i];return copy}Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(arg){if("number"!=typeof arg||arg<0||NumberIsNaN(arg))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+".");defaultMaxListeners=arg}}),EventEmitter.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter.prototype.setMaxListeners=function(n){if("number"!=typeof n||n<0||NumberIsNaN(n))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n+".");return this._maxListeners=n,this},EventEmitter.prototype.getMaxListeners=function(){return _getMaxListeners(this)},EventEmitter.prototype.emit=function(type){for(var args=[],i=1;i<arguments.length;i++)args.push(arguments[i]);var doError="error"===type,events=this._events;if(void 0!==events)doError=doError&&void 0===events.error;else if(!doError)return!1;if(doError){var er;if(args.length>0&&(er=args[0]),er instanceof Error)throw er;var err=new Error("Unhandled error."+(er?" ("+er.message+")":""));throw err.context=er,err}var handler=events[type];if(void 0===handler)return!1;if("function"==typeof handler)ReflectApply(handler,this,args);else{var len=handler.length,listeners=arrayClone(handler,len);for(i=0;i<len;++i)ReflectApply(listeners[i],this,args)}return!0},EventEmitter.prototype.addListener=function(type,listener){return _addListener(this,type,listener,!1)},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.prependListener=function(type,listener){return _addListener(this,type,listener,!0)},EventEmitter.prototype.once=function(type,listener){return checkListener(listener),this.on(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.prependOnceListener=function(type,listener){return checkListener(listener),this.prependListener(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.removeListener=function(type,listener){var list,events,position,i,originalListener;if(checkListener(listener),void 0===(events=this._events))return this;if(void 0===(list=events[type]))return this;if(list===listener||list.listener===listener)0==--this._eventsCount?this._events=Object.create(null):(delete events[type],events.removeListener&&this.emit("removeListener",type,list.listener||listener));else if("function"!=typeof list){for(position=-1,i=list.length-1;i>=0;i--)if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener,position=i;break}if(position<0)return this;0===position?list.shift():function(list,index){for(;index+1<list.length;index++)list[index]=list[index+1];list.pop()}(list,position),1===list.length&&(events[type]=list[0]),void 0!==events.removeListener&&this.emit("removeListener",type,originalListener||listener)}return this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.removeAllListeners=function(type){var listeners,events,i;if(void 0===(events=this._events))return this;if(void 0===events.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==events[type]&&(0==--this._eventsCount?this._events=Object.create(null):delete events[type]),this;if(0===arguments.length){var key,keys=Object.keys(events);for(i=0;i<keys.length;++i)"removeListener"!==(key=keys[i])&&this.removeAllListeners(key);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(listeners=events[type]))this.removeListener(type,listeners);else if(void 0!==listeners)for(i=listeners.length-1;i>=0;i--)this.removeListener(type,listeners[i]);return this},EventEmitter.prototype.listeners=function(type){return _listeners(this,type,!0)},EventEmitter.prototype.rawListeners=function(type){return _listeners(this,type,!1)},EventEmitter.listenerCount=function(emitter,type){return"function"==typeof emitter.listenerCount?emitter.listenerCount(type):listenerCount.call(emitter,type)},EventEmitter.prototype.listenerCount=listenerCount,EventEmitter.prototype.eventNames=function(){return this._eventsCount>0?ReflectOwnKeys(this._events):[]}},function(module){module.exports=JSON.parse('{"_args":[["ts-ebml@2.0.2","C:\\\\Git\\\\Rainbow"]],"_development":true,"_from":"ts-ebml@2.0.2","_id":"ts-ebml@2.0.2","_inBundle":false,"_integrity":"sha512-V/HdlCn3FITQrFHQlVE02XtfMiRLab2QB/YOCfkbJWqiFYG/j5v7gHKV+wem6g0PD6/uxXs5oxMQfDXILmts/Q==","_location":"/ts-ebml","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ts-ebml@2.0.2","name":"ts-ebml","escapedName":"ts-ebml","rawSpec":"2.0.2","saveSpec":null,"fetchSpec":"2.0.2"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/ts-ebml/-/ts-ebml-2.0.2.tgz","_spec":"2.0.2","_where":"C:\\\\Git\\\\Rainbow","author":{"name":"legokichi duckscallion"},"bin":{"ts-ebml":"lib/cli.js"},"bugs":{"url":"https://github.com/legokichi/ts-ebml/issues"},"dependencies":{"buffer":"^5.0.7","commander":"^2.11.0","ebml":"^2.2.1","ebml-block":"^1.1.0","events":"^1.1.1","int64-buffer":"^0.1.9","matroska":"^2.2.3"},"description":"ebml decoder and encoder","devDependencies":{"@types/commander":"^2.9.1","@types/qunit":"^2.0.31","browserify":"^13.1.0","empower":"^1.2.3","espower-cli":"^1.1.0","power-assert":"^1.4.4","power-assert-formatter":"^1.4.1","qunit-tap":"^1.5.1","qunitjs":"^2.4.0","tslint":"^3.15.1","typedoc":"^0.5.3","typescript":"^2.4.2","watchify":"^3.7.0"},"homepage":"https://github.com/legokichi/ts-ebml#readme","keywords":["ebml","webm","mkv","matrosika","webp"],"license":"MIT","main":"./lib/index.js","name":"ts-ebml","repository":{"type":"git","url":"git+https://github.com/legokichi/ts-ebml.git"},"scripts":{"browserify":"browserify lib/index.js --standalone EBML -o dist/EBML.js","build":"npm run clean   && tsc    -p .; npm run browserify","check":"tsc -w --noEmit -p ./","clean":"rm -rf lib/* dist/* test/*.js; mkdir -p dist","doc":"typedoc --mode modules --out doc --disableOutputCheck","example":"tsc; browserify lib/example_seekable.js -o test/example_seekable.js","examples":"tsc; for file in `find lib -name \'example_*.js\' -type f -printf \'%f\\\\n\'`; do browserify lib/$file -o test/$file; done","examples_bsd":"tsc; for file in `find lib -name \'example_*.js\' -type f -print`; do browserify lib/$(basename $file) -o test/$(basename $file); done","init":"npm run update; npm run mkdir; npm run build","lint":"tslint -c ./tslint.json --project ./tsconfig.json --type-check","mkdir":"mkdir lib dist 2>/dev/null","reset":"rm -rf node_modules","setup":"npm install -g http-server;","start":"http-server . -s & tsc -w -p .& watchify lib/example_seekable.js -o test/example_seekable.js","stop":"killall -- node */tsc -w -p","test":"tsc; espower lib/test.js > lib/test.tmp; mv -f lib/test.tmp lib/test.js; browserify lib/test.js -o test/test.js","update":"npm run reset; npm update","watchify":"watchify lib/index.js --standalone EBML -o dist/EBMl.js -v"},"typings":"./lib/index.d.ts","version":"2.0.2"}')},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const settings_service_1=__webpack_require__(18),contact_service_1=__webpack_require__(6),profile_service_1=__webpack_require__(13),room_service_1=__webpack_require__(25),deviceManagement_service_1=__webpack_require__(56),event_service_1=__webpack_require__(11),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12);var NotificationType;!function(NotificationType){NotificationType.NOTIFICATIONTYPE_STANDARD="std",NotificationType.NOTIFICATIONTYPE_LOW="low",NotificationType.NOTIFICATIONTYPE_MIDDLE="middle",NotificationType.NOTIFICATIONTYPE_HIGH="high"}(NotificationType=exports.NotificationType||(exports.NotificationType={}));class RingingService{constructor(){this.settingsService=settings_service_1.SettingsService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.profileService=profile_service_1.ProfileService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.deviceManagementService=deviceManagement_service_1.DeviceManagementService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.notifs=["noSound","ding","harp","hello","complete","duck","appointed","chime","stairs","wet","wilhelm","important"],this.alarms=["noRingtone","lightBounce","discovery","lounge","uptown","morningLights","miami","farEast","highSpeed","rainDrops","deepSpace","steamTrain","happy","decrescendo","strident","peacefulness","classic1","classic2","classic3","cosy1","cosy2","cosy3","dynamic1","dynamic2","dynamic3","quiet1","quiet2","quiet3","relax1","relax2","relax3"],this.emergencyAlarms=["noSound","pager1"],this.audioFileType="",this.recordTone=null,this.joinWebConfTone=null,this.alarmNotifOnce=null,this.audioNotifOnce=null,this.pingAudio=null,this.pingAudioSecondary=null,this.pushToTalkActivateTone=null,this.pushToTalkDeactivateTone=null,this.informationImSoundAudio=null,this.informationImSoundAudioSecondary=null,this.importantImSoundAudio=null,this.importantImSoundAudioSecondary=null,this.emergencyImSoundAudio=null,this.emergencyImSoundAudioSecondary=null,this.incomingRingingTone={},this.incomingRingingSecondaryTone={},this.ringbackTone={},this.secondCallTone={},this.holdTone={},this.informationImSound="",this.importantImSound="",this.emergencyImSound="",this.activeNotif="",this.activeAlarm="",this.isStartIncomingRingingRequest=!1,this.stopWebrtcSounds=!1,this.subscriptions=[],this.listeners=[]}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.ringingService||(win.rainbow.ringingService=new RingingService),win.rainbow.ringingService}async start(){try{this.logger.info("[ringingService] === STARTING ==="),this.setAudioCapability(),this.ringbackTone={audio:new Audio,starting:!1,id:"ringbackTone"},this.recordTone=new Audio("/assets/sounds/beep-01a"+this.audioFileType),this.secondCallTone={audio:new Audio("/assets/sounds/beep-beep"+this.audioFileType),starting:!1,id:"secondCallTone"},this.joinWebConfTone=new Audio("/assets/sounds/join_meeting"+this.audioFileType),this.holdTone={audio:new Audio("/assets/sounds/new-hold"+this.audioFileType),starting:!1},this.pushToTalkActivateTone=new Audio("/assets/sounds/ptt_activate"+this.audioFileType),this.pushToTalkDeactivateTone=new Audio("/assets/sounds/ptt_deactivate"+this.audioFileType),this.ringbackTone.audio.onloadeddata=()=>{this.logger.info("[ringingService] === ringbackTone -- loaded")},this.ringbackTone.audio.oncanplay=()=>{this.logger.info("[ringingService] === ringbackTone -- oncanplay ")},this.ringbackTone.audio.onerror=()=>{this.logger.error("[ringingService] === ringbackTone -- onerror ")},this.ringbackTone.audio.src="/assets/sounds/outgoing-rings"+this.audioFileType,this.ringbackTone.audio.currentTime=0,this.ringbackTone.audio.loop=!0,this.ringbackTone.audio.load(),this.holdTone.audio.loop=!0,this.secondCallTone.audio.loop=!0,this.alarmNotifOnce=null,this.informationImSound=this.contactService.userContact.customData.informationImSound,this.informationImSound||(this.informationImSound=this.settingsService.getSetting("informationImSound")),this.importantImSound=this.contactService.userContact.customData.importantImSound,this.importantImSound||(this.importantImSound=this.settingsService.getSetting("importantImSound")),this.manageEmergencyNotifs();const settingsActiveNotif=this.settingsService.getSetting("activeNotif"),settingsActiveAlarm=this.settingsService.getSetting("activeAlarm");this.setActive(settingsActiveNotif,settingsActiveAlarm,this.informationImSound,this.importantImSound),this.addListeners(),this.logger.info("[ringingService] === STARTED ===")}catch(error){this.logger.error("[ringingService] === STARTING FAILURE === "+error.message)}}async stop(){this.logger.info("[ringingService] === STOPPING ==="),this.listeners.forEach(listener=>{listener()}),this.listeners=[],this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.ringbackTone&&(this.ringbackTone.starting=!1,this.ringbackTone.audio=null),this.incomingRingingTone&&(this.incomingRingingTone.starting=!1,this.incomingRingingTone.audio=null),this.incomingRingingSecondaryTone&&(this.incomingRingingSecondaryTone.starting=!1,this.incomingRingingSecondaryTone.audio=null),this.secondCallTone&&(this.secondCallTone.starting=!1,this.secondCallTone.audio=null),this.holdTone&&(this.holdTone.starting=!1,this.holdTone.audio=null),this.recordTone=null,this.joinWebConfTone=null,this.alarmNotifOnce=null,this.audioNotifOnce=null,this.pingAudio=null,this.pingAudioSecondary=null,this.pushToTalkActivateTone=null,this.pushToTalkDeactivateTone=null,this.informationImSoundAudio=null,this.informationImSoundAudioSecondary=null,this.importantImSoundAudio=null,this.importantImSoundAudioSecondary=null,this.emergencyImSoundAudio=null,this.emergencyImSoundAudioSecondary=null,this.incomingRingingTone={},this.incomingRingingSecondaryTone={},this.ringbackTone={},this.secondCallTone={},this.holdTone={},this.informationImSound="",this.importantImSound="",this.emergencyImSound="",this.activeNotif="",this.activeAlarm="",this.logger.info("[ringingService] === STOPPED ===")}addListeners(){this.listeners.push(this.eventService.subscribe("ON_WEB_CONFENRECE_PARTICIPANT_JOINED_EVENT",this.playWebConferenceJoinNotif.bind(this))),this.listeners.push(this.eventService.subscribe("ON_PRESS_PUSH_TO_TALK_EVENT",this.playActivatePtT.bind(this))),this.listeners.push(this.eventService.subscribe("ON_RELEASE_PUSH_TO_TALK_EVENT",this.playDeactivatePtT.bind(this))),this.subscriptions.push(this.profileService.subscribe(()=>{this.manageEmergencyNotifs()})),this.subscriptions.push(this.deviceManagementService.subscribe(event=>{try{event.name===this.deviceManagementService.RAINBOW_ONNEWAUDIOVIDEODEVICESELECTED&&"audiooutput"===event.data.kind?this.onAudioOutputDeviceChange():event.name===this.deviceManagementService.RAINBOW_ONNEWSECONDARYOUTPUTDEVICESELECTED&&this.onSecondaryAudioOutputDeviceChange()}catch{}}))}async onAudioOutputDeviceChange(){if(this.incomingRingingTone&&this.incomingRingingTone.audio&&!this.incomingRingingTone.audio.paused)try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.incomingRingingTone.audio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.incomingRingingTone.audio.pause(),this.incomingRingingTone.audio.currentTime=0,this.logger.info("[ringingService] onAudioOutputDeviceChange: startIncomingRinging main device -- play"),this.play(this.incomingRingingTone)}catch(error){}}async onSecondaryAudioOutputDeviceChange(){if("true"===this.settingsService.getSetting("hasSecondRinger")&&this.incomingRingingSecondaryTone&&this.incomingRingingSecondaryTone.audio&&!this.incomingRingingSecondaryTone.audio.paused)try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.incomingRingingSecondaryTone.audio,this.deviceManagementService.getCurrentSecondaryOutputDevice()),this.incomingRingingSecondaryTone.audio.pause(),this.incomingRingingSecondaryTone.audio.currentTime=0,this.logger.info("[ringingService] onSecondaryAudioOutputDeviceChange: startIncomingRinging secondary device -- play"),this.play(this.incomingRingingSecondaryTone)}catch(error){}}setAudioCapability(){let audio=new Audio;const canPlayOgg=Boolean(audio.canPlayType)&&Boolean(audio.canPlayType('audio/ogg; codecs="vorbis"'));this.logger.debug("[ringingService] setAudioCapability -- Can play audio/ogg = "+canPlayOgg),this.audioFileType=canPlayOgg?".ogg":".mp3",audio=null}manageEmergencyNotifs(){this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.ALERT_NOTIFICATIONS_ALLOWED)&&(this.logger.debug("[ringingService] manageEmergencyNotifs -- Emergency alarms set to default"),this.emergencyAlarms=["noSound","emergency"]),this.emergencyImSound=this.contactService.userContact.customData.emergencyImSound,this.emergencyImSound||(this.emergencyImSound=this.settingsService.getSetting("emergencyImSound"),this.logger.debug("[ringingService] manageEmergencyNotifs -- Emergency notif sound set to "+this.emergencyImSound)),this.setEmergencyAlarm()}setEmergencyAlarm(){let update=!1;(!this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.ALERT_NOTIFICATIONS_ALLOWED)||"noSound"!==this.emergencyImSound&&-1!==this.emergencyAlarms.indexOf(this.emergencyImSound))&&(this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.ALERT_NOTIFICATIONS_ALLOWED)||-1!==this.emergencyAlarms.indexOf(this.emergencyImSound))||(update=!0),update&&(this.emergencyImSound=this.emergencyAlarms[1],this.contactService.userContact.customData.emergencyImSound=this.emergencyImSound,this.contactService.updateUserContact({customData:this.contactService.userContact.customData})),"noSound"!==this.emergencyImSound?(this.emergencyImSoundAudio=new Audio("/assets/sounds/notifs/"+this.emergencyImSound+this.audioFileType),this.emergencyImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+this.emergencyImSound+this.audioFileType),this.logger.debug("[ringingService] setEmergencyAlarm -- Emergency notif sound set to "+this.emergencyImSound)):(this.emergencyImSoundAudio=null,this.emergencyImSoundAudioSecondary=null,this.logger.info("[ringingService] Emergency notif sound set to null"))}setActive(notif,alarm,informationImSound,importantImSound){this.logger.info(`[ringingService] setActive wih notif=${notif}, alarm=${alarm}, informationImSound=${informationImSound}, importantImSound=${importantImSound}`),this.activeNotif=notif,this.activeAlarm=alarm,"noSound"!==notif?(this.pingAudio=new Audio("/assets/sounds/notifs/"+this.activeNotif+this.audioFileType),this.pingAudioSecondary=new Audio("/assets/sounds/notifs/"+this.activeNotif+this.audioFileType),this.logger.info("[ringingService] setActive -- Notif sound set to "+this.activeNotif)):(this.pingAudio=null,this.pingAudioSecondary=null,this.logger.info("[ringingService] setActive -- Notif sound set to null")),"noRingtone"!==alarm?(this.incomingRingingTone={audio:new Audio,starting:!1,id:"incomingRingingTone"},this.incomingRingingSecondaryTone={audio:new Audio,starting:!1,id:"incomingRingingSecondaryTone"},this.incomingRingingTone.audio.onloadeddata=()=>{this.logger.info("[ringingService] === incomingRingingTone -- loaded")},this.incomingRingingTone.audio.oncanplay=()=>{this.logger.info("[ringingService] === incomingRingingTone -- oncanplay ")},this.incomingRingingTone.audio.onerror=()=>{this.logger.error("[ringingService] === incomingRingingTone -- onerror "),this.incomingRingingTone.audio.error&&this.logger.error("[ringingService] === incomingRingingTone -- onerror msg = "+this.incomingRingingTone.audio.error.message)},this.incomingRingingSecondaryTone.audio.onloadeddata=()=>{this.logger.info("[ringingService] === incomingRingingSecondaryTone -- loaded")},this.incomingRingingSecondaryTone.audio.oncanplay=()=>{this.logger.info("[ringingService] === incomingRingingSecondaryTone -- oncanplay ")},this.incomingRingingSecondaryTone.audio.onerror=()=>{this.logger.error("[ringingService] === incomingRingingSecondaryTone -- onerror "),this.incomingRingingSecondaryTone.audio.error&&this.logger.error("[ringingService] === incomingRingingSecondaryTone -- onerror msg = "+this.incomingRingingSecondaryTone.audio.error.message)},this.incomingRingingTone.audio.src="/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType,this.incomingRingingSecondaryTone.audio.src="/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType,this.incomingRingingTone.audio.currentTime=0,this.incomingRingingTone.audio.loop=!0,this.incomingRingingTone.audio.load(),this.incomingRingingSecondaryTone.audio.currentTime=0,this.incomingRingingSecondaryTone.audio.loop=!0,this.incomingRingingSecondaryTone.audio.load(),this.logger.info("[ringingService] setActive -- Ringtone sound set to "+this.activeAlarm)):(this.incomingRingingTone=null,this.incomingRingingSecondaryTone=null,this.logger.info("[ringingService] setActive -- Ringtone sound set to null")),"noSound"!==informationImSound?(this.informationImSoundAudio=new Audio("/assets/sounds/notifs/"+informationImSound+this.audioFileType),this.informationImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+informationImSound+this.audioFileType),this.logger.debug("[ringingService] setActive -- Information notif sound set to "+informationImSound)):(this.informationImSoundAudio=null,this.informationImSoundAudioSecondary=null,this.logger.info("[ringingService] setActive -- Information notif sound set to null")),"noSound"!==importantImSound?(this.importantImSoundAudio=new Audio("/assets/sounds/notifs/"+importantImSound+this.audioFileType),this.importantImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+importantImSound+this.audioFileType),this.logger.debug("[ringingService] setActive -- Important notif sound set to "+importantImSound)):(this.importantImSoundAudio=null,this.importantImSoundAudioSecondary=null,this.logger.info("[ringingService] setActive -- Important notif sound set to null"))}shouldPlayImNotif(){let result=!0;return"busy"!==this.contactService.userContact.status&&"dnd"!==this.contactService.userContact.status||(result=!1),this.logger.debug("[ringingService] shouldPlayImNotif -- result = "+result),result}play(tone,count=0){if(this.logger.debug(`[ringingService] play -- id = ${tone.id} - count = ${count}`),!tone||!tone.audio)return void this.logger.warn("[ringingService] play tone is missing -- return");if(tone.stopDefered)return this.logger.warn(`[ringingService] play tone for id ${tone.id} aborted because stop request is pending`),void(tone.starting=!1);if(4!==tone.audio.readyState){if(count<6)return this.logger.warn(`[ringingService] play tone for id ${tone.id} is not ready -- retry in 500 ms`),void setTimeout(()=>{count+=1,this.play(tone,count)},500);if("incomingRingingTone"===tone.id){this.logger.warn(`[ringingService] play tone for id ${tone.id}/type ${this.audioFileType} does not load .. try another type`);const type=".ogg"===this.audioFileType?".mp3":".ogg";return this.incomingRingingTone={audio:new Audio("/assets/sounds/alarms/"+this.activeAlarm+type),starting:!0,id:"incomingRingingTone"},this.incomingRingingTone.audio.loop=!0,void this.play(this.incomingRingingTone)}if("incomingRingingSecondaryTone"===tone.id){this.logger.warn(`[ringingService] play tone for id ${tone.id}/type ${this.audioFileType} does not load .. try another type`);const type=".ogg"===this.audioFileType?".mp3":".ogg";return this.incomingRingingSecondaryTone={audio:new Audio("/assets/sounds/alarms/"+this.activeAlarm+type),starting:!0,id:"incomingRingingSecondaryTone"},this.incomingRingingSecondaryTone.audio.loop=!0,void this.play(this.incomingRingingSecondaryTone)}this.logger.warn(`[ringingService] play tone for id ${tone.id} is not ready -- try to play it anyway`)}const result=tone.audio.play();result&&"function"==typeof result.finally?result.then(()=>{this.logger.info(`[ringingService] play for id ${tone.id} ok`)}).catch(error=>{this.logger.error(`[ringingService] play for id ${tone.id} error: ${error}`)}).finally(()=>{tone.starting=!1}):(this.logger.info(`[ringingService] (no promise) play for id ${tone.id} ok`),tone.starting=!1)}addEvents(audioObject,alarm){audioObject.onended=()=>{this.alarmNotifOnce=null,alarm.iconPlayer="play"}}async playActivatePtT(){if(this.pushToTalkActivateTone&&this.contactService.userContact.customData.enablePushToTalkTone){this.pushToTalkActivateTone.currentTime=0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.pushToTalkActivateTone,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.debug("[ringingService] playActivatePtT -- play"),this.pushToTalkActivateTone.play()}catch(error){}}}async playDeactivatePtT(){if(this.logger.info("[ringingService] playDeactivatePtT"),this.pushToTalkDeactivateTone&&this.contactService.userContact.customData.enablePushToTalkTone){this.pushToTalkDeactivateTone.currentTime=0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.pushToTalkDeactivateTone,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.debug("[ringingService] playDeactivatePtT -- play"),this.pushToTalkDeactivateTone.play()}catch(error){}}}stopRingBackToneDefered(count){this.logger.debug("[ringingService] stopRingBackToneDefered -- count = "+count),this.ringbackTone.stopDefered=void 0,(count+=1)>=3?this.ringbackTone.audio&&(this.logger.info("[ringingService] stopRingBackToneDefered: tone is blocked on starting, stop it"),this.ringbackTone.audio.pause(),this.ringbackTone.audio.currentTime=0,this.ringbackTone.audio.src="",this.ringbackTone.audio.src="/assets/sounds/outgoing-rings"+this.audioFileType,this.ringbackTone.audio.load()):this.stopRingBackTone(count)}stopIncomingRingingDefered(count){this.logger.debug("[ringingService] stopIncomingRingingDefered -- count = "+count),this.incomingRingingTone.stopDefered=void 0,(count+=1)>=30?this.incomingRingingTone.audio&&(this.logger.info("[ringingService] stopIncomingRingingDefered: tone is blocked on starting, stop it"),this.incomingRingingTone.audio.pause(),this.incomingRingingTone.audio.src="",this.incomingRingingTone.audio.src="/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType,this.incomingRingingTone.audio.currentTime=0,this.incomingRingingTone.audio.loop=!0,this.incomingRingingTone.audio.load()):this.stopIncomingRinging(count)}stopIncomingRingingSecondaryDefered(count){this.logger.debug("[ringingService] stopIncomingRingingSecondaryDefered -- count = "+count),this.incomingRingingSecondaryTone.stopDefered=void 0,(count+=1)>=30?this.incomingRingingSecondaryTone.audio&&(this.logger.info("[ringingService] stopIncomingRingingSecondaryDefered: tone is blocked on starting, stop it"),this.incomingRingingSecondaryTone.audio.pause(),this.incomingRingingSecondaryTone.audio.src="",this.incomingRingingSecondaryTone.audio.src="/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType,this.incomingRingingSecondaryTone.audio.currentTime=0,this.incomingRingingSecondaryTone.audio.loop=!0,this.incomingRingingSecondaryTone.audio.load()):this.stopIncomingRinging(count)}stopSecondToneDefered(){this.logger.debug("[ringingService] stopSecondToneDefered"),this.secondCallTone.stopDefered=void 0,this.stopSecondCallTone()}stopHoldToneDefered(){this.logger.debug("[ringingService] stopHoldToneDefered"),this.holdTone.stopDefered=void 0,this.stopHoldTone()}getAudioFileType(){return this.audioFileType}async playWebConferenceJoinNotif(__event,confSession){let room=null;if(confSession&&(room=this.roomService.getRoomById(confSession.id),room||(room=this.roomService.getRoomById(confSession.roomId))),this.joinWebConfTone&&room&&room.getPlayEntryTone()){this.logger.info("[ringingService] playWebConferenceJoinNotif"),this.joinWebConfTone.currentTime=0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.joinWebConfTone,this.deviceManagementService.getCurrentAudioOutputDevice()),this.joinWebConfTone.play()}catch(error){}}}setActiveAlarm(alarm){this.logger.info("[ringingService] setActiveAlarm to "+alarm),this.activeAlarm=alarm,this.contactService.setUserSettings({activeAlarm:this.activeAlarm}),"noRingtone"!==alarm?(this.incomingRingingTone={audio:new Audio,starting:!1,id:"incomingRingingTone"},this.incomingRingingSecondaryTone={audio:new Audio("/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType),starting:!1,id:"incomingRingingSecondaryTone"},this.incomingRingingTone.audio.onloadeddata=()=>{this.logger.info("[ringingService] === incomingRingingTone -- loaded")},this.incomingRingingTone.audio.oncanplay=()=>{this.logger.info("[ringingService] === incomingRingingTone -- oncanplay ")},this.incomingRingingTone.audio.onerror=()=>{this.logger.error("[ringingService] === incomingRingingTone -- onerror "),this.incomingRingingTone.audio.error&&this.logger.error("[ringingService] === incomingRingingTone -- onerror msg = "+this.incomingRingingTone.audio.error.message)},this.incomingRingingTone.audio.src="/assets/sounds/alarms/"+this.activeAlarm+this.audioFileType,this.incomingRingingTone.audio.currentTime=0,this.incomingRingingTone.audio.loop=!0,this.incomingRingingTone.audio.load()):(this.incomingRingingTone=null,this.incomingRingingSecondaryTone=null,this.logger.info("[ringingService] setActiveAlarm -- Ringtone sound set to null"))}playAlarmOnce(alarm){this.logger.info("[ringingService] playAlarmOnce "+alarm.name),null!==this.alarmNotifOnce&&this.alarmNotifOnce.pause(),this.alarmNotifOnce=new Audio("/assets/sounds/alarms/"+alarm.name+this.audioFileType),this.alarmNotifOnce.currentTime=0,this.alarmNotifOnce.play(),this.addEvents(this.alarmNotifOnce,alarm)}stopAlarmOnce(){this.logger.info("[ringingService] stopAlarmOnce"),this.alarmNotifOnce&&(this.alarmNotifOnce.pause(),this.alarmNotifOnce=null)}alarmCurPlay(){return this.alarmNotifOnce instanceof Audio}setActiveNotif(notif){this.logger.info("[ringingService] setActiveNotif to "+notif),this.activeNotif=notif,this.contactService.setUserSettings({activeNotif:this.activeNotif}),"noSound"!==notif?(this.pingAudio=new Audio("/assets/sounds/notifs/"+this.activeNotif+this.audioFileType),this.pingAudioSecondary=new Audio("/assets/sounds/notifs/"+this.activeNotif+this.audioFileType)):(this.pingAudio=null,this.pingAudioSecondary=null,this.logger.info("[ringingService] Notif sound set to null"))}playNotifOnce(notif){this.logger.info("[ringingService] playNotifOnce "+notif.name),this.audioNotifOnce=new Audio("/assets/sounds/notifs/"+notif.name+this.audioFileType),this.audioNotifOnce.currentTime=0,this.audioNotifOnce.play(),this.addEvents(this.audioNotifOnce,notif)}stopNotifOnce(){this.logger.info("[ringingService] stopNotifOnce"),this.audioNotifOnce.pause(),this.audioNotifOnce=null}notifCurPlay(){return this.audioNotifOnce instanceof Audio}setInformationImSound(notif){this.logger.info("[ringingService] setInformationImSound to "+notif),this.informationImSound=notif,this.settingsService.setSetting("informationImSound",notif),this.contactService.userContact.customData.informationImSound=notif,this.contactService.updateUserContact({customData:this.contactService.userContact.customData}),"noSound"!==notif?(this.informationImSoundAudio=new Audio("/assets/sounds/notifs/"+this.informationImSound+this.audioFileType),this.informationImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+this.informationImSound+this.audioFileType)):(this.informationImSoundAudio=null,this.informationImSoundAudioSecondary=null,this.logger.debug("[ringingService] Information sound set to null"))}setImportantImSound(notif){this.logger.info("[ringingService] setImportantImSound to "+notif),this.importantImSound=notif,this.settingsService.setSetting("importantImSound",notif),this.contactService.userContact.customData.importantImSound=notif,this.contactService.updateUserContact({customData:this.contactService.userContact.customData}),"noSound"!==notif?(this.importantImSoundAudio=new Audio("/assets/sounds/notifs/"+this.importantImSound+this.audioFileType),this.importantImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+this.importantImSound+this.audioFileType)):(this.importantImSoundAudio=null,this.importantImSoundAudioSecondary=null,this.logger.debug("[ringingService] Important sound set to null"))}setEmergencyImSound(notif){this.logger.info("[ringingService] setEmergencyImSound to "+notif),this.emergencyImSound=notif,this.settingsService.setSetting("emergencyImSound",notif),this.contactService.userContact.customData.emergencyImSound=notif,this.contactService.updateUserContact({customData:this.contactService.userContact.customData}),"noSound"!==notif?(this.emergencyImSoundAudio=new Audio("/assets/sounds/notifs/"+this.emergencyImSound+this.audioFileType),this.emergencyImSoundAudioSecondary=new Audio("/assets/sounds/notifs/"+this.emergencyImSound+this.audioFileType)):(this.emergencyImSoundAudio=null,this.emergencyImSoundAudioSecondary=null,this.logger.debug("[ringingService] Emergency sound set to null"))}stopUrgencyNotif(){this.logger.info("[ringingService] stopUrgencyNotif"),this.emergencyImSoundAudio&&(this.emergencyImSoundAudio.pause(),this.emergencyImSoundAudio=null),this.emergencyImSoundAudioSecondary&&(this.emergencyImSoundAudioSecondary.pause(),this.emergencyImSoundAudioSecondary=null)}async playCustomNotif(typeNotif){if(this.logger.info("[ringingService] playCustomNotif -- typeNotif = "+typeNotif),this.stopWebrtcSounds)return void this.logger.info("[ringingService] playCustomNotif -- playImNotif is blocked...");let imSoundAudio,imSoundAudioSecondary;if(typeNotif===NotificationType.NOTIFICATIONTYPE_STANDARD||typeNotif===NotificationType.NOTIFICATIONTYPE_HIGH&&!this.contactService.userContact.alertNotificationEnabledForMyCompany)this.playImNotif();else if(typeNotif!==NotificationType.NOTIFICATIONTYPE_LOW&&typeNotif!==NotificationType.NOTIFICATIONTYPE_MIDDLE||this.shouldPlayImNotif()){switch(typeNotif){case NotificationType.NOTIFICATIONTYPE_LOW:imSoundAudio=this.informationImSoundAudio,imSoundAudioSecondary=this.informationImSoundAudioSecondary;break;case NotificationType.NOTIFICATIONTYPE_MIDDLE:imSoundAudio=this.importantImSoundAudio,imSoundAudioSecondary=this.importantImSoundAudioSecondary;break;case NotificationType.NOTIFICATIONTYPE_HIGH:this.emergencyImSoundAudio&&this.emergencyImSoundAudio.pause(),this.emergencyImSoundAudio=new Audio("/assets/sounds/notifs/"+this.emergencyImSound+this.audioFileType),this.emergencyImSoundAudio.currentTime=0,this.profileService.isFeatureEnabled(this.profileService.FeaturesEnum.ALERT_NOTIFICATIONS_ALLOWED)&&(this.emergencyImSoundAudio.loop=!0),imSoundAudio=this.emergencyImSoundAudio,imSoundAudioSecondary=this.emergencyImSoundAudioSecondary;break;default:return void this.playImNotif()}if("true"===this.settingsService.getSetting("hasSecondRinger"))try{await this.deviceManagementService.setSetSinkIdForAudioElement(imSoundAudioSecondary,this.deviceManagementService.getCurrentSecondaryOutputDevice()),imSoundAudioSecondary.play()}catch(error){}try{await this.deviceManagementService.setSetSinkIdForAudioElement(imSoundAudio,this.deviceManagementService.getCurrentAudioOutputDevice()),imSoundAudio.play()}catch(error){}}else this.logger.info("[ringingService] playCustomNotif  -- ignored")}async startRingBackTone(isWebrtcCall){if(isWebrtcCall&&this.stopWebrtcSounds)this.logger.info("[ringingService] startRingBackTone is blocked for webrtc calls...");else if(this.ringbackTone&&this.ringbackTone.stopDefered&&(this.logger.info("[ringingService] startRingBackTone: cancel defered stop operation"),clearTimeout(this.ringbackTone.stopDefered),this.ringbackTone.stopDefered=void 0),this.ringbackTone&&this.ringbackTone.audio&&this.ringbackTone.audio.paused&&!this.ringbackTone.starting){this.logger.info("[ringingService] startRingBackTone currently paused"),this.ringbackTone.starting=!0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.ringbackTone.audio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.play(this.ringbackTone)}catch(error){}}else this.logger.info("[ringingService] startRingBackTone -- nothing to do (already starting or playing)")}stopRingBackTone(count=1){if(this.logger.debug("[ringingService] stopRingBackTone -- count = "+count),this.ringbackTone){if(this.ringbackTone.starting)return void(this.ringbackTone.stopDefered?this.logger.debug("[ringingService] stopRingBackTone: nothing to do : stop already defered"):(this.logger.debug("[ringingService] stopRingBackTone: tone still starting: defer stop 1s later"),this.ringbackTone.stopDefered=setTimeout(()=>{this.stopRingBackToneDefered(count)},1e3)));this.ringbackTone.stopDefered=void 0,this.ringbackTone.audio&&!this.ringbackTone.audio.paused?(this.logger.info("[ringingService] stopRingBackTone: tone is playing: stop it"),this.ringbackTone.audio.pause(),this.ringbackTone.audio.currentTime=0,this.ringbackTone.audio.load()):this.logger.debug("[ringingService] stopRingBackTone: nothing to do : tone is already stopped")}}async startIncomingRinging(isWebrtcCall=!1){if(isWebrtcCall&&this.stopWebrtcSounds)this.logger.info("[ringingService] startIncomingRinging is blocked for webrtc calls...");else if(this.logger.info("[ringingService] startIncomingRinging -- Request already in progress = "+this.isStartIncomingRingingRequest),this.incomingRingingTone&&this.incomingRingingTone.stopDefered&&(this.logger.info("[ringingService] startIncomingRinging: cancel defered stop operation"),clearTimeout(this.incomingRingingTone.stopDefered),this.incomingRingingTone.stopDefered=void 0),!this.isStartIncomingRingingRequest&&(this.incomingRingingTone&&this.incomingRingingTone.audio||this.incomingRingingSecondaryTone&&this.incomingRingingSecondaryTone.audio)){if(this.logger.info("[ringingService] startIncomingRinging currently paused"),this.isStartIncomingRingingRequest=!0,"true"===this.settingsService.getSetting("hasSecondRinger")){this.incomingRingingSecondaryTone.starting=!0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.incomingRingingSecondaryTone.audio,this.deviceManagementService.getCurrentSecondaryOutputDevice()),this.logger.info("[ringingService] startIncomingRinging secondary device -- play"),this.play(this.incomingRingingSecondaryTone)}catch(error){}}if(!("true"===this.settingsService.getSetting("hasSecondRinger")&&"true"===this.settingsService.getSetting("toneOnSecondaryRingerOnly")))try{this.incomingRingingTone.starting=!0,await this.deviceManagementService.setSetSinkIdForAudioElement(this.incomingRingingTone.audio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.info("[ringingService] startIncomingRinging main device -- play"),this.play(this.incomingRingingTone)}catch(error){}}else this.logger.info("[ringingService] startIncomingRinging -- nothing to do (already starting or playing)")}stopIncomingRinging(count=1){if(this.logger.debug("[ringingService] stopIncomingRinging -- count = "+count),this.isStartIncomingRingingRequest=!1,this.incomingRingingTone){if(this.incomingRingingTone.starting)return void(this.incomingRingingTone.stopDefered?this.logger.debug("[ringingService] stopIncomingRinging: nothing to do : stop already defered"):(this.logger.debug("[ringingService] stopIncomingRinging: tone still starting: defer stop 1s later"),this.incomingRingingTone.stopDefered=setTimeout(()=>{this.stopIncomingRingingDefered(count)},1e3)));this.incomingRingingTone.stopDefered=void 0,this.incomingRingingTone.audio&&!this.incomingRingingTone.audio.paused?(this.logger.info("[ringingService] stopIncomingRinging: tone is playing: stop it"),this.incomingRingingTone.audio.pause(),this.incomingRingingTone.audio.currentTime=0):this.logger.debug("[ringingService] stopIncomingRinging: nothing to do : tone is already stopped")}if(this.incomingRingingSecondaryTone){if(this.incomingRingingSecondaryTone.starting)return void(this.incomingRingingSecondaryTone.stopDefered?this.logger.debug("[ringingService] stopIncomingRinging: nothing to do : secondary stop already defered"):(this.logger.debug("[ringingService] stopIncomingRinging: secondary tone still starting: defer stop 1s later"),this.incomingRingingSecondaryTone.stopDefered=setTimeout(()=>{this.stopIncomingRingingSecondaryDefered(count)},1e3)));this.incomingRingingSecondaryTone.stopDefered=void 0,this.incomingRingingSecondaryTone.audio&&!this.incomingRingingSecondaryTone.audio.paused?(this.logger.info("[ringingService] stopIncomingRinging: secondary tone is playing: stop it"),this.incomingRingingSecondaryTone.audio.pause(),this.incomingRingingSecondaryTone.audio.currentTime=0):this.logger.debug("[ringingService] stopIncomingRinging: nothing to do : secondary tone is already stopped")}}async playSecondCallTone(){if(this.settingsService.getBooleanSetting("disableWaitingCallTone"))this.logger.info("[ringingService] playSecondCallTone -- disableWaitingCallTone is TRUE, user has disabled second ringing");else if(this.logger.info("[ringingService] playSecondCallTone..."),this.incomingRingingTone&&this.incomingRingingTone.audio)if(this.secondCallTone&&this.secondCallTone.stopDefered&&(this.logger.info("[ringingService] playSecondCallTone: cancel defered stop operation"),clearTimeout(this.secondCallTone.stopDefered),this.secondCallTone.stopDefered=void 0),this.secondCallTone&&this.secondCallTone.audio&&this.secondCallTone.audio.paused&&!this.secondCallTone.starting){this.secondCallTone.starting=!0,this.secondCallTone.audio.currentTime=0,this.secondCallTone.audio.volume=.5;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.secondCallTone.audio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.info("[ringingService] playSecondCallTone play"),this.play(this.secondCallTone)}catch(error){}}else this.logger.info("[ringingService] playSecondCallTone -- nothing to do (already starting or playing)");else this.logger.info("[ringingService] playSecondCallTone -- ignored as settings is disabled")}stopSecondCallTone(){if(this.logger.debug("[ringingService] stopSecondCallTone"),this.secondCallTone){if(this.secondCallTone.starting)return void(this.secondCallTone.stopDefered?this.logger.debug("[ringingService] stopSecondCallTone: nothing to do : stop already defered"):(this.logger.debug("[ringingService] stopSecondCallTone: tone still starting: defer stop 1s later"),this.secondCallTone.stopDefered=setTimeout(()=>{this.stopSecondToneDefered()},1e3)));this.secondCallTone.stopDefered=void 0,this.secondCallTone.audio&&!this.secondCallTone.audio.paused?(this.logger.info("[ringingService] stopSecondCallTone: tone is playing: stop it"),this.secondCallTone.audio.pause(),this.secondCallTone.audio.currentTime=0):this.logger.debug("[ringingService] stopSecondCallTone: nothing to do : tone is already stopped")}}async playHoldTone(){if(this.logger.info("[ringingService] playHoldTone..."),this.holdTone&&this.holdTone.stopDefered&&(this.logger.info("[ringingService] playHoldTone: cancel defered stop operation"),clearTimeout(this.holdTone.stopDefered),this.holdTone.stopDefered=void 0),this.holdTone&&this.holdTone.audio&&this.holdTone.audio.paused&&!this.holdTone.starting){this.holdTone.starting=!0,this.holdTone.audio.currentTime=0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.holdTone.audio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.info("[ringingService] playHoldTone play"),this.play(this.holdTone)}catch(error){}}else this.logger.info("[ringingService] playHoldTone -- nothing to do (already starting or playing)")}stopHoldTone(){if(this.logger.debug("[ringingService] stopHoldTone"),this.holdTone){if(this.holdTone.starting)return void(this.holdTone.stopDefered?this.logger.debug("[ringingService] stopHoldTone: nothing to do : stop already defered"):(this.logger.debug("[ringingService] stopHoldTone: tone still starting: defer stop 1s later"),this.holdTone.stopDefered=setTimeout(()=>{this.stopHoldToneDefered()},1e3)));this.holdTone.stopDefered=void 0,this.holdTone.audio&&!this.holdTone.audio.paused?(this.logger.info("[ringingService] stopHoldTone: tone is playing: stop it"),this.holdTone.audio.pause(),this.holdTone.audio.currentTime=0):this.logger.debug("[ringingService] stopHoldTone: nothing to do : tone is already stopped")}}async playImNotif(){if(this.stopWebrtcSounds)this.logger.info("[ringingService] playImNotif is blocked...");else if(this.shouldPlayImNotif()){if(this.settingsService.getSetting("imSound")&&this.pingAudio){if(this.pingAudio.currentTime=0,this.pingAudioSecondary.currentTime=0,"true"===this.settingsService.getSetting("hasSecondRinger"))try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.pingAudioSecondary,this.deviceManagementService.getCurrentSecondaryOutputDevice()),this.logger.info("[ringingService] playImNotif -- play Secondary"),this.pingAudioSecondary.play()}catch(error){}try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.pingAudio,this.deviceManagementService.getCurrentAudioOutputDevice()),this.logger.info("[ringingService] playImNotif -- play Main"),this.pingAudio.play()}catch(error){}}}else this.logger.info("[ringingService] playImNotif  -- ignored")}async playRecordTone(){this.logger.info("[ringingService] playRecordTone"),this.recordTone.currentTime=0;try{await this.deviceManagementService.setSetSinkIdForAudioElement(this.recordTone,this.deviceManagementService.getCurrentAudioOutputDevice()),this.recordTone.play()}catch(error){}}stopIncomingWebrtcSounds(){this.stopWebrtcSounds=!0}}exports.RingingService=RingingService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class CallLog{constructor(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall,calledNumber){this.count=0,this.editable=!1,this.isMissed=!1,this.isNotAnswered=!1,this.id=id,this.contact=contact,this.state=state,this.durationInfos=duration,this.type=type,this.read=read,this.date=date,this.direction=direction,this.callSubject=callSubject,this.isLatestCall=isLatestCall,this.calledNumber=calledNumber,this.type="unknown"===type||"audio"===type||"webrtc"===type?CallLog.Type.WEBRTC:"telephone"===type?CallLog.Type.TELEPHONE:CallLog.Type.CONFERENCE,this.directoryContactId=null}static create(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall,calledNumber=null){return new CallLog(id,contact,state,duration,type,read,date,direction,callSubject,isLatestCall,calledNumber)}static getDate(callLog){return callLog&&callLog.date?callLog.date.getTime():0}updateCallLogDisplayInfo(grouped=!1){"incoming"===this.direction?(this.svgClass="missed"===this.state?"missed":"active",this.svgId="call_made","forwarded"===this.state?(this.svgId="call_missed",this.title="incomingCallForwarded"):this.title="incommingCall","missed"===this.state&&(this.title=grouped&&this.count>1?"missedCalls":"missedCall")):(this.svgId="call_received",this.title="outgoingCall",this.svgClass="active","missed"===this.state&&(this.svgClass=""))}static getNames(callLog){let firstname="",lastname="",date=null;return callLog&&callLog.contact&&(firstname=callLog.contact.firstname.toUpperCase(),lastname=callLog.contact.lastname.toUpperCase(),date=callLog.date?callLog.date.getTime():null),{firstname:firstname,lastname:lastname,date:date}}static sortByContact(callLogA,callLogB){let res=-1;if(callLogA&&callLogA.value.lastname&&callLogB&&callLogB.value.lastname){let str1=callLogA.value.lastname,str2=callLogB.value.lastname;res=str1.localeCompare(str2),0===res&&(str1=callLogA.value.firstname,str2=callLogB.value.firstname,res=str1.localeCompare(str2),0===res&&callLogB.value.date&&callLogA.value.date&&(res=callLogB.value.date-callLogA.value.date))}return res}static sortByDate(callLogA,callLogB){let res=1;return callLogA&&callLogB&&(res=callLogB.value-callLogA.value),res}}CallLog.Type={WEBRTC:"webrtc",TELEPHONE:"telephone",CONFERENCE:"conference"},exports.CallLog=CallLog},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class TelephonyMode{constructor(){this.currentMode=TelephonyMode.modeType.NOTELEPHONY,this.changeModePossible=!1,this.computerModeAvailable=!1,this.officePhoneModeAvailable=!1,this.mobileProModeAvailable=!1,this.mobilePersoModeAvailable=!1,this.phonePersoModeAvailable=!1,this.otherPhoneModeAvailable=!1}static create(){return new TelephonyMode}getData(){return JSON.stringify({currentMode:this.currentMode,changeModePossible:this.changeModePossible,computerModeAvailable:this.computerModeAvailable,officePhoneModeAvailable:this.officePhoneModeAvailable,mobileProModeAvailable:this.mobileProModeAvailable,mobilePersoModeAvailable:this.mobilePersoModeAvailable,phonePersoModeAvailable:this.phonePersoModeAvailable,otherPhoneModeAvailable:this.otherPhoneModeAvailable})}setFromData(telephonyMode,telephonyModeData){telephonyModeData.currentMode&&(telephonyMode.currentMode=telephonyModeData.currentMode),telephonyModeData.changeModePossible&&(telephonyMode.changeModePossible=telephonyModeData.changeModePossible),telephonyModeData.computerModeAvailable&&(telephonyMode.computerModeAvailable=telephonyModeData.computerModeAvailable),telephonyModeData.officePhoneModeAvailable&&(telephonyMode.officePhoneModeAvailable=telephonyModeData.officePhoneModeAvailable),telephonyModeData.mobileProModeAvailable&&(telephonyMode.mobileProModeAvailable=telephonyModeData.mobileProModeAvailable),telephonyModeData.mobilePersoModeAvailable&&(telephonyMode.mobilePersoModeAvailable=telephonyModeData.mobilePersoModeAvailable),telephonyModeData.phonePersoModeAvailable&&(telephonyMode.phonePersoModeAvailable=telephonyModeData.phonePersoModeAvailable),telephonyModeData.otherPhoneModeAvailable&&(telephonyMode.otherPhoneModeAvailable=telephonyModeData.otherPhoneModeAvailable)}}TelephonyMode.modeType={NOTELEPHONY:"noTelephony",COMPUTER:"computer",OFFICEPHONE:"officePhone",MOBILEPRO:"mobilePro",MOBILEPERSO:"mobilePerso",PHONEPERSO:"phonePerso",OTHERPHONE:"otherPhone",HELP:"help",CALLWARN:"callWarn",VOICEMAIL:"voicemail",NOFORWARD:"noForward",CONTACT:"contact"},exports.TelephonyMode=TelephonyMode},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class ForwardMode{constructor(){this.currentMode=ForwardMode.modeType.NOFORWARD,this.changeModePossible=!1,this.destination="",this.mobileProModeAvailable=!1,this.mobilePersoModeAvailable=!1,this.phonePersoModeAvailable=!1,this.voiceMailModeAvailable=!1,this.otherPhoneModeAvailable=!1}static create(){return new ForwardMode}getData(){return JSON.stringify({currentMode:this.currentMode,changeModePossible:this.changeModePossible,destination:this.destination})}setFromData(forwardMode,forwardModeData){forwardModeData.currentMode&&(forwardMode.currentMode=forwardModeData.currentMode),forwardModeData.changeModePossible&&(forwardMode.changeModePossible=forwardModeData.changeModePossible),forwardModeData.destination&&(forwardMode.destination=forwardModeData.destination),forwardModeData.voiceMailModeAvailable&&(forwardMode.voiceMailModeAvailable=forwardModeData.voiceMailModeAvailable),forwardModeData.mobileProModeAvailable&&(forwardMode.mobileProModeAvailable=forwardModeData.mobileProModeAvailable),forwardModeData.mobilePersoModeAvailable&&(forwardMode.mobilePersoModeAvailable=forwardModeData.mobilePersoModeAvailable),forwardModeData.phonePersoModeAvailable&&(forwardMode.phonePersoModeAvailable=forwardModeData.phonePersoModeAvailable),forwardModeData.otherPhoneModeAvailable&&(forwardMode.otherPhoneModeAvailable=forwardModeData.otherPhoneModeAvailable)}}ForwardMode.modeType={NOFORWARD:"noForward",MOBILEPRO:"mobilePro",MOBILEPERSO:"mobilePerso",PHONEPERSO:"phonePerso",OTHERPHONE:"otherPhone",VOICEMAIL:"voicemail"},ForwardMode.conditionalForwardType={IMMEDIATE:"immediate",BUSY:"busy",NOREPLY:"noreply"},exports.ForwardMode=ForwardMode},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.default=class{constructor(message,code){this.message=message,this.code=code}}},function(module,exports,__webpack_require__){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}Object.defineProperty(exports,"__esModule",{value:!0}),__export(__webpack_require__(493));const _services=__webpack_require__(340),_models=__webpack_require__(150);exports.services=_services,exports.models=_models,__export(__webpack_require__(340)),__export(__webpack_require__(150)),exports.default={services:_services,models:_models}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const moment=__webpack_require__(1);__webpack_require__(494);const win=window;win.moment=moment,win.moduleIds=[];const rxjs_1=__webpack_require__(7),rainbowLaunchConfig_1=__webpack_require__(495),event_model_1=__webpack_require__(19),auth_service_1=__webpack_require__(8),xmpp_service_1=__webpack_require__(9),main_service_1=__webpack_require__(15),event_service_1=__webpack_require__(11),logger_service_1=__webpack_require__(4),settings_service_1=__webpack_require__(18);class RainbowSDK{constructor(){this.started=!1,this.starting=!1,this.subscriptions=[],this.launchConfiguration=null,this.rxSubject=new rxjs_1.Subject,this.authService=auth_service_1.AuthService.getInstance(),this.settingsService=settings_service_1.SettingsService.getInstance(),this.mainService=main_service_1.MainService.getInstance(),this.eventService=event_service_1.EventService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.SDKCORE_SERVICES_STARTED="SDKCORE_SERVICES_STARTED",this.settingsService.configure("en"),this.settingsService.setSetting("apiMode","rainbow"),this.mainService.configure(),this.eventService.configure()}static initialize(options){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.rainbowSDK||(logger_service_1.LoggerService.getInstance().info("[RainbowSDK] initialize"),win.rainbow.rainbowSDK=new RainbowSDK,options&&options.plugins&&options.plugins.forEach(plugin=>{plugin.initialize()})),win.rainbow.rainbowSDK}subscribe(handler){return this.rxSubject.subscribe(handler)}async login(login,password){try{if(this.started||this.starting)return;this.logger.infoBlue("[SDKCore] === STARTING ==="),this.servicesEventListeners(),await this.authService.logon(login,password,!0,null),await this.startServices(),this.logger.infoBlue("[SDKCore] === STARTED ===")}catch(error){this.logger.error(`[SDKCore] === STARTINg FAILURE (${error.message}) ===`)}}async logout(){return this.stopServices()}async startServices(){try{this.launchConfiguration=rainbowLaunchConfig_1.RainbowLaunchConfig.create(),this.started||this.starting||(this.starting=!0,this.logger.infoBlue("[SDKCore] === START SERVICES ==="),await this.executeActions(this.launchConfiguration.getStartServices()),this.logger.infoBlue("[SDKCore] === START SERVICES SUCCESS ==="))}catch(error){throw this.logger.infoBlue("[SDKCore] === START SERVICES FAILURE === "+error.message),this.started=!0,this.starting=!1,error}}async stopServices(reason="logout"){try{this.started&&(this.logger.infoBlue("[SDKCore] === STOPPING SERVICES ==="),this.authService.logout(),await this.executeActions(this.launchConfiguration.getStopServices()),this.started=!1,this.logger.infoBlue("[SDKCore] === STOP SERVICES SUCCESS ==="),this.rxSubject.next(event_model_1.RBEvent.create(this.SDKCORE_SERVICES_STARTED,{started:!1,reason:reason})),this.subscriptions.forEach(subscription=>{subscription.unsubscribe()}),this.subscriptions=[])}catch(error){throw this.logger.infoBlue("[SDKCore] === STOP SERVICES FAILURE === : "+error.message),this.started=!1,error}}servicesEventListeners(){this.subscriptions.push(this.xmppService.subscribeToConnectionEvents(event=>{this.onXmppConnectionEvent(event)}))}onXmppConnectionEvent(event){(this.started||this.starting)&&("ON_XMPP_CONNECTED"===event.name&&"RECONNECTION"===event.data.reason?this.reconnectServices():"ON_XMPP_DISCONNECTED"===event.name&&(this.logger.infoOrange("[SDKCore] === DISCONNECTED ==="),event.data.reason&&"3RD_PARTY_CHANGE_PWD"===event.data.reason?this.stopServices("3RD_PARTY_CHANGE_PWD"):event.data.reason&&"CHANGE_PWD_ERROR"===event.data.reason&&this.stopServices("CHANGE_PWD_ERROR")))}async reconnectServices(attempt=0){if(this.xmppService.connected){if(attempt>=3)return this.logger.warn("[SDKCore] reconnectServices -- too many attemps, go to login"),void await this.stopServices();try{this.logger.infoOrange("[SDKCore] === RECONNECT SERVICES === attempt "+attempt),await this.executeActions(this.launchConfiguration.getReconnectServices()),this.logger.infoOrange("[SDKCore] === RECONNECT SERVICES SUCCESS === attempt "+attempt)}catch(error){this.logger.infoRed("[SDKCore] === RECONNECT SERVICES FAILURE === "+error.message),this.reconnectServices(++attempt)}}else this.logger.warn("[SDKCore] reconnectServices -- we are currently disconnected")}async executeActions(actionsList){const filteredList=actionsList.filter(service=>"ignore"!==service.name);await filteredList.reduce(async(promise,service,index)=>{if(await promise,"launcherService"===service.name)return"start"===service.action&&(this.started=!0,this.starting=!1,this.rxSubject.next(event_model_1.RBEvent.create(this.SDKCORE_SERVICES_STARTED,!0))),Promise.resolve();const serviceObject=this.mainService.inject(service.name);if(!serviceObject)return Promise.resolve();const deps=service.deps?service.deps.map(dep=>"string"==typeof dep?this[dep]:"boolean"==typeof dep||"object"==typeof dep?dep:null):null;try{return service.noWait?await(async()=>{serviceObject[service.action].apply(serviceObject,deps)})():await serviceObject[service.action].apply(serviceObject,deps)}catch(error){if(service.notBlocking)return Promise.resolve();throw error}},Promise.resolve())}}exports.RainbowSDK=RainbowSDK},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),__webpack_require__(103),__webpack_require__(155),__webpack_require__(332),__webpack_require__(333),__webpack_require__(334),__webpack_require__(335),__webpack_require__(336),__webpack_require__(337),__webpack_require__(338),__webpack_require__(339)},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class RainbowLaunchConfig{constructor(){}static create(){return new RainbowLaunchConfig}getStartServices(){return[{name:"xmppService",action:"start"},{name:"countryService",action:"start"},{name:"contactService",action:"start"},{name:"profileService",action:"start"},{name:"invitationService",action:"start"},{name:"fileServerService",action:"start"},{name:"fileStorageService",action:"start"},{name:"roomService",action:"start"},{name:"roomContainerService",action:"start"},{name:"groupService",action:"start"},{name:"virtualBackgroundService",action:"start"},{name:"webrtcGlobalEventHandlerService",action:"start"},{name:"webrtcP2PService",action:"start"},{name:config.webinar?"webinarService":"ignore",action:"start",deps:["conversationService"]},{name:"webConferenceServiceV2",action:"start"},{name:"remoteDesktopControlService",action:"start"},{name:"calendarService",action:"start",deps:["conversationService"]},{name:"pgiConferenceService",action:"start"},{name:"webConferenceService",action:"start"},{name:"botService",action:"start"},{name:"conversationService",action:"start",deps:["webConferenceService"]},{name:"directoryService",action:"start"},{name:"contactService",action:"sendPresenceFromConfiguration",deps:[!0]},{name:"mainService",action:"configure",deps:["centralizedService"]},{name:"favoriteService",action:"start"},{name:"ringingService",action:"start"},{name:"callLogService",action:"start",notBlocking:!0,noWait:!0},{name:"companyInvitationService",action:"start"},{name:"adminService",action:"start"},{name:"updateService",action:"start",deps:["rainbowService"]},{name:"conferenceService",action:"start"},{name:"webrtcP2PRecordingService",action:"start"},{name:"channelService",action:"start"},{name:"voiceMessageService",action:"start"},{name:"rainbowTvService",action:"start"},{name:"themesService",action:"start"},{name:"keyboardListenerService",action:"start",notBlocking:!0},{name:"personalRoutinesService",action:"start",notBlocking:!0},{name:"extensionService",action:"start"},{name:"launcherService",action:"start"},{name:"telephonyService",action:"start"},{name:"presenceHelperService",action:"start"},{name:"deviceManagementService",action:"start"},{name:"webrtcGatewayService",action:"start"},{name:"ccdAgentService",action:"start"},{name:"telephonyKeysService",action:"start"},{name:"telephonyKeysVoiceService",action:"start"},{name:"supervisionService",action:"start"},{name:"sfuCallAreaService",action:"start",notBlocking:!0,noWait:!0},{name:"location911Service",action:"start",notBlocking:!0,noWait:!0},{name:"telephonyAbstractService",action:"start"},{name:"dialInService",action:"start",notBlocking:!0,noWait:!0},{name:"personalDirectoryService",action:"start"},{name:"storeService",action:"start"},{name:"helpCenterService",action:"start"},{name:"storeService",action:"start",notBlocking:!0,noWait:!0},{name:"teamsControlService",action:"start",notBlocking:!0,noWait:!0}]}getStopServices(){return[{name:config.webinar?"webinarService":"ignore",action:"stop",deps:[!0]},{name:"webrtcP2PService",action:"stop"},{name:"webrtcGlobalEventHandlerService",action:"stop"},{name:"remoteDesktopControlService",action:"stop"},{name:"directoryService",action:"stop"},{name:"conversationService",action:"stop"},{name:"botService",action:"stop"},{name:"groupService",action:"stop"},{name:"telephonyService",action:"stop"},{name:"calendarService",action:"stop"},{name:"xmppService",action:"stop"},{name:"invitationService",action:"stop"},{name:"ringingService",action:"stop"},{name:"companyInvitationService",action:"stop"},{name:"adminService",action:"stop"},{name:"pgiConferenceService",action:"stop"},{name:"themesService",action:"stop"},{name:"profileService",action:"stop"},{name:"webConferenceService",action:"stop"},{name:"conferenceService",action:"stop"},{name:"webrtcGatewayService",action:"stop"},{name:"webrtcP2PRecordingService",action:"stop"},{name:"channelService",action:"stop"},{name:"webConferenceServiceV2",action:"stop"},{name:"roomService",action:"stop"},{name:"roomContainerService",action:"stop"},{name:"virtualBackgroundService",action:"stop"},{name:"fileStorageService",action:"stop"},{name:"countryService",action:"stop"},{name:"voiceMessageService",action:"stop"},{name:"rainbowTvService",action:"stop"},{name:"favoriteService",action:"stop"},{name:"updateService",action:"stop"},{name:"ccdAgentService",action:"stop"},{name:"telephonyKeysService",action:"stop"},{name:"telephonyKeysVoiceService",action:"stop"},{name:"supervisionService",action:"stop"},{name:"keyboardListenerService",action:"stop"},{name:"telephonyAbstractService",action:"stop"},{name:"deviceManagementService",action:"stop"},{name:"presenceHelperService",action:"stop"},{name:"personalRoutinesService",action:"stop"},{name:"location911Service",action:"stop"},{name:"contactService",action:"stop"},{name:"sfuCallAreaService",action:"stop"},{name:"teamsControlService",action:"stop"},{name:"dialInService",action:"stop"},{name:"callLogService",action:"stop"},{name:"personalDirectoryService",action:"stop"},{name:"storeService",action:"stop"},{name:"helpCenterService",action:"stop"}]}getReconnectServices(activeConversationId){return[{name:"conversationService",action:"reconnect",noWait:!0},{name:"telephonyService",action:"reconnect",noWait:!0},{name:"roomService",action:"reconnect",noWait:!0},{name:"webrtcGlobalEventHandlerService",action:"reconnect",noWait:!0},{name:config.webinar?"webinarService":"ignore",action:"reconnect",noWait:!0},{name:"webConferenceServiceV2",action:"reconnect",noWait:!0},{name:"roomContainerService",action:"reconnect",noWait:!0},{name:"groupService",action:"reconnect",noWait:!0},{name:"contactService",action:"reconnect",noWait:!0},{name:"invitationService",action:"reconnect",noWait:!0},{name:"companyInvitationService",action:"reconnect",noWait:!0},{name:"webrtcP2PService",action:"reconnect",noWait:!0},{name:"remoteDesktopControlService",action:"reconnect",noWait:!0},{name:"pgiConferenceService",action:"reconnect",noWait:!0},{name:"adminService",action:"reconnect",noWait:!0},{name:"conferenceService",action:"reconnect",noWait:!0},{name:"calendarService",action:"reconnect",noWait:!0},{name:"fileServerService",action:"reconnect",noWait:!0},{name:"channelService",action:"reconnect",noWait:!0},{name:"profileService",action:"reconnect",noWait:!0},{name:"voiceMessageService",action:"reconnect",noWait:!0},{name:"ccdAgentService",action:"reconnect",noWait:!0},{name:"telephonyKeysService",action:"reconnect",noWait:!0},{name:"telephonyKeysVoiceService",action:"reconnect",noWait:!0},{name:"supervisionService",action:"reconnect",noWait:!0},{name:"telephonyAbstractService",action:"reconnect",noWait:!0},{name:"fileStorageService",action:"reinit",deps:[!1]},{name:"conversationService",action:"reinit"},{name:"favoriteService",action:"connect",noWait:!0},{name:"contactService",action:"resendInitialPresenceOnReconnect"},{name:"keyboardListenerService",action:"reconnect"},{name:"location911Service",action:"reconnect",noWait:!0},{name:"virtualBackgroundService",action:"reconnect",noWait:!0},{name:"personalRoutinesService",action:"reconnect",noWait:!0},{name:"dialInService",action:"reconnect",noWait:!0}]}}exports.RainbowLaunchConfig=RainbowLaunchConfig},function(module,exports,__webpack_require__){"use strict";function __export(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}Object.defineProperty(exports,"__esModule",{value:!0}),__export(__webpack_require__(8)),__export(__webpack_require__(122)),__export(__webpack_require__(6)),__export(__webpack_require__(497)),__export(__webpack_require__(114)),__export(__webpack_require__(11)),__export(__webpack_require__(38)),__export(__webpack_require__(64)),__export(__webpack_require__(4)),__export(__webpack_require__(15)),__export(__webpack_require__(13)),__export(__webpack_require__(498)),__export(__webpack_require__(500)),__export(__webpack_require__(25)),__export(__webpack_require__(18)),__export(__webpack_require__(58)),__export(__webpack_require__(9))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class Core{constructor(){this.SDKCORE_SERVICES_STARTED="SDKCORE_SERVICES_STARTED"}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.core||(win.rainbow.core=new Core),win.rainbow.core}}exports.Core=Core},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),room_container_model_1=__webpack_require__(499),contact_service_1=__webpack_require__(6),Subject_1=__webpack_require__(77),xmpp_service_1=__webpack_require__(9);class RoomContainerService{constructor(){this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/",this._roomContainers=[],this.userContact=null,this.listeners=[],this.rxSubject=new Subject_1.Subject,this.roomMessageConfigRef=null}get roomContainers(){return this._roomContainers}set roomContainers(value){this._roomContainers=value}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.roomContainerService||(win.rainbow.roomContainerService=new RoomContainerService),win.rainbow.roomContainerService}async start(){try{if(this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/",this.userContact=this.contactService.userContact,this.userContact&&!this.userContact.roomsEnabled)return void this.logger.info("[RoomContainerService] === Start skipped - roomsEnabled : false");this.logger.info(""),this.logger.info("[RoomContainerService] === STARTING ==="),this.attachHandlers(),await this.retrieveAllContainersFromServer(),this.logger.info("[RoomContainerService] === STARTED ===")}catch(error){this.logger.error("[RoomContainerService] === STARTING FAILURE === "+error.message),this.reconnect()}}async stop(){this.logger.info(""),this.logger.info("[RoomContainerService] === STOPPING ==="),this.listeners.forEach(listener=>{listener()}),this.roomContainers=[],this.userContact=null,this.logger.info("[RoomContainerService] === STOPPED ===")}attachHandlers(){this.logger.info("[RoomContainerService] attachHandlers"),this.roomMessageConfigRef&&(this.xmppService.connection.deleteHandler(this.roomMessageConfigRef),this.roomMessageConfigRef=null),this.roomMessageConfigRef=this.xmppService.connection.addHandler(stanza=>this.onRoomMessageConfig(stanza),null,"message","management")}async reconnect(attempt=0){if(!this.userContact||this.userContact.roomsEnabled)try{this.logger.info("[RoomContainerService] reconnect"),attempt++,this.attachHandlers(),await this.retrieveAllContainersFromServer(),this.logger.info("[RoomContainerService] reconnect success")}catch(error){this.logger.error("[RoomContainerService] reconnect failure -- "+error.message),1===attempt&&this.reconnect(attempt)}else this.logger.info("[RoomContainerService] === Reconnect skipped - roomsEnabled : false")}async onRoomMessageConfig(stanza){try{const stanzaElem=$(stanza),roomscontainerElem=stanzaElem.find("roomscontainer");if("management"===stanzaElem.attr("type")&&roomscontainerElem.length>0){this.logger.debug("[RoomContainerService] onRoomMessageConfig -- management roomscontainer event");const containerId=roomscontainerElem.attr("containerid"),containerName=roomscontainerElem.attr("name"),containerDesc=roomscontainerElem.attr("description");switch(roomscontainerElem.attr("action")){case"update":{const addedRooms=[],addedElem=roomscontainerElem.find("added");addedElem.length&&addedElem.find("roomid").each((__index,roomIdElem)=>{roomIdElem&&addedRooms.push(roomIdElem.textContent)});const removedRooms=[],removedElem=roomscontainerElem.find("removed");removedElem.length&&removedElem.find("roomid").each((__index,roomIdElem)=>{roomIdElem&&removedRooms.push(roomIdElem.textContent)}),this.updateContainerFromList(containerId,containerName,containerDesc,addedRooms,removedRooms);break}case"create":{if(this.getContainerById(containerId))return!0;const addedRooms=[],addedElem=roomscontainerElem.find("added");addedElem.length&&addedElem.find("roomid").each((__index,roomIdElem)=>{roomIdElem&&addedRooms.push(roomIdElem.textContent)}),this.addContainerToList(containerId,containerName,containerDesc,addedRooms);break}case"delete":this.removeContainerFromList(containerId)}}return!0}catch(error){return this.logger.info("[RoomContainerService] onRoomMessageConfig  -- failure -- "+error.message),!0}}subscribe(handler){return this.rxSubject.subscribe(handler)}getContainerById(containerId){let containerIndex=-1;return this.roomContainers.some((roomContainer,index)=>roomContainer.id===containerId&&(containerIndex=index,!0)),containerIndex>-1?this.roomContainers[containerIndex]:null}getContainerIndexById(containerId){let containerIndex=-1;return this.roomContainers.some((roomContainer,index)=>roomContainer.id===containerId&&(containerIndex=index,!0)),containerIndex}getContainerByName(name){let containerIndex=-1;return this.roomContainers.some((roomContainer,index)=>roomContainer.name===name&&(containerIndex=index,!0)),containerIndex>-1?this.roomContainers[containerIndex]:null}findContainersByName(searchedContainer,exactMatch=!1){if(!searchedContainer){throw new Error("[RoomContainerService] findContainersByName -- no folder to search")}return this.roomContainers.filter(roomContainer=>!(exactMatch||!roomContainer.name.includes(searchedContainer))||roomContainer.name===searchedContainer)}removeContainerFromList(containerId){let containerIndex=-1;this.roomContainers.some((roomContainer,index)=>roomContainer.id===containerId&&(containerIndex=index,!0)),containerIndex>-1&&(this.roomContainers.splice(containerIndex,1),this.rxSubject.next({action:"delete",containerId:containerId}))}addContainerToList(containerId,containerName,containerDesc="",rooms=[]){let container=this.getContainerById(containerId);return container||(container=room_container_model_1.RoomContainer.create(containerId,containerName,containerDesc,rooms),this.roomContainers.push(container),this.rxSubject.next({action:"add",containerId:container.id}),container)}updateContainerFromList(containerId,containerName,containerDescription="",addedRooms=[],removedRooms=[]){const containerIndex=this.getContainerIndexById(containerId);return containerIndex>-1&&(this.roomContainers[containerIndex].name!==containerName&&(this.roomContainers[containerIndex].renameContainer(containerName),this.rxSubject.next({action:"updateName",containerId:containerId})),this.roomContainers[containerIndex].changeContainerDescription(containerDescription),this.rxSubject.next({action:"updateDescription",containerId:containerId}),addedRooms.length&&this.roomContainers[containerIndex].addRooms(addedRooms),removedRooms.length&&this.roomContainers[containerIndex].removeRooms(removedRooms),(addedRooms.length||removedRooms.length)&&this.rxSubject.next({action:"updateRooms",containerId:containerId})),null}async createContainer(name,description="",roomIds=[]){try{if(!name)throw new Error("[RoomContainerService] createContainer -- no name ");if(this.getContainerByName(name))throw new Error("[RoomContainerService] createContainer -- container with the same name already exists");const url=this.portalURL+"rooms/containers/",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"POST",headers:headers,body:JSON.stringify({name:name,description:description,rooms:roomIds})});if(!response.ok)throw response;const containerdata=(await response.json()).data,container=this.addContainerToList(containerdata.id,containerdata.name,containerdata.description,containerdata.rooms?containerdata.rooms.added:[]);return this.logger.debug("[RoomContainerService] createContainer -- SUCCESS -- \n "+container.toString()),container}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"createContainer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async addRoomsToContainer(containerId,roomIds=[]){try{if(!containerId||!roomIds.length)throw new Error("[RoomContainerService] addRoomsToContainer -- no containerId or no roomIds");const container=this.getContainerById(containerId);if(container){const url=`${this.portalURL}rooms/containers/${containerId}/add`,headers=this.authService.getPostHeader();this.logger.debug(`[RoomContainerService] addRoomsToContainer -- adding  -- \n ${roomIds.toString()} to ${containerId}`);const response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({rooms:roomIds})});if(!response.ok)throw response;const containerdata=(await response.json()).data;return containerdata.rooms&&containerdata.rooms.addedRooms&&container.addRooms(containerdata.rooms.addedRooms),this.logger.debug("[RoomContainerService] addRoomsToContainer -- SUCCESS -- \n "+container.toString()),containerdata}throw new Error(`[RoomContainerService] addRoomsToContainer -- container ${containerId} does not exists`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"addRoomsToContainer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async editContainerData(containerId,newName="",newDescription=""){try{if(!containerId||!newName)throw new Error("[RoomContainerService] editContainerData -- no containerId or no newName");const container=this.getContainerById(containerId);if(container){const url=`${this.portalURL}rooms/containers/${containerId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({name:newName,description:newDescription})});if(!response.ok)throw response;const containerdata=(await response.json()).data;return container.renameContainer(containerdata.name),container.changeContainerDescription(containerdata.description),this.rxSubject.next({action:"update",containerId:containerId}),this.logger.debug("[RoomContainerService] editContainerData -- SUCCESS -- \n "+container.toString()),containerdata}throw new Error(`[RoomContainerService] editContainerData -- container ${containerId} does not exists`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"editContainerData");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async deleteContainer(containerId){try{if(!containerId)throw new Error("[RoomContainerService] deleteContainer -- no containerId ");if(this.getContainerById(containerId)){const url=`${this.portalURL}rooms/containers/${containerId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers});if(!response.ok)throw response;const containerdata=(await response.json()).data;return this.removeContainerFromList(containerdata.id),this.logger.debug("[RoomContainerService] deleteContainer -- SUCCESS -- "),containerdata}throw new Error(`[RoomContainerService] deleteContainer -- container ${containerId} does not exists`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteContainer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async retrieveAllContainersFromServer(updateLocalData=!0){try{const url=this.portalURL+"rooms/containers",headers=this.authService.getRequestHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const containerdata=(await response.json()).data,roomContainers=[];return containerdata.length&&(containerdata.forEach(roomContainer=>{roomContainers.push(room_container_model_1.RoomContainer.create(roomContainer.id,roomContainer.name,roomContainer.description,roomContainer.rooms))}),updateLocalData&&(this.roomContainers=[],this.roomContainers=roomContainers,this.rxSubject.next({action:"updateAll"}))),this.logger.debug("[RoomContainerService] retrieveAllContainersFromServer -- SUCCESS -- "),roomContainers}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveAllContainersFromServer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async retrieveContainerFromServer(containerId){try{if(!containerId)throw new Error("[RoomContainerService] retrieveContainerFromServer -- no containerId ");const url=`${this.portalURL}rooms/containers/${containerId}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const containerdata=(await response.json()).data;return this.logger.debug("[RoomContainerService] retrieveContainerFromServer -- SUCCESS -- "),containerdata}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveContainerFromServer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}async removeRoomsFromContainer(containerId,roomIds=[]){try{if(!containerId||!roomIds.length)throw new Error("[RoomContainerService] removeRoomsFromContainer -- no containerId or no roomIds");const container=this.getContainerById(containerId);if(container){const url=`${this.portalURL}rooms/containers/${containerId}/remove`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({rooms:roomIds})});if(!response.ok)throw response;const containerdata=(await response.json()).data;return containerdata.rooms&&containerdata.rooms.removedRooms&&container.removeRooms(containerdata.rooms.removedRooms),this.logger.debug("[RoomContainerService] removeRoomsFromContainer -- SUCCESS -- \n "+container.toString()),container}throw new Error(`[RoomContainerService] removeRoomsFromContainer -- container ${containerId} does not exists`)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"removeRoomsFromContainer");throw this.logger.error("[RoomContainerService] "+errorInfo.message),errorInfo.error}}}exports.RoomContainerService=RoomContainerService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const Subject_1=__webpack_require__(77);class RoomContainer{constructor(id,name,description="",rooms=[]){this._id="",this._name="",this._description="",this._rooms=new Set,this.rxSubject=new Subject_1.Subject,this._id=id,this._name=name,this._description=description,rooms.forEach(roomId=>{this._rooms.add(roomId)})}get id(){return this._id}get name(){return this._name}get description(){return this._description}get rooms(){return this._rooms}static create(id,name,description="",rooms=[]){return new RoomContainer(id,name,description,rooms)}toString(){return`Room container ${this._id} - ${this._name} with ${this._rooms.size} rooms: ${[...this._rooms].join(", ")}`}subscribe(handler){return this.rxSubject.subscribe(handler)}renameContainer(newName){this._name=newName,this.rxSubject.next({action:"updateName",data:this._name})}changeContainerDescription(newDesc){this._description=newDesc,this.rxSubject.next({action:"updateDescription",data:this._description})}removeRooms(roomIds){roomIds.forEach(roomId=>{this._rooms.delete(roomId)}),this.rxSubject.next({action:"updateRooms",data:this._rooms})}addRooms(roomIds){roomIds.forEach(roomId=>{this._rooms.add(roomId)}),this.rxSubject.next({action:"updateRooms",data:this._rooms})}replaceRooms(roomIds){this._rooms.clear(),roomIds.forEach(roomId=>{this._rooms.add(roomId)}),this.rxSubject.next({action:"updateRooms",data:this._rooms})}}exports.RoomContainer=RoomContainer},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),room_service_1=__webpack_require__(25),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12);class RoomTagService{constructor(){this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.roomService=room_service_1.RoomService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.portalURL=config.restServerUrl+"/api/rainbow/enduser/v1.0/"}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.roomTagService||(win.rainbow.roomTagService=new RoomTagService),win.rainbow.roomTagService}async setRoomTags(roomId,tagList){try{const room=this.roomService.rooms[roomId];if(!room||!tagList||tagList.length<1){throw new Error("[RoomTagService] setRoomTags -- no room or tagList empty/undefined")}const url=`${this.portalURL}rooms/${roomId}/tags`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({tags:tagList})});if(!response.ok)throw response;const roomTagsData=(await response.json()).data;return room.tags=roomTagsData.tags,this.roomService.sendEvent(this.roomService.ROOM_UPDATE_EVENT,room),this.logger.debug("[RoomTagService] setRoomTags -- SUCCESS -- "),roomTagsData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"setRoomTags");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}async resetRoomTags(roomId){try{const url=`${this.portalURL}rooms/${roomId}/tags`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify({tags:[]})});if(!response.ok)throw response;const roomTagsData=(await response.json()).data,room=this.roomService.rooms[roomId];return this.roomService.sendEvent(this.roomService.ROOM_UPDATE_EVENT,room),this.logger.debug("[RoomTagService] resetRoomTags -- SUCCESS -- "),roomTagsData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"resetRoomTags");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}async searchServerRoomsByTag(tag){try{if(!tag)throw new Error("[RoomTagService] searchServerRoomsByTag -- no tag to search");const url=`${this.portalURL}rooms/tags?tag=${tag}`,headers=this.authService.getPostHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const roomTagsData=(await response.json()).data;return this.logger.debug("[RoomTagService] searchServerRoomsByTag -- SUCCESS -- "),roomTagsData.rooms}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"searchServerRoomsByTag");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}findRoomsByTag(searchedTag,exactMatch=!1){try{if(!searchedTag){throw new Error("[RoomTagService] findRoomsByTag -- no tag to search")}const foundRooms=[];return Object.keys(this.roomService.rooms).forEach(key=>{const room=this.roomService.rooms[key];room&&room.tags.forEach(tagElem=>{(exactMatch||!tagElem.tag.toLowerCase().includes(searchedTag.toLowerCase())||foundRooms.some(addedRoom=>addedRoom.dbId===room.dbId))&&(tagElem.tag!==searchedTag||foundRooms.some(addedRoom=>addedRoom.dbId===room.dbId))||foundRooms.push(room)})}),foundRooms}catch(error){const err=new Error("[RoomTagService] findRoomsByTag -- Issue with search");throw this.logger.error(err.message),err}}extractRoomsByTag(rooms,searchedTag,exactMatch=!1){try{if(!searchedTag){throw new Error("[RoomTagService] extractRoomsByTag -- no tag to search")}if(!rooms||0===rooms.length){throw new Error("[RoomTagService] extractRoomsByTag -- no rooms to search")}const foundRooms=[];return rooms.forEach(room=>{room.tags.forEach(tagElem=>{(exactMatch||!tagElem.tag.toLowerCase().includes(searchedTag.toLowerCase())||foundRooms.some(addedRoom=>addedRoom.dbId===room.dbId))&&(tagElem.tag!==searchedTag||foundRooms.some(addedRoom=>addedRoom.dbId===room.dbId))||foundRooms.push(room)})}),foundRooms}catch(error){const err=new Error("[RoomTagService] extractRoomsByTag -- Issue with search");throw this.logger.error(err.message),err}}async deleteTagFromRooms(tag,roomIds){try{if(!tag||!roomIds||roomIds.length<1)throw new Error("[RoomTagService] deleteTagFromRooms -- no tag or no room");const url=this.portalURL+"rooms/tags",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"DELETE",headers:headers,body:JSON.stringify({tag:tag,rooms:roomIds})});if(!response.ok)throw response;const roomTagsData=(await response.json()).data;return this.logger.debug("[RoomTagService] deleteTagFromRooms -- SUCCESS -- "),roomTagsData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"deleteTagFromRooms");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}async renameTagFromRooms(tag,newTagName,roomIds,color="#ff9900"){try{if(!tag||!newTagName)throw new Error("[RoomTagService] renameTagFromRooms -- no tag or no new tag");const url=this.portalURL+"rooms/tags",headers=this.authService.getPostHeader(),body={tag:tag,newTagName:newTagName,color:color};roomIds&&roomIds.length&&(body.rooms=roomIds);const response=await fetch(url,{method:"PUT",headers:headers,body:JSON.stringify(body)});if(!response.ok)throw response;const roomTagsData=(await response.json()).data;return this.logger.debug("[RoomTagService] renameTagFromRooms -- SUCCESS -- "),roomTagsData}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"renameTagFromRooms");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}async retrieveAllTags(){try{const url=this.portalURL+"rooms/tags/all",headers=this.authService.getPostHeader(),response=await fetch(url,{method:"GET",headers:headers});if(!response.ok)throw response;const roomTagsData=(await response.json()).data;return this.roomService.roomTags=roomTagsData.tags,this.logger.debug("[RoomTagService] retrieveAllTags -- SUCCESS -- "+this.roomService.roomTags),roomTagsData.tags}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"retrieveAllTags");throw this.logger.error("[RoomTagService] "+errorInfo.message),errorInfo.error}}getTagColor(tag){try{if(!tag){throw new Error("[RoomTagService] getTagColor -- no tag to search")}let color="#ff9900";return Object.keys(this.roomService.rooms).some(key=>{const room=this.roomService.rooms[key];return!!room&&room.tags.some(tagElem=>tagElem.tag===tag&&(color=tagElem.color?tagElem.color:"#ff9900",!0))}),color}catch(error){const err=new Error("[RoomTagService] getTagColor -- Issue with find");throw this.logger.error(err.message),err}}}exports.RoomTagService=RoomTagService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),function(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}(__webpack_require__(12))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),function(m){for(var p in m)exports.hasOwnProperty(p)||(exports[p]=m[p])}(__webpack_require__(34))},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.InvitationSDK=class{constructor(invitation){this.id=invitation.id,this.invitedUserId=invitation.invitedUserId,this.invitedUserEmail=invitation.invitedUserEmail,this.invitedUserPhoneNumber=invitation.invitedUserPhoneNumber,this.invitingUserId=invitation.invitingUserId,this.invitingUserEmail=invitation.invitingUserEmail,this.date=invitation.invitingDate,this.status=invitation.status}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_sdk_1=__webpack_require__(152);exports.CallSDK=class{constructor(call){this.isVm=!1,this.remoteMedia=0,this.localMedia=0,this.startDate=Date,this.isInitiator=!1,this.participants=null,this.isMuted=!1,this.globalCallId=null,this.correlatorData=null,this.id=call.id,this.status=call.status,this.conversationId=call.conversationId,this.type=call.type,this.isVm=call.isVm,this.contact=call.contact?new contact_sdk_1.ContactSDK(call.contact):"",this.remoteMedia=call.remoteMedia,this.localMedia=call.localMedia,this.startDate=call.startDate,this.isInitiator=call.isInitiator,this.participants=call.participants?call.participants.map(contact=>{if(contact)return new contact_sdk_1.ContactSDK(contact)}):null,this.isMuted=call.isMuted,this.globalCallId=call.globalCallId,this.correlatorData=call.correlatorData}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.ChannelSDK=class{constructor(channel){this.id=channel.id,this.name=channel.name,this.visibility=channel.visibility,this.topic=channel.topic,this.creatorId=channel.creatorId,this.companyId=channel.companyId,this.creationDate=channel.creationDate,this.usersCount=channel.usersCount,this.avatar=channel.avatar,this.lastAvatarUpdateDate=channel.lastAvatarUpdateDate,this.userRole=channel.userRole,this.messages=channel.messages,this.subscribed=channel.subscribed,this.deleted=channel.deleted,this.invited=channel.invited,this.category=channel.category,this.users=channel.users,this.subscribersCount=channel.subscribers_count,this.messagesCount=channel.messagesCount}}},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const logger_service_1=__webpack_require__(4),auth_service_1=__webpack_require__(8),errorHelper_service_1=__webpack_require__(12),fileStorage_service_1=__webpack_require__(34),contact_service_1=__webpack_require__(6),rxjs_1=__webpack_require__(7),event_model_1=__webpack_require__(19),xmpp_service_1=__webpack_require__(9);class SdkApis{constructor(startRecording=null,pauseRecording=null,resumeRecording=null,stopRecording=null,getConferenceRecordingFiles=null,getSharedWithMeConferenceRecordingFiles=null,deleteConferenceRecordingFile=null,getConferenceRecordingAssociatedFiles=null){this.startRecording=startRecording,this.pauseRecording=pauseRecording,this.resumeRecording=resumeRecording,this.stopRecording=stopRecording,this.getConferenceRecordingFiles=getConferenceRecordingFiles,this.getSharedWithMeConferenceRecordingFiles=getSharedWithMeConferenceRecordingFiles,this.deleteConferenceRecordingFile=deleteConferenceRecordingFile,this.getConferenceRecordingAssociatedFiles=getConferenceRecordingAssociatedFiles}}class ConferenceRecordingService{constructor(){this.RAINBOW_ONWEBCONFERENCERECORDINGREADY="rainbowonwebconferencerecordingready",this.logger=logger_service_1.LoggerService.getInstance(),this.authService=auth_service_1.AuthService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance(),this.fileStorageService=fileStorage_service_1.FileStorageService.getInstance(),this.xmppService=xmpp_service_1.XmppService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.time=0,this.timeMinutes=0,this.timeHours=0,this.timer=null,this.conferenceRecordingFilesFetched=!1,this.sharedWithMeConferenceRecordingFilesFetched=!1,this.subscription=null,this.rxSubject=new rxjs_1.Subject,this.conferenceRecordingFilesInProgress=[],this.conferenceRecordingFetchPromise=null,this._sdkApis=Object.keys(new SdkApis),this.xmppService.connected&&this.attachHandlers(),this.subscription=this.xmppService.subscribeToConnectionEvents(event=>{this.onConnectionStateChangeEvent(event)})}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.conferenceRecordingService||(win.rainbow.conferenceRecordingService=new ConferenceRecordingService),win.rainbow.conferenceRecordingService}attachHandlers(){this.removeHandlers(),this.messageHandlerRef=this.xmppService.addHandler(stanza=>(setTimeout(()=>{this.onManagementMessageReceived(stanza)},250),!0),null,"message","management")}removeHandlers(){this.messageHandlerRef&&(this.xmppService.deleteHandler(this.messageHandlerRef),this.messageHandlerRef=null)}onConnectionStateChangeEvent(event){"ON_XMPP_DISCONNECTED"===event.name?"LOGOUT"===event.data.reason&&(this.removeHandlers(),this.sharedWithMeConferenceRecordingFilesFetched=!1,this.conferenceRecordingFilesFetched=!1):"ON_XMPP_CONNECTED"===event.name&&this.attachHandlers()}onManagementMessageReceived(stanza){try{const stanzaElem=$(stanza);return stanzaElem.find("recordingfile").length>0&&this.manageRecordingStanzaData(stanzaElem),!0}catch(error){return this.logger.error("[ConferenceRecordingService] onManagementMessageReceived ERROR "+error),!0}}async manageRecordingStanzaData(stanzaElem){const stanza=stanzaElem.find("recordingfile"),recordingFileId=stanzaElem[0]&&stanzaElem[0].firstChild&&stanzaElem[0].firstChild.id?stanzaElem[0].firstChild.id:null;if(this.logger.info("[ConferenceRecordingService] onRecordingFileReceived"),stanza.find("status")&&"release_complete"!==stanza.find("status").text())return void(recordingFileId&&-1===this.conferenceRecordingFilesInProgress.indexOf(recordingFileId)&&(this.conferenceRecordingFilesInProgress.push(recordingFileId),this.conferenceRecordingFilesFetched=!1,await this.getConferenceRecordingFiles()));this.logger.info("[ConferenceRecordingService] - manage recording files"),recordingFileId&&this.conferenceRecordingFilesInProgress.indexOf(recordingFileId)>-1&&this.conferenceRecordingFilesInProgress.splice(this.conferenceRecordingFilesInProgress.indexOf(recordingFileId),1);const recordingFilesStanza=$(stanza).find("records").find("recordingfile");if(recordingFilesStanza){let fileToShare=null;const roomId=$(stanza[0]).find("roomid").text();for(let i=0;i<recordingFilesStanza.length;i++){const fileId=$(recordingFilesStanza[i]).find("fileid").text(),typeMime=$(recordingFilesStanza[i]).find("typemime").text(),fileDesc=await this.fileStorageService.retrieveAndStoreOneFileDescriptor(fileId,!0);this.logger.info("[ConferenceRecordingService] ConferenceRecordingFile retrieved"),fileDesc.ownerId!==this.contactService.userContact.dbId&&this.fileStorageService.retrieveUserConsumption(),"video/mp4"===typeMime&&(fileToShare=fileDesc)}await this.fileStorageService.getRecordingFilesFromServer(),this.sendEvent(this.RAINBOW_ONWEBCONFERENCERECORDINGREADY,{roomDbId:roomId,fileDescriptor:fileToShare})}}subscribe(handler){return this.rxSubject.subscribe(handler)}sendEvent(name,data=null){this.rxSubject.next(event_model_1.RBEvent.create(name,data))}async startRecording(conferenceSession){try{if(this.logger.debug("[ConferenceRecordingService] startRecording"),!conferenceSession||!conferenceSession.id)throw Error("Wrong or missing parameters");const consumptionData=this.fileStorageService.getConsumptionData();if(consumptionData.maxValue-consumptionData.currentValue<=0)throw Error("Not enough storage space");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${conferenceSession.id}/start-recording`,method="PUT",headers=this.authService.getPostHeader(),response=await fetch(url,{method:method,headers:headers});if(!response.ok)throw response;return conferenceSession.record.isRecording=!0,conferenceSession.record.recordingIsPaused=!1,this.logger.info("[ConferenceRecordingService] startRecording -- successfully"),conferenceSession}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"startRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async pauseRecording(conferenceSession){try{if(this.logger.debug("[ConferenceRecordingService] pauseRecording"),!conferenceSession||!conferenceSession.id)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${conferenceSession.id}/pause-recording`,method="PUT",headers=this.authService.getPostHeader(),response=await fetch(url,{method:method,headers:headers});if(!response.ok)throw response;return conferenceSession.record.isRecording=!0,conferenceSession.record.recordingIsPaused=!0,this.logger.info("[ConferenceRecordingService] pauseRecording -- successfully"),conferenceSession}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"pauseRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async resumeRecording(conferenceSession){try{if(this.logger.debug("[ConferenceRecordingService] resumeRecording"),!conferenceSession||!conferenceSession.id)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${conferenceSession.id}/resume-recording`,method="PUT",headers=this.authService.getPostHeader(),response=await fetch(url,{method:method,headers:headers});if(!response.ok)throw response;return conferenceSession.record.isRecording=!0,conferenceSession.record.recordingIsPaused=!1,this.logger.info("[ConferenceRecordingService] resumeRecording -- successfully"),conferenceSession}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"resumeRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async stopRecording(conferenceSession){try{if(this.logger.debug("[ConferenceRecordingService] stopRecording"),!conferenceSession||!conferenceSession.id)throw Error("Wrong or missing parameters");const url=`${config.restServerUrl}/api/rainbow/conference/v1.0/rooms/${conferenceSession.id}/stop-recording`,method="PUT",headers=this.authService.getPostHeader(),response=await fetch(url,{method:method,headers:headers});if(!response.ok)throw response;return conferenceSession.record.isRecording=!1,conferenceSession.record.recordingIsPaused=!1,this.logger.info("[ConferenceRecordingService] stopRecording -- successfully"),conferenceSession}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async getConferenceRecordingFiles(){return this.logger.info("[ConferenceRecordingService] getConferenceRecordingFiles"),this.conferenceRecordingFilesFetched||this.conferenceRecordingFetchPromise?!this.conferenceRecordingFilesFetched&&this.conferenceRecordingFetchPromise?this.conferenceRecordingFetchPromise:this.fileStorageService.getRecordingFiles():(this.conferenceRecordingFetchPromise=this.fetchConferenceRecordingFiles(),this.conferenceRecordingFetchPromise)}async fetchConferenceRecordingFiles(){try{this.logger.info("[ConferenceRecordingService] fetchConferenceRecordingFiles");const recordingFiles=await this.fileStorageService.getRecordingFilesFromServer();return this.conferenceRecordingFilesFetched=!0,this.conferenceRecordingFetchPromise=null,recordingFiles}catch(error){this.conferenceRecordingFilesFetched=!1,this.conferenceRecordingFetchPromise=null;const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async getSharedWithMeConferenceRecordingFiles(){return this.logger.info("[ConferenceRecordingService] getSharedWithMeConferenceRecordingFiles"),this.sharedWithMeConferenceRecordingFilesFetched?this.fileStorageService.getSharedWithMeConferenceRecordingFiles():await this.fetchSharedWithMeConferenceRecordingFiles()}async fetchSharedWithMeConferenceRecordingFiles(){try{return this.logger.info("[ConferenceRecordingService] fetchSharedWithMeConferenceRecordingFiles"),this.sharedWithMeConferenceRecordingFilesFetched=!0,await this.fileStorageService.getSharedWithMeConferenceRecordingFilesFromServer()}catch(error){this.sharedWithMeConferenceRecordingFilesFetched=!1;const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async deleteConferenceRecordingFile(conferenceRecordingFileId){try{if(!conferenceRecordingFileId)throw new Error("[ConferenceRecordingService] deleteConferenceRecordingFile - ERROR: no conferenceRecordingFileId");return this.logger.info("[ConferenceRecordingService] deleteConferenceRecordingFile"),await this.fileStorageService.deleteConferenceRecordingFile(conferenceRecordingFileId)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}async getConferenceRecordingAssociatedFiles(conferenceRecordingFile){try{if(!conferenceRecordingFile)throw new Error("[ConferenceRecordingService] getConferenceRecordingAssociatedFiles - ERROR: no conferenceRecordingFile");return this.logger.info("[ConferenceRecordingService] getConferenceRecordingAssociatedFiles"),await this.fileStorageService.getConferenceRecordingAssociatedFiles(conferenceRecordingFile)}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"stopRecording");throw this.logger.error(errorInfo.message),errorInfo.error}}startTimer(){this.timer=setInterval(async()=>{this.time++,this.time%60==0&&(this.time=0,this.timeMinutes++,this.timeMinutes%60==0&&(this.timeMinutes=0,this.timeHours++))},1e3)}clearTimer(){clearInterval(this.timer),this.time=0,this.timeMinutes=0,this.timeHours=0}getTime(){return{hours:this.timeHours,minutes:this.timeMinutes,seconds:this.time}}setTime(hours,minutes,seconds){this.time=seconds,this.timeMinutes=minutes,this.timeHours=hours}isMyRecord(conferenceSession){return conferenceSession.recordingUserId===this.contactService.userContact.dbId}}exports.ConferenceRecordingService=ConferenceRecordingService},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const contact_service_1=__webpack_require__(6),auth_service_1=__webpack_require__(8),logger_service_1=__webpack_require__(4),errorHelper_service_1=__webpack_require__(12);class SuggestionsService{constructor(){this.authService=auth_service_1.AuthService.getInstance(),this.logger=logger_service_1.LoggerService.getInstance(),this.contactService=contact_service_1.ContactService.getInstance(),this.errorHelperService=errorHelper_service_1.ErrorHelperService.getInstance()}static getInstance(){const win=window;return win.rainbow||(win.rainbow={}),win.rainbow.suggestionsService||(win.rainbow.suggestionsService=new SuggestionsService),win.rainbow.suggestionsService}async getSuggestedContacts(nbSuggestions=50,format="small"){const serverUrl=`${config.restServerUrl}/api/rainbow/suggestions/v1.0/suggestions?nbSuggestions=${nbSuggestions}&format=${format}`,headers=this.authService.getRequestHeader();try{const response=await fetch(serverUrl,{headers:headers});if(!response.ok)throw response;const suggestedContacts=(await response.json()).data.map(contactData=>{const suggestedContact=this.contactService.createContact();return suggestedContact.updateFromUserData(contactData),suggestedContact.getAvatar(),suggestedContact});return this.logger.info(`[SuggestionsService] getSuggestedContact success -- find ${suggestedContacts.length} suggested contact(s)`),suggestedContacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getIssuesList");throw this.logger.error(errorInfo.message),errorInfo.error}}async getSuggestedContactsLargeCompany(excludeIds=[],limit=20,offset=0,department=!1,jobtitle=!1,tags=!1,more=!1,format="small"){let serverUrl=`${config.restServerUrl}/api/rainbow/suggestions/v1.0/suggestions?limit=${limit}&offset=${offset}&format=${format}`;department&&(serverUrl+="&department=true"),jobtitle&&(serverUrl+="&jobtitle=true"),tags&&(serverUrl+="&tags=true"),more&&(serverUrl+="&more=true");const headers=this.authService.getPostHeader();try{const response=await fetch(serverUrl,{method:"POST",headers:headers,body:JSON.stringify({excludeIds:excludeIds})});if(!response.ok)throw response;const data=await response.json();let suggestedContacts,sameDepartmentContacts=[],sameJobTitleContacts=[],sameTagsContacts=[],otherContacts=[];return data.data.department||data.data.jobTitle||data.data.tags||data.data.more?(data.data.department&&(sameDepartmentContacts=data.data.department.map(contactData=>this.manageContact(contactData))),data.data.jobTitle&&(sameJobTitleContacts=data.data.jobTitle.map(contactData=>this.manageContact(contactData)),sameDepartmentContacts.length>0&&(sameJobTitleContacts=this.clearDuplicateInSecondArray(sameDepartmentContacts,sameJobTitleContacts))),data.data.tags&&(sameTagsContacts=data.data.tags.map(contactData=>this.manageContact(contactData)),sameDepartmentContacts.length>0&&(sameTagsContacts=this.clearDuplicateInSecondArray(sameDepartmentContacts,sameTagsContacts)),sameJobTitleContacts.length>0&&(sameTagsContacts=this.clearDuplicateInSecondArray(sameJobTitleContacts,sameTagsContacts))),data.data.more&&(otherContacts=data.data.more.map(contactData=>this.manageContact(contactData)),sameDepartmentContacts.length>0&&(otherContacts=this.clearDuplicateInSecondArray(sameDepartmentContacts,otherContacts)),sameJobTitleContacts.length>0&&(otherContacts=this.clearDuplicateInSecondArray(sameJobTitleContacts,otherContacts)),sameTagsContacts.length>0&&(otherContacts=this.clearDuplicateInSecondArray(sameTagsContacts,otherContacts))),suggestedContacts={department:sameDepartmentContacts,jobTitle:sameJobTitleContacts,tags:sameTagsContacts,more:otherContacts}):suggestedContacts=data.data.map(contactData=>this.manageContact(contactData)),this.logger.info(`[SuggestionsService] getSuggestedContactsLargeCompany success -- find ${suggestedContacts.length} suggested contact(s)`),suggestedContacts}catch(error){const errorInfo=await this.errorHelperService.getErrorInfo(error,"getSuggestedContactsLargeCompany");throw this.logger.error(errorInfo.message),errorInfo.error}}clearDuplicateInSecondArray(firstArray,secondArray){const jidCompare=firstArray.map(contact=>contact.jid);return secondArray.filter(contact=>!jidCompare.some(item=>item===contact.jid))}manageContact(contactData){const suggestedContact=this.contactService.createContact();return suggestedContact.updateFromUserData(contactData),suggestedContact.getAvatar(),suggestedContact}}exports.SuggestionsService=SuggestionsService},function(module,exports){Strophe.addNamespace("RSM","http://jabber.org/protocol/rsm"),Strophe.RSM=function(options){if(this.attribs=["max","first","last","after","before","index","count"],void 0!==options.xml)this.fromXMLElement(options.xml);else for(let ii=0;ii<this.attribs.length;ii++){const attrib=this.attribs[ii];this[attrib]=options[attrib]}},Strophe.RSM.prototype={toXML:function(){let xml=$build("set",{xmlns:Strophe.NS.RSM});for(let ii=0;ii<this.attribs.length;ii++){const attrib=this.attribs[ii];void 0!==this[attrib]&&(xml=xml.c(attrib).t(this[attrib].toString()).up())}return xml.tree()},next:function(max){return new Strophe.RSM({max:max,after:this.last})},previous:function(max){return new Strophe.RSM({max:max,before:this.first})},fromXMLElement:function(xmlElement){for(let ii=0;ii<this.attribs.length;ii++){const attrib=this.attribs[ii],elem=xmlElement.getElementsByTagName(attrib)[0];null!=elem&&(this[attrib]=Strophe.getText(elem),"first"==attrib&&(this.index=elem.getAttribute("index")))}}}},function(module,exports){"randomUUID"in crypto||(crypto.randomUUID=()=>([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,cryp=>(cryp^crypto.getRandomValues(new Uint8Array(1))[0]&15>>cryp/4).toString(16)))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var tslib_es6=__webpack_require__(0),innerSubscribe=__webpack_require__(3);function audit(durationSelector){return function(source){return source.lift(new AuditOperator(durationSelector))}}var AuditOperator=function(){function AuditOperator(durationSelector){this.durationSelector=durationSelector}return AuditOperator.prototype.call=function(subscriber,source){return source.subscribe(new audit_AuditSubscriber(subscriber,this.durationSelector))},AuditOperator}(),audit_AuditSubscriber=function(_super){function AuditSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;return _this.durationSelector=durationSelector,_this.hasValue=!1,_this}return tslib_es6.a(AuditSubscriber,_super),AuditSubscriber.prototype._next=function(value){if(this.value=value,this.hasValue=!0,!this.throttled){var duration=void 0;try{duration=(0,this.durationSelector)(value)}catch(err){return this.destination.error(err)}var innerSubscription=Object(innerSubscribe.c)(duration,new innerSubscribe.a(this));!innerSubscription||innerSubscription.closed?this.clearThrottle():this.add(this.throttled=innerSubscription)}},AuditSubscriber.prototype.clearThrottle=function(){var value=this.value,hasValue=this.hasValue,throttled=this.throttled;throttled&&(this.remove(throttled),this.throttled=void 0,throttled.unsubscribe()),hasValue&&(this.value=void 0,this.hasValue=!1,this.destination.next(value))},AuditSubscriber.prototype.notifyNext=function(){this.clearThrottle()},AuditSubscriber.prototype.notifyComplete=function(){this.clearThrottle()},AuditSubscriber}(innerSubscribe.b),scheduler_async=__webpack_require__(16),timer=__webpack_require__(121);function auditTime(duration,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),audit((function(){return Object(timer.a)(duration,scheduler)}))}function buffer_buffer(closingNotifier){return function(source){return source.lift(new BufferOperator(closingNotifier))}}var BufferOperator=function(){function BufferOperator(closingNotifier){this.closingNotifier=closingNotifier}return BufferOperator.prototype.call=function(subscriber,source){return source.subscribe(new buffer_BufferSubscriber(subscriber,this.closingNotifier))},BufferOperator}(),buffer_BufferSubscriber=function(_super){function BufferSubscriber(destination,closingNotifier){var _this=_super.call(this,destination)||this;return _this.buffer=[],_this.add(Object(innerSubscribe.c)(closingNotifier,new innerSubscribe.a(_this))),_this}return tslib_es6.a(BufferSubscriber,_super),BufferSubscriber.prototype._next=function(value){this.buffer.push(value)},BufferSubscriber.prototype.notifyNext=function(){var buffer=this.buffer;this.buffer=[],this.destination.next(buffer)},BufferSubscriber}(innerSubscribe.b),Subscriber=__webpack_require__(2);function bufferCount(bufferSize,startBufferEvery){return void 0===startBufferEvery&&(startBufferEvery=null),function(source){return source.lift(new BufferCountOperator(bufferSize,startBufferEvery))}}var BufferCountOperator=function(){function BufferCountOperator(bufferSize,startBufferEvery){this.bufferSize=bufferSize,this.startBufferEvery=startBufferEvery,this.subscriberClass=startBufferEvery&&bufferSize!==startBufferEvery?bufferCount_BufferSkipCountSubscriber:bufferCount_BufferCountSubscriber}return BufferCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new this.subscriberClass(subscriber,this.bufferSize,this.startBufferEvery))},BufferCountOperator}(),bufferCount_BufferCountSubscriber=function(_super){function BufferCountSubscriber(destination,bufferSize){var _this=_super.call(this,destination)||this;return _this.bufferSize=bufferSize,_this.buffer=[],_this}return tslib_es6.a(BufferCountSubscriber,_super),BufferCountSubscriber.prototype._next=function(value){var buffer=this.buffer;buffer.push(value),buffer.length==this.bufferSize&&(this.destination.next(buffer),this.buffer=[])},BufferCountSubscriber.prototype._complete=function(){var buffer=this.buffer;buffer.length>0&&this.destination.next(buffer),_super.prototype._complete.call(this)},BufferCountSubscriber}(Subscriber.a),bufferCount_BufferSkipCountSubscriber=function(_super){function BufferSkipCountSubscriber(destination,bufferSize,startBufferEvery){var _this=_super.call(this,destination)||this;return _this.bufferSize=bufferSize,_this.startBufferEvery=startBufferEvery,_this.buffers=[],_this.count=0,_this}return tslib_es6.a(BufferSkipCountSubscriber,_super),BufferSkipCountSubscriber.prototype._next=function(value){var bufferSize=this.bufferSize,startBufferEvery=this.startBufferEvery,buffers=this.buffers,count=this.count;this.count++,count%startBufferEvery==0&&buffers.push([]);for(var i=buffers.length;i--;){var buffer=buffers[i];buffer.push(value),buffer.length===bufferSize&&(buffers.splice(i,1),this.destination.next(buffer))}},BufferSkipCountSubscriber.prototype._complete=function(){for(var buffers=this.buffers,destination=this.destination;buffers.length>0;){var buffer=buffers.shift();buffer.length>0&&destination.next(buffer)}_super.prototype._complete.call(this)},BufferSkipCountSubscriber}(Subscriber.a),isScheduler=__webpack_require__(21);function bufferTime(bufferTimeSpan){var length=arguments.length,scheduler=scheduler_async.a;Object(isScheduler.a)(arguments[arguments.length-1])&&(scheduler=arguments[arguments.length-1],length--);var bufferCreationInterval=null;length>=2&&(bufferCreationInterval=arguments[1]);var maxBufferSize=Number.POSITIVE_INFINITY;return length>=3&&(maxBufferSize=arguments[2]),function(source){return source.lift(new BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler))}}var BufferTimeOperator=function(){function BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){this.bufferTimeSpan=bufferTimeSpan,this.bufferCreationInterval=bufferCreationInterval,this.maxBufferSize=maxBufferSize,this.scheduler=scheduler}return BufferTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new bufferTime_BufferTimeSubscriber(subscriber,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler))},BufferTimeOperator}(),Context=function(){return function(){this.buffer=[]}}(),bufferTime_BufferTimeSubscriber=function(_super){function BufferTimeSubscriber(destination,bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){var _this=_super.call(this,destination)||this;_this.bufferTimeSpan=bufferTimeSpan,_this.bufferCreationInterval=bufferCreationInterval,_this.maxBufferSize=maxBufferSize,_this.scheduler=scheduler,_this.contexts=[];var context=_this.openContext();if(_this.timespanOnly=null==bufferCreationInterval||bufferCreationInterval<0,_this.timespanOnly){var timeSpanOnlyState={subscriber:_this,context:context,bufferTimeSpan:bufferTimeSpan};_this.add(context.closeAction=scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState))}else{var closeState={subscriber:_this,context:context},creationState={bufferTimeSpan:bufferTimeSpan,bufferCreationInterval:bufferCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,closeState)),_this.add(scheduler.schedule(dispatchBufferCreation,bufferCreationInterval,creationState))}return _this}return tslib_es6.a(BufferTimeSubscriber,_super),BufferTimeSubscriber.prototype._next=function(value){for(var filledBufferContext,contexts=this.contexts,len=contexts.length,i=0;i<len;i++){var context_1=contexts[i],buffer=context_1.buffer;buffer.push(value),buffer.length==this.maxBufferSize&&(filledBufferContext=context_1)}filledBufferContext&&this.onBufferFull(filledBufferContext)},BufferTimeSubscriber.prototype._error=function(err){this.contexts.length=0,_super.prototype._error.call(this,err)},BufferTimeSubscriber.prototype._complete=function(){for(var contexts=this.contexts,destination=this.destination;contexts.length>0;){var context_2=contexts.shift();destination.next(context_2.buffer)}_super.prototype._complete.call(this)},BufferTimeSubscriber.prototype._unsubscribe=function(){this.contexts=null},BufferTimeSubscriber.prototype.onBufferFull=function(context){this.closeContext(context);var closeAction=context.closeAction;if(closeAction.unsubscribe(),this.remove(closeAction),!this.closed&&this.timespanOnly){context=this.openContext();var bufferTimeSpan=this.bufferTimeSpan,timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=this.scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState))}},BufferTimeSubscriber.prototype.openContext=function(){var context=new Context;return this.contexts.push(context),context},BufferTimeSubscriber.prototype.closeContext=function(context){this.destination.next(context.buffer);var contexts=this.contexts;(contexts?contexts.indexOf(context):-1)>=0&&contexts.splice(contexts.indexOf(context),1)},BufferTimeSubscriber}(Subscriber.a);function dispatchBufferTimeSpanOnly(state){var subscriber=state.subscriber,prevContext=state.context;prevContext&&subscriber.closeContext(prevContext),subscriber.closed||(state.context=subscriber.openContext(),state.context.closeAction=this.schedule(state,state.bufferTimeSpan))}function dispatchBufferCreation(state){var bufferCreationInterval=state.bufferCreationInterval,bufferTimeSpan=state.bufferTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,context=subscriber.openContext();subscriber.closed||(subscriber.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,{subscriber:subscriber,context:context})),this.schedule(state,bufferCreationInterval))}function dispatchBufferClose(arg){var subscriber=arg.subscriber,context=arg.context;subscriber.closeContext(context)}var Subscription=__webpack_require__(10),subscribeToResult=__webpack_require__(26),OuterSubscriber=__webpack_require__(31);function bufferToggle(openings,closingSelector){return function(source){return source.lift(new BufferToggleOperator(openings,closingSelector))}}var BufferToggleOperator=function(){function BufferToggleOperator(openings,closingSelector){this.openings=openings,this.closingSelector=closingSelector}return BufferToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new bufferToggle_BufferToggleSubscriber(subscriber,this.openings,this.closingSelector))},BufferToggleOperator}(),bufferToggle_BufferToggleSubscriber=function(_super){function BufferToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;return _this.closingSelector=closingSelector,_this.contexts=[],_this.add(Object(subscribeToResult.a)(_this,openings)),_this}return tslib_es6.a(BufferToggleSubscriber,_super),BufferToggleSubscriber.prototype._next=function(value){for(var contexts=this.contexts,len=contexts.length,i=0;i<len;i++)contexts[i].buffer.push(value)},BufferToggleSubscriber.prototype._error=function(err){for(var contexts=this.contexts;contexts.length>0;){var context_1=contexts.shift();context_1.subscription.unsubscribe(),context_1.buffer=null,context_1.subscription=null}this.contexts=null,_super.prototype._error.call(this,err)},BufferToggleSubscriber.prototype._complete=function(){for(var contexts=this.contexts;contexts.length>0;){var context_2=contexts.shift();this.destination.next(context_2.buffer),context_2.subscription.unsubscribe(),context_2.buffer=null,context_2.subscription=null}this.contexts=null,_super.prototype._complete.call(this)},BufferToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue){outerValue?this.closeBuffer(outerValue):this.openBuffer(innerValue)},BufferToggleSubscriber.prototype.notifyComplete=function(innerSub){this.closeBuffer(innerSub.context)},BufferToggleSubscriber.prototype.openBuffer=function(value){try{var closingNotifier=this.closingSelector.call(this,value);closingNotifier&&this.trySubscribe(closingNotifier)}catch(err){this._error(err)}},BufferToggleSubscriber.prototype.closeBuffer=function(context){var contexts=this.contexts;if(contexts&&context){var buffer=context.buffer,subscription=context.subscription;this.destination.next(buffer),contexts.splice(contexts.indexOf(context),1),this.remove(subscription),subscription.unsubscribe()}},BufferToggleSubscriber.prototype.trySubscribe=function(closingNotifier){var contexts=this.contexts,subscription=new Subscription.a,context={buffer:[],subscription:subscription};contexts.push(context);var innerSubscription=Object(subscribeToResult.a)(this,closingNotifier,context);!innerSubscription||innerSubscription.closed?this.closeBuffer(context):(innerSubscription.context=context,this.add(innerSubscription),subscription.add(innerSubscription))},BufferToggleSubscriber}(OuterSubscriber.a);function bufferWhen(closingSelector){return function(source){return source.lift(new BufferWhenOperator(closingSelector))}}var BufferWhenOperator=function(){function BufferWhenOperator(closingSelector){this.closingSelector=closingSelector}return BufferWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new bufferWhen_BufferWhenSubscriber(subscriber,this.closingSelector))},BufferWhenOperator}(),bufferWhen_BufferWhenSubscriber=function(_super){function BufferWhenSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;return _this.closingSelector=closingSelector,_this.subscribing=!1,_this.openBuffer(),_this}return tslib_es6.a(BufferWhenSubscriber,_super),BufferWhenSubscriber.prototype._next=function(value){this.buffer.push(value)},BufferWhenSubscriber.prototype._complete=function(){var buffer=this.buffer;buffer&&this.destination.next(buffer),_super.prototype._complete.call(this)},BufferWhenSubscriber.prototype._unsubscribe=function(){this.buffer=void 0,this.subscribing=!1},BufferWhenSubscriber.prototype.notifyNext=function(){this.openBuffer()},BufferWhenSubscriber.prototype.notifyComplete=function(){this.subscribing?this.complete():this.openBuffer()},BufferWhenSubscriber.prototype.openBuffer=function(){var closingSubscription=this.closingSubscription;closingSubscription&&(this.remove(closingSubscription),closingSubscription.unsubscribe());var closingNotifier,buffer=this.buffer;this.buffer&&this.destination.next(buffer),this.buffer=[];try{closingNotifier=(0,this.closingSelector)()}catch(err){return this.error(err)}closingSubscription=new Subscription.a,this.closingSubscription=closingSubscription,this.add(closingSubscription),this.subscribing=!0,closingSubscription.add(Object(innerSubscribe.c)(closingNotifier,new innerSubscribe.a(this))),this.subscribing=!1},BufferWhenSubscriber}(innerSubscribe.b);function catchError(selector){return function(source){var operator=new CatchOperator(selector),caught=source.lift(operator);return operator.caught=caught}}var CatchOperator=function(){function CatchOperator(selector){this.selector=selector}return CatchOperator.prototype.call=function(subscriber,source){return source.subscribe(new catchError_CatchSubscriber(subscriber,this.selector,this.caught))},CatchOperator}(),catchError_CatchSubscriber=function(_super){function CatchSubscriber(destination,selector,caught){var _this=_super.call(this,destination)||this;return _this.selector=selector,_this.caught=caught,_this}return tslib_es6.a(CatchSubscriber,_super),CatchSubscriber.prototype.error=function(err){if(!this.isStopped){var result=void 0;try{result=this.selector(err,this.caught)}catch(err2){return void _super.prototype.error.call(this,err2)}this._unsubscribeAndRecycle();var innerSubscriber=new innerSubscribe.a(this);this.add(innerSubscriber);var innerSubscription=Object(innerSubscribe.c)(result,innerSubscriber);innerSubscription!==innerSubscriber&&this.add(innerSubscription)}},CatchSubscriber}(innerSubscribe.b),combineLatest=__webpack_require__(85);function combineAll(project){return function(source){return source.lift(new combineLatest.a(project))}}var isArray=__webpack_require__(17),from=__webpack_require__(23);function combineLatest_combineLatest(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];var project=null;return"function"==typeof observables[observables.length-1]&&(project=observables.pop()),1===observables.length&&Object(isArray.a)(observables[0])&&(observables=observables[0].slice()),function(source){return source.lift.call(Object(from.a)([source].concat(observables)),new combineLatest.a(project))}}var concat=__webpack_require__(59);function concat_concat(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];return function(source){return source.lift.call(concat.a.apply(void 0,[source].concat(observables)))}}var concatAll=__webpack_require__(118),mergeMap=__webpack_require__(49);function concatMap(project,resultSelector){return Object(mergeMap.b)(project,resultSelector,1)}function concatMapTo(innerObservable,resultSelector){return concatMap((function(){return innerObservable}),resultSelector)}function count_count(predicate){return function(source){return source.lift(new CountOperator(predicate,source))}}var CountOperator=function(){function CountOperator(predicate,source){this.predicate=predicate,this.source=source}return CountOperator.prototype.call=function(subscriber,source){return source.subscribe(new count_CountSubscriber(subscriber,this.predicate,this.source))},CountOperator}(),count_CountSubscriber=function(_super){function CountSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.source=source,_this.count=0,_this.index=0,_this}return tslib_es6.a(CountSubscriber,_super),CountSubscriber.prototype._next=function(value){this.predicate?this._tryPredicate(value):this.count++},CountSubscriber.prototype._tryPredicate=function(value){var result;try{result=this.predicate(value,this.index++,this.source)}catch(err){return void this.destination.error(err)}result&&this.count++},CountSubscriber.prototype._complete=function(){this.destination.next(this.count),this.destination.complete()},CountSubscriber}(Subscriber.a);function debounce(durationSelector){return function(source){return source.lift(new DebounceOperator(durationSelector))}}var DebounceOperator=function(){function DebounceOperator(durationSelector){this.durationSelector=durationSelector}return DebounceOperator.prototype.call=function(subscriber,source){return source.subscribe(new debounce_DebounceSubscriber(subscriber,this.durationSelector))},DebounceOperator}(),debounce_DebounceSubscriber=function(_super){function DebounceSubscriber(destination,durationSelector){var _this=_super.call(this,destination)||this;return _this.durationSelector=durationSelector,_this.hasValue=!1,_this}return tslib_es6.a(DebounceSubscriber,_super),DebounceSubscriber.prototype._next=function(value){try{var result=this.durationSelector.call(this,value);result&&this._tryNext(value,result)}catch(err){this.destination.error(err)}},DebounceSubscriber.prototype._complete=function(){this.emitValue(),this.destination.complete()},DebounceSubscriber.prototype._tryNext=function(value,duration){var subscription=this.durationSubscription;this.value=value,this.hasValue=!0,subscription&&(subscription.unsubscribe(),this.remove(subscription)),(subscription=Object(innerSubscribe.c)(duration,new innerSubscribe.a(this)))&&!subscription.closed&&this.add(this.durationSubscription=subscription)},DebounceSubscriber.prototype.notifyNext=function(){this.emitValue()},DebounceSubscriber.prototype.notifyComplete=function(){this.emitValue()},DebounceSubscriber.prototype.emitValue=function(){if(this.hasValue){var value=this.value,subscription=this.durationSubscription;subscription&&(this.durationSubscription=void 0,subscription.unsubscribe(),this.remove(subscription)),this.value=void 0,this.hasValue=!1,_super.prototype._next.call(this,value)}},DebounceSubscriber}(innerSubscribe.b);function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),function(source){return source.lift(new DebounceTimeOperator(dueTime,scheduler))}}var DebounceTimeOperator=function(){function DebounceTimeOperator(dueTime,scheduler){this.dueTime=dueTime,this.scheduler=scheduler}return DebounceTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new debounceTime_DebounceTimeSubscriber(subscriber,this.dueTime,this.scheduler))},DebounceTimeOperator}(),debounceTime_DebounceTimeSubscriber=function(_super){function DebounceTimeSubscriber(destination,dueTime,scheduler){var _this=_super.call(this,destination)||this;return _this.dueTime=dueTime,_this.scheduler=scheduler,_this.debouncedSubscription=null,_this.lastValue=null,_this.hasValue=!1,_this}return tslib_es6.a(DebounceTimeSubscriber,_super),DebounceTimeSubscriber.prototype._next=function(value){this.clearDebounce(),this.lastValue=value,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(dispatchNext,this.dueTime,this))},DebounceTimeSubscriber.prototype._complete=function(){this.debouncedNext(),this.destination.complete()},DebounceTimeSubscriber.prototype.debouncedNext=function(){if(this.clearDebounce(),this.hasValue){var lastValue=this.lastValue;this.lastValue=null,this.hasValue=!1,this.destination.next(lastValue)}},DebounceTimeSubscriber.prototype.clearDebounce=function(){var debouncedSubscription=this.debouncedSubscription;null!==debouncedSubscription&&(this.remove(debouncedSubscription),debouncedSubscription.unsubscribe(),this.debouncedSubscription=null)},DebounceTimeSubscriber}(Subscriber.a);function dispatchNext(subscriber){subscriber.debouncedNext()}function defaultIfEmpty(defaultValue){return void 0===defaultValue&&(defaultValue=null),function(source){return source.lift(new DefaultIfEmptyOperator(defaultValue))}}var DefaultIfEmptyOperator=function(){function DefaultIfEmptyOperator(defaultValue){this.defaultValue=defaultValue}return DefaultIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new defaultIfEmpty_DefaultIfEmptySubscriber(subscriber,this.defaultValue))},DefaultIfEmptyOperator}(),defaultIfEmpty_DefaultIfEmptySubscriber=function(_super){function DefaultIfEmptySubscriber(destination,defaultValue){var _this=_super.call(this,destination)||this;return _this.defaultValue=defaultValue,_this.isEmpty=!0,_this}return tslib_es6.a(DefaultIfEmptySubscriber,_super),DefaultIfEmptySubscriber.prototype._next=function(value){this.isEmpty=!1,this.destination.next(value)},DefaultIfEmptySubscriber.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},DefaultIfEmptySubscriber}(Subscriber.a);function isDate(value){return value instanceof Date&&!isNaN(+value)}var Notification=__webpack_require__(33);function delay_delay(delay,scheduler){void 0===scheduler&&(scheduler=scheduler_async.a);var delayFor=isDate(delay)?+delay-scheduler.now():Math.abs(delay);return function(source){return source.lift(new DelayOperator(delayFor,scheduler))}}var DelayOperator=function(){function DelayOperator(delay,scheduler){this.delay=delay,this.scheduler=scheduler}return DelayOperator.prototype.call=function(subscriber,source){return source.subscribe(new delay_DelaySubscriber(subscriber,this.delay,this.scheduler))},DelayOperator}(),delay_DelaySubscriber=function(_super){function DelaySubscriber(destination,delay,scheduler){var _this=_super.call(this,destination)||this;return _this.delay=delay,_this.scheduler=scheduler,_this.queue=[],_this.active=!1,_this.errored=!1,_this}return tslib_es6.a(DelaySubscriber,_super),DelaySubscriber.dispatch=function(state){for(var source=state.source,queue=source.queue,scheduler=state.scheduler,destination=state.destination;queue.length>0&&queue[0].time-scheduler.now()<=0;)queue.shift().notification.observe(destination);if(queue.length>0){var delay_1=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay_1)}else this.unsubscribe(),source.active=!1},DelaySubscriber.prototype._schedule=function(scheduler){this.active=!0,this.destination.add(scheduler.schedule(DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}))},DelaySubscriber.prototype.scheduleNotification=function(notification){if(!0!==this.errored){var scheduler=this.scheduler,message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message),!1===this.active&&this._schedule(scheduler)}},DelaySubscriber.prototype._next=function(value){this.scheduleNotification(Notification.a.createNext(value))},DelaySubscriber.prototype._error=function(err){this.errored=!0,this.queue=[],this.destination.error(err),this.unsubscribe()},DelaySubscriber.prototype._complete=function(){this.scheduleNotification(Notification.a.createComplete()),this.unsubscribe()},DelaySubscriber}(Subscriber.a),DelayMessage=function(){return function(time,notification){this.time=time,this.notification=notification}}(),Observable=__webpack_require__(5);function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return new delayWhen_SubscriptionDelayObservable(source,subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector))}:function(source){return source.lift(new DelayWhenOperator(delayDurationSelector))}}var DelayWhenOperator=function(){function DelayWhenOperator(delayDurationSelector){this.delayDurationSelector=delayDurationSelector}return DelayWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new delayWhen_DelayWhenSubscriber(subscriber,this.delayDurationSelector))},DelayWhenOperator}(),delayWhen_DelayWhenSubscriber=function(_super){function DelayWhenSubscriber(destination,delayDurationSelector){var _this=_super.call(this,destination)||this;return _this.delayDurationSelector=delayDurationSelector,_this.completed=!1,_this.delayNotifierSubscriptions=[],_this.index=0,_this}return tslib_es6.a(DelayWhenSubscriber,_super),DelayWhenSubscriber.prototype.notifyNext=function(outerValue,_innerValue,_outerIndex,_innerIndex,innerSub){this.destination.next(outerValue),this.removeSubscription(innerSub),this.tryComplete()},DelayWhenSubscriber.prototype.notifyError=function(error,innerSub){this._error(error)},DelayWhenSubscriber.prototype.notifyComplete=function(innerSub){var value=this.removeSubscription(innerSub);value&&this.destination.next(value),this.tryComplete()},DelayWhenSubscriber.prototype._next=function(value){var index=this.index++;try{var delayNotifier=this.delayDurationSelector(value,index);delayNotifier&&this.tryDelay(delayNotifier,value)}catch(err){this.destination.error(err)}},DelayWhenSubscriber.prototype._complete=function(){this.completed=!0,this.tryComplete(),this.unsubscribe()},DelayWhenSubscriber.prototype.removeSubscription=function(subscription){subscription.unsubscribe();var subscriptionIdx=this.delayNotifierSubscriptions.indexOf(subscription);return-1!==subscriptionIdx&&this.delayNotifierSubscriptions.splice(subscriptionIdx,1),subscription.outerValue},DelayWhenSubscriber.prototype.tryDelay=function(delayNotifier,value){var notifierSubscription=Object(subscribeToResult.a)(this,delayNotifier,value);notifierSubscription&&!notifierSubscription.closed&&(this.destination.add(notifierSubscription),this.delayNotifierSubscriptions.push(notifierSubscription))},DelayWhenSubscriber.prototype.tryComplete=function(){this.completed&&0===this.delayNotifierSubscriptions.length&&this.destination.complete()},DelayWhenSubscriber}(OuterSubscriber.a),delayWhen_SubscriptionDelayObservable=function(_super){function SubscriptionDelayObservable(source,subscriptionDelay){var _this=_super.call(this)||this;return _this.source=source,_this.subscriptionDelay=subscriptionDelay,_this}return tslib_es6.a(SubscriptionDelayObservable,_super),SubscriptionDelayObservable.prototype._subscribe=function(subscriber){this.subscriptionDelay.subscribe(new delayWhen_SubscriptionDelaySubscriber(subscriber,this.source))},SubscriptionDelayObservable}(Observable.a),delayWhen_SubscriptionDelaySubscriber=function(_super){function SubscriptionDelaySubscriber(parent,source){var _this=_super.call(this)||this;return _this.parent=parent,_this.source=source,_this.sourceSubscribed=!1,_this}return tslib_es6.a(SubscriptionDelaySubscriber,_super),SubscriptionDelaySubscriber.prototype._next=function(unused){this.subscribeToSource()},SubscriptionDelaySubscriber.prototype._error=function(err){this.unsubscribe(),this.parent.error(err)},SubscriptionDelaySubscriber.prototype._complete=function(){this.unsubscribe(),this.subscribeToSource()},SubscriptionDelaySubscriber.prototype.subscribeToSource=function(){this.sourceSubscribed||(this.sourceSubscribed=!0,this.unsubscribe(),this.source.subscribe(this.parent))},SubscriptionDelaySubscriber}(Subscriber.a);function dematerialize(){return function(source){return source.lift(new DeMaterializeOperator)}}var DeMaterializeOperator=function(){function DeMaterializeOperator(){}return DeMaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new dematerialize_DeMaterializeSubscriber(subscriber))},DeMaterializeOperator}(),dematerialize_DeMaterializeSubscriber=function(_super){function DeMaterializeSubscriber(destination){return _super.call(this,destination)||this}return tslib_es6.a(DeMaterializeSubscriber,_super),DeMaterializeSubscriber.prototype._next=function(value){value.observe(this.destination)},DeMaterializeSubscriber}(Subscriber.a);function distinct(keySelector,flushes){return function(source){return source.lift(new DistinctOperator(keySelector,flushes))}}var DistinctOperator=function(){function DistinctOperator(keySelector,flushes){this.keySelector=keySelector,this.flushes=flushes}return DistinctOperator.prototype.call=function(subscriber,source){return source.subscribe(new distinct_DistinctSubscriber(subscriber,this.keySelector,this.flushes))},DistinctOperator}(),distinct_DistinctSubscriber=function(_super){function DistinctSubscriber(destination,keySelector,flushes){var _this=_super.call(this,destination)||this;return _this.keySelector=keySelector,_this.values=new Set,flushes&&_this.add(Object(innerSubscribe.c)(flushes,new innerSubscribe.a(_this))),_this}return tslib_es6.a(DistinctSubscriber,_super),DistinctSubscriber.prototype.notifyNext=function(){this.values.clear()},DistinctSubscriber.prototype.notifyError=function(error){this._error(error)},DistinctSubscriber.prototype._next=function(value){this.keySelector?this._useKeySelector(value):this._finalizeNext(value,value)},DistinctSubscriber.prototype._useKeySelector=function(value){var key,destination=this.destination;try{key=this.keySelector(value)}catch(err){return void destination.error(err)}this._finalizeNext(key,value)},DistinctSubscriber.prototype._finalizeNext=function(key,value){var values=this.values;values.has(key)||(values.add(key),this.destination.next(value))},DistinctSubscriber}(innerSubscribe.b);function distinctUntilChanged(compare,keySelector){return function(source){return source.lift(new DistinctUntilChangedOperator(compare,keySelector))}}var DistinctUntilChangedOperator=function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare,this.keySelector=keySelector}return DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector))},DistinctUntilChangedOperator}(),distinctUntilChanged_DistinctUntilChangedSubscriber=function(_super){function DistinctUntilChangedSubscriber(destination,compare,keySelector){var _this=_super.call(this,destination)||this;return _this.keySelector=keySelector,_this.hasKey=!1,"function"==typeof compare&&(_this.compare=compare),_this}return tslib_es6.a(DistinctUntilChangedSubscriber,_super),DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y},DistinctUntilChangedSubscriber.prototype._next=function(value){var key;try{var keySelector=this.keySelector;key=keySelector?keySelector(value):value}catch(err){return this.destination.error(err)}var result=!1;if(this.hasKey)try{result=(0,this.compare)(this.key,key)}catch(err){return this.destination.error(err)}else this.hasKey=!0;result||(this.key=key,this.destination.next(value))},DistinctUntilChangedSubscriber}(Subscriber.a);function distinctUntilKeyChanged(key,compare){return distinctUntilChanged((function(x,y){return compare?compare(x[key],y[key]):x[key]===y[key]}))}var ArgumentOutOfRangeError=__webpack_require__(45),filter=__webpack_require__(32),EmptyError=__webpack_require__(48);function throwIfEmpty(errorFactory){return void 0===errorFactory&&(errorFactory=defaultErrorFactory),function(source){return source.lift(new ThrowIfEmptyOperator(errorFactory))}}var ThrowIfEmptyOperator=function(){function ThrowIfEmptyOperator(errorFactory){this.errorFactory=errorFactory}return ThrowIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new throwIfEmpty_ThrowIfEmptySubscriber(subscriber,this.errorFactory))},ThrowIfEmptyOperator}(),throwIfEmpty_ThrowIfEmptySubscriber=function(_super){function ThrowIfEmptySubscriber(destination,errorFactory){var _this=_super.call(this,destination)||this;return _this.errorFactory=errorFactory,_this.hasValue=!1,_this}return tslib_es6.a(ThrowIfEmptySubscriber,_super),ThrowIfEmptySubscriber.prototype._next=function(value){this.hasValue=!0,this.destination.next(value)},ThrowIfEmptySubscriber.prototype._complete=function(){if(this.hasValue)return this.destination.complete();var err=void 0;try{err=this.errorFactory()}catch(e){err=e}this.destination.error(err)},ThrowIfEmptySubscriber}(Subscriber.a);function defaultErrorFactory(){return new EmptyError.a}var empty=__webpack_require__(22);function take(count){return function(source){return 0===count?Object(empty.b)():source.lift(new take_TakeOperator(count))}}var take_TakeOperator=function(){function TakeOperator(total){if(this.total=total,this.total<0)throw new ArgumentOutOfRangeError.a}return TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new take_TakeSubscriber(subscriber,this.total))},TakeOperator}(),take_TakeSubscriber=function(_super){function TakeSubscriber(destination,total){var _this=_super.call(this,destination)||this;return _this.total=total,_this.count=0,_this}return tslib_es6.a(TakeSubscriber,_super),TakeSubscriber.prototype._next=function(value){var total=this.total,count=++this.count;count<=total&&(this.destination.next(value),count===total&&(this.destination.complete(),this.unsubscribe()))},TakeSubscriber}(Subscriber.a);function elementAt(index,defaultValue){if(index<0)throw new ArgumentOutOfRangeError.a;var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(Object(filter.a)((function(v,i){return i===index})),take(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty((function(){return new ArgumentOutOfRangeError.a})))}}var of=__webpack_require__(65);function endWith(){for(var array=[],_i=0;_i<arguments.length;_i++)array[_i]=arguments[_i];return function(source){return Object(concat.a)(source,of.a.apply(void 0,array))}}function every(predicate,thisArg){return function(source){return source.lift(new EveryOperator(predicate,thisArg,source))}}var EveryOperator=function(){function EveryOperator(predicate,thisArg,source){this.predicate=predicate,this.thisArg=thisArg,this.source=source}return EveryOperator.prototype.call=function(observer,source){return source.subscribe(new every_EverySubscriber(observer,this.predicate,this.thisArg,this.source))},EveryOperator}(),every_EverySubscriber=function(_super){function EverySubscriber(destination,predicate,thisArg,source){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.thisArg=thisArg,_this.source=source,_this.index=0,_this.thisArg=thisArg||_this,_this}return tslib_es6.a(EverySubscriber,_super),EverySubscriber.prototype.notifyComplete=function(everyValueMatch){this.destination.next(everyValueMatch),this.destination.complete()},EverySubscriber.prototype._next=function(value){var result=!1;try{result=this.predicate.call(this.thisArg,value,this.index++,this.source)}catch(err){return void this.destination.error(err)}result||this.notifyComplete(!1)},EverySubscriber.prototype._complete=function(){this.notifyComplete(!0)},EverySubscriber}(Subscriber.a);function exhaust(){return function(source){return source.lift(new SwitchFirstOperator)}}var SwitchFirstOperator=function(){function SwitchFirstOperator(){}return SwitchFirstOperator.prototype.call=function(subscriber,source){return source.subscribe(new exhaust_SwitchFirstSubscriber(subscriber))},SwitchFirstOperator}(),exhaust_SwitchFirstSubscriber=function(_super){function SwitchFirstSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.hasCompleted=!1,_this.hasSubscription=!1,_this}return tslib_es6.a(SwitchFirstSubscriber,_super),SwitchFirstSubscriber.prototype._next=function(value){this.hasSubscription||(this.hasSubscription=!0,this.add(Object(innerSubscribe.c)(value,new innerSubscribe.a(this))))},SwitchFirstSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete()},SwitchFirstSubscriber.prototype.notifyComplete=function(){this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},SwitchFirstSubscriber}(innerSubscribe.b),map=__webpack_require__(20);function exhaustMap(project,resultSelector){return resultSelector?function(source){return source.pipe(exhaustMap((function(a,i){return Object(from.a)(project(a,i)).pipe(Object(map.a)((function(b,ii){return resultSelector(a,b,i,ii)})))})))}:function(source){return source.lift(new ExhaustMapOperator(project))}}var ExhaustMapOperator=function(){function ExhaustMapOperator(project){this.project=project}return ExhaustMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new exhaustMap_ExhaustMapSubscriber(subscriber,this.project))},ExhaustMapOperator}(),exhaustMap_ExhaustMapSubscriber=function(_super){function ExhaustMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;return _this.project=project,_this.hasSubscription=!1,_this.hasCompleted=!1,_this.index=0,_this}return tslib_es6.a(ExhaustMapSubscriber,_super),ExhaustMapSubscriber.prototype._next=function(value){this.hasSubscription||this.tryNext(value)},ExhaustMapSubscriber.prototype.tryNext=function(value){var result,index=this.index++;try{result=this.project(value,index)}catch(err){return void this.destination.error(err)}this.hasSubscription=!0,this._innerSub(result)},ExhaustMapSubscriber.prototype._innerSub=function(result){var innerSubscriber=new innerSubscribe.a(this),destination=this.destination;destination.add(innerSubscriber);var innerSubscription=Object(innerSubscribe.c)(result,innerSubscriber);innerSubscription!==innerSubscriber&&destination.add(innerSubscription)},ExhaustMapSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasSubscription||this.destination.complete(),this.unsubscribe()},ExhaustMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue)},ExhaustMapSubscriber.prototype.notifyError=function(err){this.destination.error(err)},ExhaustMapSubscriber.prototype.notifyComplete=function(){this.hasSubscription=!1,this.hasCompleted&&this.destination.complete()},ExhaustMapSubscriber}(innerSubscribe.b);function expand(project,concurrent,scheduler){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent,function(source){return source.lift(new ExpandOperator(project,concurrent,scheduler))}}var ExpandOperator=function(){function ExpandOperator(project,concurrent,scheduler){this.project=project,this.concurrent=concurrent,this.scheduler=scheduler}return ExpandOperator.prototype.call=function(subscriber,source){return source.subscribe(new expand_ExpandSubscriber(subscriber,this.project,this.concurrent,this.scheduler))},ExpandOperator}(),expand_ExpandSubscriber=function(_super){function ExpandSubscriber(destination,project,concurrent,scheduler){var _this=_super.call(this,destination)||this;return _this.project=project,_this.concurrent=concurrent,_this.scheduler=scheduler,_this.index=0,_this.active=0,_this.hasCompleted=!1,concurrent<Number.POSITIVE_INFINITY&&(_this.buffer=[]),_this}return tslib_es6.a(ExpandSubscriber,_super),ExpandSubscriber.dispatch=function(arg){var subscriber=arg.subscriber,result=arg.result,value=arg.value,index=arg.index;subscriber.subscribeToProjection(result,value,index)},ExpandSubscriber.prototype._next=function(value){var destination=this.destination;if(destination.closed)this._complete();else{var index=this.index++;if(this.active<this.concurrent){destination.next(value);try{var result=(0,this.project)(value,index);if(this.scheduler){var state={subscriber:this,result:result,value:value,index:index};this.destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch,0,state))}else this.subscribeToProjection(result,value,index)}catch(e){destination.error(e)}}else this.buffer.push(value)}},ExpandSubscriber.prototype.subscribeToProjection=function(result,value,index){this.active++,this.destination.add(Object(innerSubscribe.c)(result,new innerSubscribe.a(this)))},ExpandSubscriber.prototype._complete=function(){this.hasCompleted=!0,this.hasCompleted&&0===this.active&&this.destination.complete(),this.unsubscribe()},ExpandSubscriber.prototype.notifyNext=function(innerValue){this._next(innerValue)},ExpandSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--,buffer&&buffer.length>0&&this._next(buffer.shift()),this.hasCompleted&&0===this.active&&this.destination.complete()},ExpandSubscriber}(innerSubscribe.b);function finalize(callback){return function(source){return source.lift(new FinallyOperator(callback))}}var FinallyOperator=function(){function FinallyOperator(callback){this.callback=callback}return FinallyOperator.prototype.call=function(subscriber,source){return source.subscribe(new finalize_FinallySubscriber(subscriber,this.callback))},FinallyOperator}(),finalize_FinallySubscriber=function(_super){function FinallySubscriber(destination,callback){var _this=_super.call(this,destination)||this;return _this.add(new Subscription.a(callback)),_this}return tslib_es6.a(FinallySubscriber,_super),FinallySubscriber}(Subscriber.a);function find(predicate,thisArg){if("function"!=typeof predicate)throw new TypeError("predicate is not a function");return function(source){return source.lift(new FindValueOperator(predicate,source,!1,thisArg))}}var FindValueOperator=function(){function FindValueOperator(predicate,source,yieldIndex,thisArg){this.predicate=predicate,this.source=source,this.yieldIndex=yieldIndex,this.thisArg=thisArg}return FindValueOperator.prototype.call=function(observer,source){return source.subscribe(new find_FindValueSubscriber(observer,this.predicate,this.source,this.yieldIndex,this.thisArg))},FindValueOperator}(),find_FindValueSubscriber=function(_super){function FindValueSubscriber(destination,predicate,source,yieldIndex,thisArg){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.source=source,_this.yieldIndex=yieldIndex,_this.thisArg=thisArg,_this.index=0,_this}return tslib_es6.a(FindValueSubscriber,_super),FindValueSubscriber.prototype.notifyComplete=function(value){var destination=this.destination;destination.next(value),destination.complete(),this.unsubscribe()},FindValueSubscriber.prototype._next=function(value){var predicate=this.predicate,thisArg=this.thisArg,index=this.index++;try{predicate.call(thisArg||this,value,index,this.source)&&this.notifyComplete(this.yieldIndex?index:value)}catch(err){this.destination.error(err)}},FindValueSubscriber.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:void 0)},FindValueSubscriber}(Subscriber.a);function findIndex(predicate,thisArg){return function(source){return source.lift(new FindValueOperator(predicate,source,!0,thisArg))}}var identity=__webpack_require__(30);function first(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?Object(filter.a)((function(v,i){return predicate(v,i,source)})):identity.a,take(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty((function(){return new EmptyError.a})))}}var groupBy=__webpack_require__(104);function ignoreElements(){return function(source){return source.lift(new IgnoreElementsOperator)}}var IgnoreElementsOperator=function(){function IgnoreElementsOperator(){}return IgnoreElementsOperator.prototype.call=function(subscriber,source){return source.subscribe(new ignoreElements_IgnoreElementsSubscriber(subscriber))},IgnoreElementsOperator}(),ignoreElements_IgnoreElementsSubscriber=function(_super){function IgnoreElementsSubscriber(){return null!==_super&&_super.apply(this,arguments)||this}return tslib_es6.a(IgnoreElementsSubscriber,_super),IgnoreElementsSubscriber.prototype._next=function(unused){},IgnoreElementsSubscriber}(Subscriber.a);function isEmpty(){return function(source){return source.lift(new IsEmptyOperator)}}var IsEmptyOperator=function(){function IsEmptyOperator(){}return IsEmptyOperator.prototype.call=function(observer,source){return source.subscribe(new isEmpty_IsEmptySubscriber(observer))},IsEmptyOperator}(),isEmpty_IsEmptySubscriber=function(_super){function IsEmptySubscriber(destination){return _super.call(this,destination)||this}return tslib_es6.a(IsEmptySubscriber,_super),IsEmptySubscriber.prototype.notifyComplete=function(isEmpty){var destination=this.destination;destination.next(isEmpty),destination.complete()},IsEmptySubscriber.prototype._next=function(value){this.notifyComplete(!1)},IsEmptySubscriber.prototype._complete=function(){this.notifyComplete(!0)},IsEmptySubscriber}(Subscriber.a);function takeLast(count){return function(source){return 0===count?Object(empty.b)():source.lift(new takeLast_TakeLastOperator(count))}}var takeLast_TakeLastOperator=function(){function TakeLastOperator(total){if(this.total=total,this.total<0)throw new ArgumentOutOfRangeError.a}return TakeLastOperator.prototype.call=function(subscriber,source){return source.subscribe(new takeLast_TakeLastSubscriber(subscriber,this.total))},TakeLastOperator}(),takeLast_TakeLastSubscriber=function(_super){function TakeLastSubscriber(destination,total){var _this=_super.call(this,destination)||this;return _this.total=total,_this.ring=new Array,_this.count=0,_this}return tslib_es6.a(TakeLastSubscriber,_super),TakeLastSubscriber.prototype._next=function(value){var ring=this.ring,total=this.total,count=this.count++;ring.length<total?ring.push(value):ring[count%total]=value},TakeLastSubscriber.prototype._complete=function(){var destination=this.destination,count=this.count;if(count>0)for(var total=this.count>=this.total?this.total:this.count,ring=this.ring,i=0;i<total;i++){var idx=count++%total;destination.next(ring[idx])}destination.complete()},TakeLastSubscriber}(Subscriber.a);function last(predicate,defaultValue){var hasDefaultValue=arguments.length>=2;return function(source){return source.pipe(predicate?Object(filter.a)((function(v,i){return predicate(v,i,source)})):identity.a,takeLast(1),hasDefaultValue?defaultIfEmpty(defaultValue):throwIfEmpty((function(){return new EmptyError.a})))}}function mapTo(value){return function(source){return source.lift(new MapToOperator(value))}}var MapToOperator=function(){function MapToOperator(value){this.value=value}return MapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new mapTo_MapToSubscriber(subscriber,this.value))},MapToOperator}(),mapTo_MapToSubscriber=function(_super){function MapToSubscriber(destination,value){var _this=_super.call(this,destination)||this;return _this.value=value,_this}return tslib_es6.a(MapToSubscriber,_super),MapToSubscriber.prototype._next=function(x){this.destination.next(this.value)},MapToSubscriber}(Subscriber.a);function materialize(){return function(source){return source.lift(new MaterializeOperator)}}var MaterializeOperator=function(){function MaterializeOperator(){}return MaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new materialize_MaterializeSubscriber(subscriber))},MaterializeOperator}(),materialize_MaterializeSubscriber=function(_super){function MaterializeSubscriber(destination){return _super.call(this,destination)||this}return tslib_es6.a(MaterializeSubscriber,_super),MaterializeSubscriber.prototype._next=function(value){this.destination.next(Notification.a.createNext(value))},MaterializeSubscriber.prototype._error=function(err){var destination=this.destination;destination.next(Notification.a.createError(err)),destination.complete()},MaterializeSubscriber.prototype._complete=function(){var destination=this.destination;destination.next(Notification.a.createComplete()),destination.complete()},MaterializeSubscriber}(Subscriber.a);function scan(accumulator,seed){var hasSeed=!1;return arguments.length>=2&&(hasSeed=!0),function(source){return source.lift(new ScanOperator(accumulator,seed,hasSeed))}}var ScanOperator=function(){function ScanOperator(accumulator,seed,hasSeed){void 0===hasSeed&&(hasSeed=!1),this.accumulator=accumulator,this.seed=seed,this.hasSeed=hasSeed}return ScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new scan_ScanSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed))},ScanOperator}(),scan_ScanSubscriber=function(_super){function ScanSubscriber(destination,accumulator,_seed,hasSeed){var _this=_super.call(this,destination)||this;return _this.accumulator=accumulator,_this._seed=_seed,_this.hasSeed=hasSeed,_this.index=0,_this}return tslib_es6.a(ScanSubscriber,_super),Object.defineProperty(ScanSubscriber.prototype,"seed",{get:function(){return this._seed},set:function(value){this.hasSeed=!0,this._seed=value},enumerable:!0,configurable:!0}),ScanSubscriber.prototype._next=function(value){if(this.hasSeed)return this._tryNext(value);this.seed=value,this.destination.next(value)},ScanSubscriber.prototype._tryNext=function(value){var result,index=this.index++;try{result=this.accumulator(this.seed,value,index)}catch(err){this.destination.error(err)}this.seed=result,this.destination.next(result)},ScanSubscriber}(Subscriber.a),pipe=__webpack_require__(72);function reduce(accumulator,seed){return arguments.length>=2?function(source){return Object(pipe.a)(scan(accumulator,seed),takeLast(1),defaultIfEmpty(seed))(source)}:function(source){return Object(pipe.a)(scan((function(acc,value,index){return accumulator(acc,value,index+1)})),takeLast(1))(source)}}function max_max(comparer){return reduce("function"==typeof comparer?function(x,y){return comparer(x,y)>0?x:y}:function(x,y){return x>y?x:y})}var merge=__webpack_require__(119);function merge_merge(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];return function(source){return source.lift.call(merge.a.apply(void 0,[source].concat(observables)))}}var mergeAll=__webpack_require__(86);function mergeMapTo(innerObservable,resultSelector,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),"function"==typeof resultSelector?Object(mergeMap.b)((function(){return innerObservable}),resultSelector,concurrent):("number"==typeof resultSelector&&(concurrent=resultSelector),Object(mergeMap.b)((function(){return innerObservable}),concurrent))}function mergeScan(accumulator,seed,concurrent){return void 0===concurrent&&(concurrent=Number.POSITIVE_INFINITY),function(source){return source.lift(new MergeScanOperator(accumulator,seed,concurrent))}}var MergeScanOperator=function(){function MergeScanOperator(accumulator,seed,concurrent){this.accumulator=accumulator,this.seed=seed,this.concurrent=concurrent}return MergeScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new mergeScan_MergeScanSubscriber(subscriber,this.accumulator,this.seed,this.concurrent))},MergeScanOperator}(),mergeScan_MergeScanSubscriber=function(_super){function MergeScanSubscriber(destination,accumulator,acc,concurrent){var _this=_super.call(this,destination)||this;return _this.accumulator=accumulator,_this.acc=acc,_this.concurrent=concurrent,_this.hasValue=!1,_this.hasCompleted=!1,_this.buffer=[],_this.active=0,_this.index=0,_this}return tslib_es6.a(MergeScanSubscriber,_super),MergeScanSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var index=this.index++,destination=this.destination,ish=void 0;try{ish=(0,this.accumulator)(this.acc,value,index)}catch(e){return destination.error(e)}this.active++,this._innerSub(ish)}else this.buffer.push(value)},MergeScanSubscriber.prototype._innerSub=function(ish){var innerSubscriber=new innerSubscribe.a(this),destination=this.destination;destination.add(innerSubscriber);var innerSubscription=Object(innerSubscribe.c)(ish,innerSubscriber);innerSubscription!==innerSubscriber&&destination.add(innerSubscription)},MergeScanSubscriber.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete()),this.unsubscribe()},MergeScanSubscriber.prototype.notifyNext=function(innerValue){var destination=this.destination;this.acc=innerValue,this.hasValue=!0,destination.next(innerValue)},MergeScanSubscriber.prototype.notifyComplete=function(){var buffer=this.buffer;this.active--,buffer.length>0?this._next(buffer.shift()):0===this.active&&this.hasCompleted&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())},MergeScanSubscriber}(innerSubscribe.b);function min_min(comparer){return reduce("function"==typeof comparer?function(x,y){return comparer(x,y)<0?x:y}:function(x,y){return x<y?x:y})}var ConnectableObservable=__webpack_require__(115);function multicast(subjectOrSubjectFactory,selector){return function(source){var subjectFactory;if(subjectFactory="function"==typeof subjectOrSubjectFactory?subjectOrSubjectFactory:function(){return subjectOrSubjectFactory},"function"==typeof selector)return source.lift(new MulticastOperator(subjectFactory,selector));var connectable=Object.create(source,ConnectableObservable.b);return connectable.source=source,connectable.subjectFactory=subjectFactory,connectable}}var MulticastOperator=function(){function MulticastOperator(subjectFactory,selector){this.subjectFactory=subjectFactory,this.selector=selector}return MulticastOperator.prototype.call=function(subscriber,source){var selector=this.selector,subject=this.subjectFactory(),subscription=selector(subject).subscribe(subscriber);return subscription.add(source.subscribe(subject)),subscription},MulticastOperator}(),observeOn=__webpack_require__(116);function onErrorResumeNext(){for(var nextSources=[],_i=0;_i<arguments.length;_i++)nextSources[_i]=arguments[_i];return 1===nextSources.length&&Object(isArray.a)(nextSources[0])&&(nextSources=nextSources[0]),function(source){return source.lift(new OnErrorResumeNextOperator(nextSources))}}var OnErrorResumeNextOperator=function(){function OnErrorResumeNextOperator(nextSources){this.nextSources=nextSources}return OnErrorResumeNextOperator.prototype.call=function(subscriber,source){return source.subscribe(new onErrorResumeNext_OnErrorResumeNextSubscriber(subscriber,this.nextSources))},OnErrorResumeNextOperator}(),onErrorResumeNext_OnErrorResumeNextSubscriber=function(_super){function OnErrorResumeNextSubscriber(destination,nextSources){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this.nextSources=nextSources,_this}return tslib_es6.a(OnErrorResumeNextSubscriber,_super),OnErrorResumeNextSubscriber.prototype.notifyError=function(){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype.notifyComplete=function(){this.subscribeToNextSource()},OnErrorResumeNextSubscriber.prototype._error=function(err){this.subscribeToNextSource(),this.unsubscribe()},OnErrorResumeNextSubscriber.prototype._complete=function(){this.subscribeToNextSource(),this.unsubscribe()},OnErrorResumeNextSubscriber.prototype.subscribeToNextSource=function(){var next=this.nextSources.shift();if(next){var innerSubscriber=new innerSubscribe.a(this),destination=this.destination;destination.add(innerSubscriber);var innerSubscription=Object(innerSubscribe.c)(next,innerSubscriber);innerSubscription!==innerSubscriber&&destination.add(innerSubscription)}else this.destination.complete()},OnErrorResumeNextSubscriber}(innerSubscribe.b);function pairwise(){return function(source){return source.lift(new PairwiseOperator)}}var PairwiseOperator=function(){function PairwiseOperator(){}return PairwiseOperator.prototype.call=function(subscriber,source){return source.subscribe(new pairwise_PairwiseSubscriber(subscriber))},PairwiseOperator}(),pairwise_PairwiseSubscriber=function(_super){function PairwiseSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.hasPrev=!1,_this}return tslib_es6.a(PairwiseSubscriber,_super),PairwiseSubscriber.prototype._next=function(value){var pair;this.hasPrev?pair=[this.prev,value]:this.hasPrev=!0,this.prev=value,pair&&this.destination.next(pair)},PairwiseSubscriber}(Subscriber.a),not=__webpack_require__(132);function partition(predicate,thisArg){return function(source){return[Object(filter.a)(predicate,thisArg)(source),Object(filter.a)(Object(not.a)(predicate,thisArg))(source)]}}function pluck(){for(var properties=[],_i=0;_i<arguments.length;_i++)properties[_i]=arguments[_i];var length=properties.length;if(0===length)throw new Error("list of properties cannot be empty.");return function(source){return Object(map.a)(plucker(properties,length))(source)}}function plucker(props,length){return function(x){for(var currentProp=x,i=0;i<length;i++){var p=null!=currentProp?currentProp[props[i]]:void 0;if(void 0===p)return;currentProp=p}return currentProp}}var Subject=__webpack_require__(14);function publish(selector){return selector?multicast((function(){return new Subject.a}),selector):multicast(new Subject.a)}var BehaviorSubject=__webpack_require__(100);function publishBehavior(value){return function(source){return multicast(new BehaviorSubject.a(value))(source)}}var AsyncSubject=__webpack_require__(52);function publishLast(){return function(source){return multicast(new AsyncSubject.a)(source)}}var ReplaySubject=__webpack_require__(83);function publishReplay(bufferSize,windowTime,selectorOrScheduler,scheduler){selectorOrScheduler&&"function"!=typeof selectorOrScheduler&&(scheduler=selectorOrScheduler);var selector="function"==typeof selectorOrScheduler?selectorOrScheduler:void 0,subject=new ReplaySubject.a(bufferSize,windowTime,scheduler);return function(source){return multicast((function(){return subject}),selector)(source)}}var race=__webpack_require__(120);function race_race(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];return function(source){return 1===observables.length&&Object(isArray.a)(observables[0])&&(observables=observables[0]),source.lift.call(race.a.apply(void 0,[source].concat(observables)))}}function repeat(count){return void 0===count&&(count=-1),function(source){return 0===count?Object(empty.b)():count<0?source.lift(new RepeatOperator(-1,source)):source.lift(new RepeatOperator(count-1,source))}}var RepeatOperator=function(){function RepeatOperator(count,source){this.count=count,this.source=source}return RepeatOperator.prototype.call=function(subscriber,source){return source.subscribe(new repeat_RepeatSubscriber(subscriber,this.count,this.source))},RepeatOperator}(),repeat_RepeatSubscriber=function(_super){function RepeatSubscriber(destination,count,source){var _this=_super.call(this,destination)||this;return _this.count=count,_this.source=source,_this}return tslib_es6.a(RepeatSubscriber,_super),RepeatSubscriber.prototype.complete=function(){if(!this.isStopped){var source=this.source,count=this.count;if(0===count)return _super.prototype.complete.call(this);count>-1&&(this.count=count-1),source.subscribe(this._unsubscribeAndRecycle())}},RepeatSubscriber}(Subscriber.a);function repeatWhen(notifier){return function(source){return source.lift(new RepeatWhenOperator(notifier))}}var RepeatWhenOperator=function(){function RepeatWhenOperator(notifier){this.notifier=notifier}return RepeatWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new repeatWhen_RepeatWhenSubscriber(subscriber,this.notifier,source))},RepeatWhenOperator}(),repeatWhen_RepeatWhenSubscriber=function(_super){function RepeatWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;return _this.notifier=notifier,_this.source=source,_this.sourceIsBeingSubscribedTo=!0,_this}return tslib_es6.a(RepeatWhenSubscriber,_super),RepeatWhenSubscriber.prototype.notifyNext=function(){this.sourceIsBeingSubscribedTo=!0,this.source.subscribe(this)},RepeatWhenSubscriber.prototype.notifyComplete=function(){if(!1===this.sourceIsBeingSubscribedTo)return _super.prototype.complete.call(this)},RepeatWhenSubscriber.prototype.complete=function(){if(this.sourceIsBeingSubscribedTo=!1,!this.isStopped){if(this.retries||this.subscribeToRetries(),!this.retriesSubscription||this.retriesSubscription.closed)return _super.prototype.complete.call(this);this._unsubscribeAndRecycle(),this.notifications.next(void 0)}},RepeatWhenSubscriber.prototype._unsubscribe=function(){var notifications=this.notifications,retriesSubscription=this.retriesSubscription;notifications&&(notifications.unsubscribe(),this.notifications=void 0),retriesSubscription&&(retriesSubscription.unsubscribe(),this.retriesSubscription=void 0),this.retries=void 0},RepeatWhenSubscriber.prototype._unsubscribeAndRecycle=function(){var _unsubscribe=this._unsubscribe;return this._unsubscribe=null,_super.prototype._unsubscribeAndRecycle.call(this),this._unsubscribe=_unsubscribe,this},RepeatWhenSubscriber.prototype.subscribeToRetries=function(){var retries;this.notifications=new Subject.a;try{retries=(0,this.notifier)(this.notifications)}catch(e){return _super.prototype.complete.call(this)}this.retries=retries,this.retriesSubscription=Object(innerSubscribe.c)(retries,new innerSubscribe.a(this))},RepeatWhenSubscriber}(innerSubscribe.b);function retry(count){return void 0===count&&(count=-1),function(source){return source.lift(new RetryOperator(count,source))}}var RetryOperator=function(){function RetryOperator(count,source){this.count=count,this.source=source}return RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new retry_RetrySubscriber(subscriber,this.count,this.source))},RetryOperator}(),retry_RetrySubscriber=function(_super){function RetrySubscriber(destination,count,source){var _this=_super.call(this,destination)||this;return _this.count=count,_this.source=source,_this}return tslib_es6.a(RetrySubscriber,_super),RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var source=this.source,count=this.count;if(0===count)return _super.prototype.error.call(this,err);count>-1&&(this.count=count-1),source.subscribe(this._unsubscribeAndRecycle())}},RetrySubscriber}(Subscriber.a);function retryWhen(notifier){return function(source){return source.lift(new RetryWhenOperator(notifier,source))}}var RetryWhenOperator=function(){function RetryWhenOperator(notifier,source){this.notifier=notifier,this.source=source}return RetryWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new retryWhen_RetryWhenSubscriber(subscriber,this.notifier,this.source))},RetryWhenOperator}(),retryWhen_RetryWhenSubscriber=function(_super){function RetryWhenSubscriber(destination,notifier,source){var _this=_super.call(this,destination)||this;return _this.notifier=notifier,_this.source=source,_this}return tslib_es6.a(RetryWhenSubscriber,_super),RetryWhenSubscriber.prototype.error=function(err){if(!this.isStopped){var errors=this.errors,retries=this.retries,retriesSubscription=this.retriesSubscription;if(retries)this.errors=void 0,this.retriesSubscription=void 0;else{errors=new Subject.a;try{retries=(0,this.notifier)(errors)}catch(e){return _super.prototype.error.call(this,e)}retriesSubscription=Object(innerSubscribe.c)(retries,new innerSubscribe.a(this))}this._unsubscribeAndRecycle(),this.errors=errors,this.retries=retries,this.retriesSubscription=retriesSubscription,errors.next(err)}},RetryWhenSubscriber.prototype._unsubscribe=function(){var errors=this.errors,retriesSubscription=this.retriesSubscription;errors&&(errors.unsubscribe(),this.errors=void 0),retriesSubscription&&(retriesSubscription.unsubscribe(),this.retriesSubscription=void 0),this.retries=void 0},RetryWhenSubscriber.prototype.notifyNext=function(){var _unsubscribe=this._unsubscribe;this._unsubscribe=null,this._unsubscribeAndRecycle(),this._unsubscribe=_unsubscribe,this.source.subscribe(this)},RetryWhenSubscriber}(innerSubscribe.b),operators_refCount=__webpack_require__(82);function sample(notifier){return function(source){return source.lift(new sample_SampleOperator(notifier))}}var sample_SampleOperator=function(){function SampleOperator(notifier){this.notifier=notifier}return SampleOperator.prototype.call=function(subscriber,source){var sampleSubscriber=new sample_SampleSubscriber(subscriber),subscription=source.subscribe(sampleSubscriber);return subscription.add(Object(innerSubscribe.c)(this.notifier,new innerSubscribe.a(sampleSubscriber))),subscription},SampleOperator}(),sample_SampleSubscriber=function(_super){function SampleSubscriber(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.hasValue=!1,_this}return tslib_es6.a(SampleSubscriber,_super),SampleSubscriber.prototype._next=function(value){this.value=value,this.hasValue=!0},SampleSubscriber.prototype.notifyNext=function(){this.emitValue()},SampleSubscriber.prototype.notifyComplete=function(){this.emitValue()},SampleSubscriber.prototype.emitValue=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.value))},SampleSubscriber}(innerSubscribe.b);function sampleTime(period,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),function(source){return source.lift(new SampleTimeOperator(period,scheduler))}}var SampleTimeOperator=function(){function SampleTimeOperator(period,scheduler){this.period=period,this.scheduler=scheduler}return SampleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new sampleTime_SampleTimeSubscriber(subscriber,this.period,this.scheduler))},SampleTimeOperator}(),sampleTime_SampleTimeSubscriber=function(_super){function SampleTimeSubscriber(destination,period,scheduler){var _this=_super.call(this,destination)||this;return _this.period=period,_this.scheduler=scheduler,_this.hasValue=!1,_this.add(scheduler.schedule(dispatchNotification,period,{subscriber:_this,period:period})),_this}return tslib_es6.a(SampleTimeSubscriber,_super),SampleTimeSubscriber.prototype._next=function(value){this.lastValue=value,this.hasValue=!0},SampleTimeSubscriber.prototype.notifyNext=function(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.lastValue))},SampleTimeSubscriber}(Subscriber.a);function dispatchNotification(state){var subscriber=state.subscriber,period=state.period;subscriber.notifyNext(),this.schedule(state,period)}function sequenceEqual(compareTo,comparator){return function(source){return source.lift(new SequenceEqualOperator(compareTo,comparator))}}var SequenceEqualOperator=function(){function SequenceEqualOperator(compareTo,comparator){this.compareTo=compareTo,this.comparator=comparator}return SequenceEqualOperator.prototype.call=function(subscriber,source){return source.subscribe(new sequenceEqual_SequenceEqualSubscriber(subscriber,this.compareTo,this.comparator))},SequenceEqualOperator}(),sequenceEqual_SequenceEqualSubscriber=function(_super){function SequenceEqualSubscriber(destination,compareTo,comparator){var _this=_super.call(this,destination)||this;return _this.compareTo=compareTo,_this.comparator=comparator,_this._a=[],_this._b=[],_this._oneComplete=!1,_this.destination.add(compareTo.subscribe(new sequenceEqual_SequenceEqualCompareToSubscriber(destination,_this))),_this}return tslib_es6.a(SequenceEqualSubscriber,_super),SequenceEqualSubscriber.prototype._next=function(value){this._oneComplete&&0===this._b.length?this.emit(!1):(this._a.push(value),this.checkValues())},SequenceEqualSubscriber.prototype._complete=function(){this._oneComplete?this.emit(0===this._a.length&&0===this._b.length):this._oneComplete=!0,this.unsubscribe()},SequenceEqualSubscriber.prototype.checkValues=function(){for(var _a=this._a,_b=this._b,comparator=this.comparator;_a.length>0&&_b.length>0;){var a=_a.shift(),b=_b.shift(),areEqual=!1;try{areEqual=comparator?comparator(a,b):a===b}catch(e){this.destination.error(e)}areEqual||this.emit(!1)}},SequenceEqualSubscriber.prototype.emit=function(value){var destination=this.destination;destination.next(value),destination.complete()},SequenceEqualSubscriber.prototype.nextB=function(value){this._oneComplete&&0===this._a.length?this.emit(!1):(this._b.push(value),this.checkValues())},SequenceEqualSubscriber.prototype.completeB=function(){this._oneComplete?this.emit(0===this._a.length&&0===this._b.length):this._oneComplete=!0},SequenceEqualSubscriber}(Subscriber.a),sequenceEqual_SequenceEqualCompareToSubscriber=function(_super){function SequenceEqualCompareToSubscriber(destination,parent){var _this=_super.call(this,destination)||this;return _this.parent=parent,_this}return tslib_es6.a(SequenceEqualCompareToSubscriber,_super),SequenceEqualCompareToSubscriber.prototype._next=function(value){this.parent.nextB(value)},SequenceEqualCompareToSubscriber.prototype._error=function(err){this.parent.error(err),this.unsubscribe()},SequenceEqualCompareToSubscriber.prototype._complete=function(){this.parent.completeB(),this.unsubscribe()},SequenceEqualCompareToSubscriber}(Subscriber.a);function shareSubjectFactory(){return new Subject.a}function share(){return function(source){return Object(operators_refCount.a)()(multicast(shareSubjectFactory)(source))}}function shareReplay(configOrBufferSize,windowTime,scheduler){var config;return config=configOrBufferSize&&"object"==typeof configOrBufferSize?configOrBufferSize:{bufferSize:configOrBufferSize,windowTime:windowTime,refCount:!1,scheduler:scheduler},function(source){return source.lift(function(_a){var subject,subscription,_b=_a.bufferSize,bufferSize=void 0===_b?Number.POSITIVE_INFINITY:_b,_c=_a.windowTime,windowTime=void 0===_c?Number.POSITIVE_INFINITY:_c,useRefCount=_a.refCount,scheduler=_a.scheduler,refCount=0,hasError=!1,isComplete=!1;return function(source){var innerSub;refCount++,!subject||hasError?(hasError=!1,subject=new ReplaySubject.a(bufferSize,windowTime,scheduler),innerSub=subject.subscribe(this),subscription=source.subscribe({next:function(value){subject.next(value)},error:function(err){hasError=!0,subject.error(err)},complete:function(){isComplete=!0,subscription=void 0,subject.complete()}})):innerSub=subject.subscribe(this),this.add((function(){refCount--,innerSub.unsubscribe(),subscription&&!isComplete&&useRefCount&&0===refCount&&(subscription.unsubscribe(),subscription=void 0,subject=void 0)}))}}(config))}}function single(predicate){return function(source){return source.lift(new SingleOperator(predicate,source))}}var SingleOperator=function(){function SingleOperator(predicate,source){this.predicate=predicate,this.source=source}return SingleOperator.prototype.call=function(subscriber,source){return source.subscribe(new single_SingleSubscriber(subscriber,this.predicate,this.source))},SingleOperator}(),single_SingleSubscriber=function(_super){function SingleSubscriber(destination,predicate,source){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.source=source,_this.seenValue=!1,_this.index=0,_this}return tslib_es6.a(SingleSubscriber,_super),SingleSubscriber.prototype.applySingleValue=function(value){this.seenValue?this.destination.error("Sequence contains more than one element"):(this.seenValue=!0,this.singleValue=value)},SingleSubscriber.prototype._next=function(value){var index=this.index++;this.predicate?this.tryNext(value,index):this.applySingleValue(value)},SingleSubscriber.prototype.tryNext=function(value,index){try{this.predicate(value,index,this.source)&&this.applySingleValue(value)}catch(err){this.destination.error(err)}},SingleSubscriber.prototype._complete=function(){var destination=this.destination;this.index>0?(destination.next(this.seenValue?this.singleValue:void 0),destination.complete()):destination.error(new EmptyError.a)},SingleSubscriber}(Subscriber.a);function skip(count){return function(source){return source.lift(new SkipOperator(count))}}var SkipOperator=function(){function SkipOperator(total){this.total=total}return SkipOperator.prototype.call=function(subscriber,source){return source.subscribe(new skip_SkipSubscriber(subscriber,this.total))},SkipOperator}(),skip_SkipSubscriber=function(_super){function SkipSubscriber(destination,total){var _this=_super.call(this,destination)||this;return _this.total=total,_this.count=0,_this}return tslib_es6.a(SkipSubscriber,_super),SkipSubscriber.prototype._next=function(x){++this.count>this.total&&this.destination.next(x)},SkipSubscriber}(Subscriber.a);function skipLast(count){return function(source){return source.lift(new skipLast_SkipLastOperator(count))}}var skipLast_SkipLastOperator=function(){function SkipLastOperator(_skipCount){if(this._skipCount=_skipCount,this._skipCount<0)throw new ArgumentOutOfRangeError.a}return SkipLastOperator.prototype.call=function(subscriber,source){return 0===this._skipCount?source.subscribe(new Subscriber.a(subscriber)):source.subscribe(new skipLast_SkipLastSubscriber(subscriber,this._skipCount))},SkipLastOperator}(),skipLast_SkipLastSubscriber=function(_super){function SkipLastSubscriber(destination,_skipCount){var _this=_super.call(this,destination)||this;return _this._skipCount=_skipCount,_this._count=0,_this._ring=new Array(_skipCount),_this}return tslib_es6.a(SkipLastSubscriber,_super),SkipLastSubscriber.prototype._next=function(value){var skipCount=this._skipCount,count=this._count++;if(count<skipCount)this._ring[count]=value;else{var currentIndex=count%skipCount,ring=this._ring,oldValue=ring[currentIndex];ring[currentIndex]=value,this.destination.next(oldValue)}},SkipLastSubscriber}(Subscriber.a);function skipUntil(notifier){return function(source){return source.lift(new SkipUntilOperator(notifier))}}var SkipUntilOperator=function(){function SkipUntilOperator(notifier){this.notifier=notifier}return SkipUntilOperator.prototype.call=function(destination,source){return source.subscribe(new skipUntil_SkipUntilSubscriber(destination,this.notifier))},SkipUntilOperator}(),skipUntil_SkipUntilSubscriber=function(_super){function SkipUntilSubscriber(destination,notifier){var _this=_super.call(this,destination)||this;_this.hasValue=!1;var innerSubscriber=new innerSubscribe.a(_this);_this.add(innerSubscriber),_this.innerSubscription=innerSubscriber;var innerSubscription=Object(innerSubscribe.c)(notifier,innerSubscriber);return innerSubscription!==innerSubscriber&&(_this.add(innerSubscription),_this.innerSubscription=innerSubscription),_this}return tslib_es6.a(SkipUntilSubscriber,_super),SkipUntilSubscriber.prototype._next=function(value){this.hasValue&&_super.prototype._next.call(this,value)},SkipUntilSubscriber.prototype.notifyNext=function(){this.hasValue=!0,this.innerSubscription&&this.innerSubscription.unsubscribe()},SkipUntilSubscriber.prototype.notifyComplete=function(){},SkipUntilSubscriber}(innerSubscribe.b);function skipWhile(predicate){return function(source){return source.lift(new SkipWhileOperator(predicate))}}var SkipWhileOperator=function(){function SkipWhileOperator(predicate){this.predicate=predicate}return SkipWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new skipWhile_SkipWhileSubscriber(subscriber,this.predicate))},SkipWhileOperator}(),skipWhile_SkipWhileSubscriber=function(_super){function SkipWhileSubscriber(destination,predicate){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.skipping=!0,_this.index=0,_this}return tslib_es6.a(SkipWhileSubscriber,_super),SkipWhileSubscriber.prototype._next=function(value){var destination=this.destination;this.skipping&&this.tryCallPredicate(value),this.skipping||destination.next(value)},SkipWhileSubscriber.prototype.tryCallPredicate=function(value){try{var result=this.predicate(value,this.index++);this.skipping=Boolean(result)}catch(err){this.destination.error(err)}},SkipWhileSubscriber}(Subscriber.a);function startWith(){for(var array=[],_i=0;_i<arguments.length;_i++)array[_i]=arguments[_i];var scheduler=array[array.length-1];return Object(isScheduler.a)(scheduler)?(array.pop(),function(source){return Object(concat.a)(array,source,scheduler)}):function(source){return Object(concat.a)(array,source)}}var asap=__webpack_require__(73),isNumeric=__webpack_require__(54),SubscribeOnObservable_SubscribeOnObservable=function(_super){function SubscribeOnObservable(source,delayTime,scheduler){void 0===delayTime&&(delayTime=0),void 0===scheduler&&(scheduler=asap.a);var _this=_super.call(this)||this;return _this.source=source,_this.delayTime=delayTime,_this.scheduler=scheduler,(!Object(isNumeric.a)(delayTime)||delayTime<0)&&(_this.delayTime=0),scheduler&&"function"==typeof scheduler.schedule||(_this.scheduler=asap.a),_this}return tslib_es6.a(SubscribeOnObservable,_super),SubscribeOnObservable.create=function(source,delay,scheduler){return void 0===delay&&(delay=0),void 0===scheduler&&(scheduler=asap.a),new SubscribeOnObservable(source,delay,scheduler)},SubscribeOnObservable.dispatch=function(arg){var source=arg.source,subscriber=arg.subscriber;return this.add(source.subscribe(subscriber))},SubscribeOnObservable.prototype._subscribe=function(subscriber){var delay=this.delayTime,source=this.source;return this.scheduler.schedule(SubscribeOnObservable.dispatch,delay,{source:source,subscriber:subscriber})},SubscribeOnObservable}(Observable.a);function subscribeOn(scheduler,delay){return void 0===delay&&(delay=0),function(source){return source.lift(new subscribeOn_SubscribeOnOperator(scheduler,delay))}}var subscribeOn_SubscribeOnOperator=function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler,this.delay=delay}return SubscribeOnOperator.prototype.call=function(subscriber,source){return new SubscribeOnObservable_SubscribeOnObservable(source,this.delay,this.scheduler).subscribe(subscriber)},SubscribeOnOperator}();function switchMap(project,resultSelector){return"function"==typeof resultSelector?function(source){return source.pipe(switchMap((function(a,i){return Object(from.a)(project(a,i)).pipe(Object(map.a)((function(b,ii){return resultSelector(a,b,i,ii)})))})))}:function(source){return source.lift(new SwitchMapOperator(project))}}var SwitchMapOperator=function(){function SwitchMapOperator(project){this.project=project}return SwitchMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new switchMap_SwitchMapSubscriber(subscriber,this.project))},SwitchMapOperator}(),switchMap_SwitchMapSubscriber=function(_super){function SwitchMapSubscriber(destination,project){var _this=_super.call(this,destination)||this;return _this.project=project,_this.index=0,_this}return tslib_es6.a(SwitchMapSubscriber,_super),SwitchMapSubscriber.prototype._next=function(value){var result,index=this.index++;try{result=this.project(value,index)}catch(error){return void this.destination.error(error)}this._innerSub(result)},SwitchMapSubscriber.prototype._innerSub=function(result){var innerSubscription=this.innerSubscription;innerSubscription&&innerSubscription.unsubscribe();var innerSubscriber=new innerSubscribe.a(this),destination=this.destination;destination.add(innerSubscriber),this.innerSubscription=Object(innerSubscribe.c)(result,innerSubscriber),this.innerSubscription!==innerSubscriber&&destination.add(this.innerSubscription)},SwitchMapSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;innerSubscription&&!innerSubscription.closed||_super.prototype._complete.call(this),this.unsubscribe()},SwitchMapSubscriber.prototype._unsubscribe=function(){this.innerSubscription=void 0},SwitchMapSubscriber.prototype.notifyComplete=function(){this.innerSubscription=void 0,this.isStopped&&_super.prototype._complete.call(this)},SwitchMapSubscriber.prototype.notifyNext=function(innerValue){this.destination.next(innerValue)},SwitchMapSubscriber}(innerSubscribe.b);function switchAll(){return switchMap(identity.a)}function switchMapTo(innerObservable,resultSelector){return resultSelector?switchMap((function(){return innerObservable}),resultSelector):switchMap((function(){return innerObservable}))}function takeUntil(notifier){return function(source){return source.lift(new takeUntil_TakeUntilOperator(notifier))}}var takeUntil_TakeUntilOperator=function(){function TakeUntilOperator(notifier){this.notifier=notifier}return TakeUntilOperator.prototype.call=function(subscriber,source){var takeUntilSubscriber=new takeUntil_TakeUntilSubscriber(subscriber),notifierSubscription=Object(innerSubscribe.c)(this.notifier,new innerSubscribe.a(takeUntilSubscriber));return notifierSubscription&&!takeUntilSubscriber.seenValue?(takeUntilSubscriber.add(notifierSubscription),source.subscribe(takeUntilSubscriber)):takeUntilSubscriber},TakeUntilOperator}(),takeUntil_TakeUntilSubscriber=function(_super){function TakeUntilSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.seenValue=!1,_this}return tslib_es6.a(TakeUntilSubscriber,_super),TakeUntilSubscriber.prototype.notifyNext=function(){this.seenValue=!0,this.complete()},TakeUntilSubscriber.prototype.notifyComplete=function(){},TakeUntilSubscriber}(innerSubscribe.b);function takeWhile(predicate,inclusive){return void 0===inclusive&&(inclusive=!1),function(source){return source.lift(new TakeWhileOperator(predicate,inclusive))}}var TakeWhileOperator=function(){function TakeWhileOperator(predicate,inclusive){this.predicate=predicate,this.inclusive=inclusive}return TakeWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new takeWhile_TakeWhileSubscriber(subscriber,this.predicate,this.inclusive))},TakeWhileOperator}(),takeWhile_TakeWhileSubscriber=function(_super){function TakeWhileSubscriber(destination,predicate,inclusive){var _this=_super.call(this,destination)||this;return _this.predicate=predicate,_this.inclusive=inclusive,_this.index=0,_this}return tslib_es6.a(TakeWhileSubscriber,_super),TakeWhileSubscriber.prototype._next=function(value){var result,destination=this.destination;try{result=this.predicate(value,this.index++)}catch(err){return void destination.error(err)}this.nextOrComplete(value,result)},TakeWhileSubscriber.prototype.nextOrComplete=function(value,predicateResult){var destination=this.destination;Boolean(predicateResult)?destination.next(value):(this.inclusive&&destination.next(value),destination.complete())},TakeWhileSubscriber}(Subscriber.a),noop=__webpack_require__(37),isFunction=__webpack_require__(46);function tap(nextOrObserver,error,complete){return function(source){return source.lift(new DoOperator(nextOrObserver,error,complete))}}var DoOperator=function(){function DoOperator(nextOrObserver,error,complete){this.nextOrObserver=nextOrObserver,this.error=error,this.complete=complete}return DoOperator.prototype.call=function(subscriber,source){return source.subscribe(new tap_TapSubscriber(subscriber,this.nextOrObserver,this.error,this.complete))},DoOperator}(),tap_TapSubscriber=function(_super){function TapSubscriber(destination,observerOrNext,error,complete){var _this=_super.call(this,destination)||this;return _this._tapNext=noop.a,_this._tapError=noop.a,_this._tapComplete=noop.a,_this._tapError=error||noop.a,_this._tapComplete=complete||noop.a,Object(isFunction.a)(observerOrNext)?(_this._context=_this,_this._tapNext=observerOrNext):observerOrNext&&(_this._context=observerOrNext,_this._tapNext=observerOrNext.next||noop.a,_this._tapError=observerOrNext.error||noop.a,_this._tapComplete=observerOrNext.complete||noop.a),_this}return tslib_es6.a(TapSubscriber,_super),TapSubscriber.prototype._next=function(value){try{this._tapNext.call(this._context,value)}catch(err){return void this.destination.error(err)}this.destination.next(value)},TapSubscriber.prototype._error=function(err){try{this._tapError.call(this._context,err)}catch(err){return void this.destination.error(err)}this.destination.error(err)},TapSubscriber.prototype._complete=function(){try{this._tapComplete.call(this._context)}catch(err){return void this.destination.error(err)}return this.destination.complete()},TapSubscriber}(Subscriber.a),defaultThrottleConfig={leading:!0,trailing:!1};function throttle(durationSelector,config){return void 0===config&&(config=defaultThrottleConfig),function(source){return source.lift(new ThrottleOperator(durationSelector,!!config.leading,!!config.trailing))}}var ThrottleOperator=function(){function ThrottleOperator(durationSelector,leading,trailing){this.durationSelector=durationSelector,this.leading=leading,this.trailing=trailing}return ThrottleOperator.prototype.call=function(subscriber,source){return source.subscribe(new throttle_ThrottleSubscriber(subscriber,this.durationSelector,this.leading,this.trailing))},ThrottleOperator}(),throttle_ThrottleSubscriber=function(_super){function ThrottleSubscriber(destination,durationSelector,_leading,_trailing){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this.durationSelector=durationSelector,_this._leading=_leading,_this._trailing=_trailing,_this._hasValue=!1,_this}return tslib_es6.a(ThrottleSubscriber,_super),ThrottleSubscriber.prototype._next=function(value){this._hasValue=!0,this._sendValue=value,this._throttled||(this._leading?this.send():this.throttle(value))},ThrottleSubscriber.prototype.send=function(){var _hasValue=this._hasValue,_sendValue=this._sendValue;_hasValue&&(this.destination.next(_sendValue),this.throttle(_sendValue)),this._hasValue=!1,this._sendValue=void 0},ThrottleSubscriber.prototype.throttle=function(value){var duration=this.tryDurationSelector(value);duration&&this.add(this._throttled=Object(innerSubscribe.c)(duration,new innerSubscribe.a(this)))},ThrottleSubscriber.prototype.tryDurationSelector=function(value){try{return this.durationSelector(value)}catch(err){return this.destination.error(err),null}},ThrottleSubscriber.prototype.throttlingDone=function(){var _throttled=this._throttled,_trailing=this._trailing;_throttled&&_throttled.unsubscribe(),this._throttled=void 0,_trailing&&this.send()},ThrottleSubscriber.prototype.notifyNext=function(){this.throttlingDone()},ThrottleSubscriber.prototype.notifyComplete=function(){this.throttlingDone()},ThrottleSubscriber}(innerSubscribe.b);function throttleTime(duration,scheduler,config){return void 0===scheduler&&(scheduler=scheduler_async.a),void 0===config&&(config=defaultThrottleConfig),function(source){return source.lift(new ThrottleTimeOperator(duration,scheduler,config.leading,config.trailing))}}var ThrottleTimeOperator=function(){function ThrottleTimeOperator(duration,scheduler,leading,trailing){this.duration=duration,this.scheduler=scheduler,this.leading=leading,this.trailing=trailing}return ThrottleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new throttleTime_ThrottleTimeSubscriber(subscriber,this.duration,this.scheduler,this.leading,this.trailing))},ThrottleTimeOperator}(),throttleTime_ThrottleTimeSubscriber=function(_super){function ThrottleTimeSubscriber(destination,duration,scheduler,leading,trailing){var _this=_super.call(this,destination)||this;return _this.duration=duration,_this.scheduler=scheduler,_this.leading=leading,_this.trailing=trailing,_this._hasTrailingValue=!1,_this._trailingValue=null,_this}return tslib_es6.a(ThrottleTimeSubscriber,_super),ThrottleTimeSubscriber.prototype._next=function(value){this.throttled?this.trailing&&(this._trailingValue=value,this._hasTrailingValue=!0):(this.add(this.throttled=this.scheduler.schedule(throttleTime_dispatchNext,this.duration,{subscriber:this})),this.leading?this.destination.next(value):this.trailing&&(this._trailingValue=value,this._hasTrailingValue=!0))},ThrottleTimeSubscriber.prototype._complete=function(){this._hasTrailingValue?(this.destination.next(this._trailingValue),this.destination.complete()):this.destination.complete()},ThrottleTimeSubscriber.prototype.clearThrottle=function(){var throttled=this.throttled;throttled&&(this.trailing&&this._hasTrailingValue&&(this.destination.next(this._trailingValue),this._trailingValue=null,this._hasTrailingValue=!1),throttled.unsubscribe(),this.remove(throttled),this.throttled=null)},ThrottleTimeSubscriber}(Subscriber.a);function throttleTime_dispatchNext(arg){arg.subscriber.clearThrottle()}var defer=__webpack_require__(87);function timeInterval(scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),function(source){return Object(defer.a)((function(){return source.pipe(scan((function(_a,value){var current=_a.current;return{value:value,current:scheduler.now(),last:current}}),{current:scheduler.now(),value:void 0,last:void 0}),Object(map.a)((function(_a){var current=_a.current,last=_a.last,value=_a.value;return new TimeInterval(value,current-last)})))}))}}var TimeInterval=function(){return function(value,interval){this.value=value,this.interval=interval}}(),TimeoutError=__webpack_require__(117);function timeoutWith(due,withObservable,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),function(source){var absoluteTimeout=isDate(due),waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return source.lift(new TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler))}}var TimeoutWithOperator=function(){function TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler){this.waitFor=waitFor,this.absoluteTimeout=absoluteTimeout,this.withObservable=withObservable,this.scheduler=scheduler}return TimeoutWithOperator.prototype.call=function(subscriber,source){return source.subscribe(new timeoutWith_TimeoutWithSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},TimeoutWithOperator}(),timeoutWith_TimeoutWithSubscriber=function(_super){function TimeoutWithSubscriber(destination,absoluteTimeout,waitFor,withObservable,scheduler){var _this=_super.call(this,destination)||this;return _this.absoluteTimeout=absoluteTimeout,_this.waitFor=waitFor,_this.withObservable=withObservable,_this.scheduler=scheduler,_this.scheduleTimeout(),_this}return tslib_es6.a(TimeoutWithSubscriber,_super),TimeoutWithSubscriber.dispatchTimeout=function(subscriber){var withObservable=subscriber.withObservable;subscriber._unsubscribeAndRecycle(),subscriber.add(Object(innerSubscribe.c)(withObservable,new innerSubscribe.a(subscriber)))},TimeoutWithSubscriber.prototype.scheduleTimeout=function(){var action=this.action;action?this.action=action.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout,this.waitFor,this))},TimeoutWithSubscriber.prototype._next=function(value){this.absoluteTimeout||this.scheduleTimeout(),_super.prototype._next.call(this,value)},TimeoutWithSubscriber.prototype._unsubscribe=function(){this.action=void 0,this.scheduler=null,this.withObservable=null},TimeoutWithSubscriber}(innerSubscribe.b),throwError=__webpack_require__(84);function timeout(due,scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),timeoutWith(due,Object(throwError.a)(new TimeoutError.a),scheduler)}function timestamp(scheduler){return void 0===scheduler&&(scheduler=scheduler_async.a),Object(map.a)((function(value){return new Timestamp(value,scheduler.now())}))}var Timestamp=function(){return function(value,timestamp){this.value=value,this.timestamp=timestamp}}();function toArrayReducer(arr,item,index){return 0===index?[item]:(arr.push(item),arr)}function toArray(){return reduce(toArrayReducer,[])}function window_window(windowBoundaries){return function(source){return source.lift(new window_WindowOperator(windowBoundaries))}}var window_WindowOperator=function(){function WindowOperator(windowBoundaries){this.windowBoundaries=windowBoundaries}return WindowOperator.prototype.call=function(subscriber,source){var windowSubscriber=new window_WindowSubscriber(subscriber),sourceSubscription=source.subscribe(windowSubscriber);return sourceSubscription.closed||windowSubscriber.add(Object(innerSubscribe.c)(this.windowBoundaries,new innerSubscribe.a(windowSubscriber))),sourceSubscription},WindowOperator}(),window_WindowSubscriber=function(_super){function WindowSubscriber(destination){var _this=_super.call(this,destination)||this;return _this.window=new Subject.a,destination.next(_this.window),_this}return tslib_es6.a(WindowSubscriber,_super),WindowSubscriber.prototype.notifyNext=function(){this.openWindow()},WindowSubscriber.prototype.notifyError=function(error){this._error(error)},WindowSubscriber.prototype.notifyComplete=function(){this._complete()},WindowSubscriber.prototype._next=function(value){this.window.next(value)},WindowSubscriber.prototype._error=function(err){this.window.error(err),this.destination.error(err)},WindowSubscriber.prototype._complete=function(){this.window.complete(),this.destination.complete()},WindowSubscriber.prototype._unsubscribe=function(){this.window=null},WindowSubscriber.prototype.openWindow=function(){var prevWindow=this.window;prevWindow&&prevWindow.complete();var destination=this.destination,newWindow=this.window=new Subject.a;destination.next(newWindow)},WindowSubscriber}(innerSubscribe.b);function windowCount(windowSize,startWindowEvery){return void 0===startWindowEvery&&(startWindowEvery=0),function(source){return source.lift(new WindowCountOperator(windowSize,startWindowEvery))}}var WindowCountOperator=function(){function WindowCountOperator(windowSize,startWindowEvery){this.windowSize=windowSize,this.startWindowEvery=startWindowEvery}return WindowCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new windowCount_WindowCountSubscriber(subscriber,this.windowSize,this.startWindowEvery))},WindowCountOperator}(),windowCount_WindowCountSubscriber=function(_super){function WindowCountSubscriber(destination,windowSize,startWindowEvery){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this.windowSize=windowSize,_this.startWindowEvery=startWindowEvery,_this.windows=[new Subject.a],_this.count=0,destination.next(_this.windows[0]),_this}return tslib_es6.a(WindowCountSubscriber,_super),WindowCountSubscriber.prototype._next=function(value){for(var startWindowEvery=this.startWindowEvery>0?this.startWindowEvery:this.windowSize,destination=this.destination,windowSize=this.windowSize,windows=this.windows,len=windows.length,i=0;i<len&&!this.closed;i++)windows[i].next(value);var c=this.count-windowSize+1;if(c>=0&&c%startWindowEvery==0&&!this.closed&&windows.shift().complete(),++this.count%startWindowEvery==0&&!this.closed){var window_1=new Subject.a;windows.push(window_1),destination.next(window_1)}},WindowCountSubscriber.prototype._error=function(err){var windows=this.windows;if(windows)for(;windows.length>0&&!this.closed;)windows.shift().error(err);this.destination.error(err)},WindowCountSubscriber.prototype._complete=function(){var windows=this.windows;if(windows)for(;windows.length>0&&!this.closed;)windows.shift().complete();this.destination.complete()},WindowCountSubscriber.prototype._unsubscribe=function(){this.count=0,this.windows=null},WindowCountSubscriber}(Subscriber.a);function windowTime_windowTime(windowTimeSpan){var scheduler=scheduler_async.a,windowCreationInterval=null,maxWindowSize=Number.POSITIVE_INFINITY;return Object(isScheduler.a)(arguments[3])&&(scheduler=arguments[3]),Object(isScheduler.a)(arguments[2])?scheduler=arguments[2]:Object(isNumeric.a)(arguments[2])&&(maxWindowSize=Number(arguments[2])),Object(isScheduler.a)(arguments[1])?scheduler=arguments[1]:Object(isNumeric.a)(arguments[1])&&(windowCreationInterval=Number(arguments[1])),function(source){return source.lift(new WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler))}}var WindowTimeOperator=function(){function WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){this.windowTimeSpan=windowTimeSpan,this.windowCreationInterval=windowCreationInterval,this.maxWindowSize=maxWindowSize,this.scheduler=scheduler}return WindowTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new windowTime_WindowTimeSubscriber(subscriber,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler))},WindowTimeOperator}(),windowTime_CountedSubject=function(_super){function CountedSubject(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this._numberOfNextedValues=0,_this}return tslib_es6.a(CountedSubject,_super),CountedSubject.prototype.next=function(value){this._numberOfNextedValues++,_super.prototype.next.call(this,value)},Object.defineProperty(CountedSubject.prototype,"numberOfNextedValues",{get:function(){return this._numberOfNextedValues},enumerable:!0,configurable:!0}),CountedSubject}(Subject.a),windowTime_WindowTimeSubscriber=function(_super){function WindowTimeSubscriber(destination,windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){var _this=_super.call(this,destination)||this;_this.destination=destination,_this.windowTimeSpan=windowTimeSpan,_this.windowCreationInterval=windowCreationInterval,_this.maxWindowSize=maxWindowSize,_this.scheduler=scheduler,_this.windows=[];var window=_this.openWindow();if(null!==windowCreationInterval&&windowCreationInterval>=0){var closeState={subscriber:_this,window:window,context:null},creationState={windowTimeSpan:windowTimeSpan,windowCreationInterval:windowCreationInterval,subscriber:_this,scheduler:scheduler};_this.add(scheduler.schedule(dispatchWindowClose,windowTimeSpan,closeState)),_this.add(scheduler.schedule(dispatchWindowCreation,windowCreationInterval,creationState))}else{var timeSpanOnlyState={subscriber:_this,window:window,windowTimeSpan:windowTimeSpan};_this.add(scheduler.schedule(dispatchWindowTimeSpanOnly,windowTimeSpan,timeSpanOnlyState))}return _this}return tslib_es6.a(WindowTimeSubscriber,_super),WindowTimeSubscriber.prototype._next=function(value){for(var windows=this.windows,len=windows.length,i=0;i<len;i++){var window_1=windows[i];window_1.closed||(window_1.next(value),window_1.numberOfNextedValues>=this.maxWindowSize&&this.closeWindow(window_1))}},WindowTimeSubscriber.prototype._error=function(err){for(var windows=this.windows;windows.length>0;)windows.shift().error(err);this.destination.error(err)},WindowTimeSubscriber.prototype._complete=function(){for(var windows=this.windows;windows.length>0;){var window_2=windows.shift();window_2.closed||window_2.complete()}this.destination.complete()},WindowTimeSubscriber.prototype.openWindow=function(){var window=new windowTime_CountedSubject;return this.windows.push(window),this.destination.next(window),window},WindowTimeSubscriber.prototype.closeWindow=function(window){window.complete();var windows=this.windows;windows.splice(windows.indexOf(window),1)},WindowTimeSubscriber}(Subscriber.a);function dispatchWindowTimeSpanOnly(state){var subscriber=state.subscriber,windowTimeSpan=state.windowTimeSpan,window=state.window;window&&subscriber.closeWindow(window),state.window=subscriber.openWindow(),this.schedule(state,windowTimeSpan)}function dispatchWindowCreation(state){var windowTimeSpan=state.windowTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,windowCreationInterval=state.windowCreationInterval,window=subscriber.openWindow(),context={action:this,subscription:null},timeSpanState={subscriber:subscriber,window:window,context:context};context.subscription=scheduler.schedule(dispatchWindowClose,windowTimeSpan,timeSpanState),this.add(context.subscription),this.schedule(state,windowCreationInterval)}function dispatchWindowClose(state){var subscriber=state.subscriber,window=state.window,context=state.context;context&&context.action&&context.subscription&&context.action.remove(context.subscription),subscriber.closeWindow(window)}function windowToggle(openings,closingSelector){return function(source){return source.lift(new WindowToggleOperator(openings,closingSelector))}}var WindowToggleOperator=function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings,this.closingSelector=closingSelector}return WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new windowToggle_WindowToggleSubscriber(subscriber,this.openings,this.closingSelector))},WindowToggleOperator}(),windowToggle_WindowToggleSubscriber=function(_super){function WindowToggleSubscriber(destination,openings,closingSelector){var _this=_super.call(this,destination)||this;return _this.openings=openings,_this.closingSelector=closingSelector,_this.contexts=[],_this.add(_this.openSubscription=Object(subscribeToResult.a)(_this,openings,openings)),_this}return tslib_es6.a(WindowToggleSubscriber,_super),WindowToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;if(contexts)for(var len=contexts.length,i=0;i<len;i++)contexts[i].window.next(value)},WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context_1=contexts[index];context_1.window.error(err),context_1.subscription.unsubscribe()}_super.prototype._error.call(this,err)},WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context_2=contexts[index];context_2.window.complete(),context_2.subscription.unsubscribe()}_super.prototype._complete.call(this)},WindowToggleSubscriber.prototype._unsubscribe=function(){var contexts=this.contexts;if(this.contexts=null,contexts)for(var len=contexts.length,index=-1;++index<len;){var context_3=contexts[index];context_3.window.unsubscribe(),context_3.subscription.unsubscribe()}},WindowToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(outerValue===this.openings){var closingNotifier=void 0;try{closingNotifier=(0,this.closingSelector)(innerValue)}catch(e){return this.error(e)}var window_1=new Subject.a,subscription=new Subscription.a,context_4={window:window_1,subscription:subscription};this.contexts.push(context_4);var innerSubscription=Object(subscribeToResult.a)(this,closingNotifier,context_4);innerSubscription.closed?this.closeWindow(this.contexts.length-1):(innerSubscription.context=context_4,subscription.add(innerSubscription)),this.destination.next(window_1)}else this.closeWindow(this.contexts.indexOf(outerValue))},WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err)},WindowToggleSubscriber.prototype.notifyComplete=function(inner){inner!==this.openSubscription&&this.closeWindow(this.contexts.indexOf(inner.context))},WindowToggleSubscriber.prototype.closeWindow=function(index){if(-1!==index){var contexts=this.contexts,context=contexts[index],window=context.window,subscription=context.subscription;contexts.splice(index,1),window.complete(),subscription.unsubscribe()}},WindowToggleSubscriber}(OuterSubscriber.a);function windowWhen(closingSelector){return function(source){return source.lift(new windowWhen_WindowOperator(closingSelector))}}var windowWhen_WindowOperator=function(){function WindowOperator(closingSelector){this.closingSelector=closingSelector}return WindowOperator.prototype.call=function(subscriber,source){return source.subscribe(new windowWhen_WindowSubscriber(subscriber,this.closingSelector))},WindowOperator}(),windowWhen_WindowSubscriber=function(_super){function WindowSubscriber(destination,closingSelector){var _this=_super.call(this,destination)||this;return _this.destination=destination,_this.closingSelector=closingSelector,_this.openWindow(),_this}return tslib_es6.a(WindowSubscriber,_super),WindowSubscriber.prototype.notifyNext=function(_outerValue,_innerValue,_outerIndex,_innerIndex,innerSub){this.openWindow(innerSub)},WindowSubscriber.prototype.notifyError=function(error){this._error(error)},WindowSubscriber.prototype.notifyComplete=function(innerSub){this.openWindow(innerSub)},WindowSubscriber.prototype._next=function(value){this.window.next(value)},WindowSubscriber.prototype._error=function(err){this.window.error(err),this.destination.error(err),this.unsubscribeClosingNotification()},WindowSubscriber.prototype._complete=function(){this.window.complete(),this.destination.complete(),this.unsubscribeClosingNotification()},WindowSubscriber.prototype.unsubscribeClosingNotification=function(){this.closingNotification&&this.closingNotification.unsubscribe()},WindowSubscriber.prototype.openWindow=function(innerSub){void 0===innerSub&&(innerSub=null),innerSub&&(this.remove(innerSub),innerSub.unsubscribe());var prevWindow=this.window;prevWindow&&prevWindow.complete();var closingNotifier,window=this.window=new Subject.a;this.destination.next(window);try{closingNotifier=(0,this.closingSelector)()}catch(e){return this.destination.error(e),void this.window.error(e)}this.add(this.closingNotification=Object(subscribeToResult.a)(this,closingNotifier))},WindowSubscriber}(OuterSubscriber.a);function withLatestFrom(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return function(source){var project;"function"==typeof args[args.length-1]&&(project=args.pop());var observables=args;return source.lift(new WithLatestFromOperator(observables,project))}}var WithLatestFromOperator=function(){function WithLatestFromOperator(observables,project){this.observables=observables,this.project=project}return WithLatestFromOperator.prototype.call=function(subscriber,source){return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber,this.observables,this.project))},WithLatestFromOperator}(),withLatestFrom_WithLatestFromSubscriber=function(_super){function WithLatestFromSubscriber(destination,observables,project){var _this=_super.call(this,destination)||this;_this.observables=observables,_this.project=project,_this.toRespond=[];var len=observables.length;_this.values=new Array(len);for(var i=0;i<len;i++)_this.toRespond.push(i);for(i=0;i<len;i++){var observable=observables[i];_this.add(Object(subscribeToResult.a)(_this,observable,void 0,i))}return _this}return tslib_es6.a(WithLatestFromSubscriber,_super),WithLatestFromSubscriber.prototype.notifyNext=function(_outerValue,innerValue,outerIndex){this.values[outerIndex]=innerValue;var toRespond=this.toRespond;if(toRespond.length>0){var found=toRespond.indexOf(outerIndex);-1!==found&&toRespond.splice(found,1)}},WithLatestFromSubscriber.prototype.notifyComplete=function(){},WithLatestFromSubscriber.prototype._next=function(value){if(0===this.toRespond.length){var args=[value].concat(this.values);this.project?this._tryProject(args):this.destination.next(args)}},WithLatestFromSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args)}catch(err){return void this.destination.error(err)}this.destination.next(result)},WithLatestFromSubscriber}(OuterSubscriber.a),zip=__webpack_require__(88);function zip_zip(){for(var observables=[],_i=0;_i<arguments.length;_i++)observables[_i]=arguments[_i];return function(source){return source.lift.call(zip.b.apply(void 0,[source].concat(observables)))}}function zipAll(project){return function(source){return source.lift(new zip.a(project))}}__webpack_require__.d(__webpack_exports__,"audit",(function(){return audit})),__webpack_require__.d(__webpack_exports__,"auditTime",(function(){return auditTime})),__webpack_require__.d(__webpack_exports__,"buffer",(function(){return buffer_buffer})),__webpack_require__.d(__webpack_exports__,"bufferCount",(function(){return bufferCount})),__webpack_require__.d(__webpack_exports__,"bufferTime",(function(){return bufferTime})),__webpack_require__.d(__webpack_exports__,"bufferToggle",(function(){return bufferToggle})),__webpack_require__.d(__webpack_exports__,"bufferWhen",(function(){return bufferWhen})),__webpack_require__.d(__webpack_exports__,"catchError",(function(){return catchError})),__webpack_require__.d(__webpack_exports__,"combineAll",(function(){return combineAll})),__webpack_require__.d(__webpack_exports__,"combineLatest",(function(){return combineLatest_combineLatest})),__webpack_require__.d(__webpack_exports__,"concat",(function(){return concat_concat})),__webpack_require__.d(__webpack_exports__,"concatAll",(function(){return concatAll.a})),__webpack_require__.d(__webpack_exports__,"concatMap",(function(){return concatMap})),__webpack_require__.d(__webpack_exports__,"concatMapTo",(function(){return concatMapTo})),__webpack_require__.d(__webpack_exports__,"count",(function(){return count_count})),__webpack_require__.d(__webpack_exports__,"debounce",(function(){return debounce})),__webpack_require__.d(__webpack_exports__,"debounceTime",(function(){return debounceTime})),__webpack_require__.d(__webpack_exports__,"defaultIfEmpty",(function(){return defaultIfEmpty})),__webpack_require__.d(__webpack_exports__,"delay",(function(){return delay_delay})),__webpack_require__.d(__webpack_exports__,"delayWhen",(function(){return delayWhen})),__webpack_require__.d(__webpack_exports__,"dematerialize",(function(){return dematerialize})),__webpack_require__.d(__webpack_exports__,"distinct",(function(){return distinct})),__webpack_require__.d(__webpack_exports__,"distinctUntilChanged",(function(){return distinctUntilChanged})),__webpack_require__.d(__webpack_exports__,"distinctUntilKeyChanged",(function(){return distinctUntilKeyChanged})),__webpack_require__.d(__webpack_exports__,"elementAt",(function(){return elementAt})),__webpack_require__.d(__webpack_exports__,"endWith",(function(){return endWith})),__webpack_require__.d(__webpack_exports__,"every",(function(){return every})),__webpack_require__.d(__webpack_exports__,"exhaust",(function(){return exhaust})),__webpack_require__.d(__webpack_exports__,"exhaustMap",(function(){return exhaustMap})),__webpack_require__.d(__webpack_exports__,"expand",(function(){return expand})),__webpack_require__.d(__webpack_exports__,"filter",(function(){return filter.a})),__webpack_require__.d(__webpack_exports__,"finalize",(function(){return finalize})),__webpack_require__.d(__webpack_exports__,"find",(function(){return find})),__webpack_require__.d(__webpack_exports__,"findIndex",(function(){return findIndex})),__webpack_require__.d(__webpack_exports__,"first",(function(){return first})),__webpack_require__.d(__webpack_exports__,"groupBy",(function(){return groupBy.b})),__webpack_require__.d(__webpack_exports__,"ignoreElements",(function(){return ignoreElements})),__webpack_require__.d(__webpack_exports__,"isEmpty",(function(){return isEmpty})),__webpack_require__.d(__webpack_exports__,"last",(function(){return last})),__webpack_require__.d(__webpack_exports__,"map",(function(){return map.a})),__webpack_require__.d(__webpack_exports__,"mapTo",(function(){return mapTo})),__webpack_require__.d(__webpack_exports__,"materialize",(function(){return materialize})),__webpack_require__.d(__webpack_exports__,"max",(function(){return max_max})),__webpack_require__.d(__webpack_exports__,"merge",(function(){return merge_merge})),__webpack_require__.d(__webpack_exports__,"mergeAll",(function(){return mergeAll.a})),__webpack_require__.d(__webpack_exports__,"mergeMap",(function(){return mergeMap.b})),__webpack_require__.d(__webpack_exports__,"flatMap",(function(){return mergeMap.a})),__webpack_require__.d(__webpack_exports__,"mergeMapTo",(function(){return mergeMapTo})),__webpack_require__.d(__webpack_exports__,"mergeScan",(function(){return mergeScan})),__webpack_require__.d(__webpack_exports__,"min",(function(){return min_min})),__webpack_require__.d(__webpack_exports__,"multicast",(function(){return multicast})),__webpack_require__.d(__webpack_exports__,"observeOn",(function(){return observeOn.b})),__webpack_require__.d(__webpack_exports__,"onErrorResumeNext",(function(){return onErrorResumeNext})),__webpack_require__.d(__webpack_exports__,"pairwise",(function(){return pairwise})),__webpack_require__.d(__webpack_exports__,"partition",(function(){return partition})),__webpack_require__.d(__webpack_exports__,"pluck",(function(){return pluck})),__webpack_require__.d(__webpack_exports__,"publish",(function(){return publish})),__webpack_require__.d(__webpack_exports__,"publishBehavior",(function(){return publishBehavior})),__webpack_require__.d(__webpack_exports__,"publishLast",(function(){return publishLast})),__webpack_require__.d(__webpack_exports__,"publishReplay",(function(){return publishReplay})),__webpack_require__.d(__webpack_exports__,"race",(function(){return race_race})),__webpack_require__.d(__webpack_exports__,"reduce",(function(){return reduce})),__webpack_require__.d(__webpack_exports__,"repeat",(function(){return repeat})),__webpack_require__.d(__webpack_exports__,"repeatWhen",(function(){return repeatWhen})),__webpack_require__.d(__webpack_exports__,"retry",(function(){return retry})),__webpack_require__.d(__webpack_exports__,"retryWhen",(function(){return retryWhen})),__webpack_require__.d(__webpack_exports__,"refCount",(function(){return operators_refCount.a})),__webpack_require__.d(__webpack_exports__,"sample",(function(){return sample})),__webpack_require__.d(__webpack_exports__,"sampleTime",(function(){return sampleTime})),__webpack_require__.d(__webpack_exports__,"scan",(function(){return scan})),__webpack_require__.d(__webpack_exports__,"sequenceEqual",(function(){return sequenceEqual})),__webpack_require__.d(__webpack_exports__,"share",(function(){return share})),__webpack_require__.d(__webpack_exports__,"shareReplay",(function(){return shareReplay})),__webpack_require__.d(__webpack_exports__,"single",(function(){return single})),__webpack_require__.d(__webpack_exports__,"skip",(function(){return skip})),__webpack_require__.d(__webpack_exports__,"skipLast",(function(){return skipLast})),__webpack_require__.d(__webpack_exports__,"skipUntil",(function(){return skipUntil})),__webpack_require__.d(__webpack_exports__,"skipWhile",(function(){return skipWhile})),__webpack_require__.d(__webpack_exports__,"startWith",(function(){return startWith})),__webpack_require__.d(__webpack_exports__,"subscribeOn",(function(){return subscribeOn})),__webpack_require__.d(__webpack_exports__,"switchAll",(function(){return switchAll})),__webpack_require__.d(__webpack_exports__,"switchMap",(function(){return switchMap})),__webpack_require__.d(__webpack_exports__,"switchMapTo",(function(){return switchMapTo})),__webpack_require__.d(__webpack_exports__,"take",(function(){return take})),__webpack_require__.d(__webpack_exports__,"takeLast",(function(){return takeLast})),__webpack_require__.d(__webpack_exports__,"takeUntil",(function(){return takeUntil})),__webpack_require__.d(__webpack_exports__,"takeWhile",(function(){return takeWhile})),__webpack_require__.d(__webpack_exports__,"tap",(function(){return tap})),__webpack_require__.d(__webpack_exports__,"throttle",(function(){return throttle})),__webpack_require__.d(__webpack_exports__,"throttleTime",(function(){return throttleTime})),__webpack_require__.d(__webpack_exports__,"throwIfEmpty",(function(){return throwIfEmpty})),__webpack_require__.d(__webpack_exports__,"timeInterval",(function(){return timeInterval})),__webpack_require__.d(__webpack_exports__,"timeout",(function(){return timeout})),__webpack_require__.d(__webpack_exports__,"timeoutWith",(function(){return timeoutWith})),__webpack_require__.d(__webpack_exports__,"timestamp",(function(){return timestamp})),__webpack_require__.d(__webpack_exports__,"toArray",(function(){return toArray})),__webpack_require__.d(__webpack_exports__,"window",(function(){return window_window})),__webpack_require__.d(__webpack_exports__,"windowCount",(function(){return windowCount})),__webpack_require__.d(__webpack_exports__,"windowTime",(function(){return windowTime_windowTime})),__webpack_require__.d(__webpack_exports__,"windowToggle",(function(){return windowToggle})),__webpack_require__.d(__webpack_exports__,"windowWhen",(function(){return windowWhen})),__webpack_require__.d(__webpack_exports__,"withLatestFrom",(function(){return withLatestFrom})),__webpack_require__.d(__webpack_exports__,"zip",(function(){return zip_zip})),__webpack_require__.d(__webpack_exports__,"zipAll",(function(){return zipAll}))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var chrome_shim_namespaceObject={};__webpack_require__.r(chrome_shim_namespaceObject),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetUserMedia",(function(){return shimGetUserMedia})),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetDisplayMedia",(function(){return shimGetDisplayMedia})),__webpack_require__.d(chrome_shim_namespaceObject,"shimMediaStream",(function(){return shimMediaStream})),__webpack_require__.d(chrome_shim_namespaceObject,"shimOnTrack",(function(){return shimOnTrack})),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetSendersWithDtmf",(function(){return shimGetSendersWithDtmf})),__webpack_require__.d(chrome_shim_namespaceObject,"shimGetStats",(function(){return shimGetStats})),__webpack_require__.d(chrome_shim_namespaceObject,"shimSenderReceiverGetStats",(function(){return shimSenderReceiverGetStats})),__webpack_require__.d(chrome_shim_namespaceObject,"shimAddTrackRemoveTrackWithNative",(function(){return shimAddTrackRemoveTrackWithNative})),__webpack_require__.d(chrome_shim_namespaceObject,"shimAddTrackRemoveTrack",(function(){return shimAddTrackRemoveTrack})),__webpack_require__.d(chrome_shim_namespaceObject,"shimPeerConnection",(function(){return shimPeerConnection})),__webpack_require__.d(chrome_shim_namespaceObject,"fixNegotiationNeeded",(function(){return fixNegotiationNeeded}));var edge_shim_namespaceObject={};__webpack_require__.r(edge_shim_namespaceObject),__webpack_require__.d(edge_shim_namespaceObject,"shimGetUserMedia",(function(){return getusermedia_shimGetUserMedia})),__webpack_require__.d(edge_shim_namespaceObject,"shimGetDisplayMedia",(function(){return getdisplaymedia_shimGetDisplayMedia})),__webpack_require__.d(edge_shim_namespaceObject,"shimPeerConnection",(function(){return edge_shim_shimPeerConnection})),__webpack_require__.d(edge_shim_namespaceObject,"shimReplaceTrack",(function(){return shimReplaceTrack}));var firefox_shim_namespaceObject={};__webpack_require__.r(firefox_shim_namespaceObject),__webpack_require__.d(firefox_shim_namespaceObject,"shimGetUserMedia",(function(){return firefox_getusermedia_shimGetUserMedia})),__webpack_require__.d(firefox_shim_namespaceObject,"shimGetDisplayMedia",(function(){return firefox_getdisplaymedia_shimGetDisplayMedia})),__webpack_require__.d(firefox_shim_namespaceObject,"shimOnTrack",(function(){return firefox_shim_shimOnTrack})),__webpack_require__.d(firefox_shim_namespaceObject,"shimPeerConnection",(function(){return firefox_shim_shimPeerConnection})),__webpack_require__.d(firefox_shim_namespaceObject,"shimSenderGetStats",(function(){return shimSenderGetStats})),__webpack_require__.d(firefox_shim_namespaceObject,"shimReceiverGetStats",(function(){return shimReceiverGetStats})),__webpack_require__.d(firefox_shim_namespaceObject,"shimRemoveStream",(function(){return shimRemoveStream})),__webpack_require__.d(firefox_shim_namespaceObject,"shimRTCDataChannel",(function(){return shimRTCDataChannel})),__webpack_require__.d(firefox_shim_namespaceObject,"shimAddTransceiver",(function(){return shimAddTransceiver})),__webpack_require__.d(firefox_shim_namespaceObject,"shimCreateOffer",(function(){return shimCreateOffer})),__webpack_require__.d(firefox_shim_namespaceObject,"shimCreateAnswer",(function(){return shimCreateAnswer}));var safari_shim_namespaceObject={};__webpack_require__.r(safari_shim_namespaceObject),__webpack_require__.d(safari_shim_namespaceObject,"shimLocalStreamsAPI",(function(){return shimLocalStreamsAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimRemoteStreamsAPI",(function(){return shimRemoteStreamsAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimCallbacksAPI",(function(){return shimCallbacksAPI})),__webpack_require__.d(safari_shim_namespaceObject,"shimGetUserMedia",(function(){return safari_shim_shimGetUserMedia})),__webpack_require__.d(safari_shim_namespaceObject,"shimConstraints",(function(){return shimConstraints})),__webpack_require__.d(safari_shim_namespaceObject,"shimRTCIceServerUrls",(function(){return shimRTCIceServerUrls})),__webpack_require__.d(safari_shim_namespaceObject,"shimTrackEventTransceiver",(function(){return shimTrackEventTransceiver})),__webpack_require__.d(safari_shim_namespaceObject,"shimCreateOfferLegacy",(function(){return shimCreateOfferLegacy}));var common_shim_namespaceObject={};__webpack_require__.r(common_shim_namespaceObject),__webpack_require__.d(common_shim_namespaceObject,"shimRTCIceCandidate",(function(){return shimRTCIceCandidate})),__webpack_require__.d(common_shim_namespaceObject,"shimMaxMessageSize",(function(){return shimMaxMessageSize})),__webpack_require__.d(common_shim_namespaceObject,"shimSendThrowTypeError",(function(){return shimSendThrowTypeError})),__webpack_require__.d(common_shim_namespaceObject,"shimConnectionState",(function(){return shimConnectionState})),__webpack_require__.d(common_shim_namespaceObject,"removeAllowExtmapMixed",(function(){return removeAllowExtmapMixed}));var adapter_core_namespaceObject={};__webpack_require__.r(adapter_core_namespaceObject),__webpack_require__.d(adapter_core_namespaceObject,"default",(function(){return adapter_core}));let logDisabled_=!0,deprecationWarnings_=!0;function extractVersion(uastring,expr,pos){const match=uastring.match(expr);return match&&match.length>=pos&&parseInt(match[pos],10)}function wrapPeerConnectionEvent(window,eventNameToWrap,wrapper){if(!window.RTCPeerConnection)return;const proto=window.RTCPeerConnection.prototype,nativeAddEventListener=proto.addEventListener;proto.addEventListener=function(nativeEventName,cb){if(nativeEventName!==eventNameToWrap)return nativeAddEventListener.apply(this,arguments);const wrappedCallback=e=>{const modifiedEvent=wrapper(e);modifiedEvent&&cb(modifiedEvent)};return this._eventMap=this._eventMap||{},this._eventMap[cb]=wrappedCallback,nativeAddEventListener.apply(this,[nativeEventName,wrappedCallback])};const nativeRemoveEventListener=proto.removeEventListener;proto.removeEventListener=function(nativeEventName,cb){if(nativeEventName!==eventNameToWrap||!this._eventMap||!this._eventMap[cb])return nativeRemoveEventListener.apply(this,arguments);const unwrappedCb=this._eventMap[cb];return delete this._eventMap[cb],nativeRemoveEventListener.apply(this,[nativeEventName,unwrappedCb])},Object.defineProperty(proto,"on"+eventNameToWrap,{get(){return this["_on"+eventNameToWrap]},set(cb){this["_on"+eventNameToWrap]&&(this.removeEventListener(eventNameToWrap,this["_on"+eventNameToWrap]),delete this["_on"+eventNameToWrap]),cb&&this.addEventListener(eventNameToWrap,this["_on"+eventNameToWrap]=cb)},enumerable:!0,configurable:!0})}function disableLog(bool){return"boolean"!=typeof bool?new Error("Argument type: "+typeof bool+". Please use a boolean."):(logDisabled_=bool,bool?"adapter.js logging disabled":"adapter.js logging enabled")}function disableWarnings(bool){return"boolean"!=typeof bool?new Error("Argument type: "+typeof bool+". Please use a boolean."):(deprecationWarnings_=!bool,"adapter.js deprecation warnings "+(bool?"disabled":"enabled"))}function log(){if("object"==typeof window){if(logDisabled_)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}}function deprecated(oldMethod,newMethod){deprecationWarnings_&&console.warn(oldMethod+" is deprecated, please use "+newMethod+" instead.")}function detectBrowser(window){const{navigator:navigator}=window,result={browser:null,version:null};if(void 0===window||!window.navigator)return result.browser="Not a browser.",result;if(navigator.mozGetUserMedia)result.browser="firefox",result.version=extractVersion(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia||!1===window.isSecureContext&&window.webkitRTCPeerConnection&&!window.RTCIceGatherer)result.browser="chrome",result.version=extractVersion(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))result.browser="edge",result.version=extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!window.RTCPeerConnection||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return result.browser="Not a supported browser.",result;result.browser="safari",result.version=extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1),result.supportsUnifiedPlan=window.RTCRtpTransceiver&&"currentDirection"in window.RTCRtpTransceiver.prototype}return result}function isObject(val){return"[object Object]"===Object.prototype.toString.call(val)}function compactObject(data){return isObject(data)?Object.keys(data).reduce((function(accumulator,key){const isObj=isObject(data[key]),value=isObj?compactObject(data[key]):data[key],isEmptyObject=isObj&&!Object.keys(value).length;return void 0===value||isEmptyObject?accumulator:Object.assign(accumulator,{[key]:value})}),{}):data}function filterStats(result,track,outbound){const streamStatsType=outbound?"outbound-rtp":"inbound-rtp",filteredResult=new Map;if(null===track)return filteredResult;const trackStats=[];return result.forEach(value=>{"track"===value.type&&value.trackIdentifier===track.id&&trackStats.push(value)}),trackStats.forEach(trackStat=>{result.forEach(stats=>{stats.type===streamStatsType&&stats.trackId===trackStat.id&&function walkStats(stats,base,resultSet){base&&!resultSet.has(base.id)&&(resultSet.set(base.id,base),Object.keys(base).forEach(name=>{name.endsWith("Id")?walkStats(stats,stats.get(base[name]),resultSet):name.endsWith("Ids")&&base[name].forEach(id=>{walkStats(stats,stats.get(id),resultSet)})}))}(result,stats,filteredResult)})}),filteredResult}const getusermedia_logging=log;function shimGetUserMedia(window){const navigator=window&&window.navigator;if(!navigator.mediaDevices)return;const browserDetails=detectBrowser(window),constraintsToChrome_=function(c){if("object"!=typeof c||c.mandatory||c.optional)return c;const cc={};return Object.keys(c).forEach(key=>{if("require"===key||"advanced"===key||"mediaSource"===key)return;const r="object"==typeof c[key]?c[key]:{ideal:c[key]};void 0!==r.exact&&"number"==typeof r.exact&&(r.min=r.max=r.exact);const oldname_=function(prefix,name){return prefix?prefix+name.charAt(0).toUpperCase()+name.slice(1):"deviceId"===name?"sourceId":name};if(void 0!==r.ideal){cc.optional=cc.optional||[];let oc={};"number"==typeof r.ideal?(oc[oldname_("min",key)]=r.ideal,cc.optional.push(oc),oc={},oc[oldname_("max",key)]=r.ideal,cc.optional.push(oc)):(oc[oldname_("",key)]=r.ideal,cc.optional.push(oc))}void 0!==r.exact&&"number"!=typeof r.exact?(cc.mandatory=cc.mandatory||{},cc.mandatory[oldname_("",key)]=r.exact):["min","max"].forEach(mix=>{void 0!==r[mix]&&(cc.mandatory=cc.mandatory||{},cc.mandatory[oldname_(mix,key)]=r[mix])})}),c.advanced&&(cc.optional=(cc.optional||[]).concat(c.advanced)),cc},shimConstraints_=function(constraints,func){if(browserDetails.version>=61)return func(constraints);if((constraints=JSON.parse(JSON.stringify(constraints)))&&"object"==typeof constraints.audio){const remap=function(obj,a,b){a in obj&&!(b in obj)&&(obj[b]=obj[a],delete obj[a])};remap((constraints=JSON.parse(JSON.stringify(constraints))).audio,"autoGainControl","googAutoGainControl"),remap(constraints.audio,"noiseSuppression","googNoiseSuppression"),constraints.audio=constraintsToChrome_(constraints.audio)}if(constraints&&"object"==typeof constraints.video){let face=constraints.video.facingMode;face=face&&("object"==typeof face?face:{ideal:face});const getSupportedFacingModeLies=browserDetails.version<66;if(face&&("user"===face.exact||"environment"===face.exact||"user"===face.ideal||"environment"===face.ideal)&&(!navigator.mediaDevices.getSupportedConstraints||!navigator.mediaDevices.getSupportedConstraints().facingMode||getSupportedFacingModeLies)){let matches;if(delete constraints.video.facingMode,"environment"===face.exact||"environment"===face.ideal?matches=["back","rear"]:"user"!==face.exact&&"user"!==face.ideal||(matches=["front"]),matches)return navigator.mediaDevices.enumerateDevices().then(devices=>{let dev=(devices=devices.filter(d=>"videoinput"===d.kind)).find(d=>matches.some(match=>d.label.toLowerCase().includes(match)));return!dev&&devices.length&&matches.includes("back")&&(dev=devices[devices.length-1]),dev&&(constraints.video.deviceId=face.exact?{exact:dev.deviceId}:{ideal:dev.deviceId}),constraints.video=constraintsToChrome_(constraints.video),getusermedia_logging("chrome: "+JSON.stringify(constraints)),func(constraints)})}constraints.video=constraintsToChrome_(constraints.video)}return getusermedia_logging("chrome: "+JSON.stringify(constraints)),func(constraints)},shimError_=function(e){return browserDetails.version>=64?e:{name:{PermissionDeniedError:"NotAllowedError",PermissionDismissedError:"NotAllowedError",InvalidStateError:"NotAllowedError",DevicesNotFoundError:"NotFoundError",ConstraintNotSatisfiedError:"OverconstrainedError",TrackStartError:"NotReadableError",MediaDeviceFailedDueToShutdown:"NotAllowedError",MediaDeviceKillSwitchOn:"NotAllowedError",TabCaptureError:"AbortError",ScreenCaptureError:"AbortError",DeviceCaptureError:"AbortError"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&": ")+this.message}}};if(navigator.getUserMedia=function(constraints,onSuccess,onError){shimConstraints_(constraints,c=>{navigator.webkitGetUserMedia(c,onSuccess,e=>{onError&&onError(shimError_(e))})})}.bind(navigator),navigator.mediaDevices.getUserMedia){const origGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(cs){return shimConstraints_(cs,c=>origGetUserMedia(c).then(stream=>{if(c.audio&&!stream.getAudioTracks().length||c.video&&!stream.getVideoTracks().length)throw stream.getTracks().forEach(track=>{track.stop()}),new DOMException("","NotFoundError");return stream},e=>Promise.reject(shimError_(e))))}}}function shimGetDisplayMedia(window,getSourceId){window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||window.navigator.mediaDevices&&("function"==typeof getSourceId?window.navigator.mediaDevices.getDisplayMedia=function(constraints){return getSourceId(constraints).then(sourceId=>{const widthSpecified=constraints.video&&constraints.video.width,heightSpecified=constraints.video&&constraints.video.height,frameRateSpecified=constraints.video&&constraints.video.frameRate;return constraints.video={mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:sourceId,maxFrameRate:frameRateSpecified||3}},widthSpecified&&(constraints.video.mandatory.maxWidth=widthSpecified),heightSpecified&&(constraints.video.mandatory.maxHeight=heightSpecified),window.navigator.mediaDevices.getUserMedia(constraints)})}:console.error("shimGetDisplayMedia: getSourceId argument is not a function"))}function shimMediaStream(window){window.MediaStream=window.MediaStream||window.webkitMediaStream}function shimOnTrack(window){if("object"==typeof window&&window.RTCPeerConnection&&!("ontrack"in window.RTCPeerConnection.prototype)){Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get(){return this._ontrack},set(f){this._ontrack&&this.removeEventListener("track",this._ontrack),this.addEventListener("track",this._ontrack=f)},enumerable:!0,configurable:!0});const origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=e=>{e.stream.addEventListener("addtrack",te=>{let receiver;receiver=window.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(r=>r.track&&r.track.id===te.track.id):{track:te.track};const event=new Event("track");event.track=te.track,event.receiver=receiver,event.transceiver={receiver:receiver},event.streams=[e.stream],this.dispatchEvent(event)}),e.stream.getTracks().forEach(track=>{let receiver;receiver=window.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(r=>r.track&&r.track.id===track.id):{track:track};const event=new Event("track");event.track=track,event.receiver=receiver,event.transceiver={receiver:receiver},event.streams=[e.stream],this.dispatchEvent(event)})},this.addEventListener("addstream",this._ontrackpoly)),origSetRemoteDescription.apply(this,arguments)}}else wrapPeerConnectionEvent(window,"track",e=>(e.transceiver||Object.defineProperty(e,"transceiver",{value:{receiver:e.receiver}}),e))}function shimGetSendersWithDtmf(window){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in window.RTCPeerConnection.prototype)&&"createDTMFSender"in window.RTCPeerConnection.prototype){const shimSenderWithDtmf=function(pc,track){return{track:track,get dtmf(){return void 0===this._dtmf&&("audio"===track.kind?this._dtmf=pc.createDTMFSender(track):this._dtmf=null),this._dtmf},_pc:pc}};if(!window.RTCPeerConnection.prototype.getSenders){window.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const origAddTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addTrack=function(track,stream){let sender=origAddTrack.apply(this,arguments);return sender||(sender=shimSenderWithDtmf(this,track),this._senders.push(sender)),sender};const origRemoveTrack=window.RTCPeerConnection.prototype.removeTrack;window.RTCPeerConnection.prototype.removeTrack=function(sender){origRemoveTrack.apply(this,arguments);const idx=this._senders.indexOf(sender);-1!==idx&&this._senders.splice(idx,1)}}const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){this._senders=this._senders||[],origAddStream.apply(this,[stream]),stream.getTracks().forEach(track=>{this._senders.push(shimSenderWithDtmf(this,track))})};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;window.RTCPeerConnection.prototype.removeStream=function(stream){this._senders=this._senders||[],origRemoveStream.apply(this,[stream]),stream.getTracks().forEach(track=>{const sender=this._senders.find(s=>s.track===track);sender&&this._senders.splice(this._senders.indexOf(sender),1)})}}else if("object"==typeof window&&window.RTCPeerConnection&&"getSenders"in window.RTCPeerConnection.prototype&&"createDTMFSender"in window.RTCPeerConnection.prototype&&window.RTCRtpSender&&!("dtmf"in window.RTCRtpSender.prototype)){const origGetSenders=window.RTCPeerConnection.prototype.getSenders;window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders},Object.defineProperty(window.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function shimGetStats(window){if(!window.RTCPeerConnection)return;const origGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(){const[selector,onSucc,onErr]=arguments;if(arguments.length>0&&"function"==typeof selector)return origGetStats.apply(this,arguments);if(0===origGetStats.length&&(0===arguments.length||"function"!=typeof selector))return origGetStats.apply(this,[]);const fixChromeStats_=function(response){const standardReport={};return response.result().forEach(report=>{const standardStats={id:report.id,timestamp:report.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[report.type]||report.type};report.names().forEach(name=>{standardStats[name]=report.stat(name)}),standardReport[standardStats.id]=standardStats}),standardReport},makeMapStats=function(stats){return new Map(Object.keys(stats).map(key=>[key,stats[key]]))};if(arguments.length>=2){const successCallbackWrapper_=function(response){onSucc(makeMapStats(fixChromeStats_(response)))};return origGetStats.apply(this,[successCallbackWrapper_,selector])}return new Promise((resolve,reject)=>{origGetStats.apply(this,[function(response){resolve(makeMapStats(fixChromeStats_(response)))},reject])}).then(onSucc,onErr)}}function shimSenderReceiverGetStats(window){if(!("object"==typeof window&&window.RTCPeerConnection&&window.RTCRtpSender&&window.RTCRtpReceiver))return;if(!("getStats"in window.RTCRtpSender.prototype)){const origGetSenders=window.RTCPeerConnection.prototype.getSenders;origGetSenders&&(window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders});const origAddTrack=window.RTCPeerConnection.prototype.addTrack;origAddTrack&&(window.RTCPeerConnection.prototype.addTrack=function(){const sender=origAddTrack.apply(this,arguments);return sender._pc=this,sender}),window.RTCRtpSender.prototype.getStats=function(){const sender=this;return this._pc.getStats().then(result=>filterStats(result,sender.track,!0))}}if(!("getStats"in window.RTCRtpReceiver.prototype)){const origGetReceivers=window.RTCPeerConnection.prototype.getReceivers;origGetReceivers&&(window.RTCPeerConnection.prototype.getReceivers=function(){const receivers=origGetReceivers.apply(this,[]);return receivers.forEach(receiver=>receiver._pc=this),receivers}),wrapPeerConnectionEvent(window,"track",e=>(e.receiver._pc=e.srcElement,e)),window.RTCRtpReceiver.prototype.getStats=function(){const receiver=this;return this._pc.getStats().then(result=>filterStats(result,receiver.track,!1))}}if(!("getStats"in window.RTCRtpSender.prototype)||!("getStats"in window.RTCRtpReceiver.prototype))return;const origGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof window.MediaStreamTrack){const track=arguments[0];let sender,receiver,err;return this.getSenders().forEach(s=>{s.track===track&&(sender?err=!0:sender=s)}),this.getReceivers().forEach(r=>(r.track===track&&(receiver?err=!0:receiver=r),r.track===track)),err||sender&&receiver?Promise.reject(new DOMException("There are more than one sender or receiver for the track.","InvalidAccessError")):sender?sender.getStats():receiver?receiver.getStats():Promise.reject(new DOMException("There is no sender or receiver for the track.","InvalidAccessError"))}return origGetStats.apply(this,arguments)}}function shimAddTrackRemoveTrackWithNative(window){window.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(streamId=>this._shimmedLocalStreams[streamId][0])};const origAddTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addTrack=function(track,stream){if(!stream)return origAddTrack.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const sender=origAddTrack.apply(this,arguments);return this._shimmedLocalStreams[stream.id]?-1===this._shimmedLocalStreams[stream.id].indexOf(sender)&&this._shimmedLocalStreams[stream.id].push(sender):this._shimmedLocalStreams[stream.id]=[stream,sender],sender};const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){this._shimmedLocalStreams=this._shimmedLocalStreams||{},stream.getTracks().forEach(track=>{if(this.getSenders().find(s=>s.track===track))throw new DOMException("Track already exists.","InvalidAccessError")});const existingSenders=this.getSenders();origAddStream.apply(this,arguments);const newSenders=this.getSenders().filter(newSender=>-1===existingSenders.indexOf(newSender));this._shimmedLocalStreams[stream.id]=[stream].concat(newSenders)};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;window.RTCPeerConnection.prototype.removeStream=function(stream){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[stream.id],origRemoveStream.apply(this,arguments)};const origRemoveTrack=window.RTCPeerConnection.prototype.removeTrack;window.RTCPeerConnection.prototype.removeTrack=function(sender){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},sender&&Object.keys(this._shimmedLocalStreams).forEach(streamId=>{const idx=this._shimmedLocalStreams[streamId].indexOf(sender);-1!==idx&&this._shimmedLocalStreams[streamId].splice(idx,1),1===this._shimmedLocalStreams[streamId].length&&delete this._shimmedLocalStreams[streamId]}),origRemoveTrack.apply(this,arguments)}}function shimAddTrackRemoveTrack(window){if(!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);if(window.RTCPeerConnection.prototype.addTrack&&browserDetails.version>=65)return shimAddTrackRemoveTrackWithNative(window);const origGetLocalStreams=window.RTCPeerConnection.prototype.getLocalStreams;window.RTCPeerConnection.prototype.getLocalStreams=function(){const nativeStreams=origGetLocalStreams.apply(this);return this._reverseStreams=this._reverseStreams||{},nativeStreams.map(stream=>this._reverseStreams[stream.id])};const origAddStream=window.RTCPeerConnection.prototype.addStream;window.RTCPeerConnection.prototype.addStream=function(stream){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},stream.getTracks().forEach(track=>{if(this.getSenders().find(s=>s.track===track))throw new DOMException("Track already exists.","InvalidAccessError")}),!this._reverseStreams[stream.id]){const newStream=new window.MediaStream(stream.getTracks());this._streams[stream.id]=newStream,this._reverseStreams[newStream.id]=stream,stream=newStream}origAddStream.apply(this,[stream])};const origRemoveStream=window.RTCPeerConnection.prototype.removeStream;function replaceInternalStreamId(pc,description){let sdp=description.sdp;return Object.keys(pc._reverseStreams||[]).forEach(internalId=>{const externalStream=pc._reverseStreams[internalId],internalStream=pc._streams[externalStream.id];sdp=sdp.replace(new RegExp(internalStream.id,"g"),externalStream.id)}),new RTCSessionDescription({type:description.type,sdp:sdp})}function replaceExternalStreamId(pc,description){let sdp=description.sdp;return Object.keys(pc._reverseStreams||[]).forEach(internalId=>{const externalStream=pc._reverseStreams[internalId],internalStream=pc._streams[externalStream.id];sdp=sdp.replace(new RegExp(externalStream.id,"g"),internalStream.id)}),new RTCSessionDescription({type:description.type,sdp:sdp})}window.RTCPeerConnection.prototype.removeStream=function(stream){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},origRemoveStream.apply(this,[this._streams[stream.id]||stream]),delete this._reverseStreams[this._streams[stream.id]?this._streams[stream.id].id:stream.id],delete this._streams[stream.id]},window.RTCPeerConnection.prototype.addTrack=function(track,stream){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");const streams=[].slice.call(arguments,1);if(1!==streams.length||!streams[0].getTracks().find(t=>t===track))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");const alreadyExists=this.getSenders().find(s=>s.track===track);if(alreadyExists)throw new DOMException("Track already exists.","InvalidAccessError");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const oldStream=this._streams[stream.id];if(oldStream)oldStream.addTrack(track),Promise.resolve().then(()=>{this.dispatchEvent(new Event("negotiationneeded"))});else{const newStream=new window.MediaStream([track]);this._streams[stream.id]=newStream,this._reverseStreams[newStream.id]=stream,this.addStream(newStream)}return this.getSenders().find(s=>s.track===track)},["createOffer","createAnswer"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method],methodObj={[method](){const args=arguments;return arguments.length&&"function"==typeof arguments[0]?nativeMethod.apply(this,[description=>{const desc=replaceInternalStreamId(this,description);args[0].apply(null,[desc])},err=>{args[1]&&args[1].apply(null,err)},arguments[2]]):nativeMethod.apply(this,arguments).then(description=>replaceInternalStreamId(this,description))}};window.RTCPeerConnection.prototype[method]=methodObj[method]}));const origSetLocalDescription=window.RTCPeerConnection.prototype.setLocalDescription;window.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=replaceExternalStreamId(this,arguments[0]),origSetLocalDescription.apply(this,arguments)):origSetLocalDescription.apply(this,arguments)};const origLocalDescription=Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype,"localDescription");Object.defineProperty(window.RTCPeerConnection.prototype,"localDescription",{get(){const description=origLocalDescription.get.apply(this);return""===description.type?description:replaceInternalStreamId(this,description)}}),window.RTCPeerConnection.prototype.removeTrack=function(sender){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");if(!sender._pc)throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.","TypeError");if(!(sender._pc===this))throw new DOMException("Sender was not created by this connection.","InvalidAccessError");let stream;this._streams=this._streams||{},Object.keys(this._streams).forEach(streamid=>{this._streams[streamid].getTracks().find(track=>sender.track===track)&&(stream=this._streams[streamid])}),stream&&(1===stream.getTracks().length?this.removeStream(this._reverseStreams[stream.id]):stream.removeTrack(sender.track),this.dispatchEvent(new Event("negotiationneeded")))}}function shimPeerConnection(window){const browserDetails=detectBrowser(window);if(!window.RTCPeerConnection&&window.webkitRTCPeerConnection&&(window.RTCPeerConnection=window.webkitRTCPeerConnection),!window.RTCPeerConnection)return;const addIceCandidateNullSupported=0===window.RTCPeerConnection.prototype.addIceCandidate.length;browserDetails.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method],methodObj={[method](){return arguments[0]=new("addIceCandidate"===method?window.RTCIceCandidate:window.RTCSessionDescription)(arguments[0]),nativeMethod.apply(this,arguments)}};window.RTCPeerConnection.prototype[method]=methodObj[method]}));const nativeAddIceCandidate=window.RTCPeerConnection.prototype.addIceCandidate;window.RTCPeerConnection.prototype.addIceCandidate=function(){return addIceCandidateNullSupported||arguments[0]?browserDetails.version<78&&arguments[0]&&""===arguments[0].candidate?Promise.resolve():nativeAddIceCandidate.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}function fixNegotiationNeeded(window){wrapPeerConnectionEvent(window,"negotiationneeded",e=>{if("stable"===e.target.signalingState)return e})}var rtcpeerconnection=__webpack_require__(343),rtcpeerconnection_default=__webpack_require__.n(rtcpeerconnection);function getusermedia_shimGetUserMedia(window){const navigator=window&&window.navigator,origGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(c){return origGetUserMedia(c).catch(e=>Promise.reject(function(e){return{name:{PermissionDeniedError:"NotAllowedError"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString(){return this.name}}}(e)))}}function getdisplaymedia_shimGetDisplayMedia(window){"getDisplayMedia"in window.navigator&&window.navigator.mediaDevices&&(window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||(window.navigator.mediaDevices.getDisplayMedia=window.navigator.getDisplayMedia.bind(window.navigator)))}function edge_shim_shimPeerConnection(window){const browserDetails=detectBrowser(window);if(window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(args){return args}),window.RTCSessionDescription||(window.RTCSessionDescription=function(args){return args}),browserDetails.version<15025)){const origMSTEnabled=Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype,"enabled");Object.defineProperty(window.MediaStreamTrack.prototype,"enabled",{set(value){origMSTEnabled.set.call(this,value);const ev=new Event("enabled");ev.enabled=value,this.dispatchEvent(ev)}})}window.RTCRtpSender&&!("dtmf"in window.RTCRtpSender.prototype)&&Object.defineProperty(window.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=new window.RTCDtmfSender(this):"video"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),window.RTCDtmfSender&&!window.RTCDTMFSender&&(window.RTCDTMFSender=window.RTCDtmfSender);const RTCPeerConnectionShim=rtcpeerconnection_default()(window,browserDetails.version);window.RTCPeerConnection=function(config){return config&&config.iceServers&&(config.iceServers=function(iceServers,edgeVersion){let hasTurn=!1;return(iceServers=JSON.parse(JSON.stringify(iceServers))).filter(server=>{if(server&&(server.urls||server.url)){var urls=server.urls||server.url;server.url&&!server.urls&&deprecated("RTCIceServer.url","RTCIceServer.urls");const isString="string"==typeof urls;return isString&&(urls=[urls]),urls=urls.filter(url=>{if(0===url.indexOf("stun:"))return!1;const validTurn=url.startsWith("turn")&&!url.startsWith("turn:[")&&url.includes("transport=udp");return validTurn&&!hasTurn?(hasTurn=!0,!0):validTurn&&!hasTurn}),delete server.url,server.urls=isString?urls[0]:urls,!!urls.length}})}(config.iceServers,browserDetails.version),log("ICE servers after filtering:",config.iceServers)),new RTCPeerConnectionShim(config)},window.RTCPeerConnection.prototype=RTCPeerConnectionShim.prototype}function shimReplaceTrack(window){window.RTCRtpSender&&!("replaceTrack"in window.RTCRtpSender.prototype)&&(window.RTCRtpSender.prototype.replaceTrack=window.RTCRtpSender.prototype.setTrack)}function firefox_getusermedia_shimGetUserMedia(window){const browserDetails=detectBrowser(window),navigator=window&&window.navigator,MediaStreamTrack=window&&window.MediaStreamTrack;if(navigator.getUserMedia=function(constraints,onSuccess,onError){deprecated("navigator.getUserMedia","navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(constraints).then(onSuccess,onError)},!(browserDetails.version>55&&"autoGainControl"in navigator.mediaDevices.getSupportedConstraints())){const remap=function(obj,a,b){a in obj&&!(b in obj)&&(obj[b]=obj[a],delete obj[a])},nativeGetUserMedia=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);if(navigator.mediaDevices.getUserMedia=function(c){return"object"==typeof c&&"object"==typeof c.audio&&(c=JSON.parse(JSON.stringify(c)),remap(c.audio,"autoGainControl","mozAutoGainControl"),remap(c.audio,"noiseSuppression","mozNoiseSuppression")),nativeGetUserMedia(c)},MediaStreamTrack&&MediaStreamTrack.prototype.getSettings){const nativeGetSettings=MediaStreamTrack.prototype.getSettings;MediaStreamTrack.prototype.getSettings=function(){const obj=nativeGetSettings.apply(this,arguments);return remap(obj,"mozAutoGainControl","autoGainControl"),remap(obj,"mozNoiseSuppression","noiseSuppression"),obj}}if(MediaStreamTrack&&MediaStreamTrack.prototype.applyConstraints){const nativeApplyConstraints=MediaStreamTrack.prototype.applyConstraints;MediaStreamTrack.prototype.applyConstraints=function(c){return"audio"===this.kind&&"object"==typeof c&&(c=JSON.parse(JSON.stringify(c)),remap(c,"autoGainControl","mozAutoGainControl"),remap(c,"noiseSuppression","mozNoiseSuppression")),nativeApplyConstraints.apply(this,[c])}}}}function firefox_getdisplaymedia_shimGetDisplayMedia(window,preferredMediaSource){window.navigator.mediaDevices&&"getDisplayMedia"in window.navigator.mediaDevices||window.navigator.mediaDevices&&(window.navigator.mediaDevices.getDisplayMedia=function(constraints){if(!constraints||!constraints.video){const err=new DOMException("getDisplayMedia without video constraints is undefined");return err.name="NotFoundError",err.code=8,Promise.reject(err)}return!0===constraints.video?constraints.video={mediaSource:preferredMediaSource}:constraints.video.mediaSource=preferredMediaSource,window.navigator.mediaDevices.getUserMedia(constraints)})}function firefox_shim_shimOnTrack(window){"object"==typeof window&&window.RTCTrackEvent&&"receiver"in window.RTCTrackEvent.prototype&&!("transceiver"in window.RTCTrackEvent.prototype)&&Object.defineProperty(window.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function firefox_shim_shimPeerConnection(window){const browserDetails=detectBrowser(window);if("object"!=typeof window||!window.RTCPeerConnection&&!window.mozRTCPeerConnection)return;if(!window.RTCPeerConnection&&window.mozRTCPeerConnection&&(window.RTCPeerConnection=window.mozRTCPeerConnection),browserDetails.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(method){const nativeMethod=window.RTCPeerConnection.prototype[method],methodObj={[method](){return arguments[0]=new("addIceCandidate"===method?window.RTCIceCandidate:window.RTCSessionDescription)(arguments[0]),nativeMethod.apply(this,arguments)}};window.RTCPeerConnection.prototype[method]=methodObj[method]})),browserDetails.version<68){const nativeAddIceCandidate=window.RTCPeerConnection.prototype.addIceCandidate;window.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?arguments[0]&&""===arguments[0].candidate?Promise.resolve():nativeAddIceCandidate.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}const modernStatsTypes={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},nativeGetStats=window.RTCPeerConnection.prototype.getStats;window.RTCPeerConnection.prototype.getStats=function(){const[selector,onSucc,onErr]=arguments;return nativeGetStats.apply(this,[selector||null]).then(stats=>{if(browserDetails.version<53&&!onSucc)try{stats.forEach(stat=>{stat.type=modernStatsTypes[stat.type]||stat.type})}catch(e){if("TypeError"!==e.name)throw e;stats.forEach((stat,i)=>{stats.set(i,Object.assign({},stat,{type:modernStatsTypes[stat.type]||stat.type}))})}return stats}).then(onSucc,onErr)}}function shimSenderGetStats(window){if("object"!=typeof window||!window.RTCPeerConnection||!window.RTCRtpSender)return;if(window.RTCRtpSender&&"getStats"in window.RTCRtpSender.prototype)return;const origGetSenders=window.RTCPeerConnection.prototype.getSenders;origGetSenders&&(window.RTCPeerConnection.prototype.getSenders=function(){const senders=origGetSenders.apply(this,[]);return senders.forEach(sender=>sender._pc=this),senders});const origAddTrack=window.RTCPeerConnection.prototype.addTrack;origAddTrack&&(window.RTCPeerConnection.prototype.addTrack=function(){const sender=origAddTrack.apply(this,arguments);return sender._pc=this,sender}),window.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}function shimReceiverGetStats(window){if("object"!=typeof window||!window.RTCPeerConnection||!window.RTCRtpSender)return;if(window.RTCRtpSender&&"getStats"in window.RTCRtpReceiver.prototype)return;const origGetReceivers=window.RTCPeerConnection.prototype.getReceivers;origGetReceivers&&(window.RTCPeerConnection.prototype.getReceivers=function(){const receivers=origGetReceivers.apply(this,[]);return receivers.forEach(receiver=>receiver._pc=this),receivers}),wrapPeerConnectionEvent(window,"track",e=>(e.receiver._pc=e.srcElement,e)),window.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function shimRemoveStream(window){window.RTCPeerConnection&&!("removeStream"in window.RTCPeerConnection.prototype)&&(window.RTCPeerConnection.prototype.removeStream=function(stream){deprecated("removeStream","removeTrack"),this.getSenders().forEach(sender=>{sender.track&&stream.getTracks().includes(sender.track)&&this.removeTrack(sender)})})}function shimRTCDataChannel(window){window.DataChannel&&!window.RTCDataChannel&&(window.RTCDataChannel=window.DataChannel)}function shimAddTransceiver(window){if("object"!=typeof window||!window.RTCPeerConnection)return;const origAddTransceiver=window.RTCPeerConnection.prototype.addTransceiver;origAddTransceiver&&(window.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];const initParameters=arguments[1],shouldPerformCheck=initParameters&&"sendEncodings"in initParameters;shouldPerformCheck&&initParameters.sendEncodings.forEach(encodingParam=>{if("rid"in encodingParam){if(!/^[a-z0-9]{0,16}$/i.test(encodingParam.rid))throw new TypeError("Invalid RID value provided.")}if("scaleResolutionDownBy"in encodingParam&&!(parseFloat(encodingParam.scaleResolutionDownBy)>=1))throw new RangeError("scale_resolution_down_by must be >= 1.0");if("maxFramerate"in encodingParam&&!(parseFloat(encodingParam.maxFramerate)>=0))throw new RangeError("max_framerate must be >= 0.0")});const transceiver=origAddTransceiver.apply(this,arguments);if(shouldPerformCheck){const{sender:sender}=transceiver,params=sender.getParameters();"encodings"in params||(params.encodings=initParameters.sendEncodings,this.setParametersPromises.push(sender.setParameters(params).catch(()=>{})))}return transceiver})}function shimCreateOffer(window){if("object"!=typeof window||!window.RTCPeerConnection)return;const origCreateOffer=window.RTCPeerConnection.prototype.createOffer;window.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then(()=>origCreateOffer.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):origCreateOffer.apply(this,arguments)}}function shimCreateAnswer(window){if("object"!=typeof window||!window.RTCPeerConnection)return;const origCreateAnswer=window.RTCPeerConnection.prototype.createAnswer;window.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then(()=>origCreateAnswer.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):origCreateAnswer.apply(this,arguments)}}function shimLocalStreamsAPI(window){if("object"==typeof window&&window.RTCPeerConnection){if("getLocalStreams"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!("addStream"in window.RTCPeerConnection.prototype)){const _addTrack=window.RTCPeerConnection.prototype.addTrack;window.RTCPeerConnection.prototype.addStream=function(stream){this._localStreams||(this._localStreams=[]),this._localStreams.includes(stream)||this._localStreams.push(stream),stream.getAudioTracks().forEach(track=>_addTrack.call(this,track,stream)),stream.getVideoTracks().forEach(track=>_addTrack.call(this,track,stream))},window.RTCPeerConnection.prototype.addTrack=function(track,...streams){return streams&&streams.forEach(stream=>{this._localStreams?this._localStreams.includes(stream)||this._localStreams.push(stream):this._localStreams=[stream]}),_addTrack.apply(this,arguments)}}"removeStream"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.removeStream=function(stream){this._localStreams||(this._localStreams=[]);const index=this._localStreams.indexOf(stream);if(-1===index)return;this._localStreams.splice(index,1);const tracks=stream.getTracks();this.getSenders().forEach(sender=>{tracks.includes(sender.track)&&this.removeTrack(sender)})})}}function shimRemoteStreamsAPI(window){if("object"==typeof window&&window.RTCPeerConnection&&("getRemoteStreams"in window.RTCPeerConnection.prototype||(window.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!("onaddstream"in window.RTCPeerConnection.prototype))){Object.defineProperty(window.RTCPeerConnection.prototype,"onaddstream",{get(){return this._onaddstream},set(f){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=f),this.addEventListener("track",this._onaddstreampoly=e=>{e.streams.forEach(stream=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(stream))return;this._remoteStreams.push(stream);const event=new Event("addstream");event.stream=stream,this.dispatchEvent(event)})})}});const origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){const pc=this;return this._onaddstreampoly||this.addEventListener("track",this._onaddstreampoly=function(e){e.streams.forEach(stream=>{if(pc._remoteStreams||(pc._remoteStreams=[]),pc._remoteStreams.indexOf(stream)>=0)return;pc._remoteStreams.push(stream);const event=new Event("addstream");event.stream=stream,pc.dispatchEvent(event)})}),origSetRemoteDescription.apply(pc,arguments)}}}function shimCallbacksAPI(window){if("object"!=typeof window||!window.RTCPeerConnection)return;const prototype=window.RTCPeerConnection.prototype,origCreateOffer=prototype.createOffer,origCreateAnswer=prototype.createAnswer,setLocalDescription=prototype.setLocalDescription,setRemoteDescription=prototype.setRemoteDescription,addIceCandidate=prototype.addIceCandidate;prototype.createOffer=function(successCallback,failureCallback){const options=arguments.length>=2?arguments[2]:arguments[0],promise=origCreateOffer.apply(this,[options]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.createAnswer=function(successCallback,failureCallback){const options=arguments.length>=2?arguments[2]:arguments[0],promise=origCreateAnswer.apply(this,[options]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise};let withCallback=function(description,successCallback,failureCallback){const promise=setLocalDescription.apply(this,[description]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise};prototype.setLocalDescription=withCallback,withCallback=function(description,successCallback,failureCallback){const promise=setRemoteDescription.apply(this,[description]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.setRemoteDescription=withCallback,withCallback=function(candidate,successCallback,failureCallback){const promise=addIceCandidate.apply(this,[candidate]);return failureCallback?(promise.then(successCallback,failureCallback),Promise.resolve()):promise},prototype.addIceCandidate=withCallback}function safari_shim_shimGetUserMedia(window){const navigator=window&&window.navigator;if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const mediaDevices=navigator.mediaDevices,_getUserMedia=mediaDevices.getUserMedia.bind(mediaDevices);navigator.mediaDevices.getUserMedia=constraints=>_getUserMedia(shimConstraints(constraints))}!navigator.getUserMedia&&navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(constraints,cb,errcb){navigator.mediaDevices.getUserMedia(constraints).then(cb,errcb)}.bind(navigator))}function shimConstraints(constraints){return constraints&&void 0!==constraints.video?Object.assign({},constraints,{video:compactObject(constraints.video)}):constraints}function shimRTCIceServerUrls(window){const OrigPeerConnection=window.RTCPeerConnection;window.RTCPeerConnection=function(pcConfig,pcConstraints){if(pcConfig&&pcConfig.iceServers){const newIceServers=[];for(let i=0;i<pcConfig.iceServers.length;i++){let server=pcConfig.iceServers[i];!server.hasOwnProperty("urls")&&server.hasOwnProperty("url")?(deprecated("RTCIceServer.url","RTCIceServer.urls"),server=JSON.parse(JSON.stringify(server)),server.urls=server.url,delete server.url,newIceServers.push(server)):newIceServers.push(pcConfig.iceServers[i])}pcConfig.iceServers=newIceServers}return new OrigPeerConnection(pcConfig,pcConstraints)},window.RTCPeerConnection.prototype=OrigPeerConnection.prototype,"generateCertificate"in window.RTCPeerConnection&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:()=>OrigPeerConnection.generateCertificate})}function shimTrackEventTransceiver(window){"object"==typeof window&&window.RTCTrackEvent&&"receiver"in window.RTCTrackEvent.prototype&&!("transceiver"in window.RTCTrackEvent.prototype)&&Object.defineProperty(window.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function shimCreateOfferLegacy(window){const origCreateOffer=window.RTCPeerConnection.prototype.createOffer;window.RTCPeerConnection.prototype.createOffer=function(offerOptions){if(offerOptions){void 0!==offerOptions.offerToReceiveAudio&&(offerOptions.offerToReceiveAudio=!!offerOptions.offerToReceiveAudio);const audioTransceiver=this.getTransceivers().find(transceiver=>"audio"===transceiver.receiver.track.kind);!1===offerOptions.offerToReceiveAudio&&audioTransceiver?"sendrecv"===audioTransceiver.direction?audioTransceiver.setDirection?audioTransceiver.setDirection("sendonly"):audioTransceiver.direction="sendonly":"recvonly"===audioTransceiver.direction&&(audioTransceiver.setDirection?audioTransceiver.setDirection("inactive"):audioTransceiver.direction="inactive"):!0!==offerOptions.offerToReceiveAudio||audioTransceiver||this.addTransceiver("audio"),void 0!==offerOptions.offerToReceiveVideo&&(offerOptions.offerToReceiveVideo=!!offerOptions.offerToReceiveVideo);const videoTransceiver=this.getTransceivers().find(transceiver=>"video"===transceiver.receiver.track.kind);!1===offerOptions.offerToReceiveVideo&&videoTransceiver?"sendrecv"===videoTransceiver.direction?videoTransceiver.setDirection?videoTransceiver.setDirection("sendonly"):videoTransceiver.direction="sendonly":"recvonly"===videoTransceiver.direction&&(videoTransceiver.setDirection?videoTransceiver.setDirection("inactive"):videoTransceiver.direction="inactive"):!0!==offerOptions.offerToReceiveVideo||videoTransceiver||this.addTransceiver("video")}return origCreateOffer.apply(this,arguments)}}var sdp=__webpack_require__(92),sdp_default=__webpack_require__.n(sdp);function shimRTCIceCandidate(window){if(!window.RTCIceCandidate||window.RTCIceCandidate&&"foundation"in window.RTCIceCandidate.prototype)return;const NativeRTCIceCandidate=window.RTCIceCandidate;window.RTCIceCandidate=function(args){if("object"==typeof args&&args.candidate&&0===args.candidate.indexOf("a=")&&((args=JSON.parse(JSON.stringify(args))).candidate=args.candidate.substr(2)),args.candidate&&args.candidate.length){const nativeCandidate=new NativeRTCIceCandidate(args),parsedCandidate=sdp_default.a.parseCandidate(args.candidate),augmentedCandidate=Object.assign(nativeCandidate,parsedCandidate);return augmentedCandidate.toJSON=function(){return{candidate:augmentedCandidate.candidate,sdpMid:augmentedCandidate.sdpMid,sdpMLineIndex:augmentedCandidate.sdpMLineIndex,usernameFragment:augmentedCandidate.usernameFragment}},augmentedCandidate}return new NativeRTCIceCandidate(args)},window.RTCIceCandidate.prototype=NativeRTCIceCandidate.prototype,wrapPeerConnectionEvent(window,"icecandidate",e=>(e.candidate&&Object.defineProperty(e,"candidate",{value:new window.RTCIceCandidate(e.candidate),writable:"false"}),e))}function shimMaxMessageSize(window){if(!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);"sctp"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"sctp",{get(){return void 0===this._sctp?null:this._sctp}});const sctpInDescription=function(description){if(!description||!description.sdp)return!1;const sections=sdp_default.a.splitSections(description.sdp);return sections.shift(),sections.some(mediaSection=>{const mLine=sdp_default.a.parseMLine(mediaSection);return mLine&&"application"===mLine.kind&&-1!==mLine.protocol.indexOf("SCTP")})},getRemoteFirefoxVersion=function(description){const match=description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);if(null===match||match.length<2)return-1;const version=parseInt(match[1],10);return version!=version?-1:version},getCanSendMaxMessageSize=function(remoteIsFirefox){let canSendMaxMessageSize=65536;return"firefox"===browserDetails.browser&&(canSendMaxMessageSize=browserDetails.version<57?-1===remoteIsFirefox?16384:2147483637:browserDetails.version<60?57===browserDetails.version?65535:65536:2147483637),canSendMaxMessageSize},getMaxMessageSize=function(description,remoteIsFirefox){let maxMessageSize=65536;"firefox"===browserDetails.browser&&57===browserDetails.version&&(maxMessageSize=65535);const match=sdp_default.a.matchPrefix(description.sdp,"a=max-message-size:");return match.length>0?maxMessageSize=parseInt(match[0].substr(19),10):"firefox"===browserDetails.browser&&-1!==remoteIsFirefox&&(maxMessageSize=2147483637),maxMessageSize},origSetRemoteDescription=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,"chrome"===browserDetails.browser&&browserDetails.version>=76){const{sdpSemantics:sdpSemantics}=this.getConfiguration();"plan-b"===sdpSemantics&&Object.defineProperty(this,"sctp",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(sctpInDescription(arguments[0])){const isFirefox=getRemoteFirefoxVersion(arguments[0]),canSendMMS=getCanSendMaxMessageSize(isFirefox),remoteMMS=getMaxMessageSize(arguments[0],isFirefox);let maxMessageSize;maxMessageSize=0===canSendMMS&&0===remoteMMS?Number.POSITIVE_INFINITY:0===canSendMMS||0===remoteMMS?Math.max(canSendMMS,remoteMMS):Math.min(canSendMMS,remoteMMS);const sctp={};Object.defineProperty(sctp,"maxMessageSize",{get:()=>maxMessageSize}),this._sctp=sctp}return origSetRemoteDescription.apply(this,arguments)}}function shimSendThrowTypeError(window){if(!window.RTCPeerConnection||!("createDataChannel"in window.RTCPeerConnection.prototype))return;function wrapDcSend(dc,pc){const origDataChannelSend=dc.send;dc.send=function(){const data=arguments[0],length=data.length||data.size||data.byteLength;if("open"===dc.readyState&&pc.sctp&&length>pc.sctp.maxMessageSize)throw new TypeError("Message too large (can send a maximum of "+pc.sctp.maxMessageSize+" bytes)");return origDataChannelSend.apply(dc,arguments)}}const origCreateDataChannel=window.RTCPeerConnection.prototype.createDataChannel;window.RTCPeerConnection.prototype.createDataChannel=function(){const dataChannel=origCreateDataChannel.apply(this,arguments);return wrapDcSend(dataChannel,this),dataChannel},wrapPeerConnectionEvent(window,"datachannel",e=>(wrapDcSend(e.channel,e.target),e))}function shimConnectionState(window){if(!window.RTCPeerConnection||"connectionState"in window.RTCPeerConnection.prototype)return;const proto=window.RTCPeerConnection.prototype;Object.defineProperty(proto,"connectionState",{get(){return{completed:"connected",checking:"connecting"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(proto,"onconnectionstatechange",{get(){return this._onconnectionstatechange||null},set(cb){this._onconnectionstatechange&&(this.removeEventListener("connectionstatechange",this._onconnectionstatechange),delete this._onconnectionstatechange),cb&&this.addEventListener("connectionstatechange",this._onconnectionstatechange=cb)},enumerable:!0,configurable:!0}),["setLocalDescription","setRemoteDescription"].forEach(method=>{const origMethod=proto[method];proto[method]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const pc=e.target;if(pc._lastConnectionState!==pc.connectionState){pc._lastConnectionState=pc.connectionState;const newEvent=new Event("connectionstatechange",e);pc.dispatchEvent(newEvent)}return e},this.addEventListener("iceconnectionstatechange",this._connectionstatechangepoly)),origMethod.apply(this,arguments)}})}function removeAllowExtmapMixed(window){if(!window.RTCPeerConnection)return;const browserDetails=detectBrowser(window);if("chrome"===browserDetails.browser&&browserDetails.version>=71)return;const nativeSRD=window.RTCPeerConnection.prototype.setRemoteDescription;window.RTCPeerConnection.prototype.setRemoteDescription=function(desc){return desc&&desc.sdp&&-1!==desc.sdp.indexOf("\na=extmap-allow-mixed")&&(desc.sdp=desc.sdp.split("\n").filter(line=>"a=extmap-allow-mixed"!==line.trim()).join("\n")),nativeSRD.apply(this,arguments)}}var adapter_core=function({window:window}={},options={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0}){const logging=log,browserDetails=detectBrowser(window),adapter={browserDetails:browserDetails,commonShim:common_shim_namespaceObject,extractVersion:extractVersion,disableLog:disableLog,disableWarnings:disableWarnings};switch(browserDetails.browser){case"chrome":if(!chrome_shim_namespaceObject||!shimPeerConnection||!options.shimChrome)return logging("Chrome shim is not included in this adapter release."),adapter;logging("adapter.js shimming chrome."),adapter.browserShim=chrome_shim_namespaceObject,shimGetUserMedia(window),shimMediaStream(window),shimPeerConnection(window),shimOnTrack(window),shimAddTrackRemoveTrack(window),shimGetSendersWithDtmf(window),shimGetStats(window),shimSenderReceiverGetStats(window),fixNegotiationNeeded(window),shimRTCIceCandidate(window),shimConnectionState(window),shimMaxMessageSize(window),shimSendThrowTypeError(window),removeAllowExtmapMixed(window);break;case"firefox":if(!firefox_shim_namespaceObject||!firefox_shim_shimPeerConnection||!options.shimFirefox)return logging("Firefox shim is not included in this adapter release."),adapter;logging("adapter.js shimming firefox."),adapter.browserShim=firefox_shim_namespaceObject,firefox_getusermedia_shimGetUserMedia(window),firefox_shim_shimPeerConnection(window),firefox_shim_shimOnTrack(window),shimRemoveStream(window),shimSenderGetStats(window),shimReceiverGetStats(window),shimRTCDataChannel(window),shimAddTransceiver(window),shimCreateOffer(window),shimCreateAnswer(window),shimRTCIceCandidate(window),shimConnectionState(window),shimMaxMessageSize(window),shimSendThrowTypeError(window);break;case"edge":if(!edge_shim_namespaceObject||!edge_shim_shimPeerConnection||!options.shimEdge)return logging("MS edge shim is not included in this adapter release."),adapter;logging("adapter.js shimming edge."),adapter.browserShim=edge_shim_namespaceObject,getusermedia_shimGetUserMedia(window),getdisplaymedia_shimGetDisplayMedia(window),edge_shim_shimPeerConnection(window),shimReplaceTrack(window),shimMaxMessageSize(window),shimSendThrowTypeError(window);break;case"safari":if(!safari_shim_namespaceObject||!options.shimSafari)return logging("Safari shim is not included in this adapter release."),adapter;logging("adapter.js shimming safari."),adapter.browserShim=safari_shim_namespaceObject,shimRTCIceServerUrls(window),shimCreateOfferLegacy(window),shimCallbacksAPI(window),shimLocalStreamsAPI(window),shimRemoteStreamsAPI(window),shimTrackEventTransceiver(window),safari_shim_shimGetUserMedia(window),shimRTCIceCandidate(window),shimMaxMessageSize(window),shimSendThrowTypeError(window),removeAllowExtmapMixed(window);break;default:logging("Unsupported browser!")}return adapter}({window:window}),connectionService=__webpack_require__(346),configService=__webpack_require__(347),presenceService=__webpack_require__(348),userProfileService=__webpack_require__(349),contactsService=__webpack_require__(350),pbxService=__webpack_require__(351),conversationsService=__webpack_require__(352),imService=__webpack_require__(353),webRTCService=__webpack_require__(354),bubblesService=__webpack_require__(355),conferencesService=__webpack_require__(356),groupsService=__webpack_require__(357),callsLogService=__webpack_require__(358),favoritesService=__webpack_require__(359),filesStorageService=__webpack_require__(360),capabilitiesService=__webpack_require__(361),adminService=__webpack_require__(362),channelsService=__webpack_require__(363),sdkConstant=__webpack_require__(39),call_model=__webpack_require__(29),sdkService=__webpack_require__(364);__webpack_require__(365),__webpack_require__(366),__webpack_require__(367),__webpack_require__(103),__webpack_require__(155),window.adapter=adapter_core_namespaceObject,window.emojione=null,__webpack_require__(368),__webpack_require__(369),__webpack_require__(470),__webpack_require__(39),__webpack_require__(471),__webpack_require__(103),angular.module("sdk").service("connectionService",connectionService.ConnectionService),angular.module("sdk").service("configService",configService.ConfigService),angular.module("sdk").service("presenceService",presenceService.PresenceService),angular.module("sdk").service("userProfileService",userProfileService.UserProfileService),angular.module("sdk").service("contactsService",contactsService.ContactsService),angular.module("sdk").service("pbxService",pbxService.PbxService),angular.module("sdk").service("conversationsService",conversationsService.ConversationsService),angular.module("sdk").service("imService",imService.ImService),angular.module("sdk").service("webRTCService",webRTCService.WebRTCService),angular.module("sdk").service("bubblesService",bubblesService.BubblesService),angular.module("sdk").service("conferencesService",conferencesService.ConferencesService),angular.module("sdk").service("groupsService",groupsService.GroupsService),angular.module("sdk").service("callsLogService",callsLogService.CallsLogService),angular.module("sdk").service("favoritesService",favoritesService.FavoritesService),angular.module("sdk").service("filesStorageService",filesStorageService.FilesStorageService),angular.module("sdk").service("capabilitiesService",capabilitiesService.CapabilitiesService),angular.module("sdk").service("sdkAdminService",adminService.SdkAdminService),angular.module("sdk").service("channelsService",channelsService.ChannelsService),angular.module("sdk").service("rainbowSDK",sdkService.SdkService),angular.module("sdk")||angular.bootstrap(document,["sdk"]).get("rainbowSDK"),__webpack_require__(508),__webpack_require__(332),__webpack_require__(333),__webpack_require__(336),__webpack_require__(337),__webpack_require__(338),__webpack_require__(334),__webpack_require__(335),__webpack_require__(339),__webpack_require__(509);const rainbowSDK=angular.injector(["sdk"]).get("rainbowSDK");rainbowSDK.Call=call_model.Call,rainbowSDK.SDK=sdkConstant.SDK;__webpack_exports__.default=rainbowSDK}]);export default rainbowSDK.default;